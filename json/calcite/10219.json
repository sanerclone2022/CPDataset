[{"authorTime":"2020-07-20 08:23:08","codes":[{"authorDate":"2020-07-20 08:23:08","commitOrder":2,"curCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      public Enumerator<Object> enumerator() {\n        return new CsvEnumerator<>(\n            source,\n            cancelFlag,\n            getFieldTypes(root.getTypeFactory()),\n            ImmutableIntList.of(fields));\n      }\n    };\n  }\n","date":"2020-07-29 03:09:43","endLine":68,"groupId":"16257","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"project","params":"(finalDataContextroot@finalint[]fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e1/83200e2267b5f25ee9c457bc1d679572eb4114.src","preCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      public Enumerator<Object> enumerator() {\n        return new CsvEnumerator<>(\n            source,\n            cancelFlag,\n            getFieldTypes(root.getTypeFactory()),\n            ImmutableIntList.of(fields));\n      }\n    };\n  }\n","realPath":"example/csv/src/main/java/org/apache/calcite/adapter/csv/CsvTranslatableTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"MB"},{"authorDate":"2020-07-20 08:23:08","commitOrder":2,"curCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      public Enumerator<Object> enumerator() {\n        return new CsvEnumerator<>(source, cancelFlag,\n            getFieldTypes(root.getTypeFactory()), ImmutableIntList.of(fields));\n      }\n    };\n  }\n","date":"2020-07-29 03:09:43","endLine":67,"groupId":"16257","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"project","params":"(finalDataContextroot@finalint[]fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/9f/86c539432456082695c5842783364985aee0cc.src","preCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      public Enumerator<Object> enumerator() {\n        return new CsvEnumerator<>(source, cancelFlag,\n            getFieldTypes(root.getTypeFactory()), ImmutableIntList.of(fields));\n      }\n    };\n  }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/CsvTranslatableTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"}],"commitId":"9b678f1d7ffe030711d86f475c3a9e9e95bacb8f","commitMessage":"@@@[CALCITE-4128] Remove dependency of File adapter on Example CSV adapter\n\nMove some classes from 'example/csv' to 'file'.  and make CSV adapter\ndepend on File adapter. Copy some other classes (so that we can keep the\n'example/csv' versions simple.  and add functionality to the 'file'\nadapter).\n\nRename SqlTest to FileAdapterTest.  factor utility methods into\nFileAdapterTests.  and copy in a bunch of tests from example/csv/.../CsvTest.\n","date":"2020-07-29 03:09:43","modifiedFileCount":"10","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":3,"curCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      @Override public Enumerator<Object> enumerator() {\n        return new CsvEnumerator<>(\n            source,\n            cancelFlag,\n            getFieldTypes(root.getTypeFactory()),\n            ImmutableIntList.of(fields));\n      }\n    };\n  }\n","date":"2020-10-07 05:42:47","endLine":68,"groupId":"8904","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"project","params":"(finalDataContextroot@finalint[]fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/70/3c00faee0b3e63f6786bc6bb21da16959f5752.src","preCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      public Enumerator<Object> enumerator() {\n        return new CsvEnumerator<>(\n            source,\n            cancelFlag,\n            getFieldTypes(root.getTypeFactory()),\n            ImmutableIntList.of(fields));\n      }\n    };\n  }\n","realPath":"example/csv/src/main/java/org/apache/calcite/adapter/csv/CsvTranslatableTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":3,"curCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      @Override public Enumerator<Object> enumerator() {\n        return new CsvEnumerator<>(source, cancelFlag,\n            getFieldTypes(root.getTypeFactory()), ImmutableIntList.of(fields));\n      }\n    };\n  }\n","date":"2020-10-07 05:42:47","endLine":67,"groupId":"8904","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"project","params":"(finalDataContextroot@finalint[]fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/21/75f2d332e4ed816d1b267632d00e546c0b6168.src","preCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      public Enumerator<Object> enumerator() {\n        return new CsvEnumerator<>(source, cancelFlag,\n            getFieldTypes(root.getTypeFactory()), ImmutableIntList.of(fields));\n      }\n    };\n  }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/CsvTranslatableTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      @Override public Enumerator<Object> enumerator() {\n        JavaTypeFactory typeFactory = requireNonNull(root.getTypeFactory(), \"root.getTypeFactory\");\n        return new CsvEnumerator<>(\n            source,\n            cancelFlag,\n            getFieldTypes(typeFactory),\n            ImmutableIntList.of(fields));\n      }\n    };\n  }\n","date":"2020-11-30 06:45:33","endLine":72,"groupId":"8904","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"project","params":"(finalDataContextroot@finalint[]fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c8/3125c851dd3e576da91a2c4f4379c686fc7772.src","preCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      @Override public Enumerator<Object> enumerator() {\n        return new CsvEnumerator<>(\n            source,\n            cancelFlag,\n            getFieldTypes(root.getTypeFactory()),\n            ImmutableIntList.of(fields));\n      }\n    };\n  }\n","realPath":"example/csv/src/main/java/org/apache/calcite/adapter/csv/CsvTranslatableTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      @Override public Enumerator<Object> enumerator() {\n        JavaTypeFactory typeFactory = requireNonNull(root.getTypeFactory(), \"root.getTypeFactory\");\n        return new CsvEnumerator<>(source, cancelFlag,\n            getFieldTypes(typeFactory), ImmutableIntList.of(fields));\n      }\n    };\n  }\n","date":"2020-11-30 06:45:33","endLine":71,"groupId":"8904","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"project","params":"(finalDataContextroot@finalint[]fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c5/64df775c427c0323862d704392904d3c1f15be.src","preCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      @Override public Enumerator<Object> enumerator() {\n        return new CsvEnumerator<>(source, cancelFlag,\n            getFieldTypes(root.getTypeFactory()), ImmutableIntList.of(fields));\n      }\n    };\n  }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/CsvTranslatableTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2021-03-06 01:37:57","codes":[{"authorDate":"2021-03-06 01:37:57","commitOrder":5,"curCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      @Override public Enumerator<Object> enumerator() {\n        JavaTypeFactory typeFactory = root.getTypeFactory();\n        return new CsvEnumerator<>(\n            source,\n            cancelFlag,\n            getFieldTypes(typeFactory),\n            ImmutableIntList.of(fields));\n      }\n    };\n  }\n","date":"2021-03-13 15:05:43","endLine":70,"groupId":"10219","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"project","params":"(finalDataContextroot@finalint[]fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/51/cc683dc451297dce8098b5c304412e3699838d.src","preCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      @Override public Enumerator<Object> enumerator() {\n        JavaTypeFactory typeFactory = requireNonNull(root.getTypeFactory(), \"root.getTypeFactory\");\n        return new CsvEnumerator<>(\n            source,\n            cancelFlag,\n            getFieldTypes(typeFactory),\n            ImmutableIntList.of(fields));\n      }\n    };\n  }\n","realPath":"example/csv/src/main/java/org/apache/calcite/adapter/csv/CsvTranslatableTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-03-06 01:37:57","commitOrder":5,"curCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      @Override public Enumerator<Object> enumerator() {\n        JavaTypeFactory typeFactory = root.getTypeFactory();\n        return new CsvEnumerator<>(source, cancelFlag,\n            getFieldTypes(typeFactory), ImmutableIntList.of(fields));\n      }\n    };\n  }\n","date":"2021-03-13 15:05:43","endLine":69,"groupId":"10219","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"project","params":"(finalDataContextroot@finalint[]fields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e9/27a586e075bff63ae6f5371be36fdc3fada7ba.src","preCode":"  public Enumerable<Object> project(final DataContext root,\n      final int[] fields) {\n    final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root);\n    return new AbstractEnumerable<Object>() {\n      @Override public Enumerator<Object> enumerator() {\n        JavaTypeFactory typeFactory = requireNonNull(root.getTypeFactory(), \"root.getTypeFactory\");\n        return new CsvEnumerator<>(source, cancelFlag,\n            getFieldTypes(typeFactory), ImmutableIntList.of(fields));\n      }\n    };\n  }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/CsvTranslatableTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"93a2263f7af23be34171a6a1e4f5864a85691650","commitMessage":"@@@[CALCITE-4524] Make some fields non-nullable (SqlSelect.selectList.  DataContext.getTypeFactory)\n\nIn order to make SqlSelect.selectList non-nullable.  we had to\nchange the flow in RelToSqlConverter.  where selectList was\ninitially null; now we set it to SqlNodeList.SINGLETON_STAR.\n\nAdd class DataContexts.  with a few useful implementations of\ninterface DataContext. Phase out Schemas.createDataContext.\n\nResolve some other TODOs relating to nullability.\n","date":"2021-03-13 15:05:43","modifiedFileCount":"42","status":"M","submitter":"Julian Hyde"}]
