[{"authorTime":"2018-11-10 00:39:20","codes":[{"authorDate":"2018-11-10 00:39:20","commitOrder":1,"curCode":"  @Override public void unparse(SqlWriter writer, SqlCall call, int leftPrec, int rightPrec) {\n    assert call.operandCount() == 1;\n    final SqlWriter.Frame frame = writer.startFunCall(\"JSON_ARRAYAGG\");\n    call.operand(0).unparse(writer, leftPrec, rightPrec);\n    switch (nullClause) {\n    case ABSENT_ON_NULL:\n      writer.keyword(\"ABSENT ON NULL\");\n      break;\n    case NULL_ON_NULL:\n      writer.keyword(\"NULL ON NULL\");\n      break;\n    default:\n      throw new IllegalStateException(\"unreachable code\");\n    }\n    writer.endFunCall(frame);\n  }\n","date":"2018-11-10 00:39:58","endLine":68,"groupId":"118","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"unparse","params":"(SqlWriterwriter@SqlCallcall@intleftPrec@intrightPrec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/4c/dfea1c49b5399933275ca79454f3d0d6cc28aa.src","preCode":"  @Override public void unparse(SqlWriter writer, SqlCall call, int leftPrec, int rightPrec) {\n    assert call.operandCount() == 1;\n    final SqlWriter.Frame frame = writer.startFunCall(\"JSON_ARRAYAGG\");\n    call.operand(0).unparse(writer, leftPrec, rightPrec);\n    switch (nullClause) {\n    case ABSENT_ON_NULL:\n      writer.keyword(\"ABSENT ON NULL\");\n      break;\n    case NULL_ON_NULL:\n      writer.keyword(\"NULL ON NULL\");\n      break;\n    default:\n      throw new IllegalStateException(\"unreachable code\");\n    }\n    writer.endFunCall(frame);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlJsonArrayAggAggFunction.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2018-11-10 00:39:20","commitOrder":1,"curCode":"  @Override public void unparse(SqlWriter writer, SqlCall call, int leftPrec, int rightPrec) {\n    assert call.operandCount() == 2;\n    final SqlWriter.Frame frame = writer.startFunCall(\"JSON_OBJECTAGG\");\n    writer.keyword(\"KEY\");\n    call.operand(0).unparse(writer, leftPrec, rightPrec);\n    writer.keyword(\"VALUE\");\n    call.operand(1).unparse(writer, leftPrec, rightPrec);\n    switch (nullClause) {\n    case ABSENT_ON_NULL:\n      writer.keyword(\"ABSENT ON NULL\");\n      break;\n    case NULL_ON_NULL:\n      writer.keyword(\"NULL ON NULL\");\n      break;\n    default:\n      throw new IllegalStateException(\"unreachable code\");\n    }\n    writer.endFunCall(frame);\n  }\n","date":"2018-11-10 00:39:58","endLine":72,"groupId":"118","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"unparse","params":"(SqlWriterwriter@SqlCallcall@intleftPrec@intrightPrec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/91/9abe92b8ea320b46ec98dd5548918445ed9166.src","preCode":"  @Override public void unparse(SqlWriter writer, SqlCall call, int leftPrec, int rightPrec) {\n    assert call.operandCount() == 2;\n    final SqlWriter.Frame frame = writer.startFunCall(\"JSON_OBJECTAGG\");\n    writer.keyword(\"KEY\");\n    call.operand(0).unparse(writer, leftPrec, rightPrec);\n    writer.keyword(\"VALUE\");\n    call.operand(1).unparse(writer, leftPrec, rightPrec);\n    switch (nullClause) {\n    case ABSENT_ON_NULL:\n      writer.keyword(\"ABSENT ON NULL\");\n      break;\n    case NULL_ON_NULL:\n      writer.keyword(\"NULL ON NULL\");\n      break;\n    default:\n      throw new IllegalStateException(\"unreachable code\");\n    }\n    writer.endFunCall(frame);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlJsonObjectAggAggFunction.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"8e557d26cffceaf7d7f98d8f8bafd9fbe3bc2447","commitMessage":"@@@[CALCITE-2266] Implement SQL:2016 JSON functions: JSON_EXISTS.  JSON_VALUE.  JSON_QUERY.  JSON_OBJECT.  JSON_OBJECTAGG.  JSON_ARRAY.  JSON_ARRAYAGG.  IS JSON predicate (Hongze Zhang)\n\nClose apache/calcite#785\n","date":"2018-11-10 00:39:58","modifiedFileCount":"18","status":"B","submitter":"Michael Mior"},{"authorTime":"2018-11-14 19:48:49","codes":[{"authorDate":"2018-11-14 19:48:49","commitOrder":2,"curCode":"  @Override public void unparse(SqlWriter writer, SqlCall call, int leftPrec,\n      int rightPrec) {\n    assert call.operandCount() == 1;\n    final SqlWriter.Frame frame = writer.startFunCall(\"JSON_ARRAYAGG\");\n    call.operand(0).unparse(writer, leftPrec, rightPrec);\n    writer.keyword(nullClause.sql);\n    writer.endFunCall(frame);\n  }\n","date":"2018-12-06 08:59:02","endLine":59,"groupId":"101767","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"unparse","params":"(SqlWriterwriter@SqlCallcall@intleftPrec@intrightPrec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a5/d152039f4de96c9abacb8d30b4bc8f51827921.src","preCode":"  @Override public void unparse(SqlWriter writer, SqlCall call, int leftPrec,\n      int rightPrec) {\n    assert call.operandCount() == 1;\n    final SqlWriter.Frame frame = writer.startFunCall(\"JSON_ARRAYAGG\");\n    call.operand(0).unparse(writer, leftPrec, rightPrec);\n    switch (nullClause) {\n    case ABSENT_ON_NULL:\n      writer.keyword(\"ABSENT ON NULL\");\n      break;\n    case NULL_ON_NULL:\n      writer.keyword(\"NULL ON NULL\");\n      break;\n    default:\n      throw new IllegalStateException(\"unreachable code\");\n    }\n    writer.endFunCall(frame);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlJsonArrayAggAggFunction.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2018-11-14 19:48:49","commitOrder":2,"curCode":"  @Override public void unparse(SqlWriter writer, SqlCall call, int leftPrec,\n      int rightPrec) {\n    assert call.operandCount() == 2;\n    final SqlWriter.Frame frame = writer.startFunCall(\"JSON_OBJECTAGG\");\n    writer.keyword(\"KEY\");\n    call.operand(0).unparse(writer, leftPrec, rightPrec);\n    writer.keyword(\"VALUE\");\n    call.operand(1).unparse(writer, leftPrec, rightPrec);\n    writer.keyword(nullClause.sql);\n    writer.endFunCall(frame);\n  }\n","date":"2018-12-06 08:59:02","endLine":63,"groupId":"101767","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"unparse","params":"(SqlWriterwriter@SqlCallcall@intleftPrec@intrightPrec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d8/b85c7c9d78cb127358e761dbd4a1042b59c3d1.src","preCode":"  @Override public void unparse(SqlWriter writer, SqlCall call, int leftPrec,\n      int rightPrec) {\n    assert call.operandCount() == 2;\n    final SqlWriter.Frame frame = writer.startFunCall(\"JSON_OBJECTAGG\");\n    writer.keyword(\"KEY\");\n    call.operand(0).unparse(writer, leftPrec, rightPrec);\n    writer.keyword(\"VALUE\");\n    call.operand(1).unparse(writer, leftPrec, rightPrec);\n    switch (nullClause) {\n    case ABSENT_ON_NULL:\n      writer.keyword(\"ABSENT ON NULL\");\n      break;\n    case NULL_ON_NULL:\n      writer.keyword(\"NULL ON NULL\");\n      break;\n    default:\n      throw new IllegalStateException(\"unreachable code\");\n    }\n    writer.endFunCall(frame);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlJsonObjectAggAggFunction.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"f3655e15a11a9fb266af290cb390e690d4301c09","commitMessage":"@@@[CALCITE-2670] Combine similar JSON aggregate functions in operator table\n\nConvert parameters from Enum to more specific types;\ninclude varying flag values in JSON aggregate functions.\n\nSome cosmetic stuff.\n\nClose apache/calcite#916\n","date":"2018-12-06 08:59:02","modifiedFileCount":"18","status":"M","submitter":"hongzezhang"}]
