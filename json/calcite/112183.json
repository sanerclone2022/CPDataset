[{"authorTime":"2020-09-13 05:06:30","codes":[{"authorDate":"2020-09-13 05:06:30","commitOrder":1,"curCode":"  public static <K, V> Map<K, V> copyOf(Map<? extends K, ? extends V> map) {\n    if (map instanceof ImmutableNullableMap\n        || map instanceof ImmutableMap\n        || map == Collections.emptyMap()\n        || map == Collections.emptyNavigableMap()\n        || map.getClass() == SINGLETON_MAP.getClass()) {\n      return (Map<K, V>) map;\n    }\n    if (map instanceof SortedMap) {\n      final SortedMap<K, V> sortedMap = (SortedMap) map;\n      try {\n        return ImmutableSortedMap.copyOf(sortedMap, sortedMap.comparator());\n      } catch (NullPointerException e) {\n        \r\n        \r\n        \r\n        \r\n        return Collections.unmodifiableNavigableMap(new TreeMap<>(sortedMap));\n      }\n    } else {\n      try {\n        return ImmutableMap.copyOf(map);\n      } catch (NullPointerException e) {\n        \r\n        \r\n        \r\n        \r\n        return Collections.unmodifiableMap(new HashMap<>(map));\n      }\n    }\n  }\n","date":"2020-09-18 10:48:10","endLine":82,"groupId":"927","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"copyOf","params":"(Map<?extendsK@?extendsV>map)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c3/5684ae729b23bd73f5327fdc1a28dd2b6bd3a6.src","preCode":"  public static <K, V> Map<K, V> copyOf(Map<? extends K, ? extends V> map) {\n    if (map instanceof ImmutableNullableMap\n        || map instanceof ImmutableMap\n        || map == Collections.emptyMap()\n        || map == Collections.emptyNavigableMap()\n        || map.getClass() == SINGLETON_MAP.getClass()) {\n      return (Map<K, V>) map;\n    }\n    if (map instanceof SortedMap) {\n      final SortedMap<K, V> sortedMap = (SortedMap) map;\n      try {\n        return ImmutableSortedMap.copyOf(sortedMap, sortedMap.comparator());\n      } catch (NullPointerException e) {\n        \r\n        \r\n        \r\n        \r\n        return Collections.unmodifiableNavigableMap(new TreeMap<>(sortedMap));\n      }\n    } else {\n      try {\n        return ImmutableMap.copyOf(map);\n      } catch (NullPointerException e) {\n        \r\n        \r\n        \r\n        \r\n        return Collections.unmodifiableMap(new HashMap<>(map));\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/util/ImmutableNullableMap.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2020-09-13 05:06:30","commitOrder":1,"curCode":"  public static <K, V> Map<K, V> copyOf(\n      SortedMap<? extends K, ? extends V> map) {\n    if (map instanceof ImmutableNullableMap\n        || map instanceof ImmutableMap\n        || map == Collections.emptyMap()\n        || map == Collections.emptyNavigableMap()) {\n      return (Map<K, V>) map;\n    }\n    final SortedMap<K, V> sortedMap = (SortedMap) map;\n    try {\n      return ImmutableSortedMap.copyOf(sortedMap, sortedMap.comparator());\n    } catch (NullPointerException e) {\n      \r\n      \r\n      \r\n      \r\n      return Collections.unmodifiableNavigableMap(new TreeMap<>(sortedMap));\n    }\n  }\n","date":"2020-09-18 10:48:10","endLine":109,"groupId":"927","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"copyOf","params":"(SortedMap<?extendsK@?extendsV>map)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c3/5684ae729b23bd73f5327fdc1a28dd2b6bd3a6.src","preCode":"  public static <K, V> Map<K, V> copyOf(\n      SortedMap<? extends K, ? extends V> map) {\n    if (map instanceof ImmutableNullableMap\n        || map instanceof ImmutableMap\n        || map == Collections.emptyMap()\n        || map == Collections.emptyNavigableMap()) {\n      return (Map<K, V>) map;\n    }\n    final SortedMap<K, V> sortedMap = (SortedMap) map;\n    try {\n      return ImmutableSortedMap.copyOf(sortedMap, sortedMap.comparator());\n    } catch (NullPointerException e) {\n      \r\n      \r\n      \r\n      \r\n      return Collections.unmodifiableNavigableMap(new TreeMap<>(sortedMap));\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/util/ImmutableNullableMap.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"5419f12f48399b0311071aca8d89762d8dad4929","commitMessage":"@@@[CALCITE-4254] ImmutableBeans should make an immutable copy of property values of type List.  Set or Map\n\nAdd class ImmutableNullableSet.\n","date":"2020-09-18 10:48:10","modifiedFileCount":"5","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"  public static <K, V> Map<K, V> copyOf(Map<? extends K, ? extends V> map) {\n    if (map instanceof ImmutableNullableMap\n        || map instanceof ImmutableMap\n        || map == Collections.emptyMap()\n        || map == Collections.emptyNavigableMap()\n        || map.getClass() == SINGLETON_MAP.getClass()) {\n      return (Map<K, V>) map;\n    }\n    if (map instanceof SortedMap) {\n      final SortedMap<K, V> sortedMap = (SortedMap) map;\n      try {\n        Comparator<? super K> comparator = sortedMap.comparator();\n        if (comparator == null) {\n          return ImmutableSortedMap.copyOf(sortedMap);\n        } else {\n          return ImmutableSortedMap.copyOf(sortedMap, comparator);\n        }\n      } catch (NullPointerException e) {\n        \r\n        \r\n        \r\n        \r\n        return Collections.unmodifiableNavigableMap(new TreeMap<>(sortedMap));\n      }\n    } else {\n      try {\n        return ImmutableMap.copyOf(map);\n      } catch (NullPointerException e) {\n        \r\n        \r\n        \r\n        \r\n        return Collections.unmodifiableMap(new HashMap<>(map));\n      }\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":88,"groupId":"112183","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"copyOf","params":"(Map<?extendsK@?extendsV>map)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/94/f731e7ba25605b6e0bd50526a990962b084980.src","preCode":"  public static <K, V> Map<K, V> copyOf(Map<? extends K, ? extends V> map) {\n    if (map instanceof ImmutableNullableMap\n        || map instanceof ImmutableMap\n        || map == Collections.emptyMap()\n        || map == Collections.emptyNavigableMap()\n        || map.getClass() == SINGLETON_MAP.getClass()) {\n      return (Map<K, V>) map;\n    }\n    if (map instanceof SortedMap) {\n      final SortedMap<K, V> sortedMap = (SortedMap) map;\n      try {\n        return ImmutableSortedMap.copyOf(sortedMap, sortedMap.comparator());\n      } catch (NullPointerException e) {\n        \r\n        \r\n        \r\n        \r\n        return Collections.unmodifiableNavigableMap(new TreeMap<>(sortedMap));\n      }\n    } else {\n      try {\n        return ImmutableMap.copyOf(map);\n      } catch (NullPointerException e) {\n        \r\n        \r\n        \r\n        \r\n        return Collections.unmodifiableMap(new HashMap<>(map));\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/util/ImmutableNullableMap.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"  public static <K, V> Map<K, V> copyOf(\n      SortedMap<? extends K, ? extends V> map) {\n    if (map instanceof ImmutableNullableMap\n        || map instanceof ImmutableMap\n        || map == Collections.emptyMap()\n        || map == Collections.emptyNavigableMap()) {\n      return (Map<K, V>) map;\n    }\n    final SortedMap<K, V> sortedMap = (SortedMap) map;\n    try {\n      Comparator<? super K> comparator = sortedMap.comparator();\n      if (comparator == null) {\n        return ImmutableSortedMap.copyOf(sortedMap);\n      } else {\n        return ImmutableSortedMap.copyOf(sortedMap, comparator);\n      }\n    } catch (NullPointerException e) {\n      \r\n      \r\n      \r\n      \r\n      return Collections.unmodifiableNavigableMap(new TreeMap<>(sortedMap));\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":120,"groupId":"112183","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"copyOf","params":"(SortedMap<?extendsK@?extendsV>map)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/94/f731e7ba25605b6e0bd50526a990962b084980.src","preCode":"  public static <K, V> Map<K, V> copyOf(\n      SortedMap<? extends K, ? extends V> map) {\n    if (map instanceof ImmutableNullableMap\n        || map instanceof ImmutableMap\n        || map == Collections.emptyMap()\n        || map == Collections.emptyNavigableMap()) {\n      return (Map<K, V>) map;\n    }\n    final SortedMap<K, V> sortedMap = (SortedMap) map;\n    try {\n      return ImmutableSortedMap.copyOf(sortedMap, sortedMap.comparator());\n    } catch (NullPointerException e) {\n      \r\n      \r\n      \r\n      \r\n      return Collections.unmodifiableNavigableMap(new TreeMap<>(sortedMap));\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/util/ImmutableNullableMap.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
