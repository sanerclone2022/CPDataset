[{"authorTime":"2018-01-11 02:10:44","codes":[{"authorDate":"2018-01-11 02:10:44","commitOrder":1,"curCode":"    public void write(JsonGenerator generator) throws IOException {\n      generator.writeStartObject();\n      generator.writeStringField(\"type\", type.lowercase());\n      generator.writeStringField(\"dimension\", dimension);\n      generator.writeStringField(\"value\", value);\n      DruidQuery.writeFieldIf(generator, \"extractionFn\", extractionFunction);\n      generator.writeEndObject();\n    }\n","date":"2018-02-17 11:35:34","endLine":501,"groupId":"1285","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"write","params":"(JsonGeneratorgenerator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/11/ec2be1d7debd7596ea2080224283354b15b756.src","preCode":"    public void write(JsonGenerator generator) throws IOException {\n      generator.writeStartObject();\n      generator.writeStringField(\"type\", type.lowercase());\n      generator.writeStringField(\"dimension\", dimension);\n      generator.writeStringField(\"value\", value);\n      DruidQuery.writeFieldIf(generator, \"extractionFn\", extractionFunction);\n      generator.writeEndObject();\n    }\n","realPath":"druid/src/main/java/org/apache/calcite/adapter/druid/DruidJsonFilter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":494,"status":"B"},{"authorDate":"2018-01-11 02:10:44","commitOrder":1,"curCode":"    public void write(JsonGenerator generator) throws IOException {\n      generator.writeStartObject();\n      generator.writeStringField(\"type\", type.lowercase());\n      generator.writeStringField(\"dimension\", dimension);\n      if (lower != null) {\n        generator.writeStringField(\"lower\", lower);\n        generator.writeBooleanField(\"lowerStrict\", lowerStrict);\n      }\n      if (upper != null) {\n        generator.writeStringField(\"upper\", upper);\n        generator.writeBooleanField(\"upperStrict\", upperStrict);\n      }\n      if (alphaNumeric) {\n        generator.writeStringField(\"ordering\", \"numeric\");\n      } else {\n        generator.writeStringField(\"ordering\", \"lexicographic\");\n      }\n      DruidQuery.writeFieldIf(generator, \"extractionFn\", extractionFunction);\n      generator.writeEndObject();\n    }\n","date":"2018-02-17 11:35:34","endLine":555,"groupId":"12240","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(JsonGeneratorgenerator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/11/ec2be1d7debd7596ea2080224283354b15b756.src","preCode":"    public void write(JsonGenerator generator) throws IOException {\n      generator.writeStartObject();\n      generator.writeStringField(\"type\", type.lowercase());\n      generator.writeStringField(\"dimension\", dimension);\n      if (lower != null) {\n        generator.writeStringField(\"lower\", lower);\n        generator.writeBooleanField(\"lowerStrict\", lowerStrict);\n      }\n      if (upper != null) {\n        generator.writeStringField(\"upper\", upper);\n        generator.writeBooleanField(\"upperStrict\", upperStrict);\n      }\n      if (alphaNumeric) {\n        generator.writeStringField(\"ordering\", \"numeric\");\n      } else {\n        generator.writeStringField(\"ordering\", \"lexicographic\");\n      }\n      DruidQuery.writeFieldIf(generator, \"extractionFn\", extractionFunction);\n      generator.writeEndObject();\n    }\n","realPath":"druid/src/main/java/org/apache/calcite/adapter/druid/DruidJsonFilter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":536,"status":"B"}],"commitId":"0e13a8a021b6bdfa64967b5640dc8b970c11883a","commitMessage":"@@@[CALCITE-2170] Use Druid Expressions capabilities to improve the amount of work that can be pushed to Druid\n\nClose apache/calcite#624\n","date":"2018-02-17 11:35:34","modifiedFileCount":"14","status":"B","submitter":"Slim"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"    @Override public void write(JsonGenerator generator) throws IOException {\n      generator.writeStartObject();\n      generator.writeStringField(\"type\", type.lowercase());\n      generator.writeStringField(\"dimension\", dimension);\n      generator.writeStringField(\"value\", value);\n      DruidQuery.writeFieldIf(generator, \"extractionFn\", extractionFunction);\n      generator.writeEndObject();\n    }\n","date":"2020-10-07 05:42:47","endLine":519,"groupId":"11473","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"write","params":"(JsonGeneratorgenerator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/4d/d6b8c4f05ba2640da30aabdeb949c0406fd5b9.src","preCode":"    public void write(JsonGenerator generator) throws IOException {\n      generator.writeStartObject();\n      generator.writeStringField(\"type\", type.lowercase());\n      generator.writeStringField(\"dimension\", dimension);\n      generator.writeStringField(\"value\", value);\n      DruidQuery.writeFieldIf(generator, \"extractionFn\", extractionFunction);\n      generator.writeEndObject();\n    }\n","realPath":"druid/src/main/java/org/apache/calcite/adapter/druid/DruidJsonFilter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":512,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"    @Override public void write(JsonGenerator generator) throws IOException {\n      generator.writeStartObject();\n      generator.writeStringField(\"type\", type.lowercase());\n      generator.writeStringField(\"dimension\", dimension);\n      if (lower != null) {\n        generator.writeStringField(\"lower\", lower);\n        generator.writeBooleanField(\"lowerStrict\", lowerStrict);\n      }\n      if (upper != null) {\n        generator.writeStringField(\"upper\", upper);\n        generator.writeBooleanField(\"upperStrict\", upperStrict);\n      }\n      if (alphaNumeric) {\n        generator.writeStringField(\"ordering\", \"numeric\");\n      } else {\n        generator.writeStringField(\"ordering\", \"lexicographic\");\n      }\n      DruidQuery.writeFieldIf(generator, \"extractionFn\", extractionFunction);\n      generator.writeEndObject();\n    }\n","date":"2020-10-07 05:42:47","endLine":573,"groupId":"11473","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(JsonGeneratorgenerator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/4d/d6b8c4f05ba2640da30aabdeb949c0406fd5b9.src","preCode":"    public void write(JsonGenerator generator) throws IOException {\n      generator.writeStartObject();\n      generator.writeStringField(\"type\", type.lowercase());\n      generator.writeStringField(\"dimension\", dimension);\n      if (lower != null) {\n        generator.writeStringField(\"lower\", lower);\n        generator.writeBooleanField(\"lowerStrict\", lowerStrict);\n      }\n      if (upper != null) {\n        generator.writeStringField(\"upper\", upper);\n        generator.writeBooleanField(\"upperStrict\", upperStrict);\n      }\n      if (alphaNumeric) {\n        generator.writeStringField(\"ordering\", \"numeric\");\n      } else {\n        generator.writeStringField(\"ordering\", \"lexicographic\");\n      }\n      DruidQuery.writeFieldIf(generator, \"extractionFn\", extractionFunction);\n      generator.writeEndObject();\n    }\n","realPath":"druid/src/main/java/org/apache/calcite/adapter/druid/DruidJsonFilter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":554,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
