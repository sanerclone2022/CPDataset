[{"authorTime":"2015-09-14 18:31:53","codes":[{"authorDate":"2015-09-14 18:31:53","commitOrder":1,"curCode":"  @Test public void testLastWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.last(new Predicate1<String>() {\n      public boolean apply(String x) {\n        return x.startsWith(\"mit\");\n      }\n    }));\n    try {\n      enumerable.last(new Predicate1<String>() {\n        public boolean apply(String x) {\n          return false;\n        }\n      });\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    try {\n      emptyEnumerable.last(new Predicate1<String>() {\n        public boolean apply(String x) {\n          fail();\n          return false;\n        }\n      });\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n  }\n","date":"2015-09-18 13:45:02","endLine":1911,"groupId":"3820","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLastWithPredicate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0d/59b63fc06c67e362127760ce45737cea9c6df6.src","preCode":"  @Test public void testLastWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.last(new Predicate1<String>() {\n      public boolean apply(String x) {\n        return x.startsWith(\"mit\");\n      }\n    }));\n    try {\n      enumerable.last(new Predicate1<String>() {\n        public boolean apply(String x) {\n          return false;\n        }\n      });\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    try {\n      emptyEnumerable.last(new Predicate1<String>() {\n        public boolean apply(String x) {\n          fail();\n          return false;\n        }\n      });\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1879,"status":"B"},{"authorDate":"2015-09-14 18:31:53","commitOrder":1,"curCode":"  @Test public void testLastOrDefaultWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.lastOrDefault(new Predicate1<String>() {\n      public boolean apply(String x) {\n        return x.startsWith(\"mit\");\n      }\n    }));\n    assertNull(enumerable.lastOrDefault(new Predicate1<String>() {\n      public boolean apply(String x) {\n        return false;\n      }\n    }));\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    assertNull(emptyEnumerable.lastOrDefault(new Predicate1<String>() {\n      public boolean apply(String x) {\n        fail();\n        return false;\n      }\n    }));\n  }\n","date":"2015-09-18 13:45:02","endLine":1935,"groupId":"4095","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLastOrDefaultWithPredicate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0d/59b63fc06c67e362127760ce45737cea9c6df6.src","preCode":"  @Test public void testLastOrDefaultWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.lastOrDefault(new Predicate1<String>() {\n      public boolean apply(String x) {\n        return x.startsWith(\"mit\");\n      }\n    }));\n    assertNull(enumerable.lastOrDefault(new Predicate1<String>() {\n      public boolean apply(String x) {\n        return false;\n      }\n    }));\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    assertNull(emptyEnumerable.lastOrDefault(new Predicate1<String>() {\n      public boolean apply(String x) {\n        fail();\n        return false;\n      }\n    }));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1913,"status":"B"}],"commitId":"02cfd7fdacb2f43ed06f2ebb32cf3205ca26df95","commitMessage":"@@@Linq4j: Implement EnumerableDefaults methods (MiNG)\n\nMethods are:\n* \"defaultIfEmpty\"\n* \"elementAt\" and \"elementAtOrDefault\"\n* \"last\" and \"lastOrDefault\"\n* \"selectMany\"\n* \"sequenceEqual\"\n* \"groupBy\" and \"groupByK\"\n* \"groupJoin\"\n* \"toMap\"\n* \"zip\"\n\nFix up.  removing unnecessary @Override annotations and type\nparameters.  and some problems on JDK 1.7. (Julian Hyde)\n\nClose apache/incubator-calcite#132\n","date":"2015-09-18 13:45:02","modifiedFileCount":"10","status":"B","submitter":"MiNG"},{"authorTime":"2018-07-06 04:21:59","codes":[{"authorDate":"2018-07-06 04:21:59","commitOrder":2,"curCode":"  @Test public void testLastWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.last(x -> x.startsWith(\"mit\")));\n    try {\n      enumerable.last(x -> false);\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    try {\n      emptyEnumerable.last(x -> {\n        fail();\n        return false;\n      });\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n  }\n","date":"2018-07-09 01:16:26","endLine":1666,"groupId":"3820","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLastWithPredicate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8f/76c1b8c5bb03e8f260c0bd761a8f4eaac3702f.src","preCode":"  @Test public void testLastWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.last(new Predicate1<String>() {\n      public boolean apply(String x) {\n        return x.startsWith(\"mit\");\n      }\n    }));\n    try {\n      enumerable.last(new Predicate1<String>() {\n        public boolean apply(String x) {\n          return false;\n        }\n      });\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    try {\n      emptyEnumerable.last(new Predicate1<String>() {\n        public boolean apply(String x) {\n          fail();\n          return false;\n        }\n      });\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1644,"status":"M"},{"authorDate":"2018-07-06 04:21:59","commitOrder":2,"curCode":"  @Test public void testLastOrDefaultWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.lastOrDefault(x -> x.startsWith(\"mit\")));\n    assertNull(enumerable.lastOrDefault(x -> false));\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    assertNull(\n        emptyEnumerable.lastOrDefault(x -> {\n          fail();\n          return false;\n        }));\n  }\n","date":"2018-07-09 01:16:26","endLine":1681,"groupId":"10819","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLastOrDefaultWithPredicate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8f/76c1b8c5bb03e8f260c0bd761a8f4eaac3702f.src","preCode":"  @Test public void testLastOrDefaultWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.lastOrDefault(new Predicate1<String>() {\n      public boolean apply(String x) {\n        return x.startsWith(\"mit\");\n      }\n    }));\n    assertNull(enumerable.lastOrDefault(new Predicate1<String>() {\n      public boolean apply(String x) {\n        return false;\n      }\n    }));\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    assertNull(emptyEnumerable.lastOrDefault(new Predicate1<String>() {\n      public boolean apply(String x) {\n        fail();\n        return false;\n      }\n    }));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1668,"status":"M"}],"commitId":"d59b639d27da704f00eff616324a2c04aa06f84c","commitMessage":"@@@[CALCITE-2259] Allow Java 8 syntax\n\nIn summary: use lambdas where possible.  switch from Guava function\ntypes to Java function types or lambdas.  but continue to use Guava\ncomponents (such as immutable collections and cache) that have no\nequivalent in the Java runtime.\n\n1. Change single-abstract-method (SAM) classes to lambdas. Preserve\nformatting wherever possible.\n\n2. Change AssertQuery.returns argument type from Guava Function to Java\nConsumer. If you are using a lambda and see 'returns is deprecated'. \nremove the 'return null;' line.  and the lambda will become a Consumer\n(whose return is void).\n\n3. Change RelOptRuleOperand and RelOptRule.operand methods to take Java\nPredicate rather than Guava Predicate.\n\n4. Change the argument of Hook.add and .addThread from Guava Function to\nJava Consumer.\n\n5. Change 'list.toArray(new T[list.size()])' to 'list.toArray(new T[0])'\nbecause the latter is simpler.  and just as efficient on recent Java\nversions.\n\n6. Resource references; change \"try (Closeable ignore = foo())\" to \"try\n  (foo())\".  especially uses of TryThreadLocal and Hook.Closeable.\n\n7. Convert linq4j Function1 to java Function.  Function2 to java BiFunction\n\n8. Fix occurrences of Intellij's \"Explicit type can be replaced with\n<>\" inspection. (Occurs for \"List<String> list = new\nArrayList<String>();\".)\n\n9. Change Guava Preconditions.checkNotNull to Java\nObjects.requireNonNull. (Kevin Risden)\n\n10. Break out anonymous classes and fix dependency problems.\n\n11. Use CacheLoader.of(Function) where possible.\n\n12. Replace sub-classes of ThreadLocal with ThreadLocal.withInitial().\n\n13. Replace Guava collection methods with calls to Java collection types. \nfor example replace Lists.newArrayList() with new ArrayList<>(). \nMaps.newHashSet() with new HashSet<>().  similarly Sets.\n\n14. Replace Guava Joiner with String.join.\n\n15. Replace Collections.emptyList() with ImmutableList.of() in a few\nplaces.\n\nFor backwards compatibility.  we preserved (and deprecated) the old\nmethods that used Guava types. In a few cases where new and old have\nthe same signature (after erasure).  we could not add a method with the\nsame name.  so we gave the new method a \"J\" suffix. Examples include\nHook.property and .propertyJ.  RelOptRule.operand and .operandJ.\n\nIn test code.  we have not slavishly ensured backwards compatibility.\n\nWe do not intend to remove uses of Guava's immutable collections.\n\nWe have ignored Intellij's \"Pseudo functional style code\" inspection\nmost of the time.  but in a few cases have converted Lists.transform(). \nIterables.transform().  and Iterables.filter() into Java streams. Use\nthe Util.toImmutableList() collector if the result is to be an\nimmutable list. Use Util.transform() rather than Lists.transform()\nif you have a Java function rather than a Guava function or lambda.\n\nNot covered in this change (might be done in future):\n* Convert Collections.sort(list) to list.sort.\n* Review uses of 'for (Map.Entry<K.  V> e : map.entrySet())' and see\n  whether it makes sense to convert to 'map.forEach((k.  v) ->\n  ...)'. Intellij inspection is called 'Replace with Map.forEach'.\n\nBreaking changes:\n* LatticeStatisticProvider.Factory.  result of RexUtil.notFun().  and\n  arguments to Mappings.target() are Function (was Guava.  now Java)\n* Argument to SqlSpecialOperator.TokenSequence.parser() is Predicate\n  (was Guava.  now Java)\n* AggregateNode.AccumulatorFactory extends Supplier (was Guava.  now Java)\n","date":"2018-07-09 01:16:26","modifiedFileCount":"514","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testLastWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.last(x -> x.startsWith(\"mit\")));\n    try {\n      enumerable.last(x -> false);\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    try {\n      emptyEnumerable.last(x -> {\n        fail();\n        return false;\n      });\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n  }\n","date":"2020-04-06 04:57:49","endLine":1722,"groupId":"1063","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testLastWithPredicate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/99/176b0c20dace781059f888f45af815a228f4c7.src","preCode":"  @Test public void testLastWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.last(x -> x.startsWith(\"mit\")));\n    try {\n      enumerable.last(x -> false);\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    try {\n      emptyEnumerable.last(x -> {\n        fail();\n        return false;\n      });\n      fail();\n    } catch (Exception ignored) {\n      \r\n    }\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1700,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testLastOrDefaultWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.lastOrDefault(x -> x.startsWith(\"mit\")));\n    assertNull(enumerable.lastOrDefault(x -> false));\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    assertNull(\n        emptyEnumerable.lastOrDefault(x -> {\n          fail();\n          return false;\n        }));\n  }\n","date":"2020-04-06 04:57:49","endLine":1737,"groupId":"1063","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testLastOrDefaultWithPredicate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/99/176b0c20dace781059f888f45af815a228f4c7.src","preCode":"  @Test public void testLastOrDefaultWithPredicate() {\n    final Enumerable<String> enumerable =\n        Linq4j.asEnumerable(Arrays.asList(\"jimi\", \"mitch\", \"ming\"));\n    assertEquals(\"mitch\", enumerable.lastOrDefault(x -> x.startsWith(\"mit\")));\n    assertNull(enumerable.lastOrDefault(x -> false));\n\n    @SuppressWarnings(\"unchecked\")\n    final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Collections.EMPTY_LIST);\n    assertNull(\n        emptyEnumerable.lastOrDefault(x -> {\n          fail();\n          return false;\n        }));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1724,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
