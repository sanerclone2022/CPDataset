[{"authorTime":"2020-07-20 08:23:08","codes":[{"authorDate":"2020-07-20 08:23:08","commitOrder":1,"curCode":"    public Object[] convertNormalRow(String[] strings) {\n      final Object[] objects = new Object[fields.size()];\n      for (int i = 0; i < fields.size(); i++) {\n        int field = fields.get(i);\n        objects[i] = convert(fieldTypes.get(field), strings[field]);\n      }\n      return objects;\n    }\n","date":"2020-07-29 03:09:43","endLine":349,"groupId":"14285","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convertNormalRow","params":"(String[]strings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/09/1a4a18eeb716f60ca34e326bf9d33cc550d494.src","preCode":"    public Object[] convertNormalRow(String[] strings) {\n      final Object[] objects = new Object[fields.size()];\n      for (int i = 0; i < fields.size(); i++) {\n        int field = fields.get(i);\n        objects[i] = convert(fieldTypes.get(field), strings[field]);\n      }\n      return objects;\n    }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/CsvEnumerator.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":342,"status":"B"},{"authorDate":"2020-07-20 08:23:08","commitOrder":1,"curCode":"    public Object[] convertStreamRow(String[] strings) {\n      final Object[] objects = new Object[fields.size() + 1];\n      objects[0] = System.currentTimeMillis();\n      for (int i = 0; i < fields.size(); i++) {\n        int field = fields.get(i);\n        objects[i + 1] = convert(fieldTypes.get(field), strings[field]);\n      }\n      return objects;\n    }\n","date":"2020-07-29 03:09:43","endLine":359,"groupId":"12584","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convertStreamRow","params":"(String[]strings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/09/1a4a18eeb716f60ca34e326bf9d33cc550d494.src","preCode":"    public Object[] convertStreamRow(String[] strings) {\n      final Object[] objects = new Object[fields.size() + 1];\n      objects[0] = System.currentTimeMillis();\n      for (int i = 0; i < fields.size(); i++) {\n        int field = fields.get(i);\n        objects[i + 1] = convert(fieldTypes.get(field), strings[field]);\n      }\n      return objects;\n    }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/CsvEnumerator.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":351,"status":"B"}],"commitId":"9b678f1d7ffe030711d86f475c3a9e9e95bacb8f","commitMessage":"@@@[CALCITE-4128] Remove dependency of File adapter on Example CSV adapter\n\nMove some classes from 'example/csv' to 'file'.  and make CSV adapter\ndepend on File adapter. Copy some other classes (so that we can keep the\n'example/csv' versions simple.  and add functionality to the 'file'\nadapter).\n\nRename SqlTest to FileAdapterTest.  factor utility methods into\nFileAdapterTests.  and copy in a bunch of tests from example/csv/.../CsvTest.\n","date":"2020-07-29 03:09:43","modifiedFileCount":"10","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"    public @Nullable Object[] convertNormalRow(@Nullable String[] strings) {\n      final @Nullable Object[] objects = new Object[fields.size()];\n      for (int i = 0; i < fields.size(); i++) {\n        int field = fields.get(i);\n        objects[i] = convert(fieldTypes.get(field), strings[field]);\n      }\n      return objects;\n    }\n","date":"2020-11-30 06:45:33","endLine":354,"groupId":"10513","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"convertNormalRow","params":"(@NullableString[]strings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/65/37d87a3ae07f34966b0a117b231022906c9a22.src","preCode":"    public Object[] convertNormalRow(String[] strings) {\n      final Object[] objects = new Object[fields.size()];\n      for (int i = 0; i < fields.size(); i++) {\n        int field = fields.get(i);\n        objects[i] = convert(fieldTypes.get(field), strings[field]);\n      }\n      return objects;\n    }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/CsvEnumerator.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"    public @Nullable Object[] convertStreamRow(@Nullable String[] strings) {\n      final @Nullable Object[] objects = new Object[fields.size() + 1];\n      objects[0] = System.currentTimeMillis();\n      for (int i = 0; i < fields.size(); i++) {\n        int field = fields.get(i);\n        objects[i + 1] = convert(fieldTypes.get(field), strings[field]);\n      }\n      return objects;\n    }\n","date":"2020-11-30 06:45:33","endLine":364,"groupId":"10513","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"convertStreamRow","params":"(@NullableString[]strings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/65/37d87a3ae07f34966b0a117b231022906c9a22.src","preCode":"    public Object[] convertStreamRow(String[] strings) {\n      final Object[] objects = new Object[fields.size() + 1];\n      objects[0] = System.currentTimeMillis();\n      for (int i = 0; i < fields.size(); i++) {\n        int field = fields.get(i);\n        objects[i + 1] = convert(fieldTypes.get(field), strings[field]);\n      }\n      return objects;\n    }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/CsvEnumerator.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
