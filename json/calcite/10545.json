[{"authorTime":"2016-02-19 03:49:20","codes":[{"authorDate":"2016-11-03 13:30:04","commitOrder":2,"curCode":"    private String translateMatch2(RexNode node) {\n      \r\n      \r\n      switch (node.getKind()) {\n      case EQUALS:\n        return translateBinary(\"=\", \"=\", (RexCall) node);\n      case LESS_THAN:\n        return translateBinary(\"<\", \">\", (RexCall) node);\n      case LESS_THAN_OR_EQUAL:\n        return translateBinary(\"<=\", \">=\", (RexCall) node);\n      case GREATER_THAN:\n        return translateBinary(\">\", \"<\", (RexCall) node);\n      case GREATER_THAN_OR_EQUAL:\n        return translateBinary(\">=\", \"<=\", (RexCall) node);\n      default:\n        throw new AssertionError(\"cannot translate \" + node);\n      }\n    }\n","date":"2018-02-17 02:18:02","endLine":166,"groupId":"14733","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"translateMatch2","params":"(RexNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e4/e5ac9751d7cca1704277f1bff61eadde01da35.src","preCode":"    private String translateMatch2(RexNode node) {\n      \r\n      \r\n      switch (node.getKind()) {\n      case EQUALS:\n        return translateBinary(\"=\", \"=\", (RexCall) node);\n      case LESS_THAN:\n        return translateBinary(\"<\", \">\", (RexCall) node);\n      case LESS_THAN_OR_EQUAL:\n        return translateBinary(\"<=\", \">=\", (RexCall) node);\n      case GREATER_THAN:\n        return translateBinary(\">\", \"<\", (RexCall) node);\n      case GREATER_THAN_OR_EQUAL:\n        return translateBinary(\">=\", \"<=\", (RexCall) node);\n      default:\n        throw new AssertionError(\"cannot translate \" + node);\n      }\n    }\n","realPath":"geode/src/main/java/org/apache/calcite/adapter/geode/rel/GeodeFilter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"B"},{"authorDate":"2016-02-19 03:49:20","commitOrder":2,"curCode":"    private String translateMatch2(RexNode node) {\n      \r\n      \r\n      switch (node.getKind()) {\n      case EQUALS:\n        return translateBinary(\"=\", \"=\", (RexCall) node);\n      case LESS_THAN:\n        return translateBinary(\"<\", \">\", (RexCall) node);\n      case LESS_THAN_OR_EQUAL:\n        return translateBinary(\"<=\", \">=\", (RexCall) node);\n      case GREATER_THAN:\n        return translateBinary(\">\", \"<\", (RexCall) node);\n      case GREATER_THAN_OR_EQUAL:\n        return translateBinary(\">=\", \"<=\", (RexCall) node);\n      default:\n        throw new AssertionError(\"cannot translate \" + node);\n      }\n    }\n","date":"2016-02-19 13:16:50","endLine":217,"groupId":"14733","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"translateMatch2","params":"(RexNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/eb3ad506addf6398ff2c5995115f34f74912eb.src","preCode":"    private String translateMatch2(RexNode node) {\n      \r\n      \r\n      switch (node.getKind()) {\n      case EQUALS:\n        return translateBinary(\"=\", \"=\", (RexCall) node);\n      case LESS_THAN:\n        return translateBinary(\"<\", \">\", (RexCall) node);\n      case LESS_THAN_OR_EQUAL:\n        return translateBinary(\"<=\", \">=\", (RexCall) node);\n      case GREATER_THAN:\n        return translateBinary(\">\", \"<\", (RexCall) node);\n      case GREATER_THAN_OR_EQUAL:\n        return translateBinary(\">=\", \"<=\", (RexCall) node);\n      default:\n        throw new AssertionError(\"cannot translate \" + node);\n      }\n    }\n","realPath":"cassandra/src/main/java/org/apache/calcite/adapter/cassandra/CassandraFilter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"NB"}],"commitId":"707f4de9cafc474d0daf807b1e4c339f6eb42d7e","commitMessage":"@@@[CALCITE-2059] Apache Geode Adapter (Christian Tzolov)\n\n- Downgrade Geode from 1.4.0 to 1.3.0 - Geode server allows connections\n  only from clients with same or lower version\n- Add links to presentations and tutorials\n\nClose apache/calcite#581\n","date":"2018-02-17 02:18:02","modifiedFileCount":"0","status":"M","submitter":"Christian Tzolov"},{"authorTime":"2016-02-19 03:49:20","codes":[{"authorDate":"2019-02-15 17:26:44","commitOrder":3,"curCode":"    private String translateMatch2(RexNode node) {\n      \r\n      \r\n      RexNode child;\n      switch (node.getKind()) {\n      case EQUALS:\n        return translateBinary(\"=\", \"=\", (RexCall) node);\n      case LESS_THAN:\n        return translateBinary(\"<\", \">\", (RexCall) node);\n      case LESS_THAN_OR_EQUAL:\n        return translateBinary(\"<=\", \">=\", (RexCall) node);\n      case GREATER_THAN:\n        return translateBinary(\">\", \"<\", (RexCall) node);\n      case GREATER_THAN_OR_EQUAL:\n        return translateBinary(\">=\", \"<=\", (RexCall) node);\n      case INPUT_REF:\n        return translateBinary2(\"=\", node, rexBuilder.makeLiteral(true));\n      case NOT:\n        child = ((RexCall) node).getOperands().get(0);\n        if (child.getKind() == SqlKind.CAST) {\n          child = ((RexCall) child).getOperands().get(0);\n        }\n        if (child.getKind() == SqlKind.INPUT_REF) {\n          return translateBinary2(\"=\", child, rexBuilder.makeLiteral(false));\n        }\n        break;\n      case CAST:\n        return translateMatch2(((RexCall) node).getOperands().get(0));\n      default:\n        break;\n      }\n      throw new AssertionError(\"Cannot translate \" + node + \", kind=\" + node.getKind());\n    }\n","date":"2019-02-20 00:49:37","endLine":329,"groupId":"10545","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"translateMatch2","params":"(RexNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c8/965440f3901440d00b06296231a652b4a7fd97.src","preCode":"    private String translateMatch2(RexNode node) {\n      \r\n      \r\n      switch (node.getKind()) {\n      case EQUALS:\n        return translateBinary(\"=\", \"=\", (RexCall) node);\n      case LESS_THAN:\n        return translateBinary(\"<\", \">\", (RexCall) node);\n      case LESS_THAN_OR_EQUAL:\n        return translateBinary(\"<=\", \">=\", (RexCall) node);\n      case GREATER_THAN:\n        return translateBinary(\">\", \"<\", (RexCall) node);\n      case GREATER_THAN_OR_EQUAL:\n        return translateBinary(\">=\", \"<=\", (RexCall) node);\n      default:\n        throw new AssertionError(\"cannot translate \" + node);\n      }\n    }\n","realPath":"geode/src/main/java/org/apache/calcite/adapter/geode/rel/GeodeFilter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":297,"status":"M"},{"authorDate":"2016-02-19 03:49:20","commitOrder":3,"curCode":"    private String translateMatch2(RexNode node) {\n      \r\n      \r\n      switch (node.getKind()) {\n      case EQUALS:\n        return translateBinary(\"=\", \"=\", (RexCall) node);\n      case LESS_THAN:\n        return translateBinary(\"<\", \">\", (RexCall) node);\n      case LESS_THAN_OR_EQUAL:\n        return translateBinary(\"<=\", \">=\", (RexCall) node);\n      case GREATER_THAN:\n        return translateBinary(\">\", \"<\", (RexCall) node);\n      case GREATER_THAN_OR_EQUAL:\n        return translateBinary(\">=\", \"<=\", (RexCall) node);\n      default:\n        throw new AssertionError(\"cannot translate \" + node);\n      }\n    }\n","date":"2016-02-19 13:16:50","endLine":217,"groupId":"10545","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"translateMatch2","params":"(RexNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/eb3ad506addf6398ff2c5995115f34f74912eb.src","preCode":"    private String translateMatch2(RexNode node) {\n      \r\n      \r\n      switch (node.getKind()) {\n      case EQUALS:\n        return translateBinary(\"=\", \"=\", (RexCall) node);\n      case LESS_THAN:\n        return translateBinary(\"<\", \">\", (RexCall) node);\n      case LESS_THAN_OR_EQUAL:\n        return translateBinary(\"<=\", \">=\", (RexCall) node);\n      case GREATER_THAN:\n        return translateBinary(\">\", \"<\", (RexCall) node);\n      case GREATER_THAN_OR_EQUAL:\n        return translateBinary(\">=\", \"<=\", (RexCall) node);\n      default:\n        throw new AssertionError(\"cannot translate \" + node);\n      }\n    }\n","realPath":"cassandra/src/main/java/org/apache/calcite/adapter/cassandra/CassandraFilter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"N"}],"commitId":"6b41a6135d7bb09b4ccd08df665ae089275b8454","commitMessage":"@@@[CALCITE-2850] Geode adapter: support boolean column as filter operand\n\nEarlier when a boolean column was supplied as a filter.  the adapter have thrown Exception.\n","date":"2019-02-20 00:49:37","modifiedFileCount":"3","status":"M","submitter":"Zoltan Haindrich"}]
