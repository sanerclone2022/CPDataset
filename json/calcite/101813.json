[{"authorTime":"2016-06-28 14:57:41","codes":[{"authorDate":"2016-06-28 14:57:41","commitOrder":1,"curCode":"  public int getMinPrecision() {\n    switch (this) {\n    case DECIMAL:\n    case VARCHAR:\n    case CHAR:\n    case VARBINARY:\n    case BINARY:\n    case TIME:\n    case TIMESTAMP:\n      return 1;\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return MIN_INTERVAL_START_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","date":"2016-07-02 02:11:10","endLine":759,"groupId":"4949","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getMinPrecision","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f5/5f9b929bd2862fb7fe2f15538b744383be5f0c.src","preCode":"  public int getMinPrecision() {\n    switch (this) {\n    case DECIMAL:\n    case VARCHAR:\n    case CHAR:\n    case VARBINARY:\n    case BINARY:\n    case TIME:\n    case TIMESTAMP:\n      return 1;\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return MIN_INTERVAL_START_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/type/SqlTypeName.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":732,"status":"B"},{"authorDate":"2016-06-28 14:57:41","commitOrder":1,"curCode":"  public int getMinScale() {\n    switch (this) {\n    \r\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return MIN_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","date":"2016-07-02 02:11:10","endLine":788,"groupId":"9088","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getMinScale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f5/5f9b929bd2862fb7fe2f15538b744383be5f0c.src","preCode":"  public int getMinScale() {\n    switch (this) {\n    \r\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return MIN_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/type/SqlTypeName.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":768,"status":"B"}],"commitId":"ac9c8c7af020a0532e3e7e31b4216f69d9f0b39f","commitMessage":"@@@[CALCITE-1302] Create SqlTypeName values for each interval range.  e.g. YEAR_MONTH\n\nAs a result.  we don't need to use SqlIntervalQualifier as often. Also. \nthe JDBC client gets more information from the type.\n\nChange the CalciteAssert.checkResultCount API.\n","date":"2016-07-02 02:11:10","modifiedFileCount":"26","status":"B","submitter":"Julian Hyde"},{"authorTime":"2016-06-28 14:57:41","codes":[{"authorDate":"2017-08-15 08:46:42","commitOrder":2,"curCode":"  public int getMinPrecision() {\n    switch (this) {\n    case DECIMAL:\n    case VARCHAR:\n    case CHAR:\n    case VARBINARY:\n    case BINARY:\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      return 1;\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return MIN_INTERVAL_START_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","date":"2017-09-06 06:00:36","endLine":769,"groupId":"101813","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getMinPrecision","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e5/6b9cf1eb25f4fd3aa1d0dd9a6a18613499c17f.src","preCode":"  public int getMinPrecision() {\n    switch (this) {\n    case DECIMAL:\n    case VARCHAR:\n    case CHAR:\n    case VARBINARY:\n    case BINARY:\n    case TIME:\n    case TIMESTAMP:\n      return 1;\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return MIN_INTERVAL_START_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/type/SqlTypeName.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":740,"status":"M"},{"authorDate":"2016-06-28 14:57:41","commitOrder":2,"curCode":"  public int getMinScale() {\n    switch (this) {\n    \r\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return MIN_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","date":"2016-07-02 02:11:10","endLine":788,"groupId":"101813","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getMinScale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f5/5f9b929bd2862fb7fe2f15538b744383be5f0c.src","preCode":"  public int getMinScale() {\n    switch (this) {\n    \r\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return MIN_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/type/SqlTypeName.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":768,"status":"N"}],"commitId":"939c9a62b4905d2cfffcb4adaefd76a809aa3520","commitMessage":"@@@[CALCITE-1947] Add time/timestamp with local time zone types to optimizer\n\nClose apache/calcite#519\n","date":"2017-09-06 06:00:36","modifiedFileCount":"34","status":"M","submitter":"Jesus Camacho Rodriguez"}]
