[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  void accept(ExpressionWriter writer, int lprec, int rprec) {\n    if (writer.requireParentheses(this, lprec, rprec)) {\n      return;\n    }\n    expression0.accept(writer, lprec, nodeType.lprec);\n    writer.append(nodeType.op);\n    expression1.accept(writer, nodeType.rprec, rprec);\n  }\n","date":"2014-11-14 09:39:34","endLine":161,"groupId":"6631","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"accept","params":"(ExpressionWriterwriter@intlprec@intrprec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d6/14d21b26cf59dbcb0f0b5fd1c0db6bd894df4a.src","preCode":"  void accept(ExpressionWriter writer, int lprec, int rprec) {\n    if (writer.requireParentheses(this, lprec, rprec)) {\n      return;\n    }\n    expression0.accept(writer, lprec, nodeType.lprec);\n    writer.append(nodeType.op);\n    expression1.accept(writer, nodeType.rprec, rprec);\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/tree/BinaryExpression.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  void accept(ExpressionWriter writer, int lprec, int rprec) {\n    if (writer.requireParentheses(this, lprec, rprec)) {\n      return;\n    }\n    expression0.accept(writer, lprec, nodeType.lprec);\n    writer.append(nodeType.op);\n    expression1.accept(writer, nodeType.rprec, nodeType.lprec);\n    writer.append(nodeType.op2);\n    expression2.accept(writer, nodeType.rprec, rprec);\n  }\n","date":"2014-11-14 09:39:34","endLine":58,"groupId":"6631","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"accept","params":"(ExpressionWriterwriter@intlprec@intrprec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/92/8bb4044a8a7c9bc32891532a5f54534cae6fa6.src","preCode":"  void accept(ExpressionWriter writer, int lprec, int rprec) {\n    if (writer.requireParentheses(this, lprec, rprec)) {\n      return;\n    }\n    expression0.accept(writer, lprec, nodeType.lprec);\n    writer.append(nodeType.op);\n    expression1.accept(writer, nodeType.rprec, nodeType.lprec);\n    writer.append(nodeType.op2);\n    expression2.accept(writer, nodeType.rprec, rprec);\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/tree/TernaryExpression.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"  @Override void accept(ExpressionWriter writer, int lprec, int rprec) {\n    if (writer.requireParentheses(this, lprec, rprec)) {\n      return;\n    }\n    expression0.accept(writer, lprec, nodeType.lprec);\n    writer.append(nodeType.op);\n    expression1.accept(writer, nodeType.rprec, rprec);\n  }\n","date":"2020-10-07 05:42:47","endLine":213,"groupId":"12139","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"accept","params":"(ExpressionWriterwriter@intlprec@intrprec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/bd/41b048d13490035222ed24956d2a50e6dcae78.src","preCode":"  void accept(ExpressionWriter writer, int lprec, int rprec) {\n    if (writer.requireParentheses(this, lprec, rprec)) {\n      return;\n    }\n    expression0.accept(writer, lprec, nodeType.lprec);\n    writer.append(nodeType.op);\n    expression1.accept(writer, nodeType.rprec, rprec);\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/tree/BinaryExpression.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"  @Override void accept(ExpressionWriter writer, int lprec, int rprec) {\n    if (writer.requireParentheses(this, lprec, rprec)) {\n      return;\n    }\n    expression0.accept(writer, lprec, nodeType.lprec);\n    writer.append(nodeType.op);\n    expression1.accept(writer, nodeType.rprec, nodeType.lprec);\n    writer.append(nodeType.op2);\n    expression2.accept(writer, nodeType.rprec, rprec);\n  }\n","date":"2020-10-07 05:42:47","endLine":62,"groupId":"12139","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"accept","params":"(ExpressionWriterwriter@intlprec@intrprec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f4/2011dbaeb12437ed5b7d42f74d684f43fe42c7.src","preCode":"  void accept(ExpressionWriter writer, int lprec, int rprec) {\n    if (writer.requireParentheses(this, lprec, rprec)) {\n      return;\n    }\n    expression0.accept(writer, lprec, nodeType.lprec);\n    writer.append(nodeType.op);\n    expression1.accept(writer, nodeType.rprec, nodeType.lprec);\n    writer.append(nodeType.op2);\n    expression2.accept(writer, nodeType.rprec, rprec);\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/tree/TernaryExpression.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
