[{"authorTime":"2020-06-19 02:09:17","codes":[{"authorDate":"2020-06-19 02:09:17","commitOrder":1,"curCode":"  public static <TSource> TSource last(Enumerable<TSource> enumerable,\n      Predicate1<TSource> predicate) {\n    final ListEnumerable<TSource> list = enumerable instanceof ListEnumerable\n        ? ((ListEnumerable<TSource>) enumerable)\n        : null;\n    if (list != null) {\n      final List<TSource> rawList = list.toList();\n      final int count = rawList.size();\n      for (int i = count - 1; i >= 0; --i) {\n        TSource result = rawList.get(i);\n        if (predicate.apply(result)) {\n          return result;\n        }\n      }\n    } else {\n      try (Enumerator<TSource> os = enumerable.enumerator()) {\n        while (os.moveNext()) {\n          TSource result = os.current();\n          if (predicate.apply(result)) {\n            while (os.moveNext()) {\n              TSource element = os.current();\n              if (predicate.apply(element)) {\n                result = element;\n              }\n            }\n            return result;\n          }\n        }\n      }\n    }\n    throw new NoSuchElementException();\n  }\n","date":"2020-06-29 16:36:00","endLine":2219,"groupId":"16185","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"last","params":"(Enumerable<TSource>enumerable@Predicate1<TSource>predicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/1be29b1674ec11926bcb0f2157ddf4571aab83.src","preCode":"  public static <TSource> TSource last(Enumerable<TSource> enumerable,\n      Predicate1<TSource> predicate) {\n    final ListEnumerable<TSource> list = enumerable instanceof ListEnumerable\n        ? ((ListEnumerable<TSource>) enumerable)\n        : null;\n    if (list != null) {\n      final List<TSource> rawList = list.toList();\n      final int count = rawList.size();\n      for (int i = count - 1; i >= 0; --i) {\n        TSource result = rawList.get(i);\n        if (predicate.apply(result)) {\n          return result;\n        }\n      }\n    } else {\n      try (Enumerator<TSource> os = enumerable.enumerator()) {\n        while (os.moveNext()) {\n          TSource result = os.current();\n          if (predicate.apply(result)) {\n            while (os.moveNext()) {\n              TSource element = os.current();\n              if (predicate.apply(element)) {\n                result = element;\n              }\n            }\n            return result;\n          }\n        }\n      }\n    }\n    throw new NoSuchElementException();\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2188,"status":"B"},{"authorDate":"2020-06-19 02:09:17","commitOrder":1,"curCode":"  public static <TSource> TSource lastOrDefault(Enumerable<TSource> enumerable,\n      Predicate1<TSource> predicate) {\n    final ListEnumerable<TSource> list = enumerable instanceof ListEnumerable\n        ? ((ListEnumerable<TSource>) enumerable)\n        : null;\n    if (list != null) {\n      final List<TSource> rawList = list.toList();\n      final int count = rawList.size();\n      for (int i = count - 1; i >= 0; --i) {\n        TSource result = rawList.get(i);\n        if (predicate.apply(result)) {\n          return result;\n        }\n      }\n    } else {\n      try (Enumerator<TSource> os = enumerable.enumerator()) {\n        while (os.moveNext()) {\n          TSource result = os.current();\n          if (predicate.apply(result)) {\n            while (os.moveNext()) {\n              TSource element = os.current();\n              if (predicate.apply(element)) {\n                result = element;\n              }\n            }\n            return result;\n          }\n        }\n      }\n    }\n    return null;\n  }\n","date":"2020-06-29 16:36:00","endLine":2286,"groupId":"16185","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"lastOrDefault","params":"(Enumerable<TSource>enumerable@Predicate1<TSource>predicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/1be29b1674ec11926bcb0f2157ddf4571aab83.src","preCode":"  public static <TSource> TSource lastOrDefault(Enumerable<TSource> enumerable,\n      Predicate1<TSource> predicate) {\n    final ListEnumerable<TSource> list = enumerable instanceof ListEnumerable\n        ? ((ListEnumerable<TSource>) enumerable)\n        : null;\n    if (list != null) {\n      final List<TSource> rawList = list.toList();\n      final int count = rawList.size();\n      for (int i = count - 1; i >= 0; --i) {\n        TSource result = rawList.get(i);\n        if (predicate.apply(result)) {\n          return result;\n        }\n      }\n    } else {\n      try (Enumerator<TSource> os = enumerable.enumerator()) {\n        while (os.moveNext()) {\n          TSource result = os.current();\n          if (predicate.apply(result)) {\n            while (os.moveNext()) {\n              TSource element = os.current();\n              if (predicate.apply(element)) {\n                result = element;\n              }\n            }\n            return result;\n          }\n        }\n      }\n    }\n    return null;\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2255,"status":"B"}],"commitId":"bf9ff001db743bcba35943daf7fec5fe8b8b207e","commitMessage":"@@@[CALCITE-4008] Implement Code generation for EnumerableSortedAggregate (Rui Wang).\n","date":"2020-06-29 16:36:00","modifiedFileCount":"6","status":"B","submitter":"amaliujia"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-06-19 02:09:17","commitOrder":2,"curCode":"  public static <TSource> TSource last(Enumerable<TSource> enumerable,\n      Predicate1<TSource> predicate) {\n    final ListEnumerable<TSource> list = enumerable instanceof ListEnumerable\n        ? ((ListEnumerable<TSource>) enumerable)\n        : null;\n    if (list != null) {\n      final List<TSource> rawList = list.toList();\n      final int count = rawList.size();\n      for (int i = count - 1; i >= 0; --i) {\n        TSource result = rawList.get(i);\n        if (predicate.apply(result)) {\n          return result;\n        }\n      }\n    } else {\n      try (Enumerator<TSource> os = enumerable.enumerator()) {\n        while (os.moveNext()) {\n          TSource result = os.current();\n          if (predicate.apply(result)) {\n            while (os.moveNext()) {\n              TSource element = os.current();\n              if (predicate.apply(element)) {\n                result = element;\n              }\n            }\n            return result;\n          }\n        }\n      }\n    }\n    throw new NoSuchElementException();\n  }\n","date":"2020-06-29 16:36:00","endLine":2219,"groupId":"12124","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"last","params":"(Enumerable<TSource>enumerable@Predicate1<TSource>predicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/1be29b1674ec11926bcb0f2157ddf4571aab83.src","preCode":"  public static <TSource> TSource last(Enumerable<TSource> enumerable,\n      Predicate1<TSource> predicate) {\n    final ListEnumerable<TSource> list = enumerable instanceof ListEnumerable\n        ? ((ListEnumerable<TSource>) enumerable)\n        : null;\n    if (list != null) {\n      final List<TSource> rawList = list.toList();\n      final int count = rawList.size();\n      for (int i = count - 1; i >= 0; --i) {\n        TSource result = rawList.get(i);\n        if (predicate.apply(result)) {\n          return result;\n        }\n      }\n    } else {\n      try (Enumerator<TSource> os = enumerable.enumerator()) {\n        while (os.moveNext()) {\n          TSource result = os.current();\n          if (predicate.apply(result)) {\n            while (os.moveNext()) {\n              TSource element = os.current();\n              if (predicate.apply(element)) {\n                result = element;\n              }\n            }\n            return result;\n          }\n        }\n      }\n    }\n    throw new NoSuchElementException();\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2188,"status":"N"},{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"  public static <TSource> @Nullable TSource lastOrDefault(Enumerable<TSource> enumerable,\n      Predicate1<TSource> predicate) {\n    final ListEnumerable<TSource> list = enumerable instanceof ListEnumerable\n        ? ((ListEnumerable<TSource>) enumerable)\n        : null;\n    if (list != null) {\n      final List<TSource> rawList = list.toList();\n      final int count = rawList.size();\n      for (int i = count - 1; i >= 0; --i) {\n        TSource result = rawList.get(i);\n        if (predicate.apply(result)) {\n          return result;\n        }\n      }\n    } else {\n      try (Enumerator<TSource> os = enumerable.enumerator()) {\n        while (os.moveNext()) {\n          TSource result = os.current();\n          if (predicate.apply(result)) {\n            while (os.moveNext()) {\n              TSource element = os.current();\n              if (predicate.apply(element)) {\n                result = element;\n              }\n            }\n            return result;\n          }\n        }\n      }\n    }\n    return null;\n  }\n","date":"2020-11-30 06:45:33","endLine":2344,"groupId":"12124","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"lastOrDefault","params":"(Enumerable<TSource>enumerable@Predicate1<TSource>predicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/5681a61d625c97b1c82a2d555f8635b1edf6cb.src","preCode":"  public static <TSource> TSource lastOrDefault(Enumerable<TSource> enumerable,\n      Predicate1<TSource> predicate) {\n    final ListEnumerable<TSource> list = enumerable instanceof ListEnumerable\n        ? ((ListEnumerable<TSource>) enumerable)\n        : null;\n    if (list != null) {\n      final List<TSource> rawList = list.toList();\n      final int count = rawList.size();\n      for (int i = count - 1; i >= 0; --i) {\n        TSource result = rawList.get(i);\n        if (predicate.apply(result)) {\n          return result;\n        }\n      }\n    } else {\n      try (Enumerator<TSource> os = enumerable.enumerator()) {\n        while (os.moveNext()) {\n          TSource result = os.current();\n          if (predicate.apply(result)) {\n            while (os.moveNext()) {\n              TSource element = os.current();\n              if (predicate.apply(element)) {\n                result = element;\n              }\n            }\n            return result;\n          }\n        }\n      }\n    }\n    return null;\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2313,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
