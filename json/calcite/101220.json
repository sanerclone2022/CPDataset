[{"authorTime":"2020-06-05 20:45:31","codes":[{"authorDate":"2020-06-05 20:45:31","commitOrder":1,"curCode":"  @Test void testCorrelateInnerJoinDeriveLeft() {\n    final String sql = \"select * from emp e\\n\"\n        + \"join dept d on e.deptno=d.deptno\\n\"\n        + \"order by e.ename\";\n    Query.create(sql)\n        .addRule(JoinToCorrelateRule.INSTANCE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_MERGE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .check();\n  }\n","date":"2020-06-09 08:29:30","endLine":150,"groupId":"12620","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCorrelateInnerJoinDeriveLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ce/731805f7d4662d5a6badbd6156a48061626897.src","preCode":"  @Test void testCorrelateInnerJoinDeriveLeft() {\n    final String sql = \"select * from emp e\\n\"\n        + \"join dept d on e.deptno=d.deptno\\n\"\n        + \"order by e.ename\";\n    Query.create(sql)\n        .addRule(JoinToCorrelateRule.INSTANCE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_MERGE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/TopDownOptTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"B"},{"authorDate":"2020-06-05 20:45:31","commitOrder":1,"curCode":"  @Test void testCorrelateInnerJoinNoDerive() {\n    final String sql = \"select * from emp e\\n\"\n        + \"join dept d on e.deptno=d.deptno\\n\"\n        + \"order by e.ename, d.name\";\n    Query.create(sql)\n        .addRule(JoinToCorrelateRule.INSTANCE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_MERGE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .check();\n  }\n","date":"2020-06-09 08:29:30","endLine":163,"groupId":"12620","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCorrelateInnerJoinNoDerive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ce/731805f7d4662d5a6badbd6156a48061626897.src","preCode":"  @Test void testCorrelateInnerJoinNoDerive() {\n    final String sql = \"select * from emp e\\n\"\n        + \"join dept d on e.deptno=d.deptno\\n\"\n        + \"order by e.ename, d.name\";\n    Query.create(sql)\n        .addRule(JoinToCorrelateRule.INSTANCE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_MERGE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/TopDownOptTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"B"}],"commitId":"61cf2bf30d0496cf795fd0f5d4cf9dc9f468c9b5","commitMessage":"@@@[CALCITE-4041] Support trait propagation for EnumerableCorrelate\n\nClose #2005\n","date":"2020-06-09 08:29:30","modifiedFileCount":"2","status":"B","submitter":"rubenada"},{"authorTime":"2020-07-09 04:45:12","codes":[{"authorDate":"2020-07-09 04:45:12","commitOrder":2,"curCode":"  @Test void testCorrelateInnerJoinDeriveLeft() {\n    final String sql = \"select * from emp e\\n\"\n        + \"join dept d on e.deptno=d.deptno\\n\"\n        + \"order by e.ename\";\n    Query.create(sql)\n        .addRule(CoreRules.JOIN_TO_CORRELATE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_MERGE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .check();\n  }\n","date":"2020-07-12 06:58:28","endLine":157,"groupId":"101220","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCorrelateInnerJoinDeriveLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/49/63a315c48bee68bc0721cbb87e2ae575779c80.src","preCode":"  @Test void testCorrelateInnerJoinDeriveLeft() {\n    final String sql = \"select * from emp e\\n\"\n        + \"join dept d on e.deptno=d.deptno\\n\"\n        + \"order by e.ename\";\n    Query.create(sql)\n        .addRule(JoinToCorrelateRule.INSTANCE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_MERGE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/TopDownOptTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2020-07-09 04:45:12","commitOrder":2,"curCode":"  @Test void testCorrelateInnerJoinNoDerive() {\n    final String sql = \"select * from emp e\\n\"\n        + \"join dept d on e.deptno=d.deptno\\n\"\n        + \"order by e.ename, d.name\";\n    Query.create(sql)\n        .addRule(CoreRules.JOIN_TO_CORRELATE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_MERGE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .check();\n  }\n","date":"2020-07-12 06:58:28","endLine":170,"groupId":"101220","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCorrelateInnerJoinNoDerive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/49/63a315c48bee68bc0721cbb87e2ae575779c80.src","preCode":"  @Test void testCorrelateInnerJoinNoDerive() {\n    final String sql = \"select * from emp e\\n\"\n        + \"join dept d on e.deptno=d.deptno\\n\"\n        + \"order by e.ename, d.name\";\n    Query.create(sql)\n        .addRule(JoinToCorrelateRule.INSTANCE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_MERGE_JOIN_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/TopDownOptTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"}],"commitId":"23b26b6287315cc2cd236e705bb651077488fc5c","commitMessage":"@@@In preparation for [CALCITE-3923] and [CALCITE-4079].  deprecate fields and methods that will be removed between 1.24 and 1.25\n\nAlso.  in RelNode.  change some methods from 'to removed before 2.0'\nto 'to be removed before 1.25'. The methods are sDistinct(). \nisKey(ImmutableBitSet).  getQuery().  getRows().  getVariablesStopped(). \ncomputeSelfCost().  isValid(boolean).  getCollationList().  getChildExps().\n","date":"2020-07-12 06:58:28","modifiedFileCount":"137","status":"M","submitter":"Julian Hyde"}]
