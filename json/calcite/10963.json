[{"authorTime":"2017-01-18 17:44:57","codes":[{"authorDate":"2016-11-22 21:22:57","commitOrder":2,"curCode":"  @Test public void testReduceNullableCase() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT CASE WHEN 1=2 \"\n      + \"THEN cast((values(1)) as integer) \"\n      + \"ELSE 2 end from (values(1))\";\n    sql(sql).with(hepPlanner).check();\n  }\n","date":"2016-11-23 10:40:52","endLine":226,"groupId":"4380","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReduceNullableCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a8/7da6103d3b8d81d15684a01094479b49f05050.src","preCode":"  @Test public void testReduceNullableCase() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT CASE WHEN 1=2 \"\n      + \"THEN cast((values(1)) as integer) \"\n      + \"ELSE 2 end from (values(1))\";\n    sql(sql).with(hepPlanner).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"NB"},{"authorDate":"2017-01-18 17:44:57","commitOrder":2,"curCode":"  @Test public void testReduceNullableCase2() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT deptno, ename, CASE WHEN 1=2 \"\n      + \"THEN substring(ename, 1, cast(2 as int)) ELSE NULL end from emp\"\n      + \" group by deptno, ename, case when 1=2 then substring(ename,1, cast(2 as int))  else null end\";\n    sql(sql).with(hepPlanner).check();\n  }\n","date":"2017-01-19 02:51:42","endLine":239,"groupId":"4380","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReduceNullableCase2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/db/7d27cb3228e91f8102ec455b7c6d9a306ebdc3.src","preCode":"  @Test public void testReduceNullableCase2() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT deptno, ename, CASE WHEN 1=2 \"\n      + \"THEN substring(ename, 1, cast(2 as int)) ELSE NULL end from emp\"\n      + \" group by deptno, ename, case when 1=2 then substring(ename,1, cast(2 as int))  else null end\";\n    sql(sql).with(hepPlanner).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"B"}],"commitId":"010f7abb9c17ea3a7763988d667ef84c50651e11","commitMessage":"@@@[CALCITE-1575] Literals may lose precision during expression reduction\n","date":"2017-01-19 02:51:42","modifiedFileCount":"2","status":"M","submitter":"Ashutosh Chauhan"},{"authorTime":"2018-10-11 22:41:20","codes":[{"authorDate":"2018-10-11 22:41:20","commitOrder":3,"curCode":"  @Test public void testReduceNullableCase() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT CASE WHEN 1=2 \"\n        + \"THEN cast((values(1)) as integer) \"\n        + \"ELSE 2 end from (values(1))\";\n    sql(sql).with(hepPlanner).checkUnchanged();\n  }\n","date":"2018-10-18 04:30:17","endLine":270,"groupId":"4380","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReduceNullableCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1f/542339735ffb4e58ff9b71aee4c9b9008098c9.src","preCode":"  @Test public void testReduceNullableCase() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT CASE WHEN 1=2 \"\n        + \"THEN cast((values(1)) as integer) \"\n        + \"ELSE 2 end from (values(1))\";\n    sql(sql).with(hepPlanner).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"M"},{"authorDate":"2018-10-11 22:41:20","commitOrder":3,"curCode":"  @Test public void testReduceNullableCase2() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT deptno, ename, CASE WHEN 1=2 \"\n        + \"THEN substring(ename, 1, cast(2 as int)) ELSE NULL end from emp\"\n        + \" group by deptno, ename, case when 1=2 then substring(ename,1, cast(2 as int))  else null end\";\n    sql(sql).with(hepPlanner).checkUnchanged();\n  }\n","date":"2018-10-18 04:30:17","endLine":282,"groupId":"4380","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReduceNullableCase2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1f/542339735ffb4e58ff9b71aee4c9b9008098c9.src","preCode":"  @Test public void testReduceNullableCase2() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT deptno, ename, CASE WHEN 1=2 \"\n        + \"THEN substring(ename, 1, cast(2 as int)) ELSE NULL end from emp\"\n        + \" group by deptno, ename, case when 1=2 then substring(ename,1, cast(2 as int))  else null end\";\n    sql(sql).with(hepPlanner).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"}],"commitId":"b470a0cd4572c9f6c4c0e9b51926b97c5af58d3f","commitMessage":"@@@[CALCITE-1413] Enhance boolean case statement simplifications (Zoltan Haindrich)\n\nEnables the simplification of case branch conditionals and values.\nAdds a new case statement rewrite logic which could rewrite any case statement returning booleans\ninto and/or expressions.\n\nClose apache/calcite#886\n","date":"2018-10-18 04:30:17","modifiedFileCount":"4","status":"M","submitter":"Zoltan Haindrich"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testReduceNullableCase() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT CASE WHEN 1=2 \"\n        + \"THEN cast((values(1)) as integer) \"\n        + \"ELSE 2 end from (values(1))\";\n    sql(sql).with(hepPlanner).checkUnchanged();\n  }\n","date":"2020-04-06 04:57:49","endLine":375,"groupId":"4380","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testReduceNullableCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/c56354833d8acfcc210ae25313c78e9332a2ba.src","preCode":"  @Test public void testReduceNullableCase() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT CASE WHEN 1=2 \"\n        + \"THEN cast((values(1)) as integer) \"\n        + \"ELSE 2 end from (values(1))\";\n    sql(sql).with(hepPlanner).checkUnchanged();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":365,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testReduceNullableCase2() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT deptno, ename, CASE WHEN 1=2 \"\n        + \"THEN substring(ename, 1, cast(2 as int)) ELSE NULL end from emp\"\n        + \" group by deptno, ename, case when 1=2 then substring(ename,1, cast(2 as int))  else null end\";\n    sql(sql).with(hepPlanner).checkUnchanged();\n  }\n","date":"2020-04-06 04:57:49","endLine":387,"groupId":"4380","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testReduceNullableCase2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/c56354833d8acfcc210ae25313c78e9332a2ba.src","preCode":"  @Test public void testReduceNullableCase2() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT deptno, ename, CASE WHEN 1=2 \"\n        + \"THEN substring(ename, 1, cast(2 as int)) ELSE NULL end from emp\"\n        + \" group by deptno, ename, case when 1=2 then substring(ename,1, cast(2 as int))  else null end\";\n    sql(sql).with(hepPlanner).checkUnchanged();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-07-09 04:45:12","codes":[{"authorDate":"2020-07-09 04:45:12","commitOrder":5,"curCode":"  @Test void testReduceNullableCase() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(CoreRules.PROJECT_REDUCE_EXPRESSIONS);\n\n    final String sql = \"SELECT CASE WHEN 1=2 \"\n        + \"THEN cast((values(1)) as integer) \"\n        + \"ELSE 2 end from (values(1))\";\n    sql(sql).with(hepPlanner).checkUnchanged();\n  }\n","date":"2020-07-12 06:58:28","endLine":325,"groupId":"10963","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testReduceNullableCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/d77aee9e74f65d9e26a1ffa96400062e1eb119.src","preCode":"  @Test void testReduceNullableCase() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT CASE WHEN 1=2 \"\n        + \"THEN cast((values(1)) as integer) \"\n        + \"ELSE 2 end from (values(1))\";\n    sql(sql).with(hepPlanner).checkUnchanged();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"M"},{"authorDate":"2020-07-09 04:45:12","commitOrder":5,"curCode":"  @Test void testReduceNullableCase2() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(CoreRules.PROJECT_REDUCE_EXPRESSIONS);\n\n    final String sql = \"SELECT deptno, ename, CASE WHEN 1=2 \"\n        + \"THEN substring(ename, 1, cast(2 as int)) ELSE NULL end from emp\"\n        + \" group by deptno, ename, case when 1=2 then substring(ename,1, cast(2 as int))  else null end\";\n    sql(sql).with(hepPlanner).checkUnchanged();\n  }\n","date":"2020-07-12 06:58:28","endLine":337,"groupId":"10963","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testReduceNullableCase2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/d77aee9e74f65d9e26a1ffa96400062e1eb119.src","preCode":"  @Test void testReduceNullableCase2() {\n    HepProgramBuilder builder = new HepProgramBuilder();\n    builder.addRuleClass(ReduceExpressionsRule.class);\n    HepPlanner hepPlanner = new HepPlanner(builder.build());\n    hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE);\n\n    final String sql = \"SELECT deptno, ename, CASE WHEN 1=2 \"\n        + \"THEN substring(ename, 1, cast(2 as int)) ELSE NULL end from emp\"\n        + \" group by deptno, ename, case when 1=2 then substring(ename,1, cast(2 as int))  else null end\";\n    sql(sql).with(hepPlanner).checkUnchanged();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"M"}],"commitId":"23b26b6287315cc2cd236e705bb651077488fc5c","commitMessage":"@@@In preparation for [CALCITE-3923] and [CALCITE-4079].  deprecate fields and methods that will be removed between 1.24 and 1.25\n\nAlso.  in RelNode.  change some methods from 'to removed before 2.0'\nto 'to be removed before 1.25'. The methods are sDistinct(). \nisKey(ImmutableBitSet).  getQuery().  getRows().  getVariablesStopped(). \ncomputeSelfCost().  isValid(boolean).  getCollationList().  getChildExps().\n","date":"2020-07-12 06:58:28","modifiedFileCount":"137","status":"M","submitter":"Julian Hyde"}]
