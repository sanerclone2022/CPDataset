[{"authorTime":"2017-05-10 11:28:26","codes":[{"authorDate":"2017-05-10 11:28:26","commitOrder":1,"curCode":"  @Test public void testMatchRecognizeSubset2() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   AVG(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL (SUM(\\\"STDN\\\".\\\"net_weight\\\") / \"\n        + \"COUNT(\\\"STDN\\\".\\\"net_weight\\\")) AS \\\"AVG_STDN\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-16 10:33:38","endLine":1409,"groupId":"12915","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeSubset2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/af/122d58b2d11db6622bcda68bf7c4777ae63219.src","preCode":"  @Test public void testMatchRecognizeSubset2() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   AVG(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL (SUM(\\\"STDN\\\".\\\"net_weight\\\") / \"\n        + \"COUNT(\\\"STDN\\\".\\\"net_weight\\\")) AS \\\"AVG_STDN\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1377,"status":"B"},{"authorDate":"2017-05-10 11:28:26","commitOrder":1,"curCode":"  @Test public void testMatchRecognizeSubset4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   SUM(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down), stdn2 = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL SUM(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\"), \\\"STDN2\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-16 10:33:38","endLine":1475,"groupId":"4694","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeSubset4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/af/122d58b2d11db6622bcda68bf7c4777ae63219.src","preCode":"  @Test public void testMatchRecognizeSubset4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   SUM(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down), stdn2 = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL SUM(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\"), \\\"STDN2\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1444,"status":"B"}],"commitId":"7a56eb63dfbd3310d14c85270f667eb3f8fa6aa3","commitMessage":"@@@[CALCITE-1644] SUBSET sub-clause of MATCH_RECOGNIZE (Zhiqiang-He)\n\nClose apache/calcite#445\n","date":"2017-05-16 10:33:38","modifiedFileCount":"11","status":"B","submitter":"Zhiqiang-He"},{"authorTime":"2017-05-19 14:52:34","codes":[{"authorDate":"2017-05-19 14:52:34","commitOrder":2,"curCode":"  @Test public void testMatchRecognizeSubset2() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   AVG(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL (SUM(\\\"STDN\\\".\\\"net_weight\\\") / \"\n        + \"COUNT(\\\"STDN\\\".\\\"net_weight\\\")) AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-24 02:28:41","endLine":1472,"groupId":"12915","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeSubset2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cc/fb46e7793076f00b67c96a5e27a4ed198c4878.src","preCode":"  @Test public void testMatchRecognizeSubset2() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   AVG(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL (SUM(\\\"STDN\\\".\\\"net_weight\\\") / \"\n        + \"COUNT(\\\"STDN\\\".\\\"net_weight\\\")) AS \\\"AVG_STDN\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1439,"status":"M"},{"authorDate":"2017-05-19 14:52:34","commitOrder":2,"curCode":"  @Test public void testMatchRecognizeSubset4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   SUM(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down), stdn2 = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL SUM(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\"), \\\"STDN2\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-24 02:28:41","endLine":1540,"groupId":"4694","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeSubset4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cc/fb46e7793076f00b67c96a5e27a4ed198c4878.src","preCode":"  @Test public void testMatchRecognizeSubset4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   SUM(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down), stdn2 = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL SUM(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\"), \\\"STDN2\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1508,"status":"M"}],"commitId":"e117c10cef192ca4ab10ffec2132b7dbd34319fa","commitMessage":"@@@[CALCITE-1645] In MATCH_RECOGNIZE clause.  support ONE ROW PER MATCH and ALL ROWS PER MATCH (Zhiqiang-He)\n\nClose apache/calcite#452\n","date":"2017-05-24 02:28:41","modifiedFileCount":"9","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-07-08 15:34:11","codes":[{"authorDate":"2017-07-08 15:34:11","commitOrder":3,"curCode":"  @Test public void testMatchRecognizeSubset2() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   AVG(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"\\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"SUM(\\\"STDN\\\".\\\"net_weight\\\") / \"\n        + \"COUNT(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-07-09 01:03:23","endLine":1618,"groupId":"12915","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeSubset2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d1/a1b87038071db4c1fa0d4215de14a003278229.src","preCode":"  @Test public void testMatchRecognizeSubset2() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   AVG(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL (SUM(\\\"STDN\\\".\\\"net_weight\\\") / \"\n        + \"COUNT(\\\"STDN\\\".\\\"net_weight\\\")) AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1585,"status":"M"},{"authorDate":"2017-07-08 15:34:11","commitOrder":3,"curCode":"  @Test public void testMatchRecognizeSubset4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   SUM(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down), stdn2 = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"\\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"SUM(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\"), \\\"STDN2\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-07-09 01:03:23","endLine":1686,"groupId":"4694","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeSubset4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d1/a1b87038071db4c1fa0d4215de14a003278229.src","preCode":"  @Test public void testMatchRecognizeSubset4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   SUM(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down), stdn2 = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL SUM(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\"), \\\"STDN2\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1654,"status":"M"}],"commitId":"65d95e6792c002d70d826b049cf16a748fe3109d","commitMessage":"@@@[CALCITE-1871] Nesting LAST within PREV is not parsed correctly for MATCH_RECOGNIZE\n\nClose apache/calcite#494\n","date":"2017-07-09 01:03:23","modifiedFileCount":"3","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-08-15 17:19:00","codes":[{"authorDate":"2017-08-15 17:19:00","commitOrder":4,"curCode":"  @Test public void testMatchRecognizeSubset2() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   AVG(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL (SUM(\\\"STDN\\\".\\\"net_weight\\\") / \"\n        + \"COUNT(\\\"STDN\\\".\\\"net_weight\\\")) AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-08-30 01:11:17","endLine":1806,"groupId":"12915","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeSubset2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/2edfc9de10dcc4d3e8ac90d6dfdc278900b007.src","preCode":"  @Test public void testMatchRecognizeSubset2() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   AVG(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"\\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"SUM(\\\"STDN\\\".\\\"net_weight\\\") / \"\n        + \"COUNT(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1773,"status":"M"},{"authorDate":"2017-08-15 17:19:00","commitOrder":4,"curCode":"  @Test public void testMatchRecognizeSubset4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   SUM(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down), stdn2 = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL SUM(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\"), \\\"STDN2\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-08-30 01:11:17","endLine":1874,"groupId":"4694","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeSubset4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/2edfc9de10dcc4d3e8ac90d6dfdc278900b007.src","preCode":"  @Test public void testMatchRecognizeSubset4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   SUM(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down), stdn2 = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"\\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"SUM(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\"), \\\"STDN2\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1842,"status":"M"}],"commitId":"d3a7c0d794cb9d0079fb37999dcd0dd6992f2041","commitMessage":"@@@[CALCITE-1943] Add back NavigationExpander and NavigationReplacer in SqlValidatorImpl (Dian Fu)\n\nIt will replace clauses such as A.price with PREV(A.price.  0) and\nmakes the implementation of RexVisitor.visitPatternFieldRef(RexPatternFieldRef)\nmore unified.  Otherwise.  it is difficult to implement this method. If\nit returns the specified field.  then the navigation such as\nPREV(A.price.  1) becomes impossible; if not.  then comparisons such as\nA.price > PREV(A.price.  1) becomes meaningless.\n\nClose apache/calcite#516\n","date":"2017-08-30 01:11:17","modifiedFileCount":"3","status":"M","submitter":"Dian Fu"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":5,"curCode":"  @Test void testMatchRecognizeSubset2() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   AVG(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL (SUM(\\\"STDN\\\".\\\"net_weight\\\") / \"\n        + \"COUNT(\\\"STDN\\\".\\\"net_weight\\\")) AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":3980,"groupId":"101578","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeSubset2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testMatchRecognizeSubset2() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   AVG(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL (SUM(\\\"STDN\\\".\\\"net_weight\\\") / \"\n        + \"COUNT(\\\"STDN\\\".\\\"net_weight\\\")) AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3947,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":5,"curCode":"  @Test void testMatchRecognizeSubset4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   SUM(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down), stdn2 = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL SUM(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\"), \\\"STDN2\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":4048,"groupId":"101578","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeSubset4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testMatchRecognizeSubset4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   SUM(STDN.\\\"net_weight\\\") as avg_stdn\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    subset stdn = (strt, down), stdn2 = (strt, down)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL SUM(\\\"STDN\\\".\\\"net_weight\\\") AS \\\"AVG_STDN\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"SUBSET \\\"STDN\\\" = (\\\"DOWN\\\", \\\"STRT\\\"), \\\"STDN2\\\" = (\\\"DOWN\\\", \\\"STRT\\\")\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4016,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
