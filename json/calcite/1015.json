[{"authorTime":"2020-06-24 08:06:50","codes":[{"authorDate":"2020-06-24 08:06:50","commitOrder":1,"curCode":"  @Test void testHoistMySql() {\n    \r\n    \r\n    final String sql = \"select 1 as x,\\n\"\n        + \"  'ab' || 'c' as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and DATEADD(day, 1, hiredate) > date '2010-05-06'\";\n    final SqlDialect dialect = MysqlSqlDialect.DEFAULT;\n    final Hoist.Hoisted hoisted =\n        Hoist.create(Hoist.config()\n            .withParserConfig(\n                dialect.configureParser(SqlParser.configBuilder())\n                    .setParserFactory(SqlBabelParserImpl::new)\n                    .build()))\n            .hoist(sql);\n\n    \r\n    final String expected = \"select ?0 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < ?3\\n\"\n        + \"and DATEADD(day, ?4, hiredate) > ?5\";\n    assertThat(hoisted.toString(), is(expected));\n\n    \r\n    final String expected2 = \"select [0:DECIMAL:1] as x,\\n\"\n        + \"  [1:CHAR:ab] || [2:CHAR:c] as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < [3:DECIMAL:40]\\n\"\n        + \"and DATEADD(day, [4:DECIMAL:1], hiredate) > [5:DATE:2010-05-06]\";\n    assertThat(hoisted.substitute(SqlParserTest::varToStr), is(expected2));\n  }\n","date":"2020-06-25 04:40:14","endLine":322,"groupId":"12760","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testHoistMySql","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/47/d5500f8d0539d38e25c042960601886cb5c35b.src","preCode":"  @Test void testHoistMySql() {\n    \r\n    \r\n    final String sql = \"select 1 as x,\\n\"\n        + \"  'ab' || 'c' as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and DATEADD(day, 1, hiredate) > date '2010-05-06'\";\n    final SqlDialect dialect = MysqlSqlDialect.DEFAULT;\n    final Hoist.Hoisted hoisted =\n        Hoist.create(Hoist.config()\n            .withParserConfig(\n                dialect.configureParser(SqlParser.configBuilder())\n                    .setParserFactory(SqlBabelParserImpl::new)\n                    .build()))\n            .hoist(sql);\n\n    \r\n    final String expected = \"select ?0 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < ?3\\n\"\n        + \"and DATEADD(day, ?4, hiredate) > ?5\";\n    assertThat(hoisted.toString(), is(expected));\n\n    \r\n    final String expected2 = \"select [0:DECIMAL:1] as x,\\n\"\n        + \"  [1:CHAR:ab] || [2:CHAR:c] as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < [3:DECIMAL:40]\\n\"\n        + \"and DATEADD(day, [4:DECIMAL:1], hiredate) > [5:DATE:2010-05-06]\";\n    assertThat(hoisted.substitute(SqlParserTest::varToStr), is(expected2));\n  }\n","realPath":"babel/src/test/java/org/apache/calcite/test/BabelParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"B"},{"authorDate":"2020-06-24 08:06:50","commitOrder":1,"curCode":"  @Test protected void testHoist() {\n    final String sql = \"select 1 as x,\\n\"\n        + \"  'ab' || 'c' as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and hiredate > date '2010-05-06'\";\n    final Hoist.Hoisted hoisted = Hoist.create(Hoist.config()).hoist(sql);\n\n    \r\n    final String expected = \"select ?0 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < ?3\\n\"\n        + \"and hiredate > ?4\";\n    assertThat(hoisted.toString(), is(expected));\n\n    \r\n    assertThat(hoisted.substitute(Hoist::ordinalString), is(expected));\n\n    \r\n    final String expected1 = \"select 1 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and hiredate > date '2010-05-06'\";\n    assertThat(hoisted.substitute(Hoist::ordinalStringIfChar), is(expected1));\n\n    \r\n    final String expected2 = \"select [0:DECIMAL:1] as x,\\n\"\n        + \"  [1:CHAR:ab] || [2:CHAR:c] as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < [3:DECIMAL:40]\\n\"\n        + \"and hiredate > [4:DATE:2010-05-06]\";\n    assertThat(hoisted.substitute(SqlParserTest::varToStr), is(expected2));\n  }\n","date":"2020-06-25 04:40:14","endLine":8838,"groupId":"3462","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testHoist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e5/d3cec4833dbeabaf3d86f5e77beb269f3a2002.src","preCode":"  @Test protected void testHoist() {\n    final String sql = \"select 1 as x,\\n\"\n        + \"  'ab' || 'c' as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and hiredate > date '2010-05-06'\";\n    final Hoist.Hoisted hoisted = Hoist.create(Hoist.config()).hoist(sql);\n\n    \r\n    final String expected = \"select ?0 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < ?3\\n\"\n        + \"and hiredate > ?4\";\n    assertThat(hoisted.toString(), is(expected));\n\n    \r\n    assertThat(hoisted.substitute(Hoist::ordinalString), is(expected));\n\n    \r\n    final String expected1 = \"select 1 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and hiredate > date '2010-05-06'\";\n    assertThat(hoisted.substitute(Hoist::ordinalStringIfChar), is(expected1));\n\n    \r\n    final String expected2 = \"select [0:DECIMAL:1] as x,\\n\"\n        + \"  [1:CHAR:ab] || [2:CHAR:c] as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < [3:DECIMAL:40]\\n\"\n        + \"and hiredate > [4:DATE:2010-05-06]\";\n    assertThat(hoisted.substitute(SqlParserTest::varToStr), is(expected2));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":8804,"status":"B"}],"commitId":"6f90acaaac962f666741dae8fa20170e1d9a71e4","commitMessage":"@@@[CALCITE-4087] Hoist.  a utility to replace literals in a SQL string with placeholders\n","date":"2020-06-25 04:40:14","modifiedFileCount":"2","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-06-24 08:06:50","codes":[{"authorDate":"2020-09-11 16:38:46","commitOrder":2,"curCode":"  @Test void testHoistMySql() {\n    \r\n    \r\n    final String sql = \"select 1 as x,\\n\"\n        + \"  'ab' || 'c' as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and DATEADD(day, 1, hiredate) > date '2010-05-06'\";\n    final SqlDialect dialect = MysqlSqlDialect.DEFAULT;\n    final Hoist.Hoisted hoisted =\n        Hoist.create(Hoist.config()\n            .withParserConfig(\n                dialect.configureParser(SqlParser.config())\n                    .withParserFactory(SqlBabelParserImpl::new)))\n            .hoist(sql);\n\n    \r\n    final String expected = \"select ?0 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < ?3\\n\"\n        + \"and DATEADD(day, ?4, hiredate) > ?5\";\n    assertThat(hoisted.toString(), is(expected));\n\n    \r\n    final String expected2 = \"select [0:DECIMAL:1] as x,\\n\"\n        + \"  [1:CHAR:ab] || [2:CHAR:c] as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < [3:DECIMAL:40]\\n\"\n        + \"and DATEADD(day, [4:DECIMAL:1], hiredate) > [5:DATE:2010-05-06]\";\n    assertThat(hoisted.substitute(SqlParserTest::varToStr), is(expected2));\n  }\n","date":"2020-09-18 10:35:31","endLine":322,"groupId":"1015","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testHoistMySql","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1e/517f69fd20befcf22c12b05462dcfb60fdcc21.src","preCode":"  @Test void testHoistMySql() {\n    \r\n    \r\n    final String sql = \"select 1 as x,\\n\"\n        + \"  'ab' || 'c' as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and DATEADD(day, 1, hiredate) > date '2010-05-06'\";\n    final SqlDialect dialect = MysqlSqlDialect.DEFAULT;\n    final Hoist.Hoisted hoisted =\n        Hoist.create(Hoist.config()\n            .withParserConfig(\n                dialect.configureParser(SqlParser.configBuilder())\n                    .setParserFactory(SqlBabelParserImpl::new)\n                    .build()))\n            .hoist(sql);\n\n    \r\n    final String expected = \"select ?0 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < ?3\\n\"\n        + \"and DATEADD(day, ?4, hiredate) > ?5\";\n    assertThat(hoisted.toString(), is(expected));\n\n    \r\n    final String expected2 = \"select [0:DECIMAL:1] as x,\\n\"\n        + \"  [1:CHAR:ab] || [2:CHAR:c] as y\\n\"\n        + \"from `my emp` /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < [3:DECIMAL:40]\\n\"\n        + \"and DATEADD(day, [4:DECIMAL:1], hiredate) > [5:DATE:2010-05-06]\";\n    assertThat(hoisted.substitute(SqlParserTest::varToStr), is(expected2));\n  }\n","realPath":"babel/src/test/java/org/apache/calcite/test/BabelParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"M"},{"authorDate":"2020-06-24 08:06:50","commitOrder":2,"curCode":"  @Test protected void testHoist() {\n    final String sql = \"select 1 as x,\\n\"\n        + \"  'ab' || 'c' as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and hiredate > date '2010-05-06'\";\n    final Hoist.Hoisted hoisted = Hoist.create(Hoist.config()).hoist(sql);\n\n    \r\n    final String expected = \"select ?0 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < ?3\\n\"\n        + \"and hiredate > ?4\";\n    assertThat(hoisted.toString(), is(expected));\n\n    \r\n    assertThat(hoisted.substitute(Hoist::ordinalString), is(expected));\n\n    \r\n    final String expected1 = \"select 1 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and hiredate > date '2010-05-06'\";\n    assertThat(hoisted.substitute(Hoist::ordinalStringIfChar), is(expected1));\n\n    \r\n    final String expected2 = \"select [0:DECIMAL:1] as x,\\n\"\n        + \"  [1:CHAR:ab] || [2:CHAR:c] as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < [3:DECIMAL:40]\\n\"\n        + \"and hiredate > [4:DATE:2010-05-06]\";\n    assertThat(hoisted.substitute(SqlParserTest::varToStr), is(expected2));\n  }\n","date":"2020-06-25 04:40:14","endLine":8838,"groupId":"1015","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testHoist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e5/d3cec4833dbeabaf3d86f5e77beb269f3a2002.src","preCode":"  @Test protected void testHoist() {\n    final String sql = \"select 1 as x,\\n\"\n        + \"  'ab' || 'c' as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and hiredate > date '2010-05-06'\";\n    final Hoist.Hoisted hoisted = Hoist.create(Hoist.config()).hoist(sql);\n\n    \r\n    final String expected = \"select ?0 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < ?3\\n\"\n        + \"and hiredate > ?4\";\n    assertThat(hoisted.toString(), is(expected));\n\n    \r\n    assertThat(hoisted.substitute(Hoist::ordinalString), is(expected));\n\n    \r\n    final String expected1 = \"select 1 as x,\\n\"\n        + \"  ?1 || ?2 as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < 40\\n\"\n        + \"and hiredate > date '2010-05-06'\";\n    assertThat(hoisted.substitute(Hoist::ordinalStringIfChar), is(expected1));\n\n    \r\n    final String expected2 = \"select [0:DECIMAL:1] as x,\\n\"\n        + \"  [1:CHAR:ab] || [2:CHAR:c] as y\\n\"\n        + \"from emp /* comment with 'quoted string'? */ as e\\n\"\n        + \"where deptno < [3:DECIMAL:40]\\n\"\n        + \"and hiredate > [4:DATE:2010-05-06]\";\n    assertThat(hoisted.substitute(SqlParserTest::varToStr), is(expected2));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":8804,"status":"N"}],"commitId":"76ff19135f8bf9ee19b47d999d23bc1e2ab75e15","commitMessage":"@@@[CALCITE-4248] Deprecate SqlParser.ConfigBuilder\n","date":"2020-09-18 10:35:31","modifiedFileCount":"20","status":"M","submitter":"Julian Hyde"}]
