[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"      SqlUtil.unparseBinarySyntax(operator, call, writer, leftPrec, rightPrec);\n    }\n  },\n\n  \r\n\n  PREFIX {\n    public void unparse(\n        SqlWriter writer,\n        SqlOperator operator,\n        SqlCall call,\n        int leftPrec,\n        int rightPrec) {\n      assert call.operandCount() == 1;\n      writer.keyword(operator.getName());\n      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n    }\n  },\n","date":"2014-11-14 09:39:34","endLine":83,"groupId":"10281","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"unparseBinarySyntax","params":"(operator@call@writer@leftPrec@rightPrec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a1/981500cb4d57747aeee55f29fddd4950403f02.src","preCode":"      SqlUtil.unparseBinarySyntax(operator, call, writer, leftPrec, rightPrec);\n    }\n  },\n\n  \r\n\n  PREFIX {\n    public void unparse(\n        SqlWriter writer,\n        SqlOperator operator,\n        SqlCall call,\n        int leftPrec,\n        int rightPrec) {\n      assert call.operandCount() == 1;\n      writer.keyword(operator.getName());\n      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n    }\n  },\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlSyntax.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n    }\n  },\n\n  \r\n\n  POSTFIX {\n    public void unparse(\n        SqlWriter writer,\n        SqlOperator operator,\n        SqlCall call,\n        int leftPrec,\n        int rightPrec) {\n      assert call.operandCount() == 1;\n      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n      writer.keyword(operator.getName());\n    }\n  },\n","date":"2014-11-14 09:39:34","endLine":100,"groupId":"10283","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"unparse","params":"(writer@operator.getLeftPrec()@operator.getRightPrec())","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a1/981500cb4d57747aeee55f29fddd4950403f02.src","preCode":"      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n    }\n  },\n\n  \r\n\n  POSTFIX {\n    public void unparse(\n        SqlWriter writer,\n        SqlOperator operator,\n        SqlCall call,\n        int leftPrec,\n        int rightPrec) {\n      assert call.operandCount() == 1;\n      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n      writer.keyword(operator.getName());\n    }\n  },\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlSyntax.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"      SqlUtil.unparseBinarySyntax(operator, call, writer, leftPrec, rightPrec);\n    }\n  },\n\n  \r\n\n  PREFIX {\n    @Override public void unparse(\n        SqlWriter writer,\n        SqlOperator operator,\n        SqlCall call,\n        int leftPrec,\n        int rightPrec) {\n      assert call.operandCount() == 1;\n      writer.keyword(operator.getName());\n      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n    }\n  },\n","date":"2020-10-07 05:42:47","endLine":84,"groupId":"101749","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"unparseBinarySyntax","params":"(operator@call@writer@leftPrec@rightPrec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d4/3484d61f1ce41740de03ba2c3e8ab4b176b393.src","preCode":"      SqlUtil.unparseBinarySyntax(operator, call, writer, leftPrec, rightPrec);\n    }\n  },\n\n  \r\n\n  PREFIX {\n    public void unparse(\n        SqlWriter writer,\n        SqlOperator operator,\n        SqlCall call,\n        int leftPrec,\n        int rightPrec) {\n      assert call.operandCount() == 1;\n      writer.keyword(operator.getName());\n      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n    }\n  },\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlSyntax.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n    }\n  },\n\n  \r\n\n  POSTFIX {\n    @Override public void unparse(\n        SqlWriter writer,\n        SqlOperator operator,\n        SqlCall call,\n        int leftPrec,\n        int rightPrec) {\n      assert call.operandCount() == 1;\n      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n      writer.keyword(operator.getName());\n    }\n  },\n","date":"2020-10-07 05:42:47","endLine":101,"groupId":"101749","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"unparse","params":"(writer@operator.getLeftPrec()@operator.getRightPrec())","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d4/3484d61f1ce41740de03ba2c3e8ab4b176b393.src","preCode":"      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n    }\n  },\n\n  \r\n\n  POSTFIX {\n    public void unparse(\n        SqlWriter writer,\n        SqlOperator operator,\n        SqlCall call,\n        int leftPrec,\n        int rightPrec) {\n      assert call.operandCount() == 1;\n      call.operand(0).unparse(writer, operator.getLeftPrec(),\n          operator.getRightPrec());\n      writer.keyword(operator.getName());\n    }\n  },\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlSyntax.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
