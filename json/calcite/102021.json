[{"authorTime":"2014-11-14 10:11:34","codes":[{"authorDate":"2014-11-14 10:11:34","commitOrder":2,"curCode":"  public void onMatch(RelOptRuleCall call) {\n    final LogicalProject project = call.rel(0);\n    final RelNode child = project.getInput();\n    final RelDataType rowType = project.getRowType();\n    final RexProgram program =\n        RexProgram.create(\n            child.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final LogicalCalc calc =\n        new LogicalCalc(\n            project.getCluster(),\n            project.getTraitSet(),\n            child,\n            rowType,\n            program,\n            ImmutableList.<RelCollation>of());\n    call.transformTo(calc);\n  }\n","date":"2014-11-14 10:22:06","endLine":77,"groupId":"7784","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onMatch","params":"(RelOptRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c6/fc5fe08d4b3136aeeadd6f2b028c3f9c874c4b.src","preCode":"  public void onMatch(RelOptRuleCall call) {\n    final LogicalProject project = call.rel(0);\n    final RelNode child = project.getInput();\n    final RelDataType rowType = project.getRowType();\n    final RexProgram program =\n        RexProgram.create(\n            child.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final LogicalCalc calc =\n        new LogicalCalc(\n            project.getCluster(),\n            project.getTraitSet(),\n            child,\n            rowType,\n            program,\n            ImmutableList.<RelCollation>of());\n    call.transformTo(calc);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/rules/ProjectToCalcRule.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"MB"},{"authorDate":"2014-11-14 10:11:34","commitOrder":2,"curCode":"  public void onMatch(RelOptRuleCall call) {\n    final EnumerableProject project = call.rel(0);\n    final RelNode child = project.getInput();\n    final RelDataType rowType = project.getRowType();\n    final RexProgram program =\n        RexProgram.create(child.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final EnumerableCalc calc =\n        new EnumerableCalc(\n            project.getCluster(),\n            project.getTraitSet(),\n            child,\n            rowType,\n            program,\n            ImmutableList.<RelCollation>of());\n    call.transformTo(calc);\n  }\n","date":"2014-11-14 10:22:06","endLine":54,"groupId":"7784","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onMatch","params":"(RelOptRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/98/8eb46876d70f208c84b79e4881dfcff2711f5e.src","preCode":"  public void onMatch(RelOptRuleCall call) {\n    final EnumerableProject project = call.rel(0);\n    final RelNode child = project.getInput();\n    final RelDataType rowType = project.getRowType();\n    final RexProgram program =\n        RexProgram.create(child.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final EnumerableCalc calc =\n        new EnumerableCalc(\n            project.getCluster(),\n            project.getTraitSet(),\n            child,\n            rowType,\n            program,\n            ImmutableList.<RelCollation>of());\n    call.transformTo(calc);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableProjectToCalcRule.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"}],"commitId":"a0ba73cd2de76696b96a1cd828d2aa4d3ef9eb55","commitMessage":"@@@[CALCITE-306] Standardize code style for \"import package.*;\"\n\nRename classes and packages and generally fix things up after [CALCITE-296] and [CALCITE-419].\n\nMake many inner classes of EnumerableRules (e.g. EnumerableFilter.  EnumerableFilterRule) top-level classes.\n\nApply a consistent formatting convention for string literals split over multiple lines.\n\nRename generated file org.eigenbase.resource.Resources to org.apache.calcite.runtime.Resources.\n\nChange occurrences of \"optiq\" and \"eigenbase\" in java code to \"calcite\".\n","date":"2014-11-14 10:22:06","modifiedFileCount":"1156","status":"M","submitter":"Julian Hyde"},{"authorTime":"2014-12-14 21:27:35","codes":[{"authorDate":"2014-12-14 21:27:35","commitOrder":3,"curCode":"  public void onMatch(RelOptRuleCall call) {\n    final LogicalProject project = call.rel(0);\n    final RelNode child = project.getInput();\n    final RexProgram program =\n        RexProgram.create(\n            child.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final LogicalCalc calc =\n        new LogicalCalc(\n            project.getCluster(),\n            project.getTraitSet(),\n            child,\n            program,\n            ImmutableList.<RelCollation>of());\n    call.transformTo(calc);\n  }\n","date":"2014-12-14 21:28:54","endLine":74,"groupId":"7784","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onMatch","params":"(RelOptRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/62/33fc1611dc5da8c1ca779aabbc66f404c71d16.src","preCode":"  public void onMatch(RelOptRuleCall call) {\n    final LogicalProject project = call.rel(0);\n    final RelNode child = project.getInput();\n    final RelDataType rowType = project.getRowType();\n    final RexProgram program =\n        RexProgram.create(\n            child.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final LogicalCalc calc =\n        new LogicalCalc(\n            project.getCluster(),\n            project.getTraitSet(),\n            child,\n            rowType,\n            program,\n            ImmutableList.<RelCollation>of());\n    call.transformTo(calc);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/rules/ProjectToCalcRule.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2014-12-14 21:27:35","commitOrder":3,"curCode":"  public void onMatch(RelOptRuleCall call) {\n    final EnumerableProject project = call.rel(0);\n    final RelNode child = project.getInput();\n    final RexProgram program =\n        RexProgram.create(child.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final EnumerableCalc calc =\n        new EnumerableCalc(\n            project.getCluster(),\n            project.getTraitSet(),\n            child,\n            program,\n            ImmutableList.<RelCollation>of());\n    call.transformTo(calc);\n  }\n","date":"2014-12-14 21:28:54","endLine":51,"groupId":"7784","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onMatch","params":"(RelOptRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c6/54d195e7380db414c3a1fa960e963355929a16.src","preCode":"  public void onMatch(RelOptRuleCall call) {\n    final EnumerableProject project = call.rel(0);\n    final RelNode child = project.getInput();\n    final RelDataType rowType = project.getRowType();\n    final RexProgram program =\n        RexProgram.create(child.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final EnumerableCalc calc =\n        new EnumerableCalc(\n            project.getCluster(),\n            project.getTraitSet(),\n            child,\n            rowType,\n            program,\n            ImmutableList.<RelCollation>of());\n    call.transformTo(calc);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableProjectToCalcRule.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"076ac11a8b8eddb3200f199051414421db7fbdad","commitMessage":"@@@[CALCITE-527] Drop rowType field and constructor/copy argument of Calc\n","date":"2014-12-14 21:28:54","modifiedFileCount":"17","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2014-12-14 15:49:02","codes":[{"authorDate":"2014-12-14 15:49:02","commitOrder":4,"curCode":"  public void onMatch(RelOptRuleCall call) {\n    final LogicalProject project = call.rel(0);\n    final RelNode input = project.getInput();\n    final RexProgram program =\n        RexProgram.create(\n            input.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final LogicalCalc calc = LogicalCalc.create(input, program);\n    call.transformTo(calc);\n  }\n","date":"2015-02-08 16:45:51","endLine":65,"groupId":"1277","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onMatch","params":"(RelOptRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f05c9ddd566a42d2265a2919d37e771404ee76.src","preCode":"  public void onMatch(RelOptRuleCall call) {\n    final LogicalProject project = call.rel(0);\n    final RelNode child = project.getInput();\n    final RexProgram program =\n        RexProgram.create(\n            child.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final LogicalCalc calc =\n        new LogicalCalc(\n            project.getCluster(),\n            project.getTraitSet(),\n            child,\n            program,\n            ImmutableList.<RelCollation>of());\n    call.transformTo(calc);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/rules/ProjectToCalcRule.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2014-12-14 15:49:02","commitOrder":4,"curCode":"  public void onMatch(RelOptRuleCall call) {\n    final EnumerableProject project = call.rel(0);\n    final RelNode input = project.getInput();\n    final RexProgram program =\n        RexProgram.create(input.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final EnumerableCalc calc = EnumerableCalc.create(input, program);\n    call.transformTo(calc);\n  }\n","date":"2015-02-08 16:45:51","endLine":42,"groupId":"1277","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"onMatch","params":"(RelOptRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2e/1a4a826bfe50a2291f24f161b47c13d8107775.src","preCode":"  public void onMatch(RelOptRuleCall call) {\n    final EnumerableProject project = call.rel(0);\n    final RelNode child = project.getInput();\n    final RexProgram program =\n        RexProgram.create(child.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final EnumerableCalc calc =\n        new EnumerableCalc(\n            project.getCluster(),\n            project.getTraitSet(),\n            child,\n            program,\n            ImmutableList.<RelCollation>of());\n    call.transformTo(calc);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableProjectToCalcRule.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"}],"commitId":"2709896eb176c14605b1ddc4be57d916ebeb0fe8","commitMessage":"@@@[CALCITE-88] Add collation as a trait and a kind of RelNode metadata\n\n[CALCITE-526] Add EnumerableMergeJoin.  which exploits sorted inputs\n\n[CALCITE-71] Provide a way to declare that tables are sorted\n\n[CALCITE-576] Make RelCollation trait and AbstractRelNode.getCollationList consistent\n\n[CALCITE-581] Add LogicalSort relational expression.  and make Sort abstract\n\n[CALCITE-254] Propagate RelCollation on aliased columns in JoinRule\n\n[CALCITE-569] ArrayIndexOutOfBoundsException when deducing collation\n\nMore efficient algorithm to check for cycles in the tree of equivalence sets.\n\nFilterJoinRule now propagates traits.\n\nOrd.zip returns random-access list.\n\nReplace references to \"Bug#upgrade\" with \"Deprecated // to be removed before ...\"\n\nAdd composite traits (RelCompositeTrait); subsets only ever have a simple trait.  but other RelNodes can have multiple traits.  and appear in each subset that those traits. Each composite trait is canonized within its trait definition.  and each of the component traits.\n\nRename RelTraitSet.subsumes and RelTrait.subsumes to satisfies.\n","date":"2015-02-08 16:45:51","modifiedFileCount":"128","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-07-09 05:31:40","codes":[{"authorDate":"2020-07-09 05:31:40","commitOrder":5,"curCode":"  @Override public void onMatch(RelOptRuleCall call) {\n    final LogicalProject project = call.rel(0);\n    final RelNode input = project.getInput();\n    final RexProgram program =\n        RexProgram.create(\n            input.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final LogicalCalc calc = LogicalCalc.create(input, program);\n    call.transformTo(calc);\n  }\n","date":"2020-07-29 02:27:24","endLine":70,"groupId":"102021","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"onMatch","params":"(RelOptRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ba/5f382e4f3b7884171a3f588a18abba4730f604.src","preCode":"  public void onMatch(RelOptRuleCall call) {\n    final LogicalProject project = call.rel(0);\n    final RelNode input = project.getInput();\n    final RexProgram program =\n        RexProgram.create(\n            input.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final LogicalCalc calc = LogicalCalc.create(input, program);\n    call.transformTo(calc);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/rules/ProjectToCalcRule.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2020-07-09 05:31:40","commitOrder":5,"curCode":"  @Override public void onMatch(RelOptRuleCall call) {\n    final EnumerableProject project = call.rel(0);\n    final RelNode input = project.getInput();\n    final RexProgram program =\n        RexProgram.create(input.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final EnumerableCalc calc = EnumerableCalc.create(input, program);\n    call.transformTo(calc);\n  }\n","date":"2020-07-29 02:27:24","endLine":52,"groupId":"102021","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"onMatch","params":"(RelOptRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/dd/344ba29aff8195ff96782f72bbf3214c25eae3.src","preCode":"  public void onMatch(RelOptRuleCall call) {\n    final EnumerableProject project = call.rel(0);\n    final RelNode input = project.getInput();\n    final RexProgram program =\n        RexProgram.create(input.getRowType(),\n            project.getProjects(),\n            null,\n            project.getRowType(),\n            project.getCluster().getRexBuilder());\n    final EnumerableCalc calc = EnumerableCalc.create(input, program);\n    call.transformTo(calc);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableProjectToCalcRule.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"}],"commitId":"998cd83ebe2fcd7ff3ee565299fed6e199269715","commitMessage":"@@@[CALCITE-3923] Refactor how planner rules are parameterized\n\nCreate operands using a builder interface.  OperandBuilder.  and\ndeprecate methods RelOptRule.operand etc.\n\nThe change is backwards compatible.  in the sense that\nexisting rule constructors are deprecated but still work.\nFrom now on.  to create rules.  call RelOptRule.Config.toRule()\n(which calls the rule's (Config) constructor).\n\nSub-classes of ConverterRule are a little different.  They\ndon't need their own sub-class of Config.  You just need to\ncall Config.withRuleFactory to specify the constructor of the\nsub-class of ConverterRule.\n\nMove rule instances into holder classes such as CoreRules. \nMaterializedViewRules. Deprecate existing rule INSTANCE fields\n(to be removed in 1.25). Deprecate previous rule constructors\n(to be removed in 2.0).\n\nDescribe how to write rules in howto and tutorial.\n\nRemove rule instances marked 'deprecated.  to be removed before\n1.25'.\n\nClose apache/calcite#2024\n","date":"2020-07-29 02:27:24","modifiedFileCount":"191","status":"M","submitter":"Julian Hyde"}]
