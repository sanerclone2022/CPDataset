[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  Set<RelNode> getParents() {\n    final Set<RelNode> list = new LinkedHashSet<RelNode>();\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && rel.getTraitSet().equals(traitSet)) {\n          list.add(parent);\n        }\n      }\n    }\n    return list;\n  }\n","date":"2014-11-14 09:39:34","endLine":197,"groupId":"9614","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getParents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/7d/299506dd5f7c97e975245ac546f39221d928d5.src","preCode":"  Set<RelNode> getParents() {\n    final Set<RelNode> list = new LinkedHashSet<RelNode>();\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && rel.getTraitSet().equals(traitSet)) {\n          list.add(parent);\n        }\n      }\n    }\n    return list;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/volcano/RelSubset.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public Collection<RelNode> getParentRels() {\n    final Set<RelNode> list = new LinkedHashSet<RelNode>();\n  parentLoop:\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && rel.getTraitSet().equals(traitSet)) {\n          list.add(parent);\n          continue parentLoop;\n        }\n      }\n    }\n    return list;\n  }\n","date":"2014-11-14 09:39:34","endLine":236,"groupId":"9614","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getParentRels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/7d/299506dd5f7c97e975245ac546f39221d928d5.src","preCode":"  public Collection<RelNode> getParentRels() {\n    final Set<RelNode> list = new LinkedHashSet<RelNode>();\n  parentLoop:\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && rel.getTraitSet().equals(traitSet)) {\n          list.add(parent);\n          continue parentLoop;\n        }\n      }\n    }\n    return list;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/volcano/RelSubset.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2015-10-24 02:08:16","codes":[{"authorDate":"2015-10-24 02:08:16","commitOrder":2,"curCode":"  Set<RelNode> getParents() {\n    final Set<RelNode> list = new LinkedHashSet<RelNode>();\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && traitSet.satisfies(rel.getTraitSet())) {\n          list.add(parent);\n        }\n      }\n    }\n    return list;\n  }\n","date":"2015-10-24 02:08:16","endLine":207,"groupId":"9614","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getParents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0e/cc26456411053c8db7b77fc3950a78e1f12fcf.src","preCode":"  Set<RelNode> getParents() {\n    final Set<RelNode> list = new LinkedHashSet<RelNode>();\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && rel.getTraitSet().equals(traitSet)) {\n          list.add(parent);\n        }\n      }\n    }\n    return list;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/volcano/RelSubset.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"},{"authorDate":"2015-10-24 02:08:16","commitOrder":2,"curCode":"  public Collection<RelNode> getParentRels() {\n    final Set<RelNode> list = new LinkedHashSet<RelNode>();\n  parentLoop:\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && traitSet.satisfies(rel.getTraitSet())) {\n          list.add(parent);\n          continue parentLoop;\n        }\n      }\n    }\n    return list;\n  }\n","date":"2015-10-24 02:08:16","endLine":246,"groupId":"9614","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getParentRels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0e/cc26456411053c8db7b77fc3950a78e1f12fcf.src","preCode":"  public Collection<RelNode> getParentRels() {\n    final Set<RelNode> list = new LinkedHashSet<RelNode>();\n  parentLoop:\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && rel.getTraitSet().equals(traitSet)) {\n          list.add(parent);\n          continue parentLoop;\n        }\n      }\n    }\n    return list;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/volcano/RelSubset.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"}],"commitId":"2c339be180d67853431387c26f8ed6726148f2cc","commitMessage":"@@@ [CALCITE-926] Rules fail to match because of missing link to parent equivalence set (Maryann Xue)\n","date":"2015-10-24 02:08:16","modifiedFileCount":"3","status":"M","submitter":"maryannxue"},{"authorTime":"2015-07-12 05:56:42","codes":[{"authorDate":"2015-07-12 05:56:42","commitOrder":3,"curCode":"  Set<RelNode> getParents() {\n    final Set<RelNode> list = new LinkedHashSet<>();\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && traitSet.satisfies(rel.getTraitSet())) {\n          list.add(parent);\n        }\n      }\n    }\n    return list;\n  }\n","date":"2016-01-10 16:51:25","endLine":206,"groupId":"9614","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getParents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/1390b662d31d12e169f7247ce28e3df0d9a439.src","preCode":"  Set<RelNode> getParents() {\n    final Set<RelNode> list = new LinkedHashSet<RelNode>();\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && traitSet.satisfies(rel.getTraitSet())) {\n          list.add(parent);\n        }\n      }\n    }\n    return list;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/volcano/RelSubset.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"},{"authorDate":"2015-07-12 05:56:42","commitOrder":3,"curCode":"  public Collection<RelNode> getParentRels() {\n    final Set<RelNode> list = new LinkedHashSet<>();\n  parentLoop:\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && traitSet.satisfies(rel.getTraitSet())) {\n          list.add(parent);\n          continue parentLoop;\n        }\n      }\n    }\n    return list;\n  }\n","date":"2016-01-10 16:51:25","endLine":245,"groupId":"9614","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getParentRels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/1390b662d31d12e169f7247ce28e3df0d9a439.src","preCode":"  public Collection<RelNode> getParentRels() {\n    final Set<RelNode> list = new LinkedHashSet<RelNode>();\n  parentLoop:\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && traitSet.satisfies(rel.getTraitSet())) {\n          list.add(parent);\n          continue parentLoop;\n        }\n      }\n    }\n    return list;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/volcano/RelSubset.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"}],"commitId":"cabdcf44e4aec4d4ceea7f97c8c6fd9e9dbd36b1","commitMessage":"@@@[CALCITE-794] Detect cycles when computing statistics\n\nMake RelMetadataQuery methods non-static. Each active call is\nregistered in the RelMetadataQuery instance; it throws\nCyclicMetadataException when it detects a cycle.  and the caller can\ncatch it to return a sensible default value for the particular kind of\nmetadata.\n\nChange signature of FlatLists.of(Object...) to\nFlatLists.copyOf(Comparable...).\n\nTemporarily disable all failing tests.\n\nAdd metadata for EnumerableLimit.\n","date":"2016-01-10 16:51:25","modifiedFileCount":"122","status":"M","submitter":"Julian Hyde"},{"authorTime":"2015-07-12 05:56:42","codes":[{"authorDate":"2017-12-19 20:57:27","commitOrder":4,"curCode":"  Set<RelNode> getParents() {\n    final Set<RelNode> list = new LinkedHashSet<>();\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        \r\n        if (rel == this) {\n          list.add(parent);\n        }\n      }\n    }\n    return list;\n  }\n","date":"2019-10-30 11:58:20","endLine":220,"groupId":"101884","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getParents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c9/5deb772637fa2d61c4bb9ac191d9398740e9a7.src","preCode":"  Set<RelNode> getParents() {\n    final Set<RelNode> list = new LinkedHashSet<>();\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && traitSet.satisfies(rel.getTraitSet())) {\n          list.add(parent);\n        }\n      }\n    }\n    return list;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/volcano/RelSubset.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"},{"authorDate":"2015-07-12 05:56:42","commitOrder":4,"curCode":"  public Collection<RelNode> getParentRels() {\n    final Set<RelNode> list = new LinkedHashSet<>();\n  parentLoop:\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && traitSet.satisfies(rel.getTraitSet())) {\n          list.add(parent);\n          continue parentLoop;\n        }\n      }\n    }\n    return list;\n  }\n","date":"2016-01-10 16:51:25","endLine":245,"groupId":"101884","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getParentRels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/1390b662d31d12e169f7247ce28e3df0d9a439.src","preCode":"  public Collection<RelNode> getParentRels() {\n    final Set<RelNode> list = new LinkedHashSet<>();\n  parentLoop:\n    for (RelNode parent : set.getParentRels()) {\n      for (RelSubset rel : inputSubsets(parent)) {\n        if (rel.set == set && traitSet.satisfies(rel.getTraitSet())) {\n          list.add(parent);\n          continue parentLoop;\n        }\n      }\n    }\n    return list;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/volcano/RelSubset.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"N"}],"commitId":"e0d869ab8e540dec71b9278f5a3202df4a2dfb5c","commitMessage":"@@@[CALCITE-2018] Queries failed with AssertionError: rel has lower cost than best cost of subset\n\n* Replaced Map usage by Table for query metadata caching. It allows finding cached metadata query for concrete RelNode instance more easily.\n* Made changes to use single RelMetadataQuery instance during planning between the first call of RelOptCluster.getMetadataQuery() and RelOptCluster.invalidateMetadataQuery() call.\n* Cached metadata values are removed for current RelSubset and all parent RelNodes when RelSubset.propagateCostImprovements() is called and best rel node was changed.\n* Made changes in RelSet.mergeWith() method to call RelSubset.propagateCostImprovements() when resulting best is known instead of just assigning RelSubset.best.\n\nclose apache/calcite#552\n","date":"2019-10-30 11:58:20","modifiedFileCount":"10","status":"M","submitter":"Volodymyr Vysotskyi"}]
