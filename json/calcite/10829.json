[{"authorTime":"2018-08-02 20:17:04","codes":[{"authorDate":"2018-08-02 20:17:04","commitOrder":2,"curCode":"  @Test public void testNestSchema() throws Exception {\n    String sql;\n    sql = \"select * from sales.n^\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"nest\"));\n\n    sql = \"select * from sales.\\\"n^asfasdf\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"\\\"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"\\\"NEST\\\"\"));\n\n    sql = \"select * from sales.n^est\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"nest\"));\n\n    sql = \"select * from sales.nu^\";\n    assertComplete(sql, \"\", \"nu\");\n  }\n","date":"2018-09-05 20:24:24","endLine":1377,"groupId":"9241","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1e/3b959a5811c0aba2ad1f2db1d1ba1ea3c17465.src","preCode":"  @Test public void testNestSchema() throws Exception {\n    String sql;\n    sql = \"select * from sales.n^\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"nest\"));\n\n    sql = \"select * from sales.\\\"n^asfasdf\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"\\\"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"\\\"NEST\\\"\"));\n\n    sql = \"select * from sales.n^est\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"nest\"));\n\n    sql = \"select * from sales.nu^\";\n    assertComplete(sql, \"\", \"nu\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1352,"status":"MB"},{"authorDate":"2018-08-02 20:17:04","commitOrder":2,"curCode":"  @WithLex(Lex.SQL_SERVER) @Test public void testNestSchemaSqlServer() throws Exception {\n    String sql;\n    sql = \"select * from SALES.N^\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"N\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"NEST\"));\n\n    sql = \"select * from SALES.[n^asfasdf\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"[n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"[NEST]\"));\n\n    sql = \"select * from SALES.[N^est\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"[N\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"[NEST]\"));\n\n    sql = \"select * from SALES.NU^\";\n    assertComplete(sql, \"\", \"NU\");\n  }\n","date":"2018-09-05 20:24:24","endLine":1473,"groupId":"9241","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestSchemaSqlServer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1e/3b959a5811c0aba2ad1f2db1d1ba1ea3c17465.src","preCode":"  @WithLex(Lex.SQL_SERVER) @Test public void testNestSchemaSqlServer() throws Exception {\n    String sql;\n    sql = \"select * from SALES.N^\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"N\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"NEST\"));\n\n    sql = \"select * from SALES.[n^asfasdf\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"[n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"[NEST]\"));\n\n    sql = \"select * from SALES.[N^est\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"[N\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"[NEST]\"));\n\n    sql = \"select * from SALES.NU^\";\n    assertComplete(sql, \"\", \"NU\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1448,"status":"B"}],"commitId":"1ed6b75717d154b046f0ba3df30e88f91811536c","commitMessage":"@@@[CALCITE-2434] SqlAdvisor: support hints for nested tables/schemas\n","date":"2018-09-05 20:24:24","modifiedFileCount":"7","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testNestSchema() throws Exception {\n    String sql;\n    sql = \"select * from sales.n^\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"nest\"));\n\n    sql = \"select * from sales.\\\"n^asfasdf\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"\\\"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"\\\"NEST\\\"\"));\n\n    sql = \"select * from sales.n^est\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"nest\"));\n\n    sql = \"select * from sales.nu^\";\n    assertComplete(sql, \"\", \"nu\");\n  }\n","date":"2020-04-06 04:57:49","endLine":1457,"groupId":"10829","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/51/f4a863b5b2b9aa906de4d1fbaf5b5c11985d58.src","preCode":"  @Test public void testNestSchema() throws Exception {\n    String sql;\n    sql = \"select * from sales.n^\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"nest\"));\n\n    sql = \"select * from sales.\\\"n^asfasdf\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"\\\"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"\\\"NEST\\\"\"));\n\n    sql = \"select * from sales.n^est\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"nest\"));\n\n    sql = \"select * from sales.nu^\";\n    assertComplete(sql, \"\", \"nu\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1432,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @WithLex(Lex.SQL_SERVER) @Test void testNestSchemaSqlServer() throws Exception {\n    String sql;\n    sql = \"select * from SALES.N^\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"N\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"NEST\"));\n\n    sql = \"select * from SALES.[n^asfasdf\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"[n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"[NEST]\"));\n\n    sql = \"select * from SALES.[N^est\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"[N\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"[NEST]\"));\n\n    sql = \"select * from SALES.NU^\";\n    assertComplete(sql, \"\", \"NU\");\n  }\n","date":"2020-04-06 04:57:49","endLine":1553,"groupId":"10829","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestSchemaSqlServer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/51/f4a863b5b2b9aa906de4d1fbaf5b5c11985d58.src","preCode":"  @WithLex(Lex.SQL_SERVER) @Test public void testNestSchemaSqlServer() throws Exception {\n    String sql;\n    sql = \"select * from SALES.N^\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"N\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"NEST\"));\n\n    sql = \"select * from SALES.[n^asfasdf\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"[n\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"[NEST]\"));\n\n    sql = \"select * from SALES.[N^est\";\n    assertComplete(\n        sql,\n        \"SCHEMA(CATALOG.SALES.NEST)\\n\",\n        \"[N\",\n        ImmutableMap.of(\"SCHEMA(CATALOG.SALES.NEST)\", \"[NEST]\"));\n\n    sql = \"select * from SALES.NU^\";\n    assertComplete(sql, \"\", \"NU\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlAdvisorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1528,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
