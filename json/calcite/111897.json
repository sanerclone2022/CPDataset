[{"authorTime":"2019-12-30 14:56:13","codes":[{"authorDate":"2019-12-17 11:45:04","commitOrder":2,"curCode":"    protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      inheritPaths.forEach(inheritPath -> inheritPath.right.push(i));\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        inheritPaths.forEach(inheritPath -> inheritPath.right.pop());\n      }\n    }\n","date":"2019-12-18 11:01:50","endLine":3782,"groupId":"1794","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitChild","params":"(RelNodeparent@inti@RelNodechild)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d5/7b5a5c18ab95c39494ac65375e9d7187cc37fa.src","preCode":"    protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      inheritPaths.forEach(inheritPath -> inheritPath.right.push(i));\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        inheritPaths.forEach(inheritPath -> inheritPath.right.pop());\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3769,"status":"NB"},{"authorDate":"2019-12-30 14:56:13","commitOrder":2,"curCode":"    protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      appendPath.add(i);\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        \r\n        appendPath.remove(appendPath.size() - 1);\n      }\n    }\n","date":"2019-12-31 16:40:49","endLine":3978,"groupId":"1794","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitChild","params":"(RelNodeparent@inti@RelNodechild)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a9/65a23b06e1bdfa1f08bfa07497aa075ac55e87.src","preCode":"    protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      appendPath.add(i);\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        \r\n        appendPath.remove(appendPath.size() - 1);\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3964,"status":"B"}],"commitId":"a54cb0a587c32e002ba21b8dba2ceab24cade087","commitMessage":"@@@[CALCITE-3649] Hints should be propagated correctly in planner rules if original node is transformed to different kind\n\nIn planner rules.  before registering the new rel to the planner. \ncopy the hints to the new rel sub-tree.\n","date":"2019-12-31 16:40:49","modifiedFileCount":"8","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":3,"curCode":"    @Override protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      inheritPaths.forEach(inheritPath -> inheritPath.right.push(i));\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        inheritPaths.forEach(inheritPath -> inheritPath.right.pop());\n      }\n    }\n","date":"2020-10-07 05:42:47","endLine":3871,"groupId":"111897","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitChild","params":"(RelNodeparent@inti@RelNodechild)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/83d724ae1a6b6b6fed862b3776ef36b6c71010.src","preCode":"    protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      inheritPaths.forEach(inheritPath -> inheritPath.right.push(i));\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        inheritPaths.forEach(inheritPath -> inheritPath.right.pop());\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3858,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":3,"curCode":"    @Override protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      appendPath.add(i);\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        \r\n        appendPath.remove(appendPath.size() - 1);\n      }\n    }\n","date":"2020-10-07 05:42:47","endLine":4006,"groupId":"111897","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitChild","params":"(RelNodeparent@inti@RelNodechild)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/83d724ae1a6b6b6fed862b3776ef36b6c71010.src","preCode":"    protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      appendPath.add(i);\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        \r\n        appendPath.remove(appendPath.size() - 1);\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3992,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
