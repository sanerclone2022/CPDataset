[{"authorTime":"2018-06-12 05:23:22","codes":[{"authorDate":"2018-06-12 05:23:22","commitOrder":1,"curCode":"  @Test public void testIsASetOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_A_SET, VM_EXPAND);\n    tester.checkBoolean(\"multiset[1] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 1] is a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[cast(null as boolean), cast(null as boolean)] is a set\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"multiset[cast(null as boolean)] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a'] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a', 'b'] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a', 'b', 'a'] is a set\", Boolean.FALSE);\n  }\n","date":"2018-06-13 09:52:07","endLine":3447,"groupId":"14947","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsASetOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/16/948643f688eca7b3e733599c1f56916473a8dc.src","preCode":"  @Test public void testIsASetOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_A_SET, VM_EXPAND);\n    tester.checkBoolean(\"multiset[1] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 1] is a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[cast(null as boolean), cast(null as boolean)] is a set\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"multiset[cast(null as boolean)] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a'] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a', 'b'] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a', 'b', 'a'] is a set\", Boolean.FALSE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3437,"status":"B"},{"authorDate":"2018-06-12 05:23:22","commitOrder":1,"curCode":"  @Test public void testIsNotASetOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_NOT_A_SET, VM_EXPAND);\n    tester.checkBoolean(\"multiset[1] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1, 1] is not a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[cast(null as boolean), cast(null as boolean)] is not a set\",\n        Boolean.TRUE);\n    tester.checkBoolean(\"multiset[cast(null as boolean)] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a'] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a', 'b'] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a', 'b', 'a'] is not a set\", Boolean.TRUE);\n  }\n","date":"2018-06-13 09:52:07","endLine":3459,"groupId":"14947","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsNotASetOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/16/948643f688eca7b3e733599c1f56916473a8dc.src","preCode":"  @Test public void testIsNotASetOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_NOT_A_SET, VM_EXPAND);\n    tester.checkBoolean(\"multiset[1] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1, 1] is not a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[cast(null as boolean), cast(null as boolean)] is not a set\",\n        Boolean.TRUE);\n    tester.checkBoolean(\"multiset[cast(null as boolean)] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a'] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a', 'b'] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a', 'b', 'a'] is not a set\", Boolean.TRUE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3449,"status":"B"}],"commitId":"d35c11c73cc78cf379d7e886cbbfb62b91d75fad","commitMessage":"@@@[CALCITE-2355] Implement multiset operations (Sergey Nuyanzin)\n\nImplement multiset operations: IS A SET.  SUBMULTISET OF.  MEMBER OF. \nMULTISET EXCEPT/INTESECT/UNION [ALL | DISTINCT].  FUSION; add\nmultiset operations: IS NOT A SET.  IS EMPTY.  IS NOT EMPTY.  SUBMULTISET OF.\n\nFix behavior if neither ALL nor DISTINCT is specified for the case of\nMULTISET EXCEPT/INTERSECT/UNION.\n\nClose apache/calcite#727\n","date":"2018-06-13 09:52:07","modifiedFileCount":"9","status":"B","submitter":"snuyanzin"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testIsASetOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_A_SET, VM_EXPAND);\n    tester.checkBoolean(\"multiset[1] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 1] is a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[cast(null as boolean), cast(null as boolean)] is a set\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"multiset[cast(null as boolean)] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a'] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a', 'b'] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a', 'b', 'a'] is a set\", Boolean.FALSE);\n  }\n","date":"2020-04-06 04:57:49","endLine":3639,"groupId":"10761","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsASetOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testIsASetOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_A_SET, VM_EXPAND);\n    tester.checkBoolean(\"multiset[1] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 1] is a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[cast(null as boolean), cast(null as boolean)] is a set\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"multiset[cast(null as boolean)] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a'] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a', 'b'] is a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['a', 'b', 'a'] is a set\", Boolean.FALSE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3629,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testIsNotASetOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_NOT_A_SET, VM_EXPAND);\n    tester.checkBoolean(\"multiset[1] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1, 1] is not a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[cast(null as boolean), cast(null as boolean)] is not a set\",\n        Boolean.TRUE);\n    tester.checkBoolean(\"multiset[cast(null as boolean)] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a'] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a', 'b'] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a', 'b', 'a'] is not a set\", Boolean.TRUE);\n  }\n","date":"2020-04-06 04:57:49","endLine":3651,"groupId":"10761","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsNotASetOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testIsNotASetOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_NOT_A_SET, VM_EXPAND);\n    tester.checkBoolean(\"multiset[1] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1, 1] is not a set\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[cast(null as boolean), cast(null as boolean)] is not a set\",\n        Boolean.TRUE);\n    tester.checkBoolean(\"multiset[cast(null as boolean)] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a'] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a', 'b'] is not a set\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset['a', 'b', 'a'] is not a set\", Boolean.TRUE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3641,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
