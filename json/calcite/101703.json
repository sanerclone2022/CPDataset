[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public static OptiqPrepare.ParseResult parse(\n      final OptiqConnection connection, final OptiqSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final OptiqPrepare prepare = OptiqPrepare.DEFAULT_FACTORY.apply();\n    final OptiqPrepare.Context context =\n        makeContext(connection, schema, schemaPath,\n            ImmutableMap.<OptiqConnectionProperty, String>of());\n    OptiqPrepare.Dummy.push(context);\n    try {\n      return prepare.parse(context, sql);\n    } finally {\n      OptiqPrepare.Dummy.pop(context);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":259,"groupId":"1457","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(finalOptiqConnectionconnection@finalOptiqSchemaschema@finalList<String>schemaPath@finalStringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/00/233d7a4e8fc4c4edbdbb97fad65bbad7312f3f.src","preCode":"  public static OptiqPrepare.ParseResult parse(\n      final OptiqConnection connection, final OptiqSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final OptiqPrepare prepare = OptiqPrepare.DEFAULT_FACTORY.apply();\n    final OptiqPrepare.Context context =\n        makeContext(connection, schema, schemaPath,\n            ImmutableMap.<OptiqConnectionProperty, String>of());\n    OptiqPrepare.Dummy.push(context);\n    try {\n      return prepare.parse(context, sql);\n    } finally {\n      OptiqPrepare.Dummy.pop(context);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/Schemas.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public static OptiqPrepare.ConvertResult convert(\n      final OptiqConnection connection, final OptiqSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final OptiqPrepare prepare = OptiqPrepare.DEFAULT_FACTORY.apply();\n    final OptiqPrepare.Context context =\n        makeContext(connection, schema, schemaPath,\n            ImmutableMap.<OptiqConnectionProperty, String>of());\n    OptiqPrepare.Dummy.push(context);\n    try {\n      return prepare.convert(context, sql);\n    } finally {\n      OptiqPrepare.Dummy.pop(context);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":276,"groupId":"1457","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(finalOptiqConnectionconnection@finalOptiqSchemaschema@finalList<String>schemaPath@finalStringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/00/233d7a4e8fc4c4edbdbb97fad65bbad7312f3f.src","preCode":"  public static OptiqPrepare.ConvertResult convert(\n      final OptiqConnection connection, final OptiqSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final OptiqPrepare prepare = OptiqPrepare.DEFAULT_FACTORY.apply();\n    final OptiqPrepare.Context context =\n        makeContext(connection, schema, schemaPath,\n            ImmutableMap.<OptiqConnectionProperty, String>of());\n    OptiqPrepare.Dummy.push(context);\n    try {\n      return prepare.convert(context, sql);\n    } finally {\n      OptiqPrepare.Dummy.pop(context);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/Schemas.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2014-11-14 10:11:34","codes":[{"authorDate":"2014-11-14 10:11:34","commitOrder":2,"curCode":"  public static CalcitePrepare.ParseResult parse(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath,\n            ImmutableMap.<CalciteConnectionProperty, String>of());\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.parse(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","date":"2014-11-14 10:22:06","endLine":274,"groupId":"1457","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(finalCalciteConnectionconnection@finalCalciteSchemaschema@finalList<String>schemaPath@finalStringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/df42943c9b9bd4f82850fee78d53ba4deef382.src","preCode":"  public static OptiqPrepare.ParseResult parse(\n      final OptiqConnection connection, final OptiqSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final OptiqPrepare prepare = OptiqPrepare.DEFAULT_FACTORY.apply();\n    final OptiqPrepare.Context context =\n        makeContext(connection, schema, schemaPath,\n            ImmutableMap.<OptiqConnectionProperty, String>of());\n    OptiqPrepare.Dummy.push(context);\n    try {\n      return prepare.parse(context, sql);\n    } finally {\n      OptiqPrepare.Dummy.pop(context);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/Schemas.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"},{"authorDate":"2014-11-14 10:11:34","commitOrder":2,"curCode":"  public static CalcitePrepare.ConvertResult convert(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath,\n            ImmutableMap.<CalciteConnectionProperty, String>of());\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.convert(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","date":"2014-11-14 10:22:06","endLine":291,"groupId":"1457","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(finalCalciteConnectionconnection@finalCalciteSchemaschema@finalList<String>schemaPath@finalStringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/df42943c9b9bd4f82850fee78d53ba4deef382.src","preCode":"  public static OptiqPrepare.ConvertResult convert(\n      final OptiqConnection connection, final OptiqSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final OptiqPrepare prepare = OptiqPrepare.DEFAULT_FACTORY.apply();\n    final OptiqPrepare.Context context =\n        makeContext(connection, schema, schemaPath,\n            ImmutableMap.<OptiqConnectionProperty, String>of());\n    OptiqPrepare.Dummy.push(context);\n    try {\n      return prepare.convert(context, sql);\n    } finally {\n      OptiqPrepare.Dummy.pop(context);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/Schemas.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"M"}],"commitId":"a0ba73cd2de76696b96a1cd828d2aa4d3ef9eb55","commitMessage":"@@@[CALCITE-306] Standardize code style for \"import package.*;\"\n\nRename classes and packages and generally fix things up after [CALCITE-296] and [CALCITE-419].\n\nMake many inner classes of EnumerableRules (e.g. EnumerableFilter.  EnumerableFilterRule) top-level classes.\n\nApply a consistent formatting convention for string literals split over multiple lines.\n\nRename generated file org.eigenbase.resource.Resources to org.apache.calcite.runtime.Resources.\n\nChange occurrences of \"optiq\" and \"eigenbase\" in java code to \"calcite\".\n","date":"2014-11-14 10:22:06","modifiedFileCount":"1156","status":"M","submitter":"Julian Hyde"},{"authorTime":"2015-03-20 00:56:09","codes":[{"authorDate":"2015-03-20 00:56:09","commitOrder":3,"curCode":"  public static CalcitePrepare.ParseResult parse(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final ImmutableMap<CalciteConnectionProperty, String> propValues =\n        ImmutableMap.of();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath, propValues);\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.parse(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","date":"2015-05-13 05:18:10","endLine":299,"groupId":"5622","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(finalCalciteConnectionconnection@finalCalciteSchemaschema@finalList<String>schemaPath@finalStringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/34233aa4f6ca3224a15ad233d8dc94a420afb3.src","preCode":"  public static CalcitePrepare.ParseResult parse(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath,\n            ImmutableMap.<CalciteConnectionProperty, String>of());\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.parse(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/Schemas.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"},{"authorDate":"2015-03-20 00:56:09","commitOrder":3,"curCode":"  public static CalcitePrepare.ConvertResult convert(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final ImmutableMap<CalciteConnectionProperty, String> propValues =\n        ImmutableMap.of();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath, propValues);\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.convert(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","date":"2015-05-13 05:18:10","endLine":317,"groupId":"5622","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(finalCalciteConnectionconnection@finalCalciteSchemaschema@finalList<String>schemaPath@finalStringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/34233aa4f6ca3224a15ad233d8dc94a420afb3.src","preCode":"  public static CalcitePrepare.ConvertResult convert(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath,\n            ImmutableMap.<CalciteConnectionProperty, String>of());\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.convert(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/Schemas.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"M"}],"commitId":"bc45a2c047349826e22641e82468a2d4dad948e3","commitMessage":"@@@[CALCITE-505] Support modifiable view\n","date":"2015-05-13 05:18:10","modifiedFileCount":"25","status":"M","submitter":"Julian Hyde"},{"authorTime":"2017-07-24 23:41:43","codes":[{"authorDate":"2017-07-24 23:41:43","commitOrder":4,"curCode":"  public static CalcitePrepare.ParseResult parse(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final ImmutableMap<CalciteConnectionProperty, String> propValues =\n        ImmutableMap.of();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath, null, propValues);\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.parse(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","date":"2017-07-25 11:19:12","endLine":299,"groupId":"153","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(finalCalciteConnectionconnection@finalCalciteSchemaschema@finalList<String>schemaPath@finalStringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/bd/671f9ce9e73d68dda7dca6b1c3df8a84279751.src","preCode":"  public static CalcitePrepare.ParseResult parse(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final ImmutableMap<CalciteConnectionProperty, String> propValues =\n        ImmutableMap.of();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath, propValues);\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.parse(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/Schemas.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"},{"authorDate":"2017-07-24 23:41:43","commitOrder":4,"curCode":"  public static CalcitePrepare.ConvertResult convert(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final ImmutableMap<CalciteConnectionProperty, String> propValues =\n        ImmutableMap.of();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath, null, propValues);\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.convert(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","date":"2017-07-25 11:19:12","endLine":317,"groupId":"153","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(finalCalciteConnectionconnection@finalCalciteSchemaschema@finalList<String>schemaPath@finalStringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/bd/671f9ce9e73d68dda7dca6b1c3df8a84279751.src","preCode":"  public static CalcitePrepare.ConvertResult convert(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final ImmutableMap<CalciteConnectionProperty, String> propValues =\n        ImmutableMap.of();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath, propValues);\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.convert(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/Schemas.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"M"}],"commitId":"0cbd2a1825768835dccce1b24f746bc968908c3a","commitMessage":"@@@[CALCITE-1900] Detect cyclic views and give useful error message\n","date":"2017-07-25 11:19:12","modifiedFileCount":"7","status":"M","submitter":"Julian Hyde"},{"authorTime":"2017-07-24 23:41:43","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  public static CalcitePrepare.ParseResult parse(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final @Nullable List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final ImmutableMap<CalciteConnectionProperty, String> propValues =\n        ImmutableMap.of();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath, null, propValues);\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.parse(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":297,"groupId":"101703","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(finalCalciteConnectionconnection@finalCalciteSchemaschema@final@NullableList<String>schemaPath@finalStringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f8/57ba3fc4f73ea14187abbe1a95d51dc8a39d61.src","preCode":"  public static CalcitePrepare.ParseResult parse(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final ImmutableMap<CalciteConnectionProperty, String> propValues =\n        ImmutableMap.of();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath, null, propValues);\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.parse(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/Schemas.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"M"},{"authorDate":"2017-07-24 23:41:43","commitOrder":5,"curCode":"  public static CalcitePrepare.ConvertResult convert(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final ImmutableMap<CalciteConnectionProperty, String> propValues =\n        ImmutableMap.of();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath, null, propValues);\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.convert(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","date":"2017-07-25 11:19:12","endLine":317,"groupId":"101703","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(finalCalciteConnectionconnection@finalCalciteSchemaschema@finalList<String>schemaPath@finalStringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/bd/671f9ce9e73d68dda7dca6b1c3df8a84279751.src","preCode":"  public static CalcitePrepare.ConvertResult convert(\n      final CalciteConnection connection, final CalciteSchema schema,\n      final List<String> schemaPath, final String sql) {\n    final CalcitePrepare prepare = CalcitePrepare.DEFAULT_FACTORY.apply();\n    final ImmutableMap<CalciteConnectionProperty, String> propValues =\n        ImmutableMap.of();\n    final CalcitePrepare.Context context =\n        makeContext(connection, schema, schemaPath, null, propValues);\n    CalcitePrepare.Dummy.push(context);\n    try {\n      return prepare.convert(context, sql);\n    } finally {\n      CalcitePrepare.Dummy.pop(context);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/Schemas.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"N"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
