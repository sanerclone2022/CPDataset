[{"authorTime":"2018-03-30 02:18:34","codes":[{"authorDate":"2018-03-30 02:18:34","commitOrder":2,"curCode":"  @Test public void testSimpleJoin() {\n    String query = \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c on s.\\\"customer_id\\\" = c.\\\"customer_id\\\"\\n\"\n        + \"join \\\"product\\\" as p on s.\\\"product_id\\\" = p.\\\"product_id\\\"\\n\"\n        + \"join \\\"product_class\\\" as pc\\n\"\n        + \"  on p.\\\"product_class_id\\\" = pc.\\\"product_class_id\\\"\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\\n\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\"\"\n        + \".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\"\"\n        + \".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' AND \"\n        + \"\\\"product_class\\\".\\\"product_department\\\" = 'Snacks'\";\n    sql(query).ok(expected);\n  }\n","date":"2018-04-24 01:29:52","endLine":684,"groupId":"10555","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleJoin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8d/daaa787b67715c7eb0a4e7987028f96491204a.src","preCode":"  @Test public void testSimpleJoin() {\n    String query = \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c on s.\\\"customer_id\\\" = c.\\\"customer_id\\\"\\n\"\n        + \"join \\\"product\\\" as p on s.\\\"product_id\\\" = p.\\\"product_id\\\"\\n\"\n        + \"join \\\"product_class\\\" as pc\\n\"\n        + \"  on p.\\\"product_class_id\\\" = pc.\\\"product_class_id\\\"\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\\n\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\"\"\n        + \".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\"\"\n        + \".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' AND \"\n        + \"\\\"product_class\\\".\\\"product_department\\\" = 'Snacks'\";\n    sql(query).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":662,"status":"MB"},{"authorDate":"2018-03-30 02:18:34","commitOrder":2,"curCode":"  @Test public void testSimpleJoinUsing() {\n    String query = \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"  join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"  join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"  join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\\n\";\n    final String expected = \"SELECT\"\n        + \" \\\"product\\\".\\\"product_class_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"product_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"customer_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"time_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"promotion_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_sales\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_cost\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"unit_sales\\\",\"\n        + \" \\\"customer\\\".\\\"account_num\\\",\"\n        + \" \\\"customer\\\".\\\"lname\\\",\"\n        + \" \\\"customer\\\".\\\"fname\\\",\"\n        + \" \\\"customer\\\".\\\"mi\\\",\"\n        + \" \\\"customer\\\".\\\"address1\\\",\"\n        + \" \\\"customer\\\".\\\"address2\\\",\"\n        + \" \\\"customer\\\".\\\"address3\\\",\"\n        + \" \\\"customer\\\".\\\"address4\\\",\"\n        + \" \\\"customer\\\".\\\"city\\\",\"\n        + \" \\\"customer\\\".\\\"state_province\\\",\"\n        + \" \\\"customer\\\".\\\"postal_code\\\",\"\n        + \" \\\"customer\\\".\\\"country\\\",\"\n        + \" \\\"customer\\\".\\\"customer_region_id\\\",\"\n        + \" \\\"customer\\\".\\\"phone1\\\",\"\n        + \" \\\"customer\\\".\\\"phone2\\\",\"\n        + \" \\\"customer\\\".\\\"birthdate\\\",\"\n        + \" \\\"customer\\\".\\\"marital_status\\\",\"\n        + \" \\\"customer\\\".\\\"yearly_income\\\",\"\n        + \" \\\"customer\\\".\\\"gender\\\",\"\n        + \" \\\"customer\\\".\\\"total_children\\\",\"\n        + \" \\\"customer\\\".\\\"num_children_at_home\\\",\"\n        + \" \\\"customer\\\".\\\"education\\\",\"\n        + \" \\\"customer\\\".\\\"date_accnt_opened\\\",\"\n        + \" \\\"customer\\\".\\\"member_card\\\",\"\n        + \" \\\"customer\\\".\\\"occupation\\\",\"\n        + \" \\\"customer\\\".\\\"houseowner\\\",\"\n        + \" \\\"customer\\\".\\\"num_cars_owned\\\",\"\n        + \" \\\"customer\\\".\\\"fullname\\\",\"\n        + \" \\\"product\\\".\\\"brand_name\\\",\"\n        + \" \\\"product\\\".\\\"product_name\\\",\"\n        + \" \\\"product\\\".\\\"SKU\\\",\"\n        + \" \\\"product\\\".\\\"SRP\\\",\"\n        + \" \\\"product\\\".\\\"gross_weight\\\",\"\n        + \" \\\"product\\\".\\\"net_weight\\\",\"\n        + \" \\\"product\\\".\\\"recyclable_package\\\",\"\n        + \" \\\"product\\\".\\\"low_fat\\\",\"\n        + \" \\\"product\\\".\\\"units_per_case\\\",\"\n        + \" \\\"product\\\".\\\"cases_per_pallet\\\",\"\n        + \" \\\"product\\\".\\\"shelf_width\\\",\"\n        + \" \\\"product\\\".\\\"shelf_height\\\",\"\n        + \" \\\"product\\\".\\\"shelf_depth\\\",\"\n        + \" \\\"product_class\\\".\\\"product_subcategory\\\",\"\n        + \" \\\"product_class\\\".\\\"product_category\\\",\"\n        + \" \\\"product_class\\\".\\\"product_department\\\",\"\n        + \" \\\"product_class\\\".\\\"product_family\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\"\"\n        + \".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\"\"\n        + \".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' AND \"\n        + \"\\\"product_class\\\".\\\"product_department\\\" = 'Snacks'\";\n    sql(query).ok(expected);\n  }\n","date":"2018-04-24 01:29:52","endLine":761,"groupId":"5442","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleJoinUsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8d/daaa787b67715c7eb0a4e7987028f96491204a.src","preCode":"  @Test public void testSimpleJoinUsing() {\n    String query = \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"  join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"  join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"  join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\\n\";\n    final String expected = \"SELECT\"\n        + \" \\\"product\\\".\\\"product_class_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"product_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"customer_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"time_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"promotion_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_sales\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_cost\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"unit_sales\\\",\"\n        + \" \\\"customer\\\".\\\"account_num\\\",\"\n        + \" \\\"customer\\\".\\\"lname\\\",\"\n        + \" \\\"customer\\\".\\\"fname\\\",\"\n        + \" \\\"customer\\\".\\\"mi\\\",\"\n        + \" \\\"customer\\\".\\\"address1\\\",\"\n        + \" \\\"customer\\\".\\\"address2\\\",\"\n        + \" \\\"customer\\\".\\\"address3\\\",\"\n        + \" \\\"customer\\\".\\\"address4\\\",\"\n        + \" \\\"customer\\\".\\\"city\\\",\"\n        + \" \\\"customer\\\".\\\"state_province\\\",\"\n        + \" \\\"customer\\\".\\\"postal_code\\\",\"\n        + \" \\\"customer\\\".\\\"country\\\",\"\n        + \" \\\"customer\\\".\\\"customer_region_id\\\",\"\n        + \" \\\"customer\\\".\\\"phone1\\\",\"\n        + \" \\\"customer\\\".\\\"phone2\\\",\"\n        + \" \\\"customer\\\".\\\"birthdate\\\",\"\n        + \" \\\"customer\\\".\\\"marital_status\\\",\"\n        + \" \\\"customer\\\".\\\"yearly_income\\\",\"\n        + \" \\\"customer\\\".\\\"gender\\\",\"\n        + \" \\\"customer\\\".\\\"total_children\\\",\"\n        + \" \\\"customer\\\".\\\"num_children_at_home\\\",\"\n        + \" \\\"customer\\\".\\\"education\\\",\"\n        + \" \\\"customer\\\".\\\"date_accnt_opened\\\",\"\n        + \" \\\"customer\\\".\\\"member_card\\\",\"\n        + \" \\\"customer\\\".\\\"occupation\\\",\"\n        + \" \\\"customer\\\".\\\"houseowner\\\",\"\n        + \" \\\"customer\\\".\\\"num_cars_owned\\\",\"\n        + \" \\\"customer\\\".\\\"fullname\\\",\"\n        + \" \\\"product\\\".\\\"brand_name\\\",\"\n        + \" \\\"product\\\".\\\"product_name\\\",\"\n        + \" \\\"product\\\".\\\"SKU\\\",\"\n        + \" \\\"product\\\".\\\"SRP\\\",\"\n        + \" \\\"product\\\".\\\"gross_weight\\\",\"\n        + \" \\\"product\\\".\\\"net_weight\\\",\"\n        + \" \\\"product\\\".\\\"recyclable_package\\\",\"\n        + \" \\\"product\\\".\\\"low_fat\\\",\"\n        + \" \\\"product\\\".\\\"units_per_case\\\",\"\n        + \" \\\"product\\\".\\\"cases_per_pallet\\\",\"\n        + \" \\\"product\\\".\\\"shelf_width\\\",\"\n        + \" \\\"product\\\".\\\"shelf_height\\\",\"\n        + \" \\\"product\\\".\\\"shelf_depth\\\",\"\n        + \" \\\"product_class\\\".\\\"product_subcategory\\\",\"\n        + \" \\\"product_class\\\".\\\"product_category\\\",\"\n        + \" \\\"product_class\\\".\\\"product_department\\\",\"\n        + \" \\\"product_class\\\".\\\"product_family\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\"\"\n        + \".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\"\"\n        + \".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' AND \"\n        + \"\\\"product_class\\\".\\\"product_department\\\" = 'Snacks'\";\n    sql(query).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":686,"status":"B"}],"commitId":"92f7259b96744180a0a556ac9f5842f705192b3f","commitMessage":"@@@[CALCITE-2227] Standards-compliant column ordering for NATURAL JOIN and JOIN USING\n\nNow the join column(s) occur only once in the expansion of \"SELECT *\". \nand are derived using COALESCE(left.k.  right.k) so are sometimes NOT\nNULL where preivously nullable. This is a breaking change for those\nqueries.\n\nImprove type-inference for COALESCE.\n","date":"2018-04-24 01:29:52","modifiedFileCount":"22","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testSimpleJoin() {\n    String query = \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c on s.\\\"customer_id\\\" = c.\\\"customer_id\\\"\\n\"\n        + \"join \\\"product\\\" as p on s.\\\"product_id\\\" = p.\\\"product_id\\\"\\n\"\n        + \"join \\\"product_class\\\" as pc\\n\"\n        + \"  on p.\\\"product_class_id\\\" = pc.\\\"product_class_id\\\"\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\\n\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\"\"\n        + \".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\"\"\n        + \".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' AND \"\n        + \"\\\"product_class\\\".\\\"product_department\\\" = 'Snacks'\";\n    sql(query).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":2177,"groupId":"101557","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleJoin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testSimpleJoin() {\n    String query = \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c on s.\\\"customer_id\\\" = c.\\\"customer_id\\\"\\n\"\n        + \"join \\\"product\\\" as p on s.\\\"product_id\\\" = p.\\\"product_id\\\"\\n\"\n        + \"join \\\"product_class\\\" as pc\\n\"\n        + \"  on p.\\\"product_class_id\\\" = pc.\\\"product_class_id\\\"\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\\n\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\"\"\n        + \".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\"\"\n        + \".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' AND \"\n        + \"\\\"product_class\\\".\\\"product_department\\\" = 'Snacks'\";\n    sql(query).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2155,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testSimpleJoinUsing() {\n    String query = \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"  join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"  join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"  join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\\n\";\n    final String expected = \"SELECT\"\n        + \" \\\"product\\\".\\\"product_class_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"product_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"customer_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"time_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"promotion_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_sales\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_cost\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"unit_sales\\\",\"\n        + \" \\\"customer\\\".\\\"account_num\\\",\"\n        + \" \\\"customer\\\".\\\"lname\\\",\"\n        + \" \\\"customer\\\".\\\"fname\\\",\"\n        + \" \\\"customer\\\".\\\"mi\\\",\"\n        + \" \\\"customer\\\".\\\"address1\\\",\"\n        + \" \\\"customer\\\".\\\"address2\\\",\"\n        + \" \\\"customer\\\".\\\"address3\\\",\"\n        + \" \\\"customer\\\".\\\"address4\\\",\"\n        + \" \\\"customer\\\".\\\"city\\\",\"\n        + \" \\\"customer\\\".\\\"state_province\\\",\"\n        + \" \\\"customer\\\".\\\"postal_code\\\",\"\n        + \" \\\"customer\\\".\\\"country\\\",\"\n        + \" \\\"customer\\\".\\\"customer_region_id\\\",\"\n        + \" \\\"customer\\\".\\\"phone1\\\",\"\n        + \" \\\"customer\\\".\\\"phone2\\\",\"\n        + \" \\\"customer\\\".\\\"birthdate\\\",\"\n        + \" \\\"customer\\\".\\\"marital_status\\\",\"\n        + \" \\\"customer\\\".\\\"yearly_income\\\",\"\n        + \" \\\"customer\\\".\\\"gender\\\",\"\n        + \" \\\"customer\\\".\\\"total_children\\\",\"\n        + \" \\\"customer\\\".\\\"num_children_at_home\\\",\"\n        + \" \\\"customer\\\".\\\"education\\\",\"\n        + \" \\\"customer\\\".\\\"date_accnt_opened\\\",\"\n        + \" \\\"customer\\\".\\\"member_card\\\",\"\n        + \" \\\"customer\\\".\\\"occupation\\\",\"\n        + \" \\\"customer\\\".\\\"houseowner\\\",\"\n        + \" \\\"customer\\\".\\\"num_cars_owned\\\",\"\n        + \" \\\"customer\\\".\\\"fullname\\\",\"\n        + \" \\\"product\\\".\\\"brand_name\\\",\"\n        + \" \\\"product\\\".\\\"product_name\\\",\"\n        + \" \\\"product\\\".\\\"SKU\\\",\"\n        + \" \\\"product\\\".\\\"SRP\\\",\"\n        + \" \\\"product\\\".\\\"gross_weight\\\",\"\n        + \" \\\"product\\\".\\\"net_weight\\\",\"\n        + \" \\\"product\\\".\\\"recyclable_package\\\",\"\n        + \" \\\"product\\\".\\\"low_fat\\\",\"\n        + \" \\\"product\\\".\\\"units_per_case\\\",\"\n        + \" \\\"product\\\".\\\"cases_per_pallet\\\",\"\n        + \" \\\"product\\\".\\\"shelf_width\\\",\"\n        + \" \\\"product\\\".\\\"shelf_height\\\",\"\n        + \" \\\"product\\\".\\\"shelf_depth\\\",\"\n        + \" \\\"product_class\\\".\\\"product_subcategory\\\",\"\n        + \" \\\"product_class\\\".\\\"product_category\\\",\"\n        + \" \\\"product_class\\\".\\\"product_department\\\",\"\n        + \" \\\"product_class\\\".\\\"product_family\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\"\"\n        + \".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\"\"\n        + \".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' AND \"\n        + \"\\\"product_class\\\".\\\"product_department\\\" = 'Snacks'\";\n    sql(query).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":2254,"groupId":"101557","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleJoinUsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testSimpleJoinUsing() {\n    String query = \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"  join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"  join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"  join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\\n\";\n    final String expected = \"SELECT\"\n        + \" \\\"product\\\".\\\"product_class_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"product_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"customer_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"time_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"promotion_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_id\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_sales\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"store_cost\\\",\"\n        + \" \\\"sales_fact_1997\\\".\\\"unit_sales\\\",\"\n        + \" \\\"customer\\\".\\\"account_num\\\",\"\n        + \" \\\"customer\\\".\\\"lname\\\",\"\n        + \" \\\"customer\\\".\\\"fname\\\",\"\n        + \" \\\"customer\\\".\\\"mi\\\",\"\n        + \" \\\"customer\\\".\\\"address1\\\",\"\n        + \" \\\"customer\\\".\\\"address2\\\",\"\n        + \" \\\"customer\\\".\\\"address3\\\",\"\n        + \" \\\"customer\\\".\\\"address4\\\",\"\n        + \" \\\"customer\\\".\\\"city\\\",\"\n        + \" \\\"customer\\\".\\\"state_province\\\",\"\n        + \" \\\"customer\\\".\\\"postal_code\\\",\"\n        + \" \\\"customer\\\".\\\"country\\\",\"\n        + \" \\\"customer\\\".\\\"customer_region_id\\\",\"\n        + \" \\\"customer\\\".\\\"phone1\\\",\"\n        + \" \\\"customer\\\".\\\"phone2\\\",\"\n        + \" \\\"customer\\\".\\\"birthdate\\\",\"\n        + \" \\\"customer\\\".\\\"marital_status\\\",\"\n        + \" \\\"customer\\\".\\\"yearly_income\\\",\"\n        + \" \\\"customer\\\".\\\"gender\\\",\"\n        + \" \\\"customer\\\".\\\"total_children\\\",\"\n        + \" \\\"customer\\\".\\\"num_children_at_home\\\",\"\n        + \" \\\"customer\\\".\\\"education\\\",\"\n        + \" \\\"customer\\\".\\\"date_accnt_opened\\\",\"\n        + \" \\\"customer\\\".\\\"member_card\\\",\"\n        + \" \\\"customer\\\".\\\"occupation\\\",\"\n        + \" \\\"customer\\\".\\\"houseowner\\\",\"\n        + \" \\\"customer\\\".\\\"num_cars_owned\\\",\"\n        + \" \\\"customer\\\".\\\"fullname\\\",\"\n        + \" \\\"product\\\".\\\"brand_name\\\",\"\n        + \" \\\"product\\\".\\\"product_name\\\",\"\n        + \" \\\"product\\\".\\\"SKU\\\",\"\n        + \" \\\"product\\\".\\\"SRP\\\",\"\n        + \" \\\"product\\\".\\\"gross_weight\\\",\"\n        + \" \\\"product\\\".\\\"net_weight\\\",\"\n        + \" \\\"product\\\".\\\"recyclable_package\\\",\"\n        + \" \\\"product\\\".\\\"low_fat\\\",\"\n        + \" \\\"product\\\".\\\"units_per_case\\\",\"\n        + \" \\\"product\\\".\\\"cases_per_pallet\\\",\"\n        + \" \\\"product\\\".\\\"shelf_width\\\",\"\n        + \" \\\"product\\\".\\\"shelf_height\\\",\"\n        + \" \\\"product\\\".\\\"shelf_depth\\\",\"\n        + \" \\\"product_class\\\".\\\"product_subcategory\\\",\"\n        + \" \\\"product_class\\\".\\\"product_category\\\",\"\n        + \" \\\"product_class\\\".\\\"product_department\\\",\"\n        + \" \\\"product_class\\\".\\\"product_family\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\"\"\n        + \".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\"\"\n        + \".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' AND \"\n        + \"\\\"product_class\\\".\\\"product_department\\\" = 'Snacks'\";\n    sql(query).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2179,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
