[{"authorTime":"2018-11-14 11:27:42","codes":[{"authorDate":"2018-11-14 11:27:42","commitOrder":1,"curCode":"  @Test void testWithinDistinctNoThrow() {\n    final String sql = \"SELECT deptno, SUM(sal), SUM(sal) WITHIN DISTINCT (job)\\n\"\n        + \"FROM emp\\n\"\n        + \"GROUP BY deptno\";\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.AGGREGATE_REDUCE_FUNCTIONS)\n        .addRuleInstance(CoreRules.AGGREGATE_EXPAND_WITHIN_DISTINCT\n            .config.withThrowIfNotUnique(false).toRule())\n        .build();\n    sql(sql).with(program).check();\n  }\n","date":"2021-02-12 07:42:13","endLine":1552,"groupId":"11455","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithinDistinctNoThrow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/82/3d434ead44306a83b55d97701080914cecc946.src","preCode":"  @Test void testWithinDistinctNoThrow() {\n    final String sql = \"SELECT deptno, SUM(sal), SUM(sal) WITHIN DISTINCT (job)\\n\"\n        + \"FROM emp\\n\"\n        + \"GROUP BY deptno\";\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.AGGREGATE_REDUCE_FUNCTIONS)\n        .addRuleInstance(CoreRules.AGGREGATE_EXPAND_WITHIN_DISTINCT\n            .config.withThrowIfNotUnique(false).toRule())\n        .build();\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1542,"status":"B"},{"authorDate":"2018-11-14 11:27:42","commitOrder":1,"curCode":"  @Test void testWithinDistinctCountDistinct() {\n    final String sql = \"SELECT deptno,\\n\"\n        + \"  SUM(sal) WITHIN DISTINCT (job) AS ss_j,\\n\"\n        + \"  COUNT(DISTINCT job) cdj,\\n\"\n        + \"  COUNT(job) WITHIN DISTINCT (job) AS cj_j,\\n\"\n        + \"  COUNT(DISTINCT job) WITHIN DISTINCT (job) AS cdj_j\\n\"\n        + \"FROM emp\\n\"\n        + \"GROUP BY deptno\";\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.AGGREGATE_REDUCE_FUNCTIONS)\n        .addRuleInstance(CoreRules.AGGREGATE_EXPAND_WITHIN_DISTINCT\n            .config.withThrowIfNotUnique(false).toRule())\n        .build();\n    sql(sql).with(program).check();\n  }\n","date":"2021-02-12 07:42:13","endLine":1570,"groupId":"11455","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithinDistinctCountDistinct","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/82/3d434ead44306a83b55d97701080914cecc946.src","preCode":"  @Test void testWithinDistinctCountDistinct() {\n    final String sql = \"SELECT deptno,\\n\"\n        + \"  SUM(sal) WITHIN DISTINCT (job) AS ss_j,\\n\"\n        + \"  COUNT(DISTINCT job) cdj,\\n\"\n        + \"  COUNT(job) WITHIN DISTINCT (job) AS cj_j,\\n\"\n        + \"  COUNT(DISTINCT job) WITHIN DISTINCT (job) AS cdj_j\\n\"\n        + \"FROM emp\\n\"\n        + \"GROUP BY deptno\";\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.AGGREGATE_REDUCE_FUNCTIONS)\n        .addRuleInstance(CoreRules.AGGREGATE_EXPAND_WITHIN_DISTINCT\n            .config.withThrowIfNotUnique(false).toRule())\n        .build();\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1556,"status":"B"}],"commitId":"f1da65504e598928cf77aa6a7244552692ae2529","commitMessage":"@@@[CALCITE-4483] WITHIN DISTINCT clause for aggregate functions (experimental)\n\nThe WITHIN DISTINCT feature is experimental and subject to\nchange/removal without notice.\n\nTo represent WITHIN DISTINCT in relational algebra.  add\nmethod RelBuilder.AggCall.unique() and field\nAggregateCall.distinctKeys.\n\nTo represent WITHIN DISTINCT in the SQL AST.  add\nWITHIN_DISTINCT SQL operator.\n\nAdd a planner rule.  AggregateExpandWithinDistinctRule.  that\nimplements WITHIN DISTINCT by pre-aggregating the rows that\nwill go into each aggregate function.\n\nThere are two variants of the rule; one that throws a runtime\nerror if the operand is not functionally-dependent on the\nWITHIN DISTINCT key.  and one that takes the minimum. The former\nis enabled by default.\n\nThe rule handles DISTINCT aggregate calls by converting them\nto WITHIN DISTINCT (because the latter is a generalization of\nthe former).\n\nAdd an internal $THROW_UNLESS function (invoked when operands\nare not functionally dependent).\n\nFurther work is required to complete the feature:\n * support FILTER clause in combination with WITHIN DISTINCT;\n * support WITHIN DISTINCT clause in GROUPING SETS queries;\n * duplicate detection fails for aggregate functions that\n   respect nulls.\n\nRegarding nulls. Luckily most aggregate functions ignore\nnulls by default.  but exceptions include ARRAY_AGG. If the\ninput to ARRAY_AGG for a given WITHIN-DISTINCT-key value is\n[null.  1.  null].  MIN and MAX will both be 1.  so we cannot\ndetermine that all of the values were not the same.\n\nClose apache/calcite#2339\n","date":"2021-02-12 07:42:13","modifiedFileCount":"46","status":"B","submitter":"Julian Hyde"},{"authorTime":"2021-08-11 06:32:34","codes":[{"authorDate":"2018-11-14 11:27:42","commitOrder":2,"curCode":"  @Test void testWithinDistinctNoThrow() {\n    final String sql = \"SELECT deptno, SUM(sal), SUM(sal) WITHIN DISTINCT (job)\\n\"\n        + \"FROM emp\\n\"\n        + \"GROUP BY deptno\";\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.AGGREGATE_REDUCE_FUNCTIONS)\n        .addRuleInstance(CoreRules.AGGREGATE_EXPAND_WITHIN_DISTINCT\n            .config.withThrowIfNotUnique(false).toRule())\n        .build();\n    sql(sql).with(program).check();\n  }\n","date":"2021-02-12 07:42:13","endLine":1552,"groupId":"10984","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithinDistinctNoThrow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/82/3d434ead44306a83b55d97701080914cecc946.src","preCode":"  @Test void testWithinDistinctNoThrow() {\n    final String sql = \"SELECT deptno, SUM(sal), SUM(sal) WITHIN DISTINCT (job)\\n\"\n        + \"FROM emp\\n\"\n        + \"GROUP BY deptno\";\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.AGGREGATE_REDUCE_FUNCTIONS)\n        .addRuleInstance(CoreRules.AGGREGATE_EXPAND_WITHIN_DISTINCT\n            .config.withThrowIfNotUnique(false).toRule())\n        .build();\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1542,"status":"N"},{"authorDate":"2021-08-11 06:32:34","commitOrder":2,"curCode":"  @Test void testWithinDistinctCountDistinct() {\n    final String sql = \"SELECT deptno,\\n\"\n        + \"  SUM(sal) WITHIN DISTINCT (comm) AS ss_c,\\n\"\n        + \"  COUNT(DISTINCT job) cdj,\\n\"\n        + \"  COUNT(job) WITHIN DISTINCT (job) AS cj_j,\\n\"\n        + \"  COUNT(DISTINCT job) WITHIN DISTINCT (job) AS cdj_j,\\n\"\n        + \"  COUNT(DISTINCT job) FILTER (WHERE sal > 1000) AS cdj_filtered\\n\"\n        + \"FROM emp\\n\"\n        + \"GROUP BY deptno\";\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.AGGREGATE_REDUCE_FUNCTIONS)\n        .addRuleInstance(CoreRules.AGGREGATE_EXPAND_WITHIN_DISTINCT\n            .config.withThrowIfNotUnique(false).toRule())\n        .build();\n    sql(sql).with(program).check();\n  }\n","date":"2021-09-04 07:30:26","endLine":1515,"groupId":"10984","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithinDistinctCountDistinct","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/93/e28931be174b72ccb663e5731c7c8f221b4961.src","preCode":"  @Test void testWithinDistinctCountDistinct() {\n    final String sql = \"SELECT deptno,\\n\"\n        + \"  SUM(sal) WITHIN DISTINCT (job) AS ss_j,\\n\"\n        + \"  COUNT(DISTINCT job) cdj,\\n\"\n        + \"  COUNT(job) WITHIN DISTINCT (job) AS cj_j,\\n\"\n        + \"  COUNT(DISTINCT job) WITHIN DISTINCT (job) AS cdj_j\\n\"\n        + \"FROM emp\\n\"\n        + \"GROUP BY deptno\";\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.AGGREGATE_REDUCE_FUNCTIONS)\n        .addRuleInstance(CoreRules.AGGREGATE_EXPAND_WITHIN_DISTINCT\n            .config.withThrowIfNotUnique(false).toRule())\n        .build();\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1500,"status":"M"}],"commitId":"8c4629974815a5e919618375aa380c985047d256","commitMessage":"@@@[CALCITE-4726] Support aggregate calls with a FILTER clause in AggregateExpandWithinDistinctRule (Will Noble)\n\nClose apache/calcite#2483\n","date":"2021-09-04 07:30:26","modifiedFileCount":"6","status":"M","submitter":"Will Noble"}]
