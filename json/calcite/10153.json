[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void accept(ExpressionWriter writer) {\n    String modifiers = Modifier.toString(modifier);\n    writer.append(modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","date":"2014-11-14 09:39:34","endLine":58,"groupId":"273","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"accept","params":"(ExpressionWriterwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d4/75d2b7bba2745ed1732cf3437258ee21640bb1.src","preCode":"  public void accept(ExpressionWriter writer) {\n    String modifiers = Modifier.toString(modifier);\n    writer.append(modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/tree/FieldDeclaration.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  void accept0(ExpressionWriter writer) {\n    final String modifiers = Modifier.toString(this.modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(modifiers).append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","date":"2014-11-14 09:39:34","endLine":60,"groupId":"273","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"accept0","params":"(ExpressionWriterwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2c/96c4e39f128514f574d192bb65a2b6be3278f3.src","preCode":"  void accept0(ExpressionWriter writer) {\n    final String modifiers = Modifier.toString(this.modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(modifiers).append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/tree/DeclarationStatement.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2014-11-14 10:11:34","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"  public void accept(ExpressionWriter writer) {\n    String modifiers = Modifier.toString(modifier);\n    writer.append(modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","date":"2014-11-14 09:39:34","endLine":58,"groupId":"273","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"accept","params":"(ExpressionWriterwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d4/75d2b7bba2745ed1732cf3437258ee21640bb1.src","preCode":"  public void accept(ExpressionWriter writer) {\n    String modifiers = Modifier.toString(modifier);\n    writer.append(modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/tree/FieldDeclaration.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"},{"authorDate":"2014-11-14 10:11:34","commitOrder":2,"curCode":"  @Override void accept0(ExpressionWriter writer) {\n    final String modifiers = Modifier.toString(this.modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(modifiers).append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","date":"2014-11-14 10:22:06","endLine":58,"groupId":"273","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"accept0","params":"(ExpressionWriterwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c8/61f4149664346342111a10c01fa0e01c092b1c.src","preCode":"  void accept0(ExpressionWriter writer) {\n    final String modifiers = Modifier.toString(this.modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(modifiers).append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/tree/DeclarationStatement.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"a0ba73cd2de76696b96a1cd828d2aa4d3ef9eb55","commitMessage":"@@@[CALCITE-306] Standardize code style for \"import package.*;\"\n\nRename classes and packages and generally fix things up after [CALCITE-296] and [CALCITE-419].\n\nMake many inner classes of EnumerableRules (e.g. EnumerableFilter.  EnumerableFilterRule) top-level classes.\n\nApply a consistent formatting convention for string literals split over multiple lines.\n\nRename generated file org.eigenbase.resource.Resources to org.apache.calcite.runtime.Resources.\n\nChange occurrences of \"optiq\" and \"eigenbase\" in java code to \"calcite\".\n","date":"2014-11-14 10:22:06","modifiedFileCount":"1156","status":"M","submitter":"Julian Hyde"},{"authorTime":"2014-11-14 10:11:34","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":3,"curCode":"  @Override public void accept(ExpressionWriter writer) {\n    String modifiers = Modifier.toString(modifier);\n    writer.append(modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","date":"2020-10-07 05:42:47","endLine":62,"groupId":"10153","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"accept","params":"(ExpressionWriterwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ca/235274ac38c3328290ed3fdbb45cd9613e2f6a.src","preCode":"  public void accept(ExpressionWriter writer) {\n    String modifiers = Modifier.toString(modifier);\n    writer.append(modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/tree/FieldDeclaration.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2014-11-14 10:11:34","commitOrder":3,"curCode":"  @Override void accept0(ExpressionWriter writer) {\n    final String modifiers = Modifier.toString(this.modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(modifiers).append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","date":"2014-11-14 10:22:06","endLine":58,"groupId":"10153","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"accept0","params":"(ExpressionWriterwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c8/61f4149664346342111a10c01fa0e01c092b1c.src","preCode":"  @Override void accept0(ExpressionWriter writer) {\n    final String modifiers = Modifier.toString(this.modifiers);\n    if (!modifiers.isEmpty()) {\n      writer.append(modifiers).append(' ');\n    }\n    writer.append(parameter.type).append(' ').append(parameter.name);\n    if (initializer != null) {\n      writer.append(\" = \").append(initializer);\n    }\n    writer.append(';');\n    writer.newlineAndIndent();\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/tree/DeclarationStatement.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
