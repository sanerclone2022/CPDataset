[{"authorTime":"2019-04-25 02:17:35","codes":[{"authorDate":"2019-04-25 02:17:35","commitOrder":1,"curCode":"  public static String jsonObject(SqlJsonConstructorNullClause nullClause,\n      Object... kvs) {\n    assert kvs.length % 2 == 0;\n    Map<String, Object> map = new HashMap<>();\n    for (int i = 0; i < kvs.length; i += 2) {\n      String k = (String) kvs[i];\n      Object v = kvs[i + 1];\n      if (k == null) {\n        throw RESOURCE.nullKeyOfJsonObjectNotAllowed().ex();\n      }\n      if (v == null) {\n        if (nullClause == SqlJsonConstructorNullClause.NULL_ON_NULL) {\n          map.put(k, null);\n        }\n      } else {\n        map.put(k, v);\n      }\n    }\n    return jsonize(map);\n  }\n","date":"2019-05-15 12:57:37","endLine":385,"groupId":"12051","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"jsonObject","params":"(SqlJsonConstructorNullClausenullClause@Object...kvs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c2/68708dfcd04caa1a9b0f2479ed549836cc234c.src","preCode":"  public static String jsonObject(SqlJsonConstructorNullClause nullClause,\n      Object... kvs) {\n    assert kvs.length % 2 == 0;\n    Map<String, Object> map = new HashMap<>();\n    for (int i = 0; i < kvs.length; i += 2) {\n      String k = (String) kvs[i];\n      Object v = kvs[i + 1];\n      if (k == null) {\n        throw RESOURCE.nullKeyOfJsonObjectNotAllowed().ex();\n      }\n      if (v == null) {\n        if (nullClause == SqlJsonConstructorNullClause.NULL_ON_NULL) {\n          map.put(k, null);\n        }\n      } else {\n        map.put(k, v);\n      }\n    }\n    return jsonize(map);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":366,"status":"B"},{"authorDate":"2019-04-25 02:17:35","commitOrder":1,"curCode":"  public static void jsonObjectAggAdd(Map map, String k, Object v,\n      SqlJsonConstructorNullClause nullClause) {\n    if (k == null) {\n      throw RESOURCE.nullKeyOfJsonObjectNotAllowed().ex();\n    }\n    if (v == null) {\n      if (nullClause == SqlJsonConstructorNullClause.NULL_ON_NULL) {\n        map.put(k, null);\n      }\n    } else {\n      map.put(k, v);\n    }\n  }\n","date":"2019-05-15 12:57:37","endLine":399,"groupId":"12051","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"jsonObjectAggAdd","params":"(Mapmap@Stringk@Objectv@SqlJsonConstructorNullClausenullClause)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c2/68708dfcd04caa1a9b0f2479ed549836cc234c.src","preCode":"  public static void jsonObjectAggAdd(Map map, String k, Object v,\n      SqlJsonConstructorNullClause nullClause) {\n    if (k == null) {\n      throw RESOURCE.nullKeyOfJsonObjectNotAllowed().ex();\n    }\n    if (v == null) {\n      if (nullClause == SqlJsonConstructorNullClause.NULL_ON_NULL) {\n        map.put(k, null);\n      }\n    } else {\n      map.put(k, v);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":387,"status":"B"}],"commitId":"e98c779d1ec0bc87c81a72b974c89a41a7222a07","commitMessage":"@@@[CALCITE-3017] Improve null handling of JsonValueExpressionOperator\n\n* Remove SqlJsonApiCommonSyntaxOperator;\n* Move implementation methods of JSON functions from SqlFunctions to JsonFunctions;\n* Add new null policy NullPolicy.ARG0 (currently used by some JSON functions only);\n* Change return type to nullable for some operators of JSON functions;\n* In code generation.  perform regular null semantic check on operands of a call when NullAs.IS_NULL/IS_NOT_NULL is used.\n","date":"2019-05-15 12:57:37","modifiedFileCount":"18","status":"B","submitter":"Hongze Zhang"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"  public static String jsonObject(SqlJsonConstructorNullClause nullClause,\n      @Nullable Object... kvs) {\n    assert kvs.length % 2 == 0;\n    Map<String, @Nullable Object> map = new HashMap<>();\n    for (int i = 0; i < kvs.length; i += 2) {\n      String k = (String) kvs[i];\n      Object v = kvs[i + 1];\n      if (k == null) {\n        throw RESOURCE.nullKeyOfJsonObjectNotAllowed().ex();\n      }\n      if (v == null) {\n        if (nullClause == SqlJsonConstructorNullClause.NULL_ON_NULL) {\n          map.put(k, null);\n        }\n      } else {\n        map.put(k, v);\n      }\n    }\n    return jsonize(map);\n  }\n","date":"2020-11-30 06:45:33","endLine":397,"groupId":"101679","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"jsonObject","params":"(SqlJsonConstructorNullClausenullClause@@NullableObject...kvs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/89/6ceb200984b180095e6e34ac5c698a457e07d5.src","preCode":"  public static String jsonObject(SqlJsonConstructorNullClause nullClause,\n      Object... kvs) {\n    assert kvs.length % 2 == 0;\n    Map<String, Object> map = new HashMap<>();\n    for (int i = 0; i < kvs.length; i += 2) {\n      String k = (String) kvs[i];\n      Object v = kvs[i + 1];\n      if (k == null) {\n        throw RESOURCE.nullKeyOfJsonObjectNotAllowed().ex();\n      }\n      if (v == null) {\n        if (nullClause == SqlJsonConstructorNullClause.NULL_ON_NULL) {\n          map.put(k, null);\n        }\n      } else {\n        map.put(k, v);\n      }\n    }\n    return jsonize(map);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"  public static void jsonObjectAggAdd(Map map, String k, @Nullable Object v,\n      SqlJsonConstructorNullClause nullClause) {\n    if (k == null) {\n      throw RESOURCE.nullKeyOfJsonObjectNotAllowed().ex();\n    }\n    if (v == null) {\n      if (nullClause == SqlJsonConstructorNullClause.NULL_ON_NULL) {\n        map.put(k, null);\n      }\n    } else {\n      map.put(k, v);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":411,"groupId":"101679","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"jsonObjectAggAdd","params":"(Mapmap@Stringk@@NullableObjectv@SqlJsonConstructorNullClausenullClause)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/89/6ceb200984b180095e6e34ac5c698a457e07d5.src","preCode":"  public static void jsonObjectAggAdd(Map map, String k, Object v,\n      SqlJsonConstructorNullClause nullClause) {\n    if (k == null) {\n      throw RESOURCE.nullKeyOfJsonObjectNotAllowed().ex();\n    }\n    if (v == null) {\n      if (nullClause == SqlJsonConstructorNullClause.NULL_ON_NULL) {\n        map.put(k, null);\n      }\n    } else {\n      map.put(k, v);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
