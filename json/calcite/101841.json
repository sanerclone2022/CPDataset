[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"      new SqlSpecialOperator(\"EXPLAIN\", SqlKind.EXPLAIN) {\n        @Override\n        public SqlCall createCall(SqlLiteral functionQualifier,\n            SqlParserPos pos, SqlNode... operands) {\n          return new SqlExplain(pos, operands[0], (SqlLiteral) operands[1],\n              (SqlLiteral) operands[2], (SqlLiteral) operands[3], 0);\n        }\n      };\n","date":"2014-11-14 09:39:34","endLine":37,"groupId":"16852","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"OPERATOR","params":"(\"EXPLAIN\"@SqlKind.EXPLAIN)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/e39f126932cb65040ab6b124fb8757fde5e64b.src","preCode":"      new SqlSpecialOperator(\"EXPLAIN\", SqlKind.EXPLAIN) {\n        @Override\n        public SqlCall createCall(SqlLiteral functionQualifier,\n            SqlParserPos pos, SqlNode... operands) {\n          return new SqlExplain(pos, operands[0], (SqlLiteral) operands[1],\n              (SqlLiteral) operands[2], (SqlLiteral) operands[3], 0);\n        }\n      };\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlExplain.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"    public SqlCall createCall(\n        SqlLiteral functionQualifier,\n        SqlParserPos pos,\n        SqlNode... operands) {\n      assert functionQualifier == null;\n      assert operands.length == 8;\n      return create(\n          (SqlIdentifier) operands[0],\n          (SqlIdentifier) operands[1],\n          (SqlNodeList) operands[2],\n          (SqlNodeList) operands[3],\n          (SqlLiteral) operands[4],\n          operands[5],\n          operands[6],\n          (SqlLiteral) operands[7],\n          pos);\n    }\n","date":"2014-11-14 09:39:34","endLine":825,"groupId":"10095","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createCall","params":"(SqlLiteralfunctionQualifier@SqlParserPospos@SqlNode...operands)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/eab289cabd96c64fb8cfbdc4f950293cc2df3e.src","preCode":"    public SqlCall createCall(\n        SqlLiteral functionQualifier,\n        SqlParserPos pos,\n        SqlNode... operands) {\n      assert functionQualifier == null;\n      assert operands.length == 8;\n      return create(\n          (SqlIdentifier) operands[0],\n          (SqlIdentifier) operands[1],\n          (SqlNodeList) operands[2],\n          (SqlNodeList) operands[3],\n          (SqlLiteral) operands[4],\n          operands[5],\n          operands[6],\n          (SqlLiteral) operands[7],\n          pos);\n    }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlWindow.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":809,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"      new SqlSpecialOperator(\"EXPLAIN\", SqlKind.EXPLAIN) {\n        @Override\n        public SqlCall createCall(SqlLiteral functionQualifier,\n            SqlParserPos pos, SqlNode... operands) {\n          return new SqlExplain(pos, operands[0], (SqlLiteral) operands[1],\n              (SqlLiteral) operands[2], (SqlLiteral) operands[3], 0);\n        }\n      };\n","date":"2014-11-14 09:39:34","endLine":37,"groupId":"16852","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"OPERATOR","params":"(\"EXPLAIN\"@SqlKind.EXPLAIN)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/e39f126932cb65040ab6b124fb8757fde5e64b.src","preCode":"      new SqlSpecialOperator(\"EXPLAIN\", SqlKind.EXPLAIN) {\n        @Override\n        public SqlCall createCall(SqlLiteral functionQualifier,\n            SqlParserPos pos, SqlNode... operands) {\n          return new SqlExplain(pos, operands[0], (SqlLiteral) operands[1],\n              (SqlLiteral) operands[2], (SqlLiteral) operands[3], 0);\n        }\n      };\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlExplain.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"N"},{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"    @Override public SqlCall createCall(\n        SqlLiteral functionQualifier,\n        SqlParserPos pos,\n        SqlNode... operands) {\n      assert functionQualifier == null;\n      assert operands.length == 8;\n      return create(\n          (SqlIdentifier) operands[0],\n          (SqlIdentifier) operands[1],\n          (SqlNodeList) operands[2],\n          (SqlNodeList) operands[3],\n          (SqlLiteral) operands[4],\n          operands[5],\n          operands[6],\n          (SqlLiteral) operands[7],\n          pos);\n    }\n","date":"2020-10-07 05:42:47","endLine":826,"groupId":"10095","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createCall","params":"(SqlLiteralfunctionQualifier@SqlParserPospos@SqlNode...operands)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/88/223aaed5ffbb1333b688de585f6e9d48a795d0.src","preCode":"    public SqlCall createCall(\n        SqlLiteral functionQualifier,\n        SqlParserPos pos,\n        SqlNode... operands) {\n      assert functionQualifier == null;\n      assert operands.length == 8;\n      return create(\n          (SqlIdentifier) operands[0],\n          (SqlIdentifier) operands[1],\n          (SqlNodeList) operands[2],\n          (SqlNodeList) operands[3],\n          (SqlLiteral) operands[4],\n          operands[5],\n          operands[6],\n          (SqlLiteral) operands[7],\n          pos);\n    }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlWindow.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":810,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"      new SqlSpecialOperator(\"EXPLAIN\", SqlKind.EXPLAIN) {\n        @SuppressWarnings(\"argument.type.incompatible\")\n        @Override public SqlCall createCall(@Nullable SqlLiteral functionQualifier,\n            SqlParserPos pos, @Nullable SqlNode... operands) {\n          return new SqlExplain(pos, operands[0], (SqlLiteral) operands[1],\n              (SqlLiteral) operands[2], (SqlLiteral) operands[3], 0);\n        }\n      };\n","date":"2020-11-30 06:45:33","endLine":40,"groupId":"101841","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"OPERATOR","params":"(\"EXPLAIN\"@SqlKind.EXPLAIN)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d0/72a6ceacd196552d621e6b3a4e6fbea55bd523.src","preCode":"      new SqlSpecialOperator(\"EXPLAIN\", SqlKind.EXPLAIN) {\n        @Override public SqlCall createCall(SqlLiteral functionQualifier,\n            SqlParserPos pos, SqlNode... operands) {\n          return new SqlExplain(pos, operands[0], (SqlLiteral) operands[1],\n              (SqlLiteral) operands[2], (SqlLiteral) operands[3], 0);\n        }\n      };\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlExplain.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"    @Override public SqlCall createCall(\n        @Nullable SqlLiteral functionQualifier,\n        SqlParserPos pos,\n        @Nullable SqlNode... operands) {\n      assert functionQualifier == null;\n      assert operands.length == 8;\n      return create(\n          (SqlIdentifier) operands[0],\n          (SqlIdentifier) operands[1],\n          (SqlNodeList) operands[2],\n          (SqlNodeList) operands[3],\n          (SqlLiteral) operands[4],\n          operands[5],\n          operands[6],\n          (SqlLiteral) operands[7],\n          pos);\n    }\n","date":"2020-11-30 06:45:33","endLine":837,"groupId":"101841","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createCall","params":"(@NullableSqlLiteralfunctionQualifier@SqlParserPospos@@NullableSqlNode...operands)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d8/b9b6e0f672818a05d3d3f1e920ce69722ac349.src","preCode":"    @Override public SqlCall createCall(\n        SqlLiteral functionQualifier,\n        SqlParserPos pos,\n        SqlNode... operands) {\n      assert functionQualifier == null;\n      assert operands.length == 8;\n      return create(\n          (SqlIdentifier) operands[0],\n          (SqlIdentifier) operands[1],\n          (SqlNodeList) operands[2],\n          (SqlNodeList) operands[3],\n          (SqlLiteral) operands[4],\n          operands[5],\n          operands[6],\n          (SqlLiteral) operands[7],\n          pos);\n    }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlWindow.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":821,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
