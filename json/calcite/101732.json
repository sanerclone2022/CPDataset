[{"authorTime":"2015-06-11 17:48:52","codes":[{"authorDate":"2015-08-20 07:25:30","commitOrder":3,"curCode":"  private static SqlOperator op(SqlKind kind) {\n    switch (kind) {\n    case IS_FALSE:\n      return SqlStdOperatorTable.IS_FALSE;\n    case IS_TRUE:\n      return SqlStdOperatorTable.IS_TRUE;\n    case IS_UNKNOWN:\n      return SqlStdOperatorTable.IS_UNKNOWN;\n    case IS_NULL:\n      return SqlStdOperatorTable.IS_NULL;\n    case IS_NOT_FALSE:\n      return SqlStdOperatorTable.IS_NOT_FALSE;\n    case IS_NOT_TRUE:\n      return SqlStdOperatorTable.IS_NOT_TRUE;\n    case IS_NOT_NULL:\n      return SqlStdOperatorTable.IS_NOT_NULL;\n    default:\n      throw new AssertionError(kind);\n    }\n  }\n","date":"2016-01-10 16:51:24","endLine":1376,"groupId":"14091","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"op","params":"(SqlKindkind)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b2/de6407418ef8f7276bf8cfb67499fe7ff7d238.src","preCode":"  private static SqlOperator op(SqlKind kind) {\n    switch (kind) {\n    case IS_FALSE:\n      return SqlStdOperatorTable.IS_FALSE;\n    case IS_TRUE:\n      return SqlStdOperatorTable.IS_TRUE;\n    case IS_UNKNOWN:\n      return SqlStdOperatorTable.IS_UNKNOWN;\n    case IS_NULL:\n      return SqlStdOperatorTable.IS_NULL;\n    case IS_NOT_FALSE:\n      return SqlStdOperatorTable.IS_NOT_FALSE;\n    case IS_NOT_TRUE:\n      return SqlStdOperatorTable.IS_NOT_TRUE;\n    case IS_NOT_NULL:\n      return SqlStdOperatorTable.IS_NOT_NULL;\n    default:\n      throw new AssertionError(kind);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1357,"status":"B"},{"authorDate":"2015-06-11 17:48:52","commitOrder":3,"curCode":"  public static SqlOperator op(SqlKind kind, SqlOperator operator) {\n    switch (kind) {\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    default:\n      return operator;\n    }\n  }\n","date":"2015-07-17 04:22:39","endLine":1238,"groupId":"5872","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"op","params":"(SqlKindkind@SqlOperatoroperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/f8af5c09fc98723fd35747edf4db696b7fd893.src","preCode":"  public static SqlOperator op(SqlKind kind, SqlOperator operator) {\n    switch (kind) {\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    default:\n      return operator;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1217,"status":"NB"}],"commitId":"7837e64c3294aa776ca38cba3f756550af3494ab","commitMessage":"@@@Simplify RexProgram.  in particular \"(NOT CASE ... END) IS TRUE\".  which occurs in NOT IN\n","date":"2016-01-10 16:51:24","modifiedFileCount":"12","status":"M","submitter":"Julian Hyde"},{"authorTime":"2015-06-11 17:48:52","codes":[{"authorDate":"2016-03-01 20:28:19","commitOrder":4,"curCode":"  private static SqlOperator op(SqlKind kind) {\n    switch (kind) {\n    case IS_FALSE:\n      return SqlStdOperatorTable.IS_FALSE;\n    case IS_TRUE:\n      return SqlStdOperatorTable.IS_TRUE;\n    case IS_UNKNOWN:\n      return SqlStdOperatorTable.IS_UNKNOWN;\n    case IS_NULL:\n      return SqlStdOperatorTable.IS_NULL;\n    case IS_NOT_FALSE:\n      return SqlStdOperatorTable.IS_NOT_FALSE;\n    case IS_NOT_TRUE:\n      return SqlStdOperatorTable.IS_NOT_TRUE;\n    case IS_NOT_NULL:\n      return SqlStdOperatorTable.IS_NOT_NULL;\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    default:\n      throw new AssertionError(kind);\n    }\n  }\n","date":"2016-03-18 05:06:14","endLine":1464,"groupId":"14091","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"op","params":"(SqlKindkind)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/86/ffbfbf4cfcaf2725c4c371237622d697d06f1f.src","preCode":"  private static SqlOperator op(SqlKind kind) {\n    switch (kind) {\n    case IS_FALSE:\n      return SqlStdOperatorTable.IS_FALSE;\n    case IS_TRUE:\n      return SqlStdOperatorTable.IS_TRUE;\n    case IS_UNKNOWN:\n      return SqlStdOperatorTable.IS_UNKNOWN;\n    case IS_NULL:\n      return SqlStdOperatorTable.IS_NULL;\n    case IS_NOT_FALSE:\n      return SqlStdOperatorTable.IS_NOT_FALSE;\n    case IS_NOT_TRUE:\n      return SqlStdOperatorTable.IS_NOT_TRUE;\n    case IS_NOT_NULL:\n      return SqlStdOperatorTable.IS_NOT_NULL;\n    default:\n      throw new AssertionError(kind);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1433,"status":"M"},{"authorDate":"2015-06-11 17:48:52","commitOrder":4,"curCode":"  public static SqlOperator op(SqlKind kind, SqlOperator operator) {\n    switch (kind) {\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    default:\n      return operator;\n    }\n  }\n","date":"2015-07-17 04:22:39","endLine":1238,"groupId":"5872","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"op","params":"(SqlKindkind@SqlOperatoroperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/f8af5c09fc98723fd35747edf4db696b7fd893.src","preCode":"  public static SqlOperator op(SqlKind kind, SqlOperator operator) {\n    switch (kind) {\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    default:\n      return operator;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1217,"status":"N"}],"commitId":"3a54e54fadfcf383693555ac753e88edb8f3f5d6","commitMessage":"@@@[CALCITE-1116] Extend simplify for reducing expressions\n\nClose apache/calcite#202\n","date":"2016-03-18 05:06:14","modifiedFileCount":"6","status":"M","submitter":"Jesus Camacho Rodriguez"},{"authorTime":"2015-06-11 17:48:52","codes":[{"authorDate":"2017-03-15 11:56:19","commitOrder":5,"curCode":"  static SqlOperator op(SqlKind kind) {\n    switch (kind) {\n    case IS_FALSE:\n      return SqlStdOperatorTable.IS_FALSE;\n    case IS_TRUE:\n      return SqlStdOperatorTable.IS_TRUE;\n    case IS_UNKNOWN:\n      return SqlStdOperatorTable.IS_UNKNOWN;\n    case IS_NULL:\n      return SqlStdOperatorTable.IS_NULL;\n    case IS_NOT_FALSE:\n      return SqlStdOperatorTable.IS_NOT_FALSE;\n    case IS_NOT_TRUE:\n      return SqlStdOperatorTable.IS_NOT_TRUE;\n    case IS_NOT_NULL:\n      return SqlStdOperatorTable.IS_NOT_NULL;\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    default:\n      throw new AssertionError(kind);\n    }\n  }\n","date":"2017-03-15 16:44:46","endLine":1690,"groupId":"14091","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"op","params":"(SqlKindkind)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f1/74f41cd876ae37cb23d14a5eb5ed0a1a69361b.src","preCode":"  private static SqlOperator op(SqlKind kind) {\n    switch (kind) {\n    case IS_FALSE:\n      return SqlStdOperatorTable.IS_FALSE;\n    case IS_TRUE:\n      return SqlStdOperatorTable.IS_TRUE;\n    case IS_UNKNOWN:\n      return SqlStdOperatorTable.IS_UNKNOWN;\n    case IS_NULL:\n      return SqlStdOperatorTable.IS_NULL;\n    case IS_NOT_FALSE:\n      return SqlStdOperatorTable.IS_NOT_FALSE;\n    case IS_NOT_TRUE:\n      return SqlStdOperatorTable.IS_NOT_TRUE;\n    case IS_NOT_NULL:\n      return SqlStdOperatorTable.IS_NOT_NULL;\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    default:\n      throw new AssertionError(kind);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1659,"status":"M"},{"authorDate":"2015-06-11 17:48:52","commitOrder":5,"curCode":"  public static SqlOperator op(SqlKind kind, SqlOperator operator) {\n    switch (kind) {\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    default:\n      return operator;\n    }\n  }\n","date":"2015-07-17 04:22:39","endLine":1238,"groupId":"5872","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"op","params":"(SqlKindkind@SqlOperatoroperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/f8af5c09fc98723fd35747edf4db696b7fd893.src","preCode":"  public static SqlOperator op(SqlKind kind, SqlOperator operator) {\n    switch (kind) {\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    default:\n      return operator;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1217,"status":"N"}],"commitId":"ca48431ee7872f294de7a10a6da0892185e8e4a7","commitMessage":"@@@[CALCITE-1695] Add class RexSimplify.  providing an explicit RexExecutor for methods to simplify RexNodes\n\nThe static simplifyXxx methods in RexUtil still exist.  but are\ndeprecated. Most do not have a RexExecutor argument so will give\nunexpected behavior if the statement is being prepared with a\nnon-default executor.\n\nRemove some methods that were added to RexUtil but have never\nappeared in a release.\n","date":"2017-03-15 16:44:46","modifiedFileCount":"17","status":"M","submitter":"Julian Hyde"},{"authorTime":"2015-06-11 17:48:52","codes":[{"authorDate":"2018-08-30 03:52:44","commitOrder":6,"curCode":"  static SqlOperator op(SqlKind kind) {\n    switch (kind) {\n    case IS_FALSE:\n      return SqlStdOperatorTable.IS_FALSE;\n    case IS_TRUE:\n      return SqlStdOperatorTable.IS_TRUE;\n    case IS_UNKNOWN:\n      return SqlStdOperatorTable.IS_UNKNOWN;\n    case IS_NULL:\n      return SqlStdOperatorTable.IS_NULL;\n    case IS_NOT_FALSE:\n      return SqlStdOperatorTable.IS_NOT_FALSE;\n    case IS_NOT_TRUE:\n      return SqlStdOperatorTable.IS_NOT_TRUE;\n    case IS_NOT_NULL:\n      return SqlStdOperatorTable.IS_NOT_NULL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case AND:\n      return SqlStdOperatorTable.AND;\n    case OR:\n      return SqlStdOperatorTable.OR;\n    case COALESCE:\n      return SqlStdOperatorTable.COALESCE;\n    default:\n      throw new AssertionError(kind);\n    }\n  }\n","date":"2018-08-30 03:52:44","endLine":1776,"groupId":"14091","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"op","params":"(SqlKindkind)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d5/09ecb47a402f74b85d9f753f7e4121e32d2f9b.src","preCode":"  static SqlOperator op(SqlKind kind) {\n    switch (kind) {\n    case IS_FALSE:\n      return SqlStdOperatorTable.IS_FALSE;\n    case IS_TRUE:\n      return SqlStdOperatorTable.IS_TRUE;\n    case IS_UNKNOWN:\n      return SqlStdOperatorTable.IS_UNKNOWN;\n    case IS_NULL:\n      return SqlStdOperatorTable.IS_NULL;\n    case IS_NOT_FALSE:\n      return SqlStdOperatorTable.IS_NOT_FALSE;\n    case IS_NOT_TRUE:\n      return SqlStdOperatorTable.IS_NOT_TRUE;\n    case IS_NOT_NULL:\n      return SqlStdOperatorTable.IS_NOT_NULL;\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    default:\n      throw new AssertionError(kind);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1735,"status":"M"},{"authorDate":"2015-06-11 17:48:52","commitOrder":6,"curCode":"  public static SqlOperator op(SqlKind kind, SqlOperator operator) {\n    switch (kind) {\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    default:\n      return operator;\n    }\n  }\n","date":"2015-07-17 04:22:39","endLine":1238,"groupId":"5872","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"op","params":"(SqlKindkind@SqlOperatoroperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/f8af5c09fc98723fd35747edf4db696b7fd893.src","preCode":"  public static SqlOperator op(SqlKind kind, SqlOperator operator) {\n    switch (kind) {\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    default:\n      return operator;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1217,"status":"N"}],"commitId":"6a22cc25f9f7d083f30ff361d8c907f4d6173737","commitMessage":"@@@Support AND.  OR.  COALESCE.  IS...DISTINCT in RexUtil#op\n","date":"2018-08-30 03:52:44","modifiedFileCount":"1","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2015-06-11 17:48:52","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":7,"curCode":"  public static SqlOperator op(SqlKind kind) {\n    switch (kind) {\n    case IS_FALSE:\n      return SqlStdOperatorTable.IS_FALSE;\n    case IS_TRUE:\n      return SqlStdOperatorTable.IS_TRUE;\n    case IS_UNKNOWN:\n      return SqlStdOperatorTable.IS_UNKNOWN;\n    case IS_NULL:\n      return SqlStdOperatorTable.IS_NULL;\n    case IS_NOT_FALSE:\n      return SqlStdOperatorTable.IS_NOT_FALSE;\n    case IS_NOT_TRUE:\n      return SqlStdOperatorTable.IS_NOT_TRUE;\n    case IS_NOT_NULL:\n      return SqlStdOperatorTable.IS_NOT_NULL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case AND:\n      return SqlStdOperatorTable.AND;\n    case OR:\n      return SqlStdOperatorTable.OR;\n    case COALESCE:\n      return SqlStdOperatorTable.COALESCE;\n    default:\n      throw new AssertionError(kind);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":2007,"groupId":"101732","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"op","params":"(SqlKindkind)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/3194f8e20c05da6c323d27209a60257d16afcd.src","preCode":"  static SqlOperator op(SqlKind kind) {\n    switch (kind) {\n    case IS_FALSE:\n      return SqlStdOperatorTable.IS_FALSE;\n    case IS_TRUE:\n      return SqlStdOperatorTable.IS_TRUE;\n    case IS_UNKNOWN:\n      return SqlStdOperatorTable.IS_UNKNOWN;\n    case IS_NULL:\n      return SqlStdOperatorTable.IS_NULL;\n    case IS_NOT_FALSE:\n      return SqlStdOperatorTable.IS_NOT_FALSE;\n    case IS_NOT_TRUE:\n      return SqlStdOperatorTable.IS_NOT_TRUE;\n    case IS_NOT_NULL:\n      return SqlStdOperatorTable.IS_NOT_NULL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case AND:\n      return SqlStdOperatorTable.AND;\n    case OR:\n      return SqlStdOperatorTable.OR;\n    case COALESCE:\n      return SqlStdOperatorTable.COALESCE;\n    default:\n      throw new AssertionError(kind);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1966,"status":"M"},{"authorDate":"2015-06-11 17:48:52","commitOrder":7,"curCode":"  public static SqlOperator op(SqlKind kind, SqlOperator operator) {\n    switch (kind) {\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    default:\n      return operator;\n    }\n  }\n","date":"2015-07-17 04:22:39","endLine":1238,"groupId":"101732","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"op","params":"(SqlKindkind@SqlOperatoroperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/f8af5c09fc98723fd35747edf4db696b7fd893.src","preCode":"  public static SqlOperator op(SqlKind kind, SqlOperator operator) {\n    switch (kind) {\n    case EQUALS:\n      return SqlStdOperatorTable.EQUALS;\n    case NOT_EQUALS:\n      return SqlStdOperatorTable.NOT_EQUALS;\n    case GREATER_THAN:\n      return SqlStdOperatorTable.GREATER_THAN;\n    case GREATER_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.GREATER_THAN_OR_EQUAL;\n    case LESS_THAN:\n      return SqlStdOperatorTable.LESS_THAN;\n    case LESS_THAN_OR_EQUAL:\n      return SqlStdOperatorTable.LESS_THAN_OR_EQUAL;\n    case IS_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_DISTINCT_FROM;\n    case IS_NOT_DISTINCT_FROM:\n      return SqlStdOperatorTable.IS_NOT_DISTINCT_FROM;\n    default:\n      return operator;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1217,"status":"N"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
