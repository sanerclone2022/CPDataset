[{"authorTime":"2017-08-24 09:14:13","codes":[{"authorDate":"2020-06-19 02:09:17","commitOrder":4,"curCode":"  private static <TSource, TKey, TAccumulate, TResult> Enumerable<TResult> groupBy_(\n      final Map<TKey, TAccumulate> map, Enumerable<TSource> enumerable,\n      Function1<TSource, TKey> keySelector,\n      Function0<TAccumulate> accumulatorInitializer,\n      Function2<TAccumulate, TSource, TAccumulate> accumulatorAdder,\n      final Function2<TKey, TAccumulate, TResult> resultSelector) {\n    try (Enumerator<TSource> os = enumerable.enumerator()) {\n      while (os.moveNext()) {\n        TSource o = os.current();\n        TKey key = keySelector.apply(o);\n        TAccumulate accumulator = map.get(key);\n        if (accumulator == null) {\n          accumulator = accumulatorInitializer.apply();\n          accumulator = accumulatorAdder.apply(accumulator, o);\n          map.put(key, accumulator);\n        } else {\n          TAccumulate accumulator0 = accumulator;\n          accumulator = accumulatorAdder.apply(accumulator, o);\n          if (accumulator != accumulator0) {\n            map.put(key, accumulator);\n          }\n        }\n      }\n    }\n    return new LookupResultEnumerable<>(map, resultSelector);\n  }\n","date":"2020-06-29 16:36:00","endLine":972,"groupId":"11876","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"groupBy_","params":"(finalMap<TKey@TAccumulate>map@Enumerable<TSource>enumerable@Function1<TSource@TKey>keySelector@Function0<TAccumulate>accumulatorInitializer@Function2<TAccumulate@TSource@TAccumulate>accumulatorAdder@finalFunction2<TKey@TAccumulate@TResult>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/1be29b1674ec11926bcb0f2157ddf4571aab83.src","preCode":"  private static <TSource, TKey, TAccumulate, TResult> Enumerable<TResult> groupBy_(\n      final Map<TKey, TAccumulate> map, Enumerable<TSource> enumerable,\n      Function1<TSource, TKey> keySelector,\n      Function0<TAccumulate> accumulatorInitializer,\n      Function2<TAccumulate, TSource, TAccumulate> accumulatorAdder,\n      final Function2<TKey, TAccumulate, TResult> resultSelector) {\n    try (Enumerator<TSource> os = enumerable.enumerator()) {\n      while (os.moveNext()) {\n        TSource o = os.current();\n        TKey key = keySelector.apply(o);\n        TAccumulate accumulator = map.get(key);\n        if (accumulator == null) {\n          accumulator = accumulatorInitializer.apply();\n          accumulator = accumulatorAdder.apply(accumulator, o);\n          map.put(key, accumulator);\n        } else {\n          TAccumulate accumulator0 = accumulator;\n          accumulator = accumulatorAdder.apply(accumulator, o);\n          if (accumulator != accumulator0) {\n            map.put(key, accumulator);\n          }\n        }\n      }\n    }\n    return new LookupResultEnumerable<>(map, resultSelector);\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":947,"status":"B"},{"authorDate":"2017-08-24 09:14:13","commitOrder":4,"curCode":"  private static <TSource, TKey, TAccumulate, TResult> Enumerable<TResult> groupByMultiple_(\n      final Map<TKey, TAccumulate> map, Enumerable<TSource> enumerable,\n      List<Function1<TSource, TKey>> keySelectors,\n      Function0<TAccumulate> accumulatorInitializer,\n      Function2<TAccumulate, TSource, TAccumulate> accumulatorAdder,\n      final Function2<TKey, TAccumulate, TResult> resultSelector) {\n    try (Enumerator<TSource> os = enumerable.enumerator()) {\n      while (os.moveNext()) {\n        for (Function1<TSource, TKey> keySelector : keySelectors) {\n          TSource o = os.current();\n          TKey key = keySelector.apply(o);\n          TAccumulate accumulator = map.get(key);\n          if (accumulator == null) {\n            accumulator = accumulatorInitializer.apply();\n            accumulator = accumulatorAdder.apply(accumulator, o);\n            map.put(key, accumulator);\n          } else {\n            TAccumulate accumulator0 = accumulator;\n            accumulator = accumulatorAdder.apply(accumulator, o);\n            if (accumulator != accumulator0) {\n              map.put(key, accumulator);\n            }\n          }\n        }\n      }\n    }\n    return new LookupResultEnumerable<>(map, resultSelector);\n  }\n","date":"2017-08-24 09:14:41","endLine":872,"groupId":"11876","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"groupByMultiple_","params":"(finalMap<TKey@TAccumulate>map@Enumerable<TSource>enumerable@List<Function1<TSource@TKey>>keySelectors@Function0<TAccumulate>accumulatorInitializer@Function2<TAccumulate@TSource@TAccumulate>accumulatorAdder@finalFunction2<TKey@TAccumulate@TResult>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/64/6d95b46d308e2c218515b3f39ed74c5b9eaeff.src","preCode":"  private static <TSource, TKey, TAccumulate, TResult> Enumerable<TResult> groupByMultiple_(\n      final Map<TKey, TAccumulate> map, Enumerable<TSource> enumerable,\n      List<Function1<TSource, TKey>> keySelectors,\n      Function0<TAccumulate> accumulatorInitializer,\n      Function2<TAccumulate, TSource, TAccumulate> accumulatorAdder,\n      final Function2<TKey, TAccumulate, TResult> resultSelector) {\n    try (Enumerator<TSource> os = enumerable.enumerator()) {\n      while (os.moveNext()) {\n        for (Function1<TSource, TKey> keySelector : keySelectors) {\n          TSource o = os.current();\n          TKey key = keySelector.apply(o);\n          TAccumulate accumulator = map.get(key);\n          if (accumulator == null) {\n            accumulator = accumulatorInitializer.apply();\n            accumulator = accumulatorAdder.apply(accumulator, o);\n            map.put(key, accumulator);\n          } else {\n            TAccumulate accumulator0 = accumulator;\n            accumulator = accumulatorAdder.apply(accumulator, o);\n            if (accumulator != accumulator0) {\n              map.put(key, accumulator);\n            }\n          }\n        }\n      }\n    }\n    return new LookupResultEnumerable<>(map, resultSelector);\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":845,"status":"NB"}],"commitId":"bf9ff001db743bcba35943daf7fec5fe8b8b207e","commitMessage":"@@@[CALCITE-4008] Implement Code generation for EnumerableSortedAggregate (Rui Wang).\n","date":"2020-06-29 16:36:00","modifiedFileCount":"6","status":"M","submitter":"amaliujia"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  private static <TSource, TKey, TAccumulate, TResult> Enumerable<TResult> groupBy_(\n      final Map<TKey, TAccumulate> map, Enumerable<TSource> enumerable,\n      Function1<TSource, TKey> keySelector,\n      Function0<TAccumulate> accumulatorInitializer,\n      Function2<TAccumulate, TSource, TAccumulate> accumulatorAdder,\n      final Function2<TKey, TAccumulate, TResult> resultSelector) {\n    try (Enumerator<TSource> os = enumerable.enumerator()) {\n      while (os.moveNext()) {\n        TSource o = os.current();\n        TKey key = keySelector.apply(o);\n        @SuppressWarnings(\"argument.type.incompatible\")\n        TAccumulate accumulator = map.get(key);\n        if (accumulator == null) {\n          accumulator = accumulatorInitializer.apply();\n          accumulator = accumulatorAdder.apply(accumulator, o);\n          map.put(key, accumulator);\n        } else {\n          TAccumulate accumulator0 = accumulator;\n          accumulator = accumulatorAdder.apply(accumulator, o);\n          if (accumulator != accumulator0) {\n            map.put(key, accumulator);\n          }\n        }\n      }\n    }\n    return new LookupResultEnumerable<>(map, resultSelector);\n  }\n","date":"2020-11-30 06:45:33","endLine":998,"groupId":"12120","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"groupBy_","params":"(finalMap<TKey@TAccumulate>map@Enumerable<TSource>enumerable@Function1<TSource@TKey>keySelector@Function0<TAccumulate>accumulatorInitializer@Function2<TAccumulate@TSource@TAccumulate>accumulatorAdder@finalFunction2<TKey@TAccumulate@TResult>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/5681a61d625c97b1c82a2d555f8635b1edf6cb.src","preCode":"  private static <TSource, TKey, TAccumulate, TResult> Enumerable<TResult> groupBy_(\n      final Map<TKey, TAccumulate> map, Enumerable<TSource> enumerable,\n      Function1<TSource, TKey> keySelector,\n      Function0<TAccumulate> accumulatorInitializer,\n      Function2<TAccumulate, TSource, TAccumulate> accumulatorAdder,\n      final Function2<TKey, TAccumulate, TResult> resultSelector) {\n    try (Enumerator<TSource> os = enumerable.enumerator()) {\n      while (os.moveNext()) {\n        TSource o = os.current();\n        TKey key = keySelector.apply(o);\n        TAccumulate accumulator = map.get(key);\n        if (accumulator == null) {\n          accumulator = accumulatorInitializer.apply();\n          accumulator = accumulatorAdder.apply(accumulator, o);\n          map.put(key, accumulator);\n        } else {\n          TAccumulate accumulator0 = accumulator;\n          accumulator = accumulatorAdder.apply(accumulator, o);\n          if (accumulator != accumulator0) {\n            map.put(key, accumulator);\n          }\n        }\n      }\n    }\n    return new LookupResultEnumerable<>(map, resultSelector);\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":972,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  private static <TSource, TKey, TAccumulate, TResult> Enumerable<TResult> groupByMultiple_(\n      final Map<TKey, TAccumulate> map, Enumerable<TSource> enumerable,\n      List<Function1<TSource, TKey>> keySelectors,\n      Function0<TAccumulate> accumulatorInitializer,\n      Function2<TAccumulate, TSource, TAccumulate> accumulatorAdder,\n      final Function2<TKey, TAccumulate, TResult> resultSelector) {\n    try (Enumerator<TSource> os = enumerable.enumerator()) {\n      while (os.moveNext()) {\n        for (Function1<TSource, TKey> keySelector : keySelectors) {\n          TSource o = os.current();\n          TKey key = keySelector.apply(o);\n          @SuppressWarnings(\"argument.type.incompatible\")\n          TAccumulate accumulator = map.get(key);\n          if (accumulator == null) {\n            accumulator = accumulatorInitializer.apply();\n            accumulator = accumulatorAdder.apply(accumulator, o);\n            map.put(key, accumulator);\n          } else {\n            TAccumulate accumulator0 = accumulator;\n            accumulator = accumulatorAdder.apply(accumulator, o);\n            if (accumulator != accumulator0) {\n              map.put(key, accumulator);\n            }\n          }\n        }\n      }\n    }\n    return new LookupResultEnumerable<>(map, resultSelector);\n  }\n","date":"2020-11-30 06:45:33","endLine":1028,"groupId":"12120","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"groupByMultiple_","params":"(finalMap<TKey@TAccumulate>map@Enumerable<TSource>enumerable@List<Function1<TSource@TKey>>keySelectors@Function0<TAccumulate>accumulatorInitializer@Function2<TAccumulate@TSource@TAccumulate>accumulatorAdder@finalFunction2<TKey@TAccumulate@TResult>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/5681a61d625c97b1c82a2d555f8635b1edf6cb.src","preCode":"  private static <TSource, TKey, TAccumulate, TResult> Enumerable<TResult> groupByMultiple_(\n      final Map<TKey, TAccumulate> map, Enumerable<TSource> enumerable,\n      List<Function1<TSource, TKey>> keySelectors,\n      Function0<TAccumulate> accumulatorInitializer,\n      Function2<TAccumulate, TSource, TAccumulate> accumulatorAdder,\n      final Function2<TKey, TAccumulate, TResult> resultSelector) {\n    try (Enumerator<TSource> os = enumerable.enumerator()) {\n      while (os.moveNext()) {\n        for (Function1<TSource, TKey> keySelector : keySelectors) {\n          TSource o = os.current();\n          TKey key = keySelector.apply(o);\n          TAccumulate accumulator = map.get(key);\n          if (accumulator == null) {\n            accumulator = accumulatorInitializer.apply();\n            accumulator = accumulatorAdder.apply(accumulator, o);\n            map.put(key, accumulator);\n          } else {\n            TAccumulate accumulator0 = accumulator;\n            accumulator = accumulatorAdder.apply(accumulator, o);\n            if (accumulator != accumulator0) {\n              map.put(key, accumulator);\n            }\n          }\n        }\n      }\n    }\n    return new LookupResultEnumerable<>(map, resultSelector);\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1000,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
