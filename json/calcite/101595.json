[{"authorTime":"2019-07-10 08:22:35","codes":[{"authorDate":"2018-12-04 06:15:52","commitOrder":2,"curCode":"    Sql withPostgresqlModifiedTypeSystem() {\n      \r\n      final PostgresqlSqlDialect postgresqlSqlDialect =\n          new PostgresqlSqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.POSTGRESQL)\n              .withIdentifierQuoteString(\"\\\"\")\n              .withDataTypeSystem(new RelDataTypeSystemImpl() {\n                @Override public int getMaxPrecision(SqlTypeName typeName) {\n                  switch (typeName) {\n                    case VARCHAR:\n                      return 256;\n                    default:\n                      return super.getMaxPrecision(typeName);\n                  }\n                }\n              }));\n      return dialect(postgresqlSqlDialect);\n    }\n","date":"2018-12-04 08:19:00","endLine":3028,"groupId":"16872","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"withPostgresqlModifiedTypeSystem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ca/277825998b20cd0e52fda60b853f1c5a3d6044.src","preCode":"    Sql withPostgresqlModifiedTypeSystem() {\n      \r\n      final PostgresqlSqlDialect postgresqlSqlDialect =\n          new PostgresqlSqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.POSTGRESQL)\n              .withIdentifierQuoteString(\"\\\"\")\n              .withDataTypeSystem(new RelDataTypeSystemImpl() {\n                @Override public int getMaxPrecision(SqlTypeName typeName) {\n                  switch (typeName) {\n                    case VARCHAR:\n                      return 256;\n                    default:\n                      return super.getMaxPrecision(typeName);\n                  }\n                }\n              }));\n      return dialect(postgresqlSqlDialect);\n    }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3011,"status":"NB"},{"authorDate":"2019-07-10 08:22:35","commitOrder":2,"curCode":"    Sql withOracleModifiedTypeSystem() {\n      \r\n      final OracleSqlDialect oracleSqlDialect =\n          new OracleSqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.ORACLE)\n              .withIdentifierQuoteString(\"\\\"\")\n              .withDataTypeSystem(new RelDataTypeSystemImpl() {\n                @Override public int getMaxPrecision(SqlTypeName typeName) {\n                  switch (typeName) {\n                    case VARCHAR:\n                      return 512;\n                    default:\n                      return super.getMaxPrecision(typeName);\n                  }\n                }\n              }));\n      return dialect(oracleSqlDialect);\n    }\n","date":"2019-07-13 06:07:34","endLine":3664,"groupId":"16872","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"withOracleModifiedTypeSystem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d2/4913709f09e3c0ef37b1bee67636dfb25238bc.src","preCode":"    Sql withOracleModifiedTypeSystem() {\n      \r\n      final OracleSqlDialect oracleSqlDialect =\n          new OracleSqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.ORACLE)\n              .withIdentifierQuoteString(\"\\\"\")\n              .withDataTypeSystem(new RelDataTypeSystemImpl() {\n                @Override public int getMaxPrecision(SqlTypeName typeName) {\n                  switch (typeName) {\n                    case VARCHAR:\n                      return 512;\n                    default:\n                      return super.getMaxPrecision(typeName);\n                  }\n                }\n              }));\n      return dialect(oracleSqlDialect);\n    }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3647,"status":"B"}],"commitId":"0732283cab7894ffdce6a22ebe5d31b28d389a4d","commitMessage":"@@@[CALCITE-3189] Multiple fixes for Oracle SQL dialect\n\nClose apache/calcite#1312\n","date":"2019-07-13 06:07:34","modifiedFileCount":"3","status":"M","submitter":"Jesus Camacho Rodriguez"},{"authorTime":"2019-10-21 19:58:11","codes":[{"authorDate":"2019-10-21 19:58:11","commitOrder":3,"curCode":"    Sql withPostgresqlModifiedTypeSystem() {\n      \r\n      final PostgresqlSqlDialect postgresqlSqlDialect =\n          new PostgresqlSqlDialect(PostgresqlSqlDialect.DEFAULT_CONTEXT\n              .withDataTypeSystem(new RelDataTypeSystemImpl() {\n                @Override public int getMaxPrecision(SqlTypeName typeName) {\n                  switch (typeName) {\n                  case VARCHAR:\n                    return 256;\n                  default:\n                    return super.getMaxPrecision(typeName);\n                  }\n                }\n              }));\n      return dialect(postgresqlSqlDialect);\n    }\n","date":"2019-10-23 10:33:14","endLine":4161,"groupId":"101595","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"withPostgresqlModifiedTypeSystem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/1cdb733bb839d94a8497549c9a61c7fefe34ef.src","preCode":"    Sql withPostgresqlModifiedTypeSystem() {\n      \r\n      final PostgresqlSqlDialect postgresqlSqlDialect =\n          new PostgresqlSqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.POSTGRESQL)\n              .withIdentifierQuoteString(\"\\\"\")\n              .withDataTypeSystem(new RelDataTypeSystemImpl() {\n                @Override public int getMaxPrecision(SqlTypeName typeName) {\n                  switch (typeName) {\n                  case VARCHAR:\n                    return 256;\n                  default:\n                    return super.getMaxPrecision(typeName);\n                  }\n                }\n              }));\n      return dialect(postgresqlSqlDialect);\n    }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4146,"status":"M"},{"authorDate":"2019-10-21 19:58:11","commitOrder":3,"curCode":"    Sql withOracleModifiedTypeSystem() {\n      \r\n      final OracleSqlDialect oracleSqlDialect =\n          new OracleSqlDialect(OracleSqlDialect.DEFAULT_CONTEXT\n              .withDataTypeSystem(new RelDataTypeSystemImpl() {\n                @Override public int getMaxPrecision(SqlTypeName typeName) {\n                  switch (typeName) {\n                    case VARCHAR:\n                      return 512;\n                    default:\n                      return super.getMaxPrecision(typeName);\n                  }\n                }\n              }));\n      return dialect(oracleSqlDialect);\n    }\n","date":"2019-10-23 10:33:14","endLine":4178,"groupId":"101595","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"withOracleModifiedTypeSystem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/1cdb733bb839d94a8497549c9a61c7fefe34ef.src","preCode":"    Sql withOracleModifiedTypeSystem() {\n      \r\n      final OracleSqlDialect oracleSqlDialect =\n          new OracleSqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.ORACLE)\n              .withIdentifierQuoteString(\"\\\"\")\n              .withDataTypeSystem(new RelDataTypeSystemImpl() {\n                @Override public int getMaxPrecision(SqlTypeName typeName) {\n                  switch (typeName) {\n                    case VARCHAR:\n                      return 512;\n                    default:\n                      return super.getMaxPrecision(typeName);\n                  }\n                }\n              }));\n      return dialect(oracleSqlDialect);\n    }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4163,"status":"M"}],"commitId":"ff43dcb95caa251e5fc8120980fc70c8fea8ac40","commitMessage":"@@@[CALCITE-3416] SQL Dialects DEFAULTs should be more extensible\n\n* In each SqlDialect sub-class.  add a new public static final member\nnamed DEFAULT_CONTEXT used to extend the dialect\n* Make SqlDialect.emptyContext private.  we should now always use\nSqlDialect.EMPTY_CONTEXT instead\n","date":"2019-10-23 10:33:14","modifiedFileCount":"32","status":"M","submitter":"yuzhao.cyz"}]
