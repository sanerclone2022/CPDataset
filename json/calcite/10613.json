[{"authorTime":"2019-08-21 20:49:48","codes":[{"authorDate":"2019-08-21 20:49:48","commitOrder":1,"curCode":"  @Test public void testInnerHashJoin() {\n    assertThat(\n        EnumerableDefaults.hashJoin(\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Emp(10, \"Fred\"),\n                    new Emp(20, \"Theodore\"),\n                    new Emp(20, \"Sebastian\"),\n                    new Emp(30, \"Joe\"),\n                    new Emp(30, \"Greg\"))),\n            Linq4j.asEnumerable(\n                Arrays.asList(new Dept(15, \"Marketing\"), new Dept(20, \"Sales\"),\n                    new Dept(30, \"Research\"), new Dept(30, \"Development\"))),\n            e -> e.deptno,\n            d -> d.deptno,\n            (v0, v1) -> v0 + \", \" + v1, null)\n            .toList()\n            .toString(),\n        equalTo(\"[Emp(20, Theodore), Dept(20, Sales),\"\n            + \" Emp(20, Sebastian), Dept(20, Sales),\"\n            + \" Emp(30, Joe), Dept(30, Research),\"\n            + \" Emp(30, Joe), Dept(30, Development),\"\n            + \" Emp(30, Greg), Dept(30, Research),\"\n            + \" Emp(30, Greg), Dept(30, Development)]\"));\n  }\n","date":"2019-08-30 14:54:12","endLine":279,"groupId":"9273","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInnerHashJoin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8c/7f42785c39abb25e6c17054ee79306765b831f.src","preCode":"  @Test public void testInnerHashJoin() {\n    assertThat(\n        EnumerableDefaults.hashJoin(\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Emp(10, \"Fred\"),\n                    new Emp(20, \"Theodore\"),\n                    new Emp(20, \"Sebastian\"),\n                    new Emp(30, \"Joe\"),\n                    new Emp(30, \"Greg\"))),\n            Linq4j.asEnumerable(\n                Arrays.asList(new Dept(15, \"Marketing\"), new Dept(20, \"Sales\"),\n                    new Dept(30, \"Research\"), new Dept(30, \"Development\"))),\n            e -> e.deptno,\n            d -> d.deptno,\n            (v0, v1) -> v0 + \", \" + v1, null)\n            .toList()\n            .toString(),\n        equalTo(\"[Emp(20, Theodore), Dept(20, Sales),\"\n            + \" Emp(20, Sebastian), Dept(20, Sales),\"\n            + \" Emp(30, Joe), Dept(30, Research),\"\n            + \" Emp(30, Joe), Dept(30, Development),\"\n            + \" Emp(30, Greg), Dept(30, Research),\"\n            + \" Emp(30, Greg), Dept(30, Development)]\"));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"B"},{"authorDate":"2019-08-21 20:49:48","commitOrder":1,"curCode":"  @Test public void testFullHashJoinWithNonEquiConditions() {\n    assertThat(\n        EnumerableDefaults.hashJoin(\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Emp(10, \"Fred\"),\n                    new Emp(20, \"Theodore\"),\n                    new Emp(20, \"Sebastian\"),\n                    new Emp(30, \"Greg\"))),\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Dept(15, \"Marketing\"),\n                    new Dept(20, \"Sales\"),\n                    new Dept(30, \"Research\"),\n                    new Dept(30, \"Development\"))),\n            e -> e.deptno,\n            d -> d.deptno,\n            (v0, v1) -> v0 + \", \" + v1, null, true, true,\n            (v0, v1) -> v0.deptno < 30)\n            .toList()\n            .toString(),\n        equalTo(\"[Emp(10, Fred), null,\"\n            + \" Emp(20, Theodore), Dept(20, Sales),\"\n            + \" Emp(20, Sebastian), Dept(20, Sales),\"\n            + \" Emp(30, Greg), null,\"\n            + \" null, Dept(15, Marketing),\"\n            + \" null, Dept(30, Research),\"\n            + \" null, Dept(30, Development)]\"));\n  }\n","date":"2019-08-30 14:54:12","endLine":368,"groupId":"9273","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFullHashJoinWithNonEquiConditions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8c/7f42785c39abb25e6c17054ee79306765b831f.src","preCode":"  @Test public void testFullHashJoinWithNonEquiConditions() {\n    assertThat(\n        EnumerableDefaults.hashJoin(\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Emp(10, \"Fred\"),\n                    new Emp(20, \"Theodore\"),\n                    new Emp(20, \"Sebastian\"),\n                    new Emp(30, \"Greg\"))),\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Dept(15, \"Marketing\"),\n                    new Dept(20, \"Sales\"),\n                    new Dept(30, \"Research\"),\n                    new Dept(30, \"Development\"))),\n            e -> e.deptno,\n            d -> d.deptno,\n            (v0, v1) -> v0 + \", \" + v1, null, true, true,\n            (v0, v1) -> v0.deptno < 30)\n            .toList()\n            .toString(),\n        equalTo(\"[Emp(10, Fred), null,\"\n            + \" Emp(20, Theodore), Dept(20, Sales),\"\n            + \" Emp(20, Sebastian), Dept(20, Sales),\"\n            + \" Emp(30, Greg), null,\"\n            + \" null, Dept(15, Marketing),\"\n            + \" null, Dept(30, Research),\"\n            + \" null, Dept(30, Development)]\"));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":340,"status":"B"}],"commitId":"6cec81178e6739d9b1f3474dc5dbd7488dda2464","commitMessage":"@@@[CALCITE-2973]. [CALCITE-3284] Allow joins(hash. semi. anti) that have equi conditions to be executed using a hash join algorithm\n","date":"2019-08-30 14:54:12","modifiedFileCount":"7","status":"B","submitter":"Lai Zhou"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testInnerHashJoin() {\n    assertThat(\n        EnumerableDefaults.hashJoin(\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Emp(10, \"Fred\"),\n                    new Emp(20, \"Theodore\"),\n                    new Emp(20, \"Sebastian\"),\n                    new Emp(30, \"Joe\"),\n                    new Emp(30, \"Greg\"))),\n            Linq4j.asEnumerable(\n                Arrays.asList(new Dept(15, \"Marketing\"), new Dept(20, \"Sales\"),\n                    new Dept(30, \"Research\"), new Dept(30, \"Development\"))),\n            e -> e.deptno,\n            d -> d.deptno,\n            (v0, v1) -> v0 + \", \" + v1, null)\n            .toList()\n            .toString(),\n        equalTo(\"[Emp(20, Theodore), Dept(20, Sales),\"\n            + \" Emp(20, Sebastian), Dept(20, Sales),\"\n            + \" Emp(30, Joe), Dept(30, Research),\"\n            + \" Emp(30, Joe), Dept(30, Development),\"\n            + \" Emp(30, Greg), Dept(30, Research),\"\n            + \" Emp(30, Greg), Dept(30, Development)]\"));\n  }\n","date":"2020-04-06 04:57:49","endLine":458,"groupId":"10613","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInnerHashJoin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/79/cf69871394ea21e6f173abd80d6d24cf781e51.src","preCode":"  @Test public void testInnerHashJoin() {\n    assertThat(\n        EnumerableDefaults.hashJoin(\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Emp(10, \"Fred\"),\n                    new Emp(20, \"Theodore\"),\n                    new Emp(20, \"Sebastian\"),\n                    new Emp(30, \"Joe\"),\n                    new Emp(30, \"Greg\"))),\n            Linq4j.asEnumerable(\n                Arrays.asList(new Dept(15, \"Marketing\"), new Dept(20, \"Sales\"),\n                    new Dept(30, \"Research\"), new Dept(30, \"Development\"))),\n            e -> e.deptno,\n            d -> d.deptno,\n            (v0, v1) -> v0 + \", \" + v1, null)\n            .toList()\n            .toString(),\n        equalTo(\"[Emp(20, Theodore), Dept(20, Sales),\"\n            + \" Emp(20, Sebastian), Dept(20, Sales),\"\n            + \" Emp(30, Joe), Dept(30, Research),\"\n            + \" Emp(30, Joe), Dept(30, Development),\"\n            + \" Emp(30, Greg), Dept(30, Research),\"\n            + \" Emp(30, Greg), Dept(30, Development)]\"));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":434,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testFullHashJoinWithNonEquiConditions() {\n    assertThat(\n        EnumerableDefaults.hashJoin(\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Emp(10, \"Fred\"),\n                    new Emp(20, \"Theodore\"),\n                    new Emp(20, \"Sebastian\"),\n                    new Emp(30, \"Greg\"))),\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Dept(15, \"Marketing\"),\n                    new Dept(20, \"Sales\"),\n                    new Dept(30, \"Research\"),\n                    new Dept(30, \"Development\"))),\n            e -> e.deptno,\n            d -> d.deptno,\n            (v0, v1) -> v0 + \", \" + v1, null, true, true,\n            (v0, v1) -> v0.deptno < 30)\n            .toList()\n            .toString(),\n        equalTo(\"[Emp(10, Fred), null,\"\n            + \" Emp(20, Theodore), Dept(20, Sales),\"\n            + \" Emp(20, Sebastian), Dept(20, Sales),\"\n            + \" Emp(30, Greg), null,\"\n            + \" null, Dept(15, Marketing),\"\n            + \" null, Dept(30, Research),\"\n            + \" null, Dept(30, Development)]\"));\n  }\n","date":"2020-04-06 04:57:49","endLine":545,"groupId":"10613","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFullHashJoinWithNonEquiConditions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/79/cf69871394ea21e6f173abd80d6d24cf781e51.src","preCode":"  @Test public void testFullHashJoinWithNonEquiConditions() {\n    assertThat(\n        EnumerableDefaults.hashJoin(\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Emp(10, \"Fred\"),\n                    new Emp(20, \"Theodore\"),\n                    new Emp(20, \"Sebastian\"),\n                    new Emp(30, \"Greg\"))),\n            Linq4j.asEnumerable(\n                Arrays.asList(\n                    new Dept(15, \"Marketing\"),\n                    new Dept(20, \"Sales\"),\n                    new Dept(30, \"Research\"),\n                    new Dept(30, \"Development\"))),\n            e -> e.deptno,\n            d -> d.deptno,\n            (v0, v1) -> v0 + \", \" + v1, null, true, true,\n            (v0, v1) -> v0.deptno < 30)\n            .toList()\n            .toString(),\n        equalTo(\"[Emp(10, Fred), null,\"\n            + \" Emp(20, Theodore), Dept(20, Sales),\"\n            + \" Emp(20, Sebastian), Dept(20, Sales),\"\n            + \" Emp(30, Greg), null,\"\n            + \" null, Dept(15, Marketing),\"\n            + \" null, Dept(30, Research),\"\n            + \" null, Dept(30, Development)]\"));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/runtime/EnumerablesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":517,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
