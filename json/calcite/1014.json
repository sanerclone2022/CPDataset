[{"authorTime":"2018-09-05 07:54:05","codes":[{"authorDate":"2018-09-05 07:54:05","commitOrder":3,"curCode":"  @Override @Test public void testMetadata() {\n    SqlAbstractParserImpl.Metadata metadata = getSqlParser(\"\").getMetadata();\n    assertThat(metadata.isReservedFunctionName(\"ABS\"), is(true));\n    assertThat(metadata.isReservedFunctionName(\"FOO\"), is(false));\n\n    assertThat(metadata.isContextVariableName(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isContextVariableName(\"ABS\"), is(false));\n    assertThat(metadata.isContextVariableName(\"FOO\"), is(false));\n\n    assertThat(metadata.isNonReservedKeyword(\"A\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"SELECT\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"FOO\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"ABS\"), is(true)); \r\n\n    assertThat(metadata.isKeyword(\"ABS\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isKeyword(\"SELECT\"), is(true));\n    assertThat(metadata.isKeyword(\"HAVING\"), is(true));\n    assertThat(metadata.isKeyword(\"A\"), is(true));\n    assertThat(metadata.isKeyword(\"BAR\"), is(false));\n\n    assertThat(metadata.isReservedWord(\"SELECT\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_CATALOG\"), is(false)); \r\n    assertThat(metadata.isReservedWord(\"CURRENT_SCHEMA\"), is(false)); \r\n    assertThat(metadata.isReservedWord(\"KEY\"), is(false));\n\n    String jdbcKeywords = metadata.getJdbcKeywords();\n    assertThat(jdbcKeywords.contains(\",COLLECT,\"), is(false)); \r\n    assertThat(!jdbcKeywords.contains(\",SELECT,\"), is(true));\n  }\n","date":"2018-11-02 07:02:56","endLine":89,"groupId":"4724","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/89/6a96edd3fe2cbd3c39603fe81de6f2b8964f54.src","preCode":"  @Override @Test public void testMetadata() {\n    SqlAbstractParserImpl.Metadata metadata = getSqlParser(\"\").getMetadata();\n    assertThat(metadata.isReservedFunctionName(\"ABS\"), is(true));\n    assertThat(metadata.isReservedFunctionName(\"FOO\"), is(false));\n\n    assertThat(metadata.isContextVariableName(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isContextVariableName(\"ABS\"), is(false));\n    assertThat(metadata.isContextVariableName(\"FOO\"), is(false));\n\n    assertThat(metadata.isNonReservedKeyword(\"A\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"SELECT\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"FOO\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"ABS\"), is(true)); \r\n\n    assertThat(metadata.isKeyword(\"ABS\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isKeyword(\"SELECT\"), is(true));\n    assertThat(metadata.isKeyword(\"HAVING\"), is(true));\n    assertThat(metadata.isKeyword(\"A\"), is(true));\n    assertThat(metadata.isKeyword(\"BAR\"), is(false));\n\n    assertThat(metadata.isReservedWord(\"SELECT\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_CATALOG\"), is(false)); \r\n    assertThat(metadata.isReservedWord(\"CURRENT_SCHEMA\"), is(false)); \r\n    assertThat(metadata.isReservedWord(\"KEY\"), is(false));\n\n    String jdbcKeywords = metadata.getJdbcKeywords();\n    assertThat(jdbcKeywords.contains(\",COLLECT,\"), is(false)); \r\n    assertThat(!jdbcKeywords.contains(\",SELECT,\"), is(true));\n  }\n","realPath":"babel/src/test/java/org/apache/calcite/test/BabelParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2018-09-05 07:54:05","commitOrder":3,"curCode":"  @Test public void testMetadata() {\n    SqlAbstractParserImpl.Metadata metadata = getSqlParser(\"\").getMetadata();\n    assertThat(metadata.isReservedFunctionName(\"ABS\"), is(true));\n    assertThat(metadata.isReservedFunctionName(\"FOO\"), is(false));\n\n    assertThat(metadata.isContextVariableName(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isContextVariableName(\"ABS\"), is(false));\n    assertThat(metadata.isContextVariableName(\"FOO\"), is(false));\n\n    assertThat(metadata.isNonReservedKeyword(\"A\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"SELECT\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"FOO\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"ABS\"), is(false));\n\n    assertThat(metadata.isKeyword(\"ABS\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isKeyword(\"SELECT\"), is(true));\n    assertThat(metadata.isKeyword(\"HAVING\"), is(true));\n    assertThat(metadata.isKeyword(\"A\"), is(true));\n    assertThat(metadata.isKeyword(\"BAR\"), is(false));\n\n    assertThat(metadata.isReservedWord(\"SELECT\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isReservedWord(\"KEY\"), is(false));\n\n    String jdbcKeywords = metadata.getJdbcKeywords();\n    assertThat(jdbcKeywords.contains(\",COLLECT,\"), is(true));\n    assertThat(!jdbcKeywords.contains(\",SELECT,\"), is(true));\n  }\n","date":"2018-11-02 07:02:56","endLine":7154,"groupId":"4724","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6a/d27693cceb5c268703f914146d249f3f4310ac.src","preCode":"  @Test public void testMetadata() {\n    SqlAbstractParserImpl.Metadata metadata = getSqlParser(\"\").getMetadata();\n    assertThat(metadata.isReservedFunctionName(\"ABS\"), is(true));\n    assertThat(metadata.isReservedFunctionName(\"FOO\"), is(false));\n\n    assertThat(metadata.isContextVariableName(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isContextVariableName(\"ABS\"), is(false));\n    assertThat(metadata.isContextVariableName(\"FOO\"), is(false));\n\n    assertThat(metadata.isNonReservedKeyword(\"A\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"SELECT\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"FOO\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"ABS\"), is(false));\n\n    assertThat(metadata.isKeyword(\"ABS\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isKeyword(\"SELECT\"), is(true));\n    assertThat(metadata.isKeyword(\"HAVING\"), is(true));\n    assertThat(metadata.isKeyword(\"A\"), is(true));\n    assertThat(metadata.isKeyword(\"BAR\"), is(false));\n\n    assertThat(metadata.isReservedWord(\"SELECT\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isReservedWord(\"KEY\"), is(false));\n\n    String jdbcKeywords = metadata.getJdbcKeywords();\n    assertThat(jdbcKeywords.contains(\",COLLECT,\"), is(true));\n    assertThat(!jdbcKeywords.contains(\",SELECT,\"), is(true));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":7119,"status":"MB"}],"commitId":"561c6427e3602510d619b45cd7da840773fa0d2c","commitMessage":"@@@[CALCITE-2405] In Babel parser.  make 400 reserved keywords including YEAR.  SECOND.  DESC non-reserved\n\nCommand words (e.g. SELECT.  UPDATE.  EXPLAIN.  ALTER).  SQL clause names\n(e.g. WHERE.  ORDER.  INNER but not BY).  and keywords that start literals\n(DATE.  TIME.  TIMESTAMP.  INTERVAL) remain reserved.\n\nIn Planner.  use the parser's conformance.\n\nAvoid javac StackOverflowError by splitting up the NonReservedKeywords()\nparser method into several parts.\n\nCompatibility warning: If you have created your own sub-parser you must\ncopy nonReservedKeywords from core config.fmpp to your config.fmpp.\nPreviously the core non-reserved keywords were in a parser method\nCommonNonReservedKeywords().  but that method has been removed.\n\nUpgrade freemarker to 2.3.28.\n","date":"2018-11-02 07:02:56","modifiedFileCount":"3","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Override @Test protected void testMetadata() {\n    SqlAbstractParserImpl.Metadata metadata = getSqlParser(\"\").getMetadata();\n    assertThat(metadata.isReservedFunctionName(\"ABS\"), is(true));\n    assertThat(metadata.isReservedFunctionName(\"FOO\"), is(false));\n\n    assertThat(metadata.isContextVariableName(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isContextVariableName(\"ABS\"), is(false));\n    assertThat(metadata.isContextVariableName(\"FOO\"), is(false));\n\n    assertThat(metadata.isNonReservedKeyword(\"A\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"SELECT\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"FOO\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"ABS\"), is(true)); \r\n\n    assertThat(metadata.isKeyword(\"ABS\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isKeyword(\"SELECT\"), is(true));\n    assertThat(metadata.isKeyword(\"HAVING\"), is(true));\n    assertThat(metadata.isKeyword(\"A\"), is(true));\n    assertThat(metadata.isKeyword(\"BAR\"), is(false));\n\n    assertThat(metadata.isReservedWord(\"SELECT\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_CATALOG\"), is(false)); \r\n    assertThat(metadata.isReservedWord(\"CURRENT_SCHEMA\"), is(false)); \r\n    assertThat(metadata.isReservedWord(\"KEY\"), is(false));\n\n    String jdbcKeywords = metadata.getJdbcKeywords();\n    assertThat(jdbcKeywords.contains(\",COLLECT,\"), is(false)); \r\n    assertThat(!jdbcKeywords.contains(\",SELECT,\"), is(true));\n  }\n","date":"2020-04-06 04:57:49","endLine":89,"groupId":"1014","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cb/d82776233d15a1dc55f358f3d8d679328e6549.src","preCode":"  @Override @Test public void testMetadata() {\n    SqlAbstractParserImpl.Metadata metadata = getSqlParser(\"\").getMetadata();\n    assertThat(metadata.isReservedFunctionName(\"ABS\"), is(true));\n    assertThat(metadata.isReservedFunctionName(\"FOO\"), is(false));\n\n    assertThat(metadata.isContextVariableName(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isContextVariableName(\"ABS\"), is(false));\n    assertThat(metadata.isContextVariableName(\"FOO\"), is(false));\n\n    assertThat(metadata.isNonReservedKeyword(\"A\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"SELECT\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"FOO\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"ABS\"), is(true)); \r\n\n    assertThat(metadata.isKeyword(\"ABS\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isKeyword(\"SELECT\"), is(true));\n    assertThat(metadata.isKeyword(\"HAVING\"), is(true));\n    assertThat(metadata.isKeyword(\"A\"), is(true));\n    assertThat(metadata.isKeyword(\"BAR\"), is(false));\n\n    assertThat(metadata.isReservedWord(\"SELECT\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_CATALOG\"), is(false)); \r\n    assertThat(metadata.isReservedWord(\"CURRENT_SCHEMA\"), is(false)); \r\n    assertThat(metadata.isReservedWord(\"KEY\"), is(false));\n\n    String jdbcKeywords = metadata.getJdbcKeywords();\n    assertThat(jdbcKeywords.contains(\",COLLECT,\"), is(false)); \r\n    assertThat(!jdbcKeywords.contains(\",SELECT,\"), is(true));\n  }\n","realPath":"babel/src/test/java/org/apache/calcite/test/BabelParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test protected void testMetadata() {\n    SqlAbstractParserImpl.Metadata metadata = getSqlParser(\"\").getMetadata();\n    assertThat(metadata.isReservedFunctionName(\"ABS\"), is(true));\n    assertThat(metadata.isReservedFunctionName(\"FOO\"), is(false));\n\n    assertThat(metadata.isContextVariableName(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isContextVariableName(\"ABS\"), is(false));\n    assertThat(metadata.isContextVariableName(\"FOO\"), is(false));\n\n    assertThat(metadata.isNonReservedKeyword(\"A\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"SELECT\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"FOO\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"ABS\"), is(false));\n\n    assertThat(metadata.isKeyword(\"ABS\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isKeyword(\"SELECT\"), is(true));\n    assertThat(metadata.isKeyword(\"HAVING\"), is(true));\n    assertThat(metadata.isKeyword(\"A\"), is(true));\n    assertThat(metadata.isKeyword(\"BAR\"), is(false));\n\n    assertThat(metadata.isReservedWord(\"SELECT\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isReservedWord(\"KEY\"), is(false));\n\n    String jdbcKeywords = metadata.getJdbcKeywords();\n    assertThat(jdbcKeywords.contains(\",COLLECT,\"), is(true));\n    assertThat(!jdbcKeywords.contains(\",SELECT,\"), is(true));\n  }\n","date":"2020-04-06 04:57:49","endLine":7276,"groupId":"1014","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/6c18087114449f5c2ca4ff32ab24aa6a84eed3.src","preCode":"  @Test public void testMetadata() {\n    SqlAbstractParserImpl.Metadata metadata = getSqlParser(\"\").getMetadata();\n    assertThat(metadata.isReservedFunctionName(\"ABS\"), is(true));\n    assertThat(metadata.isReservedFunctionName(\"FOO\"), is(false));\n\n    assertThat(metadata.isContextVariableName(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isContextVariableName(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isContextVariableName(\"ABS\"), is(false));\n    assertThat(metadata.isContextVariableName(\"FOO\"), is(false));\n\n    assertThat(metadata.isNonReservedKeyword(\"A\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isNonReservedKeyword(\"SELECT\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"FOO\"), is(false));\n    assertThat(metadata.isNonReservedKeyword(\"ABS\"), is(false));\n\n    assertThat(metadata.isKeyword(\"ABS\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_USER\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isKeyword(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isKeyword(\"KEY\"), is(true));\n    assertThat(metadata.isKeyword(\"SELECT\"), is(true));\n    assertThat(metadata.isKeyword(\"HAVING\"), is(true));\n    assertThat(metadata.isKeyword(\"A\"), is(true));\n    assertThat(metadata.isKeyword(\"BAR\"), is(false));\n\n    assertThat(metadata.isReservedWord(\"SELECT\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_CATALOG\"), is(true));\n    assertThat(metadata.isReservedWord(\"CURRENT_SCHEMA\"), is(true));\n    assertThat(metadata.isReservedWord(\"KEY\"), is(false));\n\n    String jdbcKeywords = metadata.getJdbcKeywords();\n    assertThat(jdbcKeywords.contains(\",COLLECT,\"), is(true));\n    assertThat(!jdbcKeywords.contains(\",SELECT,\"), is(true));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":7241,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
