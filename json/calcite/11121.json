[{"authorTime":"2020-06-19 02:09:17","codes":[{"authorDate":"2020-06-19 02:09:17","commitOrder":1,"curCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          public void reset() {\n            entries.reset();\n          }\n\n          public void close() {\n          }\n        };\n      }\n    };\n  }\n","date":"2020-06-29 16:36:00","endLine":1055,"groupId":"423","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(finalEnumerable<TSource>outer@finalEnumerable<TInner>inner@finalFunction1<TSource@TKey>outerKeySelector@finalFunction1<TInner@TKey>innerKeySelector@finalFunction2<TSource@Enumerable<TInner>@TResult>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/1be29b1674ec11926bcb0f2157ddf4571aab83.src","preCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          public void reset() {\n            entries.reset();\n          }\n\n          public void close() {\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1022,"status":"B"},{"authorDate":"2020-06-19 02:09:17","commitOrder":1,"curCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector,\n      final EqualityComparer<TKey> comparer) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector, comparer);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector, comparer);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          public void reset() {\n            entries.reset();\n          }\n\n          public void close() {\n          }\n        };\n      }\n    };\n  }\n","date":"2020-06-29 16:36:00","endLine":1096,"groupId":"423","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"groupJoin","params":"(finalEnumerable<TSource>outer@finalEnumerable<TInner>inner@finalFunction1<TSource@TKey>outerKeySelector@finalFunction1<TInner@TKey>innerKeySelector@finalFunction2<TSource@Enumerable<TInner>@TResult>resultSelector@finalEqualityComparer<TKey>comparer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/1be29b1674ec11926bcb0f2157ddf4571aab83.src","preCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector,\n      final EqualityComparer<TKey> comparer) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector, comparer);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector, comparer);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          public void reset() {\n            entries.reset();\n          }\n\n          public void close() {\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1062,"status":"B"}],"commitId":"bf9ff001db743bcba35943daf7fec5fe8b8b207e","commitMessage":"@@@[CALCITE-4008] Implement Code generation for EnumerableSortedAggregate (Rui Wang).\n","date":"2020-06-29 16:36:00","modifiedFileCount":"6","status":"B","submitter":"amaliujia"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          @Override public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          @Override public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          @Override public void reset() {\n            entries.reset();\n          }\n\n          @Override public void close() {\n          }\n        };\n      }\n    };\n  }\n","date":"2020-10-07 05:42:47","endLine":1062,"groupId":"9969","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(finalEnumerable<TSource>outer@finalEnumerable<TInner>inner@finalFunction1<TSource@TKey>outerKeySelector@finalFunction1<TInner@TKey>innerKeySelector@finalFunction2<TSource@Enumerable<TInner>@TResult>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/5f/4d484dbd63f86d5449292ce78f1f05dc972925.src","preCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          public void reset() {\n            entries.reset();\n          }\n\n          public void close() {\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1029,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector,\n      final EqualityComparer<TKey> comparer) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector, comparer);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector, comparer);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          @Override public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          @Override public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          @Override public void reset() {\n            entries.reset();\n          }\n\n          @Override public void close() {\n          }\n        };\n      }\n    };\n  }\n","date":"2020-10-07 05:42:47","endLine":1103,"groupId":"9969","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"groupJoin","params":"(finalEnumerable<TSource>outer@finalEnumerable<TInner>inner@finalFunction1<TSource@TKey>outerKeySelector@finalFunction1<TInner@TKey>innerKeySelector@finalFunction2<TSource@Enumerable<TInner>@TResult>resultSelector@finalEqualityComparer<TKey>comparer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/5f/4d484dbd63f86d5449292ce78f1f05dc972925.src","preCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector,\n      final EqualityComparer<TKey> comparer) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector, comparer);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector, comparer);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          public void reset() {\n            entries.reset();\n          }\n\n          public void close() {\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1069,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          @Override public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            @SuppressWarnings(\"argument.type.incompatible\")\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          @Override public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          @Override public void reset() {\n            entries.reset();\n          }\n\n          @Override public void close() {\n          }\n        };\n      }\n    };\n  }\n","date":"2020-11-30 06:45:33","endLine":1084,"groupId":"11121","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(finalEnumerable<TSource>outer@finalEnumerable<TInner>inner@finalFunction1<TSource@TKey>outerKeySelector@finalFunction1<TInner@TKey>innerKeySelector@finalFunction2<TSource@Enumerable<TInner>@TResult>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/5681a61d625c97b1c82a2d555f8635b1edf6cb.src","preCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          @Override public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          @Override public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          @Override public void reset() {\n            entries.reset();\n          }\n\n          @Override public void close() {\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1050,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector,\n      final EqualityComparer<TKey> comparer) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector, comparer);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector, comparer);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          @Override public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            @SuppressWarnings(\"argument.type.incompatible\")\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          @Override public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          @Override public void reset() {\n            entries.reset();\n          }\n\n          @Override public void close() {\n          }\n        };\n      }\n    };\n  }\n","date":"2020-11-30 06:45:33","endLine":1126,"groupId":"11121","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"groupJoin","params":"(finalEnumerable<TSource>outer@finalEnumerable<TInner>inner@finalFunction1<TSource@TKey>outerKeySelector@finalFunction1<TInner@TKey>innerKeySelector@finalFunction2<TSource@Enumerable<TInner>@TResult>resultSelector@finalEqualityComparer<TKey>comparer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/5681a61d625c97b1c82a2d555f8635b1edf6cb.src","preCode":"  public static <TSource, TInner, TKey, TResult> Enumerable<TResult> groupJoin(\n      final Enumerable<TSource> outer, final Enumerable<TInner> inner,\n      final Function1<TSource, TKey> outerKeySelector,\n      final Function1<TInner, TKey> innerKeySelector,\n      final Function2<TSource, Enumerable<TInner>, TResult> resultSelector,\n      final EqualityComparer<TKey> comparer) {\n    return new AbstractEnumerable<TResult>() {\n      final Map<TKey, TSource> outerMap = outer.toMap(outerKeySelector, comparer);\n      final Lookup<TKey, TInner> innerLookup = inner.toLookup(innerKeySelector, comparer);\n      final Enumerator<Map.Entry<TKey, TSource>> entries =\n          Linq4j.enumerator(outerMap.entrySet());\n\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          @Override public TResult current() {\n            final Map.Entry<TKey, TSource> entry = entries.current();\n            final Enumerable<TInner> inners = innerLookup.get(entry.getKey());\n            return resultSelector.apply(entry.getValue(),\n                inners == null ? Linq4j.emptyEnumerable() : inners);\n          }\n\n          @Override public boolean moveNext() {\n            return entries.moveNext();\n          }\n\n          @Override public void reset() {\n            entries.reset();\n          }\n\n          @Override public void close() {\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1091,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
