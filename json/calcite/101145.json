[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testIs() {\n    check(\"select TRUE IS FALSE FROM (values(true))\");\n    check(\"select false IS NULL FROM (values(true))\");\n    check(\"select UNKNOWN IS NULL FROM (values(true))\");\n    check(\"select FALSE IS UNKNOWN FROM (values(true))\");\n\n    check(\"select TRUE IS NOT FALSE FROM (values(true))\");\n    check(\"select TRUE IS NOT NULL FROM (values(true))\");\n    check(\"select false IS NOT NULL FROM (values(true))\");\n    check(\"select UNKNOWN IS NOT NULL FROM (values(true))\");\n    check(\"select FALSE IS NOT UNKNOWN FROM (values(true))\");\n\n    check(\"select 1 IS NULL FROM (values(true))\");\n    check(\"select 1.2 IS NULL FROM (values(true))\");\n    checkExpFails(\"^'abc' IS NOT UNKNOWN^\", \"(?s).*Cannot apply.*\");\n  }\n","date":"2014-11-14 09:39:34","endLine":234,"groupId":"8881","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/99443f0f8e3b70c5add71a8c451bf22a3a1e3b.src","preCode":"  @Test public void testIs() {\n    check(\"select TRUE IS FALSE FROM (values(true))\");\n    check(\"select false IS NULL FROM (values(true))\");\n    check(\"select UNKNOWN IS NULL FROM (values(true))\");\n    check(\"select FALSE IS UNKNOWN FROM (values(true))\");\n\n    check(\"select TRUE IS NOT FALSE FROM (values(true))\");\n    check(\"select TRUE IS NOT NULL FROM (values(true))\");\n    check(\"select false IS NOT NULL FROM (values(true))\");\n    check(\"select UNKNOWN IS NOT NULL FROM (values(true))\");\n    check(\"select FALSE IS NOT UNKNOWN FROM (values(true))\");\n\n    check(\"select 1 IS NULL FROM (values(true))\");\n    check(\"select 1.2 IS NULL FROM (values(true))\");\n    checkExpFails(\"^'abc' IS NOT UNKNOWN^\", \"(?s).*Cannot apply.*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testScalars() {\n    check(\"select 1  + 1 from (values(true))\");\n    check(\"select 1  + 2.3 from (values(true))\");\n    check(\"select 1.2+3 from (values(true))\");\n    check(\"select 1.2+3.4 from (values(true))\");\n\n    check(\"select 1  - 1 from (values(true))\");\n    check(\"select 1  - 2.3 from (values(true))\");\n    check(\"select 1.2-3 from (values(true))\");\n    check(\"select 1.2-3.4 from (values(true))\");\n\n    check(\"select 1  * 2 from (values(true))\");\n    check(\"select 1.2* 3 from (values(true))\");\n    check(\"select 1  * 2.3 from (values(true))\");\n    check(\"select 1.2* 3.4 from (values(true))\");\n\n    check(\"select 1  / 2 from (values(true))\");\n    check(\"select 1  / 2.3 from (values(true))\");\n    check(\"select 1.2/ 3 from (values(true))\");\n    check(\"select 1.2/3.4 from (values(true))\");\n  }\n","date":"2014-11-14 09:39:34","endLine":274,"groupId":"8881","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testScalars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/99443f0f8e3b70c5add71a8c451bf22a3a1e3b.src","preCode":"  @Test public void testScalars() {\n    check(\"select 1  + 1 from (values(true))\");\n    check(\"select 1  + 2.3 from (values(true))\");\n    check(\"select 1.2+3 from (values(true))\");\n    check(\"select 1.2+3.4 from (values(true))\");\n\n    check(\"select 1  - 1 from (values(true))\");\n    check(\"select 1  - 2.3 from (values(true))\");\n    check(\"select 1.2-3 from (values(true))\");\n    check(\"select 1.2-3.4 from (values(true))\");\n\n    check(\"select 1  * 2 from (values(true))\");\n    check(\"select 1.2* 3 from (values(true))\");\n    check(\"select 1  * 2.3 from (values(true))\");\n    check(\"select 1.2* 3.4 from (values(true))\");\n\n    check(\"select 1  / 2 from (values(true))\");\n    check(\"select 1  / 2.3 from (values(true))\");\n    check(\"select 1.2/ 3 from (values(true))\");\n    check(\"select 1.2/3.4 from (values(true))\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2019-09-07 07:51:19","codes":[{"authorDate":"2019-09-07 07:51:19","commitOrder":2,"curCode":"  @Test public void testIs() {\n    sql(\"select TRUE IS FALSE FROM (values(true))\").ok();\n    sql(\"select false IS NULL FROM (values(true))\").ok();\n    sql(\"select UNKNOWN IS NULL FROM (values(true))\").ok();\n    sql(\"select FALSE IS UNKNOWN FROM (values(true))\").ok();\n\n    sql(\"select TRUE IS NOT FALSE FROM (values(true))\").ok();\n    sql(\"select TRUE IS NOT NULL FROM (values(true))\").ok();\n    sql(\"select false IS NOT NULL FROM (values(true))\").ok();\n    sql(\"select UNKNOWN IS NOT NULL FROM (values(true))\").ok();\n    sql(\"select FALSE IS NOT UNKNOWN FROM (values(true))\").ok();\n\n    sql(\"select 1 IS NULL FROM (values(true))\").ok();\n    sql(\"select 1.2 IS NULL FROM (values(true))\").ok();\n    expr(\"^'abc' IS NOT UNKNOWN^\")\n        .fails(\"(?s).*Cannot apply.*\");\n  }\n","date":"2019-09-24 02:59:18","endLine":299,"groupId":"10464","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/d33ba8e946a499cac312fa98a0e5b21a080452.src","preCode":"  @Test public void testIs() {\n    check(\"select TRUE IS FALSE FROM (values(true))\");\n    check(\"select false IS NULL FROM (values(true))\");\n    check(\"select UNKNOWN IS NULL FROM (values(true))\");\n    check(\"select FALSE IS UNKNOWN FROM (values(true))\");\n\n    check(\"select TRUE IS NOT FALSE FROM (values(true))\");\n    check(\"select TRUE IS NOT NULL FROM (values(true))\");\n    check(\"select false IS NOT NULL FROM (values(true))\");\n    check(\"select UNKNOWN IS NOT NULL FROM (values(true))\");\n    check(\"select FALSE IS NOT UNKNOWN FROM (values(true))\");\n\n    check(\"select 1 IS NULL FROM (values(true))\");\n    check(\"select 1.2 IS NULL FROM (values(true))\");\n    checkExpFails(\"^'abc' IS NOT UNKNOWN^\", \"(?s).*Cannot apply.*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"M"},{"authorDate":"2019-09-07 07:51:19","commitOrder":2,"curCode":"  @Test public void testScalars() {\n    sql(\"select 1  + 1 from (values(true))\").ok();\n    sql(\"select 1  + 2.3 from (values(true))\").ok();\n    sql(\"select 1.2+3 from (values(true))\").ok();\n    sql(\"select 1.2+3.4 from (values(true))\").ok();\n\n    sql(\"select 1  - 1 from (values(true))\").ok();\n    sql(\"select 1  - 2.3 from (values(true))\").ok();\n    sql(\"select 1.2-3 from (values(true))\").ok();\n    sql(\"select 1.2-3.4 from (values(true))\").ok();\n\n    sql(\"select 1  * 2 from (values(true))\").ok();\n    sql(\"select 1.2* 3 from (values(true))\").ok();\n    sql(\"select 1  * 2.3 from (values(true))\").ok();\n    sql(\"select 1.2* 3.4 from (values(true))\").ok();\n\n    sql(\"select 1  / 2 from (values(true))\").ok();\n    sql(\"select 1  / 2.3 from (values(true))\").ok();\n    sql(\"select 1.2/ 3 from (values(true))\").ok();\n    sql(\"select 1.2/3.4 from (values(true))\").ok();\n  }\n","date":"2019-09-24 02:59:18","endLine":336,"groupId":"10464","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testScalars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/d33ba8e946a499cac312fa98a0e5b21a080452.src","preCode":"  @Test public void testScalars() {\n    check(\"select 1  + 1 from (values(true))\");\n    check(\"select 1  + 2.3 from (values(true))\");\n    check(\"select 1.2+3 from (values(true))\");\n    check(\"select 1.2+3.4 from (values(true))\");\n\n    check(\"select 1  - 1 from (values(true))\");\n    check(\"select 1  - 2.3 from (values(true))\");\n    check(\"select 1.2-3 from (values(true))\");\n    check(\"select 1.2-3.4 from (values(true))\");\n\n    check(\"select 1  * 2 from (values(true))\");\n    check(\"select 1.2* 3 from (values(true))\");\n    check(\"select 1  * 2.3 from (values(true))\");\n    check(\"select 1.2* 3.4 from (values(true))\");\n\n    check(\"select 1  / 2 from (values(true))\");\n    check(\"select 1  / 2.3 from (values(true))\");\n    check(\"select 1.2/ 3 from (values(true))\");\n    check(\"select 1.2/3.4 from (values(true))\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"M"}],"commitId":"405614f87b75eb515e767b78a2c47481a0efc701","commitMessage":"@@@[CALCITE-3327] Simplify SqlValidatorTest and SqlParserTest by making test methods fluent\n\nReplace 'boolean typeCoercion' parameter with fluent method 'Sql.withTypeCoercion(boolean)'.\n\nDeprecate various checkXxx methods. For example. \ncheckExp(sql.  expected) becomes expr(sql).ok();\ncheckExpFails(sql.  e) becomes expr(s).fails(e).\n\nRename SqlParserTest.exp to expr.\n","date":"2019-09-24 02:59:18","modifiedFileCount":"16","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testIs() {\n    sql(\"select TRUE IS FALSE FROM (values(true))\").ok();\n    sql(\"select false IS NULL FROM (values(true))\").ok();\n    sql(\"select UNKNOWN IS NULL FROM (values(true))\").ok();\n    sql(\"select FALSE IS UNKNOWN FROM (values(true))\").ok();\n\n    sql(\"select TRUE IS NOT FALSE FROM (values(true))\").ok();\n    sql(\"select TRUE IS NOT NULL FROM (values(true))\").ok();\n    sql(\"select false IS NOT NULL FROM (values(true))\").ok();\n    sql(\"select UNKNOWN IS NOT NULL FROM (values(true))\").ok();\n    sql(\"select FALSE IS NOT UNKNOWN FROM (values(true))\").ok();\n\n    sql(\"select 1 IS NULL FROM (values(true))\").ok();\n    sql(\"select 1.2 IS NULL FROM (values(true))\").ok();\n    expr(\"^'abc' IS NOT UNKNOWN^\")\n        .fails(\"(?s).*Cannot apply.*\");\n  }\n","date":"2020-04-06 04:57:49","endLine":290,"groupId":"101145","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testIs() {\n    sql(\"select TRUE IS FALSE FROM (values(true))\").ok();\n    sql(\"select false IS NULL FROM (values(true))\").ok();\n    sql(\"select UNKNOWN IS NULL FROM (values(true))\").ok();\n    sql(\"select FALSE IS UNKNOWN FROM (values(true))\").ok();\n\n    sql(\"select TRUE IS NOT FALSE FROM (values(true))\").ok();\n    sql(\"select TRUE IS NOT NULL FROM (values(true))\").ok();\n    sql(\"select false IS NOT NULL FROM (values(true))\").ok();\n    sql(\"select UNKNOWN IS NOT NULL FROM (values(true))\").ok();\n    sql(\"select FALSE IS NOT UNKNOWN FROM (values(true))\").ok();\n\n    sql(\"select 1 IS NULL FROM (values(true))\").ok();\n    sql(\"select 1.2 IS NULL FROM (values(true))\").ok();\n    expr(\"^'abc' IS NOT UNKNOWN^\")\n        .fails(\"(?s).*Cannot apply.*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testScalars() {\n    sql(\"select 1  + 1 from (values(true))\").ok();\n    sql(\"select 1  + 2.3 from (values(true))\").ok();\n    sql(\"select 1.2+3 from (values(true))\").ok();\n    sql(\"select 1.2+3.4 from (values(true))\").ok();\n\n    sql(\"select 1  - 1 from (values(true))\").ok();\n    sql(\"select 1  - 2.3 from (values(true))\").ok();\n    sql(\"select 1.2-3 from (values(true))\").ok();\n    sql(\"select 1.2-3.4 from (values(true))\").ok();\n\n    sql(\"select 1  * 2 from (values(true))\").ok();\n    sql(\"select 1.2* 3 from (values(true))\").ok();\n    sql(\"select 1  * 2.3 from (values(true))\").ok();\n    sql(\"select 1.2* 3.4 from (values(true))\").ok();\n\n    sql(\"select 1  / 2 from (values(true))\").ok();\n    sql(\"select 1  / 2.3 from (values(true))\").ok();\n    sql(\"select 1.2/ 3 from (values(true))\").ok();\n    sql(\"select 1.2/3.4 from (values(true))\").ok();\n  }\n","date":"2020-04-06 04:57:49","endLine":327,"groupId":"101145","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testScalars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testScalars() {\n    sql(\"select 1  + 1 from (values(true))\").ok();\n    sql(\"select 1  + 2.3 from (values(true))\").ok();\n    sql(\"select 1.2+3 from (values(true))\").ok();\n    sql(\"select 1.2+3.4 from (values(true))\").ok();\n\n    sql(\"select 1  - 1 from (values(true))\").ok();\n    sql(\"select 1  - 2.3 from (values(true))\").ok();\n    sql(\"select 1.2-3 from (values(true))\").ok();\n    sql(\"select 1.2-3.4 from (values(true))\").ok();\n\n    sql(\"select 1  * 2 from (values(true))\").ok();\n    sql(\"select 1.2* 3 from (values(true))\").ok();\n    sql(\"select 1  * 2.3 from (values(true))\").ok();\n    sql(\"select 1.2* 3.4 from (values(true))\").ok();\n\n    sql(\"select 1  / 2 from (values(true))\").ok();\n    sql(\"select 1  / 2.3 from (values(true))\").ok();\n    sql(\"select 1.2/ 3 from (values(true))\").ok();\n    sql(\"select 1.2/3.4 from (values(true))\").ok();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
