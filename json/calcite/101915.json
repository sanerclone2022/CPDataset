[{"authorTime":"2016-01-19 08:22:06","codes":[{"authorDate":"2016-01-19 08:22:06","commitOrder":1,"curCode":"  public Double getSelectivity(RelNode rel, RexNode predicate) {\n    for (;;) {\n      try {\n        Double result = selectivityHandler.getSelectivity(rel, this, predicate);\n        return validatePercentage(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        selectivityHandler = metadataProvider.revise(e.relClass,\n            BuiltInMetadata.Selectivity.DEF);\n      }\n    }\n  }\n","date":"2016-02-25 05:37:49","endLine":366,"groupId":"3933","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getSelectivity","params":"(RelNoderel@RexNodepredicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ab/ca58ecb44e917bb1c97ec931a416b6153a647f.src","preCode":"  public Double getSelectivity(RelNode rel, RexNode predicate) {\n    for (;;) {\n      try {\n        Double result = selectivityHandler.getSelectivity(rel, this, predicate);\n        return validatePercentage(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        selectivityHandler = metadataProvider.revise(e.relClass,\n            BuiltInMetadata.Selectivity.DEF);\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"B"},{"authorDate":"2016-01-19 08:22:06","commitOrder":1,"curCode":"  public Double getDistinctRowCount(\n      RelNode rel,\n      ImmutableBitSet groupKey,\n      RexNode predicate) {\n    for (;;) {\n      try {\n        Double result =\n            distinctRowCountHandler.getDistinctRowCount(rel, this, groupKey,\n                predicate);\n        return validateResult(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        distinctRowCountHandler = metadataProvider.revise(e.relClass,\n            BuiltInMetadata.DistinctRowCount.DEF);\n      }\n    }\n  }\n","date":"2016-02-25 05:37:49","endLine":708,"groupId":"15700","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDistinctRowCount","params":"(RelNoderel@ImmutableBitSetgroupKey@RexNodepredicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ab/ca58ecb44e917bb1c97ec931a416b6153a647f.src","preCode":"  public Double getDistinctRowCount(\n      RelNode rel,\n      ImmutableBitSet groupKey,\n      RexNode predicate) {\n    for (;;) {\n      try {\n        Double result =\n            distinctRowCountHandler.getDistinctRowCount(rel, this, groupKey,\n                predicate);\n        return validateResult(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        distinctRowCountHandler = metadataProvider.revise(e.relClass,\n            BuiltInMetadata.DistinctRowCount.DEF);\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":693,"status":"B"}],"commitId":"d14040c52f8b0bc351443cff1584e8b587378698","commitMessage":"@@@[CALCITE-604] Tune metadata by generating a dispatcher at runtime\n\nCurrently we dispatch to metadata providers using reflection. With\nthis change.  we generate a dispatcher class and compile using Janino.\n\nCache results within a metadata call. This should yield a performance\nimprovement when.  say.  a Join requires many kinds of metadata\n(rowCount.  averageRowSize.  selectivity) and they all rely on the\nrowCount of the input.  and that rowCount is expensive to compute.\n","date":"2016-02-25 05:37:49","modifiedFileCount":"34","status":"B","submitter":"Julian Hyde"},{"authorTime":"2016-03-12 07:35:59","codes":[{"authorDate":"2016-03-12 07:35:59","commitOrder":2,"curCode":"  public Double getSelectivity(RelNode rel, RexNode predicate) {\n    for (;;) {\n      try {\n        Double result = selectivityHandler.getSelectivity(rel, this, predicate);\n        return validatePercentage(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        selectivityHandler =\n            revise(e.relClass, BuiltInMetadata.Selectivity.DEF);\n      }\n    }\n  }\n","date":"2016-03-18 03:32:01","endLine":372,"groupId":"3933","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getSelectivity","params":"(RelNoderel@RexNodepredicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/4e/076122f0db71df500169dbac4b5fd9fdda5605.src","preCode":"  public Double getSelectivity(RelNode rel, RexNode predicate) {\n    for (;;) {\n      try {\n        Double result = selectivityHandler.getSelectivity(rel, this, predicate);\n        return validatePercentage(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        selectivityHandler = metadataProvider.revise(e.relClass,\n            BuiltInMetadata.Selectivity.DEF);\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"M"},{"authorDate":"2016-03-12 07:35:59","commitOrder":2,"curCode":"  public Double getDistinctRowCount(\n      RelNode rel,\n      ImmutableBitSet groupKey,\n      RexNode predicate) {\n    for (;;) {\n      try {\n        Double result =\n            distinctRowCountHandler.getDistinctRowCount(rel, this, groupKey,\n                predicate);\n        return validateResult(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        distinctRowCountHandler =\n            revise(e.relClass, BuiltInMetadata.DistinctRowCount.DEF);\n      }\n    }\n  }\n","date":"2016-03-18 03:32:01","endLine":708,"groupId":"15700","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getDistinctRowCount","params":"(RelNoderel@ImmutableBitSetgroupKey@RexNodepredicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/4e/076122f0db71df500169dbac4b5fd9fdda5605.src","preCode":"  public Double getDistinctRowCount(\n      RelNode rel,\n      ImmutableBitSet groupKey,\n      RexNode predicate) {\n    for (;;) {\n      try {\n        Double result =\n            distinctRowCountHandler.getDistinctRowCount(rel, this, groupKey,\n                predicate);\n        return validateResult(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        distinctRowCountHandler = metadataProvider.revise(e.relClass,\n            BuiltInMetadata.DistinctRowCount.DEF);\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":693,"status":"M"}],"commitId":"94f8837c4974edc33e58b16b9ee2f061125b9b60","commitMessage":"@@@[CALCITE-1147] Allow multiple providers for the same kind of metadata\n\nMake it possible to extend RelMetadataQuery for a user-defined metadata\ntype.  and create a test case illustrating.\n\nGive an explicit error when metadata provider does not have a RelNode\nhandler (that is.  a safety net if there are no handlers for more specific\nRelNode sub-classes).\n\nImprove how we handle ExecutionException.\n","date":"2016-03-18 03:32:01","modifiedFileCount":"14","status":"M","submitter":"Julian Hyde"},{"authorTime":"2019-10-25 22:40:36","codes":[{"authorDate":"2019-10-25 22:40:36","commitOrder":3,"curCode":"  public Double getSelectivity(RelNode rel, RexNode predicate) {\n    for (;;) {\n      try {\n        Double result = selectivityHandler.getSelectivity(rel, this, predicate);\n        return RelMdUtil.validatePercentage(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        selectivityHandler =\n            revise(e.relClass, BuiltInMetadata.Selectivity.DEF);\n      }\n    }\n  }\n","date":"2019-10-30 10:10:44","endLine":427,"groupId":"3575","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getSelectivity","params":"(RelNoderel@RexNodepredicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f4/6650d4270310dd0f5bc83ecf000fb55d9e3023.src","preCode":"  public Double getSelectivity(RelNode rel, RexNode predicate) {\n    for (;;) {\n      try {\n        Double result = selectivityHandler.getSelectivity(rel, this, predicate);\n        return validatePercentage(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        selectivityHandler =\n            revise(e.relClass, BuiltInMetadata.Selectivity.DEF);\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"M"},{"authorDate":"2019-10-25 22:40:36","commitOrder":3,"curCode":"  public Double getDistinctRowCount(\n      RelNode rel,\n      ImmutableBitSet groupKey,\n      RexNode predicate) {\n    for (;;) {\n      try {\n        Double result =\n            distinctRowCountHandler.getDistinctRowCount(rel, this, groupKey,\n                predicate);\n        return RelMdUtil.validateResult(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        distinctRowCountHandler =\n            revise(e.relClass, BuiltInMetadata.DistinctRowCount.DEF);\n      }\n    }\n  }\n","date":"2019-10-30 10:10:44","endLine":763,"groupId":"14614","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getDistinctRowCount","params":"(RelNoderel@ImmutableBitSetgroupKey@RexNodepredicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f4/6650d4270310dd0f5bc83ecf000fb55d9e3023.src","preCode":"  public Double getDistinctRowCount(\n      RelNode rel,\n      ImmutableBitSet groupKey,\n      RexNode predicate) {\n    for (;;) {\n      try {\n        Double result =\n            distinctRowCountHandler.getDistinctRowCount(rel, this, groupKey,\n                predicate);\n        return validateResult(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        distinctRowCountHandler =\n            revise(e.relClass, BuiltInMetadata.DistinctRowCount.DEF);\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":748,"status":"M"}],"commitId":"977ea0d96f1f8e4225b6e27f02d86d0ea5aebb9a","commitMessage":"@@@[CALCITE-3446] Make RelMetadataQuery extensible\n\n* Add interface RelOptCluster.setMetadataQuery to let user set the\ncustomized RelMetadataQuery instance\n* Add a base metadata query class named RelMetadataQueryBase.  it\nholds the common parts that a metadata query requires.  also add doc\nabout how to add a new RelMetadataQuery sub-class\n* In RelMetadataQuery.  make constructor RelMetadataQuery(boolean) and\nRelMetadataQuery(JaninoRelMetadataProvider.  RelMetadataQuery) private. \nadd a new constrcutor RelMetadataQuery() for sub-class\n* Add test cases in RelMetadataTest\n* Refactor out assertEquals within RelMetadataTest\n* Make RelMetadataQueryBase#THREAD_PROVIDERS default to be a empty\ninstance.  we always initialize it now in RelOptCluster\n","date":"2019-10-30 10:10:44","modifiedFileCount":"5","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  public @Nullable Double getSelectivity(RelNode rel, @Nullable RexNode predicate) {\n    for (;;) {\n      try {\n        Double result = selectivityHandler.getSelectivity(rel, this, predicate);\n        return RelMdUtil.validatePercentage(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        selectivityHandler =\n            revise(e.relClass, BuiltInMetadata.Selectivity.DEF);\n      }\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":437,"groupId":"101915","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getSelectivity","params":"(RelNoderel@@NullableRexNodepredicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/4e/727479e6c71f1e261c0e9578e86b6b90aa0a49.src","preCode":"  public Double getSelectivity(RelNode rel, RexNode predicate) {\n    for (;;) {\n      try {\n        Double result = selectivityHandler.getSelectivity(rel, this, predicate);\n        return RelMdUtil.validatePercentage(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        selectivityHandler =\n            revise(e.relClass, BuiltInMetadata.Selectivity.DEF);\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  public @Nullable Double getDistinctRowCount(\n      RelNode rel,\n      ImmutableBitSet groupKey,\n      @Nullable RexNode predicate) {\n    for (;;) {\n      try {\n        Double result =\n            distinctRowCountHandler.getDistinctRowCount(rel, this, groupKey,\n                predicate);\n        return RelMdUtil.validateResult(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        distinctRowCountHandler =\n            revise(e.relClass, BuiltInMetadata.DistinctRowCount.DEF);\n      }\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":778,"groupId":"101915","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getDistinctRowCount","params":"(RelNoderel@ImmutableBitSetgroupKey@@NullableRexNodepredicate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/4e/727479e6c71f1e261c0e9578e86b6b90aa0a49.src","preCode":"  public Double getDistinctRowCount(\n      RelNode rel,\n      ImmutableBitSet groupKey,\n      RexNode predicate) {\n    for (;;) {\n      try {\n        Double result =\n            distinctRowCountHandler.getDistinctRowCount(rel, this, groupKey,\n                predicate);\n        return RelMdUtil.validateResult(result);\n      } catch (JaninoRelMetadataProvider.NoHandler e) {\n        distinctRowCountHandler =\n            revise(e.relClass, BuiltInMetadata.DistinctRowCount.DEF);\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":763,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
