[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void subTestIntervalYearNegative() {\n    \r\n    checkWholeExpFails(\"INTERVAL '-' YEAR\",\n        \"Illegal interval literal format '-' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\"INTERVAL '1-2' YEAR\",\n        \"Illegal interval literal format '1-2' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1.2' YEAR\",\n        \"Illegal interval literal format '1.2' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\"INTERVAL '1 2' YEAR\",\n        \"Illegal interval literal format '1 2' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\"INTERVAL '1-2' YEAR(2)\",\n        \"Illegal interval literal format '1-2' for INTERVAL YEAR\\\\(2\\\\)\");\n    checkWholeExpFails(\"INTERVAL 'bogus text' YEAR\",\n        \"Illegal interval literal format 'bogus text' for INTERVAL YEAR.*\");\n\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '--1' YEAR\",\n        \"Illegal interval literal format '--1' for INTERVAL YEAR.*\");\n\n    \r\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '100' YEAR\",\n        \"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '100' YEAR(2)\",\n        \"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '1000' YEAR(3)\",\n        \"Interval field value 1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '-1000' YEAR(3)\",\n        \"Interval field value -1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '2147483648' YEAR(10)\",\n        \"Interval field value 2,147,483,648 exceeds precision of YEAR\\\\(10\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '-2147483648' YEAR(10)\",\n        \"Interval field value -2,147,483,648 exceeds precision of YEAR\\\\(10\\\\) field\");\n\n    \r\n    checkExpFails(\"INTERVAL '1' YEAR(11^)^\",\n        \"Interval leading field precision '11' out of range for INTERVAL YEAR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    checkExpFails(\"INTERVAL '0' YEAR(0^)^\",\n        \"Interval leading field precision '0' out of range for INTERVAL YEAR\\\\(0\\\\)\");\n  }\n","date":"2014-11-14 09:39:34","endLine":2335,"groupId":"13956","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"subTestIntervalYearNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/99443f0f8e3b70c5add71a8c451bf22a3a1e3b.src","preCode":"  public void subTestIntervalYearNegative() {\n    \r\n    checkWholeExpFails(\"INTERVAL '-' YEAR\",\n        \"Illegal interval literal format '-' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\"INTERVAL '1-2' YEAR\",\n        \"Illegal interval literal format '1-2' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1.2' YEAR\",\n        \"Illegal interval literal format '1.2' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\"INTERVAL '1 2' YEAR\",\n        \"Illegal interval literal format '1 2' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\"INTERVAL '1-2' YEAR(2)\",\n        \"Illegal interval literal format '1-2' for INTERVAL YEAR\\\\(2\\\\)\");\n    checkWholeExpFails(\"INTERVAL 'bogus text' YEAR\",\n        \"Illegal interval literal format 'bogus text' for INTERVAL YEAR.*\");\n\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '--1' YEAR\",\n        \"Illegal interval literal format '--1' for INTERVAL YEAR.*\");\n\n    \r\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '100' YEAR\",\n        \"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '100' YEAR(2)\",\n        \"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '1000' YEAR(3)\",\n        \"Interval field value 1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '-1000' YEAR(3)\",\n        \"Interval field value -1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '2147483648' YEAR(10)\",\n        \"Interval field value 2,147,483,648 exceeds precision of YEAR\\\\(10\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '-2147483648' YEAR(10)\",\n        \"Interval field value -2,147,483,648 exceeds precision of YEAR\\\\(10\\\\) field\");\n\n    \r\n    checkExpFails(\"INTERVAL '1' YEAR(11^)^\",\n        \"Interval leading field precision '11' out of range for INTERVAL YEAR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    checkExpFails(\"INTERVAL '0' YEAR(0^)^\",\n        \"Interval leading field precision '0' out of range for INTERVAL YEAR\\\\(0\\\\)\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2288,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void subTestIntervalHourNegative() {\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '-' HOUR\",\n        \"Illegal interval literal format '-' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1-2' HOUR\",\n        \"Illegal interval literal format '1-2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1.2' HOUR\",\n        \"Illegal interval literal format '1.2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1 2' HOUR\",\n        \"Illegal interval literal format '1 2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1:2' HOUR\",\n        \"Illegal interval literal format '1:2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1-2' HOUR(2)\",\n        \"Illegal interval literal format '1-2' for INTERVAL HOUR\\\\(2\\\\)\");\n    checkWholeExpFails(\n        \"INTERVAL 'bogus text' HOUR\",\n        \"Illegal interval literal format 'bogus text' for INTERVAL HOUR.*\");\n\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '--1' HOUR\",\n        \"Illegal interval literal format '--1' for INTERVAL HOUR.*\");\n\n    \r\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '100' HOUR\",\n        \"Interval field value 100 exceeds precision of HOUR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '100' HOUR(2)\",\n        \"Interval field value 100 exceeds precision of HOUR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1000' HOUR(3)\",\n        \"Interval field value 1,000 exceeds precision of HOUR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '-1000' HOUR(3)\",\n        \"Interval field value -1,000 exceeds precision of HOUR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '2147483648' HOUR(10)\",\n        \"Interval field value 2,147,483,648 exceeds precision of HOUR\\\\(10\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '-2147483648' HOUR(10)\",\n        \"Interval field value -2,147,483,648 exceeds precision of HOUR\\\\(10\\\\) field.*\");\n\n    \r\n    checkExpFails(\n        \"INTERVAL '1' HOUR(11^)^\",\n        \"Interval leading field precision '11' out of range for INTERVAL HOUR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    checkExpFails(\n        \"INTERVAL '0' HOUR(0^)^\",\n        \"Interval leading field precision '0' out of range for INTERVAL HOUR\\\\(0\\\\)\");\n  }\n","date":"2014-11-14 09:39:34","endLine":2919,"groupId":"13956","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"subTestIntervalHourNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/99443f0f8e3b70c5add71a8c451bf22a3a1e3b.src","preCode":"  public void subTestIntervalHourNegative() {\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '-' HOUR\",\n        \"Illegal interval literal format '-' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1-2' HOUR\",\n        \"Illegal interval literal format '1-2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1.2' HOUR\",\n        \"Illegal interval literal format '1.2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1 2' HOUR\",\n        \"Illegal interval literal format '1 2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1:2' HOUR\",\n        \"Illegal interval literal format '1:2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1-2' HOUR(2)\",\n        \"Illegal interval literal format '1-2' for INTERVAL HOUR\\\\(2\\\\)\");\n    checkWholeExpFails(\n        \"INTERVAL 'bogus text' HOUR\",\n        \"Illegal interval literal format 'bogus text' for INTERVAL HOUR.*\");\n\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '--1' HOUR\",\n        \"Illegal interval literal format '--1' for INTERVAL HOUR.*\");\n\n    \r\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '100' HOUR\",\n        \"Interval field value 100 exceeds precision of HOUR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '100' HOUR(2)\",\n        \"Interval field value 100 exceeds precision of HOUR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1000' HOUR(3)\",\n        \"Interval field value 1,000 exceeds precision of HOUR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '-1000' HOUR(3)\",\n        \"Interval field value -1,000 exceeds precision of HOUR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '2147483648' HOUR(10)\",\n        \"Interval field value 2,147,483,648 exceeds precision of HOUR\\\\(10\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '-2147483648' HOUR(10)\",\n        \"Interval field value -2,147,483,648 exceeds precision of HOUR\\\\(10\\\\) field.*\");\n\n    \r\n    checkExpFails(\n        \"INTERVAL '1' HOUR(11^)^\",\n        \"Interval leading field precision '11' out of range for INTERVAL HOUR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    checkExpFails(\n        \"INTERVAL '0' HOUR(0^)^\",\n        \"Interval leading field precision '0' out of range for INTERVAL HOUR\\\\(0\\\\)\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2858,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2019-09-07 07:51:19","codes":[{"authorDate":"2019-09-07 07:51:19","commitOrder":2,"curCode":"  public void subTestIntervalYearNegative() {\n    \r\n    wholeExpr(\"INTERVAL '-' YEAR\")\n        .fails(\"Illegal interval literal format '-' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1-2' YEAR\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1.2' YEAR\")\n        .fails(\"Illegal interval literal format '1.2' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1 2' YEAR\")\n        .fails(\"Illegal interval literal format '1 2' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1-2' YEAR(2)\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL YEAR\\\\(2\\\\)\");\n    wholeExpr(\"INTERVAL 'bogus text' YEAR\")\n        .fails(\"Illegal interval literal format 'bogus text' for INTERVAL YEAR.*\");\n\n    \r\n    wholeExpr(\"INTERVAL '--1' YEAR\")\n        .fails(\"Illegal interval literal format '--1' for INTERVAL YEAR.*\");\n\n    \r\n    \r\n    wholeExpr(\"INTERVAL '100' YEAR\")\n        .fails(\"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '100' YEAR(2)\")\n        .fails(\"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '1000' YEAR(3)\")\n        .fails(\"Interval field value 1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-1000' YEAR(3)\")\n        .fails(\"Interval field value -1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '2147483648' YEAR(10)\")\n        .fails(\"Interval field value 2,147,483,648 exceeds precision of \"\n            + \"YEAR\\\\(10\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-2147483648' YEAR(10)\")\n        .fails(\"Interval field value -2,147,483,648 exceeds precision of \"\n            + \"YEAR\\\\(10\\\\) field\");\n\n    \r\n    expr(\"INTERVAL '1' YEAR(11^)^\")\n        .fails(\"Interval leading field precision '11' out of range for \"\n            + \"INTERVAL YEAR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    expr(\"INTERVAL '0' YEAR(0^)^\")\n        .fails(\"Interval leading field precision '0' out of range for \"\n            + \"INTERVAL YEAR\\\\(0\\\\)\");\n  }\n","date":"2019-09-24 02:59:18","endLine":2558,"groupId":"6926","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"subTestIntervalYearNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/d33ba8e946a499cac312fa98a0e5b21a080452.src","preCode":"  public void subTestIntervalYearNegative() {\n    \r\n    checkWholeExpFails(\"INTERVAL '-' YEAR\",\n        \"Illegal interval literal format '-' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\"INTERVAL '1-2' YEAR\",\n        \"Illegal interval literal format '1-2' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1.2' YEAR\",\n        \"Illegal interval literal format '1.2' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\"INTERVAL '1 2' YEAR\",\n        \"Illegal interval literal format '1 2' for INTERVAL YEAR.*\");\n    checkWholeExpFails(\"INTERVAL '1-2' YEAR(2)\",\n        \"Illegal interval literal format '1-2' for INTERVAL YEAR\\\\(2\\\\)\");\n    checkWholeExpFails(\"INTERVAL 'bogus text' YEAR\",\n        \"Illegal interval literal format 'bogus text' for INTERVAL YEAR.*\");\n\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '--1' YEAR\",\n        \"Illegal interval literal format '--1' for INTERVAL YEAR.*\");\n\n    \r\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '100' YEAR\",\n        \"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '100' YEAR(2)\",\n        \"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '1000' YEAR(3)\",\n        \"Interval field value 1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '-1000' YEAR(3)\",\n        \"Interval field value -1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '2147483648' YEAR(10)\",\n        \"Interval field value 2,147,483,648 exceeds precision of YEAR\\\\(10\\\\) field.*\");\n    checkWholeExpFails(\"INTERVAL '-2147483648' YEAR(10)\",\n        \"Interval field value -2,147,483,648 exceeds precision of YEAR\\\\(10\\\\) field\");\n\n    \r\n    checkExpFails(\"INTERVAL '1' YEAR(11^)^\",\n        \"Interval leading field precision '11' out of range for INTERVAL YEAR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    checkExpFails(\"INTERVAL '0' YEAR(0^)^\",\n        \"Interval leading field precision '0' out of range for INTERVAL YEAR\\\\(0\\\\)\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2511,"status":"M"},{"authorDate":"2019-09-07 07:51:19","commitOrder":2,"curCode":"  public void subTestIntervalHourNegative() {\n    \r\n    wholeExpr(\"INTERVAL '-' HOUR\")\n        .fails(\"Illegal interval literal format '-' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1-2' HOUR\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1.2' HOUR\")\n        .fails(\"Illegal interval literal format '1.2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1 2' HOUR\")\n        .fails(\"Illegal interval literal format '1 2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1:2' HOUR\")\n        .fails(\"Illegal interval literal format '1:2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1-2' HOUR(2)\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL HOUR\\\\(2\\\\)\");\n    wholeExpr(\"INTERVAL 'bogus text' HOUR\")\n        .fails(\"Illegal interval literal format 'bogus text' for \"\n            + \"INTERVAL HOUR.*\");\n\n    \r\n    wholeExpr(\"INTERVAL '--1' HOUR\")\n        .fails(\"Illegal interval literal format '--1' for INTERVAL HOUR.*\");\n\n    \r\n    \r\n    wholeExpr(\"INTERVAL '100' HOUR\")\n        .fails(\"Interval field value 100 exceeds precision of \"\n            + \"HOUR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '100' HOUR(2)\")\n        .fails(\"Interval field value 100 exceeds precision of \"\n            + \"HOUR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '1000' HOUR(3)\")\n        .fails(\"Interval field value 1,000 exceeds precision of \"\n            + \"HOUR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-1000' HOUR(3)\")\n        .fails(\"Interval field value -1,000 exceeds precision of \"\n            + \"HOUR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '2147483648' HOUR(10)\")\n        .fails(\"Interval field value 2,147,483,648 exceeds precision of \"\n            + \"HOUR\\\\(10\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-2147483648' HOUR(10)\")\n        .fails(\"Interval field value -2,147,483,648 exceeds precision of \"\n            + \"HOUR\\\\(10\\\\) field.*\");\n\n    \r\n    expr(\"INTERVAL '1' HOUR(11^)^\")\n        .fails(\"Interval leading field precision '11' out of range for \"\n            + \"INTERVAL HOUR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    expr(\"INTERVAL '0' HOUR(0^)^\")\n        .fails(\"Interval leading field precision '0' out of range for \"\n            + \"INTERVAL HOUR\\\\(0\\\\)\");\n  }\n","date":"2019-09-24 02:59:18","endLine":3073,"groupId":"8504","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"subTestIntervalHourNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/d33ba8e946a499cac312fa98a0e5b21a080452.src","preCode":"  public void subTestIntervalHourNegative() {\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '-' HOUR\",\n        \"Illegal interval literal format '-' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1-2' HOUR\",\n        \"Illegal interval literal format '1-2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1.2' HOUR\",\n        \"Illegal interval literal format '1.2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1 2' HOUR\",\n        \"Illegal interval literal format '1 2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1:2' HOUR\",\n        \"Illegal interval literal format '1:2' for INTERVAL HOUR.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1-2' HOUR(2)\",\n        \"Illegal interval literal format '1-2' for INTERVAL HOUR\\\\(2\\\\)\");\n    checkWholeExpFails(\n        \"INTERVAL 'bogus text' HOUR\",\n        \"Illegal interval literal format 'bogus text' for INTERVAL HOUR.*\");\n\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '--1' HOUR\",\n        \"Illegal interval literal format '--1' for INTERVAL HOUR.*\");\n\n    \r\n    \r\n    checkWholeExpFails(\n        \"INTERVAL '100' HOUR\",\n        \"Interval field value 100 exceeds precision of HOUR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '100' HOUR(2)\",\n        \"Interval field value 100 exceeds precision of HOUR\\\\(2\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '1000' HOUR(3)\",\n        \"Interval field value 1,000 exceeds precision of HOUR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '-1000' HOUR(3)\",\n        \"Interval field value -1,000 exceeds precision of HOUR\\\\(3\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '2147483648' HOUR(10)\",\n        \"Interval field value 2,147,483,648 exceeds precision of HOUR\\\\(10\\\\) field.*\");\n    checkWholeExpFails(\n        \"INTERVAL '-2147483648' HOUR(10)\",\n        \"Interval field value -2,147,483,648 exceeds precision of HOUR\\\\(10\\\\) field.*\");\n\n    \r\n    checkExpFails(\n        \"INTERVAL '1' HOUR(11^)^\",\n        \"Interval leading field precision '11' out of range for INTERVAL HOUR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    checkExpFails(\n        \"INTERVAL '0' HOUR(0^)^\",\n        \"Interval leading field precision '0' out of range for INTERVAL HOUR\\\\(0\\\\)\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3019,"status":"M"}],"commitId":"405614f87b75eb515e767b78a2c47481a0efc701","commitMessage":"@@@[CALCITE-3327] Simplify SqlValidatorTest and SqlParserTest by making test methods fluent\n\nReplace 'boolean typeCoercion' parameter with fluent method 'Sql.withTypeCoercion(boolean)'.\n\nDeprecate various checkXxx methods. For example. \ncheckExp(sql.  expected) becomes expr(sql).ok();\ncheckExpFails(sql.  e) becomes expr(s).fails(e).\n\nRename SqlParserTest.exp to expr.\n","date":"2019-09-24 02:59:18","modifiedFileCount":"16","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-07-21 04:33:06","codes":[{"authorDate":"2020-07-21 04:33:06","commitOrder":3,"curCode":"  void subTestIntervalYearNegative() {\n    \r\n    wholeExpr(\"INTERVAL '-' YEAR\")\n        .fails(\"Illegal interval literal format '-' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1-2' YEAR\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1.2' YEAR\")\n        .fails(\"Illegal interval literal format '1.2' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1 2' YEAR\")\n        .fails(\"Illegal interval literal format '1 2' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1-2' YEAR(2)\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL YEAR\\\\(2\\\\)\");\n    wholeExpr(\"INTERVAL 'bogus text' YEAR\")\n        .fails(\"Illegal interval literal format 'bogus text' for INTERVAL YEAR.*\");\n\n    \r\n    wholeExpr(\"INTERVAL '--1' YEAR\")\n        .fails(\"Illegal interval literal format '--1' for INTERVAL YEAR.*\");\n\n    \r\n    \r\n    wholeExpr(\"INTERVAL '100' YEAR\")\n        .fails(\"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '100' YEAR(2)\")\n        .fails(\"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '1000' YEAR(3)\")\n        .fails(\"Interval field value 1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-1000' YEAR(3)\")\n        .fails(\"Interval field value -1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '2147483648' YEAR(10)\")\n        .fails(\"Interval field value 2,147,483,648 exceeds precision of \"\n            + \"YEAR\\\\(10\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-2147483648' YEAR(10)\")\n        .fails(\"Interval field value -2,147,483,648 exceeds precision of \"\n            + \"YEAR\\\\(10\\\\) field\");\n\n    \r\n    expr(\"INTERVAL '1' ^YEAR(11)^\")\n        .fails(\"Interval leading field precision '11' out of range for \"\n            + \"INTERVAL YEAR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    expr(\"INTERVAL '0' ^YEAR(0)^\")\n        .fails(\"Interval leading field precision '0' out of range for \"\n            + \"INTERVAL YEAR\\\\(0\\\\)\");\n  }\n","date":"2020-07-29 03:09:43","endLine":2608,"groupId":"101179","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"subTestIntervalYearNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/12/cdca6c012885a152cd97923d7167086f0b4da5.src","preCode":"  public void subTestIntervalYearNegative() {\n    \r\n    wholeExpr(\"INTERVAL '-' YEAR\")\n        .fails(\"Illegal interval literal format '-' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1-2' YEAR\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1.2' YEAR\")\n        .fails(\"Illegal interval literal format '1.2' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1 2' YEAR\")\n        .fails(\"Illegal interval literal format '1 2' for INTERVAL YEAR.*\");\n    wholeExpr(\"INTERVAL '1-2' YEAR(2)\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL YEAR\\\\(2\\\\)\");\n    wholeExpr(\"INTERVAL 'bogus text' YEAR\")\n        .fails(\"Illegal interval literal format 'bogus text' for INTERVAL YEAR.*\");\n\n    \r\n    wholeExpr(\"INTERVAL '--1' YEAR\")\n        .fails(\"Illegal interval literal format '--1' for INTERVAL YEAR.*\");\n\n    \r\n    \r\n    wholeExpr(\"INTERVAL '100' YEAR\")\n        .fails(\"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '100' YEAR(2)\")\n        .fails(\"Interval field value 100 exceeds precision of YEAR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '1000' YEAR(3)\")\n        .fails(\"Interval field value 1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-1000' YEAR(3)\")\n        .fails(\"Interval field value -1,000 exceeds precision of YEAR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '2147483648' YEAR(10)\")\n        .fails(\"Interval field value 2,147,483,648 exceeds precision of \"\n            + \"YEAR\\\\(10\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-2147483648' YEAR(10)\")\n        .fails(\"Interval field value -2,147,483,648 exceeds precision of \"\n            + \"YEAR\\\\(10\\\\) field\");\n\n    \r\n    expr(\"INTERVAL '1' YEAR(11^)^\")\n        .fails(\"Interval leading field precision '11' out of range for \"\n            + \"INTERVAL YEAR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    expr(\"INTERVAL '0' YEAR(0^)^\")\n        .fails(\"Interval leading field precision '0' out of range for \"\n            + \"INTERVAL YEAR\\\\(0\\\\)\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2561,"status":"M"},{"authorDate":"2020-07-21 04:33:06","commitOrder":3,"curCode":"  void subTestIntervalHourNegative() {\n    \r\n    wholeExpr(\"INTERVAL '-' HOUR\")\n        .fails(\"Illegal interval literal format '-' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1-2' HOUR\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1.2' HOUR\")\n        .fails(\"Illegal interval literal format '1.2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1 2' HOUR\")\n        .fails(\"Illegal interval literal format '1 2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1:2' HOUR\")\n        .fails(\"Illegal interval literal format '1:2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1-2' HOUR(2)\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL HOUR\\\\(2\\\\)\");\n    wholeExpr(\"INTERVAL 'bogus text' HOUR\")\n        .fails(\"Illegal interval literal format 'bogus text' for \"\n            + \"INTERVAL HOUR.*\");\n\n    \r\n    wholeExpr(\"INTERVAL '--1' HOUR\")\n        .fails(\"Illegal interval literal format '--1' for INTERVAL HOUR.*\");\n\n    \r\n    \r\n    wholeExpr(\"INTERVAL '100' HOUR\")\n        .fails(\"Interval field value 100 exceeds precision of \"\n            + \"HOUR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '100' HOUR(2)\")\n        .fails(\"Interval field value 100 exceeds precision of \"\n            + \"HOUR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '1000' HOUR(3)\")\n        .fails(\"Interval field value 1,000 exceeds precision of \"\n            + \"HOUR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-1000' HOUR(3)\")\n        .fails(\"Interval field value -1,000 exceeds precision of \"\n            + \"HOUR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '2147483648' HOUR(10)\")\n        .fails(\"Interval field value 2,147,483,648 exceeds precision of \"\n            + \"HOUR\\\\(10\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-2147483648' HOUR(10)\")\n        .fails(\"Interval field value -2,147,483,648 exceeds precision of \"\n            + \"HOUR\\\\(10\\\\) field.*\");\n\n    \r\n    expr(\"INTERVAL '1' ^HOUR(11)^\")\n        .fails(\"Interval leading field precision '11' out of range for \"\n            + \"INTERVAL HOUR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    expr(\"INTERVAL '0' ^HOUR(0)^\")\n        .fails(\"Interval leading field precision '0' out of range for \"\n            + \"INTERVAL HOUR\\\\(0\\\\)\");\n  }\n","date":"2020-07-29 03:09:43","endLine":3123,"groupId":"101179","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"subTestIntervalHourNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/12/cdca6c012885a152cd97923d7167086f0b4da5.src","preCode":"  public void subTestIntervalHourNegative() {\n    \r\n    wholeExpr(\"INTERVAL '-' HOUR\")\n        .fails(\"Illegal interval literal format '-' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1-2' HOUR\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1.2' HOUR\")\n        .fails(\"Illegal interval literal format '1.2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1 2' HOUR\")\n        .fails(\"Illegal interval literal format '1 2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1:2' HOUR\")\n        .fails(\"Illegal interval literal format '1:2' for INTERVAL HOUR.*\");\n    wholeExpr(\"INTERVAL '1-2' HOUR(2)\")\n        .fails(\"Illegal interval literal format '1-2' for INTERVAL HOUR\\\\(2\\\\)\");\n    wholeExpr(\"INTERVAL 'bogus text' HOUR\")\n        .fails(\"Illegal interval literal format 'bogus text' for \"\n            + \"INTERVAL HOUR.*\");\n\n    \r\n    wholeExpr(\"INTERVAL '--1' HOUR\")\n        .fails(\"Illegal interval literal format '--1' for INTERVAL HOUR.*\");\n\n    \r\n    \r\n    wholeExpr(\"INTERVAL '100' HOUR\")\n        .fails(\"Interval field value 100 exceeds precision of \"\n            + \"HOUR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '100' HOUR(2)\")\n        .fails(\"Interval field value 100 exceeds precision of \"\n            + \"HOUR\\\\(2\\\\) field.*\");\n    wholeExpr(\"INTERVAL '1000' HOUR(3)\")\n        .fails(\"Interval field value 1,000 exceeds precision of \"\n            + \"HOUR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-1000' HOUR(3)\")\n        .fails(\"Interval field value -1,000 exceeds precision of \"\n            + \"HOUR\\\\(3\\\\) field.*\");\n    wholeExpr(\"INTERVAL '2147483648' HOUR(10)\")\n        .fails(\"Interval field value 2,147,483,648 exceeds precision of \"\n            + \"HOUR\\\\(10\\\\) field.*\");\n    wholeExpr(\"INTERVAL '-2147483648' HOUR(10)\")\n        .fails(\"Interval field value -2,147,483,648 exceeds precision of \"\n            + \"HOUR\\\\(10\\\\) field.*\");\n\n    \r\n    expr(\"INTERVAL '1' HOUR(11^)^\")\n        .fails(\"Interval leading field precision '11' out of range for \"\n            + \"INTERVAL HOUR\\\\(11\\\\)\");\n\n    \r\n    \r\n    \r\n    expr(\"INTERVAL '0' HOUR(0^)^\")\n        .fails(\"Interval leading field precision '0' out of range for \"\n            + \"INTERVAL HOUR\\\\(0\\\\)\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3069,"status":"M"}],"commitId":"03c76a7d2b896042ab417ddc36f1849f874ad3dd","commitMessage":"@@@[CALCITE-4134] Interval expressions\n","date":"2020-07-29 03:09:43","modifiedFileCount":"20","status":"M","submitter":"Julian Hyde"}]
