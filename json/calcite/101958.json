[{"authorTime":"2016-06-28 14:57:41","codes":[{"authorDate":"2016-06-28 14:57:41","commitOrder":4,"curCode":"  public int getMaxScale(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericScale();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","date":"2016-07-02 02:11:10","endLine":57,"groupId":"6727","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getMaxScale","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/67/7173fe5a2d8847960bfef319039079a97b355b.src","preCode":"  public int getMaxScale(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericScale();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2016-06-28 14:57:41","commitOrder":4,"curCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","date":"2016-07-02 02:11:10","endLine":109,"groupId":"6727","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDefaultPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/67/7173fe5a2d8847960bfef319039079a97b355b.src","preCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"MB"}],"commitId":"ac9c8c7af020a0532e3e7e31b4216f69d9f0b39f","commitMessage":"@@@[CALCITE-1302] Create SqlTypeName values for each interval range.  e.g. YEAR_MONTH\n\nAs a result.  we don't need to use SqlIntervalQualifier as often. Also. \nthe JDBC client gets more information from the type.\n\nChange the CalciteAssert.checkResultCount API.\n","date":"2016-07-02 02:11:10","modifiedFileCount":"26","status":"M","submitter":"Julian Hyde"},{"authorTime":"2017-03-09 09:14:43","codes":[{"authorDate":"2016-06-28 14:57:41","commitOrder":5,"curCode":"  public int getMaxScale(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericScale();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","date":"2016-07-02 02:11:10","endLine":57,"groupId":"6727","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getMaxScale","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/67/7173fe5a2d8847960bfef319039079a97b355b.src","preCode":"  public int getMaxScale(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericScale();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"N"},{"authorDate":"2017-03-09 09:14:43","commitOrder":5,"curCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n      return 1;\n    case VARCHAR:\n    case VARBINARY:\n      return RelDataType.PRECISION_NOT_SPECIFIED;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","date":"2017-03-14 06:27:13","endLine":110,"groupId":"6727","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getDefaultPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/53/826491b4bcf17371757afec126b9f3626310fd.src","preCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"0d996daf5df17fb9b05d62fb143f3478bbaa3c80","commitMessage":"@@@[CALCITE-1684] Change default precision of VARCHAR and VARBINARY from 1 to \"unspecified\" (Kevin Liew)\n\nIf you concatenate two strings and the sum of their precisions is\ngreater than the maximum precision (65. 536 by default on Calcite.  but\ncan be overriden in RelDataTypeSystem) the result precision will be\nunspecified.\n\nWhen casting from unspecified precision to a particular precision. \nmay need to truncate values.\n\nSome unrelated USING tests.  and fix typos in method names.\n\nClose apache/calcite#394\n","date":"2017-03-14 06:27:13","modifiedFileCount":"11","status":"M","submitter":"kliewkliew"},{"authorTime":"2017-08-15 08:46:42","codes":[{"authorDate":"2016-06-28 14:57:41","commitOrder":6,"curCode":"  public int getMaxScale(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericScale();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","date":"2016-07-02 02:11:10","endLine":57,"groupId":"6727","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getMaxScale","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/67/7173fe5a2d8847960bfef319039079a97b355b.src","preCode":"  public int getMaxScale(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericScale();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"N"},{"authorDate":"2017-08-15 08:46:42","commitOrder":6,"curCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n      return 1;\n    case VARCHAR:\n    case VARBINARY:\n      return RelDataType.PRECISION_NOT_SPECIFIED;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","date":"2017-09-06 06:00:36","endLine":112,"groupId":"6727","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getDefaultPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/b8839fdb82938eacb730cd9a4cb7a0d09a2a7f.src","preCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n      return 1;\n    case VARCHAR:\n    case VARBINARY:\n      return RelDataType.PRECISION_NOT_SPECIFIED;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"939c9a62b4905d2cfffcb4adaefd76a809aa3520","commitMessage":"@@@[CALCITE-1947] Add time/timestamp with local time zone types to optimizer\n\nClose apache/calcite#519\n","date":"2017-09-06 06:00:36","modifiedFileCount":"34","status":"M","submitter":"Jesus Camacho Rodriguez"},{"authorTime":"2017-08-15 08:46:42","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":7,"curCode":"  @Override public int getMaxScale(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericScale();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","date":"2020-10-07 05:42:47","endLine":58,"groupId":"101958","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getMaxScale","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/65/c32aaedb756a7b48f5587e52446ad8350f58b7.src","preCode":"  public int getMaxScale(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericScale();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_FRACTIONAL_SECOND_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2017-08-15 08:46:42","commitOrder":7,"curCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n      return 1;\n    case VARCHAR:\n    case VARBINARY:\n      return RelDataType.PRECISION_NOT_SPECIFIED;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","date":"2017-09-06 06:00:36","endLine":112,"groupId":"101958","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getDefaultPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/b8839fdb82938eacb730cd9a4cb7a0d09a2a7f.src","preCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n      return 1;\n    case VARCHAR:\n    case VARBINARY:\n      return RelDataType.PRECISION_NOT_SPECIFIED;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
