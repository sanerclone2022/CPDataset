[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testIsDistinctFromOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.IS_DISTINCT_FROM,\n        VM_EXPAND);\n    tester.checkBoolean(\"1 is distinct from 1\", Boolean.FALSE);\n    tester.checkBoolean(\"1 is distinct from 1.0\", Boolean.FALSE);\n    tester.checkBoolean(\"1 is distinct from 2\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as integer) is distinct from 2\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as integer) is distinct from cast(null as integer)\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"1.23 is distinct from 1.23\", Boolean.FALSE);\n    tester.checkBoolean(\"1.23 is distinct from 5.23\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"-23e0 is distinct from -2.3e1\",\n        Boolean.FALSE);\n\n    \r\n    if (false) {\n      tester.checkBoolean(\n          \"row(1,1) is distinct from row(1,1)\",\n          true);\n      tester.checkBoolean(\n          \"row(1,1) is distinct from row(1,2)\",\n          false);\n    }\n\n    \r\n    tester.checkBoolean(\n        \"interval '2' day is distinct from interval '1' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '10' hour is distinct from interval '10' hour\",\n        Boolean.FALSE);\n  }\n","date":"2014-11-14 09:39:34","endLine":2036,"groupId":"5975","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsDistinctFromOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/ce9911d6cdbc46441ce964a9cf5f40a7143e6e.src","preCode":"  @Test public void testIsDistinctFromOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.IS_DISTINCT_FROM,\n        VM_EXPAND);\n    tester.checkBoolean(\"1 is distinct from 1\", Boolean.FALSE);\n    tester.checkBoolean(\"1 is distinct from 1.0\", Boolean.FALSE);\n    tester.checkBoolean(\"1 is distinct from 2\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as integer) is distinct from 2\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as integer) is distinct from cast(null as integer)\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"1.23 is distinct from 1.23\", Boolean.FALSE);\n    tester.checkBoolean(\"1.23 is distinct from 5.23\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"-23e0 is distinct from -2.3e1\",\n        Boolean.FALSE);\n\n    \r\n    if (false) {\n      tester.checkBoolean(\n          \"row(1,1) is distinct from row(1,1)\",\n          true);\n      tester.checkBoolean(\n          \"row(1,1) is distinct from row(1,2)\",\n          false);\n    }\n\n    \r\n    tester.checkBoolean(\n        \"interval '2' day is distinct from interval '1' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '10' hour is distinct from interval '10' hour\",\n        Boolean.FALSE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2000,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testIsNotDistinctFromOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.IS_NOT_DISTINCT_FROM,\n        VM_EXPAND);\n    tester.checkBoolean(\"1 is not distinct from 1\", Boolean.TRUE);\n    tester.checkBoolean(\"1 is not distinct from 1.0\", Boolean.TRUE);\n    tester.checkBoolean(\"1 is not distinct from 2\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as integer) is not distinct from 2\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as integer) is not distinct from cast(null as integer)\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"1.23 is not distinct from 1.23\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"1.23 is not distinct from 5.23\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"-23e0 is not distinct from -2.3e1\",\n        Boolean.TRUE);\n\n    \r\n    if (false) {\n      tester.checkBoolean(\n          \"row(1,1) is not distinct from row(1,1)\",\n          false);\n      tester.checkBoolean(\n          \"row(1,1) is not distinct from row(1,2)\",\n          true);\n    }\n\n    \r\n    tester.checkBoolean(\n        \"interval '2' day is not distinct from interval '1' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '10' hour is not distinct from interval '10' hour\",\n        Boolean.TRUE);\n  }\n","date":"2014-11-14 09:39:34","endLine":2078,"groupId":"11089","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsNotDistinctFromOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/ce9911d6cdbc46441ce964a9cf5f40a7143e6e.src","preCode":"  @Test public void testIsNotDistinctFromOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.IS_NOT_DISTINCT_FROM,\n        VM_EXPAND);\n    tester.checkBoolean(\"1 is not distinct from 1\", Boolean.TRUE);\n    tester.checkBoolean(\"1 is not distinct from 1.0\", Boolean.TRUE);\n    tester.checkBoolean(\"1 is not distinct from 2\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as integer) is not distinct from 2\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as integer) is not distinct from cast(null as integer)\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"1.23 is not distinct from 1.23\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"1.23 is not distinct from 5.23\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"-23e0 is not distinct from -2.3e1\",\n        Boolean.TRUE);\n\n    \r\n    if (false) {\n      tester.checkBoolean(\n          \"row(1,1) is not distinct from row(1,1)\",\n          false);\n      tester.checkBoolean(\n          \"row(1,1) is not distinct from row(1,2)\",\n          true);\n    }\n\n    \r\n    tester.checkBoolean(\n        \"interval '2' day is not distinct from interval '1' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '10' hour is not distinct from interval '10' hour\",\n        Boolean.TRUE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2038,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testIsDistinctFromOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.IS_DISTINCT_FROM,\n        VM_EXPAND);\n    tester.checkBoolean(\"1 is distinct from 1\", Boolean.FALSE);\n    tester.checkBoolean(\"1 is distinct from 1.0\", Boolean.FALSE);\n    tester.checkBoolean(\"1 is distinct from 2\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as integer) is distinct from 2\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as integer) is distinct from cast(null as integer)\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"1.23 is distinct from 1.23\", Boolean.FALSE);\n    tester.checkBoolean(\"1.23 is distinct from 5.23\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"-23e0 is distinct from -2.3e1\",\n        Boolean.FALSE);\n\n    \r\n    if (false) {\n      tester.checkBoolean(\n          \"row(1,1) is distinct from row(1,1)\",\n          true);\n      tester.checkBoolean(\n          \"row(1,1) is distinct from row(1,2)\",\n          false);\n    }\n\n    \r\n    tester.checkBoolean(\n        \"interval '2' day is distinct from interval '1' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '10' hour is distinct from interval '10' hour\",\n        Boolean.FALSE);\n  }\n","date":"2020-04-06 04:57:49","endLine":2511,"groupId":"10738","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsDistinctFromOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testIsDistinctFromOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.IS_DISTINCT_FROM,\n        VM_EXPAND);\n    tester.checkBoolean(\"1 is distinct from 1\", Boolean.FALSE);\n    tester.checkBoolean(\"1 is distinct from 1.0\", Boolean.FALSE);\n    tester.checkBoolean(\"1 is distinct from 2\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as integer) is distinct from 2\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as integer) is distinct from cast(null as integer)\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"1.23 is distinct from 1.23\", Boolean.FALSE);\n    tester.checkBoolean(\"1.23 is distinct from 5.23\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"-23e0 is distinct from -2.3e1\",\n        Boolean.FALSE);\n\n    \r\n    if (false) {\n      tester.checkBoolean(\n          \"row(1,1) is distinct from row(1,1)\",\n          true);\n      tester.checkBoolean(\n          \"row(1,1) is distinct from row(1,2)\",\n          false);\n    }\n\n    \r\n    tester.checkBoolean(\n        \"interval '2' day is distinct from interval '1' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '10' hour is distinct from interval '10' hour\",\n        Boolean.FALSE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2475,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testIsNotDistinctFromOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.IS_NOT_DISTINCT_FROM,\n        VM_EXPAND);\n    tester.checkBoolean(\"1 is not distinct from 1\", Boolean.TRUE);\n    tester.checkBoolean(\"1 is not distinct from 1.0\", Boolean.TRUE);\n    tester.checkBoolean(\"1 is not distinct from 2\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as integer) is not distinct from 2\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as integer) is not distinct from cast(null as integer)\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"1.23 is not distinct from 1.23\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"1.23 is not distinct from 5.23\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"-23e0 is not distinct from -2.3e1\",\n        Boolean.TRUE);\n\n    \r\n    if (false) {\n      tester.checkBoolean(\n          \"row(1,1) is not distinct from row(1,1)\",\n          false);\n      tester.checkBoolean(\n          \"row(1,1) is not distinct from row(1,2)\",\n          true);\n    }\n\n    \r\n    tester.checkBoolean(\n        \"interval '2' day is not distinct from interval '1' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '10' hour is not distinct from interval '10' hour\",\n        Boolean.TRUE);\n  }\n","date":"2020-04-06 04:57:49","endLine":2553,"groupId":"10738","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsNotDistinctFromOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testIsNotDistinctFromOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.IS_NOT_DISTINCT_FROM,\n        VM_EXPAND);\n    tester.checkBoolean(\"1 is not distinct from 1\", Boolean.TRUE);\n    tester.checkBoolean(\"1 is not distinct from 1.0\", Boolean.TRUE);\n    tester.checkBoolean(\"1 is not distinct from 2\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as integer) is not distinct from 2\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as integer) is not distinct from cast(null as integer)\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"1.23 is not distinct from 1.23\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"1.23 is not distinct from 5.23\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"-23e0 is not distinct from -2.3e1\",\n        Boolean.TRUE);\n\n    \r\n    if (false) {\n      tester.checkBoolean(\n          \"row(1,1) is not distinct from row(1,1)\",\n          false);\n      tester.checkBoolean(\n          \"row(1,1) is not distinct from row(1,2)\",\n          true);\n    }\n\n    \r\n    tester.checkBoolean(\n        \"interval '2' day is not distinct from interval '1' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '10' hour is not distinct from interval '10' hour\",\n        Boolean.TRUE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2513,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
