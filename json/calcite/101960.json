[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public int getDefaultPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case TIME:\n      return 0;\n    case TIMESTAMP:\n      \r\n      \r\n      return 0;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":67,"groupId":"10370","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getDefaultPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0f/5ff541f3fbd12075c6fef774f011d85c9df981.src","preCode":"  public int getDefaultPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case TIME:\n      return 0;\n    case TIMESTAMP:\n      \r\n      \r\n      return 0;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":88,"groupId":"14314","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0f/5ff541f3fbd12075c6fef774f011d85c9df981.src","preCode":"  public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2015-05-14 18:30:33","codes":[{"authorDate":"2015-05-14 18:30:33","commitOrder":2,"curCode":"  public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","date":"2015-06-03 08:16:15","endLine":87,"groupId":"6727","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getDefaultPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/46/11b4b6d4888d3725268f4412284f1613d694ac.src","preCode":"  public int getDefaultPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case TIME:\n      return 0;\n    case TIMESTAMP:\n      \r\n      \r\n      return 0;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2015-05-14 18:30:33","commitOrder":2,"curCode":"  public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return getDefaultPrecision(typeName);\n    }\n  }\n","date":"2015-06-03 08:16:15","endLine":108,"groupId":"14314","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/46/11b4b6d4888d3725268f4412284f1613d694ac.src","preCode":"  public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"83707f720b85c5e8c94426ba33f4339aa6b24350","commitMessage":"@@@[CALCITE-708] Implement DatabaseMetaData.getTypeInfo (Xavier Leong)\n","date":"2015-06-03 08:16:15","modifiedFileCount":"13","status":"M","submitter":"Xavier Leong"},{"authorTime":"2016-02-27 11:44:17","codes":[{"authorDate":"2016-02-27 11:44:17","commitOrder":3,"curCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","date":"2016-06-15 09:02:59","endLine":87,"groupId":"6727","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getDefaultPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c3/4c2e6d2c0ac5240806ff2aa9609c47b8532753.src","preCode":"  public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2016-02-27 11:44:17","commitOrder":3,"curCode":"  @Override public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return getDefaultPrecision(typeName);\n    }\n  }\n","date":"2016-06-15 09:02:59","endLine":108,"groupId":"14314","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c3/4c2e6d2c0ac5240806ff2aa9609c47b8532753.src","preCode":"  public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return getDefaultPrecision(typeName);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"acd27fdea5fb54375a999a9221b79a6df166660c","commitMessage":"@@@[CALCITE-528] When making field names unique.  follow type system's case-sensitivity policy (Jacques Nadeau.  Jinfeng Ni.  Minji Kim)\n\nEnsure that uniquify keeps the ordinal position of input names (Jinfeng Ni).\n\nAdd tests (Minji Kim).\n\nFix up (Julian Hyde).\n\nClose apache/calcite#245\n","date":"2016-06-15 09:02:59","modifiedFileCount":"23","status":"M","submitter":"Jacques Nadeau"},{"authorTime":"2016-06-28 14:57:41","codes":[{"authorDate":"2016-06-28 14:57:41","commitOrder":4,"curCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","date":"2016-07-02 02:11:10","endLine":109,"groupId":"6727","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getDefaultPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/67/7173fe5a2d8847960bfef319039079a97b355b.src","preCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2016-06-28 14:57:41","commitOrder":4,"curCode":"  @Override public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return getDefaultPrecision(typeName);\n    }\n  }\n","date":"2016-07-02 02:11:10","endLine":141,"groupId":"14314","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/67/7173fe5a2d8847960bfef319039079a97b355b.src","preCode":"  @Override public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_DAY_TIME:\n    case INTERVAL_YEAR_MONTH:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return getDefaultPrecision(typeName);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"ac9c8c7af020a0532e3e7e31b4216f69d9f0b39f","commitMessage":"@@@[CALCITE-1302] Create SqlTypeName values for each interval range.  e.g. YEAR_MONTH\n\nAs a result.  we don't need to use SqlIntervalQualifier as often. Also. \nthe JDBC client gets more information from the type.\n\nChange the CalciteAssert.checkResultCount API.\n","date":"2016-07-02 02:11:10","modifiedFileCount":"26","status":"M","submitter":"Julian Hyde"},{"authorTime":"2016-06-28 14:57:41","codes":[{"authorDate":"2017-03-09 09:14:43","commitOrder":5,"curCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n      return 1;\n    case VARCHAR:\n    case VARBINARY:\n      return RelDataType.PRECISION_NOT_SPECIFIED;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","date":"2017-03-14 06:27:13","endLine":110,"groupId":"6727","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getDefaultPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/53/826491b4bcf17371757afec126b9f3626310fd.src","preCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n    case VARCHAR:\n    case VARBINARY:\n      return 1;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2016-06-28 14:57:41","commitOrder":5,"curCode":"  @Override public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return getDefaultPrecision(typeName);\n    }\n  }\n","date":"2016-07-02 02:11:10","endLine":141,"groupId":"14314","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/67/7173fe5a2d8847960bfef319039079a97b355b.src","preCode":"  @Override public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return getDefaultPrecision(typeName);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"N"}],"commitId":"0d996daf5df17fb9b05d62fb143f3478bbaa3c80","commitMessage":"@@@[CALCITE-1684] Change default precision of VARCHAR and VARBINARY from 1 to \"unspecified\" (Kevin Liew)\n\nIf you concatenate two strings and the sum of their precisions is\ngreater than the maximum precision (65. 536 by default on Calcite.  but\ncan be overriden in RelDataTypeSystem) the result precision will be\nunspecified.\n\nWhen casting from unspecified precision to a particular precision. \nmay need to truncate values.\n\nSome unrelated USING tests.  and fix typos in method names.\n\nClose apache/calcite#394\n","date":"2017-03-14 06:27:13","modifiedFileCount":"11","status":"M","submitter":"kliewkliew"},{"authorTime":"2017-08-15 08:46:42","codes":[{"authorDate":"2017-08-15 08:46:42","commitOrder":6,"curCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n      return 1;\n    case VARCHAR:\n    case VARBINARY:\n      return RelDataType.PRECISION_NOT_SPECIFIED;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","date":"2017-09-06 06:00:36","endLine":112,"groupId":"101960","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getDefaultPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/b8839fdb82938eacb730cd9a4cb7a0d09a2a7f.src","preCode":"  @Override public int getDefaultPrecision(SqlTypeName typeName) {\n    \r\n    switch (typeName) {\n    case CHAR:\n    case BINARY:\n      return 1;\n    case VARCHAR:\n    case VARBINARY:\n      return RelDataType.PRECISION_NOT_SPECIFIED;\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.DEFAULT_INTERVAL_START_PRECISION;\n    case BOOLEAN:\n      return 1;\n    case TINYINT:\n      return 3;\n    case SMALLINT:\n      return 5;\n    case INTEGER:\n      return 10;\n    case BIGINT:\n      return 19;\n    case REAL:\n      return 7;\n    case FLOAT:\n    case DOUBLE:\n      return 15;\n    case TIME:\n    case DATE:\n      return 0; \r\n    case TIMESTAMP:\n      \r\n      \r\n      \r\n      return 0;\n    default:\n      return -1;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2017-08-15 08:46:42","commitOrder":6,"curCode":"  @Override public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return getDefaultPrecision(typeName);\n    }\n  }\n","date":"2017-09-06 06:00:36","endLine":146,"groupId":"101960","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getMaxPrecision","params":"(SqlTypeNametypeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/b8839fdb82938eacb730cd9a4cb7a0d09a2a7f.src","preCode":"  @Override public int getMaxPrecision(SqlTypeName typeName) {\n    switch (typeName) {\n    case DECIMAL:\n      return getMaxNumericPrecision();\n    case VARCHAR:\n    case CHAR:\n      return 65536;\n    case VARBINARY:\n    case BINARY:\n      return 65536;\n    case TIME:\n    case TIMESTAMP:\n      return SqlTypeName.MAX_DATETIME_PRECISION;\n    case INTERVAL_YEAR:\n    case INTERVAL_YEAR_MONTH:\n    case INTERVAL_MONTH:\n    case INTERVAL_DAY:\n    case INTERVAL_DAY_HOUR:\n    case INTERVAL_DAY_MINUTE:\n    case INTERVAL_DAY_SECOND:\n    case INTERVAL_HOUR:\n    case INTERVAL_HOUR_MINUTE:\n    case INTERVAL_HOUR_SECOND:\n    case INTERVAL_MINUTE:\n    case INTERVAL_MINUTE_SECOND:\n    case INTERVAL_SECOND:\n      return SqlTypeName.MAX_INTERVAL_START_PRECISION;\n    default:\n      return getDefaultPrecision(typeName);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/type/RelDataTypeSystemImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"939c9a62b4905d2cfffcb4adaefd76a809aa3520","commitMessage":"@@@[CALCITE-1947] Add time/timestamp with local time zone types to optimizer\n\nClose apache/calcite#519\n","date":"2017-09-06 06:00:36","modifiedFileCount":"34","status":"M","submitter":"Jesus Camacho Rodriguez"}]
