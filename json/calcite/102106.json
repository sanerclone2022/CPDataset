[{"authorTime":"2015-03-09 09:39:07","codes":[{"authorDate":"2015-02-13 12:42:23","commitOrder":3,"curCode":"  public static Mappings.TargetMapping getMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(\n            MappingType.INVERSE_SURJECTION, inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.zip(projects)) {\n      if (!(exp.e instanceof RexInputRef)) {\n        return null;\n      }\n      mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n    }\n    return mapping;\n  }\n","date":"2015-02-18 09:18:19","endLine":293,"groupId":"12873","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getMapping","params":"(intinputFieldCount@List<?extendsRexNode>projects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/84/2c0de81b2bf999198da5dec6a49be0484ede46.src","preCode":"  public static Mappings.TargetMapping getMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(\n            MappingType.INVERSE_SURJECTION, inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.zip(projects)) {\n      if (!(exp.e instanceof RexInputRef)) {\n        return null;\n      }\n      mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n    }\n    return mapping;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/core/Project.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"NB"},{"authorDate":"2015-03-09 09:39:07","commitOrder":3,"curCode":"  public static Mappings.TargetMapping getPartialMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_FUNCTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.zip(projects)) {\n      if (exp.e instanceof RexInputRef) {\n        mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n      }\n    }\n    return mapping;\n  }\n","date":"2015-03-10 08:38:39","endLine":320,"groupId":"4702","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartialMapping","params":"(intinputFieldCount@List<?extendsRexNode>projects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/af/24c5890fc0f9f7bb5153f33b4639459ec80fcd.src","preCode":"  public static Mappings.TargetMapping getPartialMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_FUNCTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.zip(projects)) {\n      if (exp.e instanceof RexInputRef) {\n        mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n      }\n    }\n    return mapping;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/core/Project.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"B"}],"commitId":"03e9449837eee214df8131185a80a560dd192660","commitMessage":"@@@[CALCITE-608] Exception is thrown when RelMdDistribution for Project operator is called (Jesus Camacho Rodriguez)\n\nClose apache/incubator-calcite#56\n","date":"2015-03-10 08:38:39","modifiedFileCount":"2","status":"M","submitter":"Jesus Camacho Rodriguez"},{"authorTime":"2015-03-09 09:39:07","codes":[{"authorDate":"2017-11-16 09:17:17","commitOrder":4,"curCode":"  public static Mappings.TargetMapping getMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    if (inputFieldCount < projects.size()) {\n      return null; \r\n    }\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_SURJECTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.zip(projects)) {\n      if (!(exp.e instanceof RexInputRef)) {\n        return null;\n      }\n      mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n    }\n    return mapping;\n  }\n","date":"2017-11-16 09:17:17","endLine":289,"groupId":"12873","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getMapping","params":"(intinputFieldCount@List<?extendsRexNode>projects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c3/a2c2bb63716ff5748e6c4a3e30915de3743626.src","preCode":"  public static Mappings.TargetMapping getMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_SURJECTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.zip(projects)) {\n      if (!(exp.e instanceof RexInputRef)) {\n        return null;\n      }\n      mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n    }\n    return mapping;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/core/Project.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"},{"authorDate":"2015-03-09 09:39:07","commitOrder":4,"curCode":"  public static Mappings.TargetMapping getPartialMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_FUNCTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.zip(projects)) {\n      if (exp.e instanceof RexInputRef) {\n        mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n      }\n    }\n    return mapping;\n  }\n","date":"2015-03-10 08:38:39","endLine":320,"groupId":"4702","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartialMapping","params":"(intinputFieldCount@List<?extendsRexNode>projects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/af/24c5890fc0f9f7bb5153f33b4639459ec80fcd.src","preCode":"  public static Mappings.TargetMapping getPartialMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_FUNCTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.zip(projects)) {\n      if (exp.e instanceof RexInputRef) {\n        mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n      }\n    }\n    return mapping;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/core/Project.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"N"}],"commitId":"051809b4dc580bda04c401e861a62b52553c2418","commitMessage":"@@@[CALCITE-2039] AssertionError when pushing project to ProjectableFilterableTable\n\nTest case from Enrico Olivelli.\n","date":"2017-11-16 09:17:17","modifiedFileCount":"3","status":"M","submitter":"Julian Hyde"},{"authorTime":"2018-03-01 10:10:35","codes":[{"authorDate":"2018-03-01 10:10:35","commitOrder":5,"curCode":"  public static Mappings.TargetMapping getMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    if (inputFieldCount < projects.size()) {\n      return null; \r\n    }\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_SURJECTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.<RexNode>zip(projects)) {\n      if (!(exp.e instanceof RexInputRef)) {\n        return null;\n      }\n      mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n    }\n    return mapping;\n  }\n","date":"2018-03-12 15:16:13","endLine":289,"groupId":"7215","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getMapping","params":"(intinputFieldCount@List<?extendsRexNode>projects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/31/199599c098fd84f48b42a823993ef8ac06bcc0.src","preCode":"  public static Mappings.TargetMapping getMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    if (inputFieldCount < projects.size()) {\n      return null; \r\n    }\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_SURJECTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.zip(projects)) {\n      if (!(exp.e instanceof RexInputRef)) {\n        return null;\n      }\n      mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n    }\n    return mapping;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/core/Project.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"},{"authorDate":"2018-03-01 10:10:35","commitOrder":5,"curCode":"  public static Mappings.TargetMapping getPartialMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_FUNCTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.<RexNode>zip(projects)) {\n      if (exp.e instanceof RexInputRef) {\n        mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n      }\n    }\n    return mapping;\n  }\n","date":"2018-03-12 15:16:13","endLine":315,"groupId":"13451","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartialMapping","params":"(intinputFieldCount@List<?extendsRexNode>projects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/31/199599c098fd84f48b42a823993ef8ac06bcc0.src","preCode":"  public static Mappings.TargetMapping getPartialMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_FUNCTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.zip(projects)) {\n      if (exp.e instanceof RexInputRef) {\n        mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n      }\n    }\n    return mapping;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/core/Project.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"M"}],"commitId":"fb8ebd31526cd2e203fa3526ca8de7a22ee0d139","commitMessage":"@@@[CALCITE-2197] Fix test failures on Windows due to line endings\n\nAdd several new matchers in Matchers: isLinux.  containsStringLinux. \nhasTree.  compose. Change tests that generate platform-specific strings\nto use them.\n","date":"2018-03-12 15:16:13","modifiedFileCount":"13","status":"M","submitter":"Julian Hyde"},{"authorTime":"2018-03-01 10:10:35","codes":[{"authorDate":"2019-08-05 15:54:01","commitOrder":6,"curCode":"  public static Mappings.TargetMapping getMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    if (inputFieldCount < projects.size()) {\n      return null; \r\n    }\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_SURJECTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.<RexNode>zip(projects)) {\n      if (!(exp.e instanceof RexInputRef)) {\n        return null;\n      }\n\n      int source = ((RexInputRef) exp.e).getIndex();\n      if (mapping.getTargetOpt(source) != -1) {\n        return null;\n      }\n      mapping.set(source, exp.i);\n    }\n    return mapping;\n  }\n","date":"2019-08-23 10:02:06","endLine":293,"groupId":"7215","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getMapping","params":"(intinputFieldCount@List<?extendsRexNode>projects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ee/e00b3ae732a0256b1b28dc62b732254a37f141.src","preCode":"  public static Mappings.TargetMapping getMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    if (inputFieldCount < projects.size()) {\n      return null; \r\n    }\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_SURJECTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.<RexNode>zip(projects)) {\n      if (!(exp.e instanceof RexInputRef)) {\n        return null;\n      }\n      mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n    }\n    return mapping;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/core/Project.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"},{"authorDate":"2018-03-01 10:10:35","commitOrder":6,"curCode":"  public static Mappings.TargetMapping getPartialMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_FUNCTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.<RexNode>zip(projects)) {\n      if (exp.e instanceof RexInputRef) {\n        mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n      }\n    }\n    return mapping;\n  }\n","date":"2018-03-12 15:16:13","endLine":315,"groupId":"13451","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartialMapping","params":"(intinputFieldCount@List<?extendsRexNode>projects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/31/199599c098fd84f48b42a823993ef8ac06bcc0.src","preCode":"  public static Mappings.TargetMapping getPartialMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_FUNCTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.<RexNode>zip(projects)) {\n      if (exp.e instanceof RexInputRef) {\n        mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n      }\n    }\n    return mapping;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/core/Project.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"N"}],"commitId":"22577e488e04d4056e15af96bac4246fd810f0fa","commitMessage":"@@@[CALCITE-3228] Error while applying rule ProjectScanRule: interpreter\n","date":"2019-08-23 10:02:06","modifiedFileCount":"5","status":"M","submitter":"Chunwei Lei"},{"authorTime":"2018-03-01 10:10:35","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":7,"curCode":"  public static Mappings.@Nullable TargetMapping getMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    if (inputFieldCount < projects.size()) {\n      return null; \r\n    }\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_SURJECTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.<RexNode>zip(projects)) {\n      if (!(exp.e instanceof RexInputRef)) {\n        return null;\n      }\n\n      int source = ((RexInputRef) exp.e).getIndex();\n      if (mapping.getTargetOpt(source) != -1) {\n        return null;\n      }\n      mapping.set(source, exp.i);\n    }\n    return mapping;\n  }\n","date":"2020-11-30 06:45:33","endLine":365,"groupId":"102106","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"getMapping","params":"(intinputFieldCount@List<?extendsRexNode>projects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f4/a2e3ac3ddca4052411338c9ade2e2596c7c101.src","preCode":"  public static Mappings.TargetMapping getMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    if (inputFieldCount < projects.size()) {\n      return null; \r\n    }\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_SURJECTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.<RexNode>zip(projects)) {\n      if (!(exp.e instanceof RexInputRef)) {\n        return null;\n      }\n\n      int source = ((RexInputRef) exp.e).getIndex();\n      if (mapping.getTargetOpt(source) != -1) {\n        return null;\n      }\n      mapping.set(source, exp.i);\n    }\n    return mapping;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/core/Project.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"M"},{"authorDate":"2018-03-01 10:10:35","commitOrder":7,"curCode":"  public static Mappings.TargetMapping getPartialMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_FUNCTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.<RexNode>zip(projects)) {\n      if (exp.e instanceof RexInputRef) {\n        mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n      }\n    }\n    return mapping;\n  }\n","date":"2018-03-12 15:16:13","endLine":315,"groupId":"102106","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartialMapping","params":"(intinputFieldCount@List<?extendsRexNode>projects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/31/199599c098fd84f48b42a823993ef8ac06bcc0.src","preCode":"  public static Mappings.TargetMapping getPartialMapping(int inputFieldCount,\n      List<? extends RexNode> projects) {\n    Mappings.TargetMapping mapping =\n        Mappings.create(MappingType.INVERSE_FUNCTION,\n            inputFieldCount, projects.size());\n    for (Ord<RexNode> exp : Ord.<RexNode>zip(projects)) {\n      if (exp.e instanceof RexInputRef) {\n        mapping.set(((RexInputRef) exp.e).getIndex(), exp.i);\n      }\n    }\n    return mapping;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/core/Project.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"N"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
