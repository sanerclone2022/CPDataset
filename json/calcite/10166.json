[{"authorTime":"2016-05-22 03:33:32","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"  static List<String> mongoFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n        new AbstractList<String>() {\n          @Override public String get(int index) {\n            final String name = rowType.getFieldList().get(index).getName();\n            return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n          }\n\n          @Override public int size() {\n            return rowType.getFieldCount();\n          }\n        });\n  }\n","date":"2014-11-14 09:39:34","endLine":83,"groupId":"365","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mongoFieldNames","params":"(finalRelDataTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1b/4b29e2512a74a571e4fa732212654fc89f727f.src","preCode":"  static List<String> mongoFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n        new AbstractList<String>() {\n          @Override public String get(int index) {\n            final String name = rowType.getFieldList().get(index).getName();\n            return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n          }\n\n          @Override public int size() {\n            return rowType.getFieldCount();\n          }\n        });\n  }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"NB"},{"authorDate":"2016-05-22 03:33:32","commitOrder":2,"curCode":"  static List<String> elasticsearchFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n      new AbstractList<String>() {\n        @Override public String get(int index) {\n          final String name = rowType.getFieldList().get(index).getName();\n          return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n        }\n\n        @Override public int size() {\n          return rowType.getFieldCount();\n        }\n      });\n  }\n","date":"2016-05-27 05:57:06","endLine":97,"groupId":"365","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"elasticsearchFieldNames","params":"(finalRelDataTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2e/681563d37c867477bcebee2ed1fbcbc96392b1.src","preCode":"  static List<String> elasticsearchFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n      new AbstractList<String>() {\n        @Override public String get(int index) {\n          final String name = rowType.getFieldList().get(index).getName();\n          return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n        }\n\n        @Override public int size() {\n          return rowType.getFieldCount();\n        }\n      });\n  }\n","realPath":"elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"}],"commitId":"f3caf13b9f1cd92f95dcf27716466bf2133e1ed7","commitMessage":"@@@[CALCITE-1253] Elasticsearch adapter (Subhobrata Dey)\n\nClose apache/calcite#236\n","date":"2016-05-27 05:57:06","modifiedFileCount":"0","status":"M","submitter":"Subhobrata Dey"},{"authorTime":"2016-05-22 03:33:32","codes":[{"authorDate":"2017-01-23 17:38:12","commitOrder":3,"curCode":"  static List<String> mongoFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n        new AbstractList<String>() {\n          @Override public String get(int index) {\n            final String name = rowType.getFieldList().get(index).getName();\n            return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n          }\n\n          @Override public int size() {\n            return rowType.getFieldCount();\n          }\n        },\n        SqlValidatorUtil.EXPR_SUGGESTER, true);\n  }\n","date":"2017-01-26 03:00:12","endLine":103,"groupId":"365","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mongoFieldNames","params":"(finalRelDataTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d6/0c4768726e12927077e38bb2a0d09b2fcb90e9.src","preCode":"  static List<String> mongoFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n        new AbstractList<String>() {\n          @Override public String get(int index) {\n            final String name = rowType.getFieldList().get(index).getName();\n            return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n          }\n\n          @Override public int size() {\n            return rowType.getFieldCount();\n          }\n        });\n  }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2016-05-22 03:33:32","commitOrder":3,"curCode":"  static List<String> elasticsearchFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n      new AbstractList<String>() {\n        @Override public String get(int index) {\n          final String name = rowType.getFieldList().get(index).getName();\n          return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n        }\n\n        @Override public int size() {\n          return rowType.getFieldCount();\n        }\n      });\n  }\n","date":"2016-05-27 05:57:06","endLine":97,"groupId":"365","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"elasticsearchFieldNames","params":"(finalRelDataTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2e/681563d37c867477bcebee2ed1fbcbc96392b1.src","preCode":"  static List<String> elasticsearchFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n      new AbstractList<String>() {\n        @Override public String get(int index) {\n          final String name = rowType.getFieldList().get(index).getName();\n          return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n        }\n\n        @Override public int size() {\n          return rowType.getFieldCount();\n        }\n      });\n  }\n","realPath":"elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"}],"commitId":"603648bc2466ab699fa6646ffc1ad717b8c11880","commitMessage":"@@@[CALCITE-1597] Obsolete Util.newInternal.  .pre.  .post.  .permAssert and Throwables.propagate\n\nReplace Util.newInternal with new AssertionError in some contexts. \nnew RuntimeException in others. Replace methods pre.  pos.  permAssert\nin Util with methods in Preconditions.\n\nRemove uses of Throwables.propagate and .propagateIfPossible because\nthey are deprecated as of Guava 20. Create method\nUtil.throwIfUnchecked because we can't use Guava's\nThrowables.throwIfUnchecked yet.\n","date":"2017-01-26 03:00:12","modifiedFileCount":"82","status":"M","submitter":"Julian Hyde"},{"authorTime":"2017-01-25 03:49:40","codes":[{"authorDate":"2017-01-23 17:38:12","commitOrder":4,"curCode":"  static List<String> mongoFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n        new AbstractList<String>() {\n          @Override public String get(int index) {\n            final String name = rowType.getFieldList().get(index).getName();\n            return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n          }\n\n          @Override public int size() {\n            return rowType.getFieldCount();\n          }\n        },\n        SqlValidatorUtil.EXPR_SUGGESTER, true);\n  }\n","date":"2017-01-26 03:00:12","endLine":103,"groupId":"10166","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"mongoFieldNames","params":"(finalRelDataTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d6/0c4768726e12927077e38bb2a0d09b2fcb90e9.src","preCode":"  static List<String> mongoFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n        new AbstractList<String>() {\n          @Override public String get(int index) {\n            final String name = rowType.getFieldList().get(index).getName();\n            return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n          }\n\n          @Override public int size() {\n            return rowType.getFieldCount();\n          }\n        },\n        SqlValidatorUtil.EXPR_SUGGESTER, true);\n  }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"N"},{"authorDate":"2017-01-25 03:49:40","commitOrder":4,"curCode":"  static List<String> elasticsearchFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n        new AbstractList<String>() {\n          @Override public String get(int index) {\n            final String name = rowType.getFieldList().get(index).getName();\n            return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n          }\n\n          @Override public int size() {\n            return rowType.getFieldCount();\n          }\n        },\n        SqlValidatorUtil.EXPR_SUGGESTER, true);\n  }\n","date":"2017-01-26 03:21:36","endLine":93,"groupId":"10166","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"elasticsearchFieldNames","params":"(finalRelDataTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/3f/c0fd27bd45d8b5c728cdfd9734fae74aea9a54.src","preCode":"  static List<String> elasticsearchFieldNames(final RelDataType rowType) {\n    return SqlValidatorUtil.uniquify(\n      new AbstractList<String>() {\n        @Override public String get(int index) {\n          final String name = rowType.getFieldList().get(index).getName();\n          return name.startsWith(\"$\") ? \"_\" + name.substring(2) : name;\n        }\n\n        @Override public int size() {\n          return rowType.getFieldCount();\n        }\n      });\n  }\n","realPath":"elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"5181563f9f26d1533a7d98ecca8443077e7b7efa","commitMessage":"@@@[CALCITE-1602] Remove uses of deprecated APIs\n","date":"2017-01-26 03:21:36","modifiedFileCount":"69","status":"M","submitter":"Julian Hyde"}]
