[{"authorTime":"2018-01-03 21:44:00","codes":[{"authorDate":"2018-01-03 21:44:00","commitOrder":1,"curCode":"  @Override public AbstractQueryableTable create(\n      SchemaPlus schema,\n      String name,\n      Map<String, Object> operand,\n      RelDataType rowType) {\n    return new AbstractQueryableTable(Integer.class) {\n      @Override public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n        return typeFactory.builder().add(\"ID\", SqlTypeName.INTEGER).build();\n      }\n\n      @Override public Queryable<Integer> asQueryable(\n          QueryProvider qp,\n          SchemaPlus sp,\n          String string) {\n        return fetchPreferredGenres();\n      }\n    };\n  }\n","date":"2018-03-04 13:35:17","endLine":61,"groupId":"6981","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(SchemaPlusschema@Stringname@Map<String@Object>operand@RelDataTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/28/e043eddef1df148d24517bb10da418a6ecf21f.src","preCode":"  @Override public AbstractQueryableTable create(\n      SchemaPlus schema,\n      String name,\n      Map<String, Object> operand,\n      RelDataType rowType) {\n    return new AbstractQueryableTable(Integer.class) {\n      @Override public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n        return typeFactory.builder().add(\"ID\", SqlTypeName.INTEGER).build();\n      }\n\n      @Override public Queryable<Integer> asQueryable(\n          QueryProvider qp,\n          SchemaPlus sp,\n          String string) {\n        return fetchPreferredGenres();\n      }\n    };\n  }\n","realPath":"plus/src/main/java/org/apache/calcite/chinook/PreferredGenresTableFactory.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2018-01-03 21:44:00","commitOrder":1,"curCode":"  @Override public AbstractQueryableTable create(\n      SchemaPlus schema,\n      String name,\n      Map<String, Object> operand,\n      RelDataType rowType) {\n    return new AbstractQueryableTable(Integer.class) {\n      @Override public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n        return typeFactory.builder().add(\"ID\", SqlTypeName.INTEGER).build();\n      }\n\n      @Override public Queryable<Integer> asQueryable(\n          QueryProvider qp,\n          SchemaPlus sp,\n          String string) {\n        return fetchPreferredAlbums();\n      }\n    };\n  }\n","date":"2018-03-04 13:35:17","endLine":61,"groupId":"6981","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(SchemaPlusschema@Stringname@Map<String@Object>operand@RelDataTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/73/496108bc7bc6188309508158073c07f7341aba.src","preCode":"  @Override public AbstractQueryableTable create(\n      SchemaPlus schema,\n      String name,\n      Map<String, Object> operand,\n      RelDataType rowType) {\n    return new AbstractQueryableTable(Integer.class) {\n      @Override public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n        return typeFactory.builder().add(\"ID\", SqlTypeName.INTEGER).build();\n      }\n\n      @Override public Queryable<Integer> asQueryable(\n          QueryProvider qp,\n          SchemaPlus sp,\n          String string) {\n        return fetchPreferredAlbums();\n      }\n    };\n  }\n","realPath":"plus/src/main/java/org/apache/calcite/chinook/PreferredAlbumsTableFactory.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"}],"commitId":"81d59679b3ffd90339df7d8463c9865b89867e98","commitMessage":"@@@[CALCITE-2088] Chinook database with simple end-to-end tests for Calcite JDBC (Piotr Bojko)\n\nTests use the chinook-data-hsqldb data set from maven central.\n\nFix bug.  introduced in [CALCITE-2128].  where JdbcJoinRule is\nerroneously applied to SemiJoin.\n\nIn gitignore.  ignore netbeans project config overrides.\n\nClose apache/calcite#600\n","date":"2018-03-04 13:35:17","modifiedFileCount":"3","status":"B","submitter":"Piotr Bojko"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"  @Override public AbstractQueryableTable create(\n      SchemaPlus schema,\n      String name,\n      Map<String, Object> operand,\n      @Nullable RelDataType rowType) {\n    return new AbstractQueryableTable(Integer.class) {\n      @Override public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n        return typeFactory.builder().add(\"ID\", SqlTypeName.INTEGER).build();\n      }\n\n      @Override public Queryable<Integer> asQueryable(\n          QueryProvider qp,\n          SchemaPlus sp,\n          String string) {\n        return fetchPreferredGenres();\n      }\n    };\n  }\n","date":"2020-11-30 06:45:33","endLine":63,"groupId":"10520","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(SchemaPlusschema@Stringname@Map<String@Object>operand@@NullableRelDataTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/98/81efc01d7cefdc7472c0694c1504e88c697a61.src","preCode":"  @Override public AbstractQueryableTable create(\n      SchemaPlus schema,\n      String name,\n      Map<String, Object> operand,\n      RelDataType rowType) {\n    return new AbstractQueryableTable(Integer.class) {\n      @Override public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n        return typeFactory.builder().add(\"ID\", SqlTypeName.INTEGER).build();\n      }\n\n      @Override public Queryable<Integer> asQueryable(\n          QueryProvider qp,\n          SchemaPlus sp,\n          String string) {\n        return fetchPreferredGenres();\n      }\n    };\n  }\n","realPath":"plus/src/main/java/org/apache/calcite/chinook/PreferredGenresTableFactory.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"  @Override public AbstractQueryableTable create(\n      SchemaPlus schema,\n      String name,\n      Map<String, Object> operand,\n      @Nullable RelDataType rowType) {\n    return new AbstractQueryableTable(Integer.class) {\n      @Override public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n        return typeFactory.builder().add(\"ID\", SqlTypeName.INTEGER).build();\n      }\n\n      @Override public Queryable<Integer> asQueryable(\n          QueryProvider qp,\n          SchemaPlus sp,\n          String string) {\n        return fetchPreferredAlbums();\n      }\n    };\n  }\n","date":"2020-11-30 06:45:33","endLine":63,"groupId":"10520","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(SchemaPlusschema@Stringname@Map<String@Object>operand@@NullableRelDataTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d9/4b95476bc5ccfed30d099fef5208129a7a63e2.src","preCode":"  @Override public AbstractQueryableTable create(\n      SchemaPlus schema,\n      String name,\n      Map<String, Object> operand,\n      RelDataType rowType) {\n    return new AbstractQueryableTable(Integer.class) {\n      @Override public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n        return typeFactory.builder().add(\"ID\", SqlTypeName.INTEGER).build();\n      }\n\n      @Override public Queryable<Integer> asQueryable(\n          QueryProvider qp,\n          SchemaPlus sp,\n          String string) {\n        return fetchPreferredAlbums();\n      }\n    };\n  }\n","realPath":"plus/src/main/java/org/apache/calcite/chinook/PreferredAlbumsTableFactory.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
