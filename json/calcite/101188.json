[{"authorTime":"2014-12-10 00:11:11","codes":[{"authorDate":"2014-11-21 12:26:49","commitOrder":2,"curCode":"  @Test public void testGrouping() {\n    sql(\"select deptno, grouping(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno / 2, grouping(deptno / 2),\\n\"\n        + \" ^grouping(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping(^empno^) from emp group by deptno\")\n        .fails(\"Expression 'EMPNO' is not being grouped\");\n    sql(\"select deptno, grouping(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping(deptno)^ from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping(deptno)^) over () from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping(^deptno^)\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno order by grouping(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping(deptno)^\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1 group by deptno\")\n        .fails(\n             \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping(deptno)^\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","date":"2014-11-21 12:26:49","endLine":4747,"groupId":"5158","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGrouping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cc/03a809eea7fa4875589152b44e0683be14a76e.src","preCode":"  @Test public void testGrouping() {\n    sql(\"select deptno, grouping(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno / 2, grouping(deptno / 2),\\n\"\n        + \" ^grouping(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping(^empno^) from emp group by deptno\")\n        .fails(\"Expression 'EMPNO' is not being grouped\");\n    sql(\"select deptno, grouping(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping(deptno)^ from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping(deptno)^) over () from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping(^deptno^)\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno order by grouping(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping(deptno)^\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1 group by deptno\")\n        .fails(\n             \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping(deptno)^\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4692,"status":"NB"},{"authorDate":"2014-12-10 00:11:11","commitOrder":2,"curCode":"  @Test public void testGroupingId() {\n    sql(\"select deptno, grouping_id(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno / 2, grouping_id(deptno / 2),\\n\"\n        + \" ^grouping_id(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno / 2, ^grouping_id()^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING_ID'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping_id(^empno^) from emp group by deptno\")\n        .fails(\"Expression 'EMPNO' is not being grouped\");\n    sql(\"select deptno, grouping_id(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping_id(deptno)^ from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping_id(deptno)^) over () from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping_id(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping_id(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping_id(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping_id(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping_id(^deptno^)\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno\\n\"\n        + \"order by grouping_id(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping_id(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping_id(deptno)^\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\\n\"\n        + \"group by deptno\")\n        .fails(\n             \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping_id(deptno)^\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","date":"2014-12-10 07:33:32","endLine":4809,"groupId":"5158","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGroupingId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1c/ee06d7a477c66dadbea43ec6663c61ea646c7d.src","preCode":"  @Test public void testGroupingId() {\n    sql(\"select deptno, grouping_id(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno / 2, grouping_id(deptno / 2),\\n\"\n        + \" ^grouping_id(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno / 2, ^grouping_id()^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING_ID'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping_id(^empno^) from emp group by deptno\")\n        .fails(\"Expression 'EMPNO' is not being grouped\");\n    sql(\"select deptno, grouping_id(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping_id(deptno)^ from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping_id(deptno)^) over () from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping_id(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping_id(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping_id(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping_id(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping_id(^deptno^)\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno\\n\"\n        + \"order by grouping_id(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping_id(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping_id(deptno)^\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\\n\"\n        + \"group by deptno\")\n        .fails(\n             \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping_id(deptno)^\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4749,"status":"B"}],"commitId":"f2a67050b30f727932fd94947c926ae0d7287ded","commitMessage":"@@@[CALCITE-512] Add GROUP_ID and GROUPING_ID functions\n\nUpgrade to quidem-0.2 (fixes right-justification of numeric columns)\n","date":"2014-12-10 07:33:32","modifiedFileCount":"6","status":"M","submitter":"Julian Hyde"},{"authorTime":"2016-07-22 10:17:15","codes":[{"authorDate":"2016-07-22 10:17:15","commitOrder":3,"curCode":"  @Test public void testGrouping() {\n    sql(\"select deptno, grouping(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno / 2, grouping(deptno / 2),\\n\"\n        + \" ^grouping(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping(^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping(deptno)^ from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping(deptno)^) over () from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping(^deptno^)\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno order by grouping(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping(deptno)^\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1 group by deptno\")\n        .fails(\n             \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping(deptno)^\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","date":"2016-08-05 07:20:20","endLine":5011,"groupId":"5158","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGrouping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c6/c22e9c427d7718ba150c37075802eb56e4dd6f.src","preCode":"  @Test public void testGrouping() {\n    sql(\"select deptno, grouping(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno / 2, grouping(deptno / 2),\\n\"\n        + \" ^grouping(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping(^empno^) from emp group by deptno\")\n        .fails(\"Expression 'EMPNO' is not being grouped\");\n    sql(\"select deptno, grouping(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping(deptno)^ from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping(deptno)^) over () from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping(^deptno^)\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno order by grouping(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping(deptno)^\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1 group by deptno\")\n        .fails(\n             \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping(deptno)^\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4956,"status":"M"},{"authorDate":"2016-07-22 10:17:15","commitOrder":3,"curCode":"  @Test public void testGroupingId() {\n    sql(\"select deptno, grouping_id(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno / 2, grouping_id(deptno / 2),\\n\"\n        + \" ^grouping_id(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno / 2, ^grouping_id()^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING_ID'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping_id(^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping_id(deptno)^ from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping_id(deptno)^) over () from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping_id(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping_id(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping_id(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping_id(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping_id(^deptno^)\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno\\n\"\n        + \"order by grouping_id(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping_id(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping_id(deptno)^\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\\n\"\n        + \"group by deptno\")\n        .fails(\n             \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping_id(deptno)^\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","date":"2016-08-05 07:20:20","endLine":5073,"groupId":"5158","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGroupingId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c6/c22e9c427d7718ba150c37075802eb56e4dd6f.src","preCode":"  @Test public void testGroupingId() {\n    sql(\"select deptno, grouping_id(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno / 2, grouping_id(deptno / 2),\\n\"\n        + \" ^grouping_id(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno / 2, ^grouping_id()^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING_ID'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping_id(^empno^) from emp group by deptno\")\n        .fails(\"Expression 'EMPNO' is not being grouped\");\n    sql(\"select deptno, grouping_id(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping_id(deptno)^ from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping_id(deptno)^) over () from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping_id(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping_id(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping_id(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping_id(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping_id(^deptno^)\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno\\n\"\n        + \"order by grouping_id(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping_id(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping_id(deptno)^\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\\n\"\n        + \"group by deptno\")\n        .fails(\n             \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping_id(deptno)^\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5013,"status":"M"}],"commitId":"69839c3798c8221081d80edaaca27a310ce9005e","commitMessage":"@@@[CALCITE-1327] In nested windowed aggregates.  check that PARTITION BY columns are in GROUP BY (Gautam Parai)\n\nAlso fixes [CALCITE-1340] Invalid errors for windowed aggregates.\n\nDiscriminate aggregate functions from mere window functions. Don't\ndeclare \"SELECT RANK()\" to be an aggregating query; even if it's\nmissing OVER.  RANK is only a window function.  not an aggregate function.\n\nClose apache/calcite#258\n","date":"2016-08-05 07:20:20","modifiedFileCount":"7","status":"M","submitter":"Gautam Parai"},{"authorTime":"2017-02-22 05:13:37","codes":[{"authorDate":"2017-02-22 05:13:37","commitOrder":4,"curCode":"  @Test public void testGrouping() {\n    sql(\"select deptno, grouping(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno, grouping(deptno, deptno) from emp group by deptno\")\n        .ok();\n    sql(\"select deptno / 2, grouping(deptno / 2),\\n\"\n        + \" ^grouping(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno, grouping(^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(deptno, ^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(^empno^, deptno) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping(deptno)^ from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping(deptno)^) over () from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping(^deptno^)\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno order by grouping(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping(deptno)^\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1 group by deptno\")\n        .fails(\n             \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping(deptno)^\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","date":"2017-02-23 02:26:06","endLine":5063,"groupId":"5158","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGrouping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/26/bde91bf40238ea51c51457ba5b81b4279eb807.src","preCode":"  @Test public void testGrouping() {\n    sql(\"select deptno, grouping(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno / 2, grouping(deptno / 2),\\n\"\n        + \" ^grouping(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping(^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping(deptno)^ from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping(deptno)^) over () from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping(^deptno^)\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno order by grouping(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping(deptno)^\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1 group by deptno\")\n        .fails(\n             \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping(deptno)^\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping(deptno)^)\")\n        .fails(\n               \"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5003,"status":"M"},{"authorDate":"2017-02-22 05:13:37","commitOrder":4,"curCode":"  @Test public void testGroupingId() {\n    sql(\"select deptno, grouping_id(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno, grouping_id(deptno, deptno) from emp group by deptno\")\n        .ok();\n    sql(\"select deptno / 2, grouping_id(deptno / 2),\\n\"\n        + \" ^grouping_id(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno / 2, ^grouping_id()^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING_ID'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping_id(^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping_id(deptno)^ from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping_id(deptno)^) over () from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping_id(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping_id(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping_id(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping_id(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping_id(^deptno^)\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno\\n\"\n        + \"order by grouping_id(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping_id(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping_id(deptno)^\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\\n\"\n        + \"group by deptno\")\n        .fails(\n             \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping_id(deptno)^\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","date":"2017-02-23 02:26:06","endLine":5127,"groupId":"5158","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGroupingId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/26/bde91bf40238ea51c51457ba5b81b4279eb807.src","preCode":"  @Test public void testGroupingId() {\n    sql(\"select deptno, grouping_id(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno / 2, grouping_id(deptno / 2),\\n\"\n        + \" ^grouping_id(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno / 2, ^grouping_id()^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\n            \"Invalid number of arguments to function 'GROUPING_ID'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping_id(^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping_id(deptno)^ from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping_id(deptno)^) over () from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping_id(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping_id(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping_id(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping_id(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping_id(^deptno^)\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno\\n\"\n        + \"order by grouping_id(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping_id(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping_id(deptno)^\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\\n\"\n        + \"group by deptno\")\n        .fails(\n             \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping_id(deptno)^\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping_id(deptno)^)\")\n        .fails(\n               \"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5065,"status":"M"}],"commitId":"abfcc79bcd635ee73791c2d647c3f843d047ee5d","commitMessage":"@@@[CALCITE-1652] Allow GROUPING to have multiple arguments.  like GROUPING_ID\n","date":"2017-02-23 02:26:06","modifiedFileCount":"6","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":5,"curCode":"  @Test void testGrouping() {\n    sql(\"select deptno, grouping(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno, grouping(deptno, deptno) from emp group by deptno\")\n        .ok();\n    sql(\"select deptno / 2, grouping(deptno / 2),\\n\"\n        + \" ^grouping(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno, grouping(^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(deptno, ^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(^empno^, deptno) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping(deptno)^ from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping(deptno)^) over () from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping(^deptno^)\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno order by grouping(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping(deptno)^\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1 group by deptno\")\n        .fails(\"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping(deptno)^\")\n        .fails(\"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping(deptno)^)\")\n        .fails(\"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping(deptno)^)\")\n        .fails(\"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping(deptno)^)\")\n        .fails(\"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","date":"2020-04-06 04:57:49","endLine":5303,"groupId":"101188","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGrouping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testGrouping() {\n    sql(\"select deptno, grouping(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno, grouping(deptno, deptno) from emp group by deptno\")\n        .ok();\n    sql(\"select deptno / 2, grouping(deptno / 2),\\n\"\n        + \" ^grouping(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno, grouping(^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(deptno, ^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(^empno^, deptno) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno, grouping(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping(deptno)^ from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping(deptno)^) over () from emp\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping(^deptno^)\")\n        .fails(\"Argument to GROUPING operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno order by grouping(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping(deptno)^\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1\")\n        .fails(\"GROUPING operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping(deptno)^ = 1 group by deptno\")\n        .fails(\"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping(deptno)^\")\n        .fails(\"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping(deptno)^)\")\n        .fails(\"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping(deptno)^)\")\n        .fails(\"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping(deptno)^)\")\n        .fails(\"GROUPING operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5248,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":5,"curCode":"  @Test void testGroupingId() {\n    sql(\"select deptno, grouping_id(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno, grouping_id(deptno, deptno) from emp group by deptno\")\n        .ok();\n    sql(\"select deptno / 2, grouping_id(deptno / 2),\\n\"\n        + \" ^grouping_id(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno / 2, ^grouping_id()^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\"Invalid number of arguments to function 'GROUPING_ID'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping_id(^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping_id(deptno)^ from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping_id(deptno)^) over () from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping_id(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping_id(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping_id(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping_id(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping_id(^deptno^)\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno\\n\"\n        + \"order by grouping_id(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping_id(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping_id(deptno)^\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\\n\"\n        + \"group by deptno\")\n        .fails(\"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping_id(deptno)^\")\n        .fails(\"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping_id(deptno)^)\")\n        .fails(\"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping_id(deptno)^)\")\n        .fails(\"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping_id(deptno)^)\")\n        .fails(\"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","date":"2020-04-06 04:57:49","endLine":5361,"groupId":"101188","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGroupingId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testGroupingId() {\n    sql(\"select deptno, grouping_id(deptno) from emp group by deptno\").ok();\n    sql(\"select deptno, grouping_id(deptno, deptno) from emp group by deptno\")\n        .ok();\n    sql(\"select deptno / 2, grouping_id(deptno / 2),\\n\"\n        + \" ^grouping_id(deptno / 2, empno)^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .ok();\n    sql(\"select deptno / 2, ^grouping_id()^\\n\"\n        + \"from emp group by deptno / 2, empno\")\n        .fails(\"Invalid number of arguments to function 'GROUPING_ID'. Was expecting 1 arguments\");\n    sql(\"select deptno, grouping_id(^empno^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(^deptno + 1^) from emp group by deptno\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno, grouping_id(emp.^xxx^) from emp\")\n        .fails(\"Column 'XXX' not found in table 'EMP'\");\n    sql(\"select deptno, ^grouping_id(deptno)^ from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno, sum(^grouping_id(deptno)^) over () from emp\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp group by deptno having grouping_id(deptno) < 5\")\n        .ok();\n    sql(\"select deptno from emp group by deptno order by grouping_id(deptno)\")\n        .ok();\n    sql(\"select deptno as xx from emp group by deptno order by grouping_id(xx)\")\n        .ok();\n    sql(\"select deptno as empno from emp\\n\"\n        + \"group by deptno order by grouping_id(empno)\")\n        .ok();\n    sql(\"select 1 as deptno from emp\\n\"\n        + \"group by deptno order by grouping_id(^deptno^)\")\n        .fails(\"Argument to GROUPING_ID operator must be a grouped expression\");\n    sql(\"select deptno from emp group by deptno\\n\"\n        + \"order by grouping_id(emp.deptno)\")\n        .ok();\n    sql(\"select ^deptno^ from emp group by empno order by grouping_id(deptno)\")\n        .fails(\"Expression 'DEPTNO' is not being grouped\");\n    sql(\"select deptno from emp order by ^grouping_id(deptno)^\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\")\n        .fails(\"GROUPING_ID operator may only occur in an aggregate query\");\n    sql(\"select deptno from emp where ^grouping_id(deptno)^ = 1\\n\"\n        + \"group by deptno\")\n        .fails(\"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp group by deptno, ^grouping_id(deptno)^\")\n        .fails(\"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by grouping sets(deptno, ^grouping_id(deptno)^)\")\n        .fails(\"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by cube(empno, ^grouping_id(deptno)^)\")\n        .fails(\"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n    sql(\"select deptno from emp\\n\"\n        + \"group by rollup(empno, ^grouping_id(deptno)^)\")\n        .fails(\"GROUPING_ID operator may only occur in SELECT, HAVING or ORDER BY clause\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5305,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
