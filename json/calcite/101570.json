[{"authorTime":"2017-04-14 20:58:21","codes":[{"authorDate":"2017-04-14 20:58:21","commitOrder":2,"curCode":"  @Test public void testMatchRecognizeMeasures4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   FINAL COUNT(up.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL COUNT(\\\"net_weight\\\") as down_cnt,\"\n        + \"   RUNNING COUNT(\\\"net_weight\\\") as running_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL COUNT(\\\"UP\\\".\\\"net_weight\\\") AS \\\"UP_CNT\\\", \"\n        + \"FINAL COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\", \"\n        + \"FINAL (RUNNING COUNT(\\\"*\\\".\\\"net_weight\\\")) AS \\\"RUNNING_CNT\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-04-25 09:26:09","endLine":1137,"groupId":"4694","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/57c6b03ccd302ede16475375714b729d3d5a3d.src","preCode":"  @Test public void testMatchRecognizeMeasures4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   FINAL COUNT(up.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL COUNT(\\\"net_weight\\\") as down_cnt,\"\n        + \"   RUNNING COUNT(\\\"net_weight\\\") as running_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL COUNT(\\\"UP\\\".\\\"net_weight\\\") AS \\\"UP_CNT\\\", \"\n        + \"FINAL COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\", \"\n        + \"FINAL (RUNNING COUNT(\\\"*\\\".\\\"net_weight\\\")) AS \\\"RUNNING_CNT\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1108,"status":"MB"},{"authorDate":"2017-04-14 20:58:21","commitOrder":2,"curCode":"  @Test public void testMatchRecognizeMeasures7() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by start_nw, up_cnt\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"START_NW\\\", \\\"UP_CNT\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-04-25 09:26:09","endLine":1235,"groupId":"8493","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/57c6b03ccd302ede16475375714b729d3d5a3d.src","preCode":"  @Test public void testMatchRecognizeMeasures7() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by start_nw, up_cnt\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"START_NW\\\", \\\"UP_CNT\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1204,"status":"MB"}],"commitId":"c850e227db583a697c8cc46585b33274b63ed2d0","commitMessage":"@@@[CALCITE-1643] AFTER MATCH sub-clause of MATCH_RECOGNIZE clause (Zhiqiang-He)\n\nClose apache/calcite#429\n","date":"2017-04-25 09:26:09","modifiedFileCount":"10","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-05-19 14:52:34","codes":[{"authorDate":"2017-05-19 14:52:34","commitOrder":3,"curCode":"  @Test public void testMatchRecognizeMeasures4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   FINAL COUNT(up.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL COUNT(\\\"net_weight\\\") as down_cnt,\"\n        + \"   RUNNING COUNT(\\\"net_weight\\\") as running_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL COUNT(\\\"UP\\\".\\\"net_weight\\\") AS \\\"UP_CNT\\\", \"\n        + \"FINAL COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\", \"\n        + \"FINAL (RUNNING COUNT(\\\"*\\\".\\\"net_weight\\\")) AS \\\"RUNNING_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-24 02:28:41","endLine":1190,"groupId":"4694","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cc/fb46e7793076f00b67c96a5e27a4ed198c4878.src","preCode":"  @Test public void testMatchRecognizeMeasures4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   FINAL COUNT(up.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL COUNT(\\\"net_weight\\\") as down_cnt,\"\n        + \"   RUNNING COUNT(\\\"net_weight\\\") as running_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL COUNT(\\\"UP\\\".\\\"net_weight\\\") AS \\\"UP_CNT\\\", \"\n        + \"FINAL COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\", \"\n        + \"FINAL (RUNNING COUNT(\\\"*\\\".\\\"net_weight\\\")) AS \\\"RUNNING_CNT\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1160,"status":"M"},{"authorDate":"2017-05-19 14:52:34","commitOrder":3,"curCode":"  @Test public void testMatchRecognizeMeasures7() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by start_nw, up_cnt\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"START_NW\\\", \\\"UP_CNT\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-24 02:28:41","endLine":1291,"groupId":"8493","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cc/fb46e7793076f00b67c96a5e27a4ed198c4878.src","preCode":"  @Test public void testMatchRecognizeMeasures7() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by start_nw, up_cnt\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"START_NW\\\", \\\"UP_CNT\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1259,"status":"M"}],"commitId":"e117c10cef192ca4ab10ffec2132b7dbd34319fa","commitMessage":"@@@[CALCITE-1645] In MATCH_RECOGNIZE clause.  support ONE ROW PER MATCH and ALL ROWS PER MATCH (Zhiqiang-He)\n\nClose apache/calcite#452\n","date":"2017-05-24 02:28:41","modifiedFileCount":"9","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-07-08 15:34:11","codes":[{"authorDate":"2017-07-08 15:34:11","commitOrder":4,"curCode":"  @Test public void testMatchRecognizeMeasures4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   FINAL COUNT(up.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL COUNT(\\\"net_weight\\\") as down_cnt,\"\n        + \"   RUNNING COUNT(\\\"net_weight\\\") as running_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"\\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL COUNT(\\\"UP\\\".\\\"net_weight\\\") AS \\\"UP_CNT\\\", \"\n        + \"FINAL COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\", \"\n        + \"RUNNING COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"RUNNING_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-07-09 01:03:23","endLine":1337,"groupId":"12915","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d1/a1b87038071db4c1fa0d4215de14a003278229.src","preCode":"  @Test public void testMatchRecognizeMeasures4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   FINAL COUNT(up.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL COUNT(\\\"net_weight\\\") as down_cnt,\"\n        + \"   RUNNING COUNT(\\\"net_weight\\\") as running_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL COUNT(\\\"UP\\\".\\\"net_weight\\\") AS \\\"UP_CNT\\\", \"\n        + \"FINAL COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\", \"\n        + \"FINAL (RUNNING COUNT(\\\"*\\\".\\\"net_weight\\\")) AS \\\"RUNNING_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1306,"status":"M"},{"authorDate":"2017-07-08 15:34:11","commitOrder":4,"curCode":"  @Test public void testMatchRecognizeMeasures7() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by start_nw, up_cnt\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"START_NW\\\", \\\"UP_CNT\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-07-09 01:03:23","endLine":1438,"groupId":"8493","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d1/a1b87038071db4c1fa0d4215de14a003278229.src","preCode":"  @Test public void testMatchRecognizeMeasures7() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by start_nw, up_cnt\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"START_NW\\\", \\\"UP_CNT\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1406,"status":"M"}],"commitId":"65d95e6792c002d70d826b049cf16a748fe3109d","commitMessage":"@@@[CALCITE-1871] Nesting LAST within PREV is not parsed correctly for MATCH_RECOGNIZE\n\nClose apache/calcite#494\n","date":"2017-07-09 01:03:23","modifiedFileCount":"3","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-08-15 17:19:00","codes":[{"authorDate":"2017-08-15 17:19:00","commitOrder":5,"curCode":"  @Test public void testMatchRecognizeMeasures4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   FINAL COUNT(up.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL COUNT(\\\"net_weight\\\") as down_cnt,\"\n        + \"   RUNNING COUNT(\\\"net_weight\\\") as running_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL COUNT(\\\"UP\\\".\\\"net_weight\\\") AS \\\"UP_CNT\\\", \"\n        + \"FINAL COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\", \"\n        + \"FINAL (RUNNING COUNT(\\\"*\\\".\\\"net_weight\\\")) AS \\\"RUNNING_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-08-30 01:11:17","endLine":1525,"groupId":"12915","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/2edfc9de10dcc4d3e8ac90d6dfdc278900b007.src","preCode":"  @Test public void testMatchRecognizeMeasures4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   FINAL COUNT(up.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL COUNT(\\\"net_weight\\\") as down_cnt,\"\n        + \"   RUNNING COUNT(\\\"net_weight\\\") as running_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"\\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL COUNT(\\\"UP\\\".\\\"net_weight\\\") AS \\\"UP_CNT\\\", \"\n        + \"FINAL COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\", \"\n        + \"RUNNING COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"RUNNING_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1494,"status":"M"},{"authorDate":"2017-08-15 17:19:00","commitOrder":5,"curCode":"  @Test public void testMatchRecognizeMeasures7() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by start_nw, up_cnt\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"START_NW\\\", \\\"UP_CNT\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-08-30 01:11:17","endLine":1626,"groupId":"8493","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/2edfc9de10dcc4d3e8ac90d6dfdc278900b007.src","preCode":"  @Test public void testMatchRecognizeMeasures7() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by start_nw, up_cnt\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"START_NW\\\", \\\"UP_CNT\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1594,"status":"M"}],"commitId":"d3a7c0d794cb9d0079fb37999dcd0dd6992f2041","commitMessage":"@@@[CALCITE-1943] Add back NavigationExpander and NavigationReplacer in SqlValidatorImpl (Dian Fu)\n\nIt will replace clauses such as A.price with PREV(A.price.  0) and\nmakes the implementation of RexVisitor.visitPatternFieldRef(RexPatternFieldRef)\nmore unified.  Otherwise.  it is difficult to implement this method. If\nit returns the specified field.  then the navigation such as\nPREV(A.price.  1) becomes impossible; if not.  then comparisons such as\nA.price > PREV(A.price.  1) becomes meaningless.\n\nClose apache/calcite#516\n","date":"2017-08-30 01:11:17","modifiedFileCount":"3","status":"M","submitter":"Dian Fu"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":6,"curCode":"  @Test void testMatchRecognizeMeasures4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   FINAL COUNT(up.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL COUNT(\\\"net_weight\\\") as down_cnt,\"\n        + \"   RUNNING COUNT(\\\"net_weight\\\") as running_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL COUNT(\\\"UP\\\".\\\"net_weight\\\") AS \\\"UP_CNT\\\", \"\n        + \"FINAL COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\", \"\n        + \"FINAL (RUNNING COUNT(\\\"*\\\".\\\"net_weight\\\")) AS \\\"RUNNING_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":3699,"groupId":"101570","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testMatchRecognizeMeasures4() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   FINAL COUNT(up.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL COUNT(\\\"net_weight\\\") as down_cnt,\"\n        + \"   RUNNING COUNT(\\\"net_weight\\\") as running_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL COUNT(\\\"UP\\\".\\\"net_weight\\\") AS \\\"UP_CNT\\\", \"\n        + \"FINAL COUNT(\\\"*\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\", \"\n        + \"FINAL (RUNNING COUNT(\\\"*\\\".\\\"net_weight\\\")) AS \\\"RUNNING_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3668,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":6,"curCode":"  @Test void testMatchRecognizeMeasures7() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by start_nw, up_cnt\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"START_NW\\\", \\\"UP_CNT\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":3800,"groupId":"101570","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testMatchRecognizeMeasures7() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by start_nw, up_cnt\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"START_NW\\\", \\\"UP_CNT\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3768,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
