[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testLesser() {\n    assertEquals(\"a\", lesser(\"a\", \"bc\"));\n    assertEquals(\"ac\", lesser(\"bc\", \"ac\"));\n    try {\n      Object o = lesser(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertEquals(\"a\", lesser(null, \"a\"));\n    assertNull(lesser((String) null, null));\n  }\n","date":"2014-11-14 09:39:34","endLine":80,"groupId":"10405","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLesser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/94/73cc01b557640e542cff75229c6580176de2e6.src","preCode":"  @Test public void testLesser() {\n    assertEquals(\"a\", lesser(\"a\", \"bc\"));\n    assertEquals(\"ac\", lesser(\"bc\", \"ac\"));\n    try {\n      Object o = lesser(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertEquals(\"a\", lesser(null, \"a\"));\n    assertNull(lesser((String) null, null));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testGreater() {\n    assertEquals(\"bc\", greater(\"a\", \"bc\"));\n    assertEquals(\"bc\", greater(\"bc\", \"ac\"));\n    try {\n      Object o = greater(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertEquals(\"a\", greater(null, \"a\"));\n    assertNull(greater((String) null, null));\n  }\n","date":"2014-11-14 09:39:34","endLine":93,"groupId":"10405","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGreater","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/94/73cc01b557640e542cff75229c6580176de2e6.src","preCode":"  @Test public void testGreater() {\n    assertEquals(\"bc\", greater(\"a\", \"bc\"));\n    assertEquals(\"bc\", greater(\"bc\", \"ac\"));\n    try {\n      Object o = greater(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertEquals(\"a\", greater(null, \"a\"));\n    assertNull(greater((String) null, null));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2019-08-27 04:28:31","codes":[{"authorDate":"2019-08-27 04:28:31","commitOrder":2,"curCode":"  @Test public void testLesser() {\n    assertThat(lesser(\"a\", \"bc\"), is(\"a\"));\n    assertThat(lesser(\"bc\", \"ac\"), is(\"ac\"));\n    try {\n      Object o = lesser(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertThat(lesser(null, \"a\"), is(\"a\"));\n    assertThat(lesser((String) null, null), nullValue());\n  }\n","date":"2019-08-27 11:42:53","endLine":170,"groupId":"5710","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLesser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/69/c3963a80ec204303fc8a66ccea405ca1398a84.src","preCode":"  @Test public void testLesser() {\n    assertEquals(\"a\", lesser(\"a\", \"bc\"));\n    assertEquals(\"ac\", lesser(\"bc\", \"ac\"));\n    try {\n      Object o = lesser(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertEquals(\"a\", lesser(null, \"a\"));\n    assertNull(lesser((String) null, null));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2019-08-27 04:28:31","commitOrder":2,"curCode":"  @Test public void testGreater() {\n    assertThat(greater(\"a\", \"bc\"), is(\"bc\"));\n    assertThat(greater(\"bc\", \"ac\"), is(\"bc\"));\n    try {\n      Object o = greater(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertThat(greater(null, \"a\"), is(\"a\"));\n    assertThat(greater((String) null, null), nullValue());\n  }\n","date":"2019-08-27 11:42:53","endLine":183,"groupId":"5710","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGreater","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/69/c3963a80ec204303fc8a66ccea405ca1398a84.src","preCode":"  @Test public void testGreater() {\n    assertEquals(\"bc\", greater(\"a\", \"bc\"));\n    assertEquals(\"bc\", greater(\"bc\", \"ac\"));\n    try {\n      Object o = greater(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertEquals(\"a\", greater(null, \"a\"));\n    assertNull(greater((String) null, null));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"8a3fde56e6931ca8c5a12d22489c6ce0eae4a8bc","commitMessage":"@@@In SqlFunctionsTest.  replace assertEquals and assertNull with assertThat\n","date":"2019-08-27 11:42:53","modifiedFileCount":"1","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testLesser() {\n    assertThat(lesser(\"a\", \"bc\"), is(\"a\"));\n    assertThat(lesser(\"bc\", \"ac\"), is(\"ac\"));\n    try {\n      Object o = lesser(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertThat(lesser(null, \"a\"), is(\"a\"));\n    assertThat(lesser((String) null, null), nullValue());\n  }\n","date":"2020-04-06 04:57:49","endLine":237,"groupId":"101387","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testLesser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/75/779b1e03c3474d16a7ae04eb78bfc01c01ecac.src","preCode":"  @Test public void testLesser() {\n    assertThat(lesser(\"a\", \"bc\"), is(\"a\"));\n    assertThat(lesser(\"bc\", \"ac\"), is(\"ac\"));\n    try {\n      Object o = lesser(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertThat(lesser(null, \"a\"), is(\"a\"));\n    assertThat(lesser((String) null, null), nullValue());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testGreater() {\n    assertThat(greater(\"a\", \"bc\"), is(\"bc\"));\n    assertThat(greater(\"bc\", \"ac\"), is(\"bc\"));\n    try {\n      Object o = greater(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertThat(greater(null, \"a\"), is(\"a\"));\n    assertThat(greater((String) null, null), nullValue());\n  }\n","date":"2020-04-06 04:57:49","endLine":250,"groupId":"101387","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGreater","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/75/779b1e03c3474d16a7ae04eb78bfc01c01ecac.src","preCode":"  @Test public void testGreater() {\n    assertThat(greater(\"a\", \"bc\"), is(\"bc\"));\n    assertThat(greater(\"bc\", \"ac\"), is(\"bc\"));\n    try {\n      Object o = greater(\"a\", null);\n      fail(\"Expected NPE, got \" + o);\n    } catch (NullPointerException e) {\n      \r\n    }\n    assertThat(greater(null, \"a\"), is(\"a\"));\n    assertThat(greater((String) null, null), nullValue());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlFunctionsTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
