[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void unparse(\n      SqlWriter writer,\n      SqlCall call,\n      int leftPrec,\n      int rightPrec) {\n    writer.print(\"{fn \");\n    writer.print(jdbcName);\n    final SqlWriter.Frame frame = writer.startList(\"(\", \")\");\n    for (SqlNode operand : call.getOperandList()) {\n      writer.sep(\",\");\n      operand.unparse(writer, leftPrec, rightPrec);\n    }\n    writer.endList(frame);\n    writer.print(\"}\");\n  }\n","date":"2014-11-14 09:39:34","endLine":517,"groupId":"15008","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"unparse","params":"(SqlWriterwriter@SqlCallcall@intleftPrec@intrightPrec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/87/12aa2846607dd06ad425ae19912cf9c5becc75.src","preCode":"  public void unparse(\n      SqlWriter writer,\n      SqlCall call,\n      int leftPrec,\n      int rightPrec) {\n    writer.print(\"{fn \");\n    writer.print(jdbcName);\n    final SqlWriter.Frame frame = writer.startList(\"(\", \")\");\n    for (SqlNode operand : call.getOperandList()) {\n      writer.sep(\",\");\n      operand.unparse(writer, leftPrec, rightPrec);\n    }\n    writer.endList(frame);\n    writer.print(\"}\");\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlJdbcFunctionCall.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":503,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void unparse(\n      SqlWriter writer,\n      SqlCall call,\n      int leftPrec,\n      int rightPrec) {\n    writer.keyword(\"ROW\");\n    final SqlWriter.Frame frame = writer.startList(\"(\", \")\");\n    for (SqlNode operand : call.getOperandList()) {\n      writer.sep(\",\");\n      operand.unparse(writer, leftPrec, rightPrec);\n    }\n    writer.endList(frame);\n  }\n","date":"2014-11-14 09:39:34","endLine":53,"groupId":"15008","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"unparse","params":"(SqlWriterwriter@SqlCallcall@intleftPrec@intrightPrec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/db/939ede2c2977cc871f4d39b6f612f2d02d6bbe.src","preCode":"  public void unparse(\n      SqlWriter writer,\n      SqlCall call,\n      int leftPrec,\n      int rightPrec) {\n    writer.keyword(\"ROW\");\n    final SqlWriter.Frame frame = writer.startList(\"(\", \")\");\n    for (SqlNode operand : call.getOperandList()) {\n      writer.sep(\",\");\n      operand.unparse(writer, leftPrec, rightPrec);\n    }\n    writer.endList(frame);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlColumnListConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"  @Override public void unparse(\n      SqlWriter writer,\n      SqlCall call,\n      int leftPrec,\n      int rightPrec) {\n    writer.print(\"{fn \");\n    writer.print(jdbcName);\n    final SqlWriter.Frame frame = writer.startList(\"(\", \")\");\n    for (SqlNode operand : call.getOperandList()) {\n      writer.sep(\",\");\n      operand.unparse(writer, leftPrec, rightPrec);\n    }\n    writer.endList(frame);\n    writer.print(\"}\");\n  }\n","date":"2020-10-07 05:42:47","endLine":528,"groupId":"101748","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"unparse","params":"(SqlWriterwriter@SqlCallcall@intleftPrec@intrightPrec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/05/8ed591480831de5c1b27e131bc3fb3acf9f993.src","preCode":"  public void unparse(\n      SqlWriter writer,\n      SqlCall call,\n      int leftPrec,\n      int rightPrec) {\n    writer.print(\"{fn \");\n    writer.print(jdbcName);\n    final SqlWriter.Frame frame = writer.startList(\"(\", \")\");\n    for (SqlNode operand : call.getOperandList()) {\n      writer.sep(\",\");\n      operand.unparse(writer, leftPrec, rightPrec);\n    }\n    writer.endList(frame);\n    writer.print(\"}\");\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlJdbcFunctionCall.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":514,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"  @Override public void unparse(\n      SqlWriter writer,\n      SqlCall call,\n      int leftPrec,\n      int rightPrec) {\n    writer.keyword(\"ROW\");\n    final SqlWriter.Frame frame = writer.startList(\"(\", \")\");\n    for (SqlNode operand : call.getOperandList()) {\n      writer.sep(\",\");\n      operand.unparse(writer, leftPrec, rightPrec);\n    }\n    writer.endList(frame);\n  }\n","date":"2020-10-07 05:42:47","endLine":58,"groupId":"101748","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"unparse","params":"(SqlWriterwriter@SqlCallcall@intleftPrec@intrightPrec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/14/c0321eb6042db458669a6cd4ed030f4e21f2da.src","preCode":"  public void unparse(\n      SqlWriter writer,\n      SqlCall call,\n      int leftPrec,\n      int rightPrec) {\n    writer.keyword(\"ROW\");\n    final SqlWriter.Frame frame = writer.startList(\"(\", \")\");\n    for (SqlNode operand : call.getOperandList()) {\n      writer.sep(\",\");\n      operand.unparse(writer, leftPrec, rightPrec);\n    }\n    writer.endList(frame);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlColumnListConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
