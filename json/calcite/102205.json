[{"authorTime":"2019-03-16 00:43:18","codes":[{"authorDate":"2019-03-16 00:43:18","commitOrder":1,"curCode":"  public boolean isForeignKey(RelOptTable fromTable, List<Integer> fromColumns,\n      RelOptTable toTable, List<Integer> toColumns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isForeignKey\",\n              fromTable.getQualifiedName(),\n              ImmutableIntList.copyOf(fromColumns),\n              toTable.getQualifiedName(),\n              ImmutableIntList.copyOf(toColumns));\n      return (Boolean) cache.get(key,\n          () -> provider.isForeignKey(fromTable, fromColumns, toTable,\n              toColumns));\n    } catch (ExecutionException e) {\n      throw Throwables.propagate(e.getCause());\n    }\n  }\n","date":"2019-04-06 06:22:54","endLine":72,"groupId":"7492","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isForeignKey","params":"(RelOptTablefromTable@List<Integer>fromColumns@RelOptTabletoTable@List<Integer>toColumns)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6d/6b6e9e1ec38a6011b1b7496d7fd2f29aa016f1.src","preCode":"  public boolean isForeignKey(RelOptTable fromTable, List<Integer> fromColumns,\n      RelOptTable toTable, List<Integer> toColumns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isForeignKey\",\n              fromTable.getQualifiedName(),\n              ImmutableIntList.copyOf(fromColumns),\n              toTable.getQualifiedName(),\n              ImmutableIntList.copyOf(toColumns));\n      return (Boolean) cache.get(key,\n          () -> provider.isForeignKey(fromTable, fromColumns, toTable,\n              toColumns));\n    } catch (ExecutionException e) {\n      throw Throwables.propagate(e.getCause());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/statistic/CachingSqlStatisticProvider.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2019-03-16 00:43:18","commitOrder":1,"curCode":"  public boolean isKey(RelOptTable table, List<Integer> columns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isKey\", table.getQualifiedName(),\n              ImmutableIntList.copyOf(columns));\n      return (Boolean) cache.get(key, () -> provider.isKey(table, columns));\n    } catch (ExecutionException e) {\n      throw Throwables.propagate(e.getCause());\n    }\n  }\n","date":"2019-04-06 06:22:54","endLine":83,"groupId":"7492","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isKey","params":"(RelOptTabletable@List<Integer>columns)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6d/6b6e9e1ec38a6011b1b7496d7fd2f29aa016f1.src","preCode":"  public boolean isKey(RelOptTable table, List<Integer> columns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isKey\", table.getQualifiedName(),\n              ImmutableIntList.copyOf(columns));\n      return (Boolean) cache.get(key, () -> provider.isKey(table, columns));\n    } catch (ExecutionException e) {\n      throw Throwables.propagate(e.getCause());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/statistic/CachingSqlStatisticProvider.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"}],"commitId":"906183a35b6355b3f5e394ce838f5ea1dad09ad2","commitMessage":"@@@[CALCITE-2914] Add a new statistic provider.  to improve how LatticeSuggester deduces foreign keys\n\nStatistic provider now generates SQL statements to look at a join\ncondition and figure out whether either side is a unique key.  and\nwhether the other side is a foreign key (i.e. does an anti-join to\nverify referential integrity).\n\nCreate new package org.apache.calcite.statistic.  and move some\nexisting classes such as MapSqlStatisticProvider into it.\n\nIn JDBC adapter.  when generating SQL for JDBC tables.  use the foreign\ncatalog.  schema and table name.\n\nIn Frameworks.  use a query provider with a 30 minute.  1. 000 element\ncache.  rather than map provider as default provider.\n\nIn LatticeSuggesterTest we continue to use a MapSqlStatisticProvider. \nfor performance reasons.\n\nFix deprecated calls to AggregateCall.create added in [CALCITE-1172].\n\nClose apache/calcite#1141\n","date":"2019-04-06 06:22:54","modifiedFileCount":"13","status":"B","submitter":"Julian Hyde"},{"authorTime":"2019-04-08 03:39:41","codes":[{"authorDate":"2019-04-08 03:39:41","commitOrder":2,"curCode":"  public boolean isForeignKey(RelOptTable fromTable, List<Integer> fromColumns,\n      RelOptTable toTable, List<Integer> toColumns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isForeignKey\",\n              fromTable.getQualifiedName(),\n              ImmutableIntList.copyOf(fromColumns),\n              toTable.getQualifiedName(),\n              ImmutableIntList.copyOf(toColumns));\n      return (Boolean) cache.get(key,\n          () -> provider.isForeignKey(fromTable, fromColumns, toTable,\n              toColumns));\n    } catch (UncheckedExecutionException | ExecutionException e) {\n      Util.throwIfUnchecked(e.getCause());\n      throw new RuntimeException(e.getCause());\n    }\n  }\n","date":"2019-04-08 03:39:41","endLine":75,"groupId":"7492","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"isForeignKey","params":"(RelOptTablefromTable@List<Integer>fromColumns@RelOptTabletoTable@List<Integer>toColumns)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ab/b3214e8290ddf6080f43d58976cacb434867cb.src","preCode":"  public boolean isForeignKey(RelOptTable fromTable, List<Integer> fromColumns,\n      RelOptTable toTable, List<Integer> toColumns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isForeignKey\",\n              fromTable.getQualifiedName(),\n              ImmutableIntList.copyOf(fromColumns),\n              toTable.getQualifiedName(),\n              ImmutableIntList.copyOf(toColumns));\n      return (Boolean) cache.get(key,\n          () -> provider.isForeignKey(fromTable, fromColumns, toTable,\n              toColumns));\n    } catch (ExecutionException e) {\n      throw Throwables.propagate(e.getCause());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/statistic/CachingSqlStatisticProvider.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2019-04-08 03:39:41","commitOrder":2,"curCode":"  public boolean isKey(RelOptTable table, List<Integer> columns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isKey\", table.getQualifiedName(),\n              ImmutableIntList.copyOf(columns));\n      return (Boolean) cache.get(key, () -> provider.isKey(table, columns));\n    } catch (UncheckedExecutionException | ExecutionException e) {\n      Util.throwIfUnchecked(e.getCause());\n      throw new RuntimeException(e.getCause());\n    }\n  }\n","date":"2019-04-08 03:39:41","endLine":87,"groupId":"7492","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"isKey","params":"(RelOptTabletable@List<Integer>columns)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ab/b3214e8290ddf6080f43d58976cacb434867cb.src","preCode":"  public boolean isKey(RelOptTable table, List<Integer> columns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isKey\", table.getQualifiedName(),\n              ImmutableIntList.copyOf(columns));\n      return (Boolean) cache.get(key, () -> provider.isKey(table, columns));\n    } catch (ExecutionException e) {\n      throw Throwables.propagate(e.getCause());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/statistic/CachingSqlStatisticProvider.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"a8e71f9f295e36e472d9f650d1c76d2501e1fdbf","commitMessage":"@@@Remove calls to deprecated Guava API\n\nThrowables.propagate was deprecated in Guava 21.\n\nAdd '<p>' to a multi-paragraph javadoc comment.  and edit for clarity.\n","date":"2019-04-08 03:39:41","modifiedFileCount":"3","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-09-05 06:21:27","codes":[{"authorDate":"2020-09-05 06:21:27","commitOrder":3,"curCode":"  public boolean isForeignKey(RelOptTable fromTable, List<Integer> fromColumns,\n      RelOptTable toTable, List<Integer> toColumns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isForeignKey\",\n              fromTable.getQualifiedName(),\n              ImmutableIntList.copyOf(fromColumns),\n              toTable.getQualifiedName(),\n              ImmutableIntList.copyOf(toColumns));\n      return (Boolean) cache.get(key,\n          () -> provider.isForeignKey(fromTable, fromColumns, toTable,\n              toColumns));\n    } catch (UncheckedExecutionException | ExecutionException e) {\n      throw Util.throwAsRuntime(Util.causeOrSelf(e));\n    }\n  }\n","date":"2020-09-06 01:13:11","endLine":73,"groupId":"7492","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"isForeignKey","params":"(RelOptTablefromTable@List<Integer>fromColumns@RelOptTabletoTable@List<Integer>toColumns)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/37/715c9153bd7332e2432ba46f33f6424847085a.src","preCode":"  public boolean isForeignKey(RelOptTable fromTable, List<Integer> fromColumns,\n      RelOptTable toTable, List<Integer> toColumns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isForeignKey\",\n              fromTable.getQualifiedName(),\n              ImmutableIntList.copyOf(fromColumns),\n              toTable.getQualifiedName(),\n              ImmutableIntList.copyOf(toColumns));\n      return (Boolean) cache.get(key,\n          () -> provider.isForeignKey(fromTable, fromColumns, toTable,\n              toColumns));\n    } catch (UncheckedExecutionException | ExecutionException e) {\n      Util.throwIfUnchecked(e.getCause());\n      throw new RuntimeException(e.getCause());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/statistic/CachingSqlStatisticProvider.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2020-09-05 06:21:27","commitOrder":3,"curCode":"  public boolean isKey(RelOptTable table, List<Integer> columns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isKey\", table.getQualifiedName(),\n              ImmutableIntList.copyOf(columns));\n      return (Boolean) cache.get(key, () -> provider.isKey(table, columns));\n    } catch (UncheckedExecutionException | ExecutionException e) {\n      throw Util.throwAsRuntime(Util.causeOrSelf(e));\n    }\n  }\n","date":"2020-09-06 01:13:11","endLine":84,"groupId":"7492","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"isKey","params":"(RelOptTabletable@List<Integer>columns)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/37/715c9153bd7332e2432ba46f33f6424847085a.src","preCode":"  public boolean isKey(RelOptTable table, List<Integer> columns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isKey\", table.getQualifiedName(),\n              ImmutableIntList.copyOf(columns));\n      return (Boolean) cache.get(key, () -> provider.isKey(table, columns));\n    } catch (UncheckedExecutionException | ExecutionException e) {\n      Util.throwIfUnchecked(e.getCause());\n      throw new RuntimeException(e.getCause());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/statistic/CachingSqlStatisticProvider.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"eaf0edfc38c095e733cb37614333dfb7415f331a","commitMessage":"@@@[CALCITE-4229] Add Util.throwAsRuntime and Util.causeOrSelf to simplify exception re-throwing\n","date":"2020-09-06 01:13:11","modifiedFileCount":"13","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public boolean isForeignKey(RelOptTable fromTable, List<Integer> fromColumns,\n      RelOptTable toTable, List<Integer> toColumns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isForeignKey\",\n              fromTable.getQualifiedName(),\n              ImmutableIntList.copyOf(fromColumns),\n              toTable.getQualifiedName(),\n              ImmutableIntList.copyOf(toColumns));\n      return (Boolean) cache.get(key,\n          () -> provider.isForeignKey(fromTable, fromColumns, toTable,\n              toColumns));\n    } catch (UncheckedExecutionException | ExecutionException e) {\n      throw Util.throwAsRuntime(Util.causeOrSelf(e));\n    }\n  }\n","date":"2020-10-07 05:42:47","endLine":73,"groupId":"102205","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"isForeignKey","params":"(RelOptTablefromTable@List<Integer>fromColumns@RelOptTabletoTable@List<Integer>toColumns)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f6/8e48d2072b981bbd33ba40778564dc8a7947c1.src","preCode":"  public boolean isForeignKey(RelOptTable fromTable, List<Integer> fromColumns,\n      RelOptTable toTable, List<Integer> toColumns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isForeignKey\",\n              fromTable.getQualifiedName(),\n              ImmutableIntList.copyOf(fromColumns),\n              toTable.getQualifiedName(),\n              ImmutableIntList.copyOf(toColumns));\n      return (Boolean) cache.get(key,\n          () -> provider.isForeignKey(fromTable, fromColumns, toTable,\n              toColumns));\n    } catch (UncheckedExecutionException | ExecutionException e) {\n      throw Util.throwAsRuntime(Util.causeOrSelf(e));\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/statistic/CachingSqlStatisticProvider.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public boolean isKey(RelOptTable table, List<Integer> columns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isKey\", table.getQualifiedName(),\n              ImmutableIntList.copyOf(columns));\n      return (Boolean) cache.get(key, () -> provider.isKey(table, columns));\n    } catch (UncheckedExecutionException | ExecutionException e) {\n      throw Util.throwAsRuntime(Util.causeOrSelf(e));\n    }\n  }\n","date":"2020-10-07 05:42:47","endLine":84,"groupId":"102205","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"isKey","params":"(RelOptTabletable@List<Integer>columns)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f6/8e48d2072b981bbd33ba40778564dc8a7947c1.src","preCode":"  public boolean isKey(RelOptTable table, List<Integer> columns) {\n    try {\n      final ImmutableList<Object> key =\n          ImmutableList.of(\"isKey\", table.getQualifiedName(),\n              ImmutableIntList.copyOf(columns));\n      return (Boolean) cache.get(key, () -> provider.isKey(table, columns));\n    } catch (UncheckedExecutionException | ExecutionException e) {\n      throw Util.throwAsRuntime(Util.causeOrSelf(e));\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/statistic/CachingSqlStatisticProvider.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
