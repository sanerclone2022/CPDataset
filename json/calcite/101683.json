[{"authorTime":"2016-10-18 10:10:16","codes":[{"authorDate":"2016-10-18 10:10:16","commitOrder":1,"curCode":"  public static Object plusAny(Object b0, Object b1) {\n    if (b0 == null || b1 == null) {\n      return null;\n    }\n\n    if (allAssignable(Number.class, b0, b1)) {\n      return plus(toBigDecimal((Number) b0), toBigDecimal((Number) b1));\n    }\n\n    throw notArithmetic(\"+\", b0, b1);\n  }\n","date":"2016-10-27 07:56:22","endLine":606,"groupId":"4089","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"plusAny","params":"(Objectb0@Objectb1)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/87/b55286dba4842f9df739e8c3437605cc95bc59.src","preCode":"  public static Object plusAny(Object b0, Object b1) {\n    if (b0 == null || b1 == null) {\n      return null;\n    }\n\n    if (allAssignable(Number.class, b0, b1)) {\n      return plus(toBigDecimal((Number) b0), toBigDecimal((Number) b1));\n    }\n\n    throw notArithmetic(\"+\", b0, b1);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/SqlFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"B"},{"authorDate":"2016-10-18 10:10:16","commitOrder":1,"curCode":"  public static Object divideAny(Object b0, Object b1) {\n    if (b0 == null || b1 == null) {\n      return null;\n    }\n\n    if (allAssignable(Number.class, b0, b1)) {\n      return divide(toBigDecimal((Number) b0), toBigDecimal((Number) b1));\n    }\n\n    throw notArithmetic(\"/\", b0, b1);\n  }\n","date":"2016-10-27 07:56:22","endLine":722,"groupId":"6699","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"divideAny","params":"(Objectb0@Objectb1)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/87/b55286dba4842f9df739e8c3437605cc95bc59.src","preCode":"  public static Object divideAny(Object b0, Object b1) {\n    if (b0 == null || b1 == null) {\n      return null;\n    }\n\n    if (allAssignable(Number.class, b0, b1)) {\n      return divide(toBigDecimal((Number) b0), toBigDecimal((Number) b1));\n    }\n\n    throw notArithmetic(\"/\", b0, b1);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/SqlFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":712,"status":"B"}],"commitId":"80240720ec7de7b68dec8741d2322d9cd7f989ed","commitMessage":"@@@[CALCITE-1453] Support ANY type with binary comparison and arithmetic operators (Jungtaek Lim)\n\nANY type is represented as Object. There's not enough overloaded\nbackup methods for comparison and arithmetic operators so if one or\nboth parameters have ANY type.  Calcite cannot find the matched method.\n\nThis patch adds overloaded methods for comparison and arithmetic\noperators whose parameters are (Object.  Object). And if either\nparameter is ANY.  it boxes primitive type parameter so that it can be\nmatched to Object.  Object.\n\nNewly added overloaded methods are smart that they can handle\ndifferent Number types for parameters. However.  the implementation has\nsome downsides:\n1. requires converting to BigDecimal\n2. the result of arithmetic is also BigDecimal\n\nClose apache/calcite#311\n","date":"2016-10-27 07:56:22","modifiedFileCount":"5","status":"B","submitter":"Jungtaek Lim"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"  public static @PolyNull Object plusAny(@PolyNull Object b0,\n      @PolyNull Object b1) {\n    if (b0 == null || b1 == null) {\n      return castNonNull(null);\n    }\n\n    if (allAssignable(Number.class, b0, b1)) {\n      return plus(toBigDecimal((Number) b0), toBigDecimal((Number) b1));\n    }\n\n    throw notArithmetic(\"+\", b0, b1);\n  }\n","date":"2020-11-30 06:45:33","endLine":926,"groupId":"101683","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"plusAny","params":"(@PolyNullObjectb0@@PolyNullObjectb1)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c2/f912a1b9ce231efa57821a7ee120c32781215c.src","preCode":"  public static Object plusAny(Object b0, Object b1) {\n    if (b0 == null || b1 == null) {\n      return null;\n    }\n\n    if (allAssignable(Number.class, b0, b1)) {\n      return plus(toBigDecimal((Number) b0), toBigDecimal((Number) b1));\n    }\n\n    throw notArithmetic(\"+\", b0, b1);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/SqlFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":915,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"  public static @PolyNull Object divideAny(@PolyNull Object b0,\n      @PolyNull Object b1) {\n    if (b0 == null || b1 == null) {\n      return castNonNull(null);\n    }\n\n    if (allAssignable(Number.class, b0, b1)) {\n      return divide(toBigDecimal((Number) b0), toBigDecimal((Number) b1));\n    }\n\n    throw notArithmetic(\"/\", b0, b1);\n  }\n","date":"2020-11-30 06:45:33","endLine":1046,"groupId":"101683","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"divideAny","params":"(@PolyNullObjectb0@@PolyNullObjectb1)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c2/f912a1b9ce231efa57821a7ee120c32781215c.src","preCode":"  public static Object divideAny(Object b0, Object b1) {\n    if (b0 == null || b1 == null) {\n      return null;\n    }\n\n    if (allAssignable(Number.class, b0, b1)) {\n      return divide(toBigDecimal((Number) b0), toBigDecimal((Number) b1));\n    }\n\n    throw notArithmetic(\"/\", b0, b1);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/SqlFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1035,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
