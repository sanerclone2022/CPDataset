[{"authorTime":"2014-11-14 10:24:57","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"    private BitSet computeClosure(int pos) {\n      BitSet o = closure.get(pos);\n      if (o != null) {\n        return o;\n      }\n      BitSet b = equivalence.get(pos);\n      o = (BitSet) b.clone();\n      int i = b.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        o.or(computeClosure(i));\n      }\n      closure.put(pos, o);\n      i = o.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        closure.put(i, o);\n      }\n      return o;\n    }\n","date":"2014-11-14 09:39:34","endLine":315,"groupId":"12707","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"computeClosure","params":"(intpos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/06/16fbb13defc0fd24c818dcb8c1bbdf7a407a6b.src","preCode":"    private BitSet computeClosure(int pos) {\n      BitSet o = closure.get(pos);\n      if (o != null) {\n        return o;\n      }\n      BitSet b = equivalence.get(pos);\n      o = (BitSet) b.clone();\n      int i = b.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        o.or(computeClosure(i));\n      }\n      closure.put(pos, o);\n      i = o.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        closure.put(i, o);\n      }\n      return o;\n    }\n","realPath":"core/src/main/java/org/apache/calcite/util/BitSets.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"NB"},{"authorDate":"2014-11-14 10:24:57","commitOrder":2,"curCode":"    private ImmutableBitSet computeClosure(int pos) {\n      ImmutableBitSet o = closure.get(pos);\n      if (o != null) {\n        return o;\n      }\n      final ImmutableBitSet b = equivalence.get(pos);\n      o = b;\n      int i = b.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        o = o.union(computeClosure(i));\n      }\n      closure.put(pos, o);\n      i = o.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        closure.put(i, o);\n      }\n      return o;\n    }\n","date":"2014-11-14 11:00:43","endLine":706,"groupId":"10982","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"computeClosure","params":"(intpos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/57dd5323d1f8333aad24271530a9f1817619cd.src","preCode":"    private ImmutableBitSet computeClosure(int pos) {\n      ImmutableBitSet o = closure.get(pos);\n      if (o != null) {\n        return o;\n      }\n      final ImmutableBitSet b = equivalence.get(pos);\n      o = b;\n      int i = b.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        o = o.union(computeClosure(i));\n      }\n      closure.put(pos, o);\n      i = o.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        closure.put(i, o);\n      }\n      return o;\n    }\n","realPath":"core/src/main/java/org/apache/calcite/util/ImmutableBitSet.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":689,"status":"B"}],"commitId":"b9d8de38d2aa4ee6791aec42ffe2adb58942060a","commitMessage":"@@@[CALCITE-460] Add ImmutableBitSet and replace uses of BitSet\n","date":"2014-11-14 11:00:43","modifiedFileCount":"74","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"    private BitSet computeClosure(int pos) {\n      BitSet o = closure.get(pos);\n      if (o != null) {\n        return o;\n      }\n      BitSet b = requireNonNull(equivalence.get(pos),\n          () -> \"equivalence.get(pos) for \" + pos);\n      o = (BitSet) b.clone();\n      int i = b.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        o.or(computeClosure(i));\n      }\n      closure.put(pos, o);\n      i = o.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        closure.put(i, o);\n      }\n      return o;\n    }\n","date":"2020-11-30 06:45:33","endLine":359,"groupId":"102188","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"computeClosure","params":"(intpos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/19/7ac8365e0477be5ab1db2a458190db13885a8b.src","preCode":"    private BitSet computeClosure(int pos) {\n      BitSet o = closure.get(pos);\n      if (o != null) {\n        return o;\n      }\n      BitSet b = equivalence.get(pos);\n      o = (BitSet) b.clone();\n      int i = b.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        o.or(computeClosure(i));\n      }\n      closure.put(pos, o);\n      i = o.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        closure.put(i, o);\n      }\n      return o;\n    }\n","realPath":"core/src/main/java/org/apache/calcite/util/BitSets.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"    private ImmutableBitSet computeClosure(\n        @UnderInitialization Closure this,\n        int pos\n    ) {\n      ImmutableBitSet o = closure.get(pos);\n      if (o != null) {\n        return o;\n      }\n      final ImmutableBitSet b = castNonNull(equivalence.get(pos));\n      o = b;\n      int i = b.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        o = o.union(computeClosure(i));\n      }\n      closure.put(pos, o);\n      i = o.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        closure.put(i, o);\n      }\n      return o;\n    }\n","date":"2020-11-30 06:45:33","endLine":983,"groupId":"102188","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"computeClosure","params":"(@UnderInitializationClosurethis@intpos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a8/96263e4c804dba703d9731ab7851092039c70d.src","preCode":"    private ImmutableBitSet computeClosure(int pos) {\n      ImmutableBitSet o = closure.get(pos);\n      if (o != null) {\n        return o;\n      }\n      final ImmutableBitSet b = equivalence.get(pos);\n      o = b;\n      int i = b.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        o = o.union(computeClosure(i));\n      }\n      closure.put(pos, o);\n      i = o.nextSetBit(pos + 1);\n      for (; i >= 0; i = b.nextSetBit(i + 1)) {\n        closure.put(i, o);\n      }\n      return o;\n    }\n","realPath":"core/src/main/java/org/apache/calcite/util/ImmutableBitSet.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":963,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
