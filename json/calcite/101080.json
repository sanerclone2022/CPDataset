[{"authorTime":"2017-03-29 12:29:27","codes":[{"authorDate":"2018-08-01 18:40:56","commitOrder":3,"curCode":"      @Override protected ModifiableViewTable modifiableViewTable(\n          CalcitePrepare.AnalyzeViewResult parsed, String viewSql,\n          List<String> schemaPath, List<String> viewPath, CalciteSchema schema) {\n        final JavaTypeFactory typeFactory = (JavaTypeFactory) parsed.typeFactory;\n        final Type elementType = typeFactory.getJavaClass(parsed.rowType);\n        return new MockModifiableViewTable(elementType,\n            RelDataTypeImpl.proto(parsed.rowType), viewSql, schemaPath, viewPath,\n            parsed.table, Schemas.path(schema.root(), parsed.tablePath),\n            parsed.constraint, parsed.columnMapping);\n      }\n","date":"2018-08-02 17:10:12","endLine":640,"groupId":"201","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"modifiableViewTable","params":"(CalcitePrepare.AnalyzeViewResultparsed@StringviewSql@List<String>schemaPath@List<String>viewPath@CalciteSchemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/1833d92468d97756e314bb03c29022a6a2e661.src","preCode":"      @Override protected ModifiableViewTable modifiableViewTable(\n          CalcitePrepare.AnalyzeViewResult parsed, String viewSql,\n          List<String> schemaPath, List<String> viewPath, CalciteSchema schema) {\n        final JavaTypeFactory typeFactory = (JavaTypeFactory) parsed.typeFactory;\n        final Type elementType = typeFactory.getJavaClass(parsed.rowType);\n        return new MockModifiableViewTable(elementType,\n            RelDataTypeImpl.proto(parsed.rowType), viewSql, schemaPath, viewPath,\n            parsed.table, Schemas.path(schema.root(), parsed.tablePath),\n            parsed.constraint, parsed.columnMapping);\n      }\n","realPath":"core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReader.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":631,"status":"B"},{"authorDate":"2017-03-29 12:29:27","commitOrder":3,"curCode":"  protected ModifiableViewTable modifiableViewTable(CalcitePrepare.AnalyzeViewResult parsed,\n      String viewSql, List<String> schemaPath, List<String> viewPath,\n      CalciteSchema schema) {\n    final JavaTypeFactory typeFactory = (JavaTypeFactory) parsed.typeFactory;\n    final Type elementType = typeFactory.getJavaClass(parsed.rowType);\n    return new ModifiableViewTable(elementType,\n        RelDataTypeImpl.proto(parsed.rowType), viewSql, schemaPath, viewPath,\n        parsed.table, Schemas.path(schema.root(), parsed.tablePath),\n        parsed.constraint, parsed.columnMapping);\n  }\n","date":"2017-03-30 15:33:30","endLine":95,"groupId":"201","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"modifiableViewTable","params":"(CalcitePrepare.AnalyzeViewResultparsed@StringviewSql@List<String>schemaPath@List<String>viewPath@CalciteSchemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1b/54e7a34cc40d088e5c0be6ecf3bdb259863982.src","preCode":"  protected ModifiableViewTable modifiableViewTable(CalcitePrepare.AnalyzeViewResult parsed,\n      String viewSql, List<String> schemaPath, List<String> viewPath,\n      CalciteSchema schema) {\n    final JavaTypeFactory typeFactory = (JavaTypeFactory) parsed.typeFactory;\n    final Type elementType = typeFactory.getJavaClass(parsed.rowType);\n    return new ModifiableViewTable(elementType,\n        RelDataTypeImpl.proto(parsed.rowType), viewSql, schemaPath, viewPath,\n        parsed.table, Schemas.path(schema.root(), parsed.tablePath),\n        parsed.constraint, parsed.columnMapping);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/impl/ViewTableMacro.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"NB"}],"commitId":"96b28f7ba11de22a68d984de6b6b88311cc2c57e","commitMessage":"@@@[CALCITE-2435] tests: refactor SqlTestFactory\n\ncloses #771\n","date":"2018-08-02 17:10:12","modifiedFileCount":"12","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2018-08-01 18:40:56","commitOrder":4,"curCode":"      @Override protected ModifiableViewTable modifiableViewTable(\n          CalcitePrepare.AnalyzeViewResult parsed, String viewSql,\n          List<String> schemaPath, List<String> viewPath, CalciteSchema schema) {\n        final JavaTypeFactory typeFactory = (JavaTypeFactory) parsed.typeFactory;\n        final Type elementType = typeFactory.getJavaClass(parsed.rowType);\n        return new MockModifiableViewTable(elementType,\n            RelDataTypeImpl.proto(parsed.rowType), viewSql, schemaPath, viewPath,\n            parsed.table, Schemas.path(schema.root(), parsed.tablePath),\n            parsed.constraint, parsed.columnMapping);\n      }\n","date":"2018-08-02 17:10:12","endLine":640,"groupId":"101080","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"modifiableViewTable","params":"(CalcitePrepare.AnalyzeViewResultparsed@StringviewSql@List<String>schemaPath@List<String>viewPath@CalciteSchemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/1833d92468d97756e314bb03c29022a6a2e661.src","preCode":"      @Override protected ModifiableViewTable modifiableViewTable(\n          CalcitePrepare.AnalyzeViewResult parsed, String viewSql,\n          List<String> schemaPath, List<String> viewPath, CalciteSchema schema) {\n        final JavaTypeFactory typeFactory = (JavaTypeFactory) parsed.typeFactory;\n        final Type elementType = typeFactory.getJavaClass(parsed.rowType);\n        return new MockModifiableViewTable(elementType,\n            RelDataTypeImpl.proto(parsed.rowType), viewSql, schemaPath, viewPath,\n            parsed.table, Schemas.path(schema.root(), parsed.tablePath),\n            parsed.constraint, parsed.columnMapping);\n      }\n","realPath":"core/src/test/java/org/apache/calcite/test/catalog/MockCatalogReader.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":631,"status":"N"},{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  protected ModifiableViewTable modifiableViewTable(CalcitePrepare.AnalyzeViewResult parsed,\n      String viewSql, List<String> schemaPath, @Nullable List<String> viewPath,\n      CalciteSchema schema) {\n    final JavaTypeFactory typeFactory = (JavaTypeFactory) parsed.typeFactory;\n    final Type elementType = typeFactory.getJavaClass(parsed.rowType);\n    return new ModifiableViewTable(elementType,\n        RelDataTypeImpl.proto(parsed.rowType), viewSql, schemaPath, viewPath,\n        requireNonNull(parsed.table, \"parsed.table\"),\n        Schemas.path(schema.root(), requireNonNull(parsed.tablePath, \"parsed.tablePath\")),\n        requireNonNull(parsed.constraint, \"parsed.constraint\"),\n        requireNonNull(parsed.columnMapping, \"parsed.columnMapping\"));\n  }\n","date":"2020-11-30 06:45:33","endLine":105,"groupId":"101080","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"modifiableViewTable","params":"(CalcitePrepare.AnalyzeViewResultparsed@StringviewSql@List<String>schemaPath@@NullableList<String>viewPath@CalciteSchemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6f/df2a9654eac5c2869bf3749e75b943ccf11305.src","preCode":"  protected ModifiableViewTable modifiableViewTable(CalcitePrepare.AnalyzeViewResult parsed,\n      String viewSql, List<String> schemaPath, List<String> viewPath,\n      CalciteSchema schema) {\n    final JavaTypeFactory typeFactory = (JavaTypeFactory) parsed.typeFactory;\n    final Type elementType = typeFactory.getJavaClass(parsed.rowType);\n    return new ModifiableViewTable(elementType,\n        RelDataTypeImpl.proto(parsed.rowType), viewSql, schemaPath, viewPath,\n        parsed.table, Schemas.path(schema.root(), parsed.tablePath),\n        parsed.constraint, parsed.columnMapping);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/schema/impl/ViewTableMacro.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
