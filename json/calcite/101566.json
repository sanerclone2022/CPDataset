[{"authorTime":"2017-03-13 19:11:19","codes":[{"authorDate":"2017-03-13 19:11:19","commitOrder":1,"curCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-04-02 11:43:28","endLine":1026,"groupId":"4694","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/c806334a0ffd728401f25f081bdb838f912986.src","preCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":998,"status":"B"},{"authorDate":"2017-03-13 19:11:19","commitOrder":1,"curCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-04-02 11:43:28","endLine":1179,"groupId":"12915","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/c806334a0ffd728401f25f081bdb838f912986.src","preCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1150,"status":"B"}],"commitId":"4d20d62d4d752ce4de29a002ec313a758a7cee6e","commitMessage":"@@@[CALCITE-1642] Support MEASURES clause in MATCH_RECOGNIZE (Zhiqiang-He)\n\nClose apache/calcite#400\n","date":"2017-04-02 11:43:28","modifiedFileCount":"15","status":"B","submitter":"Zhiqiang-He"},{"authorTime":"2017-04-14 20:58:21","codes":[{"authorDate":"2017-04-14 20:58:21","commitOrder":2,"curCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-04-25 09:26:09","endLine":1044,"groupId":"4694","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/57c6b03ccd302ede16475375714b729d3d5a3d.src","preCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1015,"status":"M"},{"authorDate":"2017-04-14 20:58:21","commitOrder":2,"curCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-04-25 09:26:09","endLine":1202,"groupId":"12915","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/57c6b03ccd302ede16475375714b729d3d5a3d.src","preCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1172,"status":"M"}],"commitId":"c850e227db583a697c8cc46585b33274b63ed2d0","commitMessage":"@@@[CALCITE-1643] AFTER MATCH sub-clause of MATCH_RECOGNIZE clause (Zhiqiang-He)\n\nClose apache/calcite#429\n","date":"2017-04-25 09:26:09","modifiedFileCount":"10","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-05-19 14:52:34","codes":[{"authorDate":"2017-05-19 14:52:34","commitOrder":3,"curCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-24 02:28:41","endLine":1094,"groupId":"4694","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cc/fb46e7793076f00b67c96a5e27a4ed198c4878.src","preCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1064,"status":"M"},{"authorDate":"2017-05-19 14:52:34","commitOrder":3,"curCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-24 02:28:41","endLine":1257,"groupId":"12915","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cc/fb46e7793076f00b67c96a5e27a4ed198c4878.src","preCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1226,"status":"M"}],"commitId":"e117c10cef192ca4ab10ffec2132b7dbd34319fa","commitMessage":"@@@[CALCITE-1645] In MATCH_RECOGNIZE clause.  support ONE ROW PER MATCH and ALL ROWS PER MATCH (Zhiqiang-He)\n\nClose apache/calcite#452\n","date":"2017-05-24 02:28:41","modifiedFileCount":"9","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-05-19 14:52:34","codes":[{"authorDate":"2017-06-13 16:46:14","commitOrder":4,"curCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures MATCH_NUMBER() as match_num, \"\n        + \"   CLASSIFIER() as var_match, \"\n        + \"   STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL MATCH_NUMBER () AS \\\"MATCH_NUM\\\", \"\n        + \"FINAL CLASSIFIER() AS \\\"VAR_MATCH\\\", \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-06-20 01:11:56","endLine":1198,"groupId":"7303","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/26/481f92b378115aa2c6f7f7133056ccb3b3bb7d.src","preCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1164,"status":"M"},{"authorDate":"2017-05-19 14:52:34","commitOrder":4,"curCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-24 02:28:41","endLine":1257,"groupId":"12915","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cc/fb46e7793076f00b67c96a5e27a4ed198c4878.src","preCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1226,"status":"N"}],"commitId":"304eb9c54dd0565fd48006b75c715c944f82f974","commitMessage":"@@@[CALCITE-1647] CLASSIFIER and MATCH_NUMBER syntax support for MATCH_RECOGNIZE\n\nClose apache/calcite#473\n","date":"2017-06-20 01:11:56","modifiedFileCount":"5","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-07-08 15:34:11","codes":[{"authorDate":"2017-07-08 15:34:11","commitOrder":5,"curCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures MATCH_NUMBER() as match_num, \"\n        + \"   CLASSIFIER() as var_match, \"\n        + \"   STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"MATCH_NUMBER () AS \\\"MATCH_NUM\\\", \"\n        + \"CLASSIFIER() AS \\\"VAR_MATCH\\\", \"\n        + \"\\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-07-09 01:03:23","endLine":1240,"groupId":"7303","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d1/a1b87038071db4c1fa0d4215de14a003278229.src","preCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures MATCH_NUMBER() as match_num, \"\n        + \"   CLASSIFIER() as var_match, \"\n        + \"   STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL MATCH_NUMBER () AS \\\"MATCH_NUM\\\", \"\n        + \"FINAL CLASSIFIER() AS \\\"VAR_MATCH\\\", \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1206,"status":"M"},{"authorDate":"2017-07-08 15:34:11","commitOrder":5,"curCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-07-09 01:03:23","endLine":1404,"groupId":"12915","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d1/a1b87038071db4c1fa0d4215de14a003278229.src","preCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1373,"status":"M"}],"commitId":"65d95e6792c002d70d826b049cf16a748fe3109d","commitMessage":"@@@[CALCITE-1871] Nesting LAST within PREV is not parsed correctly for MATCH_RECOGNIZE\n\nClose apache/calcite#494\n","date":"2017-07-09 01:03:23","modifiedFileCount":"3","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-08-15 17:19:00","codes":[{"authorDate":"2017-08-15 17:19:00","commitOrder":6,"curCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures MATCH_NUMBER() as match_num, \"\n        + \"   CLASSIFIER() as var_match, \"\n        + \"   STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL MATCH_NUMBER () AS \\\"MATCH_NUM\\\", \"\n        + \"FINAL CLASSIFIER() AS \\\"VAR_MATCH\\\", \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-08-30 01:11:17","endLine":1428,"groupId":"7303","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/2edfc9de10dcc4d3e8ac90d6dfdc278900b007.src","preCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures MATCH_NUMBER() as match_num, \"\n        + \"   CLASSIFIER() as var_match, \"\n        + \"   STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"MATCH_NUMBER () AS \\\"MATCH_NUM\\\", \"\n        + \"CLASSIFIER() AS \\\"VAR_MATCH\\\", \"\n        + \"\\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1394,"status":"M"},{"authorDate":"2017-08-15 17:19:00","commitOrder":6,"curCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-08-30 01:11:17","endLine":1592,"groupId":"12915","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/2edfc9de10dcc4d3e8ac90d6dfdc278900b007.src","preCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1561,"status":"M"}],"commitId":"d3a7c0d794cb9d0079fb37999dcd0dd6992f2041","commitMessage":"@@@[CALCITE-1943] Add back NavigationExpander and NavigationReplacer in SqlValidatorImpl (Dian Fu)\n\nIt will replace clauses such as A.price with PREV(A.price.  0) and\nmakes the implementation of RexVisitor.visitPatternFieldRef(RexPatternFieldRef)\nmore unified.  Otherwise.  it is difficult to implement this method. If\nit returns the specified field.  then the navigation such as\nPREV(A.price.  1) becomes impossible; if not.  then comparisons such as\nA.price > PREV(A.price.  1) becomes meaningless.\n\nClose apache/calcite#516\n","date":"2017-08-30 01:11:17","modifiedFileCount":"3","status":"M","submitter":"Dian Fu"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":7,"curCode":"  @Test void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures MATCH_NUMBER() as match_num, \"\n        + \"   CLASSIFIER() as var_match, \"\n        + \"   STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL MATCH_NUMBER () AS \\\"MATCH_NUM\\\", \"\n        + \"FINAL CLASSIFIER() AS \\\"VAR_MATCH\\\", \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":3602,"groupId":"101566","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testMatchRecognizeMeasures1() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures MATCH_NUMBER() as match_num, \"\n        + \"   CLASSIFIER() as var_match, \"\n        + \"   STRT.\\\"net_weight\\\" as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as bottom_nw,\"\n        + \"   LAST(up.\\\"net_weight\\\") as end_nw\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL MATCH_NUMBER () AS \\\"MATCH_NUM\\\", \"\n        + \"FINAL CLASSIFIER() AS \\\"VAR_MATCH\\\", \"\n        + \"FINAL \\\"STRT\\\".\\\"net_weight\\\" AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"BOTTOM_NW\\\", \"\n        + \"FINAL LAST(\\\"UP\\\".\\\"net_weight\\\", 0) AS \\\"END_NW\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3568,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":7,"curCode":"  @Test void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":3766,"groupId":"101566","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizeMeasures6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testMatchRecognizeMeasures6() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"   measures \"\n        + \"   FIRST(STRT.\\\"net_weight\\\") as start_nw,\"\n        + \"   LAST(DOWN.\\\"net_weight\\\") as up_cnt,\"\n        + \"   FINAL SUM(DOWN.\\\"net_weight\\\") as down_cnt\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr\";\n\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"MEASURES \"\n        + \"FINAL FIRST(\\\"STRT\\\".\\\"net_weight\\\", 0) AS \\\"START_NW\\\", \"\n        + \"FINAL LAST(\\\"DOWN\\\".\\\"net_weight\\\", 0) AS \\\"UP_CNT\\\", \"\n        + \"FINAL SUM(\\\"DOWN\\\".\\\"net_weight\\\") AS \\\"DOWN_CNT\\\"\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN \"\n        + \"(\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3735,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
