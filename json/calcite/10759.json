[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testMinusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.MINUS);\n    tester.checkScalar(\n        \"interval '2' day - interval '1' day\",\n        \"+1\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day - interval '1' minute\",\n        \"+1 23:59\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month\",\n        \"+1-11\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month - interval '3' year\",\n        \"-1-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"cast(null as interval day) + interval '2' hour\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1:1' hour to minute\",\n        \"11:02:01\",\n        \"TIME(0) NOT NULL\");\n    if (!INTERVAL) {\n      return;\n    }\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '-4 2:4' day to minute\",\n        \"2003-08-06 14:58:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n  }\n","date":"2014-11-14 09:39:34","endLine":2453,"groupId":"14374","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMinusIntervalOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/ce9911d6cdbc46441ce964a9cf5f40a7143e6e.src","preCode":"  @Test public void testMinusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.MINUS);\n    tester.checkScalar(\n        \"interval '2' day - interval '1' day\",\n        \"+1\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day - interval '1' minute\",\n        \"+1 23:59\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month\",\n        \"+1-11\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month - interval '3' year\",\n        \"-1-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"cast(null as interval day) + interval '2' hour\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1:1' hour to minute\",\n        \"11:02:01\",\n        \"TIME(0) NOT NULL\");\n    if (!INTERVAL) {\n      return;\n    }\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '-4 2:4' day to minute\",\n        \"2003-08-06 14:58:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2414,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testPlusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.PLUS);\n    tester.checkScalar(\n        \"interval '2' day + interval '1' day\",\n        \"+3\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '1' minute\",\n        \"+2 00:01\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '5' minute + interval '-3' second\",\n        \"+2 00:04:57.000000\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year + interval '1' month\",\n        \"+2-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"interval '2' year + cast(null as interval month)\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1:1' hour to minute\",\n        \"13:04:01\",\n        \"TIME(0) NOT NULL\");\n    if (!INTERVAL) {\n      return;\n    }\n    tester.checkScalar(\n        \"interval '5' day + date '2005-03-02'\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '-4 2:4' day to minute\",\n        \"2003-07-29 10:50:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n  }\n","date":"2014-11-14 09:39:34","endLine":2792,"groupId":"6771","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPlusIntervalOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/ce9911d6cdbc46441ce964a9cf5f40a7143e6e.src","preCode":"  @Test public void testPlusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.PLUS);\n    tester.checkScalar(\n        \"interval '2' day + interval '1' day\",\n        \"+3\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '1' minute\",\n        \"+2 00:01\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '5' minute + interval '-3' second\",\n        \"+2 00:04:57.000000\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year + interval '1' month\",\n        \"+2-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"interval '2' year + cast(null as interval month)\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1:1' hour to minute\",\n        \"13:04:01\",\n        \"TIME(0) NOT NULL\");\n    if (!INTERVAL) {\n      return;\n    }\n    tester.checkScalar(\n        \"interval '5' day + date '2005-03-02'\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '-4 2:4' day to minute\",\n        \"2003-07-29 10:50:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2753,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2016-06-14 00:58:22","codes":[{"authorDate":"2016-06-14 00:58:22","commitOrder":2,"curCode":"  @Test public void testMinusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.MINUS);\n    tester.checkScalar(\n        \"interval '2' day - interval '1' day\",\n        \"+1\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day - interval '1' minute\",\n        \"+1 23:59\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month\",\n        \"+1-11\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month - interval '3' year\",\n        \"-1-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"cast(null as interval day) + interval '2' hour\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1:1' hour to minute\",\n        \"11:02:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '-4 2:4' day to minute\",\n        \"2003-08-06 14:58:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '12' year\",\n        \"1991-08-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n    tester.checkScalar(\n        \"date '2003-08-02' - interval '12' year\",\n        \"1991-08-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2003-08-02' - interval '12-3' year to month\",\n        \"1991-05-02\",\n        \"DATE NOT NULL\");\n  }\n","date":"2016-06-28 05:14:19","endLine":2581,"groupId":"14374","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMinusIntervalOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e8/1ed4ca2441054478c2f927aad5d9aa1fb40467.src","preCode":"  @Test public void testMinusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.MINUS);\n    tester.checkScalar(\n        \"interval '2' day - interval '1' day\",\n        \"+1\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day - interval '1' minute\",\n        \"+1 23:59\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month\",\n        \"+1-11\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month - interval '3' year\",\n        \"-1-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"cast(null as interval day) + interval '2' hour\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1:1' hour to minute\",\n        \"11:02:01\",\n        \"TIME(0) NOT NULL\");\n    if (!INTERVAL) {\n      return;\n    }\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '-4 2:4' day to minute\",\n        \"2003-08-06 14:58:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2533,"status":"M"},{"authorDate":"2016-06-14 00:58:22","commitOrder":2,"curCode":"  @Test public void testPlusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.PLUS);\n    tester.checkScalar(\n        \"interval '2' day + interval '1' day\",\n        \"+3\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '1' minute\",\n        \"+2 00:01\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '5' minute + interval '-3' second\",\n        \"+2 00:04:57.000000\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year + interval '1' month\",\n        \"+2-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"interval '2' year + cast(null as interval month)\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1:1' hour to minute\",\n        \"13:04:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"interval '5' day + date '2005-03-02'\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '-4 2:4' day to minute\",\n        \"2003-07-29 10:50:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n    tester.checkScalar(\n        \"interval '5-3' year to month + date '2005-03-02'\",\n        \"2010-06-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '5-3' year to month\",\n        \"2008-11-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n  }\n","date":"2016-06-28 05:14:19","endLine":2922,"groupId":"6771","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPlusIntervalOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e8/1ed4ca2441054478c2f927aad5d9aa1fb40467.src","preCode":"  @Test public void testPlusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.PLUS);\n    tester.checkScalar(\n        \"interval '2' day + interval '1' day\",\n        \"+3\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '1' minute\",\n        \"+2 00:01\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '5' minute + interval '-3' second\",\n        \"+2 00:04:57.000000\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year + interval '1' month\",\n        \"+2-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"interval '2' year + cast(null as interval month)\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1:1' hour to minute\",\n        \"13:04:01\",\n        \"TIME(0) NOT NULL\");\n    if (!INTERVAL) {\n      return;\n    }\n    tester.checkScalar(\n        \"interval '5' day + date '2005-03-02'\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '-4 2:4' day to minute\",\n        \"2003-07-29 10:50:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2878,"status":"M"}],"commitId":"5511253b5c46741dfed8e1ac8d4fa23025aeb3c5","commitMessage":"@@@[CALCITE-308] DATE + INTERVAL gives wrong result\n\nAll tests for operations on intervals now succeed.\n","date":"2016-06-28 05:14:19","modifiedFileCount":"17","status":"M","submitter":"Julian Hyde"},{"authorTime":"2017-02-15 05:03:17","codes":[{"authorDate":"2017-02-15 05:03:17","commitOrder":3,"curCode":"  @Test public void testMinusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.MINUS);\n    tester.checkScalar(\n        \"interval '2' day - interval '1' day\",\n        \"+1\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day - interval '1' minute\",\n        \"+1 23:59\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month\",\n        \"+1-11\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month - interval '3' year\",\n        \"-1-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"cast(null as interval day) + interval '2' hour\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1:1' hour to minute\",\n        \"11:02:01\",\n        \"TIME(0) NOT NULL\");\n    \r\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1' day\",\n        \"12:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:01' - interval '25' hour\",\n        \"11:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:03' - interval '25:0:1' hour to second\",\n        \"11:03:02\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' hour\",\n        \"2005-03-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '25' hour\",\n        \"2005-03-01\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '25:45' hour to minute\",\n        \"2005-03-01\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '25:45:54' hour to second\",\n        \"2005-03-01\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '-4 2:4' day to minute\",\n        \"2003-08-06 14:58:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '12' year\",\n        \"1991-08-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n    tester.checkScalar(\n        \"date '2003-08-02' - interval '12' year\",\n        \"1991-08-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2003-08-02' - interval '12-3' year to month\",\n        \"1991-05-02\",\n        \"DATE NOT NULL\");\n  }\n","date":"2017-02-15 06:10:16","endLine":2604,"groupId":"14374","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMinusIntervalOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/95/000f677088bc092a1272f047151d94182c0a45.src","preCode":"  @Test public void testMinusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.MINUS);\n    tester.checkScalar(\n        \"interval '2' day - interval '1' day\",\n        \"+1\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day - interval '1' minute\",\n        \"+1 23:59\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month\",\n        \"+1-11\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month - interval '3' year\",\n        \"-1-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"cast(null as interval day) + interval '2' hour\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1:1' hour to minute\",\n        \"11:02:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '-4 2:4' day to minute\",\n        \"2003-08-06 14:58:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '12' year\",\n        \"1991-08-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n    tester.checkScalar(\n        \"date '2003-08-02' - interval '12' year\",\n        \"1991-08-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2003-08-02' - interval '12-3' year to month\",\n        \"1991-05-02\",\n        \"DATE NOT NULL\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2522,"status":"M"},{"authorDate":"2017-02-15 05:03:17","commitOrder":3,"curCode":"  @Test public void testPlusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.PLUS);\n    tester.checkScalar(\n        \"interval '2' day + interval '1' day\",\n        \"+3\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '1' minute\",\n        \"+2 00:01\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '5' minute + interval '-3' second\",\n        \"+2 00:04:57.000000\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year + interval '1' month\",\n        \"+2-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"interval '2' year + cast(null as interval month)\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1:1' hour to minute\",\n        \"13:04:01\",\n        \"TIME(0) NOT NULL\");\n    \r\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1' day\",\n        \"12:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:01' + interval '25' hour\",\n        \"13:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:01' + interval '25:0:1' hour to second\",\n        \"13:03:02\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"interval '5' day + date '2005-03-02'\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '5' day\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '5' hour\",\n        \"2005-03-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '25' hour\",\n        \"2005-03-03\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '25:45' hour to minute\",\n        \"2005-03-03\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '25:45:54' hour to second\",\n        \"2005-03-03\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '-4 2:4' day to minute\",\n        \"2003-07-29 10:50:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n    tester.checkScalar(\n        \"interval '5-3' year to month + date '2005-03-02'\",\n        \"2010-06-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '5-3' year to month\",\n        \"2008-11-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n    tester.checkScalar(\n        \"interval '5-3' year to month + timestamp '2003-08-02 12:54:01'\",\n        \"2008-11-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n  }\n","date":"2017-02-15 06:10:16","endLine":2995,"groupId":"6771","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testPlusIntervalOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/95/000f677088bc092a1272f047151d94182c0a45.src","preCode":"  @Test public void testPlusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.PLUS);\n    tester.checkScalar(\n        \"interval '2' day + interval '1' day\",\n        \"+3\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '1' minute\",\n        \"+2 00:01\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '5' minute + interval '-3' second\",\n        \"+2 00:04:57.000000\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year + interval '1' month\",\n        \"+2-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"interval '2' year + cast(null as interval month)\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1:1' hour to minute\",\n        \"13:04:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"interval '5' day + date '2005-03-02'\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '-4 2:4' day to minute\",\n        \"2003-07-29 10:50:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n    tester.checkScalar(\n        \"interval '5-3' year to month + date '2005-03-02'\",\n        \"2010-06-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '5-3' year to month\",\n        \"2008-11-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2913,"status":"M"}],"commitId":"d8c4d73fe9bd188ebc004e11ef0f48d934124d8c","commitMessage":"@@@[CALCITE-1632] Return type of \"datetime + interval\" expression\n\nValidate that the return type of expressions such as \"DATE + HOUR\nINTERVAL\" and \"TIME - DAY INTERVAL\" are correct per SQL standard.\n\nAlso make sure that TIME values remain in the range\n00:00:00..23:59:59.\n","date":"2017-02-15 06:10:16","modifiedFileCount":"2","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testMinusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.MINUS);\n    tester.checkScalar(\n        \"interval '2' day - interval '1' day\",\n        \"+1\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day - interval '1' minute\",\n        \"+1 23:59\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month\",\n        \"+1-11\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month - interval '3' year\",\n        \"-1-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"cast(null as interval day) + interval '2' hour\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1:1' hour to minute\",\n        \"11:02:01\",\n        \"TIME(0) NOT NULL\");\n    \r\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1' day\",\n        \"12:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:01' - interval '25' hour\",\n        \"11:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:03' - interval '25:0:1' hour to second\",\n        \"11:03:02\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' hour\",\n        \"2005-03-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '25' hour\",\n        \"2005-03-01\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '25:45' hour to minute\",\n        \"2005-03-01\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '25:45:54' hour to second\",\n        \"2005-03-01\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '-4 2:4' day to minute\",\n        \"2003-08-06 14:58:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '12' year\",\n        \"1991-08-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n    tester.checkScalar(\n        \"date '2003-08-02' - interval '12' year\",\n        \"1991-08-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2003-08-02' - interval '12-3' year to month\",\n        \"1991-05-02\",\n        \"DATE NOT NULL\");\n  }\n","date":"2020-04-06 04:57:49","endLine":3130,"groupId":"10759","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testMinusIntervalOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testMinusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.MINUS);\n    tester.checkScalar(\n        \"interval '2' day - interval '1' day\",\n        \"+1\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day - interval '1' minute\",\n        \"+1 23:59\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month\",\n        \"+1-11\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year - interval '1' month - interval '3' year\",\n        \"-1-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"cast(null as interval day) + interval '2' hour\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1:1' hour to minute\",\n        \"11:02:01\",\n        \"TIME(0) NOT NULL\");\n    \r\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' - interval '1' day\",\n        \"12:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:01' - interval '25' hour\",\n        \"11:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:03' - interval '25:0:1' hour to second\",\n        \"11:03:02\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' day\",\n        \"2005-02-25\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '5' hour\",\n        \"2005-03-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '25' hour\",\n        \"2005-03-01\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '25:45' hour to minute\",\n        \"2005-03-01\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' - interval '25:45:54' hour to second\",\n        \"2005-03-01\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '-4 2:4' day to minute\",\n        \"2003-08-06 14:58:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' - interval '12' year\",\n        \"1991-08-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n    tester.checkScalar(\n        \"date '2003-08-02' - interval '12' year\",\n        \"1991-08-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2003-08-02' - interval '12-3' year to month\",\n        \"1991-05-02\",\n        \"DATE NOT NULL\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3048,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testPlusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.PLUS);\n    tester.checkScalar(\n        \"interval '2' day + interval '1' day\",\n        \"+3\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '1' minute\",\n        \"+2 00:01\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '5' minute + interval '-3' second\",\n        \"+2 00:04:57.000000\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year + interval '1' month\",\n        \"+2-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"interval '2' year + cast(null as interval month)\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1:1' hour to minute\",\n        \"13:04:01\",\n        \"TIME(0) NOT NULL\");\n    \r\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1' day\",\n        \"12:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:01' + interval '25' hour\",\n        \"13:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:01' + interval '25:0:1' hour to second\",\n        \"13:03:02\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"interval '5' day + date '2005-03-02'\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '5' day\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '5' hour\",\n        \"2005-03-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '25' hour\",\n        \"2005-03-03\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '25:45' hour to minute\",\n        \"2005-03-03\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '25:45:54' hour to second\",\n        \"2005-03-03\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '-4 2:4' day to minute\",\n        \"2003-07-29 10:50:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n    tester.checkScalar(\n        \"interval '5-3' year to month + date '2005-03-02'\",\n        \"2010-06-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '5-3' year to month\",\n        \"2008-11-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n    tester.checkScalar(\n        \"interval '5-3' year to month + timestamp '2003-08-02 12:54:01'\",\n        \"2008-11-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n  }\n","date":"2020-04-06 04:57:49","endLine":3539,"groupId":"10759","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testPlusIntervalOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testPlusIntervalOperator() {\n    tester.setFor(SqlStdOperatorTable.PLUS);\n    tester.checkScalar(\n        \"interval '2' day + interval '1' day\",\n        \"+3\",\n        \"INTERVAL DAY NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '1' minute\",\n        \"+2 00:01\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' day + interval '5' minute + interval '-3' second\",\n        \"+2 00:04:57.000000\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    tester.checkScalar(\n        \"interval '2' year + interval '1' month\",\n        \"+2-01\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    tester.checkNull(\n        \"interval '2' year + cast(null as interval month)\");\n\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1:1' hour to minute\",\n        \"13:04:01\",\n        \"TIME(0) NOT NULL\");\n    \r\n    \r\n    tester.checkScalar(\n        \"time '12:03:01' + interval '1' day\",\n        \"12:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:01' + interval '25' hour\",\n        \"13:03:01\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"time '12:03:01' + interval '25:0:1' hour to second\",\n        \"13:03:02\",\n        \"TIME(0) NOT NULL\");\n    tester.checkScalar(\n        \"interval '5' day + date '2005-03-02'\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '5' day\",\n        \"2005-03-07\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '5' hour\",\n        \"2005-03-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '25' hour\",\n        \"2005-03-03\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '25:45' hour to minute\",\n        \"2005-03-03\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"date '2005-03-02' + interval '25:45:54' hour to second\",\n        \"2005-03-03\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '-4 2:4' day to minute\",\n        \"2003-07-29 10:50:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n\n    \r\n    tester.checkScalar(\n        \"interval '5-3' year to month + date '2005-03-02'\",\n        \"2010-06-02\",\n        \"DATE NOT NULL\");\n    tester.checkScalar(\n        \"timestamp '2003-08-02 12:54:01' + interval '5-3' year to month\",\n        \"2008-11-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n    tester.checkScalar(\n        \"interval '5-3' year to month + timestamp '2003-08-02 12:54:01'\",\n        \"2008-11-02 12:54:01\",\n        \"TIMESTAMP(0) NOT NULL\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3457,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
