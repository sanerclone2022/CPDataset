[{"authorTime":"2015-10-07 05:10:22","codes":[{"authorDate":"2016-11-03 13:30:04","commitOrder":3,"curCode":"  @Override public RelDataType createStructType(Class type) {\n\n    final List<RelDataTypeField> list = new ArrayList<>();\n    for (Field field : type.getDeclaredFields()) {\n      if (!Modifier.isStatic(field.getModifiers())) {\n        \r\n        final Type fieldType = field.getType();\n        list.add(\n            new RelDataTypeFieldImpl(\n                field.getName(),\n                list.size(),\n                createType(fieldType)));\n      }\n    }\n    return canonize(new JavaRecordType(list, type));\n  }\n","date":"2018-02-17 02:18:02","endLine":65,"groupId":"14651","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createStructType","params":"(Classtype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ca/17342bd73155c6f1520db46bdd5a4fe5c32338.src","preCode":"  @Override public RelDataType createStructType(Class type) {\n\n    final List<RelDataTypeField> list = new ArrayList<>();\n    for (Field field : type.getDeclaredFields()) {\n      if (!Modifier.isStatic(field.getModifiers())) {\n        \r\n        final Type fieldType = field.getType();\n        list.add(\n            new RelDataTypeFieldImpl(\n                field.getName(),\n                list.size(),\n                createType(fieldType)));\n      }\n    }\n    return canonize(new JavaRecordType(list, type));\n  }\n","realPath":"geode/src/main/java/org/apache/calcite/adapter/geode/util/JavaTypeFactoryExtImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2015-10-07 05:10:22","commitOrder":3,"curCode":"  public RelDataType createStructType(Class type) {\n    final List<RelDataTypeField> list = new ArrayList<>();\n    for (Field field : type.getFields()) {\n      if (!Modifier.isStatic(field.getModifiers())) {\n        \r\n        final Type fieldType = fieldType(field);\n        list.add(\n            new RelDataTypeFieldImpl(\n                field.getName(),\n                list.size(),\n                createType(fieldType)));\n      }\n    }\n    return canonize(new JavaRecordType(list, type));\n  }\n","date":"2015-10-07 08:08:06","endLine":87,"groupId":"13350","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createStructType","params":"(Classtype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/45/e935ffae728729c27d65e7e781496f1c1d1188.src","preCode":"  public RelDataType createStructType(Class type) {\n    final List<RelDataTypeField> list = new ArrayList<>();\n    for (Field field : type.getFields()) {\n      if (!Modifier.isStatic(field.getModifiers())) {\n        \r\n        final Type fieldType = fieldType(field);\n        list.add(\n            new RelDataTypeFieldImpl(\n                field.getName(),\n                list.size(),\n                createType(fieldType)));\n      }\n    }\n    return canonize(new JavaRecordType(list, type));\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/JavaTypeFactoryImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"NB"}],"commitId":"707f4de9cafc474d0daf807b1e4c339f6eb42d7e","commitMessage":"@@@[CALCITE-2059] Apache Geode Adapter (Christian Tzolov)\n\n- Downgrade Geode from 1.4.0 to 1.3.0 - Geode server allows connections\n  only from clients with same or lower version\n- Add links to presentations and tutorials\n\nClose apache/calcite#581\n","date":"2018-02-17 02:18:02","modifiedFileCount":"0","status":"M","submitter":"Christian Tzolov"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2016-11-03 13:30:04","commitOrder":4,"curCode":"  @Override public RelDataType createStructType(Class type) {\n\n    final List<RelDataTypeField> list = new ArrayList<>();\n    for (Field field : type.getDeclaredFields()) {\n      if (!Modifier.isStatic(field.getModifiers())) {\n        \r\n        final Type fieldType = field.getType();\n        list.add(\n            new RelDataTypeFieldImpl(\n                field.getName(),\n                list.size(),\n                createType(fieldType)));\n      }\n    }\n    return canonize(new JavaRecordType(list, type));\n  }\n","date":"2018-02-17 02:18:02","endLine":65,"groupId":"10550","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createStructType","params":"(Classtype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ca/17342bd73155c6f1520db46bdd5a4fe5c32338.src","preCode":"  @Override public RelDataType createStructType(Class type) {\n\n    final List<RelDataTypeField> list = new ArrayList<>();\n    for (Field field : type.getDeclaredFields()) {\n      if (!Modifier.isStatic(field.getModifiers())) {\n        \r\n        final Type fieldType = field.getType();\n        list.add(\n            new RelDataTypeFieldImpl(\n                field.getName(),\n                list.size(),\n                createType(fieldType)));\n      }\n    }\n    return canonize(new JavaRecordType(list, type));\n  }\n","realPath":"geode/src/main/java/org/apache/calcite/adapter/geode/util/JavaTypeFactoryExtImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"N"},{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public RelDataType createStructType(Class type) {\n    final List<RelDataTypeField> list = new ArrayList<>();\n    for (Field field : type.getFields()) {\n      if (!Modifier.isStatic(field.getModifiers())) {\n        \r\n        final Type fieldType = fieldType(field);\n        list.add(\n            new RelDataTypeFieldImpl(\n                field.getName(),\n                list.size(),\n                createType(fieldType)));\n      }\n    }\n    return canonize(new JavaRecordType(list, type));\n  }\n","date":"2020-10-07 05:42:47","endLine":87,"groupId":"10550","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createStructType","params":"(Classtype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/9a/aef357493cc5f6d102df8f5f43bdd82c1bad3c.src","preCode":"  public RelDataType createStructType(Class type) {\n    final List<RelDataTypeField> list = new ArrayList<>();\n    for (Field field : type.getFields()) {\n      if (!Modifier.isStatic(field.getModifiers())) {\n        \r\n        final Type fieldType = fieldType(field);\n        list.add(\n            new RelDataTypeFieldImpl(\n                field.getName(),\n                list.size(),\n                createType(fieldType)));\n      }\n    }\n    return canonize(new JavaRecordType(list, type));\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/JavaTypeFactoryImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
