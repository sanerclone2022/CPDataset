[{"authorTime":"2017-04-11 08:43:36","codes":[{"authorDate":"2017-04-11 08:43:36","commitOrder":1,"curCode":"  protected CalciteSchema snapshot(CalciteSchema parent, long now) {\n    CalciteSchema snapshot = new CachingCalciteSchema(parent,\n        schema.snapshot(now), name, null, tableMap, latticeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, now);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","date":"2017-05-23 10:06:11","endLine":226,"groupId":"14657","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"snapshot","params":"(CalciteSchemaparent@longnow)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/3a/c142917edca803115df126a035ad67a12fb93d.src","preCode":"  protected CalciteSchema snapshot(CalciteSchema parent, long now) {\n    CalciteSchema snapshot = new CachingCalciteSchema(parent,\n        schema.snapshot(now), name, null, tableMap, latticeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, now);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/CachingCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"B"},{"authorDate":"2017-04-11 08:43:36","commitOrder":1,"curCode":"  protected CalciteSchema snapshot(CalciteSchema parent, long now) {\n    CalciteSchema snapshot = new SimpleCalciteSchema(parent,\n        schema.snapshot(now), name, null, tableMap, latticeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, now);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","date":"2017-05-23 10:06:11","endLine":164,"groupId":"14657","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"snapshot","params":"(CalciteSchemaparent@longnow)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/64/da6258deb254439fdcd2ca4f0bbb9235c63652.src","preCode":"  protected CalciteSchema snapshot(CalciteSchema parent, long now) {\n    CalciteSchema snapshot = new SimpleCalciteSchema(parent,\n        schema.snapshot(now), name, null, tableMap, latticeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, now);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/SimpleCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"}],"commitId":"4519ef6e599ebe9b1c182016bea62d0ac920ea1a","commitMessage":"@@@[CALCITE-1742] Create a read-consistent view of CalciteSchema for each statement compilation\n\nAdd interface Schema#snapshot(long).\n\nCalciteCatalogReader should not add resolved tables into\nCalciteSchema's explicit table map.\n\nClose apache/calcite#421\n","date":"2017-05-23 10:06:11","modifiedFileCount":"25","status":"B","submitter":"maryannxue"},{"authorTime":"2017-08-31 04:13:48","codes":[{"authorDate":"2017-08-31 04:13:48","commitOrder":2,"curCode":"  protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new CachingCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","date":"2017-08-31 04:13:48","endLine":227,"groupId":"8788","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"snapshot","params":"(CalciteSchemaparent@SchemaVersionversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/4c/61a21689cfbe15af9f31e7bbbf72df9833a027.src","preCode":"  protected CalciteSchema snapshot(CalciteSchema parent, long now) {\n    CalciteSchema snapshot = new CachingCalciteSchema(parent,\n        schema.snapshot(now), name, null, tableMap, latticeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, now);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/CachingCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2017-08-31 04:13:48","commitOrder":2,"curCode":"  protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new SimpleCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","date":"2017-08-31 04:13:48","endLine":165,"groupId":"8788","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"snapshot","params":"(CalciteSchemaparent@SchemaVersionversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/004c7715f91dc8f0f1803270737d047e1d3563.src","preCode":"  protected CalciteSchema snapshot(CalciteSchema parent, long now) {\n    CalciteSchema snapshot = new SimpleCalciteSchema(parent,\n        schema.snapshot(now), name, null, tableMap, latticeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, now);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/SimpleCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"}],"commitId":"35209136c5b21b83b1d2a3d4180a121f58e3c2f6","commitMessage":"@@@[CALCITE-1941] Refine interface Schema#snapshot()\n","date":"2017-08-31 04:13:48","modifiedFileCount":"14","status":"M","submitter":"maryannxue"},{"authorTime":"2018-01-31 11:37:56","codes":[{"authorDate":"2018-01-31 11:37:56","commitOrder":3,"curCode":"  protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new CachingCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap, typeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","date":"2018-04-21 02:11:59","endLine":256,"groupId":"8788","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"snapshot","params":"(CalciteSchemaparent@SchemaVersionversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/48/6f0d2650f653f15d67de1a5b4a7b64d3ea4584.src","preCode":"  protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new CachingCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/CachingCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"},{"authorDate":"2018-01-31 11:37:56","commitOrder":3,"curCode":"  protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new SimpleCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap, typeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","date":"2018-04-21 02:11:59","endLine":180,"groupId":"8788","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"snapshot","params":"(CalciteSchemaparent@SchemaVersionversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/ede8becb7398457a3df2929d47f044787a3d89.src","preCode":"  protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new SimpleCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/SimpleCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"}],"commitId":"570aca3d4fea34edcb04d0a5ec02f0fcf8925b0c","commitMessage":"@@@[CALCITE-2045] CREATE TYPE (Shuyi Chen)\n\nClose apache/calcite#638\n","date":"2018-04-21 02:11:59","modifiedFileCount":"31","status":"M","submitter":"Shuyi Chen"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new CachingCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap, typeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","date":"2020-10-07 05:42:47","endLine":257,"groupId":"8788","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"snapshot","params":"(CalciteSchemaparent@SchemaVersionversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/23/e144552a54f424780499bc4415efc1ad68ceee.src","preCode":"  protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new CachingCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap, typeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/CachingCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new SimpleCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap, typeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","date":"2020-10-07 05:42:47","endLine":181,"groupId":"8788","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"snapshot","params":"(CalciteSchemaparent@SchemaVersionversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ab/08915b408dc241fa10b9ff4102d0bf87b963d4.src","preCode":"  protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new SimpleCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap, typeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/SimpleCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  @Override protected CalciteSchema snapshot(@Nullable CalciteSchema parent,\n      SchemaVersion version) {\n    CalciteSchema snapshot = new CachingCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap, typeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","date":"2020-11-30 06:45:33","endLine":267,"groupId":"101697","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"snapshot","params":"(@NullableCalciteSchemaparent@SchemaVersionversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1c/62d913ab736b28c8722029874199d182b59aa0.src","preCode":"  @Override protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new CachingCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap, typeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/CachingCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  @Override protected CalciteSchema snapshot(@Nullable CalciteSchema parent,\n      SchemaVersion version) {\n    CalciteSchema snapshot = new SimpleCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap, typeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","date":"2020-11-30 06:45:33","endLine":189,"groupId":"101697","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"snapshot","params":"(@NullableCalciteSchemaparent@SchemaVersionversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/56/4240e221638e871be2543dddd71dee7d896321.src","preCode":"  @Override protected CalciteSchema snapshot(CalciteSchema parent, SchemaVersion version) {\n    CalciteSchema snapshot = new SimpleCalciteSchema(parent,\n        schema.snapshot(version), name, null, tableMap, latticeMap, typeMap,\n        functionMap, functionNames, nullaryFunctionMap, getPath());\n    for (CalciteSchema subSchema : subSchemaMap.map().values()) {\n      CalciteSchema subSchemaSnapshot = subSchema.snapshot(snapshot, version);\n      snapshot.subSchemaMap.put(subSchema.name, subSchemaSnapshot);\n    }\n    return snapshot;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/SimpleCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
