[{"authorTime":"2018-12-01 23:14:09","codes":[{"authorDate":"2018-12-01 23:14:09","commitOrder":1,"curCode":"  public void testSqlSingleDateWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue = DATE '2018-02-03'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue = DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue > DATE '2018-02-03'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue > DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue < DATE '2018-02-03'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue < DATE '2018-02-03'\"));\n  }\n","date":"2018-12-04 02:57:14","endLine":176,"groupId":"4865","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSqlSingleDateWhereFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/700e51fe2a5d6ed0e42250054d8b91503a47f7.src","preCode":"  public void testSqlSingleDateWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue = DATE '2018-02-03'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue = DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue > DATE '2018-02-03'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue > DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue < DATE '2018-02-03'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue < DATE '2018-02-03'\"));\n  }\n","realPath":"geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2018-12-01 23:14:09","commitOrder":1,"curCode":"  public void testSqlSingleTimestampWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\"));\n  }\n","date":"2018-12-04 02:57:14","endLine":271,"groupId":"4865","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSqlSingleTimestampWhereFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/700e51fe2a5d6ed0e42250054d8b91503a47f7.src","preCode":"  public void testSqlSingleTimestampWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\"));\n  }\n","realPath":"geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"B"}],"commitId":"be5404713bbcd8cdc19f2651af33707b895d2c04","commitMessage":"@@@[CALCITE-2709] In Geode adapter.  allow filtering on DATE.  TIME.  TIMESTAMP fields (Sandeep Chada)\n\nGeodeFilter changes to support filtering with datetime types (DATE. \nTIME.  TIMESTAMP).\n\nClose apache/calcite#952\n","date":"2018-12-04 02:57:14","modifiedFileCount":"3","status":"B","submitter":"chadasa"},{"authorTime":"2019-12-04 02:44:13","codes":[{"authorDate":"2019-12-04 02:44:13","commitOrder":2,"curCode":"  @Test public void testSqlSingleDateWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue = DATE '2018-02-03'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue = DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue > DATE '2018-02-03'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue > DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue < DATE '2018-02-03'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue < DATE '2018-02-03'\"));\n  }\n","date":"2019-12-14 23:57:27","endLine":192,"groupId":"4865","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSqlSingleDateWhereFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a2/a3853bedfd596cf39cba6c077889d606d49302.src","preCode":"  public void testSqlSingleDateWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue = DATE '2018-02-03'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue = DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue > DATE '2018-02-03'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue > DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue < DATE '2018-02-03'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue < DATE '2018-02-03'\"));\n  }\n","realPath":"geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2019-12-04 02:44:13","commitOrder":2,"curCode":"  @Test public void testSqlSingleTimestampWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\"));\n  }\n","date":"2019-12-14 23:57:27","endLine":283,"groupId":"4865","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSqlSingleTimestampWhereFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a2/a3853bedfd596cf39cba6c077889d606d49302.src","preCode":"  public void testSqlSingleTimestampWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\"));\n  }\n","realPath":"geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"}],"commitId":"571731b80a58eb095ebac7123285c375e7afff90","commitMessage":"@@@[CALCITE-3559] Update formatting: remove \"// End\" trailers.  move @Test from their own lines\n","date":"2019-12-14 23:57:27","modifiedFileCount":"1961","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testSqlSingleDateWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue = DATE '2018-02-03'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue = DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue > DATE '2018-02-03'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue > DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue < DATE '2018-02-03'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue < DATE '2018-02-03'\"));\n  }\n","date":"2020-04-06 04:57:49","endLine":192,"groupId":"10528","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSqlSingleDateWhereFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/9d/52fa1c1b77155e7b3ab457f5db79769422200c.src","preCode":"  @Test public void testSqlSingleDateWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue = DATE '2018-02-03'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue = DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue > DATE '2018-02-03'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue > DATE '2018-02-03'\"));\n\n    calciteAssert()\n        .query(\"SELECT dateValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE dateValue < DATE '2018-02-03'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT dateValue AS dateValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE dateValue < DATE '2018-02-03'\"));\n  }\n","realPath":"geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testSqlSingleTimestampWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\"));\n  }\n","date":"2020-04-06 04:57:49","endLine":283,"groupId":"10528","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSqlSingleTimestampWhereFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/9d/52fa1c1b77155e7b3ab457f5db79769422200c.src","preCode":"  @Test public void testSqlSingleTimestampWhereFilter() {\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(1)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue = TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(2)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue > TIMESTAMP '2018-02-03 02:22:33'\"));\n\n    calciteAssert()\n        .query(\"SELECT timestampValue\\n\"\n            + \"FROM geode.allDataTypesRegion\\n\"\n            + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\")\n        .returnsCount(0)\n        .queryContains(\n            GeodeAssertions.query(\"SELECT timestampValue AS timestampValue \"\n                + \"FROM /allDataTypesRegion \"\n                + \"WHERE timestampValue < TIMESTAMP '2018-02-03 02:22:33'\"));\n  }\n","realPath":"geode/src/test/java/org/apache/calcite/adapter/geode/rel/GeodeAllDataTypesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
