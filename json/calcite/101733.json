[{"authorTime":"2017-05-19 19:35:34","codes":[{"authorDate":"2017-03-29 14:36:43","commitOrder":3,"curCode":"  public static RexNode swapTableColumnReferences(final RexBuilder rexBuilder,\n      final RexNode node, final Map<RelTableRef, RelTableRef> tableMapping,\n      final Map<RexTableInputRef, Set<RexTableInputRef>> ec) {\n    RexShuttle visitor =\n        new RexShuttle() {\n          @Override public RexNode visitTableInputRef(RexTableInputRef inputRef) {\n            if (tableMapping != null) {\n              inputRef = RexTableInputRef.of(\n                  tableMapping.get(inputRef.getTableRef()),\n                  inputRef.getIndex(),\n                  inputRef.getType());\n            }\n            if (ec != null) {\n              Set<RexTableInputRef> s = ec.get(inputRef);\n              if (s != null) {\n                inputRef = s.iterator().next();\n              }\n            }\n            return inputRef;\n          }\n        };\n    return visitor.apply(node);\n  }\n","date":"2017-04-27 02:56:37","endLine":1917,"groupId":"4308","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"swapTableColumnReferences","params":"(finalRexBuilderrexBuilder@finalRexNodenode@finalMap<RelTableRef@RelTableRef>tableMapping@finalMap<RexTableInputRef@Set<RexTableInputRef>>ec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/95/ab2c21d6d60c8ee3c84695d1f2f86462ebc2f7.src","preCode":"  public static RexNode swapTableColumnReferences(final RexBuilder rexBuilder,\n      final RexNode node, final Map<RelTableRef, RelTableRef> tableMapping,\n      final Map<RexTableInputRef, Set<RexTableInputRef>> ec) {\n    RexShuttle visitor =\n        new RexShuttle() {\n          @Override public RexNode visitTableInputRef(RexTableInputRef inputRef) {\n            if (tableMapping != null) {\n              inputRef = RexTableInputRef.of(\n                  tableMapping.get(inputRef.getTableRef()),\n                  inputRef.getIndex(),\n                  inputRef.getType());\n            }\n            if (ec != null) {\n              Set<RexTableInputRef> s = ec.get(inputRef);\n              if (s != null) {\n                inputRef = s.iterator().next();\n              }\n            }\n            return inputRef;\n          }\n        };\n    return visitor.apply(node);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1895,"status":"NB"},{"authorDate":"2017-05-19 19:35:34","commitOrder":3,"curCode":"  public static RexNode swapColumnTableReferences(final RexBuilder rexBuilder,\n      final RexNode node, final Map<RexTableInputRef, Set<RexTableInputRef>> ec,\n      final Map<RelTableRef, RelTableRef> tableMapping) {\n    RexShuttle visitor =\n        new RexShuttle() {\n          @Override public RexNode visitTableInputRef(RexTableInputRef inputRef) {\n            if (ec != null) {\n              Set<RexTableInputRef> s = ec.get(inputRef);\n              if (s != null) {\n                inputRef = s.iterator().next();\n              }\n            }\n            if (tableMapping != null) {\n              inputRef = RexTableInputRef.of(\n                  tableMapping.get(inputRef.getTableRef()),\n                  inputRef.getIndex(),\n                  inputRef.getType());\n            }\n            return inputRef;\n          }\n        };\n    return visitor.apply(node);\n  }\n","date":"2017-05-19 19:37:07","endLine":2006,"groupId":"8269","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"swapColumnTableReferences","params":"(finalRexBuilderrexBuilder@finalRexNodenode@finalMap<RexTableInputRef@Set<RexTableInputRef>>ec@finalMap<RelTableRef@RelTableRef>tableMapping)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/91/6313b21d29e58aae2c199bc58ce9c037d9827a.src","preCode":"  public static RexNode swapColumnTableReferences(final RexBuilder rexBuilder,\n      final RexNode node, final Map<RexTableInputRef, Set<RexTableInputRef>> ec,\n      final Map<RelTableRef, RelTableRef> tableMapping) {\n    RexShuttle visitor =\n        new RexShuttle() {\n          @Override public RexNode visitTableInputRef(RexTableInputRef inputRef) {\n            if (ec != null) {\n              Set<RexTableInputRef> s = ec.get(inputRef);\n              if (s != null) {\n                inputRef = s.iterator().next();\n              }\n            }\n            if (tableMapping != null) {\n              inputRef = RexTableInputRef.of(\n                  tableMapping.get(inputRef.getTableRef()),\n                  inputRef.getIndex(),\n                  inputRef.getType());\n            }\n            return inputRef;\n          }\n        };\n    return visitor.apply(node);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1984,"status":"B"}],"commitId":"88da6a18c2f85841cd1466dc99632d9e001da568","commitMessage":"@@@[CALCITE-1797] Support view partial rewriting in aggregate materialized view rewriting\n\nIncludes cleanup and refactoring within AbstractMaterializedViewRule\n","date":"2017-05-19 19:37:07","modifiedFileCount":"3","status":"M","submitter":"Jesus Camacho Rodriguez"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  public static RexNode swapTableColumnReferences(final RexBuilder rexBuilder,\n      final RexNode node, final @Nullable Map<RelTableRef, RelTableRef> tableMapping,\n      final @Nullable Map<RexTableInputRef, Set<RexTableInputRef>> ec) {\n    RexShuttle visitor =\n        new RexShuttle() {\n          @Override public RexNode visitTableInputRef(RexTableInputRef inputRef) {\n            if (tableMapping != null) {\n              RexTableInputRef inputRefFinal = inputRef;\n              inputRef = RexTableInputRef.of(\n                  requireNonNull(tableMapping.get(inputRef.getTableRef()),\n                      () -> \"tableMapping.get(...) for \" + inputRefFinal.getTableRef()),\n                  inputRef.getIndex(),\n                  inputRef.getType());\n            }\n            if (ec != null) {\n              Set<RexTableInputRef> s = ec.get(inputRef);\n              if (s != null) {\n                inputRef = s.iterator().next();\n              }\n            }\n            return inputRef;\n          }\n        };\n    return visitor.apply(node);\n  }\n","date":"2020-11-30 06:45:33","endLine":2243,"groupId":"101733","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"swapTableColumnReferences","params":"(finalRexBuilderrexBuilder@finalRexNodenode@final@NullableMap<RelTableRef@RelTableRef>tableMapping@final@NullableMap<RexTableInputRef@Set<RexTableInputRef>>ec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/3194f8e20c05da6c323d27209a60257d16afcd.src","preCode":"  public static RexNode swapTableColumnReferences(final RexBuilder rexBuilder,\n      final RexNode node, final Map<RelTableRef, RelTableRef> tableMapping,\n      final Map<RexTableInputRef, Set<RexTableInputRef>> ec) {\n    RexShuttle visitor =\n        new RexShuttle() {\n          @Override public RexNode visitTableInputRef(RexTableInputRef inputRef) {\n            if (tableMapping != null) {\n              inputRef = RexTableInputRef.of(\n                  tableMapping.get(inputRef.getTableRef()),\n                  inputRef.getIndex(),\n                  inputRef.getType());\n            }\n            if (ec != null) {\n              Set<RexTableInputRef> s = ec.get(inputRef);\n              if (s != null) {\n                inputRef = s.iterator().next();\n              }\n            }\n            return inputRef;\n          }\n        };\n    return visitor.apply(node);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2219,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  public static RexNode swapColumnTableReferences(final RexBuilder rexBuilder,\n      final RexNode node, final Map<RexTableInputRef, ? extends @Nullable Set<RexTableInputRef>> ec,\n      final @Nullable Map<RelTableRef, RelTableRef> tableMapping) {\n    RexShuttle visitor =\n        new RexShuttle() {\n          @Override public RexNode visitTableInputRef(RexTableInputRef inputRef) {\n            if (ec != null) {\n              Set<RexTableInputRef> s = ec.get(inputRef);\n              if (s != null) {\n                inputRef = s.iterator().next();\n              }\n            }\n            if (tableMapping != null) {\n              RexTableInputRef inputRefFinal = inputRef;\n              inputRef = RexTableInputRef.of(\n                  requireNonNull(tableMapping.get(inputRef.getTableRef()),\n                      () -> \"tableMapping.get(...) for \" + inputRefFinal.getTableRef()),\n                  inputRef.getIndex(),\n                  inputRef.getType());\n            }\n            return inputRef;\n          }\n        };\n    return visitor.apply(node);\n  }\n","date":"2020-11-30 06:45:33","endLine":2275,"groupId":"101733","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"swapColumnTableReferences","params":"(finalRexBuilderrexBuilder@finalRexNodenode@finalMap<RexTableInputRef@?extends@NullableSet<RexTableInputRef>>ec@final@NullableMap<RelTableRef@RelTableRef>tableMapping)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/3194f8e20c05da6c323d27209a60257d16afcd.src","preCode":"  public static RexNode swapColumnTableReferences(final RexBuilder rexBuilder,\n      final RexNode node, final Map<RexTableInputRef, Set<RexTableInputRef>> ec,\n      final Map<RelTableRef, RelTableRef> tableMapping) {\n    RexShuttle visitor =\n        new RexShuttle() {\n          @Override public RexNode visitTableInputRef(RexTableInputRef inputRef) {\n            if (ec != null) {\n              Set<RexTableInputRef> s = ec.get(inputRef);\n              if (s != null) {\n                inputRef = s.iterator().next();\n              }\n            }\n            if (tableMapping != null) {\n              inputRef = RexTableInputRef.of(\n                  tableMapping.get(inputRef.getTableRef()),\n                  inputRef.getIndex(),\n                  inputRef.getType());\n            }\n            return inputRef;\n          }\n        };\n    return visitor.apply(node);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2251,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
