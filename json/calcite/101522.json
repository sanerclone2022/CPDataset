[{"authorTime":"2020-01-30 14:49:20","codes":[{"authorDate":"2020-01-30 14:49:20","commitOrder":1,"curCode":"  @Test void testSelectQueryWithGroupByEmpty2() {\n    final String query = \"select 42 as c from \\\"product\\\" group by ()\";\n    final String expected = \"SELECT 42 AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ()\";\n    final String expectedMySql = \"SELECT 42 AS `C`\\n\"\n        + \"FROM `foodmart`.`product`\\n\"\n        + \"GROUP BY ()\";\n    final String expectedPresto = \"SELECT 42 AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ()\";\n    sql(query)\n        .ok(expected)\n        .withMysql()\n        .ok(expectedMySql)\n        .withPresto()\n        .ok(expectedPresto);\n  }\n","date":"2020-06-11 15:17:17","endLine":305,"groupId":"8280","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectQueryWithGroupByEmpty2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d8/681dbcb1b9da8a56f6dc773d995c57e1d9626f.src","preCode":"  @Test void testSelectQueryWithGroupByEmpty2() {\n    final String query = \"select 42 as c from \\\"product\\\" group by ()\";\n    final String expected = \"SELECT 42 AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ()\";\n    final String expectedMySql = \"SELECT 42 AS `C`\\n\"\n        + \"FROM `foodmart`.`product`\\n\"\n        + \"GROUP BY ()\";\n    final String expectedPresto = \"SELECT 42 AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ()\";\n    sql(query)\n        .ok(expected)\n        .withMysql()\n        .ok(expectedMySql)\n        .withPresto()\n        .ok(expectedPresto);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"B"},{"authorDate":"2020-01-30 14:49:20","commitOrder":1,"curCode":"  @Test void testSelectQueryWithSingletonCubeNoOrderBy() {\n    final String query = \"select \\\"product_class_id\\\", count(*) as c\\n\"\n        + \"from \\\"product\\\"\\n\"\n        + \"group by cube(\\\"product_class_id\\\")\";\n    final String expected = \"SELECT \\\"product_class_id\\\", COUNT(*) AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ROLLUP(\\\"product_class_id\\\")\";\n    final String expectedMySql = \"SELECT `product_class_id`, COUNT(*) AS `C`\\n\"\n        + \"FROM `foodmart`.`product`\\n\"\n        + \"GROUP BY `product_class_id` WITH ROLLUP\";\n    final String expectedPresto = \"SELECT \\\"product_class_id\\\", COUNT(*) AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ROLLUP(\\\"product_class_id\\\")\";\n    sql(query)\n        .ok(expected)\n        .withMysql()\n        .ok(expectedMySql)\n        .withPresto()\n        .ok(expectedPresto);\n  }\n","date":"2020-06-11 15:17:17","endLine":470,"groupId":"1511","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelectQueryWithSingletonCubeNoOrderBy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d8/681dbcb1b9da8a56f6dc773d995c57e1d9626f.src","preCode":"  @Test void testSelectQueryWithSingletonCubeNoOrderBy() {\n    final String query = \"select \\\"product_class_id\\\", count(*) as c\\n\"\n        + \"from \\\"product\\\"\\n\"\n        + \"group by cube(\\\"product_class_id\\\")\";\n    final String expected = \"SELECT \\\"product_class_id\\\", COUNT(*) AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ROLLUP(\\\"product_class_id\\\")\";\n    final String expectedMySql = \"SELECT `product_class_id`, COUNT(*) AS `C`\\n\"\n        + \"FROM `foodmart`.`product`\\n\"\n        + \"GROUP BY `product_class_id` WITH ROLLUP\";\n    final String expectedPresto = \"SELECT \\\"product_class_id\\\", COUNT(*) AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ROLLUP(\\\"product_class_id\\\")\";\n    sql(query)\n        .ok(expected)\n        .withMysql()\n        .ok(expectedMySql)\n        .withPresto()\n        .ok(expectedPresto);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":451,"status":"B"}],"commitId":"f577b7e3d91191051cfdaade27e0a74f3603648a","commitMessage":"@@@[CALCITE-3724] Presto dialect implementation\n\nFixup (by Danny):\n- Add a new tool RelToSqlConverterUtil#specialOperatorByName and remove\nClickHouseSqlDialect.CLICKHOUSE_SUBSTRING\n- Remove the common code in PrestoSqlDialect and reuse codes from other\ndialect instances\n\nclose apache#calcite#1776\n","date":"2020-06-11 15:17:17","modifiedFileCount":"5","status":"B","submitter":"XuQianJin-Stars"},{"authorTime":"2021-08-12 14:23:53","codes":[{"authorDate":"2021-08-12 14:23:53","commitOrder":2,"curCode":"  @Test void testSelectQueryWithGroupByEmpty2() {\n    final String query = \"select 42 as c from \\\"product\\\" group by ()\";\n    final String expected = \"SELECT 42 AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ()\";\n    final String expectedMysql = \"SELECT 42 AS `C`\\n\"\n        + \"FROM `foodmart`.`product`\\n\"\n        + \"GROUP BY ()\";\n    final String expectedPresto = \"SELECT 42 AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ()\";\n    sql(query)\n        .ok(expected)\n        .withMysql().ok(expectedMysql)\n        .withPresto().ok(expectedPresto);\n  }\n","date":"2021-08-14 15:52:54","endLine":426,"groupId":"101522","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectQueryWithGroupByEmpty2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/98/f75c93796391bbde612ea6420ab122a1868587.src","preCode":"  @Test void testSelectQueryWithGroupByEmpty2() {\n    final String query = \"select 42 as c from \\\"product\\\" group by ()\";\n    final String expected = \"SELECT 42 AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ()\";\n    final String expectedMySql = \"SELECT 42 AS `C`\\n\"\n        + \"FROM `foodmart`.`product`\\n\"\n        + \"GROUP BY ()\";\n    final String expectedPresto = \"SELECT 42 AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ()\";\n    sql(query)\n        .ok(expected)\n        .withMysql()\n        .ok(expectedMySql)\n        .withPresto()\n        .ok(expectedPresto);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"M"},{"authorDate":"2021-08-12 14:23:53","commitOrder":2,"curCode":"  @Test void testSelectQueryWithSingletonCubeNoOrderBy() {\n    final String query = \"select \\\"product_class_id\\\", count(*) as c\\n\"\n        + \"from \\\"product\\\"\\n\"\n        + \"group by cube(\\\"product_class_id\\\")\";\n    final String expected = \"SELECT \\\"product_class_id\\\", COUNT(*) AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ROLLUP(\\\"product_class_id\\\")\";\n    final String expectedMysql = \"SELECT `product_class_id`, COUNT(*) AS `C`\\n\"\n        + \"FROM `foodmart`.`product`\\n\"\n        + \"GROUP BY `product_class_id` WITH ROLLUP\";\n    final String expectedPresto = \"SELECT \\\"product_class_id\\\", COUNT(*) AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ROLLUP(\\\"product_class_id\\\")\";\n    sql(query)\n        .ok(expected)\n        .withMysql().ok(expectedMysql)\n        .withPresto().ok(expectedPresto);\n  }\n","date":"2021-08-14 15:52:54","endLine":581,"groupId":"101522","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelectQueryWithSingletonCubeNoOrderBy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/98/f75c93796391bbde612ea6420ab122a1868587.src","preCode":"  @Test void testSelectQueryWithSingletonCubeNoOrderBy() {\n    final String query = \"select \\\"product_class_id\\\", count(*) as c\\n\"\n        + \"from \\\"product\\\"\\n\"\n        + \"group by cube(\\\"product_class_id\\\")\";\n    final String expected = \"SELECT \\\"product_class_id\\\", COUNT(*) AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ROLLUP(\\\"product_class_id\\\")\";\n    final String expectedMySql = \"SELECT `product_class_id`, COUNT(*) AS `C`\\n\"\n        + \"FROM `foodmart`.`product`\\n\"\n        + \"GROUP BY `product_class_id` WITH ROLLUP\";\n    final String expectedPresto = \"SELECT \\\"product_class_id\\\", COUNT(*) AS \\\"C\\\"\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\"\\n\"\n        + \"GROUP BY ROLLUP(\\\"product_class_id\\\")\";\n    sql(query)\n        .ok(expected)\n        .withMysql()\n        .ok(expectedMySql)\n        .withPresto()\n        .ok(expectedPresto);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":564,"status":"M"}],"commitId":"dff28d1ce49871a451c7ff3e740259441da7c72a","commitMessage":"@@@Cosmetic\n\nIn RelToSqlConverterTest. \nmerge methods that test the same query in several dialects;\nmerge '.withXxx().ok(expectedXxx)' into one line. \nand sort such lines alphabetically;\nnormalize 'expectedPostgreSQL' and 'expectedPostgreSql' to\n'expectedPostgresql'.  and so forth.\n","date":"2021-08-14 15:52:54","modifiedFileCount":"2","status":"M","submitter":"Julian Hyde"}]
