[{"authorTime":"2020-06-09 11:32:28","codes":[{"authorDate":"2020-06-09 11:32:28","commitOrder":1,"curCode":"  @Test void testSortCalcDerive1() {\n    final String sql = \"select * from\\n\"\n        + \"(select ename, job, max_sal + 1 from\\n\"\n        + \"(select ename, job, max(sal) as max_sal from sales.emp \"\n        + \"group by ename, job) t) r\\n\"\n        + \"join sales.bonus s on r.job=s.job and r.ename=s.ename\";\n    Query.create(sql)\n        .addRule(ProjectToCalcRule.INSTANCE)\n        .addRule(EnumerableRules.ENUMERABLE_CALC_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_PROJECT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .check();\n  }\n","date":"2020-06-12 16:31:30","endLine":668,"groupId":"12620","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSortCalcDerive1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ba/c5e4d427b5b8b510b437e05310b28b4ae6937d.src","preCode":"  @Test void testSortCalcDerive1() {\n    final String sql = \"select * from\\n\"\n        + \"(select ename, job, max_sal + 1 from\\n\"\n        + \"(select ename, job, max(sal) as max_sal from sales.emp \"\n        + \"group by ename, job) t) r\\n\"\n        + \"join sales.bonus s on r.job=s.job and r.ename=s.ename\";\n    Query.create(sql)\n        .addRule(ProjectToCalcRule.INSTANCE)\n        .addRule(EnumerableRules.ENUMERABLE_CALC_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_PROJECT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/TopDownOptTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":655,"status":"B"},{"authorDate":"2020-06-09 11:32:28","commitOrder":1,"curCode":"  @Test void testSortCalcDerive3() {\n    final String sql = \"select * from\\n\"\n        + \"(select ename, cast(job as varchar) as job, sal + 1 from\\n\"\n        + \"(select ename, job, sal from sales.emp limit 100) t) r\\n\"\n        + \"join sales.bonus s on r.job=s.job and r.ename=s.ename\";\n    Query.create(sql)\n        .addRule(ProjectToCalcRule.INSTANCE)\n        .addRule(EnumerableRules.ENUMERABLE_CALC_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_PROJECT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .check();\n  }\n","date":"2020-06-12 16:31:30","endLine":695,"groupId":"12620","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSortCalcDerive3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ba/c5e4d427b5b8b510b437e05310b28b4ae6937d.src","preCode":"  @Test void testSortCalcDerive3() {\n    final String sql = \"select * from\\n\"\n        + \"(select ename, cast(job as varchar) as job, sal + 1 from\\n\"\n        + \"(select ename, job, sal from sales.emp limit 100) t) r\\n\"\n        + \"join sales.bonus s on r.job=s.job and r.ename=s.ename\";\n    Query.create(sql)\n        .addRule(ProjectToCalcRule.INSTANCE)\n        .addRule(EnumerableRules.ENUMERABLE_CALC_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_PROJECT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/TopDownOptTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":683,"status":"B"}],"commitId":"3c317b608344ab2ebd6d65b67f647bddf87376b3","commitMessage":"@@@[CALCITE-4016] Support trait propagation for EnumerableCalc\n","date":"2020-06-12 16:31:30","modifiedFileCount":"3","status":"B","submitter":"Chunwei Lei"},{"authorTime":"2020-07-09 04:45:12","codes":[{"authorDate":"2020-07-09 04:45:12","commitOrder":2,"curCode":"  @Test void testSortCalcDerive1() {\n    final String sql = \"select * from\\n\"\n        + \"(select ename, job, max_sal + 1 from\\n\"\n        + \"(select ename, job, max(sal) as max_sal from sales.emp \"\n        + \"group by ename, job) t) r\\n\"\n        + \"join sales.bonus s on r.job=s.job and r.ename=s.ename\";\n    Query.create(sql)\n        .addRule(CoreRules.PROJECT_TO_CALC)\n        .addRule(EnumerableRules.ENUMERABLE_CALC_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_PROJECT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .check();\n  }\n","date":"2020-07-12 06:58:28","endLine":646,"groupId":"101228","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSortCalcDerive1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/49/63a315c48bee68bc0721cbb87e2ae575779c80.src","preCode":"  @Test void testSortCalcDerive1() {\n    final String sql = \"select * from\\n\"\n        + \"(select ename, job, max_sal + 1 from\\n\"\n        + \"(select ename, job, max(sal) as max_sal from sales.emp \"\n        + \"group by ename, job) t) r\\n\"\n        + \"join sales.bonus s on r.job=s.job and r.ename=s.ename\";\n    Query.create(sql)\n        .addRule(ProjectToCalcRule.INSTANCE)\n        .addRule(EnumerableRules.ENUMERABLE_CALC_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_PROJECT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/TopDownOptTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":633,"status":"M"},{"authorDate":"2020-07-09 04:45:12","commitOrder":2,"curCode":"  @Test void testSortCalcDerive3() {\n    final String sql = \"select * from\\n\"\n        + \"(select ename, cast(job as varchar) as job, sal + 1 from\\n\"\n        + \"(select ename, job, sal from sales.emp limit 100) t) r\\n\"\n        + \"join sales.bonus s on r.job=s.job and r.ename=s.ename\";\n    Query.create(sql)\n        .addRule(CoreRules.PROJECT_TO_CALC)\n        .addRule(EnumerableRules.ENUMERABLE_CALC_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_PROJECT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .check();\n  }\n","date":"2020-07-12 06:58:28","endLine":673,"groupId":"101228","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSortCalcDerive3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/49/63a315c48bee68bc0721cbb87e2ae575779c80.src","preCode":"  @Test void testSortCalcDerive3() {\n    final String sql = \"select * from\\n\"\n        + \"(select ename, cast(job as varchar) as job, sal + 1 from\\n\"\n        + \"(select ename, job, sal from sales.emp limit 100) t) r\\n\"\n        + \"join sales.bonus s on r.job=s.job and r.ename=s.ename\";\n    Query.create(sql)\n        .addRule(ProjectToCalcRule.INSTANCE)\n        .addRule(EnumerableRules.ENUMERABLE_CALC_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_SORT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_PROJECT_RULE)\n        .removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/TopDownOptTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":661,"status":"M"}],"commitId":"23b26b6287315cc2cd236e705bb651077488fc5c","commitMessage":"@@@In preparation for [CALCITE-3923] and [CALCITE-4079].  deprecate fields and methods that will be removed between 1.24 and 1.25\n\nAlso.  in RelNode.  change some methods from 'to removed before 2.0'\nto 'to be removed before 1.25'. The methods are sDistinct(). \nisKey(ImmutableBitSet).  getQuery().  getRows().  getVariablesStopped(). \ncomputeSelfCost().  isValid(boolean).  getCollationList().  getChildExps().\n","date":"2020-07-12 06:58:28","modifiedFileCount":"137","status":"M","submitter":"Julian Hyde"}]
