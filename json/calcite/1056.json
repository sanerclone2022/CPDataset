[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testTakeEnumerableGreaterThanLength() {\n    final Enumerable<Department> enumerableDepts =\n        Linq4j.asEnumerable(depts);\n    final List<Department> depList =\n        EnumerableDefaults.take(enumerableDepts, 5).toList();\n    assertEquals(3, depList.size());\n    assertEquals(depts[0], depList.get(0));\n    assertEquals(depts[1], depList.get(1));\n    assertEquals(depts[2], depList.get(2));\n  }\n","date":"2014-11-14 09:39:34","endLine":1131,"groupId":"10811","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTakeEnumerableGreaterThanLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b9/ce9619e1e3572cbab9672c4293786811c1f2fc.src","preCode":"  @Test public void testTakeEnumerableGreaterThanLength() {\n    final Enumerable<Department> enumerableDepts =\n        Linq4j.asEnumerable(depts);\n    final List<Department> depList =\n        EnumerableDefaults.take(enumerableDepts, 5).toList();\n    assertEquals(3, depList.size());\n    assertEquals(depts[0], depList.get(0));\n    assertEquals(depts[1], depList.get(1));\n    assertEquals(depts[2], depList.get(2));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1122,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testTakeQueryableGreaterThanLength() {\n    final Enumerable<Department> enumerableDepts =\n        Linq4j.asEnumerable(depts);\n    final List<Department> depList =\n        EnumerableDefaults.take(enumerableDepts, 5).toList();\n    assertEquals(3, depList.size());\n    assertEquals(depts[0], depList.get(0));\n    assertEquals(depts[1], depList.get(1));\n    assertEquals(depts[2], depList.get(2));\n  }\n","date":"2014-11-14 09:39:34","endLine":1142,"groupId":"10811","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTakeQueryableGreaterThanLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b9/ce9619e1e3572cbab9672c4293786811c1f2fc.src","preCode":"  @Test public void testTakeQueryableGreaterThanLength() {\n    final Enumerable<Department> enumerableDepts =\n        Linq4j.asEnumerable(depts);\n    final List<Department> depList =\n        EnumerableDefaults.take(enumerableDepts, 5).toList();\n    assertEquals(3, depList.size());\n    assertEquals(depts[0], depList.get(0));\n    assertEquals(depts[1], depList.get(1));\n    assertEquals(depts[2], depList.get(2));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1133,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testTakeEnumerableGreaterThanLength() {\n    final Enumerable<Department> enumerableDepts =\n        Linq4j.asEnumerable(depts);\n    final List<Department> depList =\n        EnumerableDefaults.take(enumerableDepts, 5).toList();\n    assertEquals(3, depList.size());\n    assertEquals(depts[0], depList.get(0));\n    assertEquals(depts[1], depList.get(1));\n    assertEquals(depts[2], depList.get(2));\n  }\n","date":"2020-04-06 04:57:49","endLine":1321,"groupId":"1056","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testTakeEnumerableGreaterThanLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/99/176b0c20dace781059f888f45af815a228f4c7.src","preCode":"  @Test public void testTakeEnumerableGreaterThanLength() {\n    final Enumerable<Department> enumerableDepts =\n        Linq4j.asEnumerable(depts);\n    final List<Department> depList =\n        EnumerableDefaults.take(enumerableDepts, 5).toList();\n    assertEquals(3, depList.size());\n    assertEquals(depts[0], depList.get(0));\n    assertEquals(depts[1], depList.get(1));\n    assertEquals(depts[2], depList.get(2));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1312,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testTakeQueryableGreaterThanLength() {\n    final Enumerable<Department> enumerableDepts =\n        Linq4j.asEnumerable(depts);\n    final List<Department> depList =\n        EnumerableDefaults.take(enumerableDepts, 5).toList();\n    assertEquals(3, depList.size());\n    assertEquals(depts[0], depList.get(0));\n    assertEquals(depts[1], depList.get(1));\n    assertEquals(depts[2], depList.get(2));\n  }\n","date":"2020-04-06 04:57:49","endLine":1332,"groupId":"1056","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testTakeQueryableGreaterThanLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/99/176b0c20dace781059f888f45af815a228f4c7.src","preCode":"  @Test public void testTakeQueryableGreaterThanLength() {\n    final Enumerable<Department> enumerableDepts =\n        Linq4j.asEnumerable(depts);\n    final List<Department> depList =\n        EnumerableDefaults.take(enumerableDepts, 5).toList();\n    assertEquals(3, depList.size());\n    assertEquals(depts[0], depList.get(0));\n    assertEquals(depts[1], depList.get(1));\n    assertEquals(depts[2], depList.get(2));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1323,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
