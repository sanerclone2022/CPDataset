[{"authorTime":"2016-01-26 13:42:14","codes":[{"authorDate":"2019-12-17 11:45:04","commitOrder":3,"curCode":"    protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      inheritPaths.forEach(inheritPath -> inheritPath.right.push(i));\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        inheritPaths.forEach(inheritPath -> inheritPath.right.pop());\n      }\n    }\n","date":"2019-12-18 11:01:50","endLine":3782,"groupId":"1794","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitChild","params":"(RelNodeparent@inti@RelNodechild)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d5/7b5a5c18ab95c39494ac65375e9d7187cc37fa.src","preCode":"    protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      inheritPaths.forEach(inheritPath -> inheritPath.right.push(i));\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        inheritPaths.forEach(inheritPath -> inheritPath.right.pop());\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3769,"status":"B"},{"authorDate":"2016-01-26 13:42:14","commitOrder":3,"curCode":"  protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n    stack.push(parent);\n    try {\n      RelNode child2 = child.accept(this);\n      if (child2 != child) {\n        final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n        newInputs.set(i, child2);\n        return parent.copy(parent.getTraitSet(), newInputs);\n      }\n      return parent;\n    } finally {\n      stack.pop();\n    }\n  }\n","date":"2016-01-27 03:53:34","endLine":64,"groupId":"1794","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitChild","params":"(RelNodeparent@inti@RelNodechild)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a2/8f2b55cb1f34518f606e1e105d57871aac1131.src","preCode":"  protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n    stack.push(parent);\n    try {\n      RelNode child2 = child.accept(this);\n      if (child2 != child) {\n        final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n        newInputs.set(i, child2);\n        return parent.copy(parent.getTraitSet(), newInputs);\n      }\n      return parent;\n    } finally {\n      stack.pop();\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/RelShuttleImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"NB"}],"commitId":"0c7c1ec088497c4d21d402ffa2eb6219d777dd73","commitMessage":"@@@[CALCITE-3590] Support SQL hints for Aggregate (Shuo Cheng)\n\nIn CALCITE-482.  hints are only supported for Project.  Join and\nTableScan. It's also necessary to support hints for Aggregate so as to\nenable fine grained Aggregate configuration.  i.e..  two-phase\naggregation.\n\nSELECT /*+ AGG_STRATEGY(TWO_PHASE) */\ndep_id. \ngrade. \navg(annual_salary). \nmin(annual_salary). \nmax(annual_salary)\nFROM T\nGROUP BY dep_id.  grade;\n\nFix-up (by Danny):\n* Some refactoring for RelOptUtil#copyRelHints;\n* Add document for RelHintPropagateShuttle#visitHintable;\n* Make RelHintPropagateShuttle and ResetHintsShuttle extend RelHomogeneousShuttle\nso that we do not need to match specific relational expressions.\n\nclose apache/calcite#1669\n","date":"2019-12-18 11:01:50","modifiedFileCount":"12","status":"M","submitter":"shuo.cs"},{"authorTime":"2016-01-26 13:42:14","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"    @Override protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      inheritPaths.forEach(inheritPath -> inheritPath.right.push(i));\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        inheritPaths.forEach(inheritPath -> inheritPath.right.pop());\n      }\n    }\n","date":"2020-10-07 05:42:47","endLine":3871,"groupId":"121898","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitChild","params":"(RelNodeparent@inti@RelNodechild)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/83d724ae1a6b6b6fed862b3776ef36b6c71010.src","preCode":"    protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n      inheritPaths.forEach(inheritPath -> inheritPath.right.push(i));\n      try {\n        RelNode child2 = child.accept(this);\n        if (child2 != child) {\n          final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n          newInputs.set(i, child2);\n          return parent.copy(parent.getTraitSet(), newInputs);\n        }\n        return parent;\n      } finally {\n        inheritPaths.forEach(inheritPath -> inheritPath.right.pop());\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/RelOptUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3858,"status":"M"},{"authorDate":"2016-01-26 13:42:14","commitOrder":4,"curCode":"  protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n    stack.push(parent);\n    try {\n      RelNode child2 = child.accept(this);\n      if (child2 != child) {\n        final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n        newInputs.set(i, child2);\n        return parent.copy(parent.getTraitSet(), newInputs);\n      }\n      return parent;\n    } finally {\n      stack.pop();\n    }\n  }\n","date":"2016-01-27 03:53:34","endLine":64,"groupId":"121898","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitChild","params":"(RelNodeparent@inti@RelNodechild)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a2/8f2b55cb1f34518f606e1e105d57871aac1131.src","preCode":"  protected RelNode visitChild(RelNode parent, int i, RelNode child) {\n    stack.push(parent);\n    try {\n      RelNode child2 = child.accept(this);\n      if (child2 != child) {\n        final List<RelNode> newInputs = new ArrayList<>(parent.getInputs());\n        newInputs.set(i, child2);\n        return parent.copy(parent.getTraitSet(), newInputs);\n      }\n      return parent;\n    } finally {\n      stack.pop();\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/RelShuttleImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
