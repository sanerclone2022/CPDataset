[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes =\n        SqlTypeUtil.deriveAndCollectTypes(\n            callBinding.getValidator(),\n            callBinding.getScope(),\n            callBinding.getCall().getOperandList());\n    if (argTypes.size() == 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresTwoOrMoreArgs());\n    }\n    if (argTypes.size() % 2 > 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresEvenArgCount());\n    }\n    final Pair<RelDataType, RelDataType> componentType =\n        getComponentTypes(\n            callBinding.getTypeFactory(), argTypes);\n    if (null == componentType.left || null == componentType.right) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2014-11-14 09:39:34","endLine":80,"groupId":"13182","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkOperandTypes","params":"(SqlCallBindingcallBinding@booleanthrowOnFailure)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e8/6df482d2fb90bcf1591731fb01a919f6250e5e.src","preCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes =\n        SqlTypeUtil.deriveAndCollectTypes(\n            callBinding.getValidator(),\n            callBinding.getScope(),\n            callBinding.getCall().getOperandList());\n    if (argTypes.size() == 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresTwoOrMoreArgs());\n    }\n    if (argTypes.size() % 2 > 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresEvenArgCount());\n    }\n    final Pair<RelDataType, RelDataType> componentType =\n        getComponentTypes(\n            callBinding.getTypeFactory(), argTypes);\n    if (null == componentType.left || null == componentType.right) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlMapValueConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes =\n        SqlTypeUtil.deriveAndCollectTypes(\n            callBinding.getValidator(),\n            callBinding.getScope(),\n            callBinding.getCall().getOperandList());\n    final RelDataType componentType =\n        getComponentType(\n            callBinding.getTypeFactory(),\n            argTypes);\n    if (null == componentType) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2014-11-14 09:39:34","endLine":93,"groupId":"15260","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkOperandTypes","params":"(SqlCallBindingcallBinding@booleanthrowOnFailure)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f0/6d74402031c5d950ebdd1f10d656e330e33edc.src","preCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes =\n        SqlTypeUtil.deriveAndCollectTypes(\n            callBinding.getValidator(),\n            callBinding.getScope(),\n            callBinding.getCall().getOperandList());\n    final RelDataType componentType =\n        getComponentType(\n            callBinding.getTypeFactory(),\n            argTypes);\n    if (null == componentType) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlMultisetQueryConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2015-10-28 13:04:05","codes":[{"authorDate":"2015-10-28 13:04:05","commitOrder":2,"curCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes =\n        SqlTypeUtil.deriveAndCollectTypes(\n            callBinding.getValidator(),\n            callBinding.getScope(),\n            callBinding.operands());\n    if (argTypes.size() == 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresTwoOrMoreArgs());\n    }\n    if (argTypes.size() % 2 > 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresEvenArgCount());\n    }\n    final Pair<RelDataType, RelDataType> componentType =\n        getComponentTypes(\n            callBinding.getTypeFactory(), argTypes);\n    if (null == componentType.left || null == componentType.right) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2015-11-01 06:09:05","endLine":81,"groupId":"13182","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkOperandTypes","params":"(SqlCallBindingcallBinding@booleanthrowOnFailure)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/29/45038764464a00342daf4c66c582613d6fdd27.src","preCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes =\n        SqlTypeUtil.deriveAndCollectTypes(\n            callBinding.getValidator(),\n            callBinding.getScope(),\n            callBinding.getCall().getOperandList());\n    if (argTypes.size() == 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresTwoOrMoreArgs());\n    }\n    if (argTypes.size() % 2 > 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresEvenArgCount());\n    }\n    final Pair<RelDataType, RelDataType> componentType =\n        getComponentTypes(\n            callBinding.getTypeFactory(), argTypes);\n    if (null == componentType.left || null == componentType.right) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlMapValueConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2015-10-28 13:04:05","commitOrder":2,"curCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes =\n        SqlTypeUtil.deriveAndCollectTypes(\n            callBinding.getValidator(),\n            callBinding.getScope(),\n            callBinding.operands());\n    final RelDataType componentType =\n        getComponentType(\n            callBinding.getTypeFactory(),\n            argTypes);\n    if (null == componentType) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2015-11-01 06:09:05","endLine":104,"groupId":"4382","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkOperandTypes","params":"(SqlCallBindingcallBinding@booleanthrowOnFailure)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/76/b09feb61b1ae3666142c684d67759f70dfa86b.src","preCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes =\n        SqlTypeUtil.deriveAndCollectTypes(\n            callBinding.getValidator(),\n            callBinding.getScope(),\n            callBinding.getCall().getOperandList());\n    final RelDataType componentType =\n        getComponentType(\n            callBinding.getTypeFactory(),\n            argTypes);\n    if (null == componentType) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlMultisetQueryConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"d012b245e4e040ae94bb3d7045cf4d71af8ac279","commitMessage":"@@@[CALCITE-941] Named.  optional and DEFAULT arguments to function calls\n","date":"2015-11-01 06:09:05","modifiedFileCount":"50","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-09-28 02:45:26","codes":[{"authorDate":"2020-09-28 02:45:26","commitOrder":3,"curCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes = SqlTypeUtil.deriveType(callBinding, callBinding.operands());\n    if (argTypes.size() == 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresTwoOrMoreArgs());\n    }\n    if (argTypes.size() % 2 > 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresEvenArgCount());\n    }\n    final Pair<RelDataType, RelDataType> componentType =\n        getComponentTypes(\n            callBinding.getTypeFactory(), argTypes);\n    if (null == componentType.left || null == componentType.right) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2020-09-30 16:51:12","endLine":77,"groupId":"13182","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"checkOperandTypes","params":"(SqlCallBindingcallBinding@booleanthrowOnFailure)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/7f/e4db7900edf11f9a9bbc86189bf5571704e750.src","preCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes =\n        SqlTypeUtil.deriveAndCollectTypes(\n            callBinding.getValidator(),\n            callBinding.getScope(),\n            callBinding.operands());\n    if (argTypes.size() == 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresTwoOrMoreArgs());\n    }\n    if (argTypes.size() % 2 > 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresEvenArgCount());\n    }\n    final Pair<RelDataType, RelDataType> componentType =\n        getComponentTypes(\n            callBinding.getTypeFactory(), argTypes);\n    if (null == componentType.left || null == componentType.right) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlMapValueConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2020-09-28 02:45:26","commitOrder":3,"curCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes = SqlTypeUtil.deriveType(callBinding, callBinding.operands());\n    final RelDataType componentType =\n        getComponentType(\n            callBinding.getTypeFactory(),\n            argTypes);\n    if (null == componentType) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2020-09-30 16:51:12","endLine":100,"groupId":"4382","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"checkOperandTypes","params":"(SqlCallBindingcallBinding@booleanthrowOnFailure)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/72/a76df26ec8d87e9ea43c1b3c5280a8d41730c0.src","preCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes =\n        SqlTypeUtil.deriveAndCollectTypes(\n            callBinding.getValidator(),\n            callBinding.getScope(),\n            callBinding.operands());\n    final RelDataType componentType =\n        getComponentType(\n            callBinding.getTypeFactory(),\n            argTypes);\n    if (null == componentType) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlMultisetQueryConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"14d5e3b0dfdba70a24cb5486275a1c973efa347c","commitMessage":"@@@[CALCITE-4288] Create SqlTypeUtil#deriveType(SqlCallBinding) to make type computation simpler\n","date":"2020-09-30 16:51:12","modifiedFileCount":"16","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes = SqlTypeUtil.deriveType(callBinding, callBinding.operands());\n    if (argTypes.size() == 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresTwoOrMoreArgs());\n    }\n    if (argTypes.size() % 2 > 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresEvenArgCount());\n    }\n    final Pair<RelDataType, RelDataType> componentType =\n        getComponentTypes(\n            callBinding.getTypeFactory(), argTypes);\n    if (null == componentType.left || null == componentType.right) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2020-10-07 05:42:47","endLine":77,"groupId":"13182","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"checkOperandTypes","params":"(SqlCallBindingcallBinding@booleanthrowOnFailure)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/61/300d1b910afb5290937eafc166d4df6cc08525.src","preCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes = SqlTypeUtil.deriveType(callBinding, callBinding.operands());\n    if (argTypes.size() == 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresTwoOrMoreArgs());\n    }\n    if (argTypes.size() % 2 > 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresEvenArgCount());\n    }\n    final Pair<RelDataType, RelDataType> componentType =\n        getComponentTypes(\n            callBinding.getTypeFactory(), argTypes);\n    if (null == componentType.left || null == componentType.right) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlMapValueConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes = SqlTypeUtil.deriveType(callBinding, callBinding.operands());\n    final RelDataType componentType =\n        getComponentType(\n            callBinding.getTypeFactory(),\n            argTypes);\n    if (null == componentType) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2020-10-07 05:42:47","endLine":100,"groupId":"4382","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"checkOperandTypes","params":"(SqlCallBindingcallBinding@booleanthrowOnFailure)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2e/aec975a9bd10a0affbcb9f44dc0b73883407f5.src","preCode":"  public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes = SqlTypeUtil.deriveType(callBinding, callBinding.operands());\n    final RelDataType componentType =\n        getComponentType(\n            callBinding.getTypeFactory(),\n            argTypes);\n    if (null == componentType) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlMultisetQueryConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  @Override public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes = SqlTypeUtil.deriveType(callBinding, callBinding.operands());\n    if (argTypes.size() == 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresTwoOrMoreArgs());\n    }\n    if (argTypes.size() % 2 > 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresEvenArgCount());\n    }\n    final Pair<@Nullable RelDataType, @Nullable RelDataType> componentType =\n        getComponentTypes(\n            callBinding.getTypeFactory(), argTypes);\n    if (null == componentType.left || null == componentType.right) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2020-11-30 06:45:33","endLine":78,"groupId":"101779","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"checkOperandTypes","params":"(SqlCallBindingcallBinding@booleanthrowOnFailure)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e5/f2c9318fd4c042da062f99ab4e1b794b3e9bfc.src","preCode":"  @Override public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes = SqlTypeUtil.deriveType(callBinding, callBinding.operands());\n    if (argTypes.size() == 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresTwoOrMoreArgs());\n    }\n    if (argTypes.size() % 2 > 0) {\n      throw callBinding.newValidationError(RESOURCE.mapRequiresEvenArgCount());\n    }\n    final Pair<RelDataType, RelDataType> componentType =\n        getComponentTypes(\n            callBinding.getTypeFactory(), argTypes);\n    if (null == componentType.left || null == componentType.right) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlMapValueConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":5,"curCode":"  @Override public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes = SqlTypeUtil.deriveType(callBinding, callBinding.operands());\n    final RelDataType componentType =\n        getComponentType(\n            callBinding.getTypeFactory(),\n            argTypes);\n    if (null == componentType) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","date":"2020-10-07 05:42:47","endLine":100,"groupId":"101779","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"checkOperandTypes","params":"(SqlCallBindingcallBinding@booleanthrowOnFailure)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2e/aec975a9bd10a0affbcb9f44dc0b73883407f5.src","preCode":"  @Override public boolean checkOperandTypes(\n      SqlCallBinding callBinding,\n      boolean throwOnFailure) {\n    final List<RelDataType> argTypes = SqlTypeUtil.deriveType(callBinding, callBinding.operands());\n    final RelDataType componentType =\n        getComponentType(\n            callBinding.getTypeFactory(),\n            argTypes);\n    if (null == componentType) {\n      if (throwOnFailure) {\n        throw callBinding.newValidationError(RESOURCE.needSameTypeParameter());\n      }\n      return false;\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlMultisetQueryConstructor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
