[{"authorTime":"2018-11-10 00:39:20","codes":[{"authorDate":"2018-11-10 00:39:20","commitOrder":1,"curCode":"    @Override public void implementAdd(AggContext info,\n                                              AggAddContext add) {\n      add.currentBlock().add(\n          Expressions.statement(\n              Expressions.call(\n                  m,\n                  Iterables.concat(\n                      Collections.singletonList(\n                          add.accumulator().get(0)),\n                      add.arguments()))));\n    }\n","date":"2018-11-10 00:39:58","endLine":1826,"groupId":"4621","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"implementAdd","params":"(AggContextinfo@AggAddContextadd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b2/4ac611188e1c0292cacb7f7f2a92852985dae8.src","preCode":"    @Override public void implementAdd(AggContext info,\n                                              AggAddContext add) {\n      add.currentBlock().add(\n          Expressions.statement(\n              Expressions.call(\n                  m,\n                  Iterables.concat(\n                      Collections.singletonList(\n                          add.accumulator().get(0)),\n                      add.arguments()))));\n    }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1816,"status":"B"},{"authorDate":"2018-11-10 00:39:20","commitOrder":1,"curCode":"    @Override public void implementAdd(AggContext info,\n                                       AggAddContext add) {\n      add.currentBlock().add(\n          Expressions.statement(\n              Expressions.call(\n                  m,\n                  Iterables.concat(\n                      Collections.singletonList(\n                          add.accumulator().get(0)),\n                      add.arguments()))));\n    }\n","date":"2018-11-10 00:39:58","endLine":1869,"groupId":"4621","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"implementAdd","params":"(AggContextinfo@AggAddContextadd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b2/4ac611188e1c0292cacb7f7f2a92852985dae8.src","preCode":"    @Override public void implementAdd(AggContext info,\n                                       AggAddContext add) {\n      add.currentBlock().add(\n          Expressions.statement(\n              Expressions.call(\n                  m,\n                  Iterables.concat(\n                      Collections.singletonList(\n                          add.accumulator().get(0)),\n                      add.arguments()))));\n    }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1859,"status":"B"}],"commitId":"8e557d26cffceaf7d7f98d8f8bafd9fbe3bc2447","commitMessage":"@@@[CALCITE-2266] Implement SQL:2016 JSON functions: JSON_EXISTS.  JSON_VALUE.  JSON_QUERY.  JSON_OBJECT.  JSON_OBJECTAGG.  JSON_ARRAY.  JSON_ARRAYAGG.  IS JSON predicate (Hongze Zhang)\n\nClose apache/calcite#785\n","date":"2018-11-10 00:39:58","modifiedFileCount":"18","status":"B","submitter":"Michael Mior"},{"authorTime":"2018-11-14 19:48:49","codes":[{"authorDate":"2018-11-14 19:48:49","commitOrder":2,"curCode":"    @Override public void implementAdd(AggContext info, AggAddContext add) {\n      final SqlJsonObjectAggAggFunction function =\n          (SqlJsonObjectAggAggFunction) info.aggregation();\n      add.currentBlock().add(\n          Expressions.statement(\n              Expressions.call(m,\n                  Iterables.concat(\n                      Collections.singletonList(add.accumulator().get(0)),\n                      add.arguments(),\n                      Collections.singletonList(\n                          Expressions.constant(function.getNullClause()))))));\n    }\n","date":"2018-12-06 08:59:02","endLine":1820,"groupId":"112123","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"implementAdd","params":"(AggContextinfo@AggAddContextadd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/dd/117eefa8e4d37ad1acf3300f2beebc4222fa34.src","preCode":"    @Override public void implementAdd(AggContext info, AggAddContext add) {\n      add.currentBlock().add(\n          Expressions.statement(\n              Expressions.call(m,\n                  Iterables.concat(\n                      Collections.singletonList(add.accumulator().get(0)),\n                      add.arguments()))));\n    }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1809,"status":"M"},{"authorDate":"2018-11-14 19:48:49","commitOrder":2,"curCode":"    @Override public void implementAdd(AggContext info,\n        AggAddContext add) {\n      final SqlJsonArrayAggAggFunction function =\n          (SqlJsonArrayAggAggFunction) info.aggregation();\n      add.currentBlock().add(\n          Expressions.statement(\n              Expressions.call(m,\n                  Iterables.concat(\n                      Collections.singletonList(add.accumulator().get(0)),\n                      add.arguments(),\n                      Collections.singletonList(\n                          Expressions.constant(function.getNullClause()))))));\n    }\n","date":"2018-12-06 08:59:02","endLine":1865,"groupId":"112123","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"implementAdd","params":"(AggContextinfo@AggAddContextadd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/dd/117eefa8e4d37ad1acf3300f2beebc4222fa34.src","preCode":"    @Override public void implementAdd(AggContext info,\n        AggAddContext add) {\n      add.currentBlock().add(\n          Expressions.statement(\n              Expressions.call(m,\n                  Iterables.concat(\n                      Collections.singletonList(add.accumulator().get(0)),\n                      add.arguments()))));\n    }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1853,"status":"M"}],"commitId":"f3655e15a11a9fb266af290cb390e690d4301c09","commitMessage":"@@@[CALCITE-2670] Combine similar JSON aggregate functions in operator table\n\nConvert parameters from Enum to more specific types;\ninclude varying flag values in JSON aggregate functions.\n\nSome cosmetic stuff.\n\nClose apache/calcite#916\n","date":"2018-12-06 08:59:02","modifiedFileCount":"18","status":"M","submitter":"hongzezhang"}]
