[{"authorTime":"2020-05-02 09:16:43","codes":[{"authorDate":"2020-05-02 09:16:43","commitOrder":2,"curCode":"  public Set<RelColumnOrigin> getColumnOrigins(Project rel,\n      final RelMetadataQuery mq, int iOutputColumn) {\n    final RelNode input = rel.getInput();\n    RexNode rexNode = rel.getProjects().get(iOutputColumn);\n\n    if (rexNode instanceof RexInputRef) {\n      \r\n      RexInputRef inputRef = (RexInputRef) rexNode;\n      return mq.getColumnOrigins(input, inputRef.getIndex());\n    }\n    \r\n    final Set<RelColumnOrigin> set = getMultipleColumns(rexNode, input, mq);\n    return createDerivedColumnOrigins(set);\n  }\n","date":"2020-05-06 06:37:05","endLine":139,"groupId":"2882","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getColumnOrigins","params":"(Projectrel@finalRelMetadataQuerymq@intiOutputColumn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d2/b2d18421e2448219269768861e489deeabef3c.src","preCode":"  public Set<RelColumnOrigin> getColumnOrigins(Project rel,\n      final RelMetadataQuery mq, int iOutputColumn) {\n    final RelNode input = rel.getInput();\n    RexNode rexNode = rel.getProjects().get(iOutputColumn);\n\n    if (rexNode instanceof RexInputRef) {\n      \r\n      RexInputRef inputRef = (RexInputRef) rexNode;\n      return mq.getColumnOrigins(input, inputRef.getIndex());\n    }\n    \r\n    final Set<RelColumnOrigin> set = getMultipleColumns(rexNode, input, mq);\n    return createDerivedColumnOrigins(set);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMdColumnOrigins.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"MB"},{"authorDate":"2020-05-02 09:16:43","commitOrder":2,"curCode":"  public Set<RelColumnOrigin> getColumnOrigins(Calc rel,\n      final RelMetadataQuery mq, int iOutputColumn) {\n    final RelNode input = rel.getInput();\n    final RexShuttle rexShuttle = new RexShuttle() {\n      @Override public RexNode visitLocalRef(RexLocalRef localRef) {\n        return rel.getProgram().expandLocalRef(localRef);\n      }\n    };\n    final List<RexNode> projects = new ArrayList<>();\n    for (RexNode rex: rexShuttle.apply(rel.getProgram().getProjectList())) {\n      projects.add(rex);\n    }\n    final RexNode rexNode = projects.get(iOutputColumn);\n    if (rexNode instanceof RexInputRef) {\n      \r\n      RexInputRef inputRef = (RexInputRef) rexNode;\n      return mq.getColumnOrigins(input, inputRef.getIndex());\n    }\n    \r\n    final Set<RelColumnOrigin> set = getMultipleColumns(rexNode, input, mq);\n    return createDerivedColumnOrigins(set);\n  }\n","date":"2020-05-06 06:37:05","endLine":162,"groupId":"2882","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getColumnOrigins","params":"(Calcrel@finalRelMetadataQuerymq@intiOutputColumn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d2/b2d18421e2448219269768861e489deeabef3c.src","preCode":"  public Set<RelColumnOrigin> getColumnOrigins(Calc rel,\n      final RelMetadataQuery mq, int iOutputColumn) {\n    final RelNode input = rel.getInput();\n    final RexShuttle rexShuttle = new RexShuttle() {\n      @Override public RexNode visitLocalRef(RexLocalRef localRef) {\n        return rel.getProgram().expandLocalRef(localRef);\n      }\n    };\n    final List<RexNode> projects = new ArrayList<>();\n    for (RexNode rex: rexShuttle.apply(rel.getProgram().getProjectList())) {\n      projects.add(rex);\n    }\n    final RexNode rexNode = projects.get(iOutputColumn);\n    if (rexNode instanceof RexInputRef) {\n      \r\n      RexInputRef inputRef = (RexInputRef) rexNode;\n      return mq.getColumnOrigins(input, inputRef.getIndex());\n    }\n    \r\n    final Set<RelColumnOrigin> set = getMultipleColumns(rexNode, input, mq);\n    return createDerivedColumnOrigins(set);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMdColumnOrigins.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"B"}],"commitId":"d1aae57fad71bf10942d4c53b339363537927c29","commitMessage":"@@@[CALCITE-3971] Support Calc in RelMdColumnOrigins (Xu ZhaoHui)\n","date":"2020-05-06 06:37:05","modifiedFileCount":"2","status":"M","submitter":"dz"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  public @Nullable Set<RelColumnOrigin> getColumnOrigins(Project rel,\n      final RelMetadataQuery mq, int iOutputColumn) {\n    final RelNode input = rel.getInput();\n    RexNode rexNode = rel.getProjects().get(iOutputColumn);\n\n    if (rexNode instanceof RexInputRef) {\n      \r\n      RexInputRef inputRef = (RexInputRef) rexNode;\n      return mq.getColumnOrigins(input, inputRef.getIndex());\n    }\n    \r\n    final Set<RelColumnOrigin> set = getMultipleColumns(rexNode, input, mq);\n    return createDerivedColumnOrigins(set);\n  }\n","date":"2020-11-30 06:45:33","endLine":142,"groupId":"111914","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getColumnOrigins","params":"(Projectrel@finalRelMetadataQuerymq@intiOutputColumn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/dc/7b4f306968efdabaf7c70fb710aa8592e6a2d4.src","preCode":"  public Set<RelColumnOrigin> getColumnOrigins(Project rel,\n      final RelMetadataQuery mq, int iOutputColumn) {\n    final RelNode input = rel.getInput();\n    RexNode rexNode = rel.getProjects().get(iOutputColumn);\n\n    if (rexNode instanceof RexInputRef) {\n      \r\n      RexInputRef inputRef = (RexInputRef) rexNode;\n      return mq.getColumnOrigins(input, inputRef.getIndex());\n    }\n    \r\n    final Set<RelColumnOrigin> set = getMultipleColumns(rexNode, input, mq);\n    return createDerivedColumnOrigins(set);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMdColumnOrigins.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  public @Nullable Set<RelColumnOrigin> getColumnOrigins(Calc rel,\n      final RelMetadataQuery mq, int iOutputColumn) {\n    final RelNode input = rel.getInput();\n    final RexShuttle rexShuttle = new RexShuttle() {\n      @Override public RexNode visitLocalRef(RexLocalRef localRef) {\n        return rel.getProgram().expandLocalRef(localRef);\n      }\n    };\n    final List<RexNode> projects = new ArrayList<>();\n    for (RexNode rex: rexShuttle.apply(rel.getProgram().getProjectList())) {\n      projects.add(rex);\n    }\n    final RexNode rexNode = projects.get(iOutputColumn);\n    if (rexNode instanceof RexInputRef) {\n      \r\n      RexInputRef inputRef = (RexInputRef) rexNode;\n      return mq.getColumnOrigins(input, inputRef.getIndex());\n    }\n    \r\n    final Set<RelColumnOrigin> set = getMultipleColumns(rexNode, input, mq);\n    return createDerivedColumnOrigins(set);\n  }\n","date":"2020-11-30 06:45:33","endLine":165,"groupId":"111914","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getColumnOrigins","params":"(Calcrel@finalRelMetadataQuerymq@intiOutputColumn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/dc/7b4f306968efdabaf7c70fb710aa8592e6a2d4.src","preCode":"  public Set<RelColumnOrigin> getColumnOrigins(Calc rel,\n      final RelMetadataQuery mq, int iOutputColumn) {\n    final RelNode input = rel.getInput();\n    final RexShuttle rexShuttle = new RexShuttle() {\n      @Override public RexNode visitLocalRef(RexLocalRef localRef) {\n        return rel.getProgram().expandLocalRef(localRef);\n      }\n    };\n    final List<RexNode> projects = new ArrayList<>();\n    for (RexNode rex: rexShuttle.apply(rel.getProgram().getProjectList())) {\n      projects.add(rex);\n    }\n    final RexNode rexNode = projects.get(iOutputColumn);\n    if (rexNode instanceof RexInputRef) {\n      \r\n      RexInputRef inputRef = (RexInputRef) rexNode;\n      return mq.getColumnOrigins(input, inputRef.getIndex());\n    }\n    \r\n    final Set<RelColumnOrigin> set = getMultipleColumns(rexNode, input, mq);\n    return createDerivedColumnOrigins(set);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/RelMdColumnOrigins.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
