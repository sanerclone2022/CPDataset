[{"authorTime":"2016-05-22 03:33:32","codes":[{"authorDate":"2015-04-08 02:30:59","commitOrder":2,"curCode":"  public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n    final RelDataType mapType =\n        typeFactory.createMapType(\n            typeFactory.createSqlType(SqlTypeName.VARCHAR),\n            typeFactory.createTypeWithNullability(\n                typeFactory.createSqlType(SqlTypeName.ANY), true));\n    return typeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","date":"2015-04-08 04:17:03","endLine":75,"groupId":"2453","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getRowType","params":"(RelDataTypeFactorytypeFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2c/362a3946555b1831abd28b0a787830ec3ca383.src","preCode":"  public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n    final RelDataType mapType =\n        typeFactory.createMapType(\n            typeFactory.createSqlType(SqlTypeName.VARCHAR),\n            typeFactory.createTypeWithNullability(\n                typeFactory.createSqlType(SqlTypeName.ANY), true));\n    return typeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"NB"},{"authorDate":"2016-05-22 03:33:32","commitOrder":2,"curCode":"  public RelDataType getRowType(RelDataTypeFactory relDataTypeFactory) {\n    final RelDataType mapType = relDataTypeFactory.createMapType(\n        relDataTypeFactory.createSqlType(SqlTypeName.VARCHAR),\n        relDataTypeFactory.createTypeWithNullability(\n            relDataTypeFactory.createSqlType(SqlTypeName.ANY),\n            true));\n    return relDataTypeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","date":"2016-05-27 05:57:06","endLine":75,"groupId":"2453","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowType","params":"(RelDataTypeFactoryrelDataTypeFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f3/dbca50c99b96b1c3407cdbf6cd7af1d8a975d4.src","preCode":"  public RelDataType getRowType(RelDataTypeFactory relDataTypeFactory) {\n    final RelDataType mapType = relDataTypeFactory.createMapType(\n        relDataTypeFactory.createSqlType(SqlTypeName.VARCHAR),\n        relDataTypeFactory.createTypeWithNullability(\n            relDataTypeFactory.createSqlType(SqlTypeName.ANY),\n            true));\n    return relDataTypeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","realPath":"elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"f3caf13b9f1cd92f95dcf27716466bf2133e1ed7","commitMessage":"@@@[CALCITE-1253] Elasticsearch adapter (Subhobrata Dey)\n\nClose apache/calcite#236\n","date":"2016-05-27 05:57:06","modifiedFileCount":"0","status":"M","submitter":"Subhobrata Dey"},{"authorTime":"2018-09-19 10:53:24","codes":[{"authorDate":"2015-04-08 02:30:59","commitOrder":3,"curCode":"  public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n    final RelDataType mapType =\n        typeFactory.createMapType(\n            typeFactory.createSqlType(SqlTypeName.VARCHAR),\n            typeFactory.createTypeWithNullability(\n                typeFactory.createSqlType(SqlTypeName.ANY), true));\n    return typeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","date":"2015-04-08 04:17:03","endLine":75,"groupId":"2453","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getRowType","params":"(RelDataTypeFactorytypeFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2c/362a3946555b1831abd28b0a787830ec3ca383.src","preCode":"  public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n    final RelDataType mapType =\n        typeFactory.createMapType(\n            typeFactory.createSqlType(SqlTypeName.VARCHAR),\n            typeFactory.createTypeWithNullability(\n                typeFactory.createSqlType(SqlTypeName.ANY), true));\n    return typeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"},{"authorDate":"2018-09-19 10:53:24","commitOrder":3,"curCode":"  @Override public RelDataType getRowType(RelDataTypeFactory relDataTypeFactory) {\n    final RelDataType mapType = relDataTypeFactory.createMapType(\n        relDataTypeFactory.createSqlType(SqlTypeName.VARCHAR),\n        relDataTypeFactory.createTypeWithNullability(\n            relDataTypeFactory.createSqlType(SqlTypeName.ANY),\n            true));\n    return relDataTypeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","date":"2018-09-19 10:53:24","endLine":355,"groupId":"2453","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowType","params":"(RelDataTypeFactoryrelDataTypeFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c4/04da786765621cc37b3c01bf03afd10847d17c.src","preCode":"  public RelDataType getRowType(RelDataTypeFactory relDataTypeFactory) {\n    final RelDataType mapType = relDataTypeFactory.createMapType(\n        relDataTypeFactory.createSqlType(SqlTypeName.VARCHAR),\n        relDataTypeFactory.createTypeWithNullability(\n            relDataTypeFactory.createSqlType(SqlTypeName.ANY),\n            true));\n    return relDataTypeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","realPath":"elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"M"}],"commitId":"79af1c9ba735286653697deed3ff849b7c921fe4","commitMessage":"@@@[CALCITE-2528] Support Aggregates in ElasticSearch adapter (Andrei Sereda)\n\nAggregate functions (count/sum/min/max/avg) are pushed down to ES.\n\nAdd ElasticsearchAggregate relational expression to convert SQL into native Elastic aggregations (value_count.  min.  max etc.).\nEnhance ElasticsearchTable to prepare correct aggregate ES JSON query.\n\nCreate special classes to parse recursively elastic aggregation response or buckets (located in ElasticJson). They're inspired from existing Elastic high-level client source.\n\nFor tests.  make Json input more human friendly. Single quotes are accepted and fields can be unquoted (unless\nthey contain special characters). Also field with dots 'a.b.c' are automatically auto-expanded. This reduces JSON noise.\n\nFix single projections which previously returned map (see [CALCITE-2485])\n\nClose apache/calcite#801\nClose apache/calcite#822\n","date":"2018-09-19 10:53:24","modifiedFileCount":"20","status":"M","submitter":"Andrei Sereda"},{"authorTime":"2018-09-19 10:53:24","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n    final RelDataType mapType =\n        typeFactory.createMapType(\n            typeFactory.createSqlType(SqlTypeName.VARCHAR),\n            typeFactory.createTypeWithNullability(\n                typeFactory.createSqlType(SqlTypeName.ANY), true));\n    return typeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","date":"2020-10-07 05:42:47","endLine":74,"groupId":"10161","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"getRowType","params":"(RelDataTypeFactorytypeFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e3/d46e5c8b426ffdd97c989a8b59b875ed1860bb.src","preCode":"  public RelDataType getRowType(RelDataTypeFactory typeFactory) {\n    final RelDataType mapType =\n        typeFactory.createMapType(\n            typeFactory.createSqlType(SqlTypeName.VARCHAR),\n            typeFactory.createTypeWithNullability(\n                typeFactory.createSqlType(SqlTypeName.ANY), true));\n    return typeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2018-09-19 10:53:24","commitOrder":4,"curCode":"  @Override public RelDataType getRowType(RelDataTypeFactory relDataTypeFactory) {\n    final RelDataType mapType = relDataTypeFactory.createMapType(\n        relDataTypeFactory.createSqlType(SqlTypeName.VARCHAR),\n        relDataTypeFactory.createTypeWithNullability(\n            relDataTypeFactory.createSqlType(SqlTypeName.ANY),\n            true));\n    return relDataTypeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","date":"2018-09-19 10:53:24","endLine":355,"groupId":"10161","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getRowType","params":"(RelDataTypeFactoryrelDataTypeFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c4/04da786765621cc37b3c01bf03afd10847d17c.src","preCode":"  @Override public RelDataType getRowType(RelDataTypeFactory relDataTypeFactory) {\n    final RelDataType mapType = relDataTypeFactory.createMapType(\n        relDataTypeFactory.createSqlType(SqlTypeName.VARCHAR),\n        relDataTypeFactory.createTypeWithNullability(\n            relDataTypeFactory.createSqlType(SqlTypeName.ANY),\n            true));\n    return relDataTypeFactory.builder().add(\"_MAP\", mapType).build();\n  }\n","realPath":"elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchTable.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"N"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
