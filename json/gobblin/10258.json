[{"authorTime":"2017-09-12 17:29:05","codes":[{"authorDate":"2020-03-12 07:14:19","commitOrder":2,"curCode":"  public void testUpdateSpec() throws Exception {\n    \r\n    String updatedSpecUriString = \"/foo/bar/addedSpec\";\n    Spec spec = initJobSpec(updatedSpecUriString);\n    WriteResponse writeResponse = (WriteResponse) _seip.updateSpec(spec).get();\n    log.info(\"WriteResponse: \" + writeResponse);\n\n    List<Pair<SpecExecutor.Verb, Spec>> consumedEvent = _seic.changedSpecs().get();\n    Assert.assertTrue(consumedEvent.size() == 1, \"Consumption did not match production\");\n\n    Map.Entry<SpecExecutor.Verb, Spec> consumedSpecAction = consumedEvent.get(0);\n    Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.UPDATE), \"Verb did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(updatedSpecUriString), \"Expected URI did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec, \"Expected JobSpec\");\n  }\n","date":"2020-03-12 07:14:19","endLine":153,"groupId":"3272","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/26/d3e3b5051857f024b28410ef36d06441a07a72.src","preCode":"  public void testUpdateSpec() throws Exception {\n    \r\n    String updatedSpecUriString = \"/foo/bar/addedSpec\";\n    Spec spec = initJobSpec(updatedSpecUriString);\n    WriteResponse writeResponse = (WriteResponse) _seip.updateSpec(spec).get();\n    log.info(\"WriteResponse: \" + writeResponse);\n\n    List<Pair<SpecExecutor.Verb, Spec>> consumedEvent = _seic.changedSpecs().get();\n    Assert.assertTrue(consumedEvent.size() == 1, \"Consumption did not match production\");\n\n    Map.Entry<SpecExecutor.Verb, Spec> consumedSpecAction = consumedEvent.get(0);\n    Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.UPDATE), \"Verb did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(updatedSpecUriString), \"Expected URI did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec, \"Expected JobSpec\");\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/service/StreamingKafkaSpecExecutorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"B"},{"authorDate":"2017-09-12 17:29:05","commitOrder":2,"curCode":"  public void testUpdateSpec() throws Exception {\n    String updatedSpecUriString = \"/foo/bar/updatedSpec\";\n    Spec spec = initJobSpec(updatedSpecUriString);\n    WriteResponse writeResponse = (WriteResponse) _seip.updateSpec(spec).get();\n    log.info(\"WriteResponse: \" + writeResponse);\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    List<Pair<SpecExecutor.Verb, Spec>> consumedEvent = _seic.changedSpecs().get();\n    Assert.assertTrue(consumedEvent.size() == 1, \"Consumption did not match production\");\n\n    Map.Entry<SpecExecutor.Verb, Spec> consumedSpecAction = consumedEvent.get(0);\n    Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.UPDATE), \"Verb did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(updatedSpecUriString), \"Expected URI did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec, \"Expected JobSpec\");\n  }\n","date":"2017-09-12 17:29:21","endLine":121,"groupId":"3272","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"testUpdateSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/55/67c18eebaedc1fe99add455f7e2976e7c57604.src","preCode":"  public void testUpdateSpec() throws Exception {\n    String updatedSpecUriString = \"/foo/bar/updatedSpec\";\n    Spec spec = initJobSpec(updatedSpecUriString);\n    WriteResponse writeResponse = (WriteResponse) _seip.updateSpec(spec).get();\n    log.info(\"WriteResponse: \" + writeResponse);\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    List<Pair<SpecExecutor.Verb, Spec>> consumedEvent = _seic.changedSpecs().get();\n    Assert.assertTrue(consumedEvent.size() == 1, \"Consumption did not match production\");\n\n    Map.Entry<SpecExecutor.Verb, Spec> consumedSpecAction = consumedEvent.get(0);\n    Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.UPDATE), \"Verb did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(updatedSpecUriString), \"Expected URI did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec, \"Expected JobSpec\");\n  }\n","realPath":"gobblin-modules/gobblin-kafka-08/src/test/java/org/apache/gobblin/service/SimpleKafkaSpecExecutorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"NB"}],"commitId":"7a328f9a232a60973d27c50859e6b84e63df90f7","commitMessage":"@@@[GOBBLIN-1040] HighLevelConsumer re-design by removing references to ?\n\nCloses #2900 from vikrambohra/GOBBLIN-1040\n","date":"2020-03-12 07:14:19","modifiedFileCount":"16","status":"M","submitter":"vbohra"},{"authorTime":"2017-09-12 17:29:05","codes":[{"authorDate":"2020-05-21 06:37:12","commitOrder":3,"curCode":"  public void testUpdateSpec() throws Exception {\n    \r\n    WriteResponse writeResponse = (WriteResponse) _seip.updateSpec(spec).get();\n    log.info(\"WriteResponse: \" + writeResponse);\n\n    List<Pair<SpecExecutor.Verb, Spec>> consumedEvent = _seic.changedSpecs().get();\n    Assert.assertTrue(consumedEvent.size() == 1, \"Consumption did not match production\");\n\n    Map.Entry<SpecExecutor.Verb, Spec> consumedSpecAction = consumedEvent.get(0);\n    Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.UPDATE), \"Verb did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(specUriString), \"Expected URI did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec, \"Expected JobSpec\");\n  }\n","date":"2020-05-21 06:37:12","endLine":151,"groupId":"10258","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testUpdateSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ab/bdc610ca1f04146ae8cb4c65514bb6004d26c5.src","preCode":"  public void testUpdateSpec() throws Exception {\n    \r\n    String updatedSpecUriString = \"/foo/bar/addedSpec\";\n    Spec spec = initJobSpec(updatedSpecUriString);\n    WriteResponse writeResponse = (WriteResponse) _seip.updateSpec(spec).get();\n    log.info(\"WriteResponse: \" + writeResponse);\n\n    List<Pair<SpecExecutor.Verb, Spec>> consumedEvent = _seic.changedSpecs().get();\n    Assert.assertTrue(consumedEvent.size() == 1, \"Consumption did not match production\");\n\n    Map.Entry<SpecExecutor.Verb, Spec> consumedSpecAction = consumedEvent.get(0);\n    Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.UPDATE), \"Verb did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(updatedSpecUriString), \"Expected URI did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec, \"Expected JobSpec\");\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/service/StreamingKafkaSpecExecutorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2017-09-12 17:29:05","commitOrder":3,"curCode":"  public void testUpdateSpec() throws Exception {\n    String updatedSpecUriString = \"/foo/bar/updatedSpec\";\n    Spec spec = initJobSpec(updatedSpecUriString);\n    WriteResponse writeResponse = (WriteResponse) _seip.updateSpec(spec).get();\n    log.info(\"WriteResponse: \" + writeResponse);\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    List<Pair<SpecExecutor.Verb, Spec>> consumedEvent = _seic.changedSpecs().get();\n    Assert.assertTrue(consumedEvent.size() == 1, \"Consumption did not match production\");\n\n    Map.Entry<SpecExecutor.Verb, Spec> consumedSpecAction = consumedEvent.get(0);\n    Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.UPDATE), \"Verb did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(updatedSpecUriString), \"Expected URI did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec, \"Expected JobSpec\");\n  }\n","date":"2017-09-12 17:29:21","endLine":121,"groupId":"10258","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testUpdateSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/55/67c18eebaedc1fe99add455f7e2976e7c57604.src","preCode":"  public void testUpdateSpec() throws Exception {\n    String updatedSpecUriString = \"/foo/bar/updatedSpec\";\n    Spec spec = initJobSpec(updatedSpecUriString);\n    WriteResponse writeResponse = (WriteResponse) _seip.updateSpec(spec).get();\n    log.info(\"WriteResponse: \" + writeResponse);\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    List<Pair<SpecExecutor.Verb, Spec>> consumedEvent = _seic.changedSpecs().get();\n    Assert.assertTrue(consumedEvent.size() == 1, \"Consumption did not match production\");\n\n    Map.Entry<SpecExecutor.Verb, Spec> consumedSpecAction = consumedEvent.get(0);\n    Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.UPDATE), \"Verb did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(updatedSpecUriString), \"Expected URI did not match\");\n    Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec, \"Expected JobSpec\");\n  }\n","realPath":"gobblin-modules/gobblin-kafka-08/src/test/java/org/apache/gobblin/service/SimpleKafkaSpecExecutorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"}],"commitId":"72373eebff6b669bd8e001966ffab4e6ded8ab7b","commitMessage":"@@@[GOBBLIN-1150] spec catalog table schema change\n\nCloses #2988 from arjun4084346/jsonConfig\n","date":"2020-05-21 06:37:12","modifiedFileCount":"10","status":"M","submitter":"Arjun"}]
