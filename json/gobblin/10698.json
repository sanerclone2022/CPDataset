[{"authorTime":"2019-03-08 05:21:59","codes":[{"authorDate":"2019-03-08 05:21:59","commitOrder":1,"curCode":"  public TypeInfo writeJsonResourceRecordsAsBinary(String baseResource, @Nullable FileSystem fs, Path targetPath,\n      @Nullable TypeInfo schema) throws IOException {\n    TreeMap<String, OrcRowIterator> recordMap = readAllRecordsInJsonResource(baseResource, null);\n\n    TypeInfo outputSchema = recordMap.lastEntry().getValue().getTypeInfo();\n    for (Map.Entry<String, OrcRowIterator> entry : recordMap.entrySet()) {\n      writeAsOrcBinary(entry.getValue(), outputSchema, new Path(targetPath, removeExtension(entry.getKey())));\n    }\n\n    return outputSchema;\n  }\n","date":"2019-03-08 05:21:59","endLine":195,"groupId":"711","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeJsonResourceRecordsAsBinary","params":"(StringbaseResource@@NullableFileSystemfs@PathtargetPath@@NullableTypeInfoschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/07/c46ab55664a354b30ee58fe7df4a1340cc29cd.src","preCode":"  public TypeInfo writeJsonResourceRecordsAsBinary(String baseResource, @Nullable FileSystem fs, Path targetPath,\n      @Nullable TypeInfo schema) throws IOException {\n    TreeMap<String, OrcRowIterator> recordMap = readAllRecordsInJsonResource(baseResource, null);\n\n    TypeInfo outputSchema = recordMap.lastEntry().getValue().getTypeInfo();\n    for (Map.Entry<String, OrcRowIterator> entry : recordMap.entrySet()) {\n      writeAsOrcBinary(entry.getValue(), outputSchema, new Path(targetPath, removeExtension(entry.getKey())));\n    }\n\n    return outputSchema;\n  }\n","realPath":"gobblin-binary-management/src/main/java/org/apache/gobblin/binary_creation/OrcTestTools.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"B"},{"authorDate":"2019-03-08 05:21:59","commitOrder":1,"curCode":"  public Schema writeJsonResourceRecordsAsBinary(String baseResource, FileSystem fs, Path targetPath,\n      @Nullable Schema schema) throws IOException {\n    TreeMap<String, RecordIterator> recordMap = readAllRecordsInJsonResource(baseResource, schema);\n\n    Schema outputSchema = recordMap.lastEntry().getValue().getSchema();\n\n    for (Map.Entry<String, RecordIterator> entry : recordMap.entrySet()) {\n      writeAsAvroBinary(entry.getValue(), entry.getValue().getSchema(), fs, new Path(targetPath,\n          removeExtension(entry.getKey()) + \".avro\"));\n    }\n\n    return outputSchema;\n  }\n","date":"2019-03-08 05:21:59","endLine":237,"groupId":"8018","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeJsonResourceRecordsAsBinary","params":"(StringbaseResource@FileSystemfs@PathtargetPath@@NullableSchemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9a/7bb1de8433af4d27c1405abf49f4e722fc1e58.src","preCode":"  public Schema writeJsonResourceRecordsAsBinary(String baseResource, FileSystem fs, Path targetPath,\n      @Nullable Schema schema) throws IOException {\n    TreeMap<String, RecordIterator> recordMap = readAllRecordsInJsonResource(baseResource, schema);\n\n    Schema outputSchema = recordMap.lastEntry().getValue().getSchema();\n\n    for (Map.Entry<String, RecordIterator> entry : recordMap.entrySet()) {\n      writeAsAvroBinary(entry.getValue(), entry.getValue().getSchema(), fs, new Path(targetPath,\n          removeExtension(entry.getKey()) + \".avro\"));\n    }\n\n    return outputSchema;\n  }\n","realPath":"gobblin-binary-management/src/main/java/org/apache/gobblin/binary_creation/AvroTestTools.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"B"}],"commitId":"441d732d272f92da7a1dedd81813f1945ff72b04","commitMessage":"@@@[GOBBLIN-695] Adding utility functions to generate Avro/ORC binary using json\n\nCloses #2566 from\nautumnust/testToolForBinaryCreation\n","date":"2019-03-08 05:21:59","modifiedFileCount":"0","status":"B","submitter":"Lei Sun"},{"authorTime":"2019-03-08 05:21:59","codes":[{"authorDate":"2019-03-13 08:05:13","commitOrder":2,"curCode":"  public TypeInfo writeJsonResourceRecordsAsBinary(String baseResource, @Nullable FileSystem fs, Path targetPath,\n      @Nullable TypeInfo schema) throws IOException {\n    TreeMap<String, OrcRowIterator> recordMap = readAllRecordsInJsonResource(baseResource, schema);\n\n    TypeInfo outputSchema = recordMap.lastEntry().getValue().getTypeInfo();\n    for (Map.Entry<String, OrcRowIterator> entry : recordMap.entrySet()) {\n      writeAsOrcBinary(entry.getValue(), outputSchema, new Path(targetPath, removeExtension(entry.getKey())));\n    }\n\n    return outputSchema;\n  }\n","date":"2019-03-13 08:05:13","endLine":195,"groupId":"10698","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeJsonResourceRecordsAsBinary","params":"(StringbaseResource@@NullableFileSystemfs@PathtargetPath@@NullableTypeInfoschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/46/5fb89a81012a752ee3f1883bc7ff496d382e88.src","preCode":"  public TypeInfo writeJsonResourceRecordsAsBinary(String baseResource, @Nullable FileSystem fs, Path targetPath,\n      @Nullable TypeInfo schema) throws IOException {\n    TreeMap<String, OrcRowIterator> recordMap = readAllRecordsInJsonResource(baseResource, null);\n\n    TypeInfo outputSchema = recordMap.lastEntry().getValue().getTypeInfo();\n    for (Map.Entry<String, OrcRowIterator> entry : recordMap.entrySet()) {\n      writeAsOrcBinary(entry.getValue(), outputSchema, new Path(targetPath, removeExtension(entry.getKey())));\n    }\n\n    return outputSchema;\n  }\n","realPath":"gobblin-binary-management/src/main/java/org/apache/gobblin/binary_creation/OrcTestTools.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"},{"authorDate":"2019-03-08 05:21:59","commitOrder":2,"curCode":"  public Schema writeJsonResourceRecordsAsBinary(String baseResource, FileSystem fs, Path targetPath,\n      @Nullable Schema schema) throws IOException {\n    TreeMap<String, RecordIterator> recordMap = readAllRecordsInJsonResource(baseResource, schema);\n\n    Schema outputSchema = recordMap.lastEntry().getValue().getSchema();\n\n    for (Map.Entry<String, RecordIterator> entry : recordMap.entrySet()) {\n      writeAsAvroBinary(entry.getValue(), entry.getValue().getSchema(), fs, new Path(targetPath,\n          removeExtension(entry.getKey()) + \".avro\"));\n    }\n\n    return outputSchema;\n  }\n","date":"2019-03-08 05:21:59","endLine":237,"groupId":"10698","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeJsonResourceRecordsAsBinary","params":"(StringbaseResource@FileSystemfs@PathtargetPath@@NullableSchemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9a/7bb1de8433af4d27c1405abf49f4e722fc1e58.src","preCode":"  public Schema writeJsonResourceRecordsAsBinary(String baseResource, FileSystem fs, Path targetPath,\n      @Nullable Schema schema) throws IOException {\n    TreeMap<String, RecordIterator> recordMap = readAllRecordsInJsonResource(baseResource, schema);\n\n    Schema outputSchema = recordMap.lastEntry().getValue().getSchema();\n\n    for (Map.Entry<String, RecordIterator> entry : recordMap.entrySet()) {\n      writeAsAvroBinary(entry.getValue(), entry.getValue().getSchema(), fs, new Path(targetPath,\n          removeExtension(entry.getKey()) + \".avro\"));\n    }\n\n    return outputSchema;\n  }\n","realPath":"gobblin-binary-management/src/main/java/org/apache/gobblin/binary_creation/AvroTestTools.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"N"}],"commitId":"81ea16963f63e3fcda77221f655accb1f5406d34","commitMessage":"@@@[GOBBLIN-693] Add ORC hive serde manager\n\nCloses #2565 from htran1/orc_hive_reg\n","date":"2019-03-13 08:05:13","modifiedFileCount":"2","status":"M","submitter":"Hung Tran"}]
