[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testBatchWithLargeRecord() throws IOException {\n    \r\n    BytesBoundedBatch batch = new BytesBoundedBatch(8, 3000);\n\n    String record = \"abcdefgh\";\n\n    \r\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY));\n\n    \r\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY));\n  }\n","date":"2017-07-31 15:51:25","endLine":26,"groupId":"4035","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBatchWithLargeRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/fc/2d8d8ef893c2f4a284fca5ca57ecdd2c8bc439.src","preCode":"  public void testBatchWithLargeRecord() throws IOException {\n    \r\n    BytesBoundedBatch batch = new BytesBoundedBatch(8, 3000);\n\n    String record = \"abcdefgh\";\n\n    \r\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY));\n\n    \r\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY));\n  }\n","realPath":"gobblin-modules/gobblin-eventhub/src/test/java/org/apache/gobblin/eventhub/writer/EventhubBatchTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":15,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testBatch() throws IOException {\n    \r\n    BytesBoundedBatch batch = new BytesBoundedBatch(200, 3000);\n\n    \r\n    String record = \"abcdefgh\";\n\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n\n    \r\n    Assert.assertEquals(batch.hasRoom(record), true);\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n\n    \r\n    Assert.assertEquals(batch.hasRoom(record), false);\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY));\n  }\n","date":"2017-07-31 15:51:25","endLine":51,"groupId":"4035","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/fc/2d8d8ef893c2f4a284fca5ca57ecdd2c8bc439.src","preCode":"  public void testBatch() throws IOException {\n    \r\n    BytesBoundedBatch batch = new BytesBoundedBatch(200, 3000);\n\n    \r\n    String record = \"abcdefgh\";\n\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n\n    \r\n    Assert.assertEquals(batch.hasRoom(record), true);\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n\n    \r\n    Assert.assertEquals(batch.hasRoom(record), false);\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY));\n  }\n","realPath":"gobblin-modules/gobblin-eventhub/src/test/java/org/apache/gobblin/eventhub/writer/EventhubBatchTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":29,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2018-09-01 13:31:21","codes":[{"authorDate":"2018-09-01 13:31:21","commitOrder":2,"curCode":"  public void testBatchWithLargeRecord()\n      throws IOException, RecordTooLargeException {\n    \r\n    BytesBoundedBatch batch = new BytesBoundedBatch(8, 3000);\n\n    String record = \"abcdefgh\";\n\n    \r\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY, LargeMessagePolicy.DROP));\n\n    \r\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY, LargeMessagePolicy.DROP));\n  }\n","date":"2018-09-01 13:31:45","endLine":45,"groupId":"10682","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testBatchWithLargeRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9d/b378224a60d475166384b4f1e19cbfbbccb343.src","preCode":"  public void testBatchWithLargeRecord() throws IOException {\n    \r\n    BytesBoundedBatch batch = new BytesBoundedBatch(8, 3000);\n\n    String record = \"abcdefgh\";\n\n    \r\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY));\n\n    \r\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY));\n  }\n","realPath":"gobblin-modules/gobblin-eventhub/src/test/java/org/apache/gobblin/eventhub/writer/EventhubBatchTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2018-09-01 13:31:21","commitOrder":2,"curCode":"  public void testBatch()\n      throws IOException, RecordTooLargeException {\n    \r\n    BytesBoundedBatch batch = new BytesBoundedBatch(200, 3000);\n\n    \r\n    String record = \"abcdefgh\";\n\n    LargeMessagePolicy policy = LargeMessagePolicy.DROP;\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY, policy));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY, policy));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY, policy));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY, policy));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY, policy));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY, policy));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY, policy));\n\n    \r\n    Assert.assertEquals(batch.hasRoom(record, policy), true);\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY, policy));\n\n    \r\n    Assert.assertEquals(batch.hasRoom(record, policy), false);\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY, policy));\n  }\n","date":"2018-09-01 13:31:45","endLine":72,"groupId":"10682","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testBatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9d/b378224a60d475166384b4f1e19cbfbbccb343.src","preCode":"  public void testBatch() throws IOException {\n    \r\n    BytesBoundedBatch batch = new BytesBoundedBatch(200, 3000);\n\n    \r\n    String record = \"abcdefgh\";\n\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n\n    \r\n    Assert.assertEquals(batch.hasRoom(record), true);\n    Assert.assertNotNull(batch.tryAppend(record, WriteCallback.EMPTY));\n\n    \r\n    Assert.assertEquals(batch.hasRoom(record), false);\n    Assert.assertNull(batch.tryAppend(record, WriteCallback.EMPTY));\n  }\n","realPath":"gobblin-modules/gobblin-eventhub/src/test/java/org/apache/gobblin/eventhub/writer/EventhubBatchTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"f1bc746ca50cffa1247c00b6c5bdd34b7321198d","commitMessage":"@@@[GOBBLIN-17] Add Elasticsearch writer (rest + transport)\n\nCloses #2419 from shirshanka/elastic\n","date":"2018-09-01 13:31:45","modifiedFileCount":"7","status":"M","submitter":"Shirshanka Das"}]
