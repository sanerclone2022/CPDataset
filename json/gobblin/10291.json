[{"authorTime":"2018-11-29 03:19:42","codes":[{"authorDate":"2018-11-27 02:06:20","commitOrder":3,"curCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2018-11-27 02:06:20","endLine":67,"groupId":"2610","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"KafkaProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/1e/f1063ca6ac893e2d29a7a4688fe7234f2c837a.src","preCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/main/java/org/apache/gobblin/metrics/kafka/KafkaProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"NB"},{"authorDate":"2018-11-29 03:19:42","commitOrder":3,"curCode":"  public KafkaKeyValueProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2018-11-29 03:19:42","endLine":69,"groupId":"2610","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"KafkaKeyValueProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ec/930fc223c6b3b2335840b43763c0ff8d3682f0.src","preCode":"  public KafkaKeyValueProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-08/src/main/java/org/apache/gobblin/metrics/kafka/KafkaKeyValueProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"}],"commitId":"10294e4b16caf28090a6641877aabb46d4c7fa2e","commitMessage":"@@@[GOBBLIN-640] Add a Kafka producer pusher that supports keyed messages\n\nCloses #2510 from htran1/kafka_key_value_pusher\n","date":"2018-11-29 03:19:42","modifiedFileCount":"0","status":"M","submitter":"Hung Tran"},{"authorTime":"2018-12-12 02:30:01","codes":[{"authorDate":"2018-11-27 02:06:20","commitOrder":4,"curCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2018-11-27 02:06:20","endLine":67,"groupId":"2610","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"KafkaProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/1e/f1063ca6ac893e2d29a7a4688fe7234f2c837a.src","preCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/main/java/org/apache/gobblin/metrics/kafka/KafkaProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2018-12-12 02:30:01","commitOrder":4,"curCode":"  public KafkaKeyValueProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n    \r\n    props.put(ProducerConfig.MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION, 1);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2018-12-12 02:30:01","endLine":71,"groupId":"2610","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"KafkaKeyValueProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e9/ea3ab59348c6a8029da4ca1da1779b07b1cbe5.src","preCode":"  public KafkaKeyValueProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-08/src/main/java/org/apache/gobblin/metrics/kafka/KafkaKeyValueProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"dc96e3e780358550d997e689bc695cbe19f79996","commitMessage":"@@@[GOBBLIN-651][GOBBLIN-650] Ensure ordered delivery of Kafka events from KeyValueProducerPusher for kafka-08.[]\n\nCloses #2520 from sv2000/kafkaOrderedRedux\n","date":"2018-12-12 02:30:01","modifiedFileCount":"1","status":"M","submitter":"suvasude"},{"authorTime":"2019-02-20 22:56:07","codes":[{"authorDate":"2018-11-27 02:06:20","commitOrder":5,"curCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2018-11-27 02:06:20","endLine":67,"groupId":"10291","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"KafkaProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/1e/f1063ca6ac893e2d29a7a4688fe7234f2c837a.src","preCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/main/java/org/apache/gobblin/metrics/kafka/KafkaProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2019-02-20 22:56:07","commitOrder":5,"curCode":"  public KafkaKeyValueProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n    \r\n    props.put(ProducerConfig.MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION, 1);\n    props.put(ProducerConfig.BLOCK_ON_BUFFER_FULL_CONFIG, true);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n      this.numFuturesToBuffer = ConfigUtils.getLong(kafkaConfig.get(), MAX_NUM_FUTURES_TO_BUFFER_KEY, DEFAULT_MAX_NUM_FUTURES_TO_BUFFER);\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2019-02-20 22:56:07","endLine":89,"groupId":"10291","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"KafkaKeyValueProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/c2/69da7636f259d60c0f78a6f917cf6f719f8394.src","preCode":"  public KafkaKeyValueProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n    \r\n    props.put(ProducerConfig.MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION, 1);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-08/src/main/java/org/apache/gobblin/metrics/kafka/KafkaKeyValueProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"ebbc153463e01157a562d75a4e5d11b2428715df","commitMessage":"@@@[GOBBLIN-684] Ensure buffered messages are flushed before close() in K?\n\nCloses #2556 from sv2000/kafkaFlush\n","date":"2019-02-20 22:56:07","modifiedFileCount":"5","status":"M","submitter":"suvasude"}]
