[{"authorTime":"2018-04-17 02:24:20","codes":[{"authorDate":"2018-04-17 02:24:20","commitOrder":1,"curCode":"  public void decryptLargeFileSym() throws IOException, PGPException {\n    System.gc();\n    System.gc();\n\n    long startHeapSize = Runtime.getRuntime().totalMemory();\n\n    try(InputStream is = GPGFileDecryptor.decryptFile(\n        getClass().getResourceAsStream(\"/crypto/gpg/passwordEncrypted.gpg\"), \"test\")) {\n      int value;\n      long bytesRead = 0;\n\n      \r\n      while ((value = is.read()) != -1) {\n        bytesRead++;\n        Assert.assertTrue(value == 'a');\n      }\n\n      Assert.assertEquals(bytesRead, 1041981183L);\n\n      System.gc();\n      System.gc();\n      long endHeapSize = Runtime.getRuntime().totalMemory();\n\n      \r\n      Assert.assertTrue(endHeapSize - startHeapSize < 200 * 1024 * 1024,\n          \"start heap \" + startHeapSize + \" end heap \" + endHeapSize);\n    }\n  }\n","date":"2018-04-17 02:24:20","endLine":97,"groupId":"2271","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"decryptLargeFileSym","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/96/4bebb51dbc7c5780b14ac6e8a3a34a8b2979bd.src","preCode":"  public void decryptLargeFileSym() throws IOException, PGPException {\n    System.gc();\n    System.gc();\n\n    long startHeapSize = Runtime.getRuntime().totalMemory();\n\n    try(InputStream is = GPGFileDecryptor.decryptFile(\n        getClass().getResourceAsStream(\"/crypto/gpg/passwordEncrypted.gpg\"), \"test\")) {\n      int value;\n      long bytesRead = 0;\n\n      \r\n      while ((value = is.read()) != -1) {\n        bytesRead++;\n        Assert.assertTrue(value == 'a');\n      }\n\n      Assert.assertEquals(bytesRead, 1041981183L);\n\n      System.gc();\n      System.gc();\n      long endHeapSize = Runtime.getRuntime().totalMemory();\n\n      \r\n      Assert.assertTrue(endHeapSize - startHeapSize < 200 * 1024 * 1024,\n          \"start heap \" + startHeapSize + \" end heap \" + endHeapSize);\n    }\n  }\n","realPath":"gobblin-modules/gobblin-crypto/src/test/java/org/apache/gobblin/crypto/GPGFileDecryptorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2018-04-17 02:24:20","commitOrder":1,"curCode":"  public void decryptLargeFileAsym() throws IOException, PGPException {\n    System.gc();\n    System.gc();\n\n    long startHeapSize = Runtime.getRuntime().totalMemory();\n\n    try(InputStream is = GPGFileDecryptor.decryptFile(\n        getClass().getResourceAsStream(\"/crypto/gpg/keyEncrypted.gpg\"),\n        getClass().getResourceAsStream(\"/crypto/gpg/testPrivate.key\"), \"gobblin\")) {\n      int value;\n      long bytesRead = 0;\n\n      \r\n      while ((value = is.read()) != -1) {\n        bytesRead++;\n        Assert.assertTrue(value == 'a');\n      }\n\n      Assert.assertEquals(bytesRead, 1041981183L);\n\n      System.gc();\n      System.gc();\n      long endHeapSize = Runtime.getRuntime().totalMemory();\n\n      \r\n      Assert.assertTrue(endHeapSize - startHeapSize < 200 * 1024 * 1024,\n          \"start heap \" + startHeapSize + \" end heap \" + endHeapSize);\n    }\n  }\n","date":"2018-04-17 02:24:20","endLine":133,"groupId":"2273","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"decryptLargeFileAsym","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/96/4bebb51dbc7c5780b14ac6e8a3a34a8b2979bd.src","preCode":"  public void decryptLargeFileAsym() throws IOException, PGPException {\n    System.gc();\n    System.gc();\n\n    long startHeapSize = Runtime.getRuntime().totalMemory();\n\n    try(InputStream is = GPGFileDecryptor.decryptFile(\n        getClass().getResourceAsStream(\"/crypto/gpg/keyEncrypted.gpg\"),\n        getClass().getResourceAsStream(\"/crypto/gpg/testPrivate.key\"), \"gobblin\")) {\n      int value;\n      long bytesRead = 0;\n\n      \r\n      while ((value = is.read()) != -1) {\n        bytesRead++;\n        Assert.assertTrue(value == 'a');\n      }\n\n      Assert.assertEquals(bytesRead, 1041981183L);\n\n      System.gc();\n      System.gc();\n      long endHeapSize = Runtime.getRuntime().totalMemory();\n\n      \r\n      Assert.assertTrue(endHeapSize - startHeapSize < 200 * 1024 * 1024,\n          \"start heap \" + startHeapSize + \" end heap \" + endHeapSize);\n    }\n  }\n","realPath":"gobblin-modules/gobblin-crypto/src/test/java/org/apache/gobblin/crypto/GPGFileDecryptorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"}],"commitId":"fc389522a6cfb15965f10480a21804fca6660605","commitMessage":"@@@[GOBBLIN-293] Remove stream materialization in GPGFileDecryptor\n\nCloses #2333 from htran1/gpg_memory\n","date":"2018-04-17 02:24:20","modifiedFileCount":"2","status":"B","submitter":"Hung Tran"},{"authorTime":"2018-04-17 02:24:20","codes":[{"authorDate":"2018-05-25 02:03:03","commitOrder":2,"curCode":"  public void decryptLargeFileSym() throws IOException, PGPException {\n    System.gc();\n    System.gc();\n\n    long startHeapSize = Runtime.getRuntime().totalMemory();\n\n    try(InputStream is = GPGFileDecryptor.decryptFile(\n        getClass().getResourceAsStream(\"/crypto/gpg/passwordEncrypted.gpg\"), \"test\")) {\n      int value;\n      long bytesRead = 0;\n\n      \r\n      while ((value = is.read()) != -1) {\n        bytesRead++;\n        Assert.assertTrue(value == 'a');\n      }\n\n      Assert.assertEquals(bytesRead, 1041981183L);\n\n      \r\n      Assert.assertEquals(is.read(), -1);\n\n      System.gc();\n      System.gc();\n      long endHeapSize = Runtime.getRuntime().totalMemory();\n\n      \r\n      Assert.assertTrue(endHeapSize - startHeapSize < 200 * 1024 * 1024,\n          \"start heap \" + startHeapSize + \" end heap \" + endHeapSize);\n    }\n  }\n","date":"2018-05-25 02:03:03","endLine":100,"groupId":"10675","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"decryptLargeFileSym","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/05/892fcfdfbf4426d2567b180c0acf29404daa83.src","preCode":"  public void decryptLargeFileSym() throws IOException, PGPException {\n    System.gc();\n    System.gc();\n\n    long startHeapSize = Runtime.getRuntime().totalMemory();\n\n    try(InputStream is = GPGFileDecryptor.decryptFile(\n        getClass().getResourceAsStream(\"/crypto/gpg/passwordEncrypted.gpg\"), \"test\")) {\n      int value;\n      long bytesRead = 0;\n\n      \r\n      while ((value = is.read()) != -1) {\n        bytesRead++;\n        Assert.assertTrue(value == 'a');\n      }\n\n      Assert.assertEquals(bytesRead, 1041981183L);\n\n      System.gc();\n      System.gc();\n      long endHeapSize = Runtime.getRuntime().totalMemory();\n\n      \r\n      Assert.assertTrue(endHeapSize - startHeapSize < 200 * 1024 * 1024,\n          \"start heap \" + startHeapSize + \" end heap \" + endHeapSize);\n    }\n  }\n","realPath":"gobblin-modules/gobblin-crypto/src/test/java/org/apache/gobblin/crypto/GPGFileDecryptorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2018-04-17 02:24:20","commitOrder":2,"curCode":"  public void decryptLargeFileAsym() throws IOException, PGPException {\n    System.gc();\n    System.gc();\n\n    long startHeapSize = Runtime.getRuntime().totalMemory();\n\n    try(InputStream is = GPGFileDecryptor.decryptFile(\n        getClass().getResourceAsStream(\"/crypto/gpg/keyEncrypted.gpg\"),\n        getClass().getResourceAsStream(\"/crypto/gpg/testPrivate.key\"), \"gobblin\")) {\n      int value;\n      long bytesRead = 0;\n\n      \r\n      while ((value = is.read()) != -1) {\n        bytesRead++;\n        Assert.assertTrue(value == 'a');\n      }\n\n      Assert.assertEquals(bytesRead, 1041981183L);\n\n      System.gc();\n      System.gc();\n      long endHeapSize = Runtime.getRuntime().totalMemory();\n\n      \r\n      Assert.assertTrue(endHeapSize - startHeapSize < 200 * 1024 * 1024,\n          \"start heap \" + startHeapSize + \" end heap \" + endHeapSize);\n    }\n  }\n","date":"2018-04-17 02:24:20","endLine":133,"groupId":"10675","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"decryptLargeFileAsym","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/96/4bebb51dbc7c5780b14ac6e8a3a34a8b2979bd.src","preCode":"  public void decryptLargeFileAsym() throws IOException, PGPException {\n    System.gc();\n    System.gc();\n\n    long startHeapSize = Runtime.getRuntime().totalMemory();\n\n    try(InputStream is = GPGFileDecryptor.decryptFile(\n        getClass().getResourceAsStream(\"/crypto/gpg/keyEncrypted.gpg\"),\n        getClass().getResourceAsStream(\"/crypto/gpg/testPrivate.key\"), \"gobblin\")) {\n      int value;\n      long bytesRead = 0;\n\n      \r\n      while ((value = is.read()) != -1) {\n        bytesRead++;\n        Assert.assertTrue(value == 'a');\n      }\n\n      Assert.assertEquals(bytesRead, 1041981183L);\n\n      System.gc();\n      System.gc();\n      long endHeapSize = Runtime.getRuntime().totalMemory();\n\n      \r\n      Assert.assertTrue(endHeapSize - startHeapSize < 200 * 1024 * 1024,\n          \"start heap \" + startHeapSize + \" end heap \" + endHeapSize);\n    }\n  }\n","realPath":"gobblin-modules/gobblin-crypto/src/test/java/org/apache/gobblin/crypto/GPGFileDecryptorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"N"}],"commitId":"b01ec9cc991c5a2dbe422ffc2e8f17d28be1a96a","commitMessage":"@@@[GOBBLIN-501] Fix NPE thrown from read after EOF of LazyMaterializeDecryptorInputStream\n\nCloses #2371 from zxcware/enc\n","date":"2018-05-25 02:03:03","modifiedFileCount":"2","status":"M","submitter":"zhchen"}]
