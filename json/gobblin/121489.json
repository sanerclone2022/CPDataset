[{"authorTime":"2020-02-29 03:22:08","codes":[{"authorDate":"2020-02-29 03:22:08","commitOrder":4,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, FlowStatusId> key, PatchRequest<FlowConfig> flowConfigPatch) {\n    FlowConfigsResource.checkRequester(get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.getFlowConfigResourceHandler().partialUpdateFlowConfig(flowId, flowConfigPatch);\n  }\n","date":"2020-02-29 03:22:08","endLine":138,"groupId":"3556","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@FlowStatusId>key@PatchRequest<FlowConfig>flowConfigPatch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/82/029949e9098a99dc3255f94d19d6bdd2f89caa.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, FlowStatusId> key, PatchRequest<FlowConfig> flowConfigPatch) {\n    FlowConfigsResource.checkRequester(get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.getFlowConfigResourceHandler().partialUpdateFlowConfig(flowId, flowConfigPatch);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsV2Resource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"},{"authorDate":"2020-02-29 03:22:08","commitOrder":4,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","date":"2020-02-29 03:22:08","endLine":118,"groupId":"3556","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a8/9eb020d5000a40225d9a1642f93cf8bf969dd0.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"MB"}],"commitId":"09f5043fbd3a90aa8f3b06a4b7d3bb2f94501db4","commitMessage":"@@@[GOBBLIN-1050] Verify requester when updating/deleting FlowConfig\n\nCloses #2890 from jack-moseley/check-requester\n","date":"2020-02-29 03:22:08","modifiedFileCount":"6","status":"M","submitter":"Jack Moseley"},{"authorTime":"2020-04-29 08:00:20","codes":[{"authorDate":"2020-04-29 08:00:20","commitOrder":5,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, FlowStatusId> key, PatchRequest<FlowConfig> flowConfigPatch) {\n    FlowConfigsResource.checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.getFlowConfigResourceHandler().partialUpdateFlowConfig(flowId, flowConfigPatch);\n  }\n","date":"2020-04-29 08:00:20","endLine":137,"groupId":"3556","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@FlowStatusId>key@PatchRequest<FlowConfig>flowConfigPatch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/77/d64fc716925837788a8d1024a5e7c209d9cc99.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, FlowStatusId> key, PatchRequest<FlowConfig> flowConfigPatch) {\n    FlowConfigsResource.checkRequester(get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.getFlowConfigResourceHandler().partialUpdateFlowConfig(flowId, flowConfigPatch);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsV2Resource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2020-04-29 08:00:20","commitOrder":5,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","date":"2020-04-29 08:00:20","endLine":117,"groupId":"3556","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6f/dd6086b713afa3018499b05d619524abce4ea8.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"7b8a046de84c8e91a2b97e2960574deb0d6ce23d","commitMessage":"@@@[GOBBLIN-1132] move the logic of requester list verification to RequesterService implementation\n\nCloses #2969 from arjun4084346/requesterListFix\n","date":"2020-04-29 08:00:20","modifiedFileCount":"5","status":"M","submitter":"Arjun"},{"authorTime":"2020-04-29 08:00:20","codes":[{"authorDate":"2020-11-08 09:17:19","commitOrder":6,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, FlowStatusId> key, PatchRequest<FlowConfig> flowConfigPatch) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.getFlowConfigResourceHandler().partialUpdateFlowConfig(flowId, flowConfigPatch);\n  }\n","date":"2020-11-08 09:17:19","endLine":178,"groupId":"3556","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@FlowStatusId>key@PatchRequest<FlowConfig>flowConfigPatch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/49/f7faac0847d4022ec16130692a59c1e9cca5eb.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, FlowStatusId> key, PatchRequest<FlowConfig> flowConfigPatch) {\n    FlowConfigsResource.checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.getFlowConfigResourceHandler().partialUpdateFlowConfig(flowId, flowConfigPatch);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsV2Resource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"},{"authorDate":"2020-04-29 08:00:20","commitOrder":6,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","date":"2020-04-29 08:00:20","endLine":117,"groupId":"3556","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6f/dd6086b713afa3018499b05d619524abce4ea8.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"N"}],"commitId":"7352cad8ae3a1d9be10d3b6fb78383ccbada9b19","commitMessage":"@@@[GOBBLIN-1304] Adds group ownership service\n\nCloses #3142 from Will-Lo/add-group-ownership-\nflows\n","date":"2020-11-08 09:17:19","modifiedFileCount":"10","status":"M","submitter":"William Lo"},{"authorTime":"2021-03-09 02:42:57","codes":[{"authorDate":"2021-03-09 02:42:57","commitOrder":7,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, FlowStatusId> key, PatchRequest<FlowConfig> flowConfigPatch) {\n    \r\n    FlowConfig flowConfig = new FlowConfig();\n    try {\n      PatchApplier.applyPatch(flowConfig, flowConfigPatch);\n    } catch (DataProcessingException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_400_BAD_REQUEST, \"Failed to apply patch\", e);\n    }\n    checkUpdateDeleteAllowed(get(key), flowConfig);\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.getFlowConfigResourceHandler().partialUpdateFlowConfig(flowId, flowConfigPatch);\n  }\n","date":"2021-03-09 02:42:57","endLine":190,"groupId":"121489","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@FlowStatusId>key@PatchRequest<FlowConfig>flowConfigPatch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/1e/a39bccade73f0e7d679aba89cd87221c87b76f.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, FlowStatusId> key, PatchRequest<FlowConfig> flowConfigPatch) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.getFlowConfigResourceHandler().partialUpdateFlowConfig(flowId, flowConfigPatch);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsV2Resource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2021-03-09 02:42:57","commitOrder":7,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    if (flowConfig.hasOwningGroup()) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"Owning group property may \"\n          + \"not be set through flowconfigs API, use flowconfigsV2\");\n    }\n    if (flowConfig.getProperties().containsKey(RequesterService.REQUESTER_LIST)) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, RequesterService.REQUESTER_LIST + \" property may \"\n          + \"not be set through flowconfigs API, use flowconfigsV2\");\n    }\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","date":"2021-03-09 02:42:57","endLine":130,"groupId":"121489","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9e/e00c0917c343b4a8617c2255fc08ad3431267d.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"303ec0e99a6987db834638726d3e88daf22ef181","commitMessage":"@@@[GOBBLIN-1402] Allow flow's requester list/owner to be updated\n\nCloses #3238 from jack-moseley/requester-logic-\nupdate\n","date":"2021-03-09 02:42:57","modifiedFileCount":"5","status":"M","submitter":"Jack Moseley"}]
