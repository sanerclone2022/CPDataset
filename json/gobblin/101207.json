[{"authorTime":"2018-09-13 04:37:04","codes":[{"authorDate":"2019-11-01 04:30:34","commitOrder":2,"curCode":"  public void examineSchema(HiveRegistrationUnit registrationUnit) {\n    List<String> columns = Arrays.asList(registrationUnit.getSerDeProps().getProp(serdeConstants.LIST_COLUMNS).split(\",\"));\n    Assert.assertTrue(columns.get(0).equals(\"name\"));\n    Assert.assertTrue(columns.get(1).equals(\"timestamp\"));\n    List<String> columnTypes = Arrays.asList(registrationUnit.getSerDeProps().getProp(serdeConstants.LIST_COLUMN_TYPES).split(\",\"));\n    Assert.assertTrue(columnTypes.get(0).equals(\"string\"));\n    Assert.assertTrue(columnTypes.get(1).equals(\"bigint\"));\n  }\n","date":"2019-11-01 04:30:34","endLine":164,"groupId":"6776","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"examineSchema","params":"(HiveRegistrationUnitregistrationUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a5/b2ee591889973dce203df615d6ee2ebf770d67.src","preCode":"  public void examineSchema(HiveRegistrationUnit registrationUnit) {\n    List<String> columns = Arrays.asList(registrationUnit.getSerDeProps().getProp(serdeConstants.LIST_COLUMNS).split(\",\"));\n    Assert.assertTrue(columns.get(0).equals(\"name\"));\n    Assert.assertTrue(columns.get(1).equals(\"timestamp\"));\n    List<String> columnTypes = Arrays.asList(registrationUnit.getSerDeProps().getProp(serdeConstants.LIST_COLUMN_TYPES).split(\",\"));\n    Assert.assertTrue(columnTypes.get(0).equals(\"string\"));\n    Assert.assertTrue(columnTypes.get(1).equals(\"bigint\"));\n  }\n","realPath":"gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/orc/HiveOrcSerDeManagerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"},{"authorDate":"2018-09-13 04:37:04","commitOrder":2,"curCode":"  public void testSchemaLiteral() throws IOException {\n    State state = new State();\n    HiveAvroSerDeManager manager = new HiveAvroSerDeManager(state);\n    HiveRegistrationUnit registrationUnit = (new HiveTable.Builder()).withDbName(TEST_DB).withTableName(TEST_TABLE).build();\n\n    manager.addSerDeProperties(this.testBasePath, registrationUnit);\n\n    Assert.assertTrue(registrationUnit.getSerDeProps().getProp(HiveAvroSerDeManager.SCHEMA_LITERAL).contains(\"example.avro\"));\n  }\n","date":"2018-09-13 04:37:04","endLine":72,"groupId":"6776","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"testSchemaLiteral","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/05/4ca40eee3768ba29eb5492e7ee948a00924be1.src","preCode":"  public void testSchemaLiteral() throws IOException {\n    State state = new State();\n    HiveAvroSerDeManager manager = new HiveAvroSerDeManager(state);\n    HiveRegistrationUnit registrationUnit = (new HiveTable.Builder()).withDbName(TEST_DB).withTableName(TEST_TABLE).build();\n\n    manager.addSerDeProperties(this.testBasePath, registrationUnit);\n\n    Assert.assertTrue(registrationUnit.getSerDeProps().getProp(HiveAvroSerDeManager.SCHEMA_LITERAL).contains(\"example.avro\"));\n  }\n","realPath":"gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/avro/HiveAvroSerDeManagerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"NB"}],"commitId":"f60409ef0b6768bf46ddd137333d8d56981798fc","commitMessage":"@@@[GOBBLIN-924][GOBBLIN-922][GOBBLIN-909][GOBBLIN-923]GOBBLIN-923][GOBBLIN-906][GOBBLIN-921] Get rid of orc.schema.literal in ORC-ingestion and registration\n\nCloses #2780 from ZihanLi58/GOBBLIN-924\n","date":"2019-11-01 04:30:34","modifiedFileCount":"2","status":"M","submitter":"Zihan Li"},{"authorTime":"2018-09-13 04:37:04","codes":[{"authorDate":"2021-05-27 03:02:12","commitOrder":3,"curCode":"  private void examineSchema(HiveRegistrationUnit registrationUnit) {\n    List<String> columns = Arrays.asList(registrationUnit.getSerDeProps().getProp(serdeConstants.LIST_COLUMNS).split(\",\"));\n    Assert.assertTrue(columns.get(0).equals(\"name\"));\n    Assert.assertTrue(columns.get(1).equals(\"timestamp\"));\n    List<String> columnTypes = Arrays.asList(registrationUnit.getSerDeProps().getProp(serdeConstants.LIST_COLUMN_TYPES).split(\",\"));\n    Assert.assertTrue(columnTypes.get(0).equals(\"string\"));\n    Assert.assertTrue(columnTypes.get(1).equals(\"bigint\"));\n  }\n","date":"2021-06-03 00:50:08","endLine":164,"groupId":"101207","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"examineSchema","params":"(HiveRegistrationUnitregistrationUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8e/947e486ee25bccb7bb7634d111d9f4e8f00c37.src","preCode":"  public void examineSchema(HiveRegistrationUnit registrationUnit) {\n    List<String> columns = Arrays.asList(registrationUnit.getSerDeProps().getProp(serdeConstants.LIST_COLUMNS).split(\",\"));\n    Assert.assertTrue(columns.get(0).equals(\"name\"));\n    Assert.assertTrue(columns.get(1).equals(\"timestamp\"));\n    List<String> columnTypes = Arrays.asList(registrationUnit.getSerDeProps().getProp(serdeConstants.LIST_COLUMN_TYPES).split(\",\"));\n    Assert.assertTrue(columnTypes.get(0).equals(\"string\"));\n    Assert.assertTrue(columnTypes.get(1).equals(\"bigint\"));\n  }\n","realPath":"gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/orc/HiveOrcSerDeManagerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2018-09-13 04:37:04","commitOrder":3,"curCode":"  public void testSchemaLiteral() throws IOException {\n    State state = new State();\n    HiveAvroSerDeManager manager = new HiveAvroSerDeManager(state);\n    HiveRegistrationUnit registrationUnit = (new HiveTable.Builder()).withDbName(TEST_DB).withTableName(TEST_TABLE).build();\n\n    manager.addSerDeProperties(this.testBasePath, registrationUnit);\n\n    Assert.assertTrue(registrationUnit.getSerDeProps().getProp(HiveAvroSerDeManager.SCHEMA_LITERAL).contains(\"example.avro\"));\n  }\n","date":"2018-09-13 04:37:04","endLine":72,"groupId":"101207","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testSchemaLiteral","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/05/4ca40eee3768ba29eb5492e7ee948a00924be1.src","preCode":"  public void testSchemaLiteral() throws IOException {\n    State state = new State();\n    HiveAvroSerDeManager manager = new HiveAvroSerDeManager(state);\n    HiveRegistrationUnit registrationUnit = (new HiveTable.Builder()).withDbName(TEST_DB).withTableName(TEST_TABLE).build();\n\n    manager.addSerDeProperties(this.testBasePath, registrationUnit);\n\n    Assert.assertTrue(registrationUnit.getSerDeProps().getProp(HiveAvroSerDeManager.SCHEMA_LITERAL).contains(\"example.avro\"));\n  }\n","realPath":"gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/avro/HiveAvroSerDeManagerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"}],"commitId":"75f6afff6a39c01569c63ac7895ea692610fbd2c","commitMessage":"@@@[GOBBLIN-1450] Update test framework version for latest IntelliJ\n\nThe recent version of IntelliJ are not fully compatible with old\nversions of testng and junit that we use. As a result IDE does not show\ntest names in the UI correctly.\n\nNew version of test frameworks should solve this problem.\n\nWe also fix a couple of misconfigurations for TestNG. When the class\nis annotated with \"@Test\".  TestNG will run all public methods as tests.\nWe convert a couple of helper methods to private to fix that.\n","date":"2021-06-03 00:50:08","modifiedFileCount":"9","status":"M","submitter":"aprokofiev"}]
