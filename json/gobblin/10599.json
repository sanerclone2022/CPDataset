[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        zkDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 1);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n  }\n","date":"2017-07-31 15:51:25","endLine":184,"groupId":"4234","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetPreviousDatasetStatesByUrns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/74/2aa98b1ccfa1c6747c9cd64242771188c15458.src","preCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        zkDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 1);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/test/java/org/apache/gobblin/runtime/ZkDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        dbDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 1);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n  }\n","date":"2017-07-31 15:51:25","endLine":196,"groupId":"4234","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetPreviousDatasetStatesByUrns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9c/3561018047b5c11b1899b9fdfce060484782a3.src","preCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        dbDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 1);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/MysqlDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2018-01-30 09:08:46","codes":[{"authorDate":"2018-01-30 09:08:46","commitOrder":2,"curCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        zkDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 2);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 2000);\n  }\n","date":"2018-01-30 09:08:46","endLine":201,"groupId":"4234","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetPreviousDatasetStatesByUrns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/10/91cf7e861eb52ff6a29b99332c91f1b3584d12.src","preCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        zkDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 1);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/test/java/org/apache/gobblin/runtime/ZkDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"},{"authorDate":"2018-01-30 09:08:46","commitOrder":2,"curCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        dbDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 2);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 2000);\n  }\n","date":"2018-01-30 09:08:46","endLine":213,"groupId":"4234","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetPreviousDatasetStatesByUrns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/86/ba8babc58dd71c6c8013c27d09ffe974aca873.src","preCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        dbDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 1);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/MysqlDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"}],"commitId":"c35f76e4e2a0f9f25580924d46cef1b732af7d63","commitMessage":"@@@[GOBBLIN-392] Load all dataset states when getLatestDatasetStatesByUrns() is called\n\nCloses #2268 from htran1/fix_dataset_state_fetch\n","date":"2018-01-30 09:08:46","modifiedFileCount":"4","status":"M","submitter":"Hung Tran"},{"authorTime":"2018-02-14 07:48:12","codes":[{"authorDate":"2018-01-30 09:08:46","commitOrder":3,"curCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        zkDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 2);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 2000);\n  }\n","date":"2018-01-30 09:08:46","endLine":201,"groupId":"4234","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetPreviousDatasetStatesByUrns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/10/91cf7e861eb52ff6a29b99332c91f1b3584d12.src","preCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        zkDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 2);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 2000);\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/test/java/org/apache/gobblin/runtime/ZkDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"N"},{"authorDate":"2018-02-14 07:48:12","commitOrder":3,"curCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        dbDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 3);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 2000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN_LOWER);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN_LOWER);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 3000);\n  }\n","date":"2018-02-14 07:48:12","endLine":249,"groupId":"4234","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetPreviousDatasetStatesByUrns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/45/bb44d673f42a8a283661b640314f7aefb0c156.src","preCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        dbDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 2);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 2000);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/MysqlDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"}],"commitId":"c43cf268940bed4d98c0ccba6389d15bacdfaa26","commitMessage":"@@@[GOBBLIN-409] Set collation to latin1_bin for the MySql state store backing table\n\nCloses #2286 from\nhtran1/mysql_state_store_collation\n","date":"2018-02-14 07:48:12","modifiedFileCount":"2","status":"M","submitter":"Hung Tran"},{"authorTime":"2019-12-11 07:56:13","codes":[{"authorDate":"2019-12-11 07:56:13","commitOrder":4,"curCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        zkDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 2);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getId(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getId(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 2000);\n  }\n","date":"2019-12-11 07:56:13","endLine":242,"groupId":"10599","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testGetPreviousDatasetStatesByUrns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/71/e5cbc92c4aea70e187e72d4f626a59938164f6.src","preCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        zkDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 2);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 2000);\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/test/java/org/apache/gobblin/runtime/ZkDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2019-12-11 07:56:13","commitOrder":4,"curCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        dbDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 3);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getId(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getId(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 2000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN_LOWER);\n    Assert.assertEquals(datasetState.getId(), TEST_DATASET_URN_LOWER);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN_LOWER);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 3000);\n  }\n","date":"2019-12-11 07:56:13","endLine":293,"groupId":"10599","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testGetPreviousDatasetStatesByUrns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/95/6a875760f7db3a128cffac91e7bc6d5acc4261.src","preCode":"  public void testGetPreviousDatasetStatesByUrns() throws IOException {\n    Map<String, JobState.DatasetState> datasetStatesByUrns =\n        dbDatasetStateStore.getLatestDatasetStatesByUrns(TEST_JOB_NAME);\n    Assert.assertEquals(datasetStatesByUrns.size(), 3);\n\n    JobState.DatasetState datasetState = datasetStatesByUrns.get(TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 1000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN2);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 2000);\n\n    datasetState = datasetStatesByUrns.get(TEST_DATASET_URN_LOWER);\n    Assert.assertEquals(datasetState.getDatasetUrn(), TEST_DATASET_URN_LOWER);\n    Assert.assertEquals(datasetState.getJobName(), TEST_JOB_NAME);\n    Assert.assertEquals(datasetState.getJobId(), TEST_JOB_ID);\n    Assert.assertEquals(datasetState.getState(), JobState.RunningState.COMMITTED);\n    Assert.assertEquals(datasetState.getStartTime(), this.startTime);\n    Assert.assertEquals(datasetState.getEndTime(), this.startTime + 1000);\n    Assert.assertEquals(datasetState.getDuration(), 3000);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/MysqlDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"}],"commitId":"2304f11e033febd4ab3389937ef8ff48b27e99ed","commitMessage":"@@@[GOBBLIN-1002] Set state id when deserializing state from Gobblin state store[]\n\nCloses #2847 from sv2000/checkPointableWatermark\n","date":"2019-12-11 07:56:13","modifiedFileCount":"7","status":"M","submitter":"sv2000"}]
