[{"authorTime":"2020-11-04 06:14:06","codes":[{"authorDate":"2021-01-15 04:11:22","commitOrder":2,"curCode":"  public UpdateResponse resume(ComplexResourceKey<FlowStatusId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    Long flowExecutionId = key.getKey().getFlowExecutionId();\n    if (this.forceLeader) {\n      HelixUtils.throwErrorIfNotLeader(this.helixManager);\n    }\n    this.eventBus.post(new ResumeFlowEvent(flowGroup, flowName, flowExecutionId));\n    return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","date":"2021-01-15 04:11:22","endLine":83,"groupId":"1298","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"resume","params":"(ComplexResourceKey<FlowStatusId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0e/3b8fe03476be541f8f3b2f693c59111d0fe95f.src","preCode":"  public UpdateResponse resume(ComplexResourceKey<FlowStatusId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    Long flowExecutionId = key.getKey().getFlowExecutionId();\n    if (this.forceLeader) {\n      HelixUtils.throwErrorIfNotLeader(this.helixManager);\n    }\n    this.eventBus.post(new ResumeFlowEvent(flowGroup, flowName, flowExecutionId));\n    return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/restli/GobblinServiceFlowExecutionResourceHandler.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"},{"authorDate":"2020-11-04 06:14:06","commitOrder":2,"curCode":"  public UpdateResponse delete(ComplexResourceKey<FlowStatusId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    Long flowExecutionId = key.getKey().getFlowExecutionId();\n    if (this.forceLeader) {\n      HelixUtils.throwErrorIfNotLeader(this.helixManager);\n    }\n    this.eventBus.post(new KillFlowEvent(flowGroup, flowName, flowExecutionId));\n    return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","date":"2020-11-04 06:14:06","endLine":82,"groupId":"1298","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(ComplexResourceKey<FlowStatusId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2a/94fb07e0a85eb77f08718dac37f4c51eee7c05.src","preCode":"  public UpdateResponse delete(ComplexResourceKey<FlowStatusId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    Long flowExecutionId = key.getKey().getFlowExecutionId();\n    if (this.forceLeader) {\n      HelixUtils.throwErrorIfNotLeader(this.helixManager);\n    }\n    this.eventBus.post(new KillFlowEvent(flowGroup, flowName, flowExecutionId));\n    return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/restli/GobblinServiceFlowExecutionResourceHandler.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"NB"}],"commitId":"4e9326bd96ab9b5ec05dd1cd5e8010a7d6175f0c","commitMessage":"@@@[GOBBLIN-1342] Add API to resume a flow\n\nAdd API to resume a flow\n\nAddress comments\n\nCloses #3179 from jack-moseley/resume-flow\n","date":"2021-01-15 04:11:22","modifiedFileCount":"17","status":"M","submitter":"Jack Moseley"},{"authorTime":"2020-11-04 06:14:06","codes":[{"authorDate":"2021-01-27 06:57:17","commitOrder":3,"curCode":"  public void resume(ComplexResourceKey<FlowStatusId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    Long flowExecutionId = key.getKey().getFlowExecutionId();\n    if (this.forceLeader) {\n      HelixUtils.throwErrorIfNotLeader(this.helixManager);\n    }\n    this.eventBus.post(new ResumeFlowEvent(flowGroup, flowName, flowExecutionId));\n  }\n","date":"2021-01-27 06:57:17","endLine":82,"groupId":"101162","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"resume","params":"(ComplexResourceKey<FlowStatusId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/53/8fc5793fbdad53d3e0069702ab3bf950ddd2fb.src","preCode":"  public UpdateResponse resume(ComplexResourceKey<FlowStatusId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    Long flowExecutionId = key.getKey().getFlowExecutionId();\n    if (this.forceLeader) {\n      HelixUtils.throwErrorIfNotLeader(this.helixManager);\n    }\n    this.eventBus.post(new ResumeFlowEvent(flowGroup, flowName, flowExecutionId));\n    return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/restli/GobblinServiceFlowExecutionResourceHandler.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2020-11-04 06:14:06","commitOrder":3,"curCode":"  public UpdateResponse delete(ComplexResourceKey<FlowStatusId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    Long flowExecutionId = key.getKey().getFlowExecutionId();\n    if (this.forceLeader) {\n      HelixUtils.throwErrorIfNotLeader(this.helixManager);\n    }\n    this.eventBus.post(new KillFlowEvent(flowGroup, flowName, flowExecutionId));\n    return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","date":"2020-11-04 06:14:06","endLine":82,"groupId":"101162","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(ComplexResourceKey<FlowStatusId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2a/94fb07e0a85eb77f08718dac37f4c51eee7c05.src","preCode":"  public UpdateResponse delete(ComplexResourceKey<FlowStatusId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    Long flowExecutionId = key.getKey().getFlowExecutionId();\n    if (this.forceLeader) {\n      HelixUtils.throwErrorIfNotLeader(this.helixManager);\n    }\n    this.eventBus.post(new KillFlowEvent(flowGroup, flowName, flowExecutionId));\n    return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/restli/GobblinServiceFlowExecutionResourceHandler.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"}],"commitId":"01136a5b3a40eca85cf564a99c63a1ed98e2671d","commitMessage":"@@@[GOBBLIN-1370] Switch flow resume to be a restli action\n\nCloses #3211 from jack-moseley/resume-action\n","date":"2021-01-27 06:57:17","modifiedFileCount":"6","status":"M","submitter":"Jack Moseley"}]
