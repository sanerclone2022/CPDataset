[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testCompilerWithoutTemplateCatalog() {\n    FlowSpec flowSpec = initFlowSpec();\n\n    \r\n    Map<Spec, SpecExecutorInstanceProducer> specExecutorMapping = this.compilerWithoutTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(specExecutorMapping, \"Expected non null mapping.\");\n    Assert.assertTrue(specExecutorMapping.size() == 1, \"Exepected 1 executor for FlowSpec.\");\n\n    \r\n    Spec spec = specExecutorMapping.keySet().iterator().next();\n    Assert.assertTrue(spec instanceof JobSpec, \"Expected JobSpec compiled from FlowSpec.\");\n\n    \r\n    JobSpec jobSpec = (JobSpec) spec;\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty1\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty2\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty3\"));\n    Assert.assertEquals(jobSpec.getConfig().getString(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY), TEST_SOURCE_NAME);\n    Assert.assertFalse(jobSpec.getConfig().hasPath(ConfigurationKeys.JOB_SCHEDULE_KEY));\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertTrue(jobSpec.getConfig().hasPath(ConfigurationKeys.FLOW_EXECUTION_ID_KEY));\n  }\n","date":"2017-07-31 15:51:25","endLine":240,"groupId":"4145","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompilerWithoutTemplateCatalog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/3dc152e12144db7e3eb4d6c62e722c2cdebafb.src","preCode":"  public void testCompilerWithoutTemplateCatalog() {\n    FlowSpec flowSpec = initFlowSpec();\n\n    \r\n    Map<Spec, SpecExecutorInstanceProducer> specExecutorMapping = this.compilerWithoutTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(specExecutorMapping, \"Expected non null mapping.\");\n    Assert.assertTrue(specExecutorMapping.size() == 1, \"Exepected 1 executor for FlowSpec.\");\n\n    \r\n    Spec spec = specExecutorMapping.keySet().iterator().next();\n    Assert.assertTrue(spec instanceof JobSpec, \"Expected JobSpec compiled from FlowSpec.\");\n\n    \r\n    JobSpec jobSpec = (JobSpec) spec;\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty1\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty2\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty3\"));\n    Assert.assertEquals(jobSpec.getConfig().getString(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY), TEST_SOURCE_NAME);\n    Assert.assertFalse(jobSpec.getConfig().hasPath(ConfigurationKeys.JOB_SCHEDULE_KEY));\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertTrue(jobSpec.getConfig().hasPath(ConfigurationKeys.FLOW_EXECUTION_ID_KEY));\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testNoJobSpecCompilation() {\n    FlowSpec flowSpec = initFlowSpec(TEST_FLOW_GROUP, TEST_FLOW_NAME, \"unsupportedSource\", \"unsupportedSink\");\n\n    \r\n    Map<Spec, SpecExecutorInstanceProducer> specExecutorMapping = this.compilerWithTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(specExecutorMapping, \"Expected non null mapping.\");\n    Assert.assertTrue(specExecutorMapping.size() == 0, \"Exepected 1 executor for FlowSpec.\");\n  }\n","date":"2017-07-31 15:51:25","endLine":252,"groupId":"4145","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoJobSpecCompilation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/3dc152e12144db7e3eb4d6c62e722c2cdebafb.src","preCode":"  public void testNoJobSpecCompilation() {\n    FlowSpec flowSpec = initFlowSpec(TEST_FLOW_GROUP, TEST_FLOW_NAME, \"unsupportedSource\", \"unsupportedSink\");\n\n    \r\n    Map<Spec, SpecExecutorInstanceProducer> specExecutorMapping = this.compilerWithTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(specExecutorMapping, \"Expected non null mapping.\");\n    Assert.assertTrue(specExecutorMapping.size() == 0, \"Exepected 1 executor for FlowSpec.\");\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-09-12 17:29:05","codes":[{"authorDate":"2017-09-12 17:29:05","commitOrder":2,"curCode":"  public void testCompilerWithoutTemplateCatalog() {\n    FlowSpec flowSpec = initFlowSpec();\n\n    \r\n    Map<Spec, SpecExecutor> specExecutorMapping = this.compilerWithoutTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(specExecutorMapping, \"Expected non null mapping.\");\n    Assert.assertTrue(specExecutorMapping.size() == 1, \"Exepected 1 executor for FlowSpec.\");\n\n    \r\n    Spec spec = specExecutorMapping.keySet().iterator().next();\n    Assert.assertTrue(spec instanceof JobSpec, \"Expected JobSpec compiled from FlowSpec.\");\n\n    \r\n    JobSpec jobSpec = (JobSpec) spec;\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty1\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty2\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty3\"));\n    Assert.assertEquals(jobSpec.getConfig().getString(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY), TEST_SOURCE_NAME);\n    Assert.assertFalse(jobSpec.getConfig().hasPath(ConfigurationKeys.JOB_SCHEDULE_KEY));\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertTrue(jobSpec.getConfig().hasPath(ConfigurationKeys.FLOW_EXECUTION_ID_KEY));\n  }\n","date":"2017-09-12 17:29:21","endLine":241,"groupId":"4145","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompilerWithoutTemplateCatalog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/86/4b2385d4aa0e1685013586eff8b53b1400a2a0.src","preCode":"  public void testCompilerWithoutTemplateCatalog() {\n    FlowSpec flowSpec = initFlowSpec();\n\n    \r\n    Map<Spec, SpecExecutorInstanceProducer> specExecutorMapping = this.compilerWithoutTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(specExecutorMapping, \"Expected non null mapping.\");\n    Assert.assertTrue(specExecutorMapping.size() == 1, \"Exepected 1 executor for FlowSpec.\");\n\n    \r\n    Spec spec = specExecutorMapping.keySet().iterator().next();\n    Assert.assertTrue(spec instanceof JobSpec, \"Expected JobSpec compiled from FlowSpec.\");\n\n    \r\n    JobSpec jobSpec = (JobSpec) spec;\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty1\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty2\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty3\"));\n    Assert.assertEquals(jobSpec.getConfig().getString(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY), TEST_SOURCE_NAME);\n    Assert.assertFalse(jobSpec.getConfig().hasPath(ConfigurationKeys.JOB_SCHEDULE_KEY));\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertTrue(jobSpec.getConfig().hasPath(ConfigurationKeys.FLOW_EXECUTION_ID_KEY));\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"},{"authorDate":"2017-09-12 17:29:05","commitOrder":2,"curCode":"  public void testNoJobSpecCompilation() {\n    FlowSpec flowSpec = initFlowSpec(TEST_FLOW_GROUP, TEST_FLOW_NAME, \"unsupportedSource\", \"unsupportedSink\");\n\n    \r\n    Map<Spec, SpecExecutor> specExecutorMapping = this.compilerWithTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(specExecutorMapping, \"Expected non null mapping.\");\n    Assert.assertTrue(specExecutorMapping.size() == 0, \"Exepected 1 executor for FlowSpec.\");\n  }\n","date":"2017-09-12 17:29:21","endLine":253,"groupId":"4145","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoJobSpecCompilation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/86/4b2385d4aa0e1685013586eff8b53b1400a2a0.src","preCode":"  public void testNoJobSpecCompilation() {\n    FlowSpec flowSpec = initFlowSpec(TEST_FLOW_GROUP, TEST_FLOW_NAME, \"unsupportedSource\", \"unsupportedSink\");\n\n    \r\n    Map<Spec, SpecExecutorInstanceProducer> specExecutorMapping = this.compilerWithTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(specExecutorMapping, \"Expected non null mapping.\");\n    Assert.assertTrue(specExecutorMapping.size() == 0, \"Exepected 1 executor for FlowSpec.\");\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"}],"commitId":"9402a9037554bcae4cc958a69a85eb4a16e8c179","commitMessage":"@@@[GOBBLIN-3] Multi-hop flow compiler implementation\n\nCloses #2078 from autumnust/flowcompiler\n","date":"2017-09-12 17:29:21","modifiedFileCount":"18","status":"M","submitter":"Lei Sun"},{"authorTime":"2018-08-10 00:40:43","codes":[{"authorDate":"2018-08-10 00:40:43","commitOrder":3,"curCode":"  public void testCompilerWithoutTemplateCatalog() {\n    FlowSpec flowSpec = initFlowSpec();\n\n    \r\n    Dag<JobExecutionPlan> jobExecutionPlanDag = this.compilerWithoutTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(jobExecutionPlanDag, \"Expected non null dag.\");\n    Assert.assertTrue(jobExecutionPlanDag.getNodes().size() == 1, \"Exepected 1 executor for FlowSpec.\");\n\n    \r\n    Assert.assertEquals(jobExecutionPlanDag.getStartNodes().size(), 1);\n    Dag.DagNode<JobExecutionPlan> dagNode = jobExecutionPlanDag.getStartNodes().get(0);\n    Spec spec = dagNode.getValue().getJobSpec();\n    Assert.assertTrue(spec instanceof JobSpec, \"Expected JobSpec compiled from FlowSpec.\");\n\n    \r\n    JobSpec jobSpec = (JobSpec) spec;\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty1\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty2\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty3\"));\n    Assert.assertEquals(jobSpec.getConfig().getString(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY), TEST_SOURCE_NAME);\n    Assert.assertFalse(jobSpec.getConfig().hasPath(ConfigurationKeys.JOB_SCHEDULE_KEY));\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertTrue(jobSpec.getConfig().hasPath(ConfigurationKeys.FLOW_EXECUTION_ID_KEY));\n\n    \r\n    Assert.assertNull(jobExecutionPlanDag.getChildren(dagNode));\n  }\n","date":"2018-08-10 00:40:43","endLine":249,"groupId":"4145","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompilerWithoutTemplateCatalog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/c1/134a8a834dc0e61ed8d2c86acd3a1d2dda2ffb.src","preCode":"  public void testCompilerWithoutTemplateCatalog() {\n    FlowSpec flowSpec = initFlowSpec();\n\n    \r\n    Map<Spec, SpecExecutor> specExecutorMapping = this.compilerWithoutTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(specExecutorMapping, \"Expected non null mapping.\");\n    Assert.assertTrue(specExecutorMapping.size() == 1, \"Exepected 1 executor for FlowSpec.\");\n\n    \r\n    Spec spec = specExecutorMapping.keySet().iterator().next();\n    Assert.assertTrue(spec instanceof JobSpec, \"Expected JobSpec compiled from FlowSpec.\");\n\n    \r\n    JobSpec jobSpec = (JobSpec) spec;\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty1\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty2\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty3\"));\n    Assert.assertEquals(jobSpec.getConfig().getString(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY), TEST_SOURCE_NAME);\n    Assert.assertFalse(jobSpec.getConfig().hasPath(ConfigurationKeys.JOB_SCHEDULE_KEY));\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertTrue(jobSpec.getConfig().hasPath(ConfigurationKeys.FLOW_EXECUTION_ID_KEY));\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2018-08-10 00:40:43","commitOrder":3,"curCode":"  public void testNoJobSpecCompilation() {\n    FlowSpec flowSpec = initFlowSpec(TEST_FLOW_GROUP, TEST_FLOW_NAME, \"unsupportedSource\", \"unsupportedSink\");\n\n    \r\n    Dag<JobExecutionPlan> jobExecutionPlanDag = this.compilerWithTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(jobExecutionPlanDag, \"Expected non null dag.\");\n    Assert.assertTrue(jobExecutionPlanDag.getNodes().size() == 0, \"Exepected 1 executor for FlowSpec.\");\n  }\n","date":"2018-08-10 00:40:43","endLine":261,"groupId":"4141","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoJobSpecCompilation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/c1/134a8a834dc0e61ed8d2c86acd3a1d2dda2ffb.src","preCode":"  public void testNoJobSpecCompilation() {\n    FlowSpec flowSpec = initFlowSpec(TEST_FLOW_GROUP, TEST_FLOW_NAME, \"unsupportedSource\", \"unsupportedSink\");\n\n    \r\n    Map<Spec, SpecExecutor> specExecutorMapping = this.compilerWithTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(specExecutorMapping, \"Expected non null mapping.\");\n    Assert.assertTrue(specExecutorMapping.size() == 0, \"Exepected 1 executor for FlowSpec.\");\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"}],"commitId":"ef26d287d95edcc5208daed651e8ef8e09efa5d0","commitMessage":"@@@[GOBBLIN-554] Change signature of SpecCompiler#compileFlow() to return a DAG of JobSpecs instead of a HashMap.\n\nCloses #2415 from sv2000/dag1\n","date":"2018-08-10 00:40:43","modifiedFileCount":"6","status":"M","submitter":"suvasude"},{"authorTime":"2018-08-10 00:40:43","codes":[{"authorDate":"2018-10-03 00:23:34","commitOrder":4,"curCode":"  public void testCompilerWithoutTemplateCatalog() {\n    FlowSpec flowSpec = initFlowSpec();\n\n    \r\n    Dag<JobExecutionPlan> jobExecutionPlanDag = this.compilerWithoutTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(jobExecutionPlanDag, \"Expected non null dag.\");\n    Assert.assertTrue(jobExecutionPlanDag.getNodes().size() == 1, \"Exepected 1 executor for FlowSpec.\");\n\n    \r\n    Assert.assertEquals(jobExecutionPlanDag.getStartNodes().size(), 1);\n    Dag.DagNode<JobExecutionPlan> dagNode = jobExecutionPlanDag.getStartNodes().get(0);\n    Spec spec = dagNode.getValue().getJobSpec();\n    Assert.assertTrue(spec instanceof JobSpec, \"Expected JobSpec compiled from FlowSpec.\");\n\n    \r\n    JobSpec jobSpec = (JobSpec) spec;\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty1\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty2\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty3\"));\n    Assert.assertEquals(jobSpec.getConfig().getString(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY), TEST_SOURCE_NAME);\n    Assert.assertFalse(jobSpec.getConfig().hasPath(ConfigurationKeys.JOB_SCHEDULE_KEY));\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertTrue(jobSpec.getConfig().hasPath(ConfigurationKeys.FLOW_EXECUTION_ID_KEY));\n\n    \r\n    Assert.assertEquals(jobExecutionPlanDag.getChildren(dagNode).size(), 0);\n  }\n","date":"2018-10-03 00:23:34","endLine":249,"groupId":"101120","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testCompilerWithoutTemplateCatalog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d4/f2bc2baa624f615b53fd871e78f51e908b7138.src","preCode":"  public void testCompilerWithoutTemplateCatalog() {\n    FlowSpec flowSpec = initFlowSpec();\n\n    \r\n    Dag<JobExecutionPlan> jobExecutionPlanDag = this.compilerWithoutTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(jobExecutionPlanDag, \"Expected non null dag.\");\n    Assert.assertTrue(jobExecutionPlanDag.getNodes().size() == 1, \"Exepected 1 executor for FlowSpec.\");\n\n    \r\n    Assert.assertEquals(jobExecutionPlanDag.getStartNodes().size(), 1);\n    Dag.DagNode<JobExecutionPlan> dagNode = jobExecutionPlanDag.getStartNodes().get(0);\n    Spec spec = dagNode.getValue().getJobSpec();\n    Assert.assertTrue(spec instanceof JobSpec, \"Expected JobSpec compiled from FlowSpec.\");\n\n    \r\n    JobSpec jobSpec = (JobSpec) spec;\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty1\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty2\"));\n    Assert.assertTrue(!jobSpec.getConfig().hasPath(\"testProperty3\"));\n    Assert.assertEquals(jobSpec.getConfig().getString(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY), TEST_SOURCE_NAME);\n    Assert.assertFalse(jobSpec.getConfig().hasPath(ConfigurationKeys.JOB_SCHEDULE_KEY));\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.JOB_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_NAME_KEY), TEST_FLOW_NAME);\n    Assert.assertEquals(jobSpec.getConfig().getString(ConfigurationKeys.FLOW_GROUP_KEY), TEST_FLOW_GROUP);\n    Assert.assertTrue(jobSpec.getConfig().hasPath(ConfigurationKeys.FLOW_EXECUTION_ID_KEY));\n\n    \r\n    Assert.assertNull(jobExecutionPlanDag.getChildren(dagNode));\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2018-08-10 00:40:43","commitOrder":4,"curCode":"  public void testNoJobSpecCompilation() {\n    FlowSpec flowSpec = initFlowSpec(TEST_FLOW_GROUP, TEST_FLOW_NAME, \"unsupportedSource\", \"unsupportedSink\");\n\n    \r\n    Dag<JobExecutionPlan> jobExecutionPlanDag = this.compilerWithTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(jobExecutionPlanDag, \"Expected non null dag.\");\n    Assert.assertTrue(jobExecutionPlanDag.getNodes().size() == 0, \"Exepected 1 executor for FlowSpec.\");\n  }\n","date":"2018-08-10 00:40:43","endLine":261,"groupId":"101120","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoJobSpecCompilation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/c1/134a8a834dc0e61ed8d2c86acd3a1d2dda2ffb.src","preCode":"  public void testNoJobSpecCompilation() {\n    FlowSpec flowSpec = initFlowSpec(TEST_FLOW_GROUP, TEST_FLOW_NAME, \"unsupportedSource\", \"unsupportedSink\");\n\n    \r\n    Dag<JobExecutionPlan> jobExecutionPlanDag = this.compilerWithTemplateCalague.compileFlow(flowSpec);\n\n    \r\n    Assert.assertNotNull(jobExecutionPlanDag, \"Expected non null dag.\");\n    Assert.assertTrue(jobExecutionPlanDag.getNodes().size() == 0, \"Exepected 1 executor for FlowSpec.\");\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"N"}],"commitId":"71184cdb1bb35ac5874fffd1415ca632c6ee92c0","commitMessage":"@@@[GOBBLIN-590] Implement Workflow Manager in Gobblin-as-a-Service (GaaS).\n\nCloses #2456 from sv2000/workflow\n","date":"2018-10-03 00:23:34","modifiedFileCount":"12","status":"M","submitter":"sv2000"}]
