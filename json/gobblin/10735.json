[{"authorTime":"2019-04-25 04:04:38","codes":[{"authorDate":"2019-04-25 04:04:38","commitOrder":1,"curCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"TopologyCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n  }\n","date":"2019-04-25 04:04:38","endLine":85,"groupId":"6344","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/42/54b0439adbb36fed31033fe5d965c280727828.src","preCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"TopologyCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_catalog/TopologyCatalogTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2019-04-25 04:04:38","commitOrder":1,"curCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"FlowCatalogTest\");\n\n    this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(flowCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.flowSpec = initFlowSpec(SPEC_STORE_DIR);\n  }\n","date":"2019-04-25 04:04:38","endLine":81,"groupId":"6344","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3d/73281c4f4e55dc1d201585f17e6f322d395c8e.src","preCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"FlowCatalogTest\");\n\n    this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(flowCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.flowSpec = initFlowSpec(SPEC_STORE_DIR);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_catalog/FlowCatalogTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"d972f72edf359b1348554ba9948f4942ea0c8c69","commitMessage":"@@@[GOBBLIN-746] Async loading FlowSpec\n\nDear Gobblin maintainers. \n\nPlease accept this PR. I understand that it will\nnot be reviewed until I have checked off all the\nsteps below!\n\nThis PR contains:\n- Change `SpecStore` interface to add listing-like\nmethods.  returning an iterator of all `Spec`s it\ncontains.\n- Loading and scheduling `FlowSpec` in\n`GobblinServiceJobScheduler` asynchronously and\nnotifying the completeness using a countdownlatch.\n- Add unit tests for `FSSpecStore` and\n`GobblinServiceJobScheduler`.\n\n\n JIRA\n- [x] My PR addresses the following [Gobblin JIRA]\n    -\nhttps://issues.apache.org/jira/browse/GOBBLIN-746\n\n\n Description\n- [x] Here are some details about my PR.  including\nscreenshots (if applicable):\n\n\n Tests\n- [x] My PR adds the following unit tests __OR__\ndoes not need testing for this extremely good\nreason:\n\n\n Commits\n- [x] My commits all reference JIRA issues in\ntheir subject lines.  and I have squashed multiple\ncommits if they address the same issue. In\naddition.  my commits follow the guidelines from\n\"[How to write a good git commit\nmessage](http://chris.beams.io/posts/git-\ncommit/)\":\n    1. Subject is separated from body by a blank line\n    2. Subject is limited to 50 characters\n    3. Subject does not end with a period\n    4. Subject uses the imperative mood (\"add\".  not\n\"adding\")\n    5. Body wraps at 72 characters\n    6. Body explains \"what\" and \"why\".  not \"how\"\n\nAdd method in specStore to return an iterator of\nSpec URI\n\nAdd async loading and unit test\n\nFix fingbusMain\n\nAddress comments and fix travis failure\n\nCloses #2611 from autumnust/asyncLoadingFlowSpec\n","date":"2019-04-25 04:04:38","modifiedFileCount":"6","status":"B","submitter":"autumnust"},{"authorTime":"2021-05-07 07:45:15","codes":[{"authorDate":"2019-04-25 04:04:38","commitOrder":2,"curCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"TopologyCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n  }\n","date":"2019-04-25 04:04:38","endLine":85,"groupId":"10735","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/42/54b0439adbb36fed31033fe5d965c280727828.src","preCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"TopologyCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_catalog/TopologyCatalogTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2021-05-07 07:45:15","commitOrder":2,"curCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"FlowCatalogTest\");\n\n    this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n\n    this.mockListener = mock(SpecCatalogListener.class);\n    when(mockListener.getName()).thenReturn(ServiceConfigKeys.GOBBLIN_SERVICE_JOB_SCHEDULER_LISTENER_CLASS);\n    when(mockListener.onAddSpec(any())).thenReturn(new AddSpecResponse(\"\"));\n\n    this.flowCatalog.addListener(mockListener);\n\n    this.serviceLauncher.addService(flowCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.flowSpec = initFlowSpec(SPEC_STORE_DIR);\n  }\n","date":"2021-05-07 07:45:15","endLine":95,"groupId":"10735","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/91/fee5254aeb48d3080270e1330846a7c41b945f.src","preCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"FlowCatalogTest\");\n\n    this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(flowCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.flowSpec = initFlowSpec(SPEC_STORE_DIR);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_catalog/FlowCatalogTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"701840858f1323a1f009a44bc70c1e14e7464935","commitMessage":"@@@[GOBBLIN-1439] Handle flow configs that cause compilation errors from being added and blocking scheduler\n\nCloses #3273 from Will-Lo/handle-flowspec-\ncompilation-errors\n","date":"2021-05-07 07:45:15","modifiedFileCount":"4","status":"M","submitter":"William Lo"}]
