[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private FileAwareInputStream getCompressedInputStream(final String filePath, final String newFileName) throws Exception {\n    UnGzipConverter converter = new UnGzipConverter();\n\n    FileSystem fs = FileSystem.getLocal(new Configuration());\n\n    String fullPath = getClass().getClassLoader().getResource(filePath).getFile();\n    FileStatus status = fs.getFileStatus(testTempPath);\n\n    OwnerAndPermission ownerAndPermission =\n        new OwnerAndPermission(status.getOwner(), status.getGroup(), new FsPermission(FsAction.ALL, FsAction.ALL,\n            FsAction.ALL));\n    CopyableFile cf =\n        CopyableFileUtils.getTestCopyableFile(filePath, new Path(testTempPath, newFileName).toString(), newFileName,\n            ownerAndPermission);\n\n    FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(cf, fs.open(new Path(fullPath)));\n\n    Iterable<FileAwareInputStream> iterable =\n        converter.convertRecord(\"outputSchema\", fileAwareInputStream, new WorkUnitState());\n\n    return Iterables.getFirst(iterable, null);\n  }\n","date":"2017-07-31 15:51:25","endLine":130,"groupId":"6464","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getCompressedInputStream","params":"(finalStringfilePath@finalStringnewFileName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d2/406bf6e4046e1c2fa760ef56c40cbe3f5caf7a.src","preCode":"  private FileAwareInputStream getCompressedInputStream(final String filePath, final String newFileName) throws Exception {\n    UnGzipConverter converter = new UnGzipConverter();\n\n    FileSystem fs = FileSystem.getLocal(new Configuration());\n\n    String fullPath = getClass().getClassLoader().getResource(filePath).getFile();\n    FileStatus status = fs.getFileStatus(testTempPath);\n\n    OwnerAndPermission ownerAndPermission =\n        new OwnerAndPermission(status.getOwner(), status.getGroup(), new FsPermission(FsAction.ALL, FsAction.ALL,\n            FsAction.ALL));\n    CopyableFile cf =\n        CopyableFileUtils.getTestCopyableFile(filePath, new Path(testTempPath, newFileName).toString(), newFileName,\n            ownerAndPermission);\n\n    FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(cf, fs.open(new Path(fullPath)));\n\n    Iterable<FileAwareInputStream> iterable =\n        converter.convertRecord(\"outputSchema\", fileAwareInputStream, new WorkUnitState());\n\n    return Iterables.getFirst(iterable, null);\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/writer/TarArchiveInputStreamDataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testGz(final String filePath, final String expectedText) throws Exception {\n\n    UnGzipConverter converter = new UnGzipConverter();\n\n    FileSystem fs = FileSystem.getLocal(new Configuration());\n\n    String fullPath = getClass().getClassLoader().getResource(filePath).getFile();\n    FileAwareInputStream fileAwareInputStream =\n        new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(filePath), fs.open(new Path(fullPath)));\n\n    Iterable<FileAwareInputStream> iterable =\n        converter.convertRecord(\"outputSchema\", fileAwareInputStream, new WorkUnitState());\n\n    String actual = readGzipStreamAsString(Iterables.getFirst(iterable, null).getInputStream());\n    Assert.assertEquals(actual.trim(), expectedText);\n\n  }\n","date":"2017-07-31 15:51:25","endLine":70,"groupId":"3621","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGz","params":"(finalStringfilePath@finalStringexpectedText)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9f/1f8c7ec96587478515bdf59b86633a6d67a545.src","preCode":"  public void testGz(final String filePath, final String expectedText) throws Exception {\n\n    UnGzipConverter converter = new UnGzipConverter();\n\n    FileSystem fs = FileSystem.getLocal(new Configuration());\n\n    String fullPath = getClass().getClassLoader().getResource(filePath).getFile();\n    FileAwareInputStream fileAwareInputStream =\n        new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(filePath), fs.open(new Path(fullPath)));\n\n    Iterable<FileAwareInputStream> iterable =\n        converter.convertRecord(\"outputSchema\", fileAwareInputStream, new WorkUnitState());\n\n    String actual = readGzipStreamAsString(Iterables.getFirst(iterable, null).getInputStream());\n    Assert.assertEquals(actual.trim(), expectedText);\n\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/converter/UnGzipConverterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2018-10-22 23:39:46","codes":[{"authorDate":"2018-10-22 23:39:46","commitOrder":2,"curCode":"  private FileAwareInputStream getCompressedInputStream(final String filePath, final String newFileName) throws Exception {\n    UnGzipConverter converter = new UnGzipConverter();\n\n    FileSystem fs = FileSystem.getLocal(new Configuration());\n\n    String fullPath = getClass().getClassLoader().getResource(filePath).getFile();\n    FileStatus status = fs.getFileStatus(testTempPath);\n\n    OwnerAndPermission ownerAndPermission =\n        new OwnerAndPermission(status.getOwner(), status.getGroup(), new FsPermission(FsAction.ALL, FsAction.ALL,\n            FsAction.ALL));\n    CopyableFile cf =\n        CopyableFileUtils.getTestCopyableFile(filePath, new Path(testTempPath, newFileName).toString(), newFileName,\n            ownerAndPermission);\n\n    FileAwareInputStream fileAwareInputStream = FileAwareInputStream.builder().file(cf)\n        .inputStream(fs.open(new Path(fullPath))).build();\n\n    Iterable<FileAwareInputStream> iterable =\n        converter.convertRecord(\"outputSchema\", fileAwareInputStream, new WorkUnitState());\n\n    return Iterables.getFirst(iterable, null);\n  }\n","date":"2018-10-22 23:39:46","endLine":131,"groupId":"101614","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getCompressedInputStream","params":"(finalStringfilePath@finalStringnewFileName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ba/a1c615c0fb6c25fb59309919f3dbb581dce83c.src","preCode":"  private FileAwareInputStream getCompressedInputStream(final String filePath, final String newFileName) throws Exception {\n    UnGzipConverter converter = new UnGzipConverter();\n\n    FileSystem fs = FileSystem.getLocal(new Configuration());\n\n    String fullPath = getClass().getClassLoader().getResource(filePath).getFile();\n    FileStatus status = fs.getFileStatus(testTempPath);\n\n    OwnerAndPermission ownerAndPermission =\n        new OwnerAndPermission(status.getOwner(), status.getGroup(), new FsPermission(FsAction.ALL, FsAction.ALL,\n            FsAction.ALL));\n    CopyableFile cf =\n        CopyableFileUtils.getTestCopyableFile(filePath, new Path(testTempPath, newFileName).toString(), newFileName,\n            ownerAndPermission);\n\n    FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(cf, fs.open(new Path(fullPath)));\n\n    Iterable<FileAwareInputStream> iterable =\n        converter.convertRecord(\"outputSchema\", fileAwareInputStream, new WorkUnitState());\n\n    return Iterables.getFirst(iterable, null);\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/writer/TarArchiveInputStreamDataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2018-10-22 23:39:46","commitOrder":2,"curCode":"  public void testGz(final String filePath, final String expectedText) throws Exception {\n\n    UnGzipConverter converter = new UnGzipConverter();\n\n    FileSystem fs = FileSystem.getLocal(new Configuration());\n\n    String fullPath = getClass().getClassLoader().getResource(filePath).getFile();\n    FileAwareInputStream fileAwareInputStream = FileAwareInputStream.builder()\n        .file(CopyableFileUtils.getTestCopyableFile(filePath)).inputStream(fs.open(new Path(fullPath))).build();\n\n    Iterable<FileAwareInputStream> iterable =\n        converter.convertRecord(\"outputSchema\", fileAwareInputStream, new WorkUnitState());\n\n    String actual = readGzipStreamAsString(Iterables.getFirst(iterable, null).getInputStream());\n    Assert.assertEquals(actual.trim(), expectedText);\n\n  }\n","date":"2018-10-22 23:39:46","endLine":70,"groupId":"101614","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testGz","params":"(finalStringfilePath@finalStringexpectedText)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/07/db7793f3c01eee0e5023edcc0052e75e3545d2.src","preCode":"  public void testGz(final String filePath, final String expectedText) throws Exception {\n\n    UnGzipConverter converter = new UnGzipConverter();\n\n    FileSystem fs = FileSystem.getLocal(new Configuration());\n\n    String fullPath = getClass().getClassLoader().getResource(filePath).getFile();\n    FileAwareInputStream fileAwareInputStream =\n        new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(filePath), fs.open(new Path(fullPath)));\n\n    Iterable<FileAwareInputStream> iterable =\n        converter.convertRecord(\"outputSchema\", fileAwareInputStream, new WorkUnitState());\n\n    String actual = readGzipStreamAsString(Iterables.getFirst(iterable, null).getInputStream());\n    Assert.assertEquals(actual.trim(), expectedText);\n\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/converter/UnGzipConverterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"cba3699299c7a4013fc4c193caebe87c1cac5b76","commitMessage":"@@@[GOBBLIN-598] Add DistcpFileSplitter to allow for block level distcp\n\n[GOBBLIN-598] Add DistcpFileSplitter to allow for\nblock level distcp\n\nFix task state bug for merging in block distcp\n\nAddress review comments.  and add javadoc/comments\n\nAllowSplit and ADL modifications\n\nCloses #2461 from cshen98/distcp1\n","date":"2018-10-22 23:39:46","modifiedFileCount":"14","status":"M","submitter":"Carl Shen"}]
