[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testDefaults() throws Exception {\n\n    DatePartitionHiveVersionFinder versionFinder = new DatePartitionHiveVersionFinder(this.fs, ConfigFactory.empty());\n    String tableName = \"VfTb1\";\n\n    Table tbl = this.hiveMetastoreTestUtils.createTestTable(dbName, tableName, ImmutableList.of(\"datepartition\"));\n    org.apache.hadoop.hive.metastore.api.Partition tp =\n        this.hiveMetastoreTestUtils.addTestPartition(tbl, ImmutableList.of(\"2016-01-01-20\"), (int) System.currentTimeMillis());\n    Partition partition = new Partition(new org.apache.hadoop.hive.ql.metadata.Table(tbl), tp);\n\n    assertThat(partition.getName(), is(\"datepartition=2016-01-01-20\"));\n    TimestampedHiveDatasetVersion dv = versionFinder.getDatasetVersion(partition);\n    Assert.assertEquals(dv.getDateTime(), formatter.parseDateTime(\"2016/01/01/20\"));\n\n  }\n","date":"2017-07-31 15:51:25","endLine":87,"groupId":"6393","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e0/28c3483e0ce47261c6cf961622c696d5ce0287.src","preCode":"  public void testDefaults() throws Exception {\n\n    DatePartitionHiveVersionFinder versionFinder = new DatePartitionHiveVersionFinder(this.fs, ConfigFactory.empty());\n    String tableName = \"VfTb1\";\n\n    Table tbl = this.hiveMetastoreTestUtils.createTestTable(dbName, tableName, ImmutableList.of(\"datepartition\"));\n    org.apache.hadoop.hive.metastore.api.Partition tp =\n        this.hiveMetastoreTestUtils.addTestPartition(tbl, ImmutableList.of(\"2016-01-01-20\"), (int) System.currentTimeMillis());\n    Partition partition = new Partition(new org.apache.hadoop.hive.ql.metadata.Table(tbl), tp);\n\n    assertThat(partition.getName(), is(\"datepartition=2016-01-01-20\"));\n    TimestampedHiveDatasetVersion dv = versionFinder.getDatasetVersion(partition);\n    Assert.assertEquals(dv.getDateTime(), formatter.parseDateTime(\"2016/01/01/20\"));\n\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/version/finder/DatePartitionedHiveVersionFinderTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testMultiplePartitionFields() throws Exception {\n    DatePartitionHiveVersionFinder versionFinder = new DatePartitionHiveVersionFinder(this.fs, ConfigFactory.empty());\n    String tableName = \"VfTb3\";\n\n    Table tbl = this.hiveMetastoreTestUtils.createTestTable(dbName, tableName, ImmutableList.of(\"datepartition\", \"field1\"));\n    org.apache.hadoop.hive.metastore.api.Partition tp =\n        this.hiveMetastoreTestUtils.addTestPartition(tbl, ImmutableList.of(\"2016-01-01-20\", \"f1\"), (int) System.currentTimeMillis());\n    Partition partition = new Partition(new org.apache.hadoop.hive.ql.metadata.Table(tbl), tp);\n\n    assertThat(partition.getName(), anyOf(is(\"field1=f1/datepartition=2016-01-01-20\"), is(\"datepartition=2016-01-01-20/field1=f1\")));\n    TimestampedHiveDatasetVersion dv = versionFinder.getDatasetVersion(partition);\n    Assert.assertEquals(dv.getDateTime(), formatter.parseDateTime(\"2016/01/01/20\"));\n\n  }\n","date":"2017-07-31 15:51:25","endLine":121,"groupId":"6395","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiplePartitionFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e0/28c3483e0ce47261c6cf961622c696d5ce0287.src","preCode":"  public void testMultiplePartitionFields() throws Exception {\n    DatePartitionHiveVersionFinder versionFinder = new DatePartitionHiveVersionFinder(this.fs, ConfigFactory.empty());\n    String tableName = \"VfTb3\";\n\n    Table tbl = this.hiveMetastoreTestUtils.createTestTable(dbName, tableName, ImmutableList.of(\"datepartition\", \"field1\"));\n    org.apache.hadoop.hive.metastore.api.Partition tp =\n        this.hiveMetastoreTestUtils.addTestPartition(tbl, ImmutableList.of(\"2016-01-01-20\", \"f1\"), (int) System.currentTimeMillis());\n    Partition partition = new Partition(new org.apache.hadoop.hive.ql.metadata.Table(tbl), tp);\n\n    assertThat(partition.getName(), anyOf(is(\"field1=f1/datepartition=2016-01-01-20\"), is(\"datepartition=2016-01-01-20/field1=f1\")));\n    TimestampedHiveDatasetVersion dv = versionFinder.getDatasetVersion(partition);\n    Assert.assertEquals(dv.getDateTime(), formatter.parseDateTime(\"2016/01/01/20\"));\n\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/version/finder/DatePartitionedHiveVersionFinderTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-09-22 07:53:52","codes":[{"authorDate":"2017-09-22 07:53:52","commitOrder":2,"curCode":"  public void testDefaults() throws Exception {\n\n    DatePartitionHiveVersionFinder versionFinder = new DatePartitionHiveVersionFinder(this.fs, ConfigFactory.empty());\n    String tableName = \"VfTb1\";\n\n    Table tbl = this.hiveMetastoreTestUtils.createTestAvroTable(dbName, tableName, ImmutableList.of(\"datepartition\"));\n    org.apache.hadoop.hive.metastore.api.Partition tp =\n        this.hiveMetastoreTestUtils.addTestPartition(tbl, ImmutableList.of(\"2016-01-01-20\"), (int) System.currentTimeMillis());\n    Partition partition = new Partition(new org.apache.hadoop.hive.ql.metadata.Table(tbl), tp);\n\n    assertThat(partition.getName(), is(\"datepartition=2016-01-01-20\"));\n    TimestampedHiveDatasetVersion dv = versionFinder.getDatasetVersion(partition);\n    Assert.assertEquals(dv.getDateTime(), formatter.parseDateTime(\"2016/01/01/20\"));\n\n  }\n","date":"2017-09-22 07:53:52","endLine":87,"groupId":"101577","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d6/285a95986eabf4d5bc804c0f224b03912df9b7.src","preCode":"  public void testDefaults() throws Exception {\n\n    DatePartitionHiveVersionFinder versionFinder = new DatePartitionHiveVersionFinder(this.fs, ConfigFactory.empty());\n    String tableName = \"VfTb1\";\n\n    Table tbl = this.hiveMetastoreTestUtils.createTestTable(dbName, tableName, ImmutableList.of(\"datepartition\"));\n    org.apache.hadoop.hive.metastore.api.Partition tp =\n        this.hiveMetastoreTestUtils.addTestPartition(tbl, ImmutableList.of(\"2016-01-01-20\"), (int) System.currentTimeMillis());\n    Partition partition = new Partition(new org.apache.hadoop.hive.ql.metadata.Table(tbl), tp);\n\n    assertThat(partition.getName(), is(\"datepartition=2016-01-01-20\"));\n    TimestampedHiveDatasetVersion dv = versionFinder.getDatasetVersion(partition);\n    Assert.assertEquals(dv.getDateTime(), formatter.parseDateTime(\"2016/01/01/20\"));\n\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/version/finder/DatePartitionedHiveVersionFinderTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2017-09-22 07:53:52","commitOrder":2,"curCode":"  public void testMultiplePartitionFields() throws Exception {\n    DatePartitionHiveVersionFinder versionFinder = new DatePartitionHiveVersionFinder(this.fs, ConfigFactory.empty());\n    String tableName = \"VfTb3\";\n\n    Table tbl = this.hiveMetastoreTestUtils.createTestAvroTable(dbName, tableName, ImmutableList.of(\"datepartition\", \"field1\"));\n    org.apache.hadoop.hive.metastore.api.Partition tp =\n        this.hiveMetastoreTestUtils.addTestPartition(tbl, ImmutableList.of(\"2016-01-01-20\", \"f1\"), (int) System.currentTimeMillis());\n    Partition partition = new Partition(new org.apache.hadoop.hive.ql.metadata.Table(tbl), tp);\n\n    assertThat(partition.getName(), anyOf(is(\"field1=f1/datepartition=2016-01-01-20\"), is(\"datepartition=2016-01-01-20/field1=f1\")));\n    TimestampedHiveDatasetVersion dv = versionFinder.getDatasetVersion(partition);\n    Assert.assertEquals(dv.getDateTime(), formatter.parseDateTime(\"2016/01/01/20\"));\n\n  }\n","date":"2017-09-22 07:53:52","endLine":121,"groupId":"101577","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testMultiplePartitionFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d6/285a95986eabf4d5bc804c0f224b03912df9b7.src","preCode":"  public void testMultiplePartitionFields() throws Exception {\n    DatePartitionHiveVersionFinder versionFinder = new DatePartitionHiveVersionFinder(this.fs, ConfigFactory.empty());\n    String tableName = \"VfTb3\";\n\n    Table tbl = this.hiveMetastoreTestUtils.createTestTable(dbName, tableName, ImmutableList.of(\"datepartition\", \"field1\"));\n    org.apache.hadoop.hive.metastore.api.Partition tp =\n        this.hiveMetastoreTestUtils.addTestPartition(tbl, ImmutableList.of(\"2016-01-01-20\", \"f1\"), (int) System.currentTimeMillis());\n    Partition partition = new Partition(new org.apache.hadoop.hive.ql.metadata.Table(tbl), tp);\n\n    assertThat(partition.getName(), anyOf(is(\"field1=f1/datepartition=2016-01-01-20\"), is(\"datepartition=2016-01-01-20/field1=f1\")));\n    TimestampedHiveDatasetVersion dv = versionFinder.getDatasetVersion(partition);\n    Assert.assertEquals(dv.getDateTime(), formatter.parseDateTime(\"2016/01/01/20\"));\n\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/version/finder/DatePartitionedHiveVersionFinderTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"5fa983268606335493903e7186836c57eefe40d9","commitMessage":"@@@[GOBBLIN-253] Enhance Hive materializer.\n\nCloses #2104 from ibuenros/hive-materializer\n","date":"2017-09-22 07:53:52","modifiedFileCount":"16","status":"M","submitter":"ibuenros"}]
