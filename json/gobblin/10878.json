[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":118,"groupId":"6107","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(JobSpecjobSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/be/06b1e33c8ced0f3756de2daf6d32bd9878f42f.src","preCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/job_catalog/FSJobCatalog.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      boolean isUpdate = fs.exists(jobSpecPath);\n\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n\n      if (isUpdate) {\n        this.listeners.onUpdateJob(jobSpec);\n      } else {\n        this.listeners.onAddJob(jobSpec);\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":95,"groupId":"2655","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"put","params":"(JobSpecjobSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ee/bf6f9b699c6c0825bff5e3a4fde84463232ad7.src","preCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      boolean isUpdate = fs.exists(jobSpecPath);\n\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n\n      if (isUpdate) {\n        this.listeners.onUpdateJob(jobSpec);\n      } else {\n        this.listeners.onAddJob(jobSpec);\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/job_catalog/NonObservingFSJobCatalog.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-12-08 07:28:16","commitOrder":2,"curCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      long startTime = System.currentTimeMillis();\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n      this.mutableMetrics.updatePutJobTime(startTime);\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","date":"2017-12-08 07:28:16","endLine":131,"groupId":"3958","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(JobSpecjobSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8d/89b97e12759ca3f056ab52668be8a8304b22bb.src","preCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/job_catalog/FSJobCatalog.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      boolean isUpdate = fs.exists(jobSpecPath);\n\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n\n      if (isUpdate) {\n        this.listeners.onUpdateJob(jobSpec);\n      } else {\n        this.listeners.onAddJob(jobSpec);\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":95,"groupId":"2655","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"put","params":"(JobSpecjobSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ee/bf6f9b699c6c0825bff5e3a4fde84463232ad7.src","preCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      boolean isUpdate = fs.exists(jobSpecPath);\n\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n\n      if (isUpdate) {\n        this.listeners.onUpdateJob(jobSpec);\n      } else {\n        this.listeners.onAddJob(jobSpec);\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/job_catalog/NonObservingFSJobCatalog.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"1be7455246d5c35900c8715c32559bd75b6c7bde","commitMessage":"@@@[GOBBLIN-326] Add more metrics for GaaS and Gobblin Cluster\n\nCloses #2178 from yukuai518/timer\n","date":"2017-12-08 07:28:16","modifiedFileCount":"22","status":"M","submitter":"Kuai Yu"},{"authorTime":"2017-12-24 08:29:19","codes":[{"authorDate":"2017-12-08 07:28:16","commitOrder":3,"curCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      long startTime = System.currentTimeMillis();\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n      this.mutableMetrics.updatePutJobTime(startTime);\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","date":"2017-12-08 07:28:16","endLine":131,"groupId":"10878","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(JobSpecjobSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8d/89b97e12759ca3f056ab52668be8a8304b22bb.src","preCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      long startTime = System.currentTimeMillis();\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n      this.mutableMetrics.updatePutJobTime(startTime);\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/job_catalog/FSJobCatalog.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"N"},{"authorDate":"2017-12-24 08:29:19","commitOrder":3,"curCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      long startTime = System.currentTimeMillis();\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      boolean isUpdate = fs.exists(jobSpecPath);\n\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n      this.mutableMetrics.updatePutJobTime(startTime);\n      if (isUpdate) {\n        this.listeners.onUpdateJob(jobSpec);\n      } else {\n        this.listeners.onAddJob(jobSpec);\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","date":"2017-12-24 08:29:19","endLine":96,"groupId":"10878","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"put","params":"(JobSpecjobSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/76/adca4785f58d1048ff969c5ab6acdf758ad7de.src","preCode":"  public synchronized void put(JobSpec jobSpec) {\n    Preconditions.checkState(state() == State.RUNNING, String.format(\"%s is not running.\", this.getClass().getName()));\n    Preconditions.checkNotNull(jobSpec);\n    try {\n      Path jobSpecPath = getPathForURI(this.jobConfDirPath, jobSpec.getUri());\n      boolean isUpdate = fs.exists(jobSpecPath);\n\n      materializedJobSpec(jobSpecPath, jobSpec, this.fs);\n\n      if (isUpdate) {\n        this.listeners.onUpdateJob(jobSpec);\n      } else {\n        this.listeners.onAddJob(jobSpec);\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(\"When persisting a new JobSpec, unexpected issues happen:\" + e.getMessage());\n    } catch (JobSpecNotFoundException e) {\n      throw new RuntimeException(\"When replacing a existed JobSpec, unexpected issue happen:\" + e.getMessage());\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/job_catalog/NonObservingFSJobCatalog.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"ab034478c9dfa9eaa3d1b81f698fec3606833328","commitMessage":"@@@[GOBBLIN-349] Add gauges for number of job scheduler for gobblin cluster\n\nChange number counter to guage type for gobblin\ncluster metrics\n\nFix build\n\nMinor change\n\nCloses #2212 from yukuai518/me\n","date":"2017-12-24 08:29:19","modifiedFileCount":"7","status":"M","submitter":"Kuai Yu"}]
