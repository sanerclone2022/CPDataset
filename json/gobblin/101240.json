[{"authorTime":"2017-09-29 00:59:21","codes":[{"authorDate":"2017-09-29 00:59:21","commitOrder":1,"curCode":"  public void testGetNonThreadSafePublisher()\n      throws IOException {\n    SharedResourcesBroker broker =\n        SharedResourcesBrokerFactory.<SimpleScopeType>createDefaultTopLevelBroker(ConfigFactory.empty(),\n            SimpleScopeType.GLOBAL.defaultScopeInstance());\n\n    DataPublisher publisher1 = DataPublisherFactory.get(TestNonThreadsafeDataPublisher.class.getName(), null, broker);\n    DataPublisher publisher2 = DataPublisherFactory.get(TestNonThreadsafeDataPublisher.class.getName(), null, broker);\n\n    \r\n    Assert.assertNotEquals(publisher1, publisher2);\n\n    \r\n    Assert.assertTrue(publisher1.supportsCapability(DataPublisher.REUSABLE, Collections.EMPTY_MAP));\n    Assert.assertFalse(publisher1.supportsCapability(Capability.THREADSAFE, Collections.EMPTY_MAP));\n  }\n","date":"2017-09-29 00:59:21","endLine":60,"groupId":"4650","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNonThreadSafePublisher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b2/cd7393c29c5517e876227965abc9da6dbcbeba.src","preCode":"  public void testGetNonThreadSafePublisher()\n      throws IOException {\n    SharedResourcesBroker broker =\n        SharedResourcesBrokerFactory.<SimpleScopeType>createDefaultTopLevelBroker(ConfigFactory.empty(),\n            SimpleScopeType.GLOBAL.defaultScopeInstance());\n\n    DataPublisher publisher1 = DataPublisherFactory.get(TestNonThreadsafeDataPublisher.class.getName(), null, broker);\n    DataPublisher publisher2 = DataPublisherFactory.get(TestNonThreadsafeDataPublisher.class.getName(), null, broker);\n\n    \r\n    Assert.assertNotEquals(publisher1, publisher2);\n\n    \r\n    Assert.assertTrue(publisher1.supportsCapability(DataPublisher.REUSABLE, Collections.EMPTY_MAP));\n    Assert.assertFalse(publisher1.supportsCapability(Capability.THREADSAFE, Collections.EMPTY_MAP));\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/publisher/DataPublisherFactoryTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2017-09-29 00:59:21","commitOrder":1,"curCode":"  public void testGetThreadSafePublisher()\n      throws IOException, NotConfiguredException, NoSuchScopeException {\n    SharedResourcesBroker<SimpleScopeType> broker =\n        SharedResourcesBrokerFactory.<SimpleScopeType>createDefaultTopLevelBroker(ConfigFactory.empty(),\n            SimpleScopeType.GLOBAL.defaultScopeInstance());\n\n    SharedResourcesBroker<SimpleScopeType> localBroker1 =\n        broker.newSubscopedBuilder(new SimpleScope<>(SimpleScopeType.LOCAL, \"local1\")).build();\n\n    DataPublisher publisher1 = DataPublisherFactory.get(TestThreadsafeDataPublisher.class.getName(), null, broker);\n    DataPublisher publisher2 = DataPublisherFactory.get(TestThreadsafeDataPublisher.class.getName(), null, broker);\n\n    \r\n    Assert.assertEquals(publisher1, publisher2);\n\n    DataPublisher publisher3 =\n        localBroker1.getSharedResource(new DataPublisherFactory<>(),\n            new DataPublisherKey(TestThreadsafeDataPublisher.class.getName(), null));\n\n    \r\n    Assert.assertEquals(publisher2, publisher3);\n\n    DataPublisher publisher4 =\n        localBroker1.getSharedResourceAtScope(new DataPublisherFactory<>(),\n            new DataPublisherKey(TestThreadsafeDataPublisher.class.getName(), null), SimpleScopeType.LOCAL);\n\n    \r\n    Assert.assertNotEquals(publisher3, publisher4);\n\n    \r\n    Assert.assertTrue(publisher1.supportsCapability(DataPublisher.REUSABLE, Collections.EMPTY_MAP));\n    Assert.assertTrue(publisher1.supportsCapability(Capability.THREADSAFE, Collections.EMPTY_MAP));\n  }\n","date":"2017-09-29 00:59:21","endLine":95,"groupId":"4654","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetThreadSafePublisher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b2/cd7393c29c5517e876227965abc9da6dbcbeba.src","preCode":"  public void testGetThreadSafePublisher()\n      throws IOException, NotConfiguredException, NoSuchScopeException {\n    SharedResourcesBroker<SimpleScopeType> broker =\n        SharedResourcesBrokerFactory.<SimpleScopeType>createDefaultTopLevelBroker(ConfigFactory.empty(),\n            SimpleScopeType.GLOBAL.defaultScopeInstance());\n\n    SharedResourcesBroker<SimpleScopeType> localBroker1 =\n        broker.newSubscopedBuilder(new SimpleScope<>(SimpleScopeType.LOCAL, \"local1\")).build();\n\n    DataPublisher publisher1 = DataPublisherFactory.get(TestThreadsafeDataPublisher.class.getName(), null, broker);\n    DataPublisher publisher2 = DataPublisherFactory.get(TestThreadsafeDataPublisher.class.getName(), null, broker);\n\n    \r\n    Assert.assertEquals(publisher1, publisher2);\n\n    DataPublisher publisher3 =\n        localBroker1.getSharedResource(new DataPublisherFactory<>(),\n            new DataPublisherKey(TestThreadsafeDataPublisher.class.getName(), null));\n\n    \r\n    Assert.assertEquals(publisher2, publisher3);\n\n    DataPublisher publisher4 =\n        localBroker1.getSharedResourceAtScope(new DataPublisherFactory<>(),\n            new DataPublisherKey(TestThreadsafeDataPublisher.class.getName(), null), SimpleScopeType.LOCAL);\n\n    \r\n    Assert.assertNotEquals(publisher3, publisher4);\n\n    \r\n    Assert.assertTrue(publisher1.supportsCapability(DataPublisher.REUSABLE, Collections.EMPTY_MAP));\n    Assert.assertTrue(publisher1.supportsCapability(Capability.THREADSAFE, Collections.EMPTY_MAP));\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/publisher/DataPublisherFactoryTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"8284bb76bac89c0e15186dbf75717e6ca831eab0","commitMessage":"@@@[GOBBLIN-264] Add a SharedResourceFactory for creating shared DataPub?\n\nCloses #2116 from htran1/shareable_publishers\n","date":"2017-09-29 00:59:21","modifiedFileCount":"3","status":"B","submitter":"Hung Tran"},{"authorTime":"2018-03-23 05:14:53","codes":[{"authorDate":"2017-09-29 00:59:21","commitOrder":2,"curCode":"  public void testGetNonThreadSafePublisher()\n      throws IOException {\n    SharedResourcesBroker broker =\n        SharedResourcesBrokerFactory.<SimpleScopeType>createDefaultTopLevelBroker(ConfigFactory.empty(),\n            SimpleScopeType.GLOBAL.defaultScopeInstance());\n\n    DataPublisher publisher1 = DataPublisherFactory.get(TestNonThreadsafeDataPublisher.class.getName(), null, broker);\n    DataPublisher publisher2 = DataPublisherFactory.get(TestNonThreadsafeDataPublisher.class.getName(), null, broker);\n\n    \r\n    Assert.assertNotEquals(publisher1, publisher2);\n\n    \r\n    Assert.assertTrue(publisher1.supportsCapability(DataPublisher.REUSABLE, Collections.EMPTY_MAP));\n    Assert.assertFalse(publisher1.supportsCapability(Capability.THREADSAFE, Collections.EMPTY_MAP));\n  }\n","date":"2017-09-29 00:59:21","endLine":60,"groupId":"101240","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNonThreadSafePublisher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b2/cd7393c29c5517e876227965abc9da6dbcbeba.src","preCode":"  public void testGetNonThreadSafePublisher()\n      throws IOException {\n    SharedResourcesBroker broker =\n        SharedResourcesBrokerFactory.<SimpleScopeType>createDefaultTopLevelBroker(ConfigFactory.empty(),\n            SimpleScopeType.GLOBAL.defaultScopeInstance());\n\n    DataPublisher publisher1 = DataPublisherFactory.get(TestNonThreadsafeDataPublisher.class.getName(), null, broker);\n    DataPublisher publisher2 = DataPublisherFactory.get(TestNonThreadsafeDataPublisher.class.getName(), null, broker);\n\n    \r\n    Assert.assertNotEquals(publisher1, publisher2);\n\n    \r\n    Assert.assertTrue(publisher1.supportsCapability(DataPublisher.REUSABLE, Collections.EMPTY_MAP));\n    Assert.assertFalse(publisher1.supportsCapability(Capability.THREADSAFE, Collections.EMPTY_MAP));\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/publisher/DataPublisherFactoryTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"},{"authorDate":"2018-03-23 05:14:53","commitOrder":2,"curCode":"  public void testGetThreadSafePublisher()\n      throws IOException, NotConfiguredException, NoSuchScopeException {\n    SharedResourcesBroker<SimpleScopeType> broker =\n        SharedResourcesBrokerFactory.<SimpleScopeType>createDefaultTopLevelBroker(ConfigFactory.empty(),\n            SimpleScopeType.GLOBAL.defaultScopeInstance());\n\n    SharedResourcesBroker<SimpleScopeType> localBroker1 =\n        broker.newSubscopedBuilder(new SimpleScope<>(SimpleScopeType.LOCAL, \"local1\")).build();\n\n    TestThreadsafeDataPublisher publisher1 = (TestThreadsafeDataPublisher)DataPublisherFactory.get(TestThreadsafeDataPublisher.class.getName(), null, broker);\n    TestThreadsafeDataPublisher publisher2 = (TestThreadsafeDataPublisher)DataPublisherFactory.get(TestThreadsafeDataPublisher.class.getName(), null, broker);\n\n    \r\n    Assert.assertEquals(publisher1, publisher2);\n\n    TestThreadsafeDataPublisher publisher3 =\n        (TestThreadsafeDataPublisher)localBroker1.getSharedResource(new DataPublisherFactory<>(),\n            new DataPublisherKey(TestThreadsafeDataPublisher.class.getName(), null));\n\n    \r\n    Assert.assertNotEquals(publisher2, publisher3);\n\n    TestThreadsafeDataPublisher publisher4 =\n        (TestThreadsafeDataPublisher)localBroker1.getSharedResourceAtScope(new DataPublisherFactory<>(),\n            new DataPublisherKey(TestThreadsafeDataPublisher.class.getName(), null), SimpleScopeType.LOCAL);\n\n    \r\n    Assert.assertEquals(publisher3, publisher4);\n\n    \r\n    Assert.assertTrue(publisher1.supportsCapability(DataPublisher.REUSABLE, Collections.EMPTY_MAP));\n    Assert.assertTrue(publisher1.supportsCapability(Capability.THREADSAFE, Collections.EMPTY_MAP));\n\n    \r\n    Assert.assertFalse(publisher1.isClosed());\n    Assert.assertFalse(publisher2.isClosed());\n    Assert.assertFalse(publisher3.isClosed());\n    Assert.assertFalse(publisher4.isClosed());\n    broker.close();\n    \r\n    Assert.assertTrue(publisher1.isClosed());\n    Assert.assertTrue(publisher2.isClosed());\n    Assert.assertTrue(publisher3.isClosed());\n    Assert.assertTrue(publisher4.isClosed());\n  }\n","date":"2018-03-23 05:14:53","endLine":117,"groupId":"101240","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testGetThreadSafePublisher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/5c/65fc4b61f2e7f6fdad74a12cba26ba0d2f729d.src","preCode":"  public void testGetThreadSafePublisher()\n      throws IOException, NotConfiguredException, NoSuchScopeException {\n    SharedResourcesBroker<SimpleScopeType> broker =\n        SharedResourcesBrokerFactory.<SimpleScopeType>createDefaultTopLevelBroker(ConfigFactory.empty(),\n            SimpleScopeType.GLOBAL.defaultScopeInstance());\n\n    SharedResourcesBroker<SimpleScopeType> localBroker1 =\n        broker.newSubscopedBuilder(new SimpleScope<>(SimpleScopeType.LOCAL, \"local1\")).build();\n\n    DataPublisher publisher1 = DataPublisherFactory.get(TestThreadsafeDataPublisher.class.getName(), null, broker);\n    DataPublisher publisher2 = DataPublisherFactory.get(TestThreadsafeDataPublisher.class.getName(), null, broker);\n\n    \r\n    Assert.assertEquals(publisher1, publisher2);\n\n    DataPublisher publisher3 =\n        localBroker1.getSharedResource(new DataPublisherFactory<>(),\n            new DataPublisherKey(TestThreadsafeDataPublisher.class.getName(), null));\n\n    \r\n    Assert.assertEquals(publisher2, publisher3);\n\n    DataPublisher publisher4 =\n        localBroker1.getSharedResourceAtScope(new DataPublisherFactory<>(),\n            new DataPublisherKey(TestThreadsafeDataPublisher.class.getName(), null), SimpleScopeType.LOCAL);\n\n    \r\n    Assert.assertNotEquals(publisher3, publisher4);\n\n    \r\n    Assert.assertTrue(publisher1.supportsCapability(DataPublisher.REUSABLE, Collections.EMPTY_MAP));\n    Assert.assertTrue(publisher1.supportsCapability(Capability.THREADSAFE, Collections.EMPTY_MAP));\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/publisher/DataPublisherFactoryTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"d323f60222534ddff42beaf08716040246a999c3","commitMessage":"@@@[GOBBLIN-435] Fix data publisher created from job broker not closed\n\nCloses #2312 from zxcware/audit\n","date":"2018-03-23 05:14:53","modifiedFileCount":"3","status":"M","submitter":"zhchen"}]
