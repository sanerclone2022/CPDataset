[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testCreateHelixCluster() throws Exception {\n    \r\n    HelixUtils.createGobblinHelixCluster(\n        this.config.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY),\n        this.config.getString(GobblinClusterConfigurationKeys.HELIX_CLUSTER_NAME_KEY));\n\n    Assert.assertEquals(this.curatorFramework.checkExists()\n        .forPath(String.format(\"/%s\", GobblinYarnAppLauncherTest.class.getSimpleName())).getVersion(), 0);\n    Assert.assertEquals(\n        this.curatorFramework.checkExists()\n            .forPath(String.format(\"/%s/CONTROLLER\", GobblinYarnAppLauncherTest.class.getSimpleName())).getVersion(),\n        0);\n  }\n","date":"2017-07-31 15:51:25","endLine":183,"groupId":"2744","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateHelixCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/15/3e9bd962ba0838230292e4319bdbc66806d32d.src","preCode":"  public void testCreateHelixCluster() throws Exception {\n    \r\n    HelixUtils.createGobblinHelixCluster(\n        this.config.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY),\n        this.config.getString(GobblinClusterConfigurationKeys.HELIX_CLUSTER_NAME_KEY));\n\n    Assert.assertEquals(this.curatorFramework.checkExists()\n        .forPath(String.format(\"/%s\", GobblinYarnAppLauncherTest.class.getSimpleName())).getVersion(), 0);\n    Assert.assertEquals(\n        this.curatorFramework.checkExists()\n            .forPath(String.format(\"/%s/CONTROLLER\", GobblinYarnAppLauncherTest.class.getSimpleName())).getVersion(),\n        0);\n  }\n","realPath":"gobblin-yarn/src/test/java/org/apache/gobblin/yarn/GobblinYarnAppLauncherTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testCreateHelixCluster() throws Exception {\n    \r\n    HelixUtils\n        .createGobblinHelixCluster(this.config.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY),\n            this.config.getString(GobblinClusterConfigurationKeys.HELIX_CLUSTER_NAME_KEY));\n\n    \r\n    Assert.assertEquals(this.curatorFramework.checkExists().forPath(String.format(\"/%s\",\n        this.helixClusterName)).getVersion(), 0);\n    Assert.assertEquals(this.curatorFramework.checkExists().forPath(String.format(\"/%s/CONTROLLER\",\n        this.helixClusterName)).getVersion(), 0);\n  }\n","date":"2017-07-31 15:51:25","endLine":205,"groupId":"4122","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"testCreateHelixCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/94/ca55e8e2572432506f1212abedaf8b9c1f12fc.src","preCode":"  public void testCreateHelixCluster() throws Exception {\n    \r\n    HelixUtils\n        .createGobblinHelixCluster(this.config.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY),\n            this.config.getString(GobblinClusterConfigurationKeys.HELIX_CLUSTER_NAME_KEY));\n\n    \r\n    Assert.assertEquals(this.curatorFramework.checkExists().forPath(String.format(\"/%s\",\n        this.helixClusterName)).getVersion(), 0);\n    Assert.assertEquals(this.curatorFramework.checkExists().forPath(String.format(\"/%s/CONTROLLER\",\n        this.helixClusterName)).getVersion(), 0);\n  }\n","realPath":"gobblin-aws/src/test/java/org/apache/gobblin/aws/GobblinAWSClusterLauncherTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2020-01-15 07:15:09","commitOrder":2,"curCode":"  public void testCreateHelixCluster() throws Exception {\n    \r\n    HelixUtils.createGobblinHelixCluster(\n        this.config.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY),\n        this.config.getString(GobblinClusterConfigurationKeys.HELIX_CLUSTER_NAME_KEY));\n\n    Assert.assertEquals(this.curatorFramework.checkExists()\n        .forPath(String.format(\"/%s\", GobblinYarnAppLauncherTest.class.getSimpleName())).getVersion(), 0);\n    Assert.assertEquals(\n        this.curatorFramework.checkExists()\n            .forPath(String.format(\"/%s/CONTROLLER\", GobblinYarnAppLauncherTest.class.getSimpleName())).getVersion(),\n        0);\n\n    \r\n    HelixUtils.createGobblinHelixCluster(\n        this.configManagedHelix.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY),\n        this.configManagedHelix.getString(GobblinClusterConfigurationKeys.HELIX_CLUSTER_NAME_KEY));\n\n    Assert.assertEquals(this.curatorFramework.checkExists()\n        .forPath(String.format(\"/%s/CONTROLLER\", MANAGED_HELIX_CLUSTER_NAME)).getVersion(), 0);\n    Assert.assertEquals(\n        this.curatorFramework.checkExists()\n            .forPath(String.format(\"/%s/CONTROLLER\", MANAGED_HELIX_CLUSTER_NAME)).getVersion(),\n        0);\n  }\n","date":"2020-01-15 07:15:09","endLine":243,"groupId":"10153","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateHelixCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9c/37748bd738bf3aa4b4c4a80f5b4f8bfab022ca.src","preCode":"  public void testCreateHelixCluster() throws Exception {\n    \r\n    HelixUtils.createGobblinHelixCluster(\n        this.config.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY),\n        this.config.getString(GobblinClusterConfigurationKeys.HELIX_CLUSTER_NAME_KEY));\n\n    Assert.assertEquals(this.curatorFramework.checkExists()\n        .forPath(String.format(\"/%s\", GobblinYarnAppLauncherTest.class.getSimpleName())).getVersion(), 0);\n    Assert.assertEquals(\n        this.curatorFramework.checkExists()\n            .forPath(String.format(\"/%s/CONTROLLER\", GobblinYarnAppLauncherTest.class.getSimpleName())).getVersion(),\n        0);\n  }\n","realPath":"gobblin-yarn/src/test/java/org/apache/gobblin/yarn/GobblinYarnAppLauncherTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void testCreateHelixCluster() throws Exception {\n    \r\n    HelixUtils\n        .createGobblinHelixCluster(this.config.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY),\n            this.config.getString(GobblinClusterConfigurationKeys.HELIX_CLUSTER_NAME_KEY));\n\n    \r\n    Assert.assertEquals(this.curatorFramework.checkExists().forPath(String.format(\"/%s\",\n        this.helixClusterName)).getVersion(), 0);\n    Assert.assertEquals(this.curatorFramework.checkExists().forPath(String.format(\"/%s/CONTROLLER\",\n        this.helixClusterName)).getVersion(), 0);\n  }\n","date":"2017-07-31 15:51:25","endLine":205,"groupId":"10153","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testCreateHelixCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/94/ca55e8e2572432506f1212abedaf8b9c1f12fc.src","preCode":"  public void testCreateHelixCluster() throws Exception {\n    \r\n    HelixUtils\n        .createGobblinHelixCluster(this.config.getString(GobblinClusterConfigurationKeys.ZK_CONNECTION_STRING_KEY),\n            this.config.getString(GobblinClusterConfigurationKeys.HELIX_CLUSTER_NAME_KEY));\n\n    \r\n    Assert.assertEquals(this.curatorFramework.checkExists().forPath(String.format(\"/%s\",\n        this.helixClusterName)).getVersion(), 0);\n    Assert.assertEquals(this.curatorFramework.checkExists().forPath(String.format(\"/%s/CONTROLLER\",\n        this.helixClusterName)).getVersion(), 0);\n  }\n","realPath":"gobblin-aws/src/test/java/org/apache/gobblin/aws/GobblinAWSClusterLauncherTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"N"}],"commitId":"ff0b417082d9e92634bb4c2719c8f3decb17491e","commitMessage":"@@@[GOBBLIN-1016] Allow Gobblin Application Master to join Helix cluster ?\n\nCloses #2863 from sv2000/sendShutdown\n","date":"2020-01-15 07:15:09","modifiedFileCount":"7","status":"M","submitter":"sv2000"}]
