[{"authorTime":"2021-06-02 07:16:16","codes":[{"authorDate":"2021-06-02 07:16:16","commitOrder":1,"curCode":"    private void onFlowSuccess(String dagId) {\n      if (this.metricContext != null) {\n        flowGauges.put(DagManagerUtils.getFlowId(this.dags.get(dagId)).toString(), FlowState.SUCCESSFUL);\n        this.allSuccessfulMeter.mark();\n        getGroupMeterForDag(dagId, ServiceMetricNames.SUCCESSFUL_FLOW_METER).mark();\n      }\n    }\n","date":"2021-06-02 07:16:16","endLine":1199,"groupId":"2759","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onFlowSuccess","params":"(StringdagId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/37/632d738f903bbde4b748a72af45dad8a0d23d1.src","preCode":"    private void onFlowSuccess(String dagId) {\n      if (this.metricContext != null) {\n        flowGauges.put(DagManagerUtils.getFlowId(this.dags.get(dagId)).toString(), FlowState.SUCCESSFUL);\n        this.allSuccessfulMeter.mark();\n        getGroupMeterForDag(dagId, ServiceMetricNames.SUCCESSFUL_FLOW_METER).mark();\n      }\n    }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/orchestration/DagManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":1193,"status":"B"},{"authorDate":"2021-06-02 07:16:16","commitOrder":1,"curCode":"    private void onFlowFailure(String dagId) {\n      addFailedDag(dagId);\n      if (this.metricContext != null) {\n        flowGauges.put(DagManagerUtils.getFlowId(this.dags.get(dagId)).toString(), FlowState.FAILED);\n        this.allFailedMeter.mark();\n        getGroupMeterForDag(dagId, ServiceMetricNames.FAILED_FLOW_METER).mark();\n      }\n    }\n","date":"2021-06-02 07:16:16","endLine":1208,"groupId":"2759","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onFlowFailure","params":"(StringdagId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/37/632d738f903bbde4b748a72af45dad8a0d23d1.src","preCode":"    private void onFlowFailure(String dagId) {\n      addFailedDag(dagId);\n      if (this.metricContext != null) {\n        flowGauges.put(DagManagerUtils.getFlowId(this.dags.get(dagId)).toString(), FlowState.FAILED);\n        this.allFailedMeter.mark();\n        getGroupMeterForDag(dagId, ServiceMetricNames.FAILED_FLOW_METER).mark();\n      }\n    }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/orchestration/DagManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":1201,"status":"B"}],"commitId":"557f255d973255e50420f821b512f7c805552ae1","commitMessage":"@@@[GOBBLIN-1452] Add meters for successful/failed dags in total and by flowGroup\n\nCloses #3290 from jack-moseley/flow-meters\n","date":"2021-06-02 07:16:16","modifiedFileCount":"2","status":"B","submitter":"Jack Moseley"},{"authorTime":"2021-06-11 08:46:57","codes":[{"authorDate":"2021-06-11 08:46:57","commitOrder":2,"curCode":"    private void onFlowSuccess(String dagId) {\n      if (this.metricContext != null) {\n        flowGauges.put(DagManagerUtils.getFlowId(this.dags.get(dagId)).toString(), FlowState.SUCCESSFUL);\n        this.allSuccessfulMeter.mark();\n        getGroupMeterForDag(dagId, ServiceMetricNames.SUCCESSFUL_FLOW_METER, groupSuccessfulMeters).mark();\n      }\n    }\n","date":"2021-06-11 08:46:57","endLine":1202,"groupId":"101160","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onFlowSuccess","params":"(StringdagId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/5c/6dd1b7a34e561522721d4ddc839f20648950db.src","preCode":"    private void onFlowSuccess(String dagId) {\n      if (this.metricContext != null) {\n        flowGauges.put(DagManagerUtils.getFlowId(this.dags.get(dagId)).toString(), FlowState.SUCCESSFUL);\n        this.allSuccessfulMeter.mark();\n        getGroupMeterForDag(dagId, ServiceMetricNames.SUCCESSFUL_FLOW_METER).mark();\n      }\n    }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/orchestration/DagManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":1196,"status":"M"},{"authorDate":"2021-06-11 08:46:57","commitOrder":2,"curCode":"    private void onFlowFailure(String dagId) {\n      addFailedDag(dagId);\n      if (this.metricContext != null) {\n        flowGauges.put(DagManagerUtils.getFlowId(this.dags.get(dagId)).toString(), FlowState.FAILED);\n        this.allFailedMeter.mark();\n        getGroupMeterForDag(dagId, ServiceMetricNames.FAILED_FLOW_METER, groupFailureMeters).mark();\n      }\n    }\n","date":"2021-06-11 08:46:57","endLine":1211,"groupId":"101160","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onFlowFailure","params":"(StringdagId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/5c/6dd1b7a34e561522721d4ddc839f20648950db.src","preCode":"    private void onFlowFailure(String dagId) {\n      addFailedDag(dagId);\n      if (this.metricContext != null) {\n        flowGauges.put(DagManagerUtils.getFlowId(this.dags.get(dagId)).toString(), FlowState.FAILED);\n        this.allFailedMeter.mark();\n        getGroupMeterForDag(dagId, ServiceMetricNames.FAILED_FLOW_METER).mark();\n      }\n    }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/orchestration/DagManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":1204,"status":"M"}],"commitId":"f74c232ad05b3b3ca0fcecd4789657bd81af9e42","commitMessage":"@@@[GOBBLIN-1466] Make meters shared between DagManagerThreads\n\nCloses #3306 from jack-moseley/shared-meters\n","date":"2021-06-11 08:46:57","modifiedFileCount":"2","status":"M","submitter":"Jack Moseley"}]
