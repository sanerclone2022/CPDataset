[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void addListener(SpecCatalogListener specListener) {\n    Preconditions.checkNotNull(specListener);\n    this.listeners.addListener(specListener);\n\n    if (state() == Service.State.RUNNING) {\n      for (Spec spec : getSpecs()) {\n        SpecCatalogListener.AddSpecCallback addJobCallback = new SpecCatalogListener.AddSpecCallback(spec);\n        this.listeners.callbackOneListener(addJobCallback, specListener);\n      }\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":153,"groupId":"2769","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addListener","params":"(SpecCatalogListenerspecListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/21/22014590971a4074b341b58640845e7a9f5977.src","preCode":"  public void addListener(SpecCatalogListener specListener) {\n    Preconditions.checkNotNull(specListener);\n    this.listeners.addListener(specListener);\n\n    if (state() == Service.State.RUNNING) {\n      for (Spec spec : getSpecs()) {\n        SpecCatalogListener.AddSpecCallback addJobCallback = new SpecCatalogListener.AddSpecCallback(spec);\n        this.listeners.callbackOneListener(addJobCallback, specListener);\n      }\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/spec_catalog/TopologyCatalog.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public synchronized void addListener(JobCatalogListener jobListener) {\n    Preconditions.checkNotNull(jobListener);\n    this.listeners.addListener(jobListener);\n\n    if (state() == State.RUNNING) {\n      for (JobSpec jobSpec : getJobs()) {\n        JobCatalogListener.AddJobCallback addJobCallback = new JobCatalogListener.AddJobCallback(jobSpec);\n        this.listeners.callbackOneListener(addJobCallback, jobListener);\n      }\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":107,"groupId":"3772","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addListener","params":"(JobCatalogListenerjobListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ec/332264e158756bbb698270eaafd212ee1fc878.src","preCode":"  public synchronized void addListener(JobCatalogListener jobListener) {\n    Preconditions.checkNotNull(jobListener);\n    this.listeners.addListener(jobListener);\n\n    if (state() == State.RUNNING) {\n      for (JobSpec jobSpec : getJobs()) {\n        JobCatalogListener.AddJobCallback addJobCallback = new JobCatalogListener.AddJobCallback(jobSpec);\n        this.listeners.callbackOneListener(addJobCallback, jobListener);\n      }\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/job_catalog/JobCatalogBase.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-12-08 07:28:16","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void addListener(SpecCatalogListener specListener) {\n    Preconditions.checkNotNull(specListener);\n    this.listeners.addListener(specListener);\n\n    if (state() == Service.State.RUNNING) {\n      for (Spec spec : getSpecs()) {\n        SpecCatalogListener.AddSpecCallback addJobCallback = new SpecCatalogListener.AddSpecCallback(spec);\n        this.listeners.callbackOneListener(addJobCallback, specListener);\n      }\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":153,"groupId":"2769","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addListener","params":"(SpecCatalogListenerspecListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/21/22014590971a4074b341b58640845e7a9f5977.src","preCode":"  public void addListener(SpecCatalogListener specListener) {\n    Preconditions.checkNotNull(specListener);\n    this.listeners.addListener(specListener);\n\n    if (state() == Service.State.RUNNING) {\n      for (Spec spec : getSpecs()) {\n        SpecCatalogListener.AddSpecCallback addJobCallback = new SpecCatalogListener.AddSpecCallback(spec);\n        this.listeners.callbackOneListener(addJobCallback, specListener);\n      }\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/spec_catalog/TopologyCatalog.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"N"},{"authorDate":"2017-12-08 07:28:16","commitOrder":2,"curCode":"  public synchronized void addListener(JobCatalogListener jobListener) {\n    Preconditions.checkNotNull(jobListener);\n    this.listeners.addListener(jobListener);\n\n    if (state() == State.RUNNING) {\n      for (JobSpec jobSpec : getJobsWithTimeUpdate()) {\n        JobCatalogListener.AddJobCallback addJobCallback = new JobCatalogListener.AddJobCallback(jobSpec);\n        this.listeners.callbackOneListener(addJobCallback, jobListener);\n      }\n    }\n  }\n","date":"2017-12-08 07:28:16","endLine":121,"groupId":"1931","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addListener","params":"(JobCatalogListenerjobListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d4/0c96206cb94244a6c6dbbaf2c563f7c790b651.src","preCode":"  public synchronized void addListener(JobCatalogListener jobListener) {\n    Preconditions.checkNotNull(jobListener);\n    this.listeners.addListener(jobListener);\n\n    if (state() == State.RUNNING) {\n      for (JobSpec jobSpec : getJobs()) {\n        JobCatalogListener.AddJobCallback addJobCallback = new JobCatalogListener.AddJobCallback(jobSpec);\n        this.listeners.callbackOneListener(addJobCallback, jobListener);\n      }\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/job_catalog/JobCatalogBase.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"1be7455246d5c35900c8715c32559bd75b6c7bde","commitMessage":"@@@[GOBBLIN-326] Add more metrics for GaaS and Gobblin Cluster\n\nCloses #2178 from yukuai518/timer\n","date":"2017-12-08 07:28:16","modifiedFileCount":"22","status":"M","submitter":"Kuai Yu"},{"authorTime":"2019-03-28 06:50:35","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":3,"curCode":"  public void addListener(SpecCatalogListener specListener) {\n    Preconditions.checkNotNull(specListener);\n    this.listeners.addListener(specListener);\n\n    if (state() == Service.State.RUNNING) {\n      for (Spec spec : getSpecs()) {\n        SpecCatalogListener.AddSpecCallback addJobCallback = new SpecCatalogListener.AddSpecCallback(spec);\n        this.listeners.callbackOneListener(addJobCallback, specListener);\n      }\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":153,"groupId":"10847","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addListener","params":"(SpecCatalogListenerspecListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/21/22014590971a4074b341b58640845e7a9f5977.src","preCode":"  public void addListener(SpecCatalogListener specListener) {\n    Preconditions.checkNotNull(specListener);\n    this.listeners.addListener(specListener);\n\n    if (state() == Service.State.RUNNING) {\n      for (Spec spec : getSpecs()) {\n        SpecCatalogListener.AddSpecCallback addJobCallback = new SpecCatalogListener.AddSpecCallback(spec);\n        this.listeners.callbackOneListener(addJobCallback, specListener);\n      }\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/spec_catalog/TopologyCatalog.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"N"},{"authorDate":"2019-03-28 06:50:35","commitOrder":3,"curCode":"  public synchronized void addListener(JobCatalogListener jobListener) {\n    Preconditions.checkNotNull(jobListener);\n    this.listeners.addListener(jobListener);\n\n    if (state() == State.RUNNING) {\n      Iterator<JobSpec> jobSpecItr = getJobSpecsWithTimeUpdate();\n      while (jobSpecItr.hasNext()) {\n        JobSpec jobSpec = jobSpecItr.next();\n        if (jobSpec != null) {\n          JobCatalogListener.AddJobCallback addJobCallback = new JobCatalogListener.AddJobCallback(jobSpec);\n          this.listeners.callbackOneListener(addJobCallback, jobListener);\n        }\n      }\n    }\n  }\n","date":"2019-03-28 06:50:35","endLine":139,"groupId":"10847","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"addListener","params":"(JobCatalogListenerjobListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/47/1db8abc4a3ab41105671860dc5585b2f2b6717.src","preCode":"  public synchronized void addListener(JobCatalogListener jobListener) {\n    Preconditions.checkNotNull(jobListener);\n    this.listeners.addListener(jobListener);\n\n    if (state() == State.RUNNING) {\n      for (JobSpec jobSpec : getJobsWithTimeUpdate()) {\n        JobCatalogListener.AddJobCallback addJobCallback = new JobCatalogListener.AddJobCallback(jobSpec);\n        this.listeners.callbackOneListener(addJobCallback, jobListener);\n      }\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/job_catalog/JobCatalogBase.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"1068edbdda140fa1e1f9db33c85f79c060c1c5f8","commitMessage":"@@@[GOBBLIN-713] Lazy load job specification from job catalog to avoid OOM issue.\n\nCloses #2581 from yukuai518/oom\n","date":"2019-03-28 06:50:35","modifiedFileCount":"4","status":"M","submitter":"Kuai Yu"}]
