[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private void cleanLeftoverStagingData(WorkUnitStream workUnits, JobState jobState)\n      throws JobException {\n    if (jobState.getPropAsBoolean(ConfigurationKeys.CLEANUP_STAGING_DATA_BY_INITIALIZER, false)) {\n      \r\n      return;\n    }\n\n    try {\n      if (!canCleanStagingData(jobState)) {\n        LOG.error(\"Job \" + jobState.getJobName() + \" has unfinished commit sequences. Will not clean up staging data.\");\n        return;\n      }\n    } catch (IOException e) {\n      throw new JobException(\"Failed to check unfinished commit sequences\", e);\n    }\n\n    try {\n      if (this.jobContext.shouldCleanupStagingDataPerTask()) {\n        if (workUnits.isSafeToMaterialize()) {\n          Closer closer = Closer.create();\n          Map<String, ParallelRunner> parallelRunners = Maps.newHashMap();\n          try {\n            for (WorkUnit workUnit : JobLauncherUtils.flattenWorkUnits(workUnits.getMaterializedWorkUnitCollection())) {\n              JobLauncherUtils.cleanTaskStagingData(new WorkUnitState(workUnit, jobState), LOG, closer, parallelRunners);\n            }\n          } catch (Throwable t) {\n            throw closer.rethrow(t);\n          } finally {\n            closer.close();\n          }\n        } else {\n          throw new RuntimeException(\"Work unit streams do not support cleaning staging data per task.\");\n        }\n      } else {\n        JobLauncherUtils.cleanJobStagingData(jobState, LOG);\n      }\n    } catch (Throwable t) {\n      \r\n      LOG.error(\"Failed to clean leftover staging data\", t);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":839,"groupId":"385","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanLeftoverStagingData","params":"(WorkUnitStreamworkUnits@JobStatejobState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/49/fa98e1bcedef4edcfb271c15c84546a4fa0077.src","preCode":"  private void cleanLeftoverStagingData(WorkUnitStream workUnits, JobState jobState)\n      throws JobException {\n    if (jobState.getPropAsBoolean(ConfigurationKeys.CLEANUP_STAGING_DATA_BY_INITIALIZER, false)) {\n      \r\n      return;\n    }\n\n    try {\n      if (!canCleanStagingData(jobState)) {\n        LOG.error(\"Job \" + jobState.getJobName() + \" has unfinished commit sequences. Will not clean up staging data.\");\n        return;\n      }\n    } catch (IOException e) {\n      throw new JobException(\"Failed to check unfinished commit sequences\", e);\n    }\n\n    try {\n      if (this.jobContext.shouldCleanupStagingDataPerTask()) {\n        if (workUnits.isSafeToMaterialize()) {\n          Closer closer = Closer.create();\n          Map<String, ParallelRunner> parallelRunners = Maps.newHashMap();\n          try {\n            for (WorkUnit workUnit : JobLauncherUtils.flattenWorkUnits(workUnits.getMaterializedWorkUnitCollection())) {\n              JobLauncherUtils.cleanTaskStagingData(new WorkUnitState(workUnit, jobState), LOG, closer, parallelRunners);\n            }\n          } catch (Throwable t) {\n            throw closer.rethrow(t);\n          } finally {\n            closer.close();\n          }\n        } else {\n          throw new RuntimeException(\"Work unit streams do not support cleaning staging data per task.\");\n        }\n      } else {\n        JobLauncherUtils.cleanJobStagingData(jobState, LOG);\n      }\n    } catch (Throwable t) {\n      \r\n      LOG.error(\"Failed to clean leftover staging data\", t);\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/AbstractJobLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":799,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private void cleanupStagingData(JobState jobState)\n      throws JobException {\n    if (jobState.getPropAsBoolean(ConfigurationKeys.CLEANUP_STAGING_DATA_BY_INITIALIZER, false)) {\n      \r\n      return;\n    }\n\n    try {\n      if (!canCleanStagingData(jobState)) {\n        LOG.error(\"Job \" + jobState.getJobName() + \" has unfinished commit sequences. Will not clean up staging data.\");\n        return;\n      }\n    } catch (IOException e) {\n      throw new JobException(\"Failed to check unfinished commit sequences\", e);\n    }\n\n    if (this.jobContext.shouldCleanupStagingDataPerTask()) {\n      cleanupStagingDataPerTask(jobState);\n    } else {\n      cleanupStagingDataForEntireJob(jobState);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":873,"groupId":"385","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanupStagingData","params":"(JobStatejobState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/49/fa98e1bcedef4edcfb271c15c84546a4fa0077.src","preCode":"  private void cleanupStagingData(JobState jobState)\n      throws JobException {\n    if (jobState.getPropAsBoolean(ConfigurationKeys.CLEANUP_STAGING_DATA_BY_INITIALIZER, false)) {\n      \r\n      return;\n    }\n\n    try {\n      if (!canCleanStagingData(jobState)) {\n        LOG.error(\"Job \" + jobState.getJobName() + \" has unfinished commit sequences. Will not clean up staging data.\");\n        return;\n      }\n    } catch (IOException e) {\n      throw new JobException(\"Failed to check unfinished commit sequences\", e);\n    }\n\n    if (this.jobContext.shouldCleanupStagingDataPerTask()) {\n      cleanupStagingDataPerTask(jobState);\n    } else {\n      cleanupStagingDataForEntireJob(jobState);\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/AbstractJobLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":852,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-09-23 03:55:36","commitOrder":2,"curCode":"  private void cleanLeftoverStagingData(WorkUnitStream workUnits, JobState jobState)\n      throws JobException {\n    if (jobState.getPropAsBoolean(ConfigurationKeys.CLEANUP_STAGING_DATA_BY_INITIALIZER, false)) {\n      \r\n      return;\n    }\n\n    try {\n      if (!canCleanStagingData(jobState)) {\n        LOG.error(\"Job \" + jobState.getJobName() + \" has unfinished commit sequences. Will not clean up staging data.\");\n        return;\n      }\n    } catch (IOException e) {\n      throw new JobException(\"Failed to check unfinished commit sequences\", e);\n    }\n\n    try {\n      if (this.jobContext.shouldCleanupStagingDataPerTask()) {\n        if (workUnits.isSafeToMaterialize()) {\n          Closer closer = Closer.create();\n          Map<String, ParallelRunner> parallelRunners = Maps.newHashMap();\n          try {\n            for (WorkUnit workUnit : JobLauncherUtils.flattenWorkUnits(workUnits.getMaterializedWorkUnitCollection())) {\n              JobLauncherUtils.cleanTaskStagingData(new WorkUnitState(workUnit, jobState), LOG, closer, parallelRunners);\n            }\n          } catch (Throwable t) {\n            throw closer.rethrow(t);\n          } finally {\n            closer.close();\n          }\n        } else {\n          throw new RuntimeException(\"Work unit streams do not support cleaning staging data per task.\");\n        }\n      } else {\n        if (jobState.getPropAsBoolean(ConfigurationKeys.CLEANUP_OLD_JOBS_DATA, ConfigurationKeys.DEFAULT_CLEANUP_OLD_JOBS_DATA)) {\n          JobLauncherUtils.cleanUpOldJobData(jobState, LOG, jobContext.getStagingDirProvided(), jobContext.getOutputDirProvided());\n        }\n        JobLauncherUtils.cleanJobStagingData(jobState, LOG);\n      }\n    } catch (Throwable t) {\n      \r\n      LOG.error(\"Failed to clean leftover staging data\", t);\n    }\n  }\n","date":"2017-09-23 03:55:36","endLine":847,"groupId":"10849","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanLeftoverStagingData","params":"(WorkUnitStreamworkUnits@JobStatejobState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/9e0970a658300d2a28bd91e452e2bb1551074f.src","preCode":"  private void cleanLeftoverStagingData(WorkUnitStream workUnits, JobState jobState)\n      throws JobException {\n    if (jobState.getPropAsBoolean(ConfigurationKeys.CLEANUP_STAGING_DATA_BY_INITIALIZER, false)) {\n      \r\n      return;\n    }\n\n    try {\n      if (!canCleanStagingData(jobState)) {\n        LOG.error(\"Job \" + jobState.getJobName() + \" has unfinished commit sequences. Will not clean up staging data.\");\n        return;\n      }\n    } catch (IOException e) {\n      throw new JobException(\"Failed to check unfinished commit sequences\", e);\n    }\n\n    try {\n      if (this.jobContext.shouldCleanupStagingDataPerTask()) {\n        if (workUnits.isSafeToMaterialize()) {\n          Closer closer = Closer.create();\n          Map<String, ParallelRunner> parallelRunners = Maps.newHashMap();\n          try {\n            for (WorkUnit workUnit : JobLauncherUtils.flattenWorkUnits(workUnits.getMaterializedWorkUnitCollection())) {\n              JobLauncherUtils.cleanTaskStagingData(new WorkUnitState(workUnit, jobState), LOG, closer, parallelRunners);\n            }\n          } catch (Throwable t) {\n            throw closer.rethrow(t);\n          } finally {\n            closer.close();\n          }\n        } else {\n          throw new RuntimeException(\"Work unit streams do not support cleaning staging data per task.\");\n        }\n      } else {\n        JobLauncherUtils.cleanJobStagingData(jobState, LOG);\n      }\n    } catch (Throwable t) {\n      \r\n      LOG.error(\"Failed to clean leftover staging data\", t);\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/AbstractJobLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":804,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  private void cleanupStagingData(JobState jobState)\n      throws JobException {\n    if (jobState.getPropAsBoolean(ConfigurationKeys.CLEANUP_STAGING_DATA_BY_INITIALIZER, false)) {\n      \r\n      return;\n    }\n\n    try {\n      if (!canCleanStagingData(jobState)) {\n        LOG.error(\"Job \" + jobState.getJobName() + \" has unfinished commit sequences. Will not clean up staging data.\");\n        return;\n      }\n    } catch (IOException e) {\n      throw new JobException(\"Failed to check unfinished commit sequences\", e);\n    }\n\n    if (this.jobContext.shouldCleanupStagingDataPerTask()) {\n      cleanupStagingDataPerTask(jobState);\n    } else {\n      cleanupStagingDataForEntireJob(jobState);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":873,"groupId":"10849","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanupStagingData","params":"(JobStatejobState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/49/fa98e1bcedef4edcfb271c15c84546a4fa0077.src","preCode":"  private void cleanupStagingData(JobState jobState)\n      throws JobException {\n    if (jobState.getPropAsBoolean(ConfigurationKeys.CLEANUP_STAGING_DATA_BY_INITIALIZER, false)) {\n      \r\n      return;\n    }\n\n    try {\n      if (!canCleanStagingData(jobState)) {\n        LOG.error(\"Job \" + jobState.getJobName() + \" has unfinished commit sequences. Will not clean up staging data.\");\n        return;\n      }\n    } catch (IOException e) {\n      throw new JobException(\"Failed to check unfinished commit sequences\", e);\n    }\n\n    if (this.jobContext.shouldCleanupStagingDataPerTask()) {\n      cleanupStagingDataPerTask(jobState);\n    } else {\n      cleanupStagingDataForEntireJob(jobState);\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/AbstractJobLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":852,"status":"N"}],"commitId":"6e4a2cecbec7bf8a16cc9d5e460c5365fd0bd856","commitMessage":"@@@[GOBBLIN-257] Remove jobs' previous run data\n\nCloses #2109 from arjun4084346/master\n","date":"2017-09-23 03:55:36","modifiedFileCount":"6","status":"M","submitter":"Arjun"}]
