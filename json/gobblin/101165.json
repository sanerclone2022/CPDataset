[{"authorTime":"2018-06-12 05:23:21","codes":[{"authorDate":"2018-06-12 05:23:21","commitOrder":1,"curCode":"  private void removeDataNode(DiffEntry change) {\n    if (checkFilePath(change.getOldPath(), NODE_FILE_DEPTH)) {\n      Path nodeFilePath = new Path(this.repositoryDir, change.getOldPath());\n      Config config = getNodeConfigWithOverrides(ConfigFactory.empty(), nodeFilePath);\n      String nodeId = config.getString(FlowGraphConfigurationKeys.DATA_NODE_ID_KEY);\n      if (!this.flowGraph.deleteDataNode(nodeId)) {\n        log.warn(\"Could not remove DataNode {} from FlowGraph; skipping\", nodeId);\n      }\n    }\n  }\n","date":"2018-06-12 05:23:21","endLine":163,"groupId":"1155","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"removeDataNode","params":"(DiffEntrychange)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/c7/dd226ac2cd46d024ad29cf9a7ec782d5250a3e.src","preCode":"  private void removeDataNode(DiffEntry change) {\n    if (checkFilePath(change.getOldPath(), NODE_FILE_DEPTH)) {\n      Path nodeFilePath = new Path(this.repositoryDir, change.getOldPath());\n      Config config = getNodeConfigWithOverrides(ConfigFactory.empty(), nodeFilePath);\n      String nodeId = config.getString(FlowGraphConfigurationKeys.DATA_NODE_ID_KEY);\n      if (!this.flowGraph.deleteDataNode(nodeId)) {\n        log.warn(\"Could not remove DataNode {} from FlowGraph; skipping\", nodeId);\n      }\n    }\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/core/GitFlowGraphMonitor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"},{"authorDate":"2018-06-12 05:23:21","commitOrder":1,"curCode":"  private void removeFlowEdge(DiffEntry change) {\n    if (checkFilePath(change.getOldPath(), EDGE_FILE_DEPTH)) {\n      Path edgeFilePath = new Path(this.repositoryDir, change.getOldPath());\n      try {\n        Config config = getEdgeConfigWithOverrides(ConfigFactory.empty(), edgeFilePath);\n        String edgeId = config.getString(FlowGraphConfigurationKeys.FLOW_EDGE_ID_KEY);\n        if (!this.flowGraph.deleteFlowEdge(edgeId)) {\n          log.warn(\"Could not remove FlowEdge {} from FlowGraph; skipping\", edgeId);\n        }\n      } catch (Exception e) {\n        log.warn(\"Could not remove edge defined in {} due to exception {}\", edgeFilePath, e.getMessage());\n      }\n    }\n  }\n","date":"2018-06-12 05:23:21","endLine":207,"groupId":"32","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeFlowEdge","params":"(DiffEntrychange)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/c7/dd226ac2cd46d024ad29cf9a7ec782d5250a3e.src","preCode":"  private void removeFlowEdge(DiffEntry change) {\n    if (checkFilePath(change.getOldPath(), EDGE_FILE_DEPTH)) {\n      Path edgeFilePath = new Path(this.repositoryDir, change.getOldPath());\n      try {\n        Config config = getEdgeConfigWithOverrides(ConfigFactory.empty(), edgeFilePath);\n        String edgeId = config.getString(FlowGraphConfigurationKeys.FLOW_EDGE_ID_KEY);\n        if (!this.flowGraph.deleteFlowEdge(edgeId)) {\n          log.warn(\"Could not remove FlowEdge {} from FlowGraph; skipping\", edgeId);\n        }\n      } catch (Exception e) {\n        log.warn(\"Could not remove edge defined in {} due to exception {}\", edgeFilePath, e.getMessage());\n      }\n    }\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/core/GitFlowGraphMonitor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"}],"commitId":"6b1201852aa71b904da5f8a49a550e8596fe59fc","commitMessage":"@@@[GOBBLIN-505] Implement a Git-based FlowGraph Monitor.\n\nCloses #2382 from sv2000/gitGraphMonitor\n","date":"2018-06-12 05:23:21","modifiedFileCount":"8","status":"B","submitter":"suvasude"},{"authorTime":"2018-10-13 01:19:40","codes":[{"authorDate":"2018-10-13 01:19:40","commitOrder":2,"curCode":"  private void removeDataNode(DiffEntry change) {\n    if (checkFilePath(change.getOldPath(), NODE_FILE_DEPTH)) {\n      Path nodeFilePath = new Path(this.repositoryDir, change.getOldPath());\n      Config config = getNodeConfigWithOverrides(ConfigFactory.empty(), nodeFilePath);\n      String nodeId = config.getString(FlowGraphConfigurationKeys.DATA_NODE_ID_KEY);\n      if (!this.flowGraph.deleteDataNode(nodeId)) {\n        log.warn(\"Could not remove DataNode {} from FlowGraph; skipping\", nodeId);\n      } else {\n        log.info(\"Removed DataNode {} from FlowGraph\", nodeId);\n      }\n    }\n  }\n","date":"2018-10-13 01:19:40","endLine":193,"groupId":"101165","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"removeDataNode","params":"(DiffEntrychange)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e1/2e8398dd7053c575545d00bf6a1ffac7f6bfb0.src","preCode":"  private void removeDataNode(DiffEntry change) {\n    if (checkFilePath(change.getOldPath(), NODE_FILE_DEPTH)) {\n      Path nodeFilePath = new Path(this.repositoryDir, change.getOldPath());\n      Config config = getNodeConfigWithOverrides(ConfigFactory.empty(), nodeFilePath);\n      String nodeId = config.getString(FlowGraphConfigurationKeys.DATA_NODE_ID_KEY);\n      if (!this.flowGraph.deleteDataNode(nodeId)) {\n        log.warn(\"Could not remove DataNode {} from FlowGraph; skipping\", nodeId);\n      }\n    }\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/core/GitFlowGraphMonitor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"},{"authorDate":"2018-10-13 01:19:40","commitOrder":2,"curCode":"  private void removeFlowEdge(DiffEntry change) {\n    if (checkFilePath(change.getOldPath(), EDGE_FILE_DEPTH)) {\n      Path edgeFilePath = new Path(this.repositoryDir, change.getOldPath());\n      try {\n        Config config = getEdgeConfigWithOverrides(ConfigFactory.empty(), edgeFilePath);\n        String edgeId = config.getString(FlowGraphConfigurationKeys.FLOW_EDGE_ID_KEY);\n        if (!this.flowGraph.deleteFlowEdge(edgeId)) {\n          log.warn(\"Could not remove edge {} from FlowGraph; skipping\", edgeId);\n        } else {\n          log.info(\"Removed edge {} from FlowGraph\", edgeId);\n        }\n      } catch (Exception e) {\n        log.warn(\"Could not remove edge defined in {} due to exception {}\", edgeFilePath, e.getMessage());\n      }\n    }\n  }\n","date":"2018-10-13 01:19:40","endLine":241,"groupId":"101165","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeFlowEdge","params":"(DiffEntrychange)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e1/2e8398dd7053c575545d00bf6a1ffac7f6bfb0.src","preCode":"  private void removeFlowEdge(DiffEntry change) {\n    if (checkFilePath(change.getOldPath(), EDGE_FILE_DEPTH)) {\n      Path edgeFilePath = new Path(this.repositoryDir, change.getOldPath());\n      try {\n        Config config = getEdgeConfigWithOverrides(ConfigFactory.empty(), edgeFilePath);\n        String edgeId = config.getString(FlowGraphConfigurationKeys.FLOW_EDGE_ID_KEY);\n        if (!this.flowGraph.deleteFlowEdge(edgeId)) {\n          log.warn(\"Could not remove FlowEdge {} from FlowGraph; skipping\", edgeId);\n        }\n      } catch (Exception e) {\n        log.warn(\"Could not remove edge defined in {} due to exception {}\", edgeFilePath, e.getMessage());\n      }\n    }\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/core/GitFlowGraphMonitor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"}],"commitId":"4f2f2b3a5c3d354d6e13d91e93bda7a3ade096a9","commitMessage":"@@@[GOBBLIN-611] Ensure node events are processed before edge events in GitFlowGraphMonitor.[]\n\nCloses #2477 from\nsv2000/flowGraphMonitorChangeDepth\n","date":"2018-10-13 01:19:40","modifiedFileCount":"3","status":"M","submitter":"sv2000"}]
