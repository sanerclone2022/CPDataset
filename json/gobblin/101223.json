[{"authorTime":"2019-10-24 07:38:47","codes":[{"authorDate":"2019-10-24 07:38:47","commitOrder":1,"curCode":"  private void addOrAlterPartitionWithPushMode(IMetaStoreClient client, Table table, HivePartition partition)\n      throws TException, IOException {\n    Partition nativePartition = HiveMetaStoreUtils.getPartition(partition);\n\n    Preconditions.checkArgument(table.getPartitionKeysSize() == nativePartition.getValues().size(),\n        String.format(\"Partition key size is %s but partition value size is %s\", table.getPartitionKeys().size(),\n            nativePartition.getValues().size()));\n\n    try (AutoCloseableHiveLock lock =\n        this.locks.getPartitionLock(table.getDbName(), table.getTableName(), nativePartition.getValues())) {\n\n      try {\n        try (Timer.Context context = this.metricContext.timer(ADD_PARTITION_TIMER).time()) {\n          client.add_partition(getPartitionWithCreateTimeNow(nativePartition));\n        }\n        log.info(String.format(\"Added partition %s to table %s with location %s\", stringifyPartition(nativePartition),\n            table.getTableName(), nativePartition.getSd().getLocation()));\n      } catch (TException e) {\n        try {\n          if (this.skipDiffComputation) {\n            onPartitionExistWithoutComputingDiff(table, nativePartition, e);\n          } else {\n            onPartitionExist(client, table, partition, nativePartition, null);\n          }\n        } catch (Throwable e2) {\n          log.error(String.format(\n              \"Unable to add or alter partition %s in table %s with location %s: \" + e2.getMessage(),\n              stringifyPartitionVerbose(nativePartition), table.getTableName(), nativePartition.getSd().getLocation()), e2);\n          throw e2;\n        }\n      }\n    }\n  }\n","date":"2019-10-24 07:38:47","endLine":534,"groupId":"4496","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addOrAlterPartitionWithPushMode","params":"(IMetaStoreClientclient@Tabletable@HivePartitionpartition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6d/c466be431fe0e7067d535af1a7f14084d2b54c.src","preCode":"  private void addOrAlterPartitionWithPushMode(IMetaStoreClient client, Table table, HivePartition partition)\n      throws TException, IOException {\n    Partition nativePartition = HiveMetaStoreUtils.getPartition(partition);\n\n    Preconditions.checkArgument(table.getPartitionKeysSize() == nativePartition.getValues().size(),\n        String.format(\"Partition key size is %s but partition value size is %s\", table.getPartitionKeys().size(),\n            nativePartition.getValues().size()));\n\n    try (AutoCloseableHiveLock lock =\n        this.locks.getPartitionLock(table.getDbName(), table.getTableName(), nativePartition.getValues())) {\n\n      try {\n        try (Timer.Context context = this.metricContext.timer(ADD_PARTITION_TIMER).time()) {\n          client.add_partition(getPartitionWithCreateTimeNow(nativePartition));\n        }\n        log.info(String.format(\"Added partition %s to table %s with location %s\", stringifyPartition(nativePartition),\n            table.getTableName(), nativePartition.getSd().getLocation()));\n      } catch (TException e) {\n        try {\n          if (this.skipDiffComputation) {\n            onPartitionExistWithoutComputingDiff(table, nativePartition, e);\n          } else {\n            onPartitionExist(client, table, partition, nativePartition, null);\n          }\n        } catch (Throwable e2) {\n          log.error(String.format(\n              \"Unable to add or alter partition %s in table %s with location %s: \" + e2.getMessage(),\n              stringifyPartitionVerbose(nativePartition), table.getTableName(), nativePartition.getSd().getLocation()), e2);\n          throw e2;\n        }\n      }\n    }\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/metastore/HiveMetaStoreBasedRegister.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"B"},{"authorDate":"2019-10-24 07:38:47","commitOrder":1,"curCode":"  private void addOrAlterPartitionWithPullMode(IMetaStoreClient client, Table table, HivePartition partition)\n      throws TException, IOException {\n    Partition nativePartition = HiveMetaStoreUtils.getPartition(partition);\n\n    Preconditions.checkArgument(table.getPartitionKeysSize() == nativePartition.getValues().size(),\n        String.format(\"Partition key size is %s but partition value size is %s\", table.getPartitionKeys().size(),\n            nativePartition.getValues().size()));\n\n    try (AutoCloseableHiveLock lock =\n        this.locks.getPartitionLock(table.getDbName(), table.getTableName(), nativePartition.getValues())) {\n\n      Partition existedPartition;\n      try {\n        try (Timer.Context context = this.metricContext.timer(GET_HIVE_PARTITION).time()) {\n          existedPartition =  client.getPartition(table.getDbName(), table.getTableName(), nativePartition.getValues());\n          if (this.skipDiffComputation) {\n            onPartitionExistWithoutComputingDiff(table, nativePartition, null);\n          } else {\n            onPartitionExist(client, table, partition, nativePartition, existedPartition);\n          }\n        }\n      } catch (TException e) {\n        try (Timer.Context context = this.metricContext.timer(ADD_PARTITION_TIMER).time()) {\n          client.add_partition(getPartitionWithCreateTimeNow(nativePartition));\n        }\n        catch (Throwable e2) {\n          log.error(String.format(\n              \"Unable to add or alter partition %s in table %s with location %s: \" + e2.getMessage(),\n              stringifyPartitionVerbose(nativePartition), table.getTableName(), nativePartition.getSd().getLocation()), e2);\n          throw e2;\n        }\n        log.info(String.format(\"Added partition %s to table %s with location %s\", stringifyPartition(nativePartition),\n            table.getTableName(), nativePartition.getSd().getLocation()));\n      }\n    }\n  }\n","date":"2019-10-24 07:38:47","endLine":579,"groupId":"3089","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addOrAlterPartitionWithPullMode","params":"(IMetaStoreClientclient@Tabletable@HivePartitionpartition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6d/c466be431fe0e7067d535af1a7f14084d2b54c.src","preCode":"  private void addOrAlterPartitionWithPullMode(IMetaStoreClient client, Table table, HivePartition partition)\n      throws TException, IOException {\n    Partition nativePartition = HiveMetaStoreUtils.getPartition(partition);\n\n    Preconditions.checkArgument(table.getPartitionKeysSize() == nativePartition.getValues().size(),\n        String.format(\"Partition key size is %s but partition value size is %s\", table.getPartitionKeys().size(),\n            nativePartition.getValues().size()));\n\n    try (AutoCloseableHiveLock lock =\n        this.locks.getPartitionLock(table.getDbName(), table.getTableName(), nativePartition.getValues())) {\n\n      Partition existedPartition;\n      try {\n        try (Timer.Context context = this.metricContext.timer(GET_HIVE_PARTITION).time()) {\n          existedPartition =  client.getPartition(table.getDbName(), table.getTableName(), nativePartition.getValues());\n          if (this.skipDiffComputation) {\n            onPartitionExistWithoutComputingDiff(table, nativePartition, null);\n          } else {\n            onPartitionExist(client, table, partition, nativePartition, existedPartition);\n          }\n        }\n      } catch (TException e) {\n        try (Timer.Context context = this.metricContext.timer(ADD_PARTITION_TIMER).time()) {\n          client.add_partition(getPartitionWithCreateTimeNow(nativePartition));\n        }\n        catch (Throwable e2) {\n          log.error(String.format(\n              \"Unable to add or alter partition %s in table %s with location %s: \" + e2.getMessage(),\n              stringifyPartitionVerbose(nativePartition), table.getTableName(), nativePartition.getSd().getLocation()), e2);\n          throw e2;\n        }\n        log.info(String.format(\"Added partition %s to table %s with location %s\", stringifyPartition(nativePartition),\n            table.getTableName(), nativePartition.getSd().getLocation()));\n      }\n    }\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/metastore/HiveMetaStoreBasedRegister.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":544,"status":"B"}],"commitId":"70937f67a80e68a2a57b5aae3fe72e3d0fa087fd","commitMessage":"@@@[GOBBLIN-921] Make pull/push mode when registering partition to be configurable\n\nCloses #2777 from ZihanLi58/GOBBLIN-921\n","date":"2019-10-24 07:38:47","modifiedFileCount":"1","status":"B","submitter":"Zihan Li"},{"authorTime":"2021-08-07 05:18:38","codes":[{"authorDate":"2021-08-07 05:18:38","commitOrder":2,"curCode":"  private void addOrAlterPartitionWithPushMode(IMetaStoreClient client, Table table, HivePartition partition)\n      throws TException, IOException {\n    Partition nativePartition = HiveMetaStoreUtils.getPartition(partition);\n\n    Preconditions.checkArgument(table.getPartitionKeysSize() == nativePartition.getValues().size(),\n        String.format(\"Partition key size is %s but partition value size is %s\", table.getPartitionKeys().size(),\n            nativePartition.getValues().size()));\n\n    try (AutoCloseableHiveLock lock =\n        this.locks.getPartitionLock(table.getDbName(), table.getTableName(), nativePartition.getValues())) {\n\n      try {\n        try (Timer.Context context = this.metricContext.timer(ADD_PARTITION_TIMER).time()) {\n          client.add_partition(getPartitionWithCreateTimeNow(nativePartition));\n        }\n        log.info(String.format(\"Added partition %s to table %s with location %s\", stringifyPartition(nativePartition),\n            table.getTableName(), nativePartition.getSd().getLocation()));\n      } catch (AlreadyExistsException e) {\n        try {\n          if (this.skipDiffComputation) {\n            onPartitionExistWithoutComputingDiff(table, nativePartition, e);\n          } else {\n            onPartitionExist(client, table, partition, nativePartition, null);\n          }\n        } catch (Throwable e2) {\n          log.error(String.format(\n              \"Unable to add or alter partition %s in table %s with location %s: \" + e2.getMessage(),\n              stringifyPartitionVerbose(nativePartition), table.getTableName(), nativePartition.getSd().getLocation()), e2);\n          throw e2;\n        }\n      }\n    }\n  }\n","date":"2021-08-07 05:18:38","endLine":604,"groupId":"101223","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addOrAlterPartitionWithPushMode","params":"(IMetaStoreClientclient@Tabletable@HivePartitionpartition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/b2393583512e5b29d7d4992b68dbe415d99b26.src","preCode":"  private void addOrAlterPartitionWithPushMode(IMetaStoreClient client, Table table, HivePartition partition)\n      throws TException, IOException {\n    Partition nativePartition = HiveMetaStoreUtils.getPartition(partition);\n\n    Preconditions.checkArgument(table.getPartitionKeysSize() == nativePartition.getValues().size(),\n        String.format(\"Partition key size is %s but partition value size is %s\", table.getPartitionKeys().size(),\n            nativePartition.getValues().size()));\n\n    try (AutoCloseableHiveLock lock =\n        this.locks.getPartitionLock(table.getDbName(), table.getTableName(), nativePartition.getValues())) {\n\n      try {\n        try (Timer.Context context = this.metricContext.timer(ADD_PARTITION_TIMER).time()) {\n          client.add_partition(getPartitionWithCreateTimeNow(nativePartition));\n        }\n        log.info(String.format(\"Added partition %s to table %s with location %s\", stringifyPartition(nativePartition),\n            table.getTableName(), nativePartition.getSd().getLocation()));\n      } catch (TException e) {\n        try {\n          if (this.skipDiffComputation) {\n            onPartitionExistWithoutComputingDiff(table, nativePartition, e);\n          } else {\n            onPartitionExist(client, table, partition, nativePartition, null);\n          }\n        } catch (Throwable e2) {\n          log.error(String.format(\n              \"Unable to add or alter partition %s in table %s with location %s: \" + e2.getMessage(),\n              stringifyPartitionVerbose(nativePartition), table.getTableName(), nativePartition.getSd().getLocation()), e2);\n          throw e2;\n        }\n      }\n    }\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/metastore/HiveMetaStoreBasedRegister.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":572,"status":"M"},{"authorDate":"2021-08-07 05:18:38","commitOrder":2,"curCode":"  private void addOrAlterPartitionWithPullMode(IMetaStoreClient client, Table table, HivePartition partition)\n      throws TException, IOException {\n    Partition nativePartition = HiveMetaStoreUtils.getPartition(partition);\n\n    Preconditions.checkArgument(table.getPartitionKeysSize() == nativePartition.getValues().size(),\n        String.format(\"Partition key size is %s but partition value size is %s\", table.getPartitionKeys().size(),\n            nativePartition.getValues().size()));\n\n    try (AutoCloseableHiveLock lock =\n        this.locks.getPartitionLock(table.getDbName(), table.getTableName(), nativePartition.getValues())) {\n\n      Partition existedPartition;\n      try {\n        try (Timer.Context context = this.metricContext.timer(GET_HIVE_PARTITION).time()) {\n          existedPartition =  client.getPartition(table.getDbName(), table.getTableName(), nativePartition.getValues());\n          if (this.skipDiffComputation) {\n            onPartitionExistWithoutComputingDiff(table, nativePartition, null);\n          } else {\n            onPartitionExist(client, table, partition, nativePartition, existedPartition);\n          }\n        }\n      } catch (NoSuchObjectException e) {\n        try (Timer.Context context = this.metricContext.timer(ADD_PARTITION_TIMER).time()) {\n          client.add_partition(getPartitionWithCreateTimeNow(nativePartition));\n        }\n        catch (Throwable e2) {\n          log.error(String.format(\n              \"Unable to add or alter partition %s in table %s with location %s: \" + e2.getMessage(),\n              stringifyPartitionVerbose(nativePartition), table.getTableName(), nativePartition.getSd().getLocation()), e2);\n          throw e2;\n        }\n        log.info(String.format(\"Added partition %s to table %s with location %s\", stringifyPartition(nativePartition),\n            table.getTableName(), nativePartition.getSd().getLocation()));\n      }\n    }\n  }\n","date":"2021-08-07 05:18:38","endLine":649,"groupId":"101223","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addOrAlterPartitionWithPullMode","params":"(IMetaStoreClientclient@Tabletable@HivePartitionpartition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/b2393583512e5b29d7d4992b68dbe415d99b26.src","preCode":"  private void addOrAlterPartitionWithPullMode(IMetaStoreClient client, Table table, HivePartition partition)\n      throws TException, IOException {\n    Partition nativePartition = HiveMetaStoreUtils.getPartition(partition);\n\n    Preconditions.checkArgument(table.getPartitionKeysSize() == nativePartition.getValues().size(),\n        String.format(\"Partition key size is %s but partition value size is %s\", table.getPartitionKeys().size(),\n            nativePartition.getValues().size()));\n\n    try (AutoCloseableHiveLock lock =\n        this.locks.getPartitionLock(table.getDbName(), table.getTableName(), nativePartition.getValues())) {\n\n      Partition existedPartition;\n      try {\n        try (Timer.Context context = this.metricContext.timer(GET_HIVE_PARTITION).time()) {\n          existedPartition =  client.getPartition(table.getDbName(), table.getTableName(), nativePartition.getValues());\n          if (this.skipDiffComputation) {\n            onPartitionExistWithoutComputingDiff(table, nativePartition, null);\n          } else {\n            onPartitionExist(client, table, partition, nativePartition, existedPartition);\n          }\n        }\n      } catch (TException e) {\n        try (Timer.Context context = this.metricContext.timer(ADD_PARTITION_TIMER).time()) {\n          client.add_partition(getPartitionWithCreateTimeNow(nativePartition));\n        }\n        catch (Throwable e2) {\n          log.error(String.format(\n              \"Unable to add or alter partition %s in table %s with location %s: \" + e2.getMessage(),\n              stringifyPartitionVerbose(nativePartition), table.getTableName(), nativePartition.getSd().getLocation()), e2);\n          throw e2;\n        }\n        log.info(String.format(\"Added partition %s to table %s with location %s\", stringifyPartition(nativePartition),\n            table.getTableName(), nativePartition.getSd().getLocation()));\n      }\n    }\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/metastore/HiveMetaStoreBasedRegister.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":614,"status":"M"}],"commitId":"e5576e72c2e57770164eb0796ba72524950c3a89","commitMessage":"@@@[GOBBLIN-1502] dont add a partition if it already exists but the getPartition fails ? (#3344)\n\n* dont add a partition if it already exists but the getPartition fails with TException.  dont alter a partition if a partition does not exist but the add_partition fails with TException\n\n* add a unit test to verify hive client behavior","date":"2021-08-07 05:18:38","modifiedFileCount":"2","status":"M","submitter":"Arjun Singh Bora"}]
