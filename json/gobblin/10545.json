[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    zkJobStateStore.put(TEST_JOB_NAME,\n        ZkDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + ZkDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","date":"2017-07-31 15:51:25","endLine":99,"groupId":"4059","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPersistJobState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/74/2aa98b1ccfa1c6747c9cd64242771188c15458.src","preCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    zkJobStateStore.put(TEST_JOB_NAME,\n        ZkDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + ZkDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/test/java/org/apache/gobblin/runtime/ZkDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    this.fsJobStateStore.put(TEST_JOB_NAME,\n        FsDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + FsDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","date":"2017-07-31 15:51:25","endLine":87,"groupId":"4059","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPersistJobState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8a/a9ca8d4bfecaaab6ea7f1cc2e75e432ee0f30b.src","preCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    this.fsJobStateStore.put(TEST_JOB_NAME,\n        FsDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + FsDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/FsDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2018-03-30 02:27:20","commitOrder":2,"curCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    zkJobStateStore.put(TEST_JOB_NAME,\n        ZkDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + ZkDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n\n    \r\n    jobState.setJobName(TEST_JOB_NAME2);\n    zkJobStateStore.put(TEST_JOB_NAME2,\n        ZkDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + ZkDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","date":"2018-03-30 02:27:20","endLine":116,"groupId":"10545","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPersistJobState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2e/e5f1d2d5c057cd6b5894bc5a1b0d57b925ceca.src","preCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    zkJobStateStore.put(TEST_JOB_NAME,\n        ZkDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + ZkDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/test/java/org/apache/gobblin/runtime/ZkDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    this.fsJobStateStore.put(TEST_JOB_NAME,\n        FsDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + FsDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","date":"2017-07-31 15:51:25","endLine":87,"groupId":"10545","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPersistJobState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8a/a9ca8d4bfecaaab6ea7f1cc2e75e432ee0f30b.src","preCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    this.fsJobStateStore.put(TEST_JOB_NAME,\n        FsDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + FsDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/FsDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"}],"commitId":"7f55214e20610a2b99652e003af9a7c684da7e49","commitMessage":"@@@[GOBBLIN-446] Add support for migrating state for all jobs in a job store\n\nCloses #2321 from htran1/state_store_mig_all_jobs\n","date":"2018-03-30 02:27:20","modifiedFileCount":"10","status":"M","submitter":"Hung Tran"}]
