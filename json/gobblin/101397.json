[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results = Lists.newArrayList();\n    String path = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY);\n\n    try {\n      LOGGER.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n    } catch (FileBasedHelperException e) {\n      LOGGER.error(\"Not able to run ls command due to \" + e.getMessage() + \" will not pull any files\", e);\n    }\n    return results;\n  }\n","date":"2017-07-31 15:51:25","endLine":64,"groupId":"7271","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getcurrentFsSnapshot","params":"(Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f1/89b47c47a3e400af70cd2d2b9e14a52a1eb070.src","preCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results = Lists.newArrayList();\n    String path = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY);\n\n    try {\n      LOGGER.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n    } catch (FileBasedHelperException e) {\n      LOGGER.error(\"Not able to run ls command due to \" + e.getMessage() + \" will not pull any files\", e);\n    }\n    return results;\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/extractor/hadoop/AvroFileSource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results = new ArrayList<>();\n    String path = getLsPattern(state);\n\n    try {\n      log.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n      for (int i = 0; i < results.size(); i++) {\n        URI uri = new URI(results.get(i));\n        File file = uri.isAbsolute()?\n            new File(uri) : new File(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY), uri.toString());\n\n        String filePath = file.getAbsolutePath();\n        results.set(i, filePath + this.splitPattern + this.fsHelper.getFileMTime(filePath));\n      }\n    } catch (FileBasedHelperException | URISyntaxException e) {\n      log.error(\"Not able to fetch the filename/file modified time to \" + e.getMessage() + \" will not pull any files\",\n          e);\n    }\n    return results;\n  }\n","date":"2017-07-31 15:51:25","endLine":229,"groupId":"6456","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getcurrentFsSnapshot","params":"(Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a2/6b05201b226263eefb9c6e1607adcb5a6ea0a2.src","preCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results = new ArrayList<>();\n    String path = getLsPattern(state);\n\n    try {\n      log.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n      for (int i = 0; i < results.size(); i++) {\n        URI uri = new URI(results.get(i));\n        File file = uri.isAbsolute()?\n            new File(uri) : new File(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY), uri.toString());\n\n        String filePath = file.getAbsolutePath();\n        results.set(i, filePath + this.splitPattern + this.fsHelper.getFileMTime(filePath));\n      }\n    } catch (FileBasedHelperException | URISyntaxException e) {\n      log.error(\"Not able to fetch the filename/file modified time to \" + e.getMessage() + \" will not pull any files\",\n          e);\n    }\n    return results;\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/extractor/filebased/FileBasedSource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-11-09 08:42:46","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results = Lists.newArrayList();\n    String path = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY);\n\n    try {\n      LOGGER.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n    } catch (FileBasedHelperException e) {\n      LOGGER.error(\"Not able to run ls command due to \" + e.getMessage() + \" will not pull any files\", e);\n    }\n    return results;\n  }\n","date":"2017-07-31 15:51:25","endLine":64,"groupId":"7271","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getcurrentFsSnapshot","params":"(Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f1/89b47c47a3e400af70cd2d2b9e14a52a1eb070.src","preCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results = Lists.newArrayList();\n    String path = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY);\n\n    try {\n      LOGGER.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n    } catch (FileBasedHelperException e) {\n      LOGGER.error(\"Not able to run ls command due to \" + e.getMessage() + \" will not pull any files\", e);\n    }\n    return results;\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/extractor/hadoop/AvroFileSource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"},{"authorDate":"2017-11-09 08:42:46","commitOrder":2,"curCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results = new ArrayList<>();\n    String path = getLsPattern(state);\n\n    try {\n      log.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n      for (int i = 0; i < results.size(); i++) {\n        URI uri = new URI(results.get(i));\n        String filePath = uri.toString();\n        if (!uri.isAbsolute()) {\n          File file = new File(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY), uri.toString());\n          filePath = file.getAbsolutePath();\n        }\n        results.set(i, filePath + this.splitPattern + this.fsHelper.getFileMTime(filePath));\n      }\n    } catch (FileBasedHelperException | URISyntaxException e) {\n      log.error(\"Not able to fetch the filename/file modified time to \" + e.getMessage() + \" will not pull any files\",\n          e);\n    }\n    return results;\n  }\n","date":"2017-11-09 08:42:46","endLine":230,"groupId":"6399","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getcurrentFsSnapshot","params":"(Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d6/93f4455ce6697c44bcf4ca116c2a3ee24902c7.src","preCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results = new ArrayList<>();\n    String path = getLsPattern(state);\n\n    try {\n      log.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n      for (int i = 0; i < results.size(); i++) {\n        URI uri = new URI(results.get(i));\n        File file = uri.isAbsolute()?\n            new File(uri) : new File(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY), uri.toString());\n\n        String filePath = file.getAbsolutePath();\n        results.set(i, filePath + this.splitPattern + this.fsHelper.getFileMTime(filePath));\n      }\n    } catch (FileBasedHelperException | URISyntaxException e) {\n      log.error(\"Not able to fetch the filename/file modified time to \" + e.getMessage() + \" will not pull any files\",\n          e);\n    }\n    return results;\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/extractor/filebased/FileBasedSource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"}],"commitId":"1b7748a688ea5b00b0d8bfb6c8e82d32e635482b","commitMessage":"@@@[GOBBLIN-305] Add csv-kafka kafka-hdfs job template\n\nCloses #2160 from zxcware/odsc2\n","date":"2017-11-09 08:42:46","modifiedFileCount":"2","status":"M","submitter":"zhchen"},{"authorTime":"2020-06-05 05:20:00","codes":[{"authorDate":"2020-06-05 05:20:00","commitOrder":3,"curCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results;\n    String path = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY);\n\n    try {\n      log.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n    } catch (FileBasedHelperException e) {\n      String errMsg = String.format(\n          \"Not able to run ls command due to %s. Will not pull any files\", e.getMessage());\n      log.error(errMsg, e);\n      throw new RuntimeException(errMsg, e);\n    }\n    return results;\n  }\n","date":"2020-06-05 05:20:00","endLine":65,"groupId":"101397","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"getcurrentFsSnapshot","params":"(Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/00/f913125259abacad2d5f397fc2202bcfe85771.src","preCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results = Lists.newArrayList();\n    String path = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY);\n\n    try {\n      LOGGER.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n    } catch (FileBasedHelperException e) {\n      LOGGER.error(\"Not able to run ls command due to \" + e.getMessage() + \" will not pull any files\", e);\n    }\n    return results;\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/extractor/hadoop/AvroFileSource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2020-06-05 05:20:00","commitOrder":3,"curCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results;\n    String path = getLsPattern(state);\n\n    try {\n      log.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n      for (int i = 0; i < results.size(); i++) {\n        URI uri = new URI(results.get(i));\n        String filePath = uri.toString();\n        if (!uri.isAbsolute()) {\n          File file = new File(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY), uri.toString());\n          filePath = file.getAbsolutePath();\n        }\n        results.set(i, filePath + this.splitPattern + this.fsHelper.getFileMTime(filePath));\n      }\n    } catch (FileBasedHelperException | URISyntaxException e) {\n      String errMsg = String.format(\n          \"Not able to fetch the filename/file modified time to %s. Will not pull any files\", e.getMessage());\n      log.error(errMsg, e);\n      throw new RuntimeException(errMsg, e);\n    }\n    return results;\n  }\n","date":"2020-06-05 05:20:00","endLine":289,"groupId":"101397","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getcurrentFsSnapshot","params":"(Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/97/3a7b08aa8ef946b11c195425f86179bbc253de.src","preCode":"  public List<String> getcurrentFsSnapshot(State state) {\n    List<String> results = new ArrayList<>();\n    String path = getLsPattern(state);\n\n    try {\n      log.info(\"Running ls command with input \" + path);\n      results = this.fsHelper.ls(path);\n      for (int i = 0; i < results.size(); i++) {\n        URI uri = new URI(results.get(i));\n        String filePath = uri.toString();\n        if (!uri.isAbsolute()) {\n          File file = new File(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY), uri.toString());\n          filePath = file.getAbsolutePath();\n        }\n        results.set(i, filePath + this.splitPattern + this.fsHelper.getFileMTime(filePath));\n      }\n    } catch (FileBasedHelperException | URISyntaxException e) {\n      log.error(\"Not able to fetch the filename/file modified time to \" + e.getMessage() + \" will not pull any files\",\n          e);\n    }\n    return results;\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/extractor/filebased/FileBasedSource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"}],"commitId":"576fa19f560642b6cc11d41ad4e192d3fb70ead9","commitMessage":"@@@[GOBBLIN-1174] Fail job on FileBasedSource ls invalid source directory\n\nCloses #3019 from zxcware/fshelper\n","date":"2020-06-05 05:20:00","modifiedFileCount":"3","status":"M","submitter":"zhchen"}]
