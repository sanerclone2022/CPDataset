[{"authorTime":"2019-08-06 00:34:31","codes":[{"authorDate":"2019-08-06 00:34:31","commitOrder":1,"curCode":"  public void testGetListOfTopicNamesByFilteringTag()\n      throws Exception {\n    Properties properties = new Properties();\n    properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST, \"/tags/whitelist\");\n    properties.setProperty(GOBBLIN_CONFIG_FILTER, \"/data/tracking\");\n    properties.setProperty(GOBBLIN_CONFIG_COMMONPATH, \"/data/tracking\");\n\n    List<String> result = ConfigStoreUtils\n        .getListOfTopicNamesByFilteringTag(properties, configClient, Optional.absent(), configStoreUri,\n            GOBBLIN_CONFIG_TAGS_WHITELIST);\n    Assert.assertEquals(result.size(), 2);\n    Assert.assertTrue(result.contains(\"Topic1\"));\n    Assert.assertTrue(result.contains(\"Topic2\"));\n  }\n","date":"2019-08-06 00:34:31","endLine":149,"groupId":"5024","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetListOfTopicNamesByFilteringTag","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d2/96937a870f4b28e98cfb2741e3117e57f8168f.src","preCode":"  public void testGetListOfTopicNamesByFilteringTag()\n      throws Exception {\n    Properties properties = new Properties();\n    properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST, \"/tags/whitelist\");\n    properties.setProperty(GOBBLIN_CONFIG_FILTER, \"/data/tracking\");\n    properties.setProperty(GOBBLIN_CONFIG_COMMONPATH, \"/data/tracking\");\n\n    List<String> result = ConfigStoreUtils\n        .getListOfTopicNamesByFilteringTag(properties, configClient, Optional.absent(), configStoreUri,\n            GOBBLIN_CONFIG_TAGS_WHITELIST);\n    Assert.assertEquals(result.size(), 2);\n    Assert.assertTrue(result.contains(\"Topic1\"));\n    Assert.assertTrue(result.contains(\"Topic2\"));\n  }\n","realPath":"gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/ConfigStoreUtilsTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"B"},{"authorDate":"2019-08-06 00:34:31","commitOrder":1,"curCode":"  public void testGetListOfTopicNamesByFilteringTag()\n      throws Exception {\n    Properties properties = new Properties();\n    properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST, \"/tags/whitelist\");\n    properties.setProperty(GOBBLIN_CONFIG_FILTER, \"/data/tracking\");\n    properties.setProperty(GOBBLIN_CONFIG_COMMONPATH, \"/data/tracking\");\n\n    List<String> result = ConfigStoreUtils\n        .getListOfTopicNamesByFilteringTag(properties, configClient, Optional.absent(), configStoreUri,\n            GOBBLIN_CONFIG_TAGS_WHITELIST);\n    Assert.assertEquals(result.size(), 2);\n    Assert.assertTrue(result.contains(\"Topic1\"));\n    Assert.assertTrue(result.contains(\"Topic2\"));\n  }\n","date":"2019-08-06 00:34:31","endLine":91,"groupId":"5024","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetListOfTopicNamesByFilteringTag","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/eb/dd27b9625b0a7f07fcee5af2ec0ead4c53c139.src","preCode":"  public void testGetListOfTopicNamesByFilteringTag()\n      throws Exception {\n    Properties properties = new Properties();\n    properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST, \"/tags/whitelist\");\n    properties.setProperty(GOBBLIN_CONFIG_FILTER, \"/data/tracking\");\n    properties.setProperty(GOBBLIN_CONFIG_COMMONPATH, \"/data/tracking\");\n\n    List<String> result = ConfigStoreUtils\n        .getListOfTopicNamesByFilteringTag(properties, configClient, Optional.absent(), configStoreUri,\n            GOBBLIN_CONFIG_TAGS_WHITELIST);\n    Assert.assertEquals(result.size(), 2);\n    Assert.assertTrue(result.contains(\"Topic1\"));\n    Assert.assertTrue(result.contains(\"Topic2\"));\n  }\n","realPath":"gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/ZipConfigStoreUtilsTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"}],"commitId":"8903ebf3807af3369839069e2082afa70c7fe77e","commitMessage":"@@@[GOBBLIN-838] Fix Ivy-based ConfigStoreUtils and add Unit Test\n\nCloses #2697 from\nautumnust/removeConfigStoreInKafkaSource\n","date":"2019-08-06 00:34:31","modifiedFileCount":"6","status":"B","submitter":"autumnust"},{"authorTime":"2019-08-16 12:50:42","codes":[{"authorDate":"2019-08-06 00:34:31","commitOrder":2,"curCode":"  public void testGetListOfTopicNamesByFilteringTag()\n      throws Exception {\n    Properties properties = new Properties();\n    properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST, \"/tags/whitelist\");\n    properties.setProperty(GOBBLIN_CONFIG_FILTER, \"/data/tracking\");\n    properties.setProperty(GOBBLIN_CONFIG_COMMONPATH, \"/data/tracking\");\n\n    List<String> result = ConfigStoreUtils\n        .getListOfTopicNamesByFilteringTag(properties, configClient, Optional.absent(), configStoreUri,\n            GOBBLIN_CONFIG_TAGS_WHITELIST);\n    Assert.assertEquals(result.size(), 2);\n    Assert.assertTrue(result.contains(\"Topic1\"));\n    Assert.assertTrue(result.contains(\"Topic2\"));\n  }\n","date":"2019-08-06 00:34:31","endLine":149,"groupId":"10433","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetListOfTopicNamesByFilteringTag","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d2/96937a870f4b28e98cfb2741e3117e57f8168f.src","preCode":"  public void testGetListOfTopicNamesByFilteringTag()\n      throws Exception {\n    Properties properties = new Properties();\n    properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST, \"/tags/whitelist\");\n    properties.setProperty(GOBBLIN_CONFIG_FILTER, \"/data/tracking\");\n    properties.setProperty(GOBBLIN_CONFIG_COMMONPATH, \"/data/tracking\");\n\n    List<String> result = ConfigStoreUtils\n        .getListOfTopicNamesByFilteringTag(properties, configClient, Optional.absent(), configStoreUri,\n            GOBBLIN_CONFIG_TAGS_WHITELIST);\n    Assert.assertEquals(result.size(), 2);\n    Assert.assertTrue(result.contains(\"Topic1\"));\n    Assert.assertTrue(result.contains(\"Topic2\"));\n  }\n","realPath":"gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/ConfigStoreUtilsTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"N"},{"authorDate":"2019-08-16 12:50:42","commitOrder":2,"curCode":"  public void testGetListOfTopicNamesByFilteringTag() {\n    Properties properties = new Properties();\n    properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST, \"/tags/whitelist\");\n    properties.setProperty(GOBBLIN_CONFIG_FILTER, \"/data/tracking\");\n    properties.setProperty(GOBBLIN_CONFIG_COMMONPATH, \"/data/tracking\");\n    List<String> result = ConfigStoreUtils\n        .getListOfTopicNamesByFilteringTag(properties, configClient, Optional.absent(), configStoreUri,\n            GOBBLIN_CONFIG_TAGS_WHITELIST);\n    Assert.assertEquals(result.size(), 2);\n    Assert.assertTrue(result.contains(\"Topic1\"));\n    Assert.assertTrue(result.contains(\"Topic2\"));\n\n    properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST, \"/tags/random\");\n    result = ConfigStoreUtils\n        .getListOfTopicNamesByFilteringTag(properties, configClient, Optional.absent(), configStoreUri,\n            GOBBLIN_CONFIG_TAGS_WHITELIST);\n    Assert.assertEquals(result.size(), 1);\n    Assert.assertTrue(result.contains(\"Topic3\"));\n\n    properties.setProperty(GOBBLIN_CONFIG_TAGS_BLACKLIST, \"/tags/blacklist\");\n    result = ConfigStoreUtils\n        .getListOfTopicNamesByFilteringTag(properties, configClient, Optional.absent(), configStoreUri,\n            GOBBLIN_CONFIG_TAGS_BLACKLIST);\n    Assert.assertEquals(result.size(), 2);\n    Assert.assertTrue(result.contains(\"Topic1\"));\n    Assert.assertTrue(result.contains(\"Topic2\"));\n  }\n","date":"2019-08-16 12:50:42","endLine":108,"groupId":"10433","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testGetListOfTopicNamesByFilteringTag","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3a/9e3507715f185ea601da0cb130f8c9939d5406.src","preCode":"  public void testGetListOfTopicNamesByFilteringTag()\n      throws Exception {\n    Properties properties = new Properties();\n    properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST, \"/tags/whitelist\");\n    properties.setProperty(GOBBLIN_CONFIG_FILTER, \"/data/tracking\");\n    properties.setProperty(GOBBLIN_CONFIG_COMMONPATH, \"/data/tracking\");\n\n    List<String> result = ConfigStoreUtils\n        .getListOfTopicNamesByFilteringTag(properties, configClient, Optional.absent(), configStoreUri,\n            GOBBLIN_CONFIG_TAGS_WHITELIST);\n    Assert.assertEquals(result.size(), 2);\n    Assert.assertTrue(result.contains(\"Topic1\"));\n    Assert.assertTrue(result.contains(\"Topic2\"));\n  }\n","realPath":"gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/ZipConfigStoreUtilsTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"94dd2ae9566bd76fb11c68850a8fcc6e64797824","commitMessage":"@@@[GOBBLIN-857] Extending getTopicsFromConfigStore to accept topicName directly\n\nCloses #2713 from autumnust/extendConfigStoreUtils\n","date":"2019-08-16 12:50:42","modifiedFileCount":"4","status":"M","submitter":"autumnust"}]
