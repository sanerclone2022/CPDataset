[{"authorTime":"2021-03-09 02:42:57","codes":[{"authorDate":"2020-11-08 09:17:19","commitOrder":2,"curCode":"  public void testGroupRequesterRejected() throws Exception {\n    try {\n      ServiceRequester testRequester = new ServiceRequester(\"testName\", \"USER_PRINCIPAL\", \"testFrom\");\n      _requesterService.setRequester(testRequester);\n      Map<String, String> flowProperties = Maps.newHashMap();\n\n      FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_6))\n          .setTemplateUris(TEST_TEMPLATE_URI)\n          .setProperties(new StringMap(flowProperties))\n          .setOwningGroup(\"testGroup\");\n\n      _client.createFlowConfig(flowConfig);\n\n      testRequester.setName(\"testName3\");\n      _client.deleteFlowConfig(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_6));\n    } catch (RestLiResponseException e) {\n      Assert.assertEquals(e.getStatus(), HttpStatus.ORDINAL_401_Unauthorized);\n    }\n  }\n","date":"2020-11-08 09:17:19","endLine":263,"groupId":"1958","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGroupRequesterRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f3/93b8f02a578256c3c0e4ccba17959ae4b90212.src","preCode":"  public void testGroupRequesterRejected() throws Exception {\n    try {\n      ServiceRequester testRequester = new ServiceRequester(\"testName\", \"USER_PRINCIPAL\", \"testFrom\");\n      _requesterService.setRequester(testRequester);\n      Map<String, String> flowProperties = Maps.newHashMap();\n\n      FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_6))\n          .setTemplateUris(TEST_TEMPLATE_URI)\n          .setProperties(new StringMap(flowProperties))\n          .setOwningGroup(\"testGroup\");\n\n      _client.createFlowConfig(flowConfig);\n\n      testRequester.setName(\"testName3\");\n      _client.deleteFlowConfig(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_6));\n    } catch (RestLiResponseException e) {\n      Assert.assertEquals(e.getStatus(), HttpStatus.ORDINAL_401_Unauthorized);\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigV2Test.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"NB"},{"authorDate":"2021-03-09 02:42:57","commitOrder":2,"curCode":"  public void testGroupUpdateRejected() throws Exception {\n   ServiceRequester testRequester = new ServiceRequester(\"testName\", \"USER_PRINCIPAL\", \"testFrom\");\n   _requesterService.setRequester(testRequester);\n   Map<String, String> flowProperties = Maps.newHashMap();\n\n   FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_7))\n       .setTemplateUris(TEST_TEMPLATE_URI)\n       .setProperties(new StringMap(flowProperties))\n       .setOwningGroup(\"testGroup\");\n\n   _client.createFlowConfig(flowConfig);\n\n   \r\n   flowConfig.setOwningGroup(\"dummyGroup\");\n   try {\n     _client.updateFlowConfig(flowConfig);\n     Assert.fail(\"Expected update to be rejected\");\n   } catch (RestLiResponseException e) {\n     Assert.assertEquals(e.getStatus(), HttpStatus.ORDINAL_401_Unauthorized);\n   }\n  }\n","date":"2021-03-09 02:42:57","endLine":287,"groupId":"1959","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGroupUpdateRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9f/645cc01ad6e1b7c070bc9e91813eda006d361e.src","preCode":"  public void testGroupUpdateRejected() throws Exception {\n   ServiceRequester testRequester = new ServiceRequester(\"testName\", \"USER_PRINCIPAL\", \"testFrom\");\n   _requesterService.setRequester(testRequester);\n   Map<String, String> flowProperties = Maps.newHashMap();\n\n   FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_7))\n       .setTemplateUris(TEST_TEMPLATE_URI)\n       .setProperties(new StringMap(flowProperties))\n       .setOwningGroup(\"testGroup\");\n\n   _client.createFlowConfig(flowConfig);\n\n   \r\n   flowConfig.setOwningGroup(\"dummyGroup\");\n   try {\n     _client.updateFlowConfig(flowConfig);\n     Assert.fail(\"Expected update to be rejected\");\n   } catch (RestLiResponseException e) {\n     Assert.assertEquals(e.getStatus(), HttpStatus.ORDINAL_401_Unauthorized);\n   }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigV2Test.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"B"}],"commitId":"303ec0e99a6987db834638726d3e88daf22ef181","commitMessage":"@@@[GOBBLIN-1402] Allow flow's requester list/owner to be updated\n\nCloses #3238 from jack-moseley/requester-logic-\nupdate\n","date":"2021-03-09 02:42:57","modifiedFileCount":"5","status":"M","submitter":"Jack Moseley"},{"authorTime":"2021-07-16 03:35:13","codes":[{"authorDate":"2020-11-08 09:17:19","commitOrder":3,"curCode":"  public void testGroupRequesterRejected() throws Exception {\n    try {\n      ServiceRequester testRequester = new ServiceRequester(\"testName\", \"USER_PRINCIPAL\", \"testFrom\");\n      _requesterService.setRequester(testRequester);\n      Map<String, String> flowProperties = Maps.newHashMap();\n\n      FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_6))\n          .setTemplateUris(TEST_TEMPLATE_URI)\n          .setProperties(new StringMap(flowProperties))\n          .setOwningGroup(\"testGroup\");\n\n      _client.createFlowConfig(flowConfig);\n\n      testRequester.setName(\"testName3\");\n      _client.deleteFlowConfig(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_6));\n    } catch (RestLiResponseException e) {\n      Assert.assertEquals(e.getStatus(), HttpStatus.ORDINAL_401_Unauthorized);\n    }\n  }\n","date":"2020-11-08 09:17:19","endLine":263,"groupId":"101501","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGroupRequesterRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f3/93b8f02a578256c3c0e4ccba17959ae4b90212.src","preCode":"  public void testGroupRequesterRejected() throws Exception {\n    try {\n      ServiceRequester testRequester = new ServiceRequester(\"testName\", \"USER_PRINCIPAL\", \"testFrom\");\n      _requesterService.setRequester(testRequester);\n      Map<String, String> flowProperties = Maps.newHashMap();\n\n      FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_6))\n          .setTemplateUris(TEST_TEMPLATE_URI)\n          .setProperties(new StringMap(flowProperties))\n          .setOwningGroup(\"testGroup\");\n\n      _client.createFlowConfig(flowConfig);\n\n      testRequester.setName(\"testName3\");\n      _client.deleteFlowConfig(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_6));\n    } catch (RestLiResponseException e) {\n      Assert.assertEquals(e.getStatus(), HttpStatus.ORDINAL_401_Unauthorized);\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigV2Test.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"N"},{"authorDate":"2021-07-16 03:35:13","commitOrder":3,"curCode":"  public void testGroupUpdateRejected() throws Exception {\n   _requesterService.setRequester(TEST_REQUESTER);\n   Map<String, String> flowProperties = Maps.newHashMap();\n\n   FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_7))\n       .setTemplateUris(TEST_TEMPLATE_URI)\n       .setProperties(new StringMap(flowProperties))\n       .setOwningGroup(\"testGroup\");\n\n   _client.createFlowConfig(flowConfig);\n\n   \r\n   flowConfig.setOwningGroup(\"dummyGroup\");\n   try {\n     _client.updateFlowConfig(flowConfig);\n     Assert.fail(\"Expected update to be rejected\");\n   } catch (RestLiResponseException e) {\n     Assert.assertEquals(e.getStatus(), HttpStatus.ORDINAL_401_Unauthorized);\n   }\n  }\n","date":"2021-07-16 03:35:13","endLine":295,"groupId":"101501","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testGroupUpdateRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/fa/4ad115385dbd10c66ad66f5deaaa21630d8f76.src","preCode":"  public void testGroupUpdateRejected() throws Exception {\n   ServiceRequester testRequester = new ServiceRequester(\"testName\", \"USER_PRINCIPAL\", \"testFrom\");\n   _requesterService.setRequester(testRequester);\n   Map<String, String> flowProperties = Maps.newHashMap();\n\n   FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME_7))\n       .setTemplateUris(TEST_TEMPLATE_URI)\n       .setProperties(new StringMap(flowProperties))\n       .setOwningGroup(\"testGroup\");\n\n   _client.createFlowConfig(flowConfig);\n\n   \r\n   flowConfig.setOwningGroup(\"dummyGroup\");\n   try {\n     _client.updateFlowConfig(flowConfig);\n     Assert.fail(\"Expected update to be rejected\");\n   } catch (RestLiResponseException e) {\n     Assert.assertEquals(e.getStatus(), HttpStatus.ORDINAL_401_Unauthorized);\n   }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigV2Test.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"M"}],"commitId":"77c2b95b2a106e83011eade119f88e900a07fa11","commitMessage":"@@@[GOBBLIN-1458] Add endpoint to trigger a flow in GaaS (#3297)\n\nPreviously the way to manually trigger an execution of a scheduled flow is to send a partial update that sets the flow's runImmediately property to true. This PR improves the API by adding a restli action that sends the same partial update. \n\nAlso copied the implementation of partialUpdateFlowConfig to FlowConfigV2ResourceLocalHandler for testing convenience (normally when running the service GobblinServiceFlowConfigResourceHandler would be used.  but for tests it is FlowConfigV2ResourceLocalHandler).","date":"2021-07-16 03:35:13","modifiedFileCount":"4","status":"M","submitter":"Jack Moseley"}]
