[{"authorTime":"2018-10-24 07:04:44","codes":[{"authorDate":"2018-12-12 07:23:04","commitOrder":3,"curCode":"  public GobblinHelixPlanningJobLauncherMetrics(String metricsName,\n      final MetricContext metricContext,\n      int windowSizeInMin) {\n\n    this.metricsName = metricsName;\n\n    this.timeForCompletedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_COMPLETED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.timeForFailedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_FAILED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n    this.contextAwareMetrics.add(timeForCompletedPlanningJobs);\n    this.contextAwareMetrics.add(timeForFailedPlanningJobs);\n  }\n","date":"2018-12-12 07:23:04","endLine":48,"groupId":"5162","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"GobblinHelixPlanningJobLauncherMetrics","params":"(StringmetricsName@finalMetricContextmetricContext@intwindowSizeInMin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/59/3e72d4db16f2df760b0607a3daefcb604ee98f.src","preCode":"  public GobblinHelixPlanningJobLauncherMetrics(String metricsName,\n      final MetricContext metricContext,\n      int windowSizeInMin) {\n\n    this.metricsName = metricsName;\n\n    this.timeForCompletedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_COMPLETED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.timeForFailedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_FAILED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n    this.contextAwareMetrics.add(timeForCompletedPlanningJobs);\n    this.contextAwareMetrics.add(timeForFailedPlanningJobs);\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/GobblinHelixPlanningJobLauncherMetrics.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"MB"},{"authorDate":"2018-10-24 07:04:44","commitOrder":3,"curCode":"    public GobblinHelixJobLauncherMetrics(String metricsName, final MetricContext metricContext, int windowSizeInMin) {\n      this.metricsName = metricsName;\n\n      \r\n      this.totalJobsLaunched = new AtomicLong(0);\n      this.totalJobsCompleted = new AtomicLong(0);\n      this.totalJobsCommitted = new AtomicLong(0);\n      this.totalJobsFailed = new AtomicLong(0);\n      this.totalJobsCancelled = new AtomicLong(0);\n\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_LAUNCHED, ()->this.totalJobsLaunched.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMPLETED, ()->this.totalJobsCompleted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMMITTED, ()->this.totalJobsCommitted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_FAILED, ()->this.totalJobsFailed.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_CANCELLED, ()->this.totalJobsCancelled.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_RUNNING,\n          ()->(int)(GobblinHelixJobLauncherMetrics.this.totalJobsLaunched.get() - GobblinHelixJobLauncherMetrics.this.totalJobsCompleted.get())));\n\n      this.timeForCompletedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMPLETED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForFailedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_FAILED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForCommittedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMMITTED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n      this.contextAwareMetrics.add(timeForCommittedJobs);\n      this.contextAwareMetrics.add(timeForCompletedJobs);\n      this.contextAwareMetrics.add(timeForFailedJobs);\n    }\n","date":"2018-10-24 07:04:44","endLine":68,"groupId":"6513","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"GobblinHelixJobLauncherMetrics","params":"(StringmetricsName@finalMetricContextmetricContext@intwindowSizeInMin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b3/3edae3bbe8598fb0dcc046fd65960cf12b5340.src","preCode":"    public GobblinHelixJobLauncherMetrics(String metricsName, final MetricContext metricContext, int windowSizeInMin) {\n      this.metricsName = metricsName;\n\n      \r\n      this.totalJobsLaunched = new AtomicLong(0);\n      this.totalJobsCompleted = new AtomicLong(0);\n      this.totalJobsCommitted = new AtomicLong(0);\n      this.totalJobsFailed = new AtomicLong(0);\n      this.totalJobsCancelled = new AtomicLong(0);\n\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_LAUNCHED, ()->this.totalJobsLaunched.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMPLETED, ()->this.totalJobsCompleted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMMITTED, ()->this.totalJobsCommitted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_FAILED, ()->this.totalJobsFailed.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_CANCELLED, ()->this.totalJobsCancelled.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_RUNNING,\n          ()->(int)(GobblinHelixJobLauncherMetrics.this.totalJobsLaunched.get() - GobblinHelixJobLauncherMetrics.this.totalJobsCompleted.get())));\n\n      this.timeForCompletedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMPLETED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForFailedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_FAILED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForCommittedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMMITTED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n      this.contextAwareMetrics.add(timeForCommittedJobs);\n      this.contextAwareMetrics.add(timeForCompletedJobs);\n      this.contextAwareMetrics.add(timeForFailedJobs);\n    }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/GobblinHelixJobLauncherMetrics.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"NB"}],"commitId":"79878f992db27e60865bd09b6295737d31e2fe8e","commitMessage":"@@@[GOBBLIN-652] Add helix metrics\n\nCloses #2521 from kyuamazon/helixmetrics\n","date":"2018-12-12 07:23:04","modifiedFileCount":"10","status":"M","submitter":"Kuai Yu"},{"authorTime":"2018-10-24 07:04:44","codes":[{"authorDate":"2019-01-15 03:04:06","commitOrder":4,"curCode":"  public GobblinHelixPlanningJobLauncherMetrics(String metricsName,\n      final MetricContext metricContext,\n      int windowSizeInMin,\n      HelixJobsMapping jobsMapping) {\n\n    this.metricsName = metricsName;\n    this.jobsMapping = jobsMapping;\n    this.timeForCompletedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_COMPLETED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.timeForFailedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_FAILED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.numActivePlanningJobs =  metricContext.newContextAwareGauge(NUM_ACTIVE_PLANNING_JOBS, ()->getNumOfMappings());\n    this.contextAwareMetrics.add(timeForCompletedPlanningJobs);\n    this.contextAwareMetrics.add(timeForFailedPlanningJobs);\n    this.contextAwareMetrics.add(numActivePlanningJobs);\n  }\n","date":"2019-01-15 03:04:06","endLine":53,"groupId":"5162","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"GobblinHelixPlanningJobLauncherMetrics","params":"(StringmetricsName@finalMetricContextmetricContext@intwindowSizeInMin@HelixJobsMappingjobsMapping)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/87/58c9b0dd2d52555ec8226f9faf5261014fc458.src","preCode":"  public GobblinHelixPlanningJobLauncherMetrics(String metricsName,\n      final MetricContext metricContext,\n      int windowSizeInMin) {\n\n    this.metricsName = metricsName;\n\n    this.timeForCompletedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_COMPLETED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.timeForFailedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_FAILED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n    this.contextAwareMetrics.add(timeForCompletedPlanningJobs);\n    this.contextAwareMetrics.add(timeForFailedPlanningJobs);\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/GobblinHelixPlanningJobLauncherMetrics.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2018-10-24 07:04:44","commitOrder":4,"curCode":"    public GobblinHelixJobLauncherMetrics(String metricsName, final MetricContext metricContext, int windowSizeInMin) {\n      this.metricsName = metricsName;\n\n      \r\n      this.totalJobsLaunched = new AtomicLong(0);\n      this.totalJobsCompleted = new AtomicLong(0);\n      this.totalJobsCommitted = new AtomicLong(0);\n      this.totalJobsFailed = new AtomicLong(0);\n      this.totalJobsCancelled = new AtomicLong(0);\n\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_LAUNCHED, ()->this.totalJobsLaunched.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMPLETED, ()->this.totalJobsCompleted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMMITTED, ()->this.totalJobsCommitted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_FAILED, ()->this.totalJobsFailed.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_CANCELLED, ()->this.totalJobsCancelled.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_RUNNING,\n          ()->(int)(GobblinHelixJobLauncherMetrics.this.totalJobsLaunched.get() - GobblinHelixJobLauncherMetrics.this.totalJobsCompleted.get())));\n\n      this.timeForCompletedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMPLETED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForFailedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_FAILED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForCommittedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMMITTED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n      this.contextAwareMetrics.add(timeForCommittedJobs);\n      this.contextAwareMetrics.add(timeForCompletedJobs);\n      this.contextAwareMetrics.add(timeForFailedJobs);\n    }\n","date":"2018-10-24 07:04:44","endLine":68,"groupId":"6513","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"GobblinHelixJobLauncherMetrics","params":"(StringmetricsName@finalMetricContextmetricContext@intwindowSizeInMin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b3/3edae3bbe8598fb0dcc046fd65960cf12b5340.src","preCode":"    public GobblinHelixJobLauncherMetrics(String metricsName, final MetricContext metricContext, int windowSizeInMin) {\n      this.metricsName = metricsName;\n\n      \r\n      this.totalJobsLaunched = new AtomicLong(0);\n      this.totalJobsCompleted = new AtomicLong(0);\n      this.totalJobsCommitted = new AtomicLong(0);\n      this.totalJobsFailed = new AtomicLong(0);\n      this.totalJobsCancelled = new AtomicLong(0);\n\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_LAUNCHED, ()->this.totalJobsLaunched.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMPLETED, ()->this.totalJobsCompleted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMMITTED, ()->this.totalJobsCommitted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_FAILED, ()->this.totalJobsFailed.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_CANCELLED, ()->this.totalJobsCancelled.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_RUNNING,\n          ()->(int)(GobblinHelixJobLauncherMetrics.this.totalJobsLaunched.get() - GobblinHelixJobLauncherMetrics.this.totalJobsCompleted.get())));\n\n      this.timeForCompletedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMPLETED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForFailedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_FAILED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForCommittedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMMITTED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n      this.contextAwareMetrics.add(timeForCommittedJobs);\n      this.contextAwareMetrics.add(timeForCompletedJobs);\n      this.contextAwareMetrics.add(timeForFailedJobs);\n    }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/GobblinHelixJobLauncherMetrics.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"}],"commitId":"754b066960e9cb1b9fd4c93f2238d3efc056b550","commitMessage":"@@@[GOBBLIN-661] Prevent jobs resubmission after manager failure\n\nCloses #2532 from kyuamazon/catalog\n","date":"2019-01-15 03:04:06","modifiedFileCount":"11","status":"M","submitter":"Kuai Yu"},{"authorTime":"2018-10-24 07:04:44","codes":[{"authorDate":"2019-02-26 04:14:31","commitOrder":5,"curCode":"  public GobblinHelixPlanningJobLauncherMetrics(String metricsName,\n      final MetricContext metricContext,\n      int windowSizeInMin,\n      HelixJobsMapping jobsMapping) {\n\n    this.metricsName = metricsName;\n    this.timeForCompletedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_COMPLETED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.timeForFailedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_FAILED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.contextAwareMetrics.add(timeForCompletedPlanningJobs);\n    this.contextAwareMetrics.add(timeForFailedPlanningJobs);\n  }\n","date":"2019-02-26 04:14:31","endLine":45,"groupId":"5162","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"GobblinHelixPlanningJobLauncherMetrics","params":"(StringmetricsName@finalMetricContextmetricContext@intwindowSizeInMin@HelixJobsMappingjobsMapping)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/fe/9c906fc776ee1ece8cc47567d3dba46b46aeef.src","preCode":"  public GobblinHelixPlanningJobLauncherMetrics(String metricsName,\n      final MetricContext metricContext,\n      int windowSizeInMin,\n      HelixJobsMapping jobsMapping) {\n\n    this.metricsName = metricsName;\n    this.jobsMapping = jobsMapping;\n    this.timeForCompletedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_COMPLETED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.timeForFailedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_FAILED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.numActivePlanningJobs =  metricContext.newContextAwareGauge(NUM_ACTIVE_PLANNING_JOBS, ()->getNumOfMappings());\n    this.contextAwareMetrics.add(timeForCompletedPlanningJobs);\n    this.contextAwareMetrics.add(timeForFailedPlanningJobs);\n    this.contextAwareMetrics.add(numActivePlanningJobs);\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/GobblinHelixPlanningJobLauncherMetrics.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2018-10-24 07:04:44","commitOrder":5,"curCode":"    public GobblinHelixJobLauncherMetrics(String metricsName, final MetricContext metricContext, int windowSizeInMin) {\n      this.metricsName = metricsName;\n\n      \r\n      this.totalJobsLaunched = new AtomicLong(0);\n      this.totalJobsCompleted = new AtomicLong(0);\n      this.totalJobsCommitted = new AtomicLong(0);\n      this.totalJobsFailed = new AtomicLong(0);\n      this.totalJobsCancelled = new AtomicLong(0);\n\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_LAUNCHED, ()->this.totalJobsLaunched.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMPLETED, ()->this.totalJobsCompleted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMMITTED, ()->this.totalJobsCommitted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_FAILED, ()->this.totalJobsFailed.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_CANCELLED, ()->this.totalJobsCancelled.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_RUNNING,\n          ()->(int)(GobblinHelixJobLauncherMetrics.this.totalJobsLaunched.get() - GobblinHelixJobLauncherMetrics.this.totalJobsCompleted.get())));\n\n      this.timeForCompletedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMPLETED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForFailedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_FAILED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForCommittedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMMITTED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n      this.contextAwareMetrics.add(timeForCommittedJobs);\n      this.contextAwareMetrics.add(timeForCompletedJobs);\n      this.contextAwareMetrics.add(timeForFailedJobs);\n    }\n","date":"2018-10-24 07:04:44","endLine":68,"groupId":"6513","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"GobblinHelixJobLauncherMetrics","params":"(StringmetricsName@finalMetricContextmetricContext@intwindowSizeInMin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b3/3edae3bbe8598fb0dcc046fd65960cf12b5340.src","preCode":"    public GobblinHelixJobLauncherMetrics(String metricsName, final MetricContext metricContext, int windowSizeInMin) {\n      this.metricsName = metricsName;\n\n      \r\n      this.totalJobsLaunched = new AtomicLong(0);\n      this.totalJobsCompleted = new AtomicLong(0);\n      this.totalJobsCommitted = new AtomicLong(0);\n      this.totalJobsFailed = new AtomicLong(0);\n      this.totalJobsCancelled = new AtomicLong(0);\n\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_LAUNCHED, ()->this.totalJobsLaunched.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMPLETED, ()->this.totalJobsCompleted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMMITTED, ()->this.totalJobsCommitted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_FAILED, ()->this.totalJobsFailed.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_CANCELLED, ()->this.totalJobsCancelled.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_RUNNING,\n          ()->(int)(GobblinHelixJobLauncherMetrics.this.totalJobsLaunched.get() - GobblinHelixJobLauncherMetrics.this.totalJobsCompleted.get())));\n\n      this.timeForCompletedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMPLETED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForFailedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_FAILED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForCommittedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMMITTED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n      this.contextAwareMetrics.add(timeForCommittedJobs);\n      this.contextAwareMetrics.add(timeForCompletedJobs);\n      this.contextAwareMetrics.add(timeForFailedJobs);\n    }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/GobblinHelixJobLauncherMetrics.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"}],"commitId":"fdd39f90c0ae8af0fe368bf668c41c950920494b","commitMessage":"@@@[GOBBLIN-690] Fix the planning job relaunch name match.\n\nCloses #2562 from yukuai518/relaunch\n","date":"2019-02-26 04:14:31","modifiedFileCount":"2","status":"M","submitter":"Kuai Yu"},{"authorTime":"2021-08-10 10:18:11","codes":[{"authorDate":"2021-08-10 10:18:11","commitOrder":6,"curCode":"  public GobblinHelixPlanningJobLauncherMetrics(String metricsName,\n      final MetricContext metricContext,\n      int windowSizeInMin,\n      HelixJobsMapping jobsMapping) {\n\n    this.metricsName = metricsName;\n    this.timeForCompletedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_COMPLETED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.timeForFailedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_FAILED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.skippedPlanningJobs = metricContext.contextAwareMeter(METER_FOR_SKIPPED_PLANNING_JOBS);\n    this.contextAwareMetrics.add(timeForCompletedPlanningJobs);\n    this.contextAwareMetrics.add(timeForFailedPlanningJobs);\n  }\n","date":"2021-08-10 10:18:11","endLine":50,"groupId":"10103","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"GobblinHelixPlanningJobLauncherMetrics","params":"(StringmetricsName@finalMetricContextmetricContext@intwindowSizeInMin@HelixJobsMappingjobsMapping)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/69/dbd7b435f71225ebaf346227b279ee4624484d.src","preCode":"  public GobblinHelixPlanningJobLauncherMetrics(String metricsName,\n      final MetricContext metricContext,\n      int windowSizeInMin,\n      HelixJobsMapping jobsMapping) {\n\n    this.metricsName = metricsName;\n    this.timeForCompletedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_COMPLETED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.timeForFailedPlanningJobs = metricContext.contextAwareTimer(TIMER_FOR_FAILED_PLANNING_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n    this.contextAwareMetrics.add(timeForCompletedPlanningJobs);\n    this.contextAwareMetrics.add(timeForFailedPlanningJobs);\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/GobblinHelixPlanningJobLauncherMetrics.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2021-08-10 10:18:11","commitOrder":6,"curCode":"    public GobblinHelixJobLauncherMetrics(String metricsName, final MetricContext metricContext, int windowSizeInMin) {\n      this.metricsName = metricsName;\n\n      this.numJobsLaunched = metricContext.contextAwareMeter(JobExecutionLauncher.StandardMetrics.NUM_JOBS_LAUNCHED);\n      this.contextAwareMetrics.add(this.numJobsLaunched);\n      this.numJobsCompleted = metricContext.contextAwareMeter(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMPLETED);\n      this.contextAwareMetrics.add(this.numJobsCompleted);\n      this.numJobsCommitted = metricContext.contextAwareMeter(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMMITTED);\n      this.contextAwareMetrics.add(this.numJobsCommitted);\n      this.numJobsFailed = metricContext.contextAwareMeter(JobExecutionLauncher.StandardMetrics.NUM_JOBS_FAILED);\n      this.contextAwareMetrics.add(this.numJobsFailed);\n      this.numJobsCancelled = metricContext.contextAwareMeter(JobExecutionLauncher.StandardMetrics.NUM_JOBS_CANCELLED);\n      this.contextAwareMetrics.add(this.numJobsCancelled);\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_RUNNING,\n          () -> (int) (GobblinHelixJobLauncherMetrics.this.numJobsLaunched.getCount() - GobblinHelixJobLauncherMetrics.this.numJobsCompleted.getCount())));\n\n      this.timeForCompletedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMPLETED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForFailedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_FAILED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForCommittedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMMITTED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n      this.contextAwareMetrics.add(timeForCommittedJobs);\n      this.contextAwareMetrics.add(timeForCompletedJobs);\n      this.contextAwareMetrics.add(timeForFailedJobs);\n    }\n","date":"2021-08-10 10:18:11","endLine":66,"groupId":"10103","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"GobblinHelixJobLauncherMetrics","params":"(StringmetricsName@finalMetricContextmetricContext@intwindowSizeInMin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/89/b65a50c6bc9d6d0999c6b0f40cce1dbf758f83.src","preCode":"    public GobblinHelixJobLauncherMetrics(String metricsName, final MetricContext metricContext, int windowSizeInMin) {\n      this.metricsName = metricsName;\n\n      \r\n      this.totalJobsLaunched = new AtomicLong(0);\n      this.totalJobsCompleted = new AtomicLong(0);\n      this.totalJobsCommitted = new AtomicLong(0);\n      this.totalJobsFailed = new AtomicLong(0);\n      this.totalJobsCancelled = new AtomicLong(0);\n\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_LAUNCHED, ()->this.totalJobsLaunched.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMPLETED, ()->this.totalJobsCompleted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_COMMITTED, ()->this.totalJobsCommitted.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_FAILED, ()->this.totalJobsFailed.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_CANCELLED, ()->this.totalJobsCancelled.get()));\n      this.contextAwareMetrics.add(metricContext.newContextAwareGauge(JobExecutionLauncher.StandardMetrics.NUM_JOBS_RUNNING,\n          ()->(int)(GobblinHelixJobLauncherMetrics.this.totalJobsLaunched.get() - GobblinHelixJobLauncherMetrics.this.totalJobsCompleted.get())));\n\n      this.timeForCompletedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMPLETED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForFailedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_FAILED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n      this.timeForCommittedJobs = metricContext.contextAwareTimer(JobExecutionLauncher.StandardMetrics.TIMER_FOR_COMMITTED_JOBS, windowSizeInMin, TimeUnit.MINUTES);\n\n      this.contextAwareMetrics.add(timeForCommittedJobs);\n      this.contextAwareMetrics.add(timeForCompletedJobs);\n      this.contextAwareMetrics.add(timeForFailedJobs);\n    }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/GobblinHelixJobLauncherMetrics.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"557ea5445510902af9baf065ee20cbb7a16015f7","commitMessage":"@@@[GOBBLIN-1508] Update cluster side metrics from gauge to meter (#3354)\n\nAdd a few metrics in Gobblin cluster and update some from counter to meter.  because meter can give both count and rate of an entity","date":"2021-08-10 10:18:11","modifiedFileCount":"10","status":"M","submitter":"Arjun Singh Bora"}]
