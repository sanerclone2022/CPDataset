[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Update called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    if (!flowGroup.equals(flowConfig.getId().getFlowGroup()) || !flowName.equals(flowConfig.getId().getFlowName())) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST,\n          \"flowName and flowGroup cannot be changed in update\", null);\n    }\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n      FlowSpec oldFlowSpec = (FlowSpec) getFlowCatalog().getSpec(flowUri);\n      FlowSpec newFlowSpec = createFlowSpecForConfig(flowConfig);\n\n      getFlowCatalog().put(newFlowSpec);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    } catch (SpecNotFoundException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND, \"Flow does not exist: flowGroup \" + flowGroup +\n          \" flowName \" + flowName, null);\n    }\n\n    return null;\n  }\n","date":"2017-07-31 15:51:25","endLine":248,"groupId":"7547","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/31/59d4921feacdea3a2b949e000656f2224cd3ec.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Update called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    if (!flowGroup.equals(flowConfig.getId().getFlowGroup()) || !flowName.equals(flowConfig.getId().getFlowName())) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST,\n          \"flowName and flowGroup cannot be changed in update\", null);\n    }\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n      FlowSpec oldFlowSpec = (FlowSpec) getFlowCatalog().getSpec(flowUri);\n      FlowSpec newFlowSpec = createFlowSpecForConfig(flowConfig);\n\n      getFlowCatalog().put(newFlowSpec);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    } catch (SpecNotFoundException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND, \"Flow does not exist: flowGroup \" + flowGroup +\n          \" flowName \" + flowName, null);\n    }\n\n    return null;\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Delete called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n      FlowSpec flowSpec = (FlowSpec) getFlowCatalog().getSpec(flowUri);\n\n      getFlowCatalog().remove(flowUri);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    } catch (SpecNotFoundException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND, \"Flow does not exist: flowGroup \" + flowGroup +\n          \" flowName \" + flowName, null);\n    }\n\n    return null;\n  }\n","date":"2017-07-31 15:51:25","endLine":281,"groupId":"7548","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(ComplexResourceKey<FlowId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/31/59d4921feacdea3a2b949e000656f2224cd3ec.src","preCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Delete called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n      FlowSpec flowSpec = (FlowSpec) getFlowCatalog().getSpec(flowUri);\n\n      getFlowCatalog().remove(flowUri);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    } catch (SpecNotFoundException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND, \"Flow does not exist: flowGroup \" + flowGroup +\n          \" flowName \" + flowName, null);\n    }\n\n    return null;\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-10-26 00:29:11","codes":[{"authorDate":"2017-10-26 00:29:11","commitOrder":2,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Update called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    if (!flowGroup.equals(flowConfig.getId().getFlowGroup()) || !flowName.equals(flowConfig.getId().getFlowName())) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST,\n          \"flowName and flowGroup cannot be changed in update\", null);\n    }\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n      if (!getFlowCatalog().exists(flowUri)) {\n        logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND,\n            \"Flow does not exist: flowGroup \" + flowGroup + \" flowName \" + flowName, null);\n      }\n\n      FlowSpec newFlowSpec = createFlowSpecForConfig(flowConfig);\n\n      getFlowCatalog().put(newFlowSpec);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    }\n\n    return null;\n  }\n","date":"2017-10-26 00:29:11","endLine":247,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a9/9087c7e0a7953bafc9cd7006a8c9e4c4c68bbd.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Update called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    if (!flowGroup.equals(flowConfig.getId().getFlowGroup()) || !flowName.equals(flowConfig.getId().getFlowName())) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST,\n          \"flowName and flowGroup cannot be changed in update\", null);\n    }\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n      FlowSpec oldFlowSpec = (FlowSpec) getFlowCatalog().getSpec(flowUri);\n      FlowSpec newFlowSpec = createFlowSpecForConfig(flowConfig);\n\n      getFlowCatalog().put(newFlowSpec);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    } catch (SpecNotFoundException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND, \"Flow does not exist: flowGroup \" + flowGroup +\n          \" flowName \" + flowName, null);\n    }\n\n    return null;\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"M"},{"authorDate":"2017-10-26 00:29:11","commitOrder":2,"curCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Delete called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n\n      getFlowCatalog().remove(flowUri);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    } catch (SpecNotFoundException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND, \"Flow does not exist: flowGroup \" + flowGroup +\n          \" flowName \" + flowName, null);\n    }\n\n    return null;\n  }\n","date":"2017-10-26 00:29:11","endLine":279,"groupId":"3379","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(ComplexResourceKey<FlowId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a9/9087c7e0a7953bafc9cd7006a8c9e4c4c68bbd.src","preCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Delete called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n      FlowSpec flowSpec = (FlowSpec) getFlowCatalog().getSpec(flowUri);\n\n      getFlowCatalog().remove(flowUri);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    } catch (SpecNotFoundException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND, \"Flow does not exist: flowGroup \" + flowGroup +\n          \" flowName \" + flowName, null);\n    }\n\n    return null;\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"2d05b03d5e76f9e4056b2adc321ff4b3ef778dc5","commitMessage":"@@@[GOBBLIN-291] Remove unnecessary spec list and read\n\nresolve review comments\n\nCloses #2147 from arjun4084346/flowDelay\n","date":"2017-10-26 00:29:11","modifiedFileCount":"7","status":"M","submitter":"Arjun"},{"authorTime":"2017-11-08 06:04:53","codes":[{"authorDate":"2017-11-08 06:04:53","commitOrder":3,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n\n    LOG.info(\"Update called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    if (!flowGroup.equals(flowConfig.getId().getFlowGroup()) || !flowName.equals(flowConfig.getId().getFlowName())) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST,\n          \"flowName and flowGroup cannot be changed in update\", null);\n    }\n\n      getFlowCatalog().put(createFlowSpecForConfig(flowConfig));\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","date":"2017-11-08 06:04:53","endLine":216,"groupId":"1855","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f0/bce1761fc728060d8d236f884d1bc6d67cb81c.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Update called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    if (!flowGroup.equals(flowConfig.getId().getFlowGroup()) || !flowName.equals(flowConfig.getId().getFlowName())) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST,\n          \"flowName and flowGroup cannot be changed in update\", null);\n    }\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n      if (!getFlowCatalog().exists(flowUri)) {\n        logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND,\n            \"Flow does not exist: flowGroup \" + flowGroup + \" flowName \" + flowName, null);\n      }\n\n      FlowSpec newFlowSpec = createFlowSpecForConfig(flowConfig);\n\n      getFlowCatalog().put(newFlowSpec);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    }\n\n    return null;\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"},{"authorDate":"2017-11-08 06:04:53","commitOrder":3,"curCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Delete called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n\n      getFlowCatalog().remove(flowUri);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    }\n\n    return null;\n  }\n","date":"2017-11-08 06:04:53","endLine":245,"groupId":"3379","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(ComplexResourceKey<FlowId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f0/bce1761fc728060d8d236f884d1bc6d67cb81c.src","preCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Delete called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n\n      getFlowCatalog().remove(flowUri);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    } catch (SpecNotFoundException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND, \"Flow does not exist: flowGroup \" + flowGroup +\n          \" flowName \" + flowName, null);\n    }\n\n    return null;\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"M"}],"commitId":"c385f1dddb0124f0ff2545d9a591f3b055f76080","commitMessage":"@@@[GOBBLIN-304] Change default version of flow specs to null.\n\nCloses #2159 from arjun4084346/removeSpecVersion\n","date":"2017-11-08 06:04:53","modifiedFileCount":"14","status":"M","submitter":"Arjun"},{"authorTime":"2018-04-10 02:54:31","codes":[{"authorDate":"2017-11-08 06:04:53","commitOrder":4,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n\n    LOG.info(\"Update called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    if (!flowGroup.equals(flowConfig.getId().getFlowGroup()) || !flowName.equals(flowConfig.getId().getFlowName())) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST,\n          \"flowName and flowGroup cannot be changed in update\", null);\n    }\n\n      getFlowCatalog().put(createFlowSpecForConfig(flowConfig));\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","date":"2017-11-08 06:04:53","endLine":216,"groupId":"1855","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f0/bce1761fc728060d8d236f884d1bc6d67cb81c.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n\n    LOG.info(\"Update called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    if (!flowGroup.equals(flowConfig.getId().getFlowGroup()) || !flowName.equals(flowConfig.getId().getFlowName())) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST,\n          \"flowName and flowGroup cannot be changed in update\", null);\n    }\n\n      getFlowCatalog().put(createFlowSpecForConfig(flowConfig));\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"N"},{"authorDate":"2018-04-10 02:54:31","commitOrder":4,"curCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Delete called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n\n      getFlowCatalog().remove(flowUri, getHeaders());\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    }\n\n    return null;\n  }\n","date":"2018-04-10 02:54:58","endLine":252,"groupId":"3379","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(ComplexResourceKey<FlowId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/90/74a434e9a8a626d1a753e193437ddea4ae8279.src","preCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Delete called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n\n      getFlowCatalog().remove(flowUri);\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    }\n\n    return null;\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"}],"commitId":"ccd7ba769308e720db33ea800d964df43df4e878","commitMessage":"@@@[GOBBLIN-456] add option to delete state store\n\nadd option to delete state store\n\nCloses #2327 from\narjun4084346/addDeleteStateStoreOption\n","date":"2018-04-10 02:54:58","modifiedFileCount":"24","status":"M","submitter":"Arjun"},{"authorTime":"2020-02-29 03:22:08","codes":[{"authorDate":"2020-02-29 03:22:08","commitOrder":5,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","date":"2020-02-29 03:22:08","endLine":118,"groupId":"3556","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a8/9eb020d5000a40225d9a1642f93cf8bf969dd0.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n\n    LOG.info(\"Update called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    if (!flowGroup.equals(flowConfig.getId().getFlowGroup()) || !flowName.equals(flowConfig.getId().getFlowName())) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST,\n          \"flowName and flowGroup cannot be changed in update\", null);\n    }\n\n      getFlowCatalog().put(createFlowSpecForConfig(flowConfig));\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2020-02-29 03:22:08","commitOrder":5,"curCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    checkRequester(get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.deleteFlowConfig(flowId, getHeaders());\n  }\n","date":"2020-02-29 03:22:08","endLine":132,"groupId":"3556","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(ComplexResourceKey<FlowId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a8/9eb020d5000a40225d9a1642f93cf8bf969dd0.src","preCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    URI flowUri = null;\n\n    LOG.info(\"Delete called with flowGroup \" + flowGroup + \" flowName \" + flowName);\n\n    try {\n      URI flowCatalogURI = new URI(\"gobblin-flow\", null, \"/\", null, null);\n      flowUri = new URI(flowCatalogURI.getScheme(), flowCatalogURI.getAuthority(),\n          \"/\" + flowGroup + \"/\" + flowName, null, null);\n\n      getFlowCatalog().remove(flowUri, getHeaders());\n\n      return new UpdateResponse(HttpStatus.S_200_OK);\n    } catch (URISyntaxException e) {\n      logAndThrowRestLiServiceException(HttpStatus.S_400_BAD_REQUEST, \"bad URI \" + flowUri, e);\n    }\n\n    return null;\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"09f5043fbd3a90aa8f3b06a4b7d3bb2f94501db4","commitMessage":"@@@[GOBBLIN-1050] Verify requester when updating/deleting FlowConfig\n\nCloses #2890 from jack-moseley/check-requester\n","date":"2020-02-29 03:22:08","modifiedFileCount":"6","status":"M","submitter":"Jack Moseley"},{"authorTime":"2020-04-29 08:00:20","codes":[{"authorDate":"2020-04-29 08:00:20","commitOrder":6,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","date":"2020-04-29 08:00:20","endLine":117,"groupId":"3556","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6f/dd6086b713afa3018499b05d619524abce4ea8.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2020-04-29 08:00:20","commitOrder":6,"curCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.deleteFlowConfig(flowId, getHeaders());\n  }\n","date":"2020-04-29 08:00:20","endLine":131,"groupId":"3556","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(ComplexResourceKey<FlowId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6f/dd6086b713afa3018499b05d619524abce4ea8.src","preCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    checkRequester(get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.deleteFlowConfig(flowId, getHeaders());\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"7b8a046de84c8e91a2b97e2960574deb0d6ce23d","commitMessage":"@@@[GOBBLIN-1132] move the logic of requester list verification to RequesterService implementation\n\nCloses #2969 from arjun4084346/requesterListFix\n","date":"2020-04-29 08:00:20","modifiedFileCount":"5","status":"M","submitter":"Arjun"},{"authorTime":"2020-04-29 08:00:20","codes":[{"authorDate":"2021-03-09 02:42:57","commitOrder":7,"curCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    if (flowConfig.hasOwningGroup()) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"Owning group property may \"\n          + \"not be set through flowconfigs API, use flowconfigsV2\");\n    }\n    if (flowConfig.getProperties().containsKey(RequesterService.REQUESTER_LIST)) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, RequesterService.REQUESTER_LIST + \" property may \"\n          + \"not be set through flowconfigs API, use flowconfigsV2\");\n    }\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","date":"2021-03-09 02:42:57","endLine":130,"groupId":"101493","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"update","params":"(ComplexResourceKey<FlowId@EmptyRecord>key@FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9e/e00c0917c343b4a8617c2255fc08ad3431267d.src","preCode":"  public UpdateResponse update(ComplexResourceKey<FlowId, EmptyRecord> key, FlowConfig flowConfig) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.updateFlowConfig(flowId, flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2020-04-29 08:00:20","commitOrder":7,"curCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.deleteFlowConfig(flowId, getHeaders());\n  }\n","date":"2020-04-29 08:00:20","endLine":131,"groupId":"101493","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(ComplexResourceKey<FlowId@EmptyRecord>key)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6f/dd6086b713afa3018499b05d619524abce4ea8.src","preCode":"  public UpdateResponse delete(ComplexResourceKey<FlowId, EmptyRecord> key) {\n    checkRequester(this.requesterService, get(key), this.requesterService.findRequesters(this));\n    String flowGroup = key.getKey().getFlowGroup();\n    String flowName = key.getKey().getFlowName();\n    FlowId flowId = new FlowId().setFlowGroup(flowGroup).setFlowName(flowName);\n    return this.flowConfigsResourceHandler.deleteFlowConfig(flowId, getHeaders());\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"}],"commitId":"303ec0e99a6987db834638726d3e88daf22ef181","commitMessage":"@@@[GOBBLIN-1402] Allow flow's requester list/owner to be updated\n\nCloses #3238 from jack-moseley/requester-logic-\nupdate\n","date":"2021-03-09 02:42:57","modifiedFileCount":"5","status":"M","submitter":"Jack Moseley"}]
