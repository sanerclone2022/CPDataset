[{"authorTime":"2018-11-27 10:55:57","codes":[{"authorDate":"2019-03-18 10:52:52","commitOrder":5,"curCode":"  public CreateKVResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requestorList = this.requesterService.findRequesters(this);\n    try {\n      String serialized = this.requesterService.serialize(requestorList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED,\n          \"cannot get who is the requester\", e);\n    }\n    return (CreateKVResponse) this.getFlowConfigResourceHandler().createFlowConfig(flowConfig);\n  }\n","date":"2019-03-18 10:52:52","endLine":105,"groupId":"1701","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2a/df4a6ade73fad3cc85d65470cf849fd82f9020.src","preCode":"  public CreateKVResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requestorList = this.requesterService.findRequesters(this);\n    try {\n      String serialized = this.requesterService.serialize(requestorList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED,\n          \"cannot get who is the requester\", e);\n    }\n    return (CreateKVResponse) this.getFlowConfigResourceHandler().createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsV2Resource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"},{"authorDate":"2018-11-27 10:55:57","commitOrder":5,"curCode":"  public CreateResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requestorList = this.requesterService.findRequesters(this);\n\n    try {\n      String serialized = this.requesterService.serialize(requestorList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED,\n          \"cannot get who is the requester\", e);\n    }\n    return this.flowConfigsResourceHandler.createFlowConfig(flowConfig);\n  }\n","date":"2018-11-27 10:55:57","endLine":102,"groupId":"1701","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ab/29c955a2e7aa68d3b5b3b65d939c008bfdf088.src","preCode":"  public CreateResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requestorList = this.requesterService.findRequesters(this);\n\n    try {\n      String serialized = this.requesterService.serialize(requestorList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED,\n          \"cannot get who is the requester\", e);\n    }\n    return this.flowConfigsResourceHandler.createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"NB"}],"commitId":"aadf53dbb8acc5a3de0249d3695384fdefa4eb35","commitMessage":"@@@[GOBBLIN-696] Provide an \"explain\" option to return a compiled flow wh?\n\nCloses #2567 from sv2000/dagPlan1\n","date":"2019-03-18 10:52:52","modifiedFileCount":"19","status":"M","submitter":"suvasude"},{"authorTime":"2020-04-29 08:00:20","codes":[{"authorDate":"2020-04-29 08:00:20","commitOrder":6,"curCode":"  public CreateKVResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requestorList = this.requesterService.findRequesters(this);\n    try {\n      String serialized = RequesterService.serialize(requestorList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"cannot get who is the requester\", e);\n    }\n    return (CreateKVResponse) this.getFlowConfigResourceHandler().createFlowConfig(flowConfig);\n  }\n","date":"2020-04-29 08:00:20","endLine":106,"groupId":"1701","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/77/d64fc716925837788a8d1024a5e7c209d9cc99.src","preCode":"  public CreateKVResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requestorList = this.requesterService.findRequesters(this);\n    try {\n      String serialized = this.requesterService.serialize(requestorList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED,\n          \"cannot get who is the requester\", e);\n    }\n    return (CreateKVResponse) this.getFlowConfigResourceHandler().createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsV2Resource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2020-04-29 08:00:20","commitOrder":6,"curCode":"  public CreateResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requesterList = this.requesterService.findRequesters(this);\n\n    try {\n      String serialized = RequesterService.serialize(requesterList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"cannot get who is the requester\", e);\n    }\n    return this.flowConfigsResourceHandler.createFlowConfig(flowConfig);\n  }\n","date":"2020-04-29 08:00:20","endLine":101,"groupId":"1701","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6f/dd6086b713afa3018499b05d619524abce4ea8.src","preCode":"  public CreateResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requestorList = this.requesterService.findRequesters(this);\n\n    try {\n      String serialized = this.requesterService.serialize(requestorList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED,\n          \"cannot get who is the requester\", e);\n    }\n    return this.flowConfigsResourceHandler.createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"7b8a046de84c8e91a2b97e2960574deb0d6ce23d","commitMessage":"@@@[GOBBLIN-1132] move the logic of requester list verification to RequesterService implementation\n\nCloses #2969 from arjun4084346/requesterListFix\n","date":"2020-04-29 08:00:20","modifiedFileCount":"5","status":"M","submitter":"Arjun"},{"authorTime":"2020-04-29 08:00:20","codes":[{"authorDate":"2020-11-08 09:17:19","commitOrder":7,"curCode":"  public CreateKVResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requesterList = this.requesterService.findRequesters(this);\n    try {\n      String serialized = RequesterService.serialize(requesterList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n      if (flowConfig.hasOwningGroup() && !this.groupOwnershipService.isMemberOfGroup(requesterList, flowConfig.getOwningGroup())) {\n        throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"Requester not part of owning group specified\");\n      }\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"cannot get who is the requester\", e);\n    }\n    return (CreateKVResponse) this.getFlowConfigResourceHandler().createFlowConfig(flowConfig);\n  }\n","date":"2020-11-08 09:17:19","endLine":147,"groupId":"2499","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/49/f7faac0847d4022ec16130692a59c1e9cca5eb.src","preCode":"  public CreateKVResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requestorList = this.requesterService.findRequesters(this);\n    try {\n      String serialized = RequesterService.serialize(requestorList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"cannot get who is the requester\", e);\n    }\n    return (CreateKVResponse) this.getFlowConfigResourceHandler().createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsV2Resource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"},{"authorDate":"2020-04-29 08:00:20","commitOrder":7,"curCode":"  public CreateResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requesterList = this.requesterService.findRequesters(this);\n\n    try {\n      String serialized = RequesterService.serialize(requesterList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"cannot get who is the requester\", e);\n    }\n    return this.flowConfigsResourceHandler.createFlowConfig(flowConfig);\n  }\n","date":"2020-04-29 08:00:20","endLine":101,"groupId":"1701","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6f/dd6086b713afa3018499b05d619524abce4ea8.src","preCode":"  public CreateResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requesterList = this.requesterService.findRequesters(this);\n\n    try {\n      String serialized = RequesterService.serialize(requesterList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"cannot get who is the requester\", e);\n    }\n    return this.flowConfigsResourceHandler.createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"N"}],"commitId":"7352cad8ae3a1d9be10d3b6fb78383ccbada9b19","commitMessage":"@@@[GOBBLIN-1304] Adds group ownership service\n\nCloses #3142 from Will-Lo/add-group-ownership-\nflows\n","date":"2020-11-08 09:17:19","modifiedFileCount":"10","status":"M","submitter":"William Lo"},{"authorTime":"2021-03-09 02:42:57","codes":[{"authorDate":"2020-11-08 09:17:19","commitOrder":8,"curCode":"  public CreateKVResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requesterList = this.requesterService.findRequesters(this);\n    try {\n      String serialized = RequesterService.serialize(requesterList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n      if (flowConfig.hasOwningGroup() && !this.groupOwnershipService.isMemberOfGroup(requesterList, flowConfig.getOwningGroup())) {\n        throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"Requester not part of owning group specified\");\n      }\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"cannot get who is the requester\", e);\n    }\n    return (CreateKVResponse) this.getFlowConfigResourceHandler().createFlowConfig(flowConfig);\n  }\n","date":"2020-11-08 09:17:19","endLine":147,"groupId":"101483","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/49/f7faac0847d4022ec16130692a59c1e9cca5eb.src","preCode":"  public CreateKVResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requesterList = this.requesterService.findRequesters(this);\n    try {\n      String serialized = RequesterService.serialize(requesterList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n      if (flowConfig.hasOwningGroup() && !this.groupOwnershipService.isMemberOfGroup(requesterList, flowConfig.getOwningGroup())) {\n        throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"Requester not part of owning group specified\");\n      }\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"cannot get who is the requester\", e);\n    }\n    return (CreateKVResponse) this.getFlowConfigResourceHandler().createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsV2Resource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"N"},{"authorDate":"2021-03-09 02:42:57","commitOrder":8,"curCode":"  public CreateResponse create(FlowConfig flowConfig) {\n    if (flowConfig.hasOwningGroup()) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"Owning group property may \"\n          + \"not be set through flowconfigs API, use flowconfigsV2\");\n    }\n\n    List<ServiceRequester> requesterList = this.requesterService.findRequesters(this);\n\n    try {\n      String serialized = RequesterService.serialize(requesterList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"cannot get who is the requester\", e);\n    }\n    return this.flowConfigsResourceHandler.createFlowConfig(flowConfig);\n  }\n","date":"2021-03-09 02:42:57","endLine":106,"groupId":"101483","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9e/e00c0917c343b4a8617c2255fc08ad3431267d.src","preCode":"  public CreateResponse create(FlowConfig flowConfig) {\n    List<ServiceRequester> requesterList = this.requesterService.findRequesters(this);\n\n    try {\n      String serialized = RequesterService.serialize(requesterList);\n      flowConfig.getProperties().put(RequesterService.REQUESTER_LIST, serialized);\n      LOG.info(\"Rest requester list is \" + serialized);\n    } catch (IOException e) {\n      throw new FlowConfigLoggedException(HttpStatus.S_401_UNAUTHORIZED, \"cannot get who is the requester\", e);\n    }\n    return this.flowConfigsResourceHandler.createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/main/java/org/apache/gobblin/service/FlowConfigsResource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"303ec0e99a6987db834638726d3e88daf22ef181","commitMessage":"@@@[GOBBLIN-1402] Allow flow's requester list/owner to be updated\n\nCloses #3238 from jack-moseley/requester-logic-\nupdate\n","date":"2021-03-09 02:42:57","modifiedFileCount":"5","status":"M","submitter":"Jack Moseley"}]
