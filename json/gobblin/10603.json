[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates = getAll(jobName, new Predicate<String>() {\n      @Override\n      public boolean apply(String input) {\n        return input.endsWith(CURRENT_SUFFIX);\n      }});\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n    if (!previousDatasetStates.isEmpty()) {\n      JobState.DatasetState previousDatasetState = previousDatasetStates.get(0);\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","date":"2017-07-31 15:51:25","endLine":80,"groupId":"3147","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getLatestDatasetStatesByUrns","params":"(StringjobName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/db/de3fc77c28be4e238c82485c4f1d253fe13b99.src","preCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates = getAll(jobName, new Predicate<String>() {\n      @Override\n      public boolean apply(String input) {\n        return input.endsWith(CURRENT_SUFFIX);\n      }});\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n    if (!previousDatasetStates.isEmpty()) {\n      JobState.DatasetState previousDatasetState = previousDatasetStates.get(0);\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/main/java/org/apache/gobblin/runtime/ZkDatasetStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates =\n        getAll(jobName, \"%\" + CURRENT_DATASET_STATE_FILE_SUFFIX + DATASET_STATE_STORE_TABLE_SUFFIX, true);\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n    if (!previousDatasetStates.isEmpty()) {\n      JobState.DatasetState previousDatasetState = previousDatasetStates.get(0);\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","date":"2017-07-31 15:51:25","endLine":84,"groupId":"3147","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getLatestDatasetStatesByUrns","params":"(StringjobName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/40/0e52c53c8991306f81a2839e96e409eba0a734.src","preCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates =\n        getAll(jobName, \"%\" + CURRENT_DATASET_STATE_FILE_SUFFIX + DATASET_STATE_STORE_TABLE_SUFFIX, true);\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n    if (!previousDatasetStates.isEmpty()) {\n      JobState.DatasetState previousDatasetState = previousDatasetStates.get(0);\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/MysqlDatasetStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2018-01-30 09:08:46","codes":[{"authorDate":"2018-01-30 09:08:46","commitOrder":2,"curCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates = getAll(jobName, new Predicate<String>() {\n      @Override\n      public boolean apply(String input) {\n        return input.endsWith(CURRENT_SUFFIX);\n      }});\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n\n    for (JobState.DatasetState previousDatasetState : previousDatasetStates) {\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","date":"2018-01-30 09:08:46","endLine":80,"groupId":"5319","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getLatestDatasetStatesByUrns","params":"(StringjobName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e9/ecf357473d7d188d88916f7f3674764938317a.src","preCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates = getAll(jobName, new Predicate<String>() {\n      @Override\n      public boolean apply(String input) {\n        return input.endsWith(CURRENT_SUFFIX);\n      }});\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n    if (!previousDatasetStates.isEmpty()) {\n      JobState.DatasetState previousDatasetState = previousDatasetStates.get(0);\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/main/java/org/apache/gobblin/runtime/ZkDatasetStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2018-01-30 09:08:46","commitOrder":2,"curCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates =\n        getAll(jobName, \"%\" + CURRENT_DATASET_STATE_FILE_SUFFIX + DATASET_STATE_STORE_TABLE_SUFFIX, true);\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n\n    for (JobState.DatasetState previousDatasetState : previousDatasetStates) {\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","date":"2018-01-30 09:08:46","endLine":84,"groupId":"5319","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getLatestDatasetStatesByUrns","params":"(StringjobName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/74/1ac07ba23a2bfdf59fff655d443ff91e2d952d.src","preCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates =\n        getAll(jobName, \"%\" + CURRENT_DATASET_STATE_FILE_SUFFIX + DATASET_STATE_STORE_TABLE_SUFFIX, true);\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n    if (!previousDatasetStates.isEmpty()) {\n      JobState.DatasetState previousDatasetState = previousDatasetStates.get(0);\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/MysqlDatasetStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"c35f76e4e2a0f9f25580924d46cef1b732af7d63","commitMessage":"@@@[GOBBLIN-392] Load all dataset states when getLatestDatasetStatesByUrns() is called\n\nCloses #2268 from htran1/fix_dataset_state_fetch\n","date":"2018-01-30 09:08:46","modifiedFileCount":"4","status":"M","submitter":"Hung Tran"},{"authorTime":"2021-09-10 04:45:07","codes":[{"authorDate":"2018-01-30 09:08:46","commitOrder":3,"curCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates = getAll(jobName, new Predicate<String>() {\n      @Override\n      public boolean apply(String input) {\n        return input.endsWith(CURRENT_SUFFIX);\n      }});\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n\n    for (JobState.DatasetState previousDatasetState : previousDatasetStates) {\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","date":"2018-01-30 09:08:46","endLine":80,"groupId":"10603","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getLatestDatasetStatesByUrns","params":"(StringjobName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e9/ecf357473d7d188d88916f7f3674764938317a.src","preCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates = getAll(jobName, new Predicate<String>() {\n      @Override\n      public boolean apply(String input) {\n        return input.endsWith(CURRENT_SUFFIX);\n      }});\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n\n    for (JobState.DatasetState previousDatasetState : previousDatasetStates) {\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/main/java/org/apache/gobblin/runtime/ZkDatasetStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2021-09-10 04:45:07","commitOrder":3,"curCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates =\n        getAll(jobName, \"%\" + CURRENT_DATASET_STATE_FILE_SUFFIX + DATASET_STATE_STORE_TABLE_SUFFIX, JobStateSearchColumns.TABLE_NAME_ONLY);\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n\n    for (JobState.DatasetState previousDatasetState : previousDatasetStates) {\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","date":"2021-09-10 04:45:07","endLine":92,"groupId":"10603","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"getLatestDatasetStatesByUrns","params":"(StringjobName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/c8/51ad463d8dd755a780e7f7d54bce3ae99ab173.src","preCode":"  public Map<String, JobState.DatasetState> getLatestDatasetStatesByUrns(String jobName) throws IOException {\n    List<JobState.DatasetState> previousDatasetStates =\n        getAll(jobName, \"%\" + CURRENT_DATASET_STATE_FILE_SUFFIX + DATASET_STATE_STORE_TABLE_SUFFIX, true);\n\n    Map<String, JobState.DatasetState> datasetStatesByUrns = Maps.newHashMap();\n\n    for (JobState.DatasetState previousDatasetState : previousDatasetStates) {\n      datasetStatesByUrns.put(previousDatasetState.getDatasetUrn(), previousDatasetState);\n    }\n\n    \r\n    \r\n    if (datasetStatesByUrns.size() > 1) {\n      datasetStatesByUrns.remove(ConfigurationKeys.DEFAULT_DATASET_URN);\n    }\n\n    return datasetStatesByUrns;\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/MysqlDatasetStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"316f8bf46fad9a34b448496c09f2bedf841e7b9a","commitMessage":"@@@[GOBBLIN-1527] Add finder `latestFlowGroupExecutions` to `FlowExecutions` endpoint. (#3382)\n\nThis adds the new endpoint while augmenting both (primary) forms of JobStatusRetriever (Mysql and FS) to support querying flow executions across a flow group.","date":"2021-09-10 04:45:07","modifiedFileCount":"17","status":"M","submitter":"Kip Kohn"}]
