[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private Map<String, LocalResource> addAppMasterLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPath(this.fs, this.applicationName, applicationId.toString());\n    Path appMasterWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.APP_MASTER_WORK_DIR_NAME);\n\n    Map<String, LocalResource> appMasterResources = Maps.newHashMap();\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)) {\n      Path libJarsDestDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.LIB_JARS_DIR_NAME);\n      addLibJars(new Path(this.config.getString(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)),\n          Optional.of(appMasterResources), libJarsDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY),\n          Optional.of(appMasterResources), appJarsDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY),\n          Optional.of(appMasterResources), appFilesDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY)) {\n      addAppRemoteFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY),\n          appMasterResources);\n    }\n    if (this.config.hasPath(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addJobConfPackage(this.config.getString(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY), appFilesDestDir,\n          appMasterResources);\n    }\n\n    return appMasterResources;\n  }\n","date":"2017-07-31 15:51:25","endLine":562,"groupId":"3172","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addAppMasterLocalResources","params":"(ApplicationIdapplicationId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/51/4386c262296489137875d96278142acb58e013.src","preCode":"  private Map<String, LocalResource> addAppMasterLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPath(this.fs, this.applicationName, applicationId.toString());\n    Path appMasterWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.APP_MASTER_WORK_DIR_NAME);\n\n    Map<String, LocalResource> appMasterResources = Maps.newHashMap();\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)) {\n      Path libJarsDestDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.LIB_JARS_DIR_NAME);\n      addLibJars(new Path(this.config.getString(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)),\n          Optional.of(appMasterResources), libJarsDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY),\n          Optional.of(appMasterResources), appJarsDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY),\n          Optional.of(appMasterResources), appFilesDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY)) {\n      addAppRemoteFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY),\n          appMasterResources);\n    }\n    if (this.config.hasPath(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addJobConfPackage(this.config.getString(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY), appFilesDestDir,\n          appMasterResources);\n    }\n\n    return appMasterResources;\n  }\n","realPath":"gobblin-yarn/src/main/java/org/apache/gobblin/yarn/GobblinYarnAppLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":530,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private void addContainerLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPath(this.fs, this.applicationName, applicationId.toString());\n    Path containerWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.CONTAINER_WORK_DIR_NAME);\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appJarsDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appFilesDestDir);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":578,"groupId":"4383","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addContainerLocalResources","params":"(ApplicationIdapplicationId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/51/4386c262296489137875d96278142acb58e013.src","preCode":"  private void addContainerLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPath(this.fs, this.applicationName, applicationId.toString());\n    Path containerWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.CONTAINER_WORK_DIR_NAME);\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appJarsDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appFilesDestDir);\n    }\n  }\n","realPath":"gobblin-yarn/src/main/java/org/apache/gobblin/yarn/GobblinYarnAppLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":564,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2020-02-27 01:53:34","codes":[{"authorDate":"2020-02-27 01:53:34","commitOrder":2,"curCode":"  private Map<String, LocalResource> addAppMasterLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPath(this.fs, this.applicationName, applicationId.toString());\n    Path appMasterWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.APP_MASTER_WORK_DIR_NAME);\n\n    Map<String, LocalResource> appMasterResources = Maps.newHashMap();\n    FileSystem localFs = FileSystem.getLocal(new Configuration());\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)) {\n      Path libJarsDestDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.LIB_JARS_DIR_NAME);\n      addLibJars(new Path(this.config.getString(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)),\n          Optional.of(appMasterResources), libJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY),\n          Optional.of(appMasterResources), appJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY),\n          Optional.of(appMasterResources), appFilesDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY)) {\n      addAppRemoteFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY),\n          appMasterResources);\n    }\n    if (this.config.hasPath(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addJobConfPackage(this.config.getString(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY), appFilesDestDir,\n          appMasterResources);\n    }\n\n    return appMasterResources;\n  }\n","date":"2020-02-27 01:53:34","endLine":639,"groupId":"4383","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addAppMasterLocalResources","params":"(ApplicationIdapplicationId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/54/3381a8c1cd6b16520daf4d0e1506d06024bcc6.src","preCode":"  private Map<String, LocalResource> addAppMasterLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPath(this.fs, this.applicationName, applicationId.toString());\n    Path appMasterWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.APP_MASTER_WORK_DIR_NAME);\n\n    Map<String, LocalResource> appMasterResources = Maps.newHashMap();\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)) {\n      Path libJarsDestDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.LIB_JARS_DIR_NAME);\n      addLibJars(new Path(this.config.getString(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)),\n          Optional.of(appMasterResources), libJarsDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY),\n          Optional.of(appMasterResources), appJarsDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY),\n          Optional.of(appMasterResources), appFilesDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY)) {\n      addAppRemoteFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY),\n          appMasterResources);\n    }\n    if (this.config.hasPath(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addJobConfPackage(this.config.getString(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY), appFilesDestDir,\n          appMasterResources);\n    }\n\n    return appMasterResources;\n  }\n","realPath":"gobblin-yarn/src/main/java/org/apache/gobblin/yarn/GobblinYarnAppLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":606,"status":"M"},{"authorDate":"2020-02-27 01:53:34","commitOrder":2,"curCode":"  private void addContainerLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPath(this.fs, this.applicationName, applicationId.toString());\n    Path containerWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.CONTAINER_WORK_DIR_NAME);\n    FileSystem localFs = FileSystem.getLocal(new Configuration());\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appFilesDestDir, localFs);\n    }\n  }\n","date":"2020-02-27 01:53:34","endLine":656,"groupId":"4383","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addContainerLocalResources","params":"(ApplicationIdapplicationId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/54/3381a8c1cd6b16520daf4d0e1506d06024bcc6.src","preCode":"  private void addContainerLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPath(this.fs, this.applicationName, applicationId.toString());\n    Path containerWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.CONTAINER_WORK_DIR_NAME);\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appJarsDestDir);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appFilesDestDir);\n    }\n  }\n","realPath":"gobblin-yarn/src/main/java/org/apache/gobblin/yarn/GobblinYarnAppLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":641,"status":"M"}],"commitId":"6835c6660565571e01dfbb3a78658e7c5e725263","commitMessage":"@@@[GOBBLIN-1060] Fix wrong fileSystem object in YarnApplauncher\n\nCloses #2899 from autumnust/fixAppLauncher\n","date":"2020-02-27 01:53:34","modifiedFileCount":"1","status":"M","submitter":"autumnust"},{"authorTime":"2020-03-11 08:23:14","codes":[{"authorDate":"2020-03-11 08:23:14","commitOrder":3,"curCode":"  private Map<String, LocalResource> addAppMasterLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPathFromConfig(this.config, this.fs, this.applicationName, applicationId.toString());\n\n    Path appMasterWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.APP_MASTER_WORK_DIR_NAME);\n    LOGGER.info(\"Configured GobblinApplicationMaster work directory to: {}\", appMasterWorkDir.toString());\n\n    Map<String, LocalResource> appMasterResources = Maps.newHashMap();\n    FileSystem localFs = FileSystem.getLocal(new Configuration());\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)) {\n      Path libJarsDestDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.LIB_JARS_DIR_NAME);\n      addLibJars(new Path(this.config.getString(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)),\n          Optional.of(appMasterResources), libJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY),\n          Optional.of(appMasterResources), appJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY),\n          Optional.of(appMasterResources), appFilesDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY)) {\n      addAppRemoteFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY),\n          appMasterResources);\n    }\n    if (this.config.hasPath(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addJobConfPackage(this.config.getString(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY), appFilesDestDir,\n          appMasterResources);\n    }\n\n    return appMasterResources;\n  }\n","date":"2020-03-11 08:23:14","endLine":639,"groupId":"4383","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addAppMasterLocalResources","params":"(ApplicationIdapplicationId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/33/67842ff7add09e474d9029bf4925e4f1dd8977.src","preCode":"  private Map<String, LocalResource> addAppMasterLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPath(this.fs, this.applicationName, applicationId.toString());\n    Path appMasterWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.APP_MASTER_WORK_DIR_NAME);\n\n    Map<String, LocalResource> appMasterResources = Maps.newHashMap();\n    FileSystem localFs = FileSystem.getLocal(new Configuration());\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)) {\n      Path libJarsDestDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.LIB_JARS_DIR_NAME);\n      addLibJars(new Path(this.config.getString(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)),\n          Optional.of(appMasterResources), libJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY),\n          Optional.of(appMasterResources), appJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY),\n          Optional.of(appMasterResources), appFilesDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY)) {\n      addAppRemoteFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY),\n          appMasterResources);\n    }\n    if (this.config.hasPath(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addJobConfPackage(this.config.getString(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY), appFilesDestDir,\n          appMasterResources);\n    }\n\n    return appMasterResources;\n  }\n","realPath":"gobblin-yarn/src/main/java/org/apache/gobblin/yarn/GobblinYarnAppLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":604,"status":"M"},{"authorDate":"2020-03-11 08:23:14","commitOrder":3,"curCode":"  private void addContainerLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPathFromConfig(this.config, this.fs, this.applicationName, applicationId.toString());\n\n    Path containerWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.CONTAINER_WORK_DIR_NAME);\n    LOGGER.info(\"Configured Container work directory to: {}\", containerWorkDir.toString());\n\n    FileSystem localFs = FileSystem.getLocal(new Configuration());\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appFilesDestDir, localFs);\n    }\n  }\n","date":"2020-03-11 08:23:14","endLine":659,"groupId":"4383","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addContainerLocalResources","params":"(ApplicationIdapplicationId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/33/67842ff7add09e474d9029bf4925e4f1dd8977.src","preCode":"  private void addContainerLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPath(this.fs, this.applicationName, applicationId.toString());\n    Path containerWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.CONTAINER_WORK_DIR_NAME);\n    FileSystem localFs = FileSystem.getLocal(new Configuration());\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appFilesDestDir, localFs);\n    }\n  }\n","realPath":"gobblin-yarn/src/main/java/org/apache/gobblin/yarn/GobblinYarnAppLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":641,"status":"M"}],"commitId":"c574dff7d4e66b126986510c08c55aab74b03964","commitMessage":"@@@[GOBBLIN-1076] Make Gobblin cluster working directories configurable\n\nCloses #2916 from sv2000/clusterWorkDir\n","date":"2020-03-11 08:23:14","modifiedFileCount":"11","status":"M","submitter":"sv2000"},{"authorTime":"2020-03-11 08:23:14","codes":[{"authorDate":"2021-01-29 03:57:35","commitOrder":4,"curCode":"  private Map<String, LocalResource> addAppMasterLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPathFromConfig(this.config, this.fs, this.applicationName, applicationId.toString());\n\n    Path appMasterWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.APP_MASTER_WORK_DIR_NAME);\n    LOGGER.info(\"Configured GobblinApplicationMaster work directory to: {}\", appMasterWorkDir.toString());\n\n    Map<String, LocalResource> appMasterResources = Maps.newHashMap();\n    FileSystem localFs = FileSystem.getLocal(new Configuration());\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)) {\n      Path libJarsDestDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.LIB_JARS_DIR_NAME);\n      addLibJars(new Path(this.config.getString(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)),\n          Optional.of(appMasterResources), libJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY),\n          Optional.of(appMasterResources), appJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY),\n          Optional.of(appMasterResources), appFilesDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY)) {\n      YarnHelixUtils.addRemoteFilesToLocalResources(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY),\n          appMasterResources, yarnConfiguration);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_ZIPS_REMOTE_KEY)) {\n      YarnHelixUtils.addRemoteZipsToLocalResources(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_ZIPS_REMOTE_KEY),\n          appMasterResources, yarnConfiguration);\n    }\n    if (this.config.hasPath(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addJobConfPackage(this.config.getString(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY), appFilesDestDir,\n          appMasterResources);\n    }\n\n    return appMasterResources;\n  }\n","date":"2021-01-29 03:57:35","endLine":714,"groupId":"10156","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"addAppMasterLocalResources","params":"(ApplicationIdapplicationId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/01/cb964961580da731fc2ae51382e7ce2e20ae85.src","preCode":"  private Map<String, LocalResource> addAppMasterLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPathFromConfig(this.config, this.fs, this.applicationName, applicationId.toString());\n\n    Path appMasterWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.APP_MASTER_WORK_DIR_NAME);\n    LOGGER.info(\"Configured GobblinApplicationMaster work directory to: {}\", appMasterWorkDir.toString());\n\n    Map<String, LocalResource> appMasterResources = Maps.newHashMap();\n    FileSystem localFs = FileSystem.getLocal(new Configuration());\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)) {\n      Path libJarsDestDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.LIB_JARS_DIR_NAME);\n      addLibJars(new Path(this.config.getString(GobblinYarnConfigurationKeys.LIB_JARS_DIR_KEY)),\n          Optional.of(appMasterResources), libJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_JARS_KEY),\n          Optional.of(appMasterResources), appJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_LOCAL_KEY),\n          Optional.of(appMasterResources), appFilesDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY)) {\n      addAppRemoteFiles(this.config.getString(GobblinYarnConfigurationKeys.APP_MASTER_FILES_REMOTE_KEY),\n          appMasterResources);\n    }\n    if (this.config.hasPath(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY)) {\n      Path appFilesDestDir = new Path(appMasterWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addJobConfPackage(this.config.getString(GobblinClusterConfigurationKeys.JOB_CONF_PATH_KEY), appFilesDestDir,\n          appMasterResources);\n    }\n\n    return appMasterResources;\n  }\n","realPath":"gobblin-yarn/src/main/java/org/apache/gobblin/yarn/GobblinYarnAppLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":675,"status":"M"},{"authorDate":"2020-03-11 08:23:14","commitOrder":4,"curCode":"  private void addContainerLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPathFromConfig(this.config, this.fs, this.applicationName, applicationId.toString());\n\n    Path containerWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.CONTAINER_WORK_DIR_NAME);\n    LOGGER.info(\"Configured Container work directory to: {}\", containerWorkDir.toString());\n\n    FileSystem localFs = FileSystem.getLocal(new Configuration());\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appFilesDestDir, localFs);\n    }\n  }\n","date":"2020-03-11 08:23:14","endLine":659,"groupId":"10156","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"addContainerLocalResources","params":"(ApplicationIdapplicationId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/33/67842ff7add09e474d9029bf4925e4f1dd8977.src","preCode":"  private void addContainerLocalResources(ApplicationId applicationId) throws IOException {\n    Path appWorkDir = GobblinClusterUtils.getAppWorkDirPathFromConfig(this.config, this.fs, this.applicationName, applicationId.toString());\n\n    Path containerWorkDir = new Path(appWorkDir, GobblinYarnConfigurationKeys.CONTAINER_WORK_DIR_NAME);\n    LOGGER.info(\"Configured Container work directory to: {}\", containerWorkDir.toString());\n\n    FileSystem localFs = FileSystem.getLocal(new Configuration());\n\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY)) {\n      Path appJarsDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_JARS_DIR_NAME);\n      addAppJars(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_JARS_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appJarsDestDir, localFs);\n    }\n    if (this.config.hasPath(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY)) {\n      Path appFilesDestDir = new Path(containerWorkDir, GobblinYarnConfigurationKeys.APP_FILES_DIR_NAME);\n      addAppLocalFiles(this.config.getString(GobblinYarnConfigurationKeys.CONTAINER_FILES_LOCAL_KEY),\n          Optional.<Map<String, LocalResource>>absent(), appFilesDestDir, localFs);\n    }\n  }\n","realPath":"gobblin-yarn/src/main/java/org/apache/gobblin/yarn/GobblinYarnAppLauncher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":641,"status":"N"}],"commitId":"2563b8ed21b99468efe0013bca7726597538c0fe","commitMessage":"@@@[GOBBLIN-1386] Make gobblin yarn application be able to add zip fils as local resources.  and make yarn class path to be configurable\n\nremove assumption that we only support 2 types in\nunion\n\naddress typos\n\nMake gobblin yarn application be able to add zip\nfils as local resources.  and make yarn class path\nto be configurable\n\naddress comments\n\nremove unused import\n\nCloses #3207 from ZihanLi58/GOBBLIN-1368\n","date":"2021-01-29 03:57:35","modifiedFileCount":"5","status":"M","submitter":"Zihan Li"}]
