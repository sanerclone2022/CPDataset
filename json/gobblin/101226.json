[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private static State getTableProps(Table table) {\n    State tableProps = new State();\n    for (Map.Entry<String, String> entry : table.getParameters().entrySet()) {\n      tableProps.setProp(entry.getKey(), entry.getValue());\n    }\n    if (table.isSetCreateTime()) {\n      tableProps.setProp(HiveConstants.CREATE_TIME, table.getCreateTime());\n    }\n    if (table.isSetLastAccessTime()) {\n      tableProps.setProp(HiveConstants.LAST_ACCESS_TIME, table.getCreateTime());\n    }\n    if (table.isSetOwner()) {\n      tableProps.setProp(HiveConstants.OWNER, table.getOwner());\n    }\n    if (table.isSetTableType()) {\n      tableProps.setProp(HiveConstants.TABLE_TYPE, table.getTableType());\n    }\n    if (table.isSetRetention()) {\n      tableProps.setProp(HiveConstants.RETENTION, table.getRetention());\n    }\n    return tableProps;\n  }\n","date":"2017-07-31 15:51:25","endLine":267,"groupId":"3200","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getTableProps","params":"(Tabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/61/d3f5f80a03fc7cc1dbbcbd54af0ac6584ef6c6.src","preCode":"  private static State getTableProps(Table table) {\n    State tableProps = new State();\n    for (Map.Entry<String, String> entry : table.getParameters().entrySet()) {\n      tableProps.setProp(entry.getKey(), entry.getValue());\n    }\n    if (table.isSetCreateTime()) {\n      tableProps.setProp(HiveConstants.CREATE_TIME, table.getCreateTime());\n    }\n    if (table.isSetLastAccessTime()) {\n      tableProps.setProp(HiveConstants.LAST_ACCESS_TIME, table.getCreateTime());\n    }\n    if (table.isSetOwner()) {\n      tableProps.setProp(HiveConstants.OWNER, table.getOwner());\n    }\n    if (table.isSetTableType()) {\n      tableProps.setProp(HiveConstants.TABLE_TYPE, table.getTableType());\n    }\n    if (table.isSetRetention()) {\n      tableProps.setProp(HiveConstants.RETENTION, table.getRetention());\n    }\n    return tableProps;\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/metastore/HiveMetaStoreUtils.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private static State getSerDeProps(SerDeInfo si) {\n    State serDeProps = new State();\n    for (Map.Entry<String, String> entry : si.getParameters().entrySet()) {\n      serDeProps.setProp(entry.getKey(), entry.getValue());\n    }\n    if (si.isSetSerializationLib()) {\n      serDeProps.setProp(HiveConstants.SERDE_TYPE, si.getSerializationLib());\n    }\n    return serDeProps;\n  }\n","date":"2017-07-31 15:51:25","endLine":323,"groupId":"3200","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getSerDeProps","params":"(SerDeInfosi)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/61/d3f5f80a03fc7cc1dbbcbd54af0ac6584ef6c6.src","preCode":"  private static State getSerDeProps(SerDeInfo si) {\n    State serDeProps = new State();\n    for (Map.Entry<String, String> entry : si.getParameters().entrySet()) {\n      serDeProps.setProp(entry.getKey(), entry.getValue());\n    }\n    if (si.isSetSerializationLib()) {\n      serDeProps.setProp(HiveConstants.SERDE_TYPE, si.getSerializationLib());\n    }\n    return serDeProps;\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/metastore/HiveMetaStoreUtils.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2019-12-03 05:55:58","commitOrder":2,"curCode":"  public static State getTableProps(Table table) {\n    State tableProps = new State();\n    for (Map.Entry<String, String> entry : table.getParameters().entrySet()) {\n      tableProps.setProp(entry.getKey(), entry.getValue());\n    }\n    if (table.isSetCreateTime()) {\n      tableProps.setProp(HiveConstants.CREATE_TIME, table.getCreateTime());\n    }\n    if (table.isSetLastAccessTime()) {\n      tableProps.setProp(HiveConstants.LAST_ACCESS_TIME, table.getCreateTime());\n    }\n    if (table.isSetOwner()) {\n      tableProps.setProp(HiveConstants.OWNER, table.getOwner());\n    }\n    if (table.isSetTableType()) {\n      tableProps.setProp(HiveConstants.TABLE_TYPE, table.getTableType());\n    }\n    if (table.isSetRetention()) {\n      tableProps.setProp(HiveConstants.RETENTION, table.getRetention());\n    }\n    return tableProps;\n  }\n","date":"2019-12-03 05:55:58","endLine":277,"groupId":"101226","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getTableProps","params":"(Tabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/97/6c9e3c191d9a5edc844c651bb696a28fdd841c.src","preCode":"  private static State getTableProps(Table table) {\n    State tableProps = new State();\n    for (Map.Entry<String, String> entry : table.getParameters().entrySet()) {\n      tableProps.setProp(entry.getKey(), entry.getValue());\n    }\n    if (table.isSetCreateTime()) {\n      tableProps.setProp(HiveConstants.CREATE_TIME, table.getCreateTime());\n    }\n    if (table.isSetLastAccessTime()) {\n      tableProps.setProp(HiveConstants.LAST_ACCESS_TIME, table.getCreateTime());\n    }\n    if (table.isSetOwner()) {\n      tableProps.setProp(HiveConstants.OWNER, table.getOwner());\n    }\n    if (table.isSetTableType()) {\n      tableProps.setProp(HiveConstants.TABLE_TYPE, table.getTableType());\n    }\n    if (table.isSetRetention()) {\n      tableProps.setProp(HiveConstants.RETENTION, table.getRetention());\n    }\n    return tableProps;\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/metastore/HiveMetaStoreUtils.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  private static State getSerDeProps(SerDeInfo si) {\n    State serDeProps = new State();\n    for (Map.Entry<String, String> entry : si.getParameters().entrySet()) {\n      serDeProps.setProp(entry.getKey(), entry.getValue());\n    }\n    if (si.isSetSerializationLib()) {\n      serDeProps.setProp(HiveConstants.SERDE_TYPE, si.getSerializationLib());\n    }\n    return serDeProps;\n  }\n","date":"2017-07-31 15:51:25","endLine":323,"groupId":"101226","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getSerDeProps","params":"(SerDeInfosi)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/61/d3f5f80a03fc7cc1dbbcbd54af0ac6584ef6c6.src","preCode":"  private static State getSerDeProps(SerDeInfo si) {\n    State serDeProps = new State();\n    for (Map.Entry<String, String> entry : si.getParameters().entrySet()) {\n      serDeProps.setProp(entry.getKey(), entry.getValue());\n    }\n    if (si.isSetSerializationLib()) {\n      serDeProps.setProp(HiveConstants.SERDE_TYPE, si.getSerializationLib());\n    }\n    return serDeProps;\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/metastore/HiveMetaStoreUtils.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"N"}],"commitId":"00eb1f79dbdd4bc562a76867db0c47928fa4aeaa","commitMessage":"@@@[GOBBLIN-986] persist the existing property of iceberg\n\nCloses #2831 from ZihanLi58/GOBBLIN-986\n","date":"2019-12-03 05:55:58","modifiedFileCount":"2","status":"M","submitter":"Zihan Li"}]
