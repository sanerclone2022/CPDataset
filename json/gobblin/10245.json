[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-10-28 03:00:41","commitOrder":2,"curCode":"  public void test() throws IOException {\n    \r\n    Pusher pusher = new KafkaProducerPusher(\"localhost:dummy\", TOPIC, Optional.of(ConfigFactory.parseMap(ImmutableMap.of(\n        ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:\" + this.kafkaTestHelper.getKafkaServerPort()))));\n\n    String msg1 = \"msg1\";\n    String msg2 = \"msg2\";\n\n    pusher.pushMessages(Lists.newArrayList(msg1.getBytes(), msg2.getBytes()));\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    ConsumerIterator<byte[], byte[]> iterator = this.kafkaTestHelper.getIteratorForTopic(TOPIC);\n\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg1);\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg2);\n\n    pusher.close();\n  }\n","date":"2017-10-28 03:00:41","endLine":81,"groupId":"7636","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/72/3f8b7662fb5bea998e18e0df55f98d7108d692.src","preCode":"  public void test() throws IOException {\n    \r\n    Pusher pusher = new KafkaProducerPusher(\"localhost:dummy\", TOPIC, Optional.of(ConfigFactory.parseMap(ImmutableMap.of(\n        ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:\" + this.kafkaTestHelper.getKafkaServerPort()))));\n\n    String msg1 = \"msg1\";\n    String msg2 = \"msg2\";\n\n    pusher.pushMessages(Lists.newArrayList(msg1.getBytes(), msg2.getBytes()));\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    ConsumerIterator<byte[], byte[]> iterator = this.kafkaTestHelper.getIteratorForTopic(TOPIC);\n\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg1);\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg2);\n\n    pusher.close();\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/metrics/reporter/KafkaProducerPusherTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void test() throws IOException {\n    KafkaPusher pusher = new KafkaPusher(\"localhost:\" + kafkaPort, TOPIC);\n\n    String msg1 = \"msg1\";\n    String msg2 = \"msg2\";\n\n    pusher.pushMessages(Lists.newArrayList(msg1.getBytes(), msg2.getBytes()));\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg1);\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg2);\n\n    pusher.close();\n\n  }\n","date":"2017-07-31 15:51:25","endLine":66,"groupId":"4728","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/32/5f023e59034bf0a269c8285792a76612c5c250.src","preCode":"  public void test() throws IOException {\n    KafkaPusher pusher = new KafkaPusher(\"localhost:\" + kafkaPort, TOPIC);\n\n    String msg1 = \"msg1\";\n    String msg2 = \"msg2\";\n\n    pusher.pushMessages(Lists.newArrayList(msg1.getBytes(), msg2.getBytes()));\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg1);\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg2);\n\n    pusher.close();\n\n  }\n","realPath":"gobblin-modules/gobblin-kafka-08/src/test/java/org/apache/gobblin/metrics/reporter/KafkaPusherTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"NB"}],"commitId":"ee770f5c5aeec469d7d93c016ce0a25200932eb2","commitMessage":"@@@[GOBBLIN-298] Add metric and event reporters that emit using a KafkaProducer\n\nCloses #2153 from htran1/metrics09\n","date":"2017-10-28 03:00:41","modifiedFileCount":"2","status":"M","submitter":"Hung Tran"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2020-06-02 02:29:14","commitOrder":3,"curCode":"  public void test() throws IOException {\n    \r\n    Pusher pusher = new KafkaProducerPusher(\"127.0.0.1:dummy\", TOPIC, Optional.of(ConfigFactory.parseMap(ImmutableMap.of(\n        ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"127.0.0.1:\" + this.kafkaTestHelper.getKafkaServerPort()))));\n\n    String msg1 = \"msg1\";\n    String msg2 = \"msg2\";\n\n    pusher.pushMessages(Lists.newArrayList(msg1.getBytes(), msg2.getBytes()));\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    ConsumerIterator<byte[], byte[]> iterator = this.kafkaTestHelper.getIteratorForTopic(TOPIC);\n\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg1);\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg2);\n\n    pusher.close();\n  }\n","date":"2020-06-02 02:29:14","endLine":81,"groupId":"10245","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/55/31213421c62823a42bc0dac6f1e79614529b9e.src","preCode":"  public void test() throws IOException {\n    \r\n    Pusher pusher = new KafkaProducerPusher(\"localhost:dummy\", TOPIC, Optional.of(ConfigFactory.parseMap(ImmutableMap.of(\n        ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:\" + this.kafkaTestHelper.getKafkaServerPort()))));\n\n    String msg1 = \"msg1\";\n    String msg2 = \"msg2\";\n\n    pusher.pushMessages(Lists.newArrayList(msg1.getBytes(), msg2.getBytes()));\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    ConsumerIterator<byte[], byte[]> iterator = this.kafkaTestHelper.getIteratorForTopic(TOPIC);\n\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg1);\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg2);\n\n    pusher.close();\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/metrics/reporter/KafkaProducerPusherTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":3,"curCode":"  public void test() throws IOException {\n    KafkaPusher pusher = new KafkaPusher(\"localhost:\" + kafkaPort, TOPIC);\n\n    String msg1 = \"msg1\";\n    String msg2 = \"msg2\";\n\n    pusher.pushMessages(Lists.newArrayList(msg1.getBytes(), msg2.getBytes()));\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg1);\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg2);\n\n    pusher.close();\n\n  }\n","date":"2017-07-31 15:51:25","endLine":66,"groupId":"10245","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/32/5f023e59034bf0a269c8285792a76612c5c250.src","preCode":"  public void test() throws IOException {\n    KafkaPusher pusher = new KafkaPusher(\"localhost:\" + kafkaPort, TOPIC);\n\n    String msg1 = \"msg1\";\n    String msg2 = \"msg2\";\n\n    pusher.pushMessages(Lists.newArrayList(msg1.getBytes(), msg2.getBytes()));\n\n    try {\n      Thread.sleep(1000);\n    } catch(InterruptedException ex) {\n      Thread.currentThread().interrupt();\n    }\n\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg1);\n    assert(iterator.hasNext());\n    Assert.assertEquals(new String(iterator.next().message()), msg2);\n\n    pusher.close();\n\n  }\n","realPath":"gobblin-modules/gobblin-kafka-08/src/test/java/org/apache/gobblin/metrics/reporter/KafkaPusherTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"}],"commitId":"5cd38ac8d26dd4bccd8582a7182893f29ab5a009","commitMessage":"@@@[GOBBLIN-1162] Provide an option to allow slow containers to commit su?\n\nCloses #3002 from sv2000/containerSuicide\n","date":"2020-06-02 02:29:14","modifiedFileCount":"10","status":"M","submitter":"sv2000"}]
