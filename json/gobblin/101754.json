[{"authorTime":"2021-04-13 05:12:15","codes":[{"authorDate":"2021-02-05 04:13:05","commitOrder":2,"curCode":"  private Map<Path, Metrics> computeFileMetrics(State state) throws IOException {\n    Map<Path, Metrics> newFiles = new HashMap<>();\n    NameMapping mapping = getNameMapping();\n    FileSystem fs = FileSystem.get(conf);\n    for (final String pathString : state.getPropAsList(NEW_FILES_LIST, \"\")) {\n      Path path = new Path(pathString);\n      LinkedList<FileStatus> fileStatuses = new LinkedList<>();\n      fileStatuses.add(fs.getFileStatus(path));\n      \r\n      while (!fileStatuses.isEmpty()) {\n        FileStatus fileStatus = fileStatuses.pollFirst();\n        if (fileStatus.isDirectory()) {\n          fileStatuses.addAll(Arrays.asList(fs.listStatus(fileStatus.getPath(), HIDDEN_FILES_FILTER)));\n        } else {\n          Path filePath = fileStatus.getPath();\n          Metrics metrics = getMetrics(state, filePath, conf, mapping);\n          newFiles.put(filePath, metrics);\n        }\n      }\n    }\n    return newFiles;\n  }\n","date":"2021-02-05 04:13:05","endLine":133,"groupId":"5578","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"computeFileMetrics","params":"(Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d3/e6b7f4c141cff48d8a6f942adb1bd84541d3f1.src","preCode":"  private Map<Path, Metrics> computeFileMetrics(State state) throws IOException {\n    Map<Path, Metrics> newFiles = new HashMap<>();\n    NameMapping mapping = getNameMapping();\n    FileSystem fs = FileSystem.get(conf);\n    for (final String pathString : state.getPropAsList(NEW_FILES_LIST, \"\")) {\n      Path path = new Path(pathString);\n      LinkedList<FileStatus> fileStatuses = new LinkedList<>();\n      fileStatuses.add(fs.getFileStatus(path));\n      \r\n      while (!fileStatuses.isEmpty()) {\n        FileStatus fileStatus = fileStatuses.pollFirst();\n        if (fileStatus.isDirectory()) {\n          fileStatuses.addAll(Arrays.asList(fs.listStatus(fileStatus.getPath(), HIDDEN_FILES_FILTER)));\n        } else {\n          Path filePath = fileStatus.getPath();\n          Metrics metrics = getMetrics(state, filePath, conf, mapping);\n          newFiles.put(filePath, metrics);\n        }\n      }\n    }\n    return newFiles;\n  }\n","realPath":"gobblin-iceberg/src/main/java/org/apache/gobblin/iceberg/publisher/GobblinMCEPublisher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"NB"},{"authorDate":"2021-04-13 05:12:15","commitOrder":2,"curCode":"  private Map<Path, Metrics> computeDummyFile(State state) throws IOException {\n    Map<Path, Metrics> newFiles = new HashMap<>();\n    FileSystem fs = FileSystem.get(conf);\n    for (final String pathString : state.getPropAsList(ConfigurationKeys.DATA_PUBLISHER_DATASET_DIR, \"\")) {\n      Path path = new Path(pathString);\n      \r\n      PriorityQueue<FileStatus> fileStatuses =\n          new PriorityQueue<>((x, y) -> Long.compare(y.getModificationTime(), x.getModificationTime()));\n      fileStatuses.add(fs.getFileStatus(path));\n      \r\n      while (!fileStatuses.isEmpty()) {\n        FileStatus fileStatus = fileStatuses.poll();\n        if (fileStatus.isDirectory()) {\n          fileStatuses.addAll(Arrays.asList(fs.listStatus(fileStatus.getPath(), HIDDEN_FILES_FILTER)));\n        } else {\n          Path filePath = fileStatus.getPath();\n          newFiles.put(filePath, null);\n          \r\n          return newFiles;\n        }\n      }\n    }\n    return newFiles;\n  }\n","date":"2021-04-13 05:12:15","endLine":168,"groupId":"5579","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"computeDummyFile","params":"(Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a5/d0c72102af2a6ba900d86e3e320acc84a681d6.src","preCode":"  private Map<Path, Metrics> computeDummyFile(State state) throws IOException {\n    Map<Path, Metrics> newFiles = new HashMap<>();\n    FileSystem fs = FileSystem.get(conf);\n    for (final String pathString : state.getPropAsList(ConfigurationKeys.DATA_PUBLISHER_DATASET_DIR, \"\")) {\n      Path path = new Path(pathString);\n      \r\n      PriorityQueue<FileStatus> fileStatuses =\n          new PriorityQueue<>((x, y) -> Long.compare(y.getModificationTime(), x.getModificationTime()));\n      fileStatuses.add(fs.getFileStatus(path));\n      \r\n      while (!fileStatuses.isEmpty()) {\n        FileStatus fileStatus = fileStatuses.poll();\n        if (fileStatus.isDirectory()) {\n          fileStatuses.addAll(Arrays.asList(fs.listStatus(fileStatus.getPath(), HIDDEN_FILES_FILTER)));\n        } else {\n          Path filePath = fileStatus.getPath();\n          newFiles.put(filePath, null);\n          \r\n          return newFiles;\n        }\n      }\n    }\n    return newFiles;\n  }\n","realPath":"gobblin-iceberg/src/main/java/org/apache/gobblin/iceberg/publisher/GobblinMCEPublisher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"B"}],"commitId":"1a91c42f19f6d629fb61a77fc234274c42fc2770","commitMessage":"@@@[GOBBLIN-1413] Change GMCE publisher to produce GMCE when no file generated. Change IcebergMetadataWriter to correctly update watermark.\n\nadd more comments\n\naddress comments\n\nchoose the latest file when compute dummy file for\nGMCE\n\nfix code format to comply with code style\n\nCloses #3252 from hanghangliu/GOBBLIN-1413-Emit-\nGMCE-as-long-as-watermark-moved\n","date":"2021-04-13 05:12:15","modifiedFileCount":"5","status":"M","submitter":"hanghangliu"},{"authorTime":"2021-05-16 23:31:54","codes":[{"authorDate":"2021-02-05 04:13:05","commitOrder":3,"curCode":"  private Map<Path, Metrics> computeFileMetrics(State state) throws IOException {\n    Map<Path, Metrics> newFiles = new HashMap<>();\n    NameMapping mapping = getNameMapping();\n    FileSystem fs = FileSystem.get(conf);\n    for (final String pathString : state.getPropAsList(NEW_FILES_LIST, \"\")) {\n      Path path = new Path(pathString);\n      LinkedList<FileStatus> fileStatuses = new LinkedList<>();\n      fileStatuses.add(fs.getFileStatus(path));\n      \r\n      while (!fileStatuses.isEmpty()) {\n        FileStatus fileStatus = fileStatuses.pollFirst();\n        if (fileStatus.isDirectory()) {\n          fileStatuses.addAll(Arrays.asList(fs.listStatus(fileStatus.getPath(), HIDDEN_FILES_FILTER)));\n        } else {\n          Path filePath = fileStatus.getPath();\n          Metrics metrics = getMetrics(state, filePath, conf, mapping);\n          newFiles.put(filePath, metrics);\n        }\n      }\n    }\n    return newFiles;\n  }\n","date":"2021-02-05 04:13:05","endLine":133,"groupId":"101754","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"computeFileMetrics","params":"(Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d3/e6b7f4c141cff48d8a6f942adb1bd84541d3f1.src","preCode":"  private Map<Path, Metrics> computeFileMetrics(State state) throws IOException {\n    Map<Path, Metrics> newFiles = new HashMap<>();\n    NameMapping mapping = getNameMapping();\n    FileSystem fs = FileSystem.get(conf);\n    for (final String pathString : state.getPropAsList(NEW_FILES_LIST, \"\")) {\n      Path path = new Path(pathString);\n      LinkedList<FileStatus> fileStatuses = new LinkedList<>();\n      fileStatuses.add(fs.getFileStatus(path));\n      \r\n      while (!fileStatuses.isEmpty()) {\n        FileStatus fileStatus = fileStatuses.pollFirst();\n        if (fileStatus.isDirectory()) {\n          fileStatuses.addAll(Arrays.asList(fs.listStatus(fileStatus.getPath(), HIDDEN_FILES_FILTER)));\n        } else {\n          Path filePath = fileStatus.getPath();\n          Metrics metrics = getMetrics(state, filePath, conf, mapping);\n          newFiles.put(filePath, metrics);\n        }\n      }\n    }\n    return newFiles;\n  }\n","realPath":"gobblin-iceberg/src/main/java/org/apache/gobblin/iceberg/publisher/GobblinMCEPublisher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"N"},{"authorDate":"2021-05-16 23:31:54","commitOrder":3,"curCode":"  private Map<Path, Metrics> computeDummyFile(State state) throws IOException {\n    Map<Path, Metrics> newFiles = new HashMap<>();\n    FileSystem fs = FileSystem.get(conf);\n    for (final String pathString : state.getPropAsList(ConfigurationKeys.DATA_PUBLISHER_DATASET_DIR, \"\")) {\n      Path path = new Path(pathString);\n      \r\n      PriorityQueue<FileStatus> fileStatuses =\n          new PriorityQueue<>((x, y) -> Long.compare(y.getModificationTime(), x.getModificationTime()));\n      if (fs.exists(path)) {\n        fileStatuses.add(fs.getFileStatus(path));\n      }\n      \r\n      while (!fileStatuses.isEmpty()) {\n        FileStatus fileStatus = fileStatuses.poll();\n        if (fileStatus.isDirectory()) {\n          fileStatuses.addAll(Arrays.asList(fs.listStatus(fileStatus.getPath(), HIDDEN_FILES_FILTER)));\n        } else {\n          Path filePath = fileStatus.getPath();\n          newFiles.put(filePath, null);\n          \r\n          return newFiles;\n        }\n      }\n    }\n    return newFiles;\n  }\n","date":"2021-05-16 23:31:54","endLine":172,"groupId":"101754","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"computeDummyFile","params":"(Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/08/71fb7ff119466d1427269231d211ff3ce971c3.src","preCode":"  private Map<Path, Metrics> computeDummyFile(State state) throws IOException {\n    Map<Path, Metrics> newFiles = new HashMap<>();\n    FileSystem fs = FileSystem.get(conf);\n    for (final String pathString : state.getPropAsList(ConfigurationKeys.DATA_PUBLISHER_DATASET_DIR, \"\")) {\n      Path path = new Path(pathString);\n      \r\n      PriorityQueue<FileStatus> fileStatuses =\n          new PriorityQueue<>((x, y) -> Long.compare(y.getModificationTime(), x.getModificationTime()));\n      fileStatuses.add(fs.getFileStatus(path));\n      \r\n      while (!fileStatuses.isEmpty()) {\n        FileStatus fileStatus = fileStatuses.poll();\n        if (fileStatus.isDirectory()) {\n          fileStatuses.addAll(Arrays.asList(fs.listStatus(fileStatus.getPath(), HIDDEN_FILES_FILTER)));\n        } else {\n          Path filePath = fileStatus.getPath();\n          newFiles.put(filePath, null);\n          \r\n          return newFiles;\n        }\n      }\n    }\n    return newFiles;\n  }\n","realPath":"gobblin-iceberg/src/main/java/org/apache/gobblin/iceberg/publisher/GobblinMCEPublisher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"e4d6c1b7542f3af5237447021ff14295d2c425ff","commitMessage":"@@@[GOBBLIN-1443] Make iceberg metadata root location include db name\n\nCloses #3279 from ZihanLi58/GOBBLIN-1443\n","date":"2021-05-16 23:31:54","modifiedFileCount":"3","status":"M","submitter":"Zihan Li"}]
