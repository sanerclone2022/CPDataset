[{"authorTime":"2017-10-18 13:33:52","codes":[{"authorDate":"2017-10-18 13:33:52","commitOrder":1,"curCode":"  public void schemaWithComplexUnion()\n      throws Exception {\n    String testName = \"schemaWithComplexUnion\";\n    JsonObject schema = getSchemaData(testName).getAsJsonObject();\n    JsonArray expected = getExpectedSchema(testName).getAsJsonArray();\n\n    UnionConverter converter = new UnionConverter(new JsonSchema(schema), state);\n\n    Assert.assertEquals(avroSchemaToJsonElement(converter), expected);\n  }\n","date":"2017-10-18 13:33:52","endLine":323,"groupId":"1368","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"schemaWithComplexUnion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/7f/39d308c0318f7809a38c7bce173c438c69a2ef.src","preCode":"  public void schemaWithComplexUnion()\n      throws Exception {\n    String testName = \"schemaWithComplexUnion\";\n    JsonObject schema = getSchemaData(testName).getAsJsonObject();\n    JsonArray expected = getExpectedSchema(testName).getAsJsonArray();\n\n    UnionConverter converter = new UnionConverter(new JsonSchema(schema), state);\n\n    Assert.assertEquals(avroSchemaToJsonElement(converter), expected);\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/converter/avro/JsonElementConversionFactoryTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"B"},{"authorDate":"2017-10-18 13:33:52","commitOrder":1,"curCode":"  public void schemaWithArrayIsNullable()\n      throws Exception {\n    String testName = \"schemaWithArrayIsNullable\";\n    JsonObject schema = getSchemaData(testName).getAsJsonObject();\n    JsonArray expected = getExpectedSchema(testName).getAsJsonArray();\n\n    ArrayConverter converter = new ArrayConverter(new JsonSchema(schema), state);\n\n    Assert.assertEquals(avroSchemaToJsonElement(converter), expected);\n  }\n","date":"2017-10-18 13:33:52","endLine":384,"groupId":"1368","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"schemaWithArrayIsNullable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/7f/39d308c0318f7809a38c7bce173c438c69a2ef.src","preCode":"  public void schemaWithArrayIsNullable()\n      throws Exception {\n    String testName = \"schemaWithArrayIsNullable\";\n    JsonObject schema = getSchemaData(testName).getAsJsonObject();\n    JsonArray expected = getExpectedSchema(testName).getAsJsonArray();\n\n    ArrayConverter converter = new ArrayConverter(new JsonSchema(schema), state);\n\n    Assert.assertEquals(avroSchemaToJsonElement(converter), expected);\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/converter/avro/JsonElementConversionFactoryTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":375,"status":"B"}],"commitId":"6dd36a506d574a261bf678aaf071d89e597044e8","commitMessage":"@@@[GOBBLIN-226] Nested schema support in JsonStringToJsonIntermediateConverter and JsonIntermediateToAvroConverter\n\nCloses #2080 from tilakpatidar/nested_schema\n","date":"2017-10-18 13:33:52","modifiedFileCount":"6","status":"B","submitter":"tilakpatidar"},{"authorTime":"2019-06-06 02:00:44","codes":[{"authorDate":"2017-10-18 13:33:52","commitOrder":2,"curCode":"  public void schemaWithComplexUnion()\n      throws Exception {\n    String testName = \"schemaWithComplexUnion\";\n    JsonObject schema = getSchemaData(testName).getAsJsonObject();\n    JsonArray expected = getExpectedSchema(testName).getAsJsonArray();\n\n    UnionConverter converter = new UnionConverter(new JsonSchema(schema), state);\n\n    Assert.assertEquals(avroSchemaToJsonElement(converter), expected);\n  }\n","date":"2017-10-18 13:33:52","endLine":323,"groupId":"101342","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"schemaWithComplexUnion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/7f/39d308c0318f7809a38c7bce173c438c69a2ef.src","preCode":"  public void schemaWithComplexUnion()\n      throws Exception {\n    String testName = \"schemaWithComplexUnion\";\n    JsonObject schema = getSchemaData(testName).getAsJsonObject();\n    JsonArray expected = getExpectedSchema(testName).getAsJsonArray();\n\n    UnionConverter converter = new UnionConverter(new JsonSchema(schema), state);\n\n    Assert.assertEquals(avroSchemaToJsonElement(converter), expected);\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/converter/avro/JsonElementConversionFactoryTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"N"},{"authorDate":"2019-06-06 02:00:44","commitOrder":2,"curCode":"  public void schemaWithArrayIsNullable()\n      throws Exception {\n    String testName = \"schemaWithArrayIsNullable\";\n    JsonObject schema = getSchemaData(testName).getAsJsonObject();\n    JsonArray expected = getExpectedSchema(testName).getAsJsonArray();\n\n    ArrayConverter converter = new ArrayConverter(new JsonSchema(schema), state, null);\n\n    Assert.assertEquals(avroSchemaToJsonElement(converter), expected);\n  }\n","date":"2019-06-06 02:00:44","endLine":384,"groupId":"101342","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"schemaWithArrayIsNullable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/1c/f260da21fb71453d303e05178a4319662f25c0.src","preCode":"  public void schemaWithArrayIsNullable()\n      throws Exception {\n    String testName = \"schemaWithArrayIsNullable\";\n    JsonObject schema = getSchemaData(testName).getAsJsonObject();\n    JsonArray expected = getExpectedSchema(testName).getAsJsonArray();\n\n    ArrayConverter converter = new ArrayConverter(new JsonSchema(schema), state);\n\n    Assert.assertEquals(avroSchemaToJsonElement(converter), expected);\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/converter/avro/JsonElementConversionFactoryTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":375,"status":"M"}],"commitId":"5a9ec60baf741f03a3965e7d4ce06d7bfdd18eb4","commitMessage":"@@@[GOBBLIN-794] fix JsonIntermedidateToAvroConverter for nested array/object use cases\n\nThis commit fix a defect in converting nested json\nschema.  where a array had objects in items.  and\nthen\nthe object had another array.  and then another\nlayer of objects.\n\nConverting the lowest level of objects require a\nnamespace.  but the array converter did not carry\nthe\nnamespace to its nested converter.\n\nThe fix is to add a namespace parameter to\nArrayConverter.  and let is pass the namespace to\nsubsequent calls\nto RecordConverter.\n\nCloses #2661 from chris9692/gobblin_794_fix\n","date":"2019-06-06 02:00:44","modifiedFileCount":"3","status":"M","submitter":"Chris Li"}]
