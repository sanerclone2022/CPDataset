[{"authorTime":"2019-02-21 06:32:25","codes":[{"authorDate":"2019-02-21 06:32:25","commitOrder":1,"curCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        HttpPost httpPost = new HttpPost(client.url + \"/manager\");\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.ACTION, \"create\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.NAME, projectName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.DESCRIPTION, description));\n        httpPost.setEntity(new UrlEncodedFormEntity(nvps));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        httpPost.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpPost);\n        closer.register(response);\n        client.handleResponse(response);\n        return new AzkabanSuccess();\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Throwable e) {\n        throw new AzkabanClientException(\"Azkaban client cannot create project = \"\n            + projectName, e);\n      }\n    }\n","date":"2019-02-21 06:32:25","endLine":102,"groupId":"2002","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"call","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/90/91220e6cebd87040801d8472ca3fa712b5c7d3.src","preCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        HttpPost httpPost = new HttpPost(client.url + \"/manager\");\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.ACTION, \"create\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.NAME, projectName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.DESCRIPTION, description));\n        httpPost.setEntity(new UrlEncodedFormEntity(nvps));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        httpPost.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpPost);\n        closer.register(response);\n        client.handleResponse(response);\n        return new AzkabanSuccess();\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Throwable e) {\n        throw new AzkabanClientException(\"Azkaban client cannot create project = \"\n            + projectName, e);\n      }\n    }\n","realPath":"gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"},{"authorDate":"2019-02-21 06:32:25","commitOrder":1,"curCode":"    public AzkabanExecuteFlowStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        HttpPost httpPost = new HttpPost(client.url + \"/executor\");\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"executeFlow\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.PROJECT, projectName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.FLOW, flowName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.CONCURRENT_OPTION, \"ignore\"));\n\n        addFlowOptions(nvps, flowOptions);\n        addFlowParameters(nvps, flowParameters);\n\n        httpPost.setEntity(new UrlEncodedFormEntity(nvps));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        httpPost.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpPost);\n        closer.register(response);\n        Map<String, String> map = client.handleResponse(response);\n        return new AzkabanExecuteFlowStatus(\n            new AzkabanExecuteFlowStatus.ExecuteId(map.get(AzkabanClientParams.EXECID)));\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client cannot execute flow = \"\n            + flowName, e);\n      }\n    }\n","date":"2019-02-21 06:32:25","endLine":231,"groupId":"2009","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"call","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/90/91220e6cebd87040801d8472ca3fa712b5c7d3.src","preCode":"    public AzkabanExecuteFlowStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        HttpPost httpPost = new HttpPost(client.url + \"/executor\");\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"executeFlow\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.PROJECT, projectName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.FLOW, flowName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.CONCURRENT_OPTION, \"ignore\"));\n\n        addFlowOptions(nvps, flowOptions);\n        addFlowParameters(nvps, flowParameters);\n\n        httpPost.setEntity(new UrlEncodedFormEntity(nvps));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        httpPost.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpPost);\n        closer.register(response);\n        Map<String, String> map = client.handleResponse(response);\n        return new AzkabanExecuteFlowStatus(\n            new AzkabanExecuteFlowStatus.ExecuteId(map.get(AzkabanClientParams.EXECID)));\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client cannot execute flow = \"\n            + flowName, e);\n      }\n    }\n","realPath":"gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"}],"commitId":"86b67626371720a57fc73bdc3172b4ace2803eb2","commitMessage":"@@@[GOBBLIN-683] Add azkaban client retry logic.\n\nCloses #2555 from yukuai518/session\n","date":"2019-02-21 06:32:25","modifiedFileCount":"7","status":"B","submitter":"Kuai Yu"},{"authorTime":"2020-04-30 14:39:30","codes":[{"authorDate":"2020-04-30 14:39:30","commitOrder":2,"curCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        HttpPost httpPost = new HttpPost(client.url + \"/manager\");\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.ACTION, \"create\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.NAME, projectName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.DESCRIPTION, description));\n        httpPost.setEntity(new UrlEncodedFormEntity(nvps));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        httpPost.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpPost);\n        closer.register(response);\n        AzkabanClient.handleResponse(response);\n        return new AzkabanSuccess();\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Throwable e) {\n        throw new AzkabanClientException(\"Azkaban client cannot create project = \"\n            + projectName, e);\n      }\n    }\n","date":"2020-04-30 14:39:30","endLine":102,"groupId":"11198","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"call","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/60/1b4cbbea2982fd0fe8341829308a02a498d07e.src","preCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        HttpPost httpPost = new HttpPost(client.url + \"/manager\");\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.ACTION, \"create\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.NAME, projectName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.DESCRIPTION, description));\n        httpPost.setEntity(new UrlEncodedFormEntity(nvps));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        httpPost.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpPost);\n        closer.register(response);\n        client.handleResponse(response);\n        return new AzkabanSuccess();\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Throwable e) {\n        throw new AzkabanClientException(\"Azkaban client cannot create project = \"\n            + projectName, e);\n      }\n    }\n","realPath":"gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2020-04-30 14:39:30","commitOrder":2,"curCode":"    public AzkabanExecuteFlowStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        HttpPost httpPost = new HttpPost(client.url + \"/executor\");\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"executeFlow\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.PROJECT, projectName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.FLOW, flowName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.CONCURRENT_OPTION, \"ignore\"));\n\n        addFlowOptions(nvps, flowOptions);\n        addFlowParameters(nvps, flowParameters);\n\n        httpPost.setEntity(new UrlEncodedFormEntity(nvps));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        httpPost.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpPost);\n        closer.register(response);\n        Map<String, String> map = AzkabanClient.handleResponse(response);\n        return new AzkabanExecuteFlowStatus(\n            new AzkabanExecuteFlowStatus.ExecuteId(map.get(AzkabanClientParams.EXECID)));\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client cannot execute flow = \"\n            + flowName, e);\n      }\n    }\n","date":"2020-04-30 14:39:30","endLine":231,"groupId":"11198","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"call","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/60/1b4cbbea2982fd0fe8341829308a02a498d07e.src","preCode":"    public AzkabanExecuteFlowStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        HttpPost httpPost = new HttpPost(client.url + \"/executor\");\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"executeFlow\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.PROJECT, projectName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.FLOW, flowName));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.CONCURRENT_OPTION, \"ignore\"));\n\n        addFlowOptions(nvps, flowOptions);\n        addFlowParameters(nvps, flowParameters);\n\n        httpPost.setEntity(new UrlEncodedFormEntity(nvps));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        httpPost.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpPost);\n        closer.register(response);\n        Map<String, String> map = client.handleResponse(response);\n        return new AzkabanExecuteFlowStatus(\n            new AzkabanExecuteFlowStatus.ExecuteId(map.get(AzkabanClientParams.EXECID)));\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client cannot execute flow = \"\n            + flowName, e);\n      }\n    }\n","realPath":"gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"a7458adbdb5dcb8947329b8959b1522a29aaef86","commitMessage":"@@@[GOBBLIN-1130] Add API for adding proxy user to azkaban project\n\nCloses #2971 from jack-moseley/add-proxy\n","date":"2020-04-30 14:39:30","modifiedFileCount":"2","status":"M","submitter":"Jack Moseley"}]
