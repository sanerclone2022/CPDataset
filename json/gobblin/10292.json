[{"authorTime":"2017-10-28 03:00:41","codes":[{"authorDate":"2017-10-28 03:00:41","commitOrder":1,"curCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"1\");\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2017-10-28 03:00:41","endLine":63,"groupId":"2545","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"KafkaProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3d/2de9b7dfbd28be5be4f1e585c198acbe9e8918.src","preCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"1\");\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/main/java/org/apache/gobblin/metrics/kafka/KafkaProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2017-10-28 03:00:41","commitOrder":1,"curCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"1\");\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2017-10-28 03:00:41","endLine":63,"groupId":"2545","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"KafkaProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ff/75a925474253cb504ca927b357563de3aaddc2.src","preCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"1\");\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-08/src/main/java/org/apache/gobblin/metrics/kafka/KafkaProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"}],"commitId":"ee770f5c5aeec469d7d93c016ce0a25200932eb2","commitMessage":"@@@[GOBBLIN-298] Add metric and event reporters that emit using a KafkaProducer\n\nCloses #2153 from htran1/metrics09\n","date":"2017-10-28 03:00:41","modifiedFileCount":"2","status":"B","submitter":"Hung Tran"},{"authorTime":"2018-11-27 02:06:20","codes":[{"authorDate":"2018-11-27 02:06:20","commitOrder":2,"curCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2018-11-27 02:06:20","endLine":67,"groupId":"2610","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"KafkaProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/1e/f1063ca6ac893e2d29a7a4688fe7234f2c837a.src","preCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"1\");\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/main/java/org/apache/gobblin/metrics/kafka/KafkaProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2018-11-27 02:06:20","commitOrder":2,"curCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2018-11-27 02:06:20","endLine":67,"groupId":"2610","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"KafkaProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2b/9841947f3d3f0b5b9c2a170b10d578adfc113f.src","preCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"1\");\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-08/src/main/java/org/apache/gobblin/metrics/kafka/KafkaProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"58f00f019cfc7334c3fe088deba8ad67a24b5e3a","commitMessage":"@@@[GOBBLIN-635] Add metadata tags for GaaS/Azkaban jobs.\n\nGOBBLIN-635:Add metadata tags to Gobblin Tracking\nEvent for Azkaban jobs triggered using Gobblin-as-\na-Service (GaaS).\n\nCloses #2505 from sv2000/azkabanMetadataTags\n","date":"2018-11-27 02:06:20","modifiedFileCount":"8","status":"M","submitter":"suvasude"},{"authorTime":"2019-02-20 22:56:07","codes":[{"authorDate":"2018-11-27 02:06:20","commitOrder":3,"curCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2018-11-27 02:06:20","endLine":67,"groupId":"10292","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"KafkaProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/1e/f1063ca6ac893e2d29a7a4688fe7234f2c837a.src","preCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/main/java/org/apache/gobblin/metrics/kafka/KafkaProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2019-02-20 22:56:07","commitOrder":3,"curCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n      this.numFuturesToBuffer = ConfigUtils.getLong(kafkaConfig.get(), MAX_NUM_FUTURES_TO_BUFFER_KEY, DEFAULT_MAX_NUM_FUTURES_TO_BUFFER);\n    }\n\n    this.producer = createProducer(props);\n  }\n","date":"2019-02-20 22:56:07","endLine":83,"groupId":"10292","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"KafkaProducerPusher","params":"(Stringbrokers@Stringtopic@Optional<Config>kafkaConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/27/72e4aff4001eac58b40bfe37f155764c16ad3b.src","preCode":"  public KafkaProducerPusher(String brokers, String topic, Optional<Config> kafkaConfig) {\n    this.closer = Closer.create();\n\n    this.topic = topic;\n\n    Properties props = new Properties();\n    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, brokers);\n    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getName());\n    props.put(ProducerConfig.ACKS_CONFIG, \"all\");\n    props.put(ProducerConfig.RETRIES_CONFIG, 3);\n\n    \r\n    if (kafkaConfig.isPresent()) {\n      props.putAll(ConfigUtils.configToProperties(kafkaConfig.get()));\n    }\n\n    this.producer = createProducer(props);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-08/src/main/java/org/apache/gobblin/metrics/kafka/KafkaProducerPusher.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"ebbc153463e01157a562d75a4e5d11b2428715df","commitMessage":"@@@[GOBBLIN-684] Ensure buffered messages are flushed before close() in K?\n\nCloses #2556 from sv2000/kafkaFlush\n","date":"2019-02-20 22:56:07","modifiedFileCount":"5","status":"M","submitter":"suvasude"}]
