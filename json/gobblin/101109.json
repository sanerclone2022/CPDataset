[{"authorTime":"2020-11-04 06:14:06","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":182,"groupId":"4424","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/3dc152e12144db7e3eb4d6c62e722c2cdebafb.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"NB"},{"authorDate":"2020-11-04 06:14:06","commitOrder":2,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad1\");\n      this.node1GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 1 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad2\");\n      this.node2GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 2 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.testingZKServer.close();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Testing Zookeeper\", e);\n    }\n  }\n","date":"2020-11-04 06:14:06","endLine":214,"groupId":"2579","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ce/4cf71565d7cc488431ea6c291b8bec57829bd9.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad1\");\n      this.node1GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 1 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad2\");\n      this.node2GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 2 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.testingZKServer.close();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Testing Zookeeper\", e);\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GobblinServiceRedirectTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"B"}],"commitId":"f2767242fe863307feaf68332f0d3617f30e8e4b","commitMessage":"@@@[GOBBLIN-1285] Add option to only accept requests to leader node and redirect requests in the client\n\nCloses #3124 from jack-moseley/gaas-redirect\n","date":"2020-11-04 06:14:06","modifiedFileCount":"9","status":"M","submitter":"Jack Moseley"},{"authorTime":"2021-08-12 12:01:05","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":3,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":182,"groupId":"101109","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/3dc152e12144db7e3eb4d6c62e722c2cdebafb.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"N"},{"authorDate":"2021-08-12 12:01:05","commitOrder":3,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad1\");\n      this.node1GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 1 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad2\");\n      this.node2GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 2 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.testingZKServer.close();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Testing Zookeeper\", e);\n    }\n\n    mysql.stop();\n  }\n","date":"2021-08-12 12:01:05","endLine":226,"groupId":"101109","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/4f/6fbded9d9c9e8ec8b87bf4a9e161ea2d618d03.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad1\");\n      this.node1GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 1 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad2\");\n      this.node2GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 2 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.testingZKServer.close();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Testing Zookeeper\", e);\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GobblinServiceRedirectTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"}],"commitId":"de3a6941d0d9ab0eeb1035a8d8ea04aaa65bf07e","commitMessage":"@@@[GOBBLIN-1457] Add persistence for troubleshooter in Gobblin service (#3327)\n\nPreviously.  Gobblin service kept the last few job issues in memory.\nIn this commit.  we add MySql-based persistence for job issues.\n\nWe also introduce Flyway-based migrations to Gobblin service DB.  so that\nwe can adjust the table schemas in the future.  and add new tables\nin a consistent way.","date":"2021-08-12 12:01:05","modifiedFileCount":"18","status":"M","submitter":"Alex Prokofiev"}]
