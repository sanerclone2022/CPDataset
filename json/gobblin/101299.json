[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void setUp() throws Exception {\n    properties = new State();\n\n    \r\n    File stagingDir = new File(TestConstants.TEST_STAGING_DIR);\n    File outputDir = new File(TestConstants.TEST_OUTPUT_DIR);\n    if (!stagingDir.exists()) {\n      stagingDir.mkdirs();\n    }\n    if (!outputDir.exists()) {\n      outputDir.mkdirs();\n    }\n\n    this.filePath = TestConstants.TEST_EXTRACT_NAMESPACE.replaceAll(\"\\\\.\", \"/\") + \"/\" + TestConstants.TEST_EXTRACT_TABLE\n        + \"/\" + TestConstants.TEST_EXTRACT_ID + \"_\" + TestConstants.TEST_EXTRACT_PULL_TYPE;\n\n    properties.setProp(ConfigurationKeys.SIMPLE_WRITER_DELIMITER, \"\\n\");\n    properties.setProp(ConfigurationKeys.WRITER_FILE_SYSTEM_URI, TestConstants.TEST_FS_URI);\n    properties.setProp(ConfigurationKeys.WRITER_STAGING_DIR, TestConstants.TEST_STAGING_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR, TestConstants.TEST_OUTPUT_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_PATH, this.filePath);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_NAME, TestConstants.TEST_FILE_NAME);\n    properties.setProp(ConfigurationKeys.SIMPLE_WRITER_PREPEND_SIZE, false);\n  }\n","date":"2017-07-31 15:51:25","endLine":88,"groupId":"6229","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/02/0ad5e3da3198a65b0455ab6bde120e6937b12a.src","preCode":"  public void setUp() throws Exception {\n    properties = new State();\n\n    \r\n    File stagingDir = new File(TestConstants.TEST_STAGING_DIR);\n    File outputDir = new File(TestConstants.TEST_OUTPUT_DIR);\n    if (!stagingDir.exists()) {\n      stagingDir.mkdirs();\n    }\n    if (!outputDir.exists()) {\n      outputDir.mkdirs();\n    }\n\n    this.filePath = TestConstants.TEST_EXTRACT_NAMESPACE.replaceAll(\"\\\\.\", \"/\") + \"/\" + TestConstants.TEST_EXTRACT_TABLE\n        + \"/\" + TestConstants.TEST_EXTRACT_ID + \"_\" + TestConstants.TEST_EXTRACT_PULL_TYPE;\n\n    properties.setProp(ConfigurationKeys.SIMPLE_WRITER_DELIMITER, \"\\n\");\n    properties.setProp(ConfigurationKeys.WRITER_FILE_SYSTEM_URI, TestConstants.TEST_FS_URI);\n    properties.setProp(ConfigurationKeys.WRITER_STAGING_DIR, TestConstants.TEST_STAGING_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR, TestConstants.TEST_OUTPUT_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_PATH, this.filePath);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_NAME, TestConstants.TEST_FILE_NAME);\n    properties.setProp(ConfigurationKeys.SIMPLE_WRITER_PREPEND_SIZE, false);\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/writer/SimpleDataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void setUp() throws Exception {\n    \r\n    File stagingDir = new File(TestConstants.TEST_STAGING_DIR);\n    File outputDir = new File(TestConstants.TEST_OUTPUT_DIR);\n    if (!stagingDir.exists()) {\n      stagingDir.mkdirs();\n    }\n    if (!outputDir.exists()) {\n      outputDir.mkdirs();\n    }\n\n    this.schema = new Schema.Parser().parse(TestConstants.AVRO_SCHEMA);\n\n    this.filePath = TestConstants.TEST_EXTRACT_NAMESPACE.replaceAll(\"\\\\.\", \"/\") + \"/\" + TestConstants.TEST_EXTRACT_TABLE\n        + \"/\" + TestConstants.TEST_EXTRACT_ID + \"_\" + TestConstants.TEST_EXTRACT_PULL_TYPE;\n\n    properties = new State();\n    properties.setProp(ConfigurationKeys.WRITER_BUFFER_SIZE, ConfigurationKeys.DEFAULT_BUFFER_SIZE);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_SYSTEM_URI, TestConstants.TEST_FS_URI);\n    properties.setProp(ConfigurationKeys.WRITER_STAGING_DIR, TestConstants.TEST_STAGING_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR, TestConstants.TEST_OUTPUT_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_PATH, this.filePath);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_NAME, TestConstants.TEST_FILE_NAME);\n\n    \r\n    this.writer = new AvroDataWriterBuilder().writeTo(Destination.of(Destination.DestinationType.HDFS, properties))\n        .writeInFormat(WriterOutputFormat.AVRO).withWriterId(TestConstants.TEST_WRITER_ID).withSchema(this.schema)\n        .withBranches(1).forBranch(0).build();\n  }\n","date":"2017-07-31 15:51:25","endLine":90,"groupId":"6039","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/bb/e772dc2874ed842ee7550a1d954259d20fcb3d.src","preCode":"  public void setUp() throws Exception {\n    \r\n    File stagingDir = new File(TestConstants.TEST_STAGING_DIR);\n    File outputDir = new File(TestConstants.TEST_OUTPUT_DIR);\n    if (!stagingDir.exists()) {\n      stagingDir.mkdirs();\n    }\n    if (!outputDir.exists()) {\n      outputDir.mkdirs();\n    }\n\n    this.schema = new Schema.Parser().parse(TestConstants.AVRO_SCHEMA);\n\n    this.filePath = TestConstants.TEST_EXTRACT_NAMESPACE.replaceAll(\"\\\\.\", \"/\") + \"/\" + TestConstants.TEST_EXTRACT_TABLE\n        + \"/\" + TestConstants.TEST_EXTRACT_ID + \"_\" + TestConstants.TEST_EXTRACT_PULL_TYPE;\n\n    properties = new State();\n    properties.setProp(ConfigurationKeys.WRITER_BUFFER_SIZE, ConfigurationKeys.DEFAULT_BUFFER_SIZE);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_SYSTEM_URI, TestConstants.TEST_FS_URI);\n    properties.setProp(ConfigurationKeys.WRITER_STAGING_DIR, TestConstants.TEST_STAGING_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR, TestConstants.TEST_OUTPUT_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_PATH, this.filePath);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_NAME, TestConstants.TEST_FILE_NAME);\n\n    \r\n    this.writer = new AvroDataWriterBuilder().writeTo(Destination.of(Destination.DestinationType.HDFS, properties))\n        .writeInFormat(WriterOutputFormat.AVRO).withWriterId(TestConstants.TEST_WRITER_ID).withSchema(this.schema)\n        .withBranches(1).forBranch(0).build();\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/writer/AvroHdfsDataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2020-03-18 12:04:23","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    properties = new State();\n\n    \r\n    File stagingDir = new File(TestConstants.TEST_STAGING_DIR);\n    File outputDir = new File(TestConstants.TEST_OUTPUT_DIR);\n    if (!stagingDir.exists()) {\n      stagingDir.mkdirs();\n    }\n    if (!outputDir.exists()) {\n      outputDir.mkdirs();\n    }\n\n    this.filePath = TestConstants.TEST_EXTRACT_NAMESPACE.replaceAll(\"\\\\.\", \"/\") + \"/\" + TestConstants.TEST_EXTRACT_TABLE\n        + \"/\" + TestConstants.TEST_EXTRACT_ID + \"_\" + TestConstants.TEST_EXTRACT_PULL_TYPE;\n\n    properties.setProp(ConfigurationKeys.SIMPLE_WRITER_DELIMITER, \"\\n\");\n    properties.setProp(ConfigurationKeys.WRITER_FILE_SYSTEM_URI, TestConstants.TEST_FS_URI);\n    properties.setProp(ConfigurationKeys.WRITER_STAGING_DIR, TestConstants.TEST_STAGING_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR, TestConstants.TEST_OUTPUT_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_PATH, this.filePath);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_NAME, TestConstants.TEST_FILE_NAME);\n    properties.setProp(ConfigurationKeys.SIMPLE_WRITER_PREPEND_SIZE, false);\n  }\n","date":"2017-07-31 15:51:25","endLine":88,"groupId":"101299","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/02/0ad5e3da3198a65b0455ab6bde120e6937b12a.src","preCode":"  public void setUp() throws Exception {\n    properties = new State();\n\n    \r\n    File stagingDir = new File(TestConstants.TEST_STAGING_DIR);\n    File outputDir = new File(TestConstants.TEST_OUTPUT_DIR);\n    if (!stagingDir.exists()) {\n      stagingDir.mkdirs();\n    }\n    if (!outputDir.exists()) {\n      outputDir.mkdirs();\n    }\n\n    this.filePath = TestConstants.TEST_EXTRACT_NAMESPACE.replaceAll(\"\\\\.\", \"/\") + \"/\" + TestConstants.TEST_EXTRACT_TABLE\n        + \"/\" + TestConstants.TEST_EXTRACT_ID + \"_\" + TestConstants.TEST_EXTRACT_PULL_TYPE;\n\n    properties.setProp(ConfigurationKeys.SIMPLE_WRITER_DELIMITER, \"\\n\");\n    properties.setProp(ConfigurationKeys.WRITER_FILE_SYSTEM_URI, TestConstants.TEST_FS_URI);\n    properties.setProp(ConfigurationKeys.WRITER_STAGING_DIR, TestConstants.TEST_STAGING_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR, TestConstants.TEST_OUTPUT_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_PATH, this.filePath);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_NAME, TestConstants.TEST_FILE_NAME);\n    properties.setProp(ConfigurationKeys.SIMPLE_WRITER_PREPEND_SIZE, false);\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/writer/SimpleDataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2020-03-18 12:04:23","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    \r\n    File stagingDir = new File(TestConstants.TEST_STAGING_DIR);\n    File outputDir = new File(TestConstants.TEST_OUTPUT_DIR);\n    if (!stagingDir.exists()) {\n      stagingDir.mkdirs();\n    }\n    if (!outputDir.exists()) {\n      outputDir.mkdirs();\n    }\n\n    this.schema = new Schema.Parser().parse(TestConstants.AVRO_SCHEMA);\n    schema.addProp(TEST_PROPERTY_KEY, TEST_PROPERTY_VALUE);\n\n    this.filePath = TestConstants.TEST_EXTRACT_NAMESPACE.replaceAll(\"\\\\.\", \"/\") + \"/\" + TestConstants.TEST_EXTRACT_TABLE\n        + \"/\" + TestConstants.TEST_EXTRACT_ID + \"_\" + TestConstants.TEST_EXTRACT_PULL_TYPE;\n\n    properties = new State();\n    properties.setProp(ConfigurationKeys.WRITER_BUFFER_SIZE, ConfigurationKeys.DEFAULT_BUFFER_SIZE);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_SYSTEM_URI, TestConstants.TEST_FS_URI);\n    properties.setProp(ConfigurationKeys.WRITER_STAGING_DIR, TestConstants.TEST_STAGING_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR, TestConstants.TEST_OUTPUT_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_PATH, this.filePath);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_NAME, TestConstants.TEST_FILE_NAME);\n\n    \r\n    this.writer = new AvroDataWriterBuilder().writeTo(Destination.of(Destination.DestinationType.HDFS, properties))\n        .writeInFormat(WriterOutputFormat.AVRO).withWriterId(TestConstants.TEST_WRITER_ID).withSchema(this.schema)\n        .withBranches(1).forBranch(0).build();\n  }\n","date":"2020-03-18 12:04:23","endLine":94,"groupId":"101299","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2e/44336a4d1618405d1f86d71e11be388378c488.src","preCode":"  public void setUp() throws Exception {\n    \r\n    File stagingDir = new File(TestConstants.TEST_STAGING_DIR);\n    File outputDir = new File(TestConstants.TEST_OUTPUT_DIR);\n    if (!stagingDir.exists()) {\n      stagingDir.mkdirs();\n    }\n    if (!outputDir.exists()) {\n      outputDir.mkdirs();\n    }\n\n    this.schema = new Schema.Parser().parse(TestConstants.AVRO_SCHEMA);\n\n    this.filePath = TestConstants.TEST_EXTRACT_NAMESPACE.replaceAll(\"\\\\.\", \"/\") + \"/\" + TestConstants.TEST_EXTRACT_TABLE\n        + \"/\" + TestConstants.TEST_EXTRACT_ID + \"_\" + TestConstants.TEST_EXTRACT_PULL_TYPE;\n\n    properties = new State();\n    properties.setProp(ConfigurationKeys.WRITER_BUFFER_SIZE, ConfigurationKeys.DEFAULT_BUFFER_SIZE);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_SYSTEM_URI, TestConstants.TEST_FS_URI);\n    properties.setProp(ConfigurationKeys.WRITER_STAGING_DIR, TestConstants.TEST_STAGING_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR, TestConstants.TEST_OUTPUT_DIR);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_PATH, this.filePath);\n    properties.setProp(ConfigurationKeys.WRITER_FILE_NAME, TestConstants.TEST_FILE_NAME);\n\n    \r\n    this.writer = new AvroDataWriterBuilder().writeTo(Destination.of(Destination.DestinationType.HDFS, properties))\n        .writeInFormat(WriterOutputFormat.AVRO).withWriterId(TestConstants.TEST_WRITER_ID).withSchema(this.schema)\n        .withBranches(1).forBranch(0).build();\n  }\n","realPath":"gobblin-core/src/test/java/org/apache/gobblin/writer/AvroHdfsDataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"4ca12cffbe13c80c5acd5aaa3ee81eda22818b22","commitMessage":"@@@[GOBBLIN-1080] Add configuration to add schema creation time in converter\n\nCloses #2925 from ZihanLi58/GOBBLIN-1080-new\n","date":"2020-03-18 12:04:23","modifiedFileCount":"5","status":"M","submitter":"Zihan Li"}]
