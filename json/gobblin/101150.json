[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testCreate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE).\n            setRunImmediately(true))\n        .setProperties(new StringMap(flowProperties));\n\n    _client.createFlowConfig(flowConfig);\n  }\n","date":"2017-07-31 15:51:25","endLine":160,"groupId":"4522","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9a/c7d37ec491204c90c8a0f82d60ed7631d4836e.src","preCode":"  public void testCreate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE).\n            setRunImmediately(true))\n        .setProperties(new StringMap(flowProperties));\n\n    _client.createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testBadUpdate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1b\");\n    flowProperties.put(\"param2\", \"value2b\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_DUMMY_GROUP_NAME)\n        .setFlowName(TEST_DUMMY_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE))\n        .setProperties(new StringMap(flowProperties));\n\n    try {\n      _client.updateFlowConfig(flowConfig);\n    } catch (RestLiResponseException e) {\n      Assert.assertEquals(e.getStatus(), HttpStatus.S_404_NOT_FOUND.getCode());\n      return;\n    }\n\n    Assert.fail(\"Get should have raised a 404 error\");\n  }\n","date":"2017-07-31 15:51:25","endLine":290,"groupId":"4522","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBadUpdate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9a/c7d37ec491204c90c8a0f82d60ed7631d4836e.src","preCode":"  public void testBadUpdate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1b\");\n    flowProperties.put(\"param2\", \"value2b\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_DUMMY_GROUP_NAME)\n        .setFlowName(TEST_DUMMY_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE))\n        .setProperties(new StringMap(flowProperties));\n\n    try {\n      _client.updateFlowConfig(flowConfig);\n    } catch (RestLiResponseException e) {\n      Assert.assertEquals(e.getStatus(), HttpStatus.S_404_NOT_FOUND.getCode());\n      return;\n    }\n\n    Assert.fail(\"Get should have raised a 404 error\");\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-11-08 06:04:53","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void testCreate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE).\n            setRunImmediately(true))\n        .setProperties(new StringMap(flowProperties));\n\n    _client.createFlowConfig(flowConfig);\n  }\n","date":"2017-07-31 15:51:25","endLine":160,"groupId":"4522","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9a/c7d37ec491204c90c8a0f82d60ed7631d4836e.src","preCode":"  public void testCreate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE).\n            setRunImmediately(true))\n        .setProperties(new StringMap(flowProperties));\n\n    _client.createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"N"},{"authorDate":"2017-11-08 06:04:53","commitOrder":2,"curCode":"  public void testBadUpdate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1b\");\n    flowProperties.put(\"param2\", \"value2b\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_DUMMY_GROUP_NAME)\n        .setFlowName(TEST_DUMMY_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE))\n        .setProperties(new StringMap(flowProperties));\n\n    try {\n      _client.updateFlowConfig(flowConfig);\n    } catch (RestLiResponseException e) {\n      Assert.fail(\"Bad update should pass without complaining that the spec does not exists.\");\n    }\n  }\n","date":"2017-11-08 06:04:53","endLine":284,"groupId":"4522","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBadUpdate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a3/737626217a8866e5f575eba97599c449864acd.src","preCode":"  public void testBadUpdate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1b\");\n    flowProperties.put(\"param2\", \"value2b\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_DUMMY_GROUP_NAME)\n        .setFlowName(TEST_DUMMY_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE))\n        .setProperties(new StringMap(flowProperties));\n\n    try {\n      _client.updateFlowConfig(flowConfig);\n    } catch (RestLiResponseException e) {\n      Assert.assertEquals(e.getStatus(), HttpStatus.S_404_NOT_FOUND.getCode());\n      return;\n    }\n\n    Assert.fail(\"Get should have raised a 404 error\");\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"M"}],"commitId":"c385f1dddb0124f0ff2545d9a591f3b055f76080","commitMessage":"@@@[GOBBLIN-304] Change default version of flow specs to null.\n\nCloses #2159 from arjun4084346/removeSpecVersion\n","date":"2017-11-08 06:04:53","modifiedFileCount":"14","status":"M","submitter":"Arjun"},{"authorTime":"2020-02-29 03:22:08","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":3,"curCode":"  public void testCreate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE).\n            setRunImmediately(true))\n        .setProperties(new StringMap(flowProperties));\n\n    _client.createFlowConfig(flowConfig);\n  }\n","date":"2017-07-31 15:51:25","endLine":160,"groupId":"101150","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9a/c7d37ec491204c90c8a0f82d60ed7631d4836e.src","preCode":"  public void testCreate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE).\n            setRunImmediately(true))\n        .setProperties(new StringMap(flowProperties));\n\n    _client.createFlowConfig(flowConfig);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"N"},{"authorDate":"2020-02-29 03:22:08","commitOrder":3,"curCode":"  public void testBadUpdate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1b\");\n    flowProperties.put(\"param2\", \"value2b\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_DUMMY_GROUP_NAME)\n        .setFlowName(TEST_DUMMY_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE))\n        .setProperties(new StringMap(flowProperties));\n\n    try {\n      _client.updateFlowConfig(flowConfig);\n    } catch (RestLiResponseException e) {\n      Assert.assertEquals(e.getStatus(), HttpStatus.S_404_NOT_FOUND.getCode());\n      return;\n    }\n\n    Assert.fail(\"Update should have raised a 404 error\");\n  }\n","date":"2020-02-29 03:22:08","endLine":317,"groupId":"101150","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testBadUpdate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e0/14c83de0a580444e14d907d71cfc8f087f5b9a.src","preCode":"  public void testBadUpdate() throws Exception {\n    Map<String, String> flowProperties = Maps.newHashMap();\n    flowProperties.put(\"param1\", \"value1b\");\n    flowProperties.put(\"param2\", \"value2b\");\n\n    FlowConfig flowConfig = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_DUMMY_GROUP_NAME)\n        .setFlowName(TEST_DUMMY_FLOW_NAME))\n        .setTemplateUris(TEST_TEMPLATE_URI).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE))\n        .setProperties(new StringMap(flowProperties));\n\n    try {\n      _client.updateFlowConfig(flowConfig);\n    } catch (RestLiResponseException e) {\n      Assert.fail(\"Bad update should pass without complaining that the spec does not exists.\");\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"M"}],"commitId":"09f5043fbd3a90aa8f3b06a4b7d3bb2f94501db4","commitMessage":"@@@[GOBBLIN-1050] Verify requester when updating/deleting FlowConfig\n\nCloses #2890 from jack-moseley/check-requester\n","date":"2020-02-29 03:22:08","modifiedFileCount":"6","status":"M","submitter":"Jack Moseley"}]
