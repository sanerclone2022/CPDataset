[{"authorTime":"2018-03-22 08:57:27","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public static BasicDataSource newDataSource(Config config) {\n    BasicDataSource basicDataSource = new BasicDataSource();\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    basicDataSource.setDriverClassName(ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER));\n    \r\n    basicDataSource.setValidationQuery(\"select 1\");\n    basicDataSource.setTestOnBorrow(true);\n    basicDataSource.setDefaultAutoCommit(false);\n    basicDataSource.setTimeBetweenEvictionRunsMillis(60000);\n    basicDataSource.setUrl(config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY));\n    basicDataSource.setUsername(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY)));\n    basicDataSource.setPassword(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY)));\n    basicDataSource.setMinEvictableIdleTimeMillis(\n        ConfigUtils.getLong(config, ConfigurationKeys.STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME_KEY,\n            ConfigurationKeys.DEFAULT_STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME));\n\n    return basicDataSource;\n  }\n","date":"2017-07-31 15:51:25","endLine":177,"groupId":"4735","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newDataSource","params":"(Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3e/2b928727af6a50927a61166fac7cf07aad14ae.src","preCode":"  public static BasicDataSource newDataSource(Config config) {\n    BasicDataSource basicDataSource = new BasicDataSource();\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    basicDataSource.setDriverClassName(ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER));\n    \r\n    basicDataSource.setValidationQuery(\"select 1\");\n    basicDataSource.setTestOnBorrow(true);\n    basicDataSource.setDefaultAutoCommit(false);\n    basicDataSource.setTimeBetweenEvictionRunsMillis(60000);\n    basicDataSource.setUrl(config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY));\n    basicDataSource.setUsername(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY)));\n    basicDataSource.setPassword(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY)));\n    basicDataSource.setMinEvictableIdleTimeMillis(\n        ConfigUtils.getLong(config, ConfigurationKeys.STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME_KEY,\n            ConfigurationKeys.DEFAULT_STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME));\n\n    return basicDataSource;\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"NB"},{"authorDate":"2018-03-22 08:57:27","commitOrder":2,"curCode":"  public static String getDataSourceId(Config config) {\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    return ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER) + \"::\"\n        + config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY) + \"::\"\n        + passwordManager.readPassword(config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY));\n  }\n","date":"2018-03-22 08:57:27","endLine":191,"groupId":"3561","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDataSourceId","params":"(Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/ae6ffde74da3bd6731b9e0eeabdcb5e5f45bc2.src","preCode":"  public static String getDataSourceId(Config config) {\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    return ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER) + \"::\"\n        + config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY) + \"::\"\n        + passwordManager.readPassword(config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY));\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"}],"commitId":"60adccfd96a33d19cfac8af6e26dd837b8156f89","commitMessage":"@@@[GOBBLIN-432] Share the DataSource used by the MySQL state stores\n\nCloses #2311 from\nhtran1/mysql_state_store_share_data_source\n","date":"2018-03-22 08:57:27","modifiedFileCount":"3","status":"M","submitter":"Hung Tran"},{"authorTime":"2018-03-22 08:57:27","codes":[{"authorDate":"2021-08-10 04:08:24","commitOrder":3,"curCode":"  public static BasicDataSource newDataSource(Config config) {\n    BasicDataSource basicDataSource = new BasicDataSource();\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    basicDataSource.setDriverClassName(ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER));\n    \r\n    \r\n    \r\n    basicDataSource.setValidationQuery(\"select case when @@read_only = 0 then 1 else (select table_name from information_schema.tables) end as `1`\");\n    basicDataSource.setTestOnBorrow(true);\n    basicDataSource.setDefaultAutoCommit(false);\n    basicDataSource.setTimeBetweenEvictionRunsMillis(60000);\n    basicDataSource.setUrl(config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY));\n    basicDataSource.setUsername(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY)));\n    basicDataSource.setPassword(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY)));\n    basicDataSource.setMinEvictableIdleTimeMillis(\n        ConfigUtils.getLong(config, ConfigurationKeys.STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME_KEY,\n            ConfigurationKeys.DEFAULT_STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME));\n\n    return basicDataSource;\n  }\n","date":"2021-08-10 04:08:24","endLine":206,"groupId":"4735","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newDataSource","params":"(Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3b/54f42fbffbdd09109923c77f6c7d7b14caf619.src","preCode":"  public static BasicDataSource newDataSource(Config config) {\n    BasicDataSource basicDataSource = new BasicDataSource();\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    basicDataSource.setDriverClassName(ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER));\n    \r\n    basicDataSource.setValidationQuery(\"select 1\");\n    basicDataSource.setTestOnBorrow(true);\n    basicDataSource.setDefaultAutoCommit(false);\n    basicDataSource.setTimeBetweenEvictionRunsMillis(60000);\n    basicDataSource.setUrl(config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY));\n    basicDataSource.setUsername(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY)));\n    basicDataSource.setPassword(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY)));\n    basicDataSource.setMinEvictableIdleTimeMillis(\n        ConfigUtils.getLong(config, ConfigurationKeys.STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME_KEY,\n            ConfigurationKeys.DEFAULT_STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME));\n\n    return basicDataSource;\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2018-03-22 08:57:27","commitOrder":3,"curCode":"  public static String getDataSourceId(Config config) {\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    return ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER) + \"::\"\n        + config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY) + \"::\"\n        + passwordManager.readPassword(config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY));\n  }\n","date":"2018-03-22 08:57:27","endLine":191,"groupId":"3561","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getDataSourceId","params":"(Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/ae6ffde74da3bd6731b9e0eeabdcb5e5f45bc2.src","preCode":"  public static String getDataSourceId(Config config) {\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    return ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER) + \"::\"\n        + config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY) + \"::\"\n        + passwordManager.readPassword(config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY));\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"N"}],"commitId":"de94515d04ea615bdff86b306f34f5361e1725e6","commitMessage":"@@@[GOBBLIN-1503] Modify mysql validation query to fail if db is in read-only mode\n\nIf mysql db enters read-only mode due to a failover.  the connections need to be reset before writes will work. Currently the validation query is \"select 1\".  so it will not evict connections in read-only mode. This new query is taken from https://stackoverflow.com/questions/39552146/evicting-connections-to-a-read-only-node-in-a-cluster-from-the-connection-pool.  and should fail the validation if the db is read-only.  so connections will be retried.","date":"2021-08-10 04:08:24","modifiedFileCount":"1","status":"M","submitter":"Jack Moseley"},{"authorTime":"2018-03-22 08:57:27","codes":[{"authorDate":"2021-08-12 12:01:05","commitOrder":4,"curCode":"  public static BasicDataSource newDataSource(Config config) {\n    BasicDataSource basicDataSource = new BasicDataSource();\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    basicDataSource.setDriverClassName(ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER));\n    \r\n    basicDataSource.setValidationQuery(MysqlDataSourceUtils.QUERY_CONNECTION_IS_VALID_AND_NOT_READONLY);\n    basicDataSource.setTestOnBorrow(true);\n    basicDataSource.setDefaultAutoCommit(false);\n    basicDataSource.setTimeBetweenEvictionRunsMillis(60000);\n    basicDataSource.setUrl(config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY));\n    basicDataSource.setUsername(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY)));\n    basicDataSource.setPassword(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY)));\n    basicDataSource.setMinEvictableIdleTimeMillis(\n        ConfigUtils.getLong(config, ConfigurationKeys.STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME_KEY,\n            ConfigurationKeys.DEFAULT_STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME));\n\n    return basicDataSource;\n  }\n","date":"2021-08-12 12:01:05","endLine":205,"groupId":"101472","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newDataSource","params":"(Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3e/01344ab0f4d514bdd7781da3a372bf55024c26.src","preCode":"  public static BasicDataSource newDataSource(Config config) {\n    BasicDataSource basicDataSource = new BasicDataSource();\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    basicDataSource.setDriverClassName(ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER));\n    \r\n    \r\n    \r\n    basicDataSource.setValidationQuery(\"select case when @@read_only = 0 then 1 else (select table_name from information_schema.tables) end as `1`\");\n    basicDataSource.setTestOnBorrow(true);\n    basicDataSource.setDefaultAutoCommit(false);\n    basicDataSource.setTimeBetweenEvictionRunsMillis(60000);\n    basicDataSource.setUrl(config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY));\n    basicDataSource.setUsername(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY)));\n    basicDataSource.setPassword(passwordManager.readPassword(\n        config.getString(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY)));\n    basicDataSource.setMinEvictableIdleTimeMillis(\n        ConfigUtils.getLong(config, ConfigurationKeys.STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME_KEY,\n            ConfigurationKeys.DEFAULT_STATE_STORE_DB_CONN_MIN_EVICTABLE_IDLE_TIME));\n\n    return basicDataSource;\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2018-03-22 08:57:27","commitOrder":4,"curCode":"  public static String getDataSourceId(Config config) {\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    return ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER) + \"::\"\n        + config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY) + \"::\"\n        + passwordManager.readPassword(config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY));\n  }\n","date":"2018-03-22 08:57:27","endLine":191,"groupId":"101472","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getDataSourceId","params":"(Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/ae6ffde74da3bd6731b9e0eeabdcb5e5f45bc2.src","preCode":"  public static String getDataSourceId(Config config) {\n    PasswordManager passwordManager = PasswordManager.getInstance(ConfigUtils.configToProperties(config));\n\n    return ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_JDBC_DRIVER_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER) + \"::\"\n        + config.getString(ConfigurationKeys.STATE_STORE_DB_URL_KEY) + \"::\"\n        + passwordManager.readPassword(config.getString(ConfigurationKeys.STATE_STORE_DB_USER_KEY));\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"N"}],"commitId":"de3a6941d0d9ab0eeb1035a8d8ea04aaa65bf07e","commitMessage":"@@@[GOBBLIN-1457] Add persistence for troubleshooter in Gobblin service (#3327)\n\nPreviously.  Gobblin service kept the last few job issues in memory.\nIn this commit.  we add MySql-based persistence for job issues.\n\nWe also introduce Flyway-based migrations to Gobblin service DB.  so that\nwe can adjust the table schemas in the future.  and add new tables\nin a consistent way.","date":"2021-08-12 12:01:05","modifiedFileCount":"18","status":"M","submitter":"Alex Prokofiev"}]
