[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public Map<String, String> getMultiAsString(String fieldName) {\n    Map<String, Object> vals = getMultiAsObject(fieldName);\n    Map<String, String> ret = new HashMap<>();\n\n    for (Map.Entry<String, Object> entry : vals.entrySet()) {\n      Object val = entry.getValue();\n      String convertedVal = convertToString(entry.getKey(), val);\n\n      if (convertedVal != null) {\n        ret.put(entry.getKey(), convertedVal);\n      }\n    }\n\n    return ret;\n  }\n","date":"2017-07-31 15:51:25","endLine":64,"groupId":"3127","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getMultiAsString","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/1b5db16a5d5ef418f92648e8823b20bc785cc2.src","preCode":"  public Map<String, String> getMultiAsString(String fieldName) {\n    Map<String, Object> vals = getMultiAsObject(fieldName);\n    Map<String, String> ret = new HashMap<>();\n\n    for (Map.Entry<String, Object> entry : vals.entrySet()) {\n      Object val = entry.getValue();\n      String convertedVal = convertToString(entry.getKey(), val);\n\n      if (convertedVal != null) {\n        ret.put(entry.getKey(), convertedVal);\n      }\n    }\n\n    return ret;\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/recordaccess/AvroGenericRecordAccessor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public Map<String, Long> getMultiAsLong(String fieldName) {\n    Map<String, Object> vals = getMultiAsObject(fieldName);\n    Map<String, Long> ret = new HashMap<>();\n\n    for (Map.Entry<String, Object> entry : vals.entrySet()) {\n      Object val = entry.getValue();\n      Long convertedVal = convertToLong(entry.getKey(), val);\n\n      if (convertedVal != null) {\n        ret.put(entry.getKey(), convertedVal);\n      }\n    }\n\n    return ret;\n  }\n","date":"2017-07-31 15:51:25","endLine":123,"groupId":"3128","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getMultiAsLong","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/1b5db16a5d5ef418f92648e8823b20bc785cc2.src","preCode":"  public Map<String, Long> getMultiAsLong(String fieldName) {\n    Map<String, Object> vals = getMultiAsObject(fieldName);\n    Map<String, Long> ret = new HashMap<>();\n\n    for (Map.Entry<String, Object> entry : vals.entrySet()) {\n      Object val = entry.getValue();\n      Long convertedVal = convertToLong(entry.getKey(), val);\n\n      if (convertedVal != null) {\n        ret.put(entry.getKey(), convertedVal);\n      }\n    }\n\n    return ret;\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/recordaccess/AvroGenericRecordAccessor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2018-04-09 14:04:42","codes":[{"authorDate":"2018-04-09 14:04:42","commitOrder":2,"curCode":"  public Map<String, String> getMultiAsString(String fieldName) {\n    Map<String, Object> vals = getMultiGeneric(fieldName);\n    Map<String, String> ret = new HashMap<>();\n\n    for (Map.Entry<String, Object> entry : vals.entrySet()) {\n      Object val = entry.getValue();\n      String convertedVal = convertToString(entry.getKey(), val);\n\n      if (convertedVal != null) {\n        ret.put(entry.getKey(), convertedVal);\n      }\n    }\n\n    return ret;\n  }\n","date":"2018-04-09 14:04:42","endLine":66,"groupId":"101414","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getMultiAsString","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/62/0933dcbca42c0b4a575fa981c3dec9f532211b.src","preCode":"  public Map<String, String> getMultiAsString(String fieldName) {\n    Map<String, Object> vals = getMultiAsObject(fieldName);\n    Map<String, String> ret = new HashMap<>();\n\n    for (Map.Entry<String, Object> entry : vals.entrySet()) {\n      Object val = entry.getValue();\n      String convertedVal = convertToString(entry.getKey(), val);\n\n      if (convertedVal != null) {\n        ret.put(entry.getKey(), convertedVal);\n      }\n    }\n\n    return ret;\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/recordaccess/AvroGenericRecordAccessor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2018-04-09 14:04:42","commitOrder":2,"curCode":"  public Map<String, Long> getMultiAsLong(String fieldName) {\n    Map<String, Object> vals = getMultiGeneric(fieldName);\n    Map<String, Long> ret = new HashMap<>();\n\n    for (Map.Entry<String, Object> entry : vals.entrySet()) {\n      Object val = entry.getValue();\n      Long convertedVal = convertToLong(entry.getKey(), val);\n\n      if (convertedVal != null) {\n        ret.put(entry.getKey(), convertedVal);\n      }\n    }\n\n    return ret;\n  }\n","date":"2018-04-09 14:04:42","endLine":128,"groupId":"101414","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getMultiAsLong","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/62/0933dcbca42c0b4a575fa981c3dec9f532211b.src","preCode":"  public Map<String, Long> getMultiAsLong(String fieldName) {\n    Map<String, Object> vals = getMultiAsObject(fieldName);\n    Map<String, Long> ret = new HashMap<>();\n\n    for (Map.Entry<String, Object> entry : vals.entrySet()) {\n      Object val = entry.getValue();\n      Long convertedVal = convertToLong(entry.getKey(), val);\n\n      if (convertedVal != null) {\n        ret.put(entry.getKey(), convertedVal);\n      }\n    }\n\n    return ret;\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/recordaccess/AvroGenericRecordAccessor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"3323543b6cfb5e5cfbfbea85783a5976f3a76267","commitMessage":"@@@[GOBBLIN-459] Support encryption and decryption of strings + arrays of strings\n\nCloses #2330 from eogren/master\n","date":"2018-04-09 14:04:42","modifiedFileCount":"6","status":"M","submitter":"Eric Ogren"}]
