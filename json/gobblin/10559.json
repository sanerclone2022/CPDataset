[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    this.fsJobStateStore.put(TEST_JOB_NAME,\n        FsDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + FsDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","date":"2017-07-31 15:51:25","endLine":87,"groupId":"4059","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPersistJobState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8a/a9ca8d4bfecaaab6ea7f1cc2e75e432ee0f30b.src","preCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    this.fsJobStateStore.put(TEST_JOB_NAME,\n        FsDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + FsDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/FsDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void setUp() throws Exception {\n    testMetastoreDatabase = TestMetastoreDatabaseFactory.get();\n    String jdbcUrl = testMetastoreDatabase.getJdbcUrl();\n    ConfigBuilder configBuilder = ConfigBuilder.create();\n    BasicDataSource mySqlDs = new BasicDataSource();\n\n    mySqlDs.setDriverClassName(ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER);\n    mySqlDs.setDefaultAutoCommit(false);\n    mySqlDs.setUrl(jdbcUrl);\n    mySqlDs.setUsername(TEST_USER);\n    mySqlDs.setPassword(TEST_PASSWORD);\n\n    dbJobStateStore = new MysqlStateStore<>(mySqlDs, TEST_STATE_STORE, false, JobState.class);\n\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_URL_KEY, jdbcUrl);\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_USER_KEY, TEST_USER);\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY, TEST_PASSWORD);\n\n    ClassAliasResolver<DatasetStateStore.Factory> resolver =\n        new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    DatasetStateStore.Factory stateStoreFactory =\n          resolver.resolveClass(\"mysql\").newInstance();\n    dbDatasetStateStore = stateStoreFactory.createStateStore(configBuilder.build());\n\n    \r\n    dbJobStateStore.delete(TEST_JOB_NAME);\n    dbDatasetStateStore.delete(TEST_JOB_NAME);\n  }\n","date":"2017-07-31 15:51:25","endLine":87,"groupId":"617","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9c/3561018047b5c11b1899b9fdfce060484782a3.src","preCode":"  public void setUp() throws Exception {\n    testMetastoreDatabase = TestMetastoreDatabaseFactory.get();\n    String jdbcUrl = testMetastoreDatabase.getJdbcUrl();\n    ConfigBuilder configBuilder = ConfigBuilder.create();\n    BasicDataSource mySqlDs = new BasicDataSource();\n\n    mySqlDs.setDriverClassName(ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER);\n    mySqlDs.setDefaultAutoCommit(false);\n    mySqlDs.setUrl(jdbcUrl);\n    mySqlDs.setUsername(TEST_USER);\n    mySqlDs.setPassword(TEST_PASSWORD);\n\n    dbJobStateStore = new MysqlStateStore<>(mySqlDs, TEST_STATE_STORE, false, JobState.class);\n\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_URL_KEY, jdbcUrl);\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_USER_KEY, TEST_USER);\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY, TEST_PASSWORD);\n\n    ClassAliasResolver<DatasetStateStore.Factory> resolver =\n        new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    DatasetStateStore.Factory stateStoreFactory =\n          resolver.resolveClass(\"mysql\").newInstance();\n    dbDatasetStateStore = stateStoreFactory.createStateStore(configBuilder.build());\n\n    \r\n    dbJobStateStore.delete(TEST_JOB_NAME);\n    dbDatasetStateStore.delete(TEST_JOB_NAME);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/MysqlDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2018-03-30 02:27:20","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    this.fsJobStateStore.put(TEST_JOB_NAME,\n        FsDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + FsDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","date":"2017-07-31 15:51:25","endLine":87,"groupId":"10559","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPersistJobState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8a/a9ca8d4bfecaaab6ea7f1cc2e75e432ee0f30b.src","preCode":"  public void testPersistJobState() throws IOException {\n    JobState jobState = new JobState(TEST_JOB_NAME, TEST_JOB_ID);\n    jobState.setId(TEST_JOB_ID);\n    jobState.setProp(\"foo\", \"bar\");\n    jobState.setState(JobState.RunningState.COMMITTED);\n    jobState.setStartTime(this.startTime);\n    jobState.setEndTime(this.startTime + 1000);\n    jobState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      jobState.addTaskState(taskState);\n    }\n\n    this.fsJobStateStore.put(TEST_JOB_NAME,\n        FsDatasetStateStore.CURRENT_DATASET_STATE_FILE_SUFFIX + FsDatasetStateStore.DATASET_STATE_STORE_TABLE_SUFFIX,\n        jobState);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/FsDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2018-03-30 02:27:20","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    testMetastoreDatabase = TestMetastoreDatabaseFactory.get();\n    String jdbcUrl = testMetastoreDatabase.getJdbcUrl();\n    ConfigBuilder configBuilder = ConfigBuilder.create();\n    BasicDataSource mySqlDs = new BasicDataSource();\n\n    mySqlDs.setDriverClassName(ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER);\n    mySqlDs.setDefaultAutoCommit(false);\n    mySqlDs.setUrl(jdbcUrl);\n    mySqlDs.setUsername(TEST_USER);\n    mySqlDs.setPassword(TEST_PASSWORD);\n\n    dbJobStateStore = new MysqlStateStore<>(mySqlDs, TEST_STATE_STORE, false, JobState.class);\n\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_URL_KEY, jdbcUrl);\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_USER_KEY, TEST_USER);\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY, TEST_PASSWORD);\n\n    ClassAliasResolver<DatasetStateStore.Factory> resolver =\n        new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    DatasetStateStore.Factory stateStoreFactory =\n          resolver.resolveClass(\"mysql\").newInstance();\n    dbDatasetStateStore = stateStoreFactory.createStateStore(configBuilder.build());\n\n    \r\n    dbJobStateStore.delete(TEST_JOB_NAME);\n    dbDatasetStateStore.delete(TEST_JOB_NAME);\n    dbJobStateStore.delete(TEST_JOB_NAME2);\n    dbDatasetStateStore.delete(TEST_JOB_NAME2);\n  }\n","date":"2018-03-30 02:27:20","endLine":99,"groupId":"10559","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e8/ea281fe547f614d2164f9fdf7ed34f81890ff2.src","preCode":"  public void setUp() throws Exception {\n    testMetastoreDatabase = TestMetastoreDatabaseFactory.get();\n    String jdbcUrl = testMetastoreDatabase.getJdbcUrl();\n    ConfigBuilder configBuilder = ConfigBuilder.create();\n    BasicDataSource mySqlDs = new BasicDataSource();\n\n    mySqlDs.setDriverClassName(ConfigurationKeys.DEFAULT_STATE_STORE_DB_JDBC_DRIVER);\n    mySqlDs.setDefaultAutoCommit(false);\n    mySqlDs.setUrl(jdbcUrl);\n    mySqlDs.setUsername(TEST_USER);\n    mySqlDs.setPassword(TEST_PASSWORD);\n\n    dbJobStateStore = new MysqlStateStore<>(mySqlDs, TEST_STATE_STORE, false, JobState.class);\n\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_URL_KEY, jdbcUrl);\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_USER_KEY, TEST_USER);\n    configBuilder.addPrimitive(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY, TEST_PASSWORD);\n\n    ClassAliasResolver<DatasetStateStore.Factory> resolver =\n        new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    DatasetStateStore.Factory stateStoreFactory =\n          resolver.resolveClass(\"mysql\").newInstance();\n    dbDatasetStateStore = stateStoreFactory.createStateStore(configBuilder.build());\n\n    \r\n    dbJobStateStore.delete(TEST_JOB_NAME);\n    dbDatasetStateStore.delete(TEST_JOB_NAME);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/MysqlDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"7f55214e20610a2b99652e003af9a7c684da7e49","commitMessage":"@@@[GOBBLIN-446] Add support for migrating state for all jobs in a job store\n\nCloses #2321 from htran1/state_store_mig_all_jobs\n","date":"2018-03-30 02:27:20","modifiedFileCount":"10","status":"M","submitter":"Hung Tran"}]
