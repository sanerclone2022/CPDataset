[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      this.node1GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 1 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.node2GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 2 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.testingZKServer.close();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Testing Zookeeper\", e);\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_1_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_1_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Spec Store Parent Dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_2_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_2_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Spec Store Parent Dir\");\n    }\n\n    cleanUpDir(COMMON_SPEC_STORE_PARENT_DIR);\n  }\n","date":"2017-07-31 15:51:25","endLine":231,"groupId":"2579","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/01/d028567436c469107bb4a5215c1f0990069497.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      this.node1GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 1 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.node2GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 2 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.testingZKServer.close();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Testing Zookeeper\", e);\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_1_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_1_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Spec Store Parent Dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_2_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_2_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Spec Store Parent Dir\");\n    }\n\n    cleanUpDir(COMMON_SPEC_STORE_PARENT_DIR);\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GobblinServiceHATest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":182,"groupId":"4424","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/3dc152e12144db7e3eb4d6c62e722c2cdebafb.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2018-05-17 02:40:22","commitOrder":2,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad1\");\n      this.node1GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 1 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad2\");\n      this.node2GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 2 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.testingZKServer.close();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Testing Zookeeper\", e);\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_1_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_1_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Spec Store Parent Dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_2_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_2_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Spec Store Parent Dir\");\n    }\n\n    cleanUpDir(COMMON_SPEC_STORE_PARENT_DIR);\n  }\n","date":"2018-05-17 02:40:22","endLine":239,"groupId":"2579","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2b/4332fb6b1dc8ada72e6d2bf685a064b33be3b3.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      this.node1GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 1 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.node2GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 2 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.testingZKServer.close();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Testing Zookeeper\", e);\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_1_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_1_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Spec Store Parent Dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_2_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_2_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Spec Store Parent Dir\");\n    }\n\n    cleanUpDir(COMMON_SPEC_STORE_PARENT_DIR);\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GobblinServiceHATest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":182,"groupId":"4424","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/3dc152e12144db7e3eb4d6c62e722c2cdebafb.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"N"}],"commitId":"01302a6db2c468507c0adea5daa69de997aaf14b","commitMessage":"@@@[GOBBLIN-458] Refactor flowConfig resource handler\n\nCloses #2329 from yukuai518/delete\n","date":"2018-05-17 02:40:22","modifiedFileCount":"9","status":"M","submitter":"Kuai Yu"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2021-08-12 12:01:05","commitOrder":3,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad1\");\n      this.node1GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 1 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad2\");\n      this.node2GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 2 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.testingZKServer.close();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Testing Zookeeper\", e);\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_1_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_1_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Spec Store Parent Dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_2_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_2_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Spec Store Parent Dir\");\n    }\n\n    cleanUpDir(COMMON_SPEC_STORE_PARENT_DIR);\n\n    mysql.stop();\n  }\n","date":"2021-08-12 12:01:05","endLine":254,"groupId":"101106","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3a/03be76dc7431eec70ce03909a506ad769fb9b6.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad1\");\n      this.node1GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 1 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      logger.info(\"+++++++++++++++++++ start shutdown noad2\");\n      this.node2GobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Node 2 of Gobblin Service\", e);\n    }\n\n    \r\n    try {\n      this.testingZKServer.close();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Testing Zookeeper\", e);\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_1_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_1_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 1 Spec Store Parent Dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(NODE_2_SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Work Dir\");\n    }\n    try {\n      cleanUpDir(NODE_2_SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Node 2 Spec Store Parent Dir\");\n    }\n\n    cleanUpDir(COMMON_SPEC_STORE_PARENT_DIR);\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GobblinServiceHATest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":3,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":182,"groupId":"101106","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/3dc152e12144db7e3eb4d6c62e722c2cdebafb.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"N"}],"commitId":"de3a6941d0d9ab0eeb1035a8d8ea04aaa65bf07e","commitMessage":"@@@[GOBBLIN-1457] Add persistence for troubleshooter in Gobblin service (#3327)\n\nPreviously.  Gobblin service kept the last few job issues in memory.\nIn this commit.  we add MySql-based persistence for job issues.\n\nWe also introduce Flyway-based migrations to Gobblin service DB.  so that\nwe can adjust the table schemas in the future.  and add new tables\nin a consistent way.","date":"2021-08-12 12:01:05","modifiedFileCount":"18","status":"M","submitter":"Alex Prokofiev"}]
