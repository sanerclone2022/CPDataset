[{"authorTime":"2018-10-03 00:23:34","codes":[{"authorDate":"2019-04-25 04:04:38","commitOrder":3,"curCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"TopologyCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n  }\n","date":"2019-04-25 04:04:38","endLine":85,"groupId":"6344","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/42/54b0439adbb36fed31033fe5d965c280727828.src","preCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"TopologyCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_catalog/TopologyCatalogTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2018-10-03 00:23:34","commitOrder":3,"curCode":"  public void setup() throws Exception {\n    cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    cleanUpDir(FLOW_SPEC_STORE_DIR);\n\n    Properties orchestratorProperties = new Properties();\n\n    Properties topologyProperties = new Properties();\n    topologyProperties.put(\"specStore.fs.dir\", TOPOLOGY_SPEC_STORE_DIR);\n\n    Properties flowProperties = new Properties();\n    flowProperties.put(\"specStore.fs.dir\", FLOW_SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(orchestratorProperties, \"OrchestratorCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(topologyProperties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(flowProperties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(flowCatalog);\n\n    this.orchestrator = new Orchestrator(ConfigUtils.propertiesToConfig(orchestratorProperties),\n        Optional.of(this.topologyCatalog), Optional.<DagManager>absent(), Optional.of(logger));\n    this.topologyCatalog.addListener(orchestrator);\n    this.flowCatalog.addListener(orchestrator);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n    this.flowSpec = initFlowSpec();\n  }\n","date":"2018-10-03 00:23:34","endLine":108,"groupId":"3344","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/bd/acbb8e30c0fb160161c59d6c37a5493998d356.src","preCode":"  public void setup() throws Exception {\n    cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    cleanUpDir(FLOW_SPEC_STORE_DIR);\n\n    Properties orchestratorProperties = new Properties();\n\n    Properties topologyProperties = new Properties();\n    topologyProperties.put(\"specStore.fs.dir\", TOPOLOGY_SPEC_STORE_DIR);\n\n    Properties flowProperties = new Properties();\n    flowProperties.put(\"specStore.fs.dir\", FLOW_SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(orchestratorProperties, \"OrchestratorCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(topologyProperties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(flowProperties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(flowCatalog);\n\n    this.orchestrator = new Orchestrator(ConfigUtils.propertiesToConfig(orchestratorProperties),\n        Optional.of(this.topologyCatalog), Optional.<DagManager>absent(), Optional.of(logger));\n    this.topologyCatalog.addListener(orchestrator);\n    this.flowCatalog.addListener(orchestrator);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n    this.flowSpec = initFlowSpec();\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/OrchestratorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"NB"}],"commitId":"d972f72edf359b1348554ba9948f4942ea0c8c69","commitMessage":"@@@[GOBBLIN-746] Async loading FlowSpec\n\nDear Gobblin maintainers. \n\nPlease accept this PR. I understand that it will\nnot be reviewed until I have checked off all the\nsteps below!\n\nThis PR contains:\n- Change `SpecStore` interface to add listing-like\nmethods.  returning an iterator of all `Spec`s it\ncontains.\n- Loading and scheduling `FlowSpec` in\n`GobblinServiceJobScheduler` asynchronously and\nnotifying the completeness using a countdownlatch.\n- Add unit tests for `FSSpecStore` and\n`GobblinServiceJobScheduler`.\n\n\n JIRA\n- [x] My PR addresses the following [Gobblin JIRA]\n    -\nhttps://issues.apache.org/jira/browse/GOBBLIN-746\n\n\n Description\n- [x] Here are some details about my PR.  including\nscreenshots (if applicable):\n\n\n Tests\n- [x] My PR adds the following unit tests __OR__\ndoes not need testing for this extremely good\nreason:\n\n\n Commits\n- [x] My commits all reference JIRA issues in\ntheir subject lines.  and I have squashed multiple\ncommits if they address the same issue. In\naddition.  my commits follow the guidelines from\n\"[How to write a good git commit\nmessage](http://chris.beams.io/posts/git-\ncommit/)\":\n    1. Subject is separated from body by a blank line\n    2. Subject is limited to 50 characters\n    3. Subject does not end with a period\n    4. Subject uses the imperative mood (\"add\".  not\n\"adding\")\n    5. Body wraps at 72 characters\n    6. Body explains \"what\" and \"why\".  not \"how\"\n\nAdd method in specStore to return an iterator of\nSpec URI\n\nAdd async loading and unit test\n\nFix fingbusMain\n\nAddress comments and fix travis failure\n\nCloses #2611 from autumnust/asyncLoadingFlowSpec\n","date":"2019-04-25 04:04:38","modifiedFileCount":"6","status":"M","submitter":"autumnust"},{"authorTime":"2021-06-05 06:46:57","codes":[{"authorDate":"2019-04-25 04:04:38","commitOrder":4,"curCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"TopologyCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n  }\n","date":"2019-04-25 04:04:38","endLine":85,"groupId":"6344","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/42/54b0439adbb36fed31033fe5d965c280727828.src","preCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"TopologyCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_catalog/TopologyCatalogTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2021-06-05 06:46:57","commitOrder":4,"curCode":"  public void setup() throws Exception {\n    cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    cleanUpDir(FLOW_SPEC_STORE_DIR);\n\n    Properties orchestratorProperties = new Properties();\n\n    Properties topologyProperties = new Properties();\n    topologyProperties.put(\"specStore.fs.dir\", TOPOLOGY_SPEC_STORE_DIR);\n\n    Properties flowProperties = new Properties();\n    flowProperties.put(\"specStore.fs.dir\", FLOW_SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(orchestratorProperties, \"OrchestratorCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(topologyProperties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(flowProperties),\n        Optional.of(logger));\n\n    this.mockListener = mock(SpecCatalogListener.class);\n    when(mockListener.getName()).thenReturn(ServiceConfigKeys.GOBBLIN_SERVICE_JOB_SCHEDULER_LISTENER_CLASS);\n    when(mockListener.onAddSpec(any())).thenReturn(new AddSpecResponse(\"\"));\n\n    this.flowCatalog.addListener(mockListener);\n    this.serviceLauncher.addService(flowCatalog);\n\n    this.orchestrator = new Orchestrator(ConfigUtils.propertiesToConfig(orchestratorProperties),\n        Optional.of(this.topologyCatalog), Optional.<DagManager>absent(), Optional.of(logger));\n    this.topologyCatalog.addListener(orchestrator);\n    this.flowCatalog.addListener(orchestrator);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n    this.flowSpec = initFlowSpec();\n  }\n","date":"2021-06-05 06:46:57","endLine":121,"groupId":"6344","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/70/87c1e5df83227e6c36ddffe2c0c17c79bec65b.src","preCode":"  public void setup() throws Exception {\n    cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    cleanUpDir(FLOW_SPEC_STORE_DIR);\n\n    Properties orchestratorProperties = new Properties();\n\n    Properties topologyProperties = new Properties();\n    topologyProperties.put(\"specStore.fs.dir\", TOPOLOGY_SPEC_STORE_DIR);\n\n    Properties flowProperties = new Properties();\n    flowProperties.put(\"specStore.fs.dir\", FLOW_SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(orchestratorProperties, \"OrchestratorCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(topologyProperties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(flowProperties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(flowCatalog);\n\n    this.orchestrator = new Orchestrator(ConfigUtils.propertiesToConfig(orchestratorProperties),\n        Optional.of(this.topologyCatalog), Optional.<DagManager>absent(), Optional.of(logger));\n    this.topologyCatalog.addListener(orchestrator);\n    this.flowCatalog.addListener(orchestrator);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n    this.flowSpec = initFlowSpec();\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/OrchestratorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"381b659d3da7a241d6f038696396e6bba690120e","commitMessage":"@@@[GOBBLIN-1453] Improve error reporting on failed flow compilations and fix bugs wher?\n\nCloses #3291 from Will-Lo/modify-flow-compilation-\nerror-reporting\n","date":"2021-06-05 06:46:57","modifiedFileCount":"11","status":"M","submitter":"William Lo"},{"authorTime":"2021-06-09 01:31:08","codes":[{"authorDate":"2019-04-25 04:04:38","commitOrder":5,"curCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"TopologyCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n  }\n","date":"2019-04-25 04:04:38","endLine":85,"groupId":"10736","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/42/54b0439adbb36fed31033fe5d965c280727828.src","preCode":"  public void setup() throws Exception {\n    File specStoreDir = new File(SPEC_STORE_DIR);\n    if (specStoreDir.exists()) {\n      FileUtils.deleteDirectory(specStoreDir);\n    }\n\n    Properties properties = new Properties();\n    properties.put(\"specStore.fs.dir\", SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(properties, \"TopologyCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_catalog/TopologyCatalogTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2021-06-09 01:31:08","commitOrder":5,"curCode":"  public void setup() throws Exception {\n    cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    cleanUpDir(FLOW_SPEC_STORE_DIR);\n\n    Properties orchestratorProperties = new Properties();\n\n    Properties topologyProperties = new Properties();\n    topologyProperties.put(\"specStore.fs.dir\", TOPOLOGY_SPEC_STORE_DIR);\n\n    Properties flowProperties = new Properties();\n    flowProperties.put(\"specStore.fs.dir\", FLOW_SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(orchestratorProperties, \"OrchestratorCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(topologyProperties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(flowProperties),\n        Optional.of(logger));\n\n    this.mockListener = mock(SpecCatalogListener.class);\n    when(mockListener.getName()).thenReturn(ServiceConfigKeys.GOBBLIN_SERVICE_JOB_SCHEDULER_LISTENER_CLASS);\n    when(mockListener.onAddSpec(any())).thenReturn(new AddSpecResponse(\"\"));\n\n    this.flowCatalog.addListener(mockListener);\n    this.serviceLauncher.addService(flowCatalog);\n\n    this.orchestrator = new Orchestrator(ConfigUtils.propertiesToConfig(orchestratorProperties),\n        mock(FlowStatusGenerator.class),\n        Optional.of(this.topologyCatalog), Optional.<DagManager>absent(), Optional.of(logger));\n    this.topologyCatalog.addListener(orchestrator);\n    this.flowCatalog.addListener(orchestrator);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n    this.flowSpec = initFlowSpec();\n  }\n","date":"2021-06-09 01:31:08","endLine":124,"groupId":"10736","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/68/9bfa2a185323dcbc0b0b98ada8128bfdfaf4d6.src","preCode":"  public void setup() throws Exception {\n    cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    cleanUpDir(FLOW_SPEC_STORE_DIR);\n\n    Properties orchestratorProperties = new Properties();\n\n    Properties topologyProperties = new Properties();\n    topologyProperties.put(\"specStore.fs.dir\", TOPOLOGY_SPEC_STORE_DIR);\n\n    Properties flowProperties = new Properties();\n    flowProperties.put(\"specStore.fs.dir\", FLOW_SPEC_STORE_DIR);\n\n    this.serviceLauncher = new ServiceBasedAppLauncher(orchestratorProperties, \"OrchestratorCatalogTest\");\n\n    this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(topologyProperties),\n        Optional.of(logger));\n    this.serviceLauncher.addService(topologyCatalog);\n\n    this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(flowProperties),\n        Optional.of(logger));\n\n    this.mockListener = mock(SpecCatalogListener.class);\n    when(mockListener.getName()).thenReturn(ServiceConfigKeys.GOBBLIN_SERVICE_JOB_SCHEDULER_LISTENER_CLASS);\n    when(mockListener.onAddSpec(any())).thenReturn(new AddSpecResponse(\"\"));\n\n    this.flowCatalog.addListener(mockListener);\n    this.serviceLauncher.addService(flowCatalog);\n\n    this.orchestrator = new Orchestrator(ConfigUtils.propertiesToConfig(orchestratorProperties),\n        Optional.of(this.topologyCatalog), Optional.<DagManager>absent(), Optional.of(logger));\n    this.topologyCatalog.addListener(orchestrator);\n    this.flowCatalog.addListener(orchestrator);\n\n    \r\n    this.serviceLauncher.start();\n\n    \r\n    this.topologySpec = initTopologySpec();\n    this.flowSpec = initFlowSpec();\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/OrchestratorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"bf37c76f6da228ae96b0c405d184617f03d2c198","commitMessage":"@@@[GOBBLIN-1444] Use Guice as DI framework in Gobblin service\n\nPreviously.  to initialize Gobblin service.  we used\na mixture\nof dependency injection.  direct class creation and\nconfig-based\nclass creation. In this change.  we unify the\nservice initialization\nby moving towards using dependency injection(DI)\nwith Guice everywhere.\n\nUsing DI will help with (1) unit testing; (2)\noverriding classes in the\nmiddle of the dependency with company-specific\nimplementations.  and\n(3) will improve code readability.  as dependencies\nbetween classes\nbecome visible from the outside and explicit.\n\nWe also move away from name-based injection for\nclasses. Name-based\ninjection is useful when code needs several\ndifferent implementations\nof the same interface. In our use case.  we had\nonly one implementation\nfor each service that can be active. Name-based\ninjection was used for\ncompany-specific overrides.  but there is a better\nway to do it - with\nGuice module overrides.\n\nThere are still several improvements left to be\ndone to have a full\nGuice migration.  but we'll make them in separate\ncommits to limit the\nPR size.\n\nCloses #3281 from aplex/guice-migration\n","date":"2021-06-09 01:31:08","modifiedFileCount":"37","status":"M","submitter":"aprokofiev"}]
