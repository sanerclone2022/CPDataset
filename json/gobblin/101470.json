[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void put(String storeName, String tableName, T state) throws IOException {\n    String tmpTableName = this.useTmpFileForPut ? TMP_FILE_PREFIX + tableName : tableName;\n    Path tmpTablePath = new Path(new Path(this.storeRootDir, storeName), tmpTableName);\n\n    if (!this.fs.exists(tmpTablePath) && !create(storeName, tmpTableName)) {\n      throw new IOException(\"Failed to create a state file for table \" + tmpTableName);\n    }\n\n    Closer closer = Closer.create();\n    try {\n      @SuppressWarnings(\"deprecation\")\n      SequenceFile.Writer writer = closer.register(SequenceFile.createWriter(this.fs, this.conf, tmpTablePath,\n          Text.class, this.stateClass, SequenceFile.CompressionType.BLOCK, new DefaultCodec()));\n      writer.append(new Text(Strings.nullToEmpty(state.getId())), state);\n    } catch (Throwable t) {\n      throw closer.rethrow(t);\n    } finally {\n      closer.close();\n    }\n\n    if (this.useTmpFileForPut) {\n      Path tablePath = new Path(new Path(this.storeRootDir, storeName), tableName);\n      HadoopUtils.renamePath(this.fs, tmpTablePath, tablePath);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":178,"groupId":"5344","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(StringstoreName@StringtableName@Tstate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/96/c3e51a6c4d3b536782172e445a442d763b8a05.src","preCode":"  public void put(String storeName, String tableName, T state) throws IOException {\n    String tmpTableName = this.useTmpFileForPut ? TMP_FILE_PREFIX + tableName : tableName;\n    Path tmpTablePath = new Path(new Path(this.storeRootDir, storeName), tmpTableName);\n\n    if (!this.fs.exists(tmpTablePath) && !create(storeName, tmpTableName)) {\n      throw new IOException(\"Failed to create a state file for table \" + tmpTableName);\n    }\n\n    Closer closer = Closer.create();\n    try {\n      @SuppressWarnings(\"deprecation\")\n      SequenceFile.Writer writer = closer.register(SequenceFile.createWriter(this.fs, this.conf, tmpTablePath,\n          Text.class, this.stateClass, SequenceFile.CompressionType.BLOCK, new DefaultCodec()));\n      writer.append(new Text(Strings.nullToEmpty(state.getId())), state);\n    } catch (Throwable t) {\n      throw closer.rethrow(t);\n    } finally {\n      closer.close();\n    }\n\n    if (this.useTmpFileForPut) {\n      Path tablePath = new Path(new Path(this.storeRootDir, storeName), tableName);\n      HadoopUtils.renamePath(this.fs, tmpTablePath, tablePath);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/FsStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    String tmpTableName = this.useTmpFileForPut ? TMP_FILE_PREFIX + tableName : tableName;\n    Path tmpTablePath = new Path(new Path(this.storeRootDir, storeName), tmpTableName);\n\n    if (!this.fs.exists(tmpTablePath) && !create(storeName, tmpTableName)) {\n      throw new IOException(\"Failed to create a state file for table \" + tmpTableName);\n    }\n\n    Closer closer = Closer.create();\n    try {\n      @SuppressWarnings(\"deprecation\")\n      SequenceFile.Writer writer = closer.register(SequenceFile.createWriter(this.fs, this.conf, tmpTablePath,\n          Text.class, this.stateClass, SequenceFile.CompressionType.BLOCK, new DefaultCodec()));\n      for (T state : states) {\n        writer.append(new Text(Strings.nullToEmpty(state.getId())), state);\n      }\n    } catch (Throwable t) {\n      throw closer.rethrow(t);\n    } finally {\n      closer.close();\n    }\n\n    if (this.useTmpFileForPut) {\n      Path tablePath = new Path(new Path(this.storeRootDir, storeName), tableName);\n      HadoopUtils.renamePath(this.fs, tmpTablePath, tablePath);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":215,"groupId":"4896","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"putAll","params":"(StringstoreName@StringtableName@Collection<T>states)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/96/c3e51a6c4d3b536782172e445a442d763b8a05.src","preCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    String tmpTableName = this.useTmpFileForPut ? TMP_FILE_PREFIX + tableName : tableName;\n    Path tmpTablePath = new Path(new Path(this.storeRootDir, storeName), tmpTableName);\n\n    if (!this.fs.exists(tmpTablePath) && !create(storeName, tmpTableName)) {\n      throw new IOException(\"Failed to create a state file for table \" + tmpTableName);\n    }\n\n    Closer closer = Closer.create();\n    try {\n      @SuppressWarnings(\"deprecation\")\n      SequenceFile.Writer writer = closer.register(SequenceFile.createWriter(this.fs, this.conf, tmpTablePath,\n          Text.class, this.stateClass, SequenceFile.CompressionType.BLOCK, new DefaultCodec()));\n      for (T state : states) {\n        writer.append(new Text(Strings.nullToEmpty(state.getId())), state);\n      }\n    } catch (Throwable t) {\n      throw closer.rethrow(t);\n    } finally {\n      closer.close();\n    }\n\n    if (this.useTmpFileForPut) {\n      Path tablePath = new Path(new Path(this.storeRootDir, storeName), tableName);\n      HadoopUtils.renamePath(this.fs, tmpTablePath, tablePath);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/FsStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2019-02-06 02:03:42","codes":[{"authorDate":"2019-02-06 02:03:42","commitOrder":2,"curCode":"  public void put(String storeName, String tableName, T state) throws IOException {\n    String tmpTableName = this.useTmpFileForPut ? TMP_FILE_PREFIX + tableName : tableName;\n    Path tmpTablePath = new Path(new Path(this.storeRootDir, storeName), tmpTableName);\n\n    if (!this.fs.exists(tmpTablePath) && !create(storeName, tmpTableName)) {\n      throw new IOException(\"Failed to create a state file for table \" + tmpTableName);\n    }\n\n    Closer closer = Closer.create();\n    try {\n      @SuppressWarnings(\"deprecation\")\n      SequenceFile.Writer writer = closer.register(SequenceFile.createWriter(this.fs, this.conf, tmpTablePath,\n          Text.class, this.stateClass, SequenceFile.CompressionType.BLOCK, new DefaultCodec()));\n      writer.append(new Text(Strings.nullToEmpty(state.getId())), state);\n    } catch (Throwable t) {\n      throw closer.rethrow(t);\n    } finally {\n      closer.close();\n    }\n\n    if (this.useTmpFileForPut) {\n      Path tablePath = new Path(new Path(this.storeRootDir, storeName), tableName);\n      renamePath(tmpTablePath, tablePath);\n    }\n  }\n","date":"2019-02-06 02:03:42","endLine":180,"groupId":"101470","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(StringstoreName@StringtableName@Tstate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/34/c0b8f8d123686fac193eb0d9f8d5d317c43fcb.src","preCode":"  public void put(String storeName, String tableName, T state) throws IOException {\n    String tmpTableName = this.useTmpFileForPut ? TMP_FILE_PREFIX + tableName : tableName;\n    Path tmpTablePath = new Path(new Path(this.storeRootDir, storeName), tmpTableName);\n\n    if (!this.fs.exists(tmpTablePath) && !create(storeName, tmpTableName)) {\n      throw new IOException(\"Failed to create a state file for table \" + tmpTableName);\n    }\n\n    Closer closer = Closer.create();\n    try {\n      @SuppressWarnings(\"deprecation\")\n      SequenceFile.Writer writer = closer.register(SequenceFile.createWriter(this.fs, this.conf, tmpTablePath,\n          Text.class, this.stateClass, SequenceFile.CompressionType.BLOCK, new DefaultCodec()));\n      writer.append(new Text(Strings.nullToEmpty(state.getId())), state);\n    } catch (Throwable t) {\n      throw closer.rethrow(t);\n    } finally {\n      closer.close();\n    }\n\n    if (this.useTmpFileForPut) {\n      Path tablePath = new Path(new Path(this.storeRootDir, storeName), tableName);\n      HadoopUtils.renamePath(this.fs, tmpTablePath, tablePath);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/FsStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2019-02-06 02:03:42","commitOrder":2,"curCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    String tmpTableName = this.useTmpFileForPut ? TMP_FILE_PREFIX + tableName : tableName;\n    Path tmpTablePath = new Path(new Path(this.storeRootDir, storeName), tmpTableName);\n\n    if (!this.fs.exists(tmpTablePath) && !create(storeName, tmpTableName)) {\n      throw new IOException(\"Failed to create a state file for table \" + tmpTableName);\n    }\n\n    Closer closer = Closer.create();\n    try {\n      @SuppressWarnings(\"deprecation\")\n      SequenceFile.Writer writer = closer.register(SequenceFile.createWriter(this.fs, this.conf, tmpTablePath,\n          Text.class, this.stateClass, SequenceFile.CompressionType.BLOCK, new DefaultCodec()));\n      for (T state : states) {\n        writer.append(new Text(Strings.nullToEmpty(state.getId())), state);\n      }\n    } catch (Throwable t) {\n      throw closer.rethrow(t);\n    } finally {\n      closer.close();\n    }\n\n    if (this.useTmpFileForPut) {\n      Path tablePath = new Path(new Path(this.storeRootDir, storeName), tableName);\n      renamePath(tmpTablePath, tablePath);\n    }\n  }\n","date":"2019-02-06 02:03:42","endLine":217,"groupId":"101470","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"putAll","params":"(StringstoreName@StringtableName@Collection<T>states)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/34/c0b8f8d123686fac193eb0d9f8d5d317c43fcb.src","preCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    String tmpTableName = this.useTmpFileForPut ? TMP_FILE_PREFIX + tableName : tableName;\n    Path tmpTablePath = new Path(new Path(this.storeRootDir, storeName), tmpTableName);\n\n    if (!this.fs.exists(tmpTablePath) && !create(storeName, tmpTableName)) {\n      throw new IOException(\"Failed to create a state file for table \" + tmpTableName);\n    }\n\n    Closer closer = Closer.create();\n    try {\n      @SuppressWarnings(\"deprecation\")\n      SequenceFile.Writer writer = closer.register(SequenceFile.createWriter(this.fs, this.conf, tmpTablePath,\n          Text.class, this.stateClass, SequenceFile.CompressionType.BLOCK, new DefaultCodec()));\n      for (T state : states) {\n        writer.append(new Text(Strings.nullToEmpty(state.getId())), state);\n      }\n    } catch (Throwable t) {\n      throw closer.rethrow(t);\n    } finally {\n      closer.close();\n    }\n\n    if (this.useTmpFileForPut) {\n      Path tablePath = new Path(new Path(this.storeRootDir, storeName), tableName);\n      HadoopUtils.renamePath(this.fs, tmpTablePath, tablePath);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/FsStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"}],"commitId":"9040c7a7e8215fbdd3f3840a0ca39dd4eea4ee4f","commitMessage":"@@@[GOBBLIN-673] Implement a FS based JobStatusRetriever for GaaS Flows.\n\nCloses #2545 from sv2000/kafkaTracking\n","date":"2019-02-06 02:03:42","modifiedFileCount":"7","status":"M","submitter":"suvasude"}]
