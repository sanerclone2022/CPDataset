[{"authorTime":"2018-03-22 08:57:27","codes":[{"authorDate":"2019-04-11 02:59:27","commitOrder":3,"curCode":"  public <T extends State> MysqlJobStatusStateStore<T> createStateStore(Config config, Class<T> stateClass) {\n    String stateStoreTableName = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_TABLE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_TABLE);\n    boolean compressedValues = ConfigUtils.getBoolean(config, ConfigurationKeys.STATE_STORE_COMPRESSED_VALUES_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_COMPRESSED_VALUES);\n\n    try {\n      BasicDataSource basicDataSource = MysqlDataSourceFactory.get(config,\n          SharedResourcesBrokerFactory.getImplicitBroker());\n\n      return new MysqlJobStatusStateStore(basicDataSource, stateStoreTableName, compressedValues, stateClass);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create MysqlStateStore with factory\", e);\n    }\n  }\n","date":"2019-04-11 02:59:27","endLine":46,"groupId":"2405","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createStateStore","params":"(Configconfig@Class<T>stateClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f5/7104638aeb6ca161e09dfd117a08acdf98eac4.src","preCode":"  public <T extends State> MysqlJobStatusStateStore<T> createStateStore(Config config, Class<T> stateClass) {\n    String stateStoreTableName = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_TABLE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_TABLE);\n    boolean compressedValues = ConfigUtils.getBoolean(config, ConfigurationKeys.STATE_STORE_COMPRESSED_VALUES_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_COMPRESSED_VALUES);\n\n    try {\n      BasicDataSource basicDataSource = MysqlDataSourceFactory.get(config,\n          SharedResourcesBrokerFactory.getImplicitBroker());\n\n      return new MysqlJobStatusStateStore(basicDataSource, stateStoreTableName, compressedValues, stateClass);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create MysqlStateStore with factory\", e);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlJobStatusStateStoreFactory.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"B"},{"authorDate":"2018-03-22 08:57:27","commitOrder":3,"curCode":"  public <T extends State> StateStore<T> createStateStore(Config config, Class<T> stateClass) {\n    String stateStoreTableName = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_TABLE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_TABLE);\n    boolean compressedValues = ConfigUtils.getBoolean(config, ConfigurationKeys.STATE_STORE_COMPRESSED_VALUES_KEY,\n            ConfigurationKeys.DEFAULT_STATE_STORE_COMPRESSED_VALUES);\n\n    try {\n      BasicDataSource basicDataSource = MysqlDataSourceFactory.get(config,\n          SharedResourcesBrokerFactory.getImplicitBroker());\n\n      return new MysqlStateStore(basicDataSource, stateStoreTableName, compressedValues, stateClass);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create MysqlStateStore with factory\", e);\n    }\n  }\n","date":"2018-03-22 08:57:27","endLine":46,"groupId":"2405","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createStateStore","params":"(Configconfig@Class<T>stateClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/4a/f373024197b065fa82ffdcf0f396e734204b77.src","preCode":"  public <T extends State> StateStore<T> createStateStore(Config config, Class<T> stateClass) {\n    String stateStoreTableName = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_TABLE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_TABLE);\n    boolean compressedValues = ConfigUtils.getBoolean(config, ConfigurationKeys.STATE_STORE_COMPRESSED_VALUES_KEY,\n            ConfigurationKeys.DEFAULT_STATE_STORE_COMPRESSED_VALUES);\n\n    try {\n      BasicDataSource basicDataSource = MysqlDataSourceFactory.get(config,\n          SharedResourcesBrokerFactory.getImplicitBroker());\n\n      return new MysqlStateStore(basicDataSource, stateStoreTableName, compressedValues, stateClass);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create MysqlStateStore with factory\", e);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStoreFactory.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"NB"}],"commitId":"b28ddaf16948dd270b43ac2fc2b27824d4b6a5f8","commitMessage":"@@@[GOBBLIN-725] add a mysql based job status retriever\n\nCloses #2592 from\narjun4084346/jobstatusstoretomysql\n","date":"2019-04-11 02:59:27","modifiedFileCount":"12","status":"M","submitter":"Arjun"},{"authorTime":"2020-04-09 02:53:04","codes":[{"authorDate":"2020-04-09 02:53:04","commitOrder":4,"curCode":"  public <T extends State> MysqlJobStatusStateStore<T> createStateStore(Config config, Class<T> stateClass) {\n    String stateStoreTableName = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_TABLE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_TABLE);\n    boolean compressedValues = ConfigUtils.getBoolean(config, ConfigurationKeys.STATE_STORE_COMPRESSED_VALUES_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_COMPRESSED_VALUES);\n\n    try {\n      BasicDataSource basicDataSource = MysqlDataSourceFactory.get(config,\n          SharedResourcesBrokerFactory.getImplicitBroker());\n\n      return new MysqlJobStatusStateStore<>(basicDataSource, stateStoreTableName, compressedValues, stateClass);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create MysqlStateStore with factory\", e);\n    }\n  }\n","date":"2020-04-09 02:53:04","endLine":46,"groupId":"101468","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createStateStore","params":"(Configconfig@Class<T>stateClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/5a/2c684730a085ab4888b4e8cc2fdb310230fa21.src","preCode":"  public <T extends State> MysqlJobStatusStateStore<T> createStateStore(Config config, Class<T> stateClass) {\n    String stateStoreTableName = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_TABLE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_TABLE);\n    boolean compressedValues = ConfigUtils.getBoolean(config, ConfigurationKeys.STATE_STORE_COMPRESSED_VALUES_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_COMPRESSED_VALUES);\n\n    try {\n      BasicDataSource basicDataSource = MysqlDataSourceFactory.get(config,\n          SharedResourcesBrokerFactory.getImplicitBroker());\n\n      return new MysqlJobStatusStateStore(basicDataSource, stateStoreTableName, compressedValues, stateClass);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create MysqlStateStore with factory\", e);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlJobStatusStateStoreFactory.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2020-04-09 02:53:04","commitOrder":4,"curCode":"  public <T extends State> StateStore<T> createStateStore(Config config, Class<T> stateClass) {\n    String stateStoreTableName = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_TABLE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_TABLE);\n    boolean compressedValues = ConfigUtils.getBoolean(config, ConfigurationKeys.STATE_STORE_COMPRESSED_VALUES_KEY,\n            ConfigurationKeys.DEFAULT_STATE_STORE_COMPRESSED_VALUES);\n\n    try {\n      BasicDataSource basicDataSource = MysqlDataSourceFactory.get(config,\n          SharedResourcesBrokerFactory.getImplicitBroker());\n\n      return new MysqlStateStore<>(basicDataSource, stateStoreTableName, compressedValues, stateClass);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create MysqlStateStore with factory\", e);\n    }\n  }\n","date":"2020-04-09 02:53:04","endLine":46,"groupId":"101468","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"createStateStore","params":"(Configconfig@Class<T>stateClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/fc/9e362d7d5ea21c735f9b9532c2172ca7556607.src","preCode":"  public <T extends State> StateStore<T> createStateStore(Config config, Class<T> stateClass) {\n    String stateStoreTableName = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_DB_TABLE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_DB_TABLE);\n    boolean compressedValues = ConfigUtils.getBoolean(config, ConfigurationKeys.STATE_STORE_COMPRESSED_VALUES_KEY,\n            ConfigurationKeys.DEFAULT_STATE_STORE_COMPRESSED_VALUES);\n\n    try {\n      BasicDataSource basicDataSource = MysqlDataSourceFactory.get(config,\n          SharedResourcesBrokerFactory.getImplicitBroker());\n\n      return new MysqlStateStore(basicDataSource, stateStoreTableName, compressedValues, stateClass);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create MysqlStateStore with factory\", e);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStoreFactory.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"}],"commitId":"b64cb3b3442e07b2906dfabe75376e3382fc9457","commitMessage":"@@@[GOBBLIN-1105] some refactoring and make MysqlJobStatusStateStore implements DatasetStateStore\n\nCloses #2945 from arjun4084346/PR-3\n","date":"2020-04-09 02:53:04","modifiedFileCount":"8","status":"M","submitter":"Arjun"}]
