[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void tearDown() throws IOException, InterruptedException {\n\n    for (int i = 0; i < NUM_MANAGERS; i++) {\n      _clusterManagers[i].connectHelixManager();\n      if (!_clusterManagers[i].isHelixManagerConnected()) {\n        _clusterManagers[i].connectHelixManager();\n      }\n      _clusterManagers[i].stop();\n    }\n\n    for (int i = 0; i < NUM_WORKERS; i++) {\n      _clusterWorkers[i].stop();\n    }\n\n    for (int i = 0; i < NUM_WORKERS; i++) {\n      _workerStartThreads[i].join();\n    }\n\n    _testingZKServer.close();\n  }\n","date":"2017-07-31 15:51:25","endLine":345,"groupId":"6663","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2c/5d53dbb759d5cb5d6044db083e161ee3dfde57.src","preCode":"  public void tearDown() throws IOException, InterruptedException {\n\n    for (int i = 0; i < NUM_MANAGERS; i++) {\n      _clusterManagers[i].connectHelixManager();\n      if (!_clusterManagers[i].isHelixManagerConnected()) {\n        _clusterManagers[i].connectHelixManager();\n      }\n      _clusterManagers[i].stop();\n    }\n\n    for (int i = 0; i < NUM_WORKERS; i++) {\n      _clusterWorkers[i].stop();\n    }\n\n    for (int i = 0; i < NUM_WORKERS; i++) {\n      _workerStartThreads[i].join();\n    }\n\n    _testingZKServer.close();\n  }\n","realPath":"gobblin-cluster/src/test/java/org/apache/gobblin/cluster/GobblinClusterKillTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"    public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n      int numMappers = context.getConfiguration().getInt(NUM_MAPPERS, 1);\n\n      List<InputSplit> splits = Lists.newArrayList();\n      for (int i = 0; i < numMappers; i++) {\n        splits.add(new MySplit());\n      }\n\n      return splits;\n    }\n","date":"2017-07-31 15:51:25","endLine":224,"groupId":"704","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"getSplits","params":"(JobContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b4/2af49e0454d2630ddc392bf575107e90e99e2e.src","preCode":"    public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n      int numMappers = context.getConfiguration().getInt(NUM_MAPPERS, 1);\n\n      List<InputSplit> splits = Lists.newArrayList();\n      for (int i = 0; i < numMappers; i++) {\n        splits.add(new MySplit());\n      }\n\n      return splits;\n    }\n","realPath":"gobblin-restli/gobblin-throttling-service/gobblin-throttling-service-client/src/main/java/org/apache/gobblin/util/limiter/stressTest/MRStressTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2018-05-02 05:40:28","commitOrder":2,"curCode":"  public void tearDown() throws IOException, InterruptedException {\n\n    for (int i = 0; i < NUM_MANAGERS; i++) {\n      _clusterManagers[i].multiManager.connect();\n      if (!_clusterManagers[i].isHelixManagerConnected()) {\n        _clusterManagers[i].connectHelixManager();\n      }\n      _clusterManagers[i].stop();\n    }\n\n    for (int i = 0; i < NUM_WORKERS; i++) {\n      _clusterWorkers[i].stop();\n    }\n\n    for (int i = 0; i < NUM_WORKERS; i++) {\n      _workerStartThreads[i].join();\n    }\n\n    _testingZKServer.close();\n  }\n","date":"2018-05-02 05:40:28","endLine":337,"groupId":"1099","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3f/de3e70178154140742abff44d7c53b2350aaa5.src","preCode":"  public void tearDown() throws IOException, InterruptedException {\n\n    for (int i = 0; i < NUM_MANAGERS; i++) {\n      _clusterManagers[i].connectHelixManager();\n      if (!_clusterManagers[i].isHelixManagerConnected()) {\n        _clusterManagers[i].connectHelixManager();\n      }\n      _clusterManagers[i].stop();\n    }\n\n    for (int i = 0; i < NUM_WORKERS; i++) {\n      _clusterWorkers[i].stop();\n    }\n\n    for (int i = 0; i < NUM_WORKERS; i++) {\n      _workerStartThreads[i].join();\n    }\n\n    _testingZKServer.close();\n  }\n","realPath":"gobblin-cluster/src/test/java/org/apache/gobblin/cluster/GobblinClusterKillTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"    public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n      int numMappers = context.getConfiguration().getInt(NUM_MAPPERS, 1);\n\n      List<InputSplit> splits = Lists.newArrayList();\n      for (int i = 0; i < numMappers; i++) {\n        splits.add(new MySplit());\n      }\n\n      return splits;\n    }\n","date":"2017-07-31 15:51:25","endLine":224,"groupId":"1099","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getSplits","params":"(JobContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b4/2af49e0454d2630ddc392bf575107e90e99e2e.src","preCode":"    public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n      int numMappers = context.getConfiguration().getInt(NUM_MAPPERS, 1);\n\n      List<InputSplit> splits = Lists.newArrayList();\n      for (int i = 0; i < numMappers; i++) {\n        splits.add(new MySplit());\n      }\n\n      return splits;\n    }\n","realPath":"gobblin-restli/gobblin-throttling-service/gobblin-throttling-service-client/src/main/java/org/apache/gobblin/util/limiter/stressTest/MRStressTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"N"}],"commitId":"15b7cd08f724f1de471cc59f46323b234215b2f9","commitMessage":"@@@[GOBBLIN-480] Separate job distribution cluster with gobblin cluster manager cluster\n\nCloses #2349 from yukuai518/controller\n","date":"2018-05-02 05:40:28","modifiedFileCount":"4","status":"M","submitter":"Kuai Yu"}]
