[{"authorTime":"2017-08-15 23:22:34","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  private Config loadHoconConfigAtPath(Path path) throws IOException {\n    try (InputStream is = fs.open(path);\n        Reader reader = new InputStreamReader(is, Charsets.UTF_8)) {\n        return ConfigFactory.parseMap(ImmutableMap.of(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY,\n            PathUtils.getPathWithoutSchemeAndAuthority(path).toString()))\n            .withFallback(ConfigFactory.parseReader(reader, ConfigParseOptions.defaults().setSyntax(ConfigSyntax.CONF)));\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":269,"groupId":"2942","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadHoconConfigAtPath","params":"(Pathpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/45/884c91cc8904127a640339c3ccb28e89149dcd.src","preCode":"  private Config loadHoconConfigAtPath(Path path) throws IOException {\n    try (InputStream is = fs.open(path);\n        Reader reader = new InputStreamReader(is, Charsets.UTF_8)) {\n        return ConfigFactory.parseMap(ImmutableMap.of(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY,\n            PathUtils.getPathWithoutSchemeAndAuthority(path).toString()))\n            .withFallback(ConfigFactory.parseReader(reader, ConfigParseOptions.defaults().setSyntax(ConfigSyntax.CONF)));\n    }\n  }\n","realPath":"gobblin-utility/src/main/java/org/apache/gobblin/util/PullFileLoader.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"NB"},{"authorDate":"2017-08-15 23:22:34","commitOrder":2,"curCode":"  private Config loadHoconConfigWithFallback(Path path, Config fallback) throws IOException {\n    try (InputStream is = fs.open(path);\n         Reader reader = new InputStreamReader(is, Charsets.UTF_8)) {\n      return ConfigFactory.parseMap(ImmutableMap.of(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY,\n          PathUtils.getPathWithoutSchemeAndAuthority(path).toString()))\n          .withFallback(ConfigFactory.parseReader(reader, ConfigParseOptions.defaults().setSyntax(ConfigSyntax.CONF)))\n          .withFallback(fallback);\n    }\n  }\n","date":"2017-08-15 23:22:34","endLine":294,"groupId":"2942","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadHoconConfigWithFallback","params":"(Pathpath@Configfallback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/08/3fc7547ecc96fcd2227f1aabe1e500fa8684db.src","preCode":"  private Config loadHoconConfigWithFallback(Path path, Config fallback) throws IOException {\n    try (InputStream is = fs.open(path);\n         Reader reader = new InputStreamReader(is, Charsets.UTF_8)) {\n      return ConfigFactory.parseMap(ImmutableMap.of(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY,\n          PathUtils.getPathWithoutSchemeAndAuthority(path).toString()))\n          .withFallback(ConfigFactory.parseReader(reader, ConfigParseOptions.defaults().setSyntax(ConfigSyntax.CONF)))\n          .withFallback(fallback);\n    }\n  }\n","realPath":"gobblin-utility/src/main/java/org/apache/gobblin/util/PullFileLoader.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"B"}],"commitId":"d0ece1a0436df88df2d305467d1d94c0893ad0bf","commitMessage":"@@@[GOBBLIN-209] Support for hocon global configuration files.\n\nCloses #2061 from\nkadaan/add_support_for_hocon_global_files\n","date":"2017-08-15 23:22:34","modifiedFileCount":"2","status":"M","submitter":"Joel Baranick"},{"authorTime":"2020-10-09 01:50:31","codes":[{"authorDate":"2020-10-09 01:50:31","commitOrder":3,"curCode":"  private Config loadHoconConfigAtPath(Path path)\n      throws IOException {\n    try (InputStream is = fs.open(path); Reader reader = new InputStreamReader(is, Charsets.UTF_8)) {\n      return ConfigFactory.parseMap(ImmutableMap\n          .of(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY, PathUtils.getPathWithoutSchemeAndAuthority(path).toString()))\n          .withFallback(ConfigFactory.parseReader(reader, ConfigParseOptions.defaults().setSyntax(ConfigSyntax.CONF)));\n    } catch (ConfigException configException) {\n      throw wrapConfigException(path, configException);\n    }\n  }\n","date":"2020-10-09 01:50:31","endLine":323,"groupId":"101032","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"loadHoconConfigAtPath","params":"(Pathpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/4e/d4698b9456797784b6bc73ac33ddbe3d04ab1a.src","preCode":"  private Config loadHoconConfigAtPath(Path path) throws IOException {\n    try (InputStream is = fs.open(path);\n        Reader reader = new InputStreamReader(is, Charsets.UTF_8)) {\n        return ConfigFactory.parseMap(ImmutableMap.of(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY,\n            PathUtils.getPathWithoutSchemeAndAuthority(path).toString()))\n            .withFallback(ConfigFactory.parseReader(reader, ConfigParseOptions.defaults().setSyntax(ConfigSyntax.CONF)));\n    }\n  }\n","realPath":"gobblin-utility/src/main/java/org/apache/gobblin/util/PullFileLoader.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"M"},{"authorDate":"2020-10-09 01:50:31","commitOrder":3,"curCode":"  private Config loadHoconConfigWithFallback(Path path, Config fallback)\n      throws IOException {\n    try (InputStream is = fs.open(path); Reader reader = new InputStreamReader(is, Charsets.UTF_8)) {\n      return ConfigFactory.parseMap(ImmutableMap\n          .of(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY, PathUtils.getPathWithoutSchemeAndAuthority(path).toString()))\n          .withFallback(ConfigFactory.parseReader(reader, ConfigParseOptions.defaults().setSyntax(ConfigSyntax.CONF))).withFallback(fallback);\n    } catch (ConfigException configException) {\n      throw wrapConfigException(path, configException);\n    }\n  }\n","date":"2020-10-09 01:50:31","endLine":350,"groupId":"101032","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"loadHoconConfigWithFallback","params":"(Pathpath@Configfallback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/4e/d4698b9456797784b6bc73ac33ddbe3d04ab1a.src","preCode":"  private Config loadHoconConfigWithFallback(Path path, Config fallback) throws IOException {\n    try (InputStream is = fs.open(path);\n         Reader reader = new InputStreamReader(is, Charsets.UTF_8)) {\n      return ConfigFactory.parseMap(ImmutableMap.of(ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY,\n          PathUtils.getPathWithoutSchemeAndAuthority(path).toString()))\n          .withFallback(ConfigFactory.parseReader(reader, ConfigParseOptions.defaults().setSyntax(ConfigSyntax.CONF)))\n          .withFallback(fallback);\n    }\n  }\n","realPath":"gobblin-utility/src/main/java/org/apache/gobblin/util/PullFileLoader.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"M"}],"commitId":"3fbfd584f32e3eae5e16b8c8cd1878bef528465c","commitMessage":"@@@[GOBBLIN-1273] Improving handling and logging of config file load failures\n\nCloses #3113 from shirshanka/confdebug\n","date":"2020-10-09 01:50:31","modifiedFileCount":"2","status":"M","submitter":"Shirshanka Das"}]
