[{"authorTime":"2019-09-25 06:00:52","codes":[{"authorDate":"2019-09-25 06:00:52","commitOrder":1,"curCode":"  public static List<Properties> loadGenericJobConfigs(Properties sysProps, JobSpecResolver resolver)\n      throws ConfigurationException, IOException {\n    Path rootPath = new Path(sysProps.getProperty(ConfigurationKeys.JOB_CONFIG_FILE_GENERAL_PATH_KEY));\n    PullFileLoader loader = new PullFileLoader(rootPath, rootPath.getFileSystem(new Configuration()),\n        getJobConfigurationFileExtensions(sysProps), PullFileLoader.DEFAULT_HOCON_PULL_FILE_EXTENSIONS);\n    Config sysConfig = ConfigUtils.propertiesToConfig(sysProps);\n    Collection<Config> configs =\n        loader.loadPullFilesRecursively(rootPath, sysConfig, true);\n\n    List<Properties> jobConfigs = Lists.newArrayList();\n    for (Config config : configs) {\n      try {\n        jobConfigs.add(resolveTemplate(ConfigUtils.configToProperties(config), resolver));\n      } catch (IOException ioe) {\n        LOGGER.error(\"Could not parse job config at \" + ConfigUtils.getString(config,\n            ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY, \"Unknown path\"), ioe);\n      }\n    }\n\n    return jobConfigs;\n  }\n","date":"2019-09-25 06:00:52","endLine":90,"groupId":"1519","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadGenericJobConfigs","params":"(PropertiessysProps@JobSpecResolverresolver)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ef/b3c2ef1f2dfa5e258db894de5ce6c91aa76cc1.src","preCode":"  public static List<Properties> loadGenericJobConfigs(Properties sysProps, JobSpecResolver resolver)\n      throws ConfigurationException, IOException {\n    Path rootPath = new Path(sysProps.getProperty(ConfigurationKeys.JOB_CONFIG_FILE_GENERAL_PATH_KEY));\n    PullFileLoader loader = new PullFileLoader(rootPath, rootPath.getFileSystem(new Configuration()),\n        getJobConfigurationFileExtensions(sysProps), PullFileLoader.DEFAULT_HOCON_PULL_FILE_EXTENSIONS);\n    Config sysConfig = ConfigUtils.propertiesToConfig(sysProps);\n    Collection<Config> configs =\n        loader.loadPullFilesRecursively(rootPath, sysConfig, true);\n\n    List<Properties> jobConfigs = Lists.newArrayList();\n    for (Config config : configs) {\n      try {\n        jobConfigs.add(resolveTemplate(ConfigUtils.configToProperties(config), resolver));\n      } catch (IOException ioe) {\n        LOGGER.error(\"Could not parse job config at \" + ConfigUtils.getString(config,\n            ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY, \"Unknown path\"), ioe);\n      }\n    }\n\n    return jobConfigs;\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/util/SchedulerUtils.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2019-09-25 06:00:52","commitOrder":1,"curCode":"  public static List<Properties> loadGenericJobConfigs(Properties sysProps, Path commonPropsPath,\n      Path jobConfigPathDir, JobSpecResolver resolver)\n      throws ConfigurationException, IOException {\n\n    PullFileLoader loader = new PullFileLoader(jobConfigPathDir, jobConfigPathDir.getFileSystem(new Configuration()),\n        getJobConfigurationFileExtensions(sysProps), PullFileLoader.DEFAULT_HOCON_PULL_FILE_EXTENSIONS);\n    Config sysConfig = ConfigUtils.propertiesToConfig(sysProps);\n    Collection<Config> configs =\n        loader.loadPullFilesRecursively(commonPropsPath.getParent(), sysConfig, true);\n\n    List<Properties> jobConfigs = Lists.newArrayList();\n    for (Config config : configs) {\n      try {\n        jobConfigs.add(resolveTemplate(ConfigUtils.configToProperties(config), resolver));\n      } catch (IOException ioe) {\n        LOGGER.error(\"Could not parse job config at \" + ConfigUtils.getString(config,\n            ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY, \"Unknown path\"), ioe);\n      }\n    }\n\n    return jobConfigs;\n  }\n","date":"2019-09-25 06:00:52","endLine":121,"groupId":"4136","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadGenericJobConfigs","params":"(PropertiessysProps@PathcommonPropsPath@PathjobConfigPathDir@JobSpecResolverresolver)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ef/b3c2ef1f2dfa5e258db894de5ce6c91aa76cc1.src","preCode":"  public static List<Properties> loadGenericJobConfigs(Properties sysProps, Path commonPropsPath,\n      Path jobConfigPathDir, JobSpecResolver resolver)\n      throws ConfigurationException, IOException {\n\n    PullFileLoader loader = new PullFileLoader(jobConfigPathDir, jobConfigPathDir.getFileSystem(new Configuration()),\n        getJobConfigurationFileExtensions(sysProps), PullFileLoader.DEFAULT_HOCON_PULL_FILE_EXTENSIONS);\n    Config sysConfig = ConfigUtils.propertiesToConfig(sysProps);\n    Collection<Config> configs =\n        loader.loadPullFilesRecursively(commonPropsPath.getParent(), sysConfig, true);\n\n    List<Properties> jobConfigs = Lists.newArrayList();\n    for (Config config : configs) {\n      try {\n        jobConfigs.add(resolveTemplate(ConfigUtils.configToProperties(config), resolver));\n      } catch (IOException ioe) {\n        LOGGER.error(\"Could not parse job config at \" + ConfigUtils.getString(config,\n            ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY, \"Unknown path\"), ioe);\n      }\n    }\n\n    return jobConfigs;\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/util/SchedulerUtils.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"7d260ab2c32a773e317a31cd264f5c97d2d48a10","commitMessage":"@@@[GOBBLIN-701] Add secure templates (duplicate of #2571)\n\nCloses #2739 from jack-moseley/secure-template\n","date":"2019-09-25 06:00:52","modifiedFileCount":"15","status":"B","submitter":"Jack Moseley"},{"authorTime":"2021-07-29 04:02:46","codes":[{"authorDate":"2021-07-29 04:02:46","commitOrder":2,"curCode":"  public static List<Properties> loadGenericJobConfigs(Properties sysProps, JobSpecResolver resolver)\n      throws ConfigurationException, IOException {\n    Path rootPath = new Path(sysProps.getProperty(ConfigurationKeys.JOB_CONFIG_FILE_GENERAL_PATH_KEY));\n    PullFileLoader loader = new PullFileLoader(rootPath, rootPath.getFileSystem(new Configuration()),\n        getJobConfigurationFileExtensions(sysProps), PullFileLoader.DEFAULT_HOCON_PULL_FILE_EXTENSIONS);\n    Config sysConfig = ConfigUtils.propertiesToConfig(sysProps);\n    Collection<Config> configs =\n        loader.loadPullFilesRecursively(rootPath, sysConfig, true);\n\n    List<Properties> jobConfigs = Lists.newArrayListWithCapacity(configs.size());\n    for (Config config : configs) {\n      try {\n        jobConfigs.add(resolveTemplate(ConfigUtils.configToProperties(config), resolver));\n      } catch (IOException ioe) {\n        LOGGER.error(\"Could not parse job config at \" + ConfigUtils.getString(config,\n            ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY, \"Unknown path\"), ioe);\n      }\n    }\n\n    return jobConfigs;\n  }\n","date":"2021-07-29 04:02:46","endLine":90,"groupId":"11885","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"loadGenericJobConfigs","params":"(PropertiessysProps@JobSpecResolverresolver)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3f/a9c76c4b75c17360474cebca020a57537eca65.src","preCode":"  public static List<Properties> loadGenericJobConfigs(Properties sysProps, JobSpecResolver resolver)\n      throws ConfigurationException, IOException {\n    Path rootPath = new Path(sysProps.getProperty(ConfigurationKeys.JOB_CONFIG_FILE_GENERAL_PATH_KEY));\n    PullFileLoader loader = new PullFileLoader(rootPath, rootPath.getFileSystem(new Configuration()),\n        getJobConfigurationFileExtensions(sysProps), PullFileLoader.DEFAULT_HOCON_PULL_FILE_EXTENSIONS);\n    Config sysConfig = ConfigUtils.propertiesToConfig(sysProps);\n    Collection<Config> configs =\n        loader.loadPullFilesRecursively(rootPath, sysConfig, true);\n\n    List<Properties> jobConfigs = Lists.newArrayList();\n    for (Config config : configs) {\n      try {\n        jobConfigs.add(resolveTemplate(ConfigUtils.configToProperties(config), resolver));\n      } catch (IOException ioe) {\n        LOGGER.error(\"Could not parse job config at \" + ConfigUtils.getString(config,\n            ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY, \"Unknown path\"), ioe);\n      }\n    }\n\n    return jobConfigs;\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/util/SchedulerUtils.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2021-07-29 04:02:46","commitOrder":2,"curCode":"  public static List<Properties> loadGenericJobConfigs(Properties sysProps, Path commonPropsPath,\n      Path jobConfigPathDir, JobSpecResolver resolver)\n      throws ConfigurationException, IOException {\n\n    PullFileLoader loader = new PullFileLoader(jobConfigPathDir, jobConfigPathDir.getFileSystem(new Configuration()),\n        getJobConfigurationFileExtensions(sysProps), PullFileLoader.DEFAULT_HOCON_PULL_FILE_EXTENSIONS);\n    Config sysConfig = ConfigUtils.propertiesToConfig(sysProps);\n    Collection<Config> configs =\n        loader.loadPullFilesRecursively(commonPropsPath.getParent(), sysConfig, true);\n\n    List<Properties> jobConfigs = Lists.newArrayListWithCapacity(configs.size());\n    for (Config config : configs) {\n      try {\n        jobConfigs.add(resolveTemplate(ConfigUtils.configToProperties(config), resolver));\n      } catch (IOException ioe) {\n        LOGGER.error(\"Could not parse job config at \" + ConfigUtils.getString(config,\n            ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY, \"Unknown path\"), ioe);\n      }\n    }\n\n    return jobConfigs;\n  }\n","date":"2021-07-29 04:02:46","endLine":121,"groupId":"11885","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"loadGenericJobConfigs","params":"(PropertiessysProps@PathcommonPropsPath@PathjobConfigPathDir@JobSpecResolverresolver)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3f/a9c76c4b75c17360474cebca020a57537eca65.src","preCode":"  public static List<Properties> loadGenericJobConfigs(Properties sysProps, Path commonPropsPath,\n      Path jobConfigPathDir, JobSpecResolver resolver)\n      throws ConfigurationException, IOException {\n\n    PullFileLoader loader = new PullFileLoader(jobConfigPathDir, jobConfigPathDir.getFileSystem(new Configuration()),\n        getJobConfigurationFileExtensions(sysProps), PullFileLoader.DEFAULT_HOCON_PULL_FILE_EXTENSIONS);\n    Config sysConfig = ConfigUtils.propertiesToConfig(sysProps);\n    Collection<Config> configs =\n        loader.loadPullFilesRecursively(commonPropsPath.getParent(), sysConfig, true);\n\n    List<Properties> jobConfigs = Lists.newArrayList();\n    for (Config config : configs) {\n      try {\n        jobConfigs.add(resolveTemplate(ConfigUtils.configToProperties(config), resolver));\n      } catch (IOException ioe) {\n        LOGGER.error(\"Could not parse job config at \" + ConfigUtils.getString(config,\n            ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY, \"Unknown path\"), ioe);\n      }\n    }\n\n    return jobConfigs;\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/util/SchedulerUtils.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"9a9e239ec7c1c870916d2ceec442a537275c1166","commitMessage":"@@@[GOBBLIN-1496] Initialize arrays and maps related to gobblin as a service with an in? (#3339)\n\n* optimize some maps and arrays that can be initialized with a fixed size\n\n* use newHashmapWithExpectedSize\n\n* fix checkstyle\n\n* fix bug\n\n* undo accidental change getTimeUnit","date":"2021-07-29 04:02:46","modifiedFileCount":"11","status":"M","submitter":"William Lo"}]
