[{"authorTime":"2020-06-02 02:29:14","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":182,"groupId":"4424","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/3dc152e12144db7e3eb4d6c62e722c2cdebafb.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"NB"},{"authorDate":"2020-06-02 02:29:14","commitOrder":2,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      this.gobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Gobblin Service Manager\", e);\n    }\n\n    try {\n      cleanUpDir(SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Work Dir\");\n    }\n\n    try {\n      cleanUpDir(SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Spec Store Parent Dir\");\n    }\n    try {\n      this.testingServer.close();\n    } catch(Exception e) {\n      System.err.println(\"Failed to close ZK testing server.\");\n    }\n  }\n","date":"2020-06-02 02:29:14","endLine":184,"groupId":"4424","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/28/2ede637d9e586d0742929e6c8ef3011bf0f10c.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      this.gobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Gobblin Service Manager\", e);\n    }\n\n    try {\n      cleanUpDir(SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Work Dir\");\n    }\n\n    try {\n      cleanUpDir(SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Spec Store Parent Dir\");\n    }\n    try {\n      this.testingServer.close();\n    } catch(Exception e) {\n      System.err.println(\"Failed to close ZK testing server.\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/GobblinServiceManagerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"}],"commitId":"5cd38ac8d26dd4bccd8582a7182893f29ab5a009","commitMessage":"@@@[GOBBLIN-1162] Provide an option to allow slow containers to commit su?\n\nCloses #3002 from sv2000/containerSuicide\n","date":"2020-06-02 02:29:14","modifiedFileCount":"10","status":"M","submitter":"sv2000"},{"authorTime":"2020-11-08 09:17:19","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":3,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":182,"groupId":"4424","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/3dc152e12144db7e3eb4d6c62e722c2cdebafb.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"N"},{"authorDate":"2020-11-08 09:17:19","commitOrder":3,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      this.gobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Gobblin Service Manager\", e);\n    }\n\n    try {\n      cleanUpDir(SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Work Dir\");\n    }\n\n    try {\n      cleanUpDir(SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Spec Store Parent Dir\");\n    }\n\n    try {\n      cleanUpDir(GROUP_OWNERSHIP_CONFIG_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Group Ownership Parent Dir\");\n    }\n\n    try {\n      this.testingServer.close();\n    } catch(Exception e) {\n      System.err.println(\"Failed to close ZK testing server.\");\n    }\n  }\n","date":"2020-11-08 09:17:19","endLine":218,"groupId":"4424","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f7/53e8c10e5396d8ccd6d3968fb30cdc6760a321.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      this.gobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Gobblin Service Manager\", e);\n    }\n\n    try {\n      cleanUpDir(SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Work Dir\");\n    }\n\n    try {\n      cleanUpDir(SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Spec Store Parent Dir\");\n    }\n    try {\n      this.testingServer.close();\n    } catch(Exception e) {\n      System.err.println(\"Failed to close ZK testing server.\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/GobblinServiceManagerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"}],"commitId":"7352cad8ae3a1d9be10d3b6fb78383ccbada9b19","commitMessage":"@@@[GOBBLIN-1304] Adds group ownership service\n\nCloses #3142 from Will-Lo/add-group-ownership-\nflows\n","date":"2020-11-08 09:17:19","modifiedFileCount":"10","status":"M","submitter":"William Lo"},{"authorTime":"2021-08-12 12:01:05","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":4,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":182,"groupId":"101110","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/3dc152e12144db7e3eb4d6c62e722c2cdebafb.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      cleanUpDir(TEST_TEMPLATE_CATALOG_PATH);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Template catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(TOPOLOGY_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup ToplogySpec catalog dir\");\n    }\n\n    \r\n    try {\n      cleanUpDir(FLOW_SPEC_STORE_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup FlowSpec catalog dir\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/IdentityFlowToJobSpecCompilerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"N"},{"authorDate":"2021-08-12 12:01:05","commitOrder":4,"curCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      this.gobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Gobblin Service Manager\", e);\n    }\n\n    try {\n      cleanUpDir(SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Work Dir\");\n    }\n\n    try {\n      cleanUpDir(SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Spec Store Parent Dir\");\n    }\n\n    try {\n      cleanUpDir(GROUP_OWNERSHIP_CONFIG_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Group Ownership Parent Dir\");\n    }\n\n    try {\n      this.testingServer.close();\n    } catch(Exception e) {\n      System.err.println(\"Failed to close ZK testing server.\");\n    }\n\n    mysql.stop();\n  }\n","date":"2021-08-12 12:01:05","endLine":227,"groupId":"101110","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"cleanUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/25/72fda66b3d71157ff8d22616828870804f4f1d.src","preCode":"  public void cleanUp() throws Exception {\n    \r\n    try {\n      this.gobblinServiceManager.stop();\n    } catch (Exception e) {\n      logger.warn(\"Could not cleanly stop Gobblin Service Manager\", e);\n    }\n\n    try {\n      cleanUpDir(SERVICE_WORK_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Work Dir\");\n    }\n\n    try {\n      cleanUpDir(SPEC_STORE_PARENT_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Spec Store Parent Dir\");\n    }\n\n    try {\n      cleanUpDir(GROUP_OWNERSHIP_CONFIG_DIR);\n    } catch (Exception e) {\n      logger.warn(\"Could not completely cleanup Group Ownership Parent Dir\");\n    }\n\n    try {\n      this.testingServer.close();\n    } catch(Exception e) {\n      System.err.println(\"Failed to close ZK testing server.\");\n    }\n  }\n","realPath":"gobblin-service/src/test/java/org/apache/gobblin/service/GobblinServiceManagerTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"}],"commitId":"de3a6941d0d9ab0eeb1035a8d8ea04aaa65bf07e","commitMessage":"@@@[GOBBLIN-1457] Add persistence for troubleshooter in Gobblin service (#3327)\n\nPreviously.  Gobblin service kept the last few job issues in memory.\nIn this commit.  we add MySql-based persistence for job issues.\n\nWe also introduce Flyway-based migrations to Gobblin service DB.  so that\nwe can adjust the table schemas in the future.  and add new tables\nin a consistent way.","date":"2021-08-12 12:01:05","modifiedFileCount":"18","status":"M","submitter":"Alex Prokofiev"}]
