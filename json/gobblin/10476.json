[{"authorTime":"2018-02-03 05:25:53","codes":[{"authorDate":"2018-02-03 05:25:53","commitOrder":2,"curCode":"    @Override public void onDeleteJob(URI deletedJobURI, String deletedJobVersion) {\n      super.onDeleteJob(deletedJobURI, deletedJobVersion);\n      try {\n        JobSpec.Builder jobSpecBuilder = JobSpec.builder(deletedJobURI);\n\n        Properties props = new Properties();\n        jobSpecBuilder.withVersion(deletedJobVersion).withConfigAsProperties(props);\n\n        _jobSpecQueue.put(new ImmutablePair<SpecExecutor.Verb, Spec>(SpecExecutor.Verb.DELETE, jobSpecBuilder.build()));\n        _metrics.jobSpecEnqCount.incrementAndGet();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n","date":"2018-02-03 05:25:53","endLine":187,"groupId":"4808","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onDeleteJob","params":"(URIdeletedJobURI@StringdeletedJobVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/47/6460395460fbbb640f7743909fc135ef495445.src","preCode":"    @Override public void onDeleteJob(URI deletedJobURI, String deletedJobVersion) {\n      super.onDeleteJob(deletedJobURI, deletedJobVersion);\n      try {\n        JobSpec.Builder jobSpecBuilder = JobSpec.builder(deletedJobURI);\n\n        Properties props = new Properties();\n        jobSpecBuilder.withVersion(deletedJobVersion).withConfigAsProperties(props);\n\n        _jobSpecQueue.put(new ImmutablePair<SpecExecutor.Verb, Spec>(SpecExecutor.Verb.DELETE, jobSpecBuilder.build()));\n        _metrics.jobSpecEnqCount.incrementAndGet();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n","realPath":"gobblin-modules/gobblin-service-kafka/src/main/java/org/apache/gobblin/service/StreamingKafkaSpecConsumer.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"MB"},{"authorDate":"2018-02-03 05:25:53","commitOrder":2,"curCode":"    @Override public void onUpdateJob(JobSpec updatedJob) {\n      super.onUpdateJob(updatedJob);\n\n      try {\n        _jobSpecQueue.put(new ImmutablePair<SpecExecutor.Verb, Spec>(SpecExecutor.Verb.UPDATE, updatedJob));\n        _metrics.jobSpecEnqCount.incrementAndGet();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n","date":"2018-02-03 05:25:53","endLine":198,"groupId":"5145","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onUpdateJob","params":"(JobSpecupdatedJob)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/47/6460395460fbbb640f7743909fc135ef495445.src","preCode":"    @Override public void onUpdateJob(JobSpec updatedJob) {\n      super.onUpdateJob(updatedJob);\n\n      try {\n        _jobSpecQueue.put(new ImmutablePair<SpecExecutor.Verb, Spec>(SpecExecutor.Verb.UPDATE, updatedJob));\n        _metrics.jobSpecEnqCount.incrementAndGet();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n","realPath":"gobblin-modules/gobblin-service-kafka/src/main/java/org/apache/gobblin/service/StreamingKafkaSpecConsumer.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"B"}],"commitId":"de83a3fb5f2644e9657b546c7415d1e8f5336a2c","commitMessage":"@@@[GOBBLIN-402] Add more metrics for gobblin cluster and fix the getJobs slowness issue\n\nCloses #2276 from yukuai518/morem\n","date":"2018-02-03 05:25:53","modifiedFileCount":"7","status":"M","submitter":"Kuai Yu"},{"authorTime":"2021-08-10 10:18:11","codes":[{"authorDate":"2021-08-10 10:18:11","commitOrder":3,"curCode":"    @Override public void onDeleteJob(URI deletedJobURI, String deletedJobVersion) {\n      super.onDeleteJob(deletedJobURI, deletedJobVersion);\n      try {\n        JobSpec.Builder jobSpecBuilder = JobSpec.builder(deletedJobURI);\n\n        Properties props = new Properties();\n        jobSpecBuilder.withVersion(deletedJobVersion).withConfigAsProperties(props);\n\n        _jobSpecQueue.put(new ImmutablePair<SpecExecutor.Verb, Spec>(SpecExecutor.Verb.DELETE, jobSpecBuilder.build()));\n        _metrics.specConsumerJobSpecEnq.mark();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n","date":"2021-08-10 10:18:11","endLine":190,"groupId":"10476","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"onDeleteJob","params":"(URIdeletedJobURI@StringdeletedJobVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b0/7227368a76e6567c79d5d66c23355797383d3c.src","preCode":"    @Override public void onDeleteJob(URI deletedJobURI, String deletedJobVersion) {\n      super.onDeleteJob(deletedJobURI, deletedJobVersion);\n      try {\n        JobSpec.Builder jobSpecBuilder = JobSpec.builder(deletedJobURI);\n\n        Properties props = new Properties();\n        jobSpecBuilder.withVersion(deletedJobVersion).withConfigAsProperties(props);\n\n        _jobSpecQueue.put(new ImmutablePair<SpecExecutor.Verb, Spec>(SpecExecutor.Verb.DELETE, jobSpecBuilder.build()));\n        _metrics.jobSpecEnqCount.incrementAndGet();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n","realPath":"gobblin-modules/gobblin-service-kafka/src/main/java/org/apache/gobblin/service/StreamingKafkaSpecConsumer.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2021-08-10 10:18:11","commitOrder":3,"curCode":"    @Override public void onUpdateJob(JobSpec updatedJob) {\n      super.onUpdateJob(updatedJob);\n\n      try {\n        _jobSpecQueue.put(new ImmutablePair<SpecExecutor.Verb, Spec>(SpecExecutor.Verb.UPDATE, updatedJob));\n        _metrics.specConsumerJobSpecEnq.mark();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n","date":"2021-08-10 10:18:11","endLine":214,"groupId":"10476","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"onUpdateJob","params":"(JobSpecupdatedJob)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b0/7227368a76e6567c79d5d66c23355797383d3c.src","preCode":"    @Override public void onUpdateJob(JobSpec updatedJob) {\n      super.onUpdateJob(updatedJob);\n\n      try {\n        _jobSpecQueue.put(new ImmutablePair<SpecExecutor.Verb, Spec>(SpecExecutor.Verb.UPDATE, updatedJob));\n        _metrics.jobSpecEnqCount.incrementAndGet();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n","realPath":"gobblin-modules/gobblin-service-kafka/src/main/java/org/apache/gobblin/service/StreamingKafkaSpecConsumer.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"M"}],"commitId":"557ea5445510902af9baf065ee20cbb7a16015f7","commitMessage":"@@@[GOBBLIN-1508] Update cluster side metrics from gauge to meter (#3354)\n\nAdd a few metrics in Gobblin cluster and update some from counter to meter.  because meter can give both count and rate of an entity","date":"2021-08-10 10:18:11","modifiedFileCount":"10","status":"M","submitter":"Arjun Singh Bora"}]
