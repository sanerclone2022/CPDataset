[{"authorTime":"2017-08-15 01:35:41","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  protected DatasetStateStore createStateStore(Config jobConfig)\n      throws IOException {\n    boolean stateStoreEnabled = !jobConfig.hasPath(ConfigurationKeys.STATE_STORE_ENABLED) || jobConfig\n        .getBoolean(ConfigurationKeys.STATE_STORE_ENABLED);\n\n    String stateStoreType;\n\n    if (!stateStoreEnabled) {\n      stateStoreType = ConfigurationKeys.STATE_STORE_TYPE_NOOP;\n    } else {\n      stateStoreType = ConfigUtils\n          .getString(jobConfig, ConfigurationKeys.STATE_STORE_TYPE_KEY, ConfigurationKeys.DEFAULT_STATE_STORE_TYPE);\n    }\n\n    ClassAliasResolver<DatasetStateStore.Factory> resolver = new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    try {\n      DatasetStateStore.Factory stateStoreFactory = resolver.resolveClass(stateStoreType).newInstance();\n      return stateStoreFactory.createStateStore(jobConfig);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":196,"groupId":"4149","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createStateStore","params":"(ConfigjobConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/d43af8e39c9bc6516a813ee488e47f621bf4aa.src","preCode":"  protected DatasetStateStore createStateStore(Config jobConfig)\n      throws IOException {\n    boolean stateStoreEnabled = !jobConfig.hasPath(ConfigurationKeys.STATE_STORE_ENABLED) || jobConfig\n        .getBoolean(ConfigurationKeys.STATE_STORE_ENABLED);\n\n    String stateStoreType;\n\n    if (!stateStoreEnabled) {\n      stateStoreType = ConfigurationKeys.STATE_STORE_TYPE_NOOP;\n    } else {\n      stateStoreType = ConfigUtils\n          .getString(jobConfig, ConfigurationKeys.STATE_STORE_TYPE_KEY, ConfigurationKeys.DEFAULT_STATE_STORE_TYPE);\n    }\n\n    ClassAliasResolver<DatasetStateStore.Factory> resolver = new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    try {\n      DatasetStateStore.Factory stateStoreFactory = resolver.resolveClass(stateStoreType).newInstance();\n      return stateStoreFactory.createStateStore(jobConfig);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/JobContext.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"NB"},{"authorDate":"2017-08-15 01:35:41","commitOrder":2,"curCode":"  static DatasetStateStore buildDatasetStateStore(Config config) throws IOException {\n    ClassAliasResolver<Factory> resolver =\n        new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    String stateStoreType = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_TYPE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_TYPE);\n\n    try {\n      DatasetStateStore.Factory stateStoreFactory =\n          resolver.resolveClass(stateStoreType).newInstance();\n\n      return stateStoreFactory.createStateStore(config);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n","date":"2017-08-15 01:35:41","endLine":106,"groupId":"4149","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"buildDatasetStateStore","params":"(Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/91/d8db7fdb54074f057984e944d179ca8b682455.src","preCode":"  static DatasetStateStore buildDatasetStateStore(Config config) throws IOException {\n    ClassAliasResolver<Factory> resolver =\n        new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    String stateStoreType = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_TYPE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_TYPE);\n\n    try {\n      DatasetStateStore.Factory stateStoreFactory =\n          resolver.resolveClass(stateStoreType).newInstance();\n\n      return stateStoreFactory.createStateStore(config);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/DatasetStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"}],"commitId":"998fe200de1cb74e6797f119752206687a74dcbb","commitMessage":"@@@[GOBBLIN-199] API for listing the contents of a state store\n\nCloses #2051 from ibuenros/state-store-listapi\n","date":"2017-08-15 01:35:41","modifiedFileCount":"7","status":"M","submitter":"ibuenros"},{"authorTime":"2017-08-15 01:35:41","codes":[{"authorDate":"2017-08-16 03:46:40","commitOrder":3,"curCode":"  protected DatasetStateStore createStateStore(Config jobConfig)\n      throws IOException {\n    boolean stateStoreEnabled = !jobConfig.hasPath(ConfigurationKeys.STATE_STORE_ENABLED) || jobConfig\n        .getBoolean(ConfigurationKeys.STATE_STORE_ENABLED);\n\n    String stateStoreType;\n\n    if (!stateStoreEnabled) {\n      stateStoreType = ConfigurationKeys.STATE_STORE_TYPE_NOOP;\n    } else {\n      stateStoreType = ConfigUtils\n          .getString(jobConfig, ConfigurationKeys.DATASET_STATE_STORE_TYPE_KEY,\n              ConfigUtils.getString(jobConfig, ConfigurationKeys.STATE_STORE_TYPE_KEY,\n                  ConfigurationKeys.DEFAULT_STATE_STORE_TYPE));\n    }\n\n    ClassAliasResolver<DatasetStateStore.Factory> resolver = new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    try {\n      DatasetStateStore.Factory stateStoreFactory = resolver.resolveClass(stateStoreType).newInstance();\n      return stateStoreFactory.createStateStore(jobConfig);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n","date":"2017-08-16 03:46:40","endLine":198,"groupId":"10869","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createStateStore","params":"(ConfigjobConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/33/c57015526aaca9b2f3dd6e5fed592c37dcf70d.src","preCode":"  protected DatasetStateStore createStateStore(Config jobConfig)\n      throws IOException {\n    boolean stateStoreEnabled = !jobConfig.hasPath(ConfigurationKeys.STATE_STORE_ENABLED) || jobConfig\n        .getBoolean(ConfigurationKeys.STATE_STORE_ENABLED);\n\n    String stateStoreType;\n\n    if (!stateStoreEnabled) {\n      stateStoreType = ConfigurationKeys.STATE_STORE_TYPE_NOOP;\n    } else {\n      stateStoreType = ConfigUtils\n          .getString(jobConfig, ConfigurationKeys.STATE_STORE_TYPE_KEY, ConfigurationKeys.DEFAULT_STATE_STORE_TYPE);\n    }\n\n    ClassAliasResolver<DatasetStateStore.Factory> resolver = new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    try {\n      DatasetStateStore.Factory stateStoreFactory = resolver.resolveClass(stateStoreType).newInstance();\n      return stateStoreFactory.createStateStore(jobConfig);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/JobContext.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"},{"authorDate":"2017-08-15 01:35:41","commitOrder":3,"curCode":"  static DatasetStateStore buildDatasetStateStore(Config config) throws IOException {\n    ClassAliasResolver<Factory> resolver =\n        new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    String stateStoreType = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_TYPE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_TYPE);\n\n    try {\n      DatasetStateStore.Factory stateStoreFactory =\n          resolver.resolveClass(stateStoreType).newInstance();\n\n      return stateStoreFactory.createStateStore(config);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n","date":"2017-08-15 01:35:41","endLine":106,"groupId":"10869","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"buildDatasetStateStore","params":"(Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/91/d8db7fdb54074f057984e944d179ca8b682455.src","preCode":"  static DatasetStateStore buildDatasetStateStore(Config config) throws IOException {\n    ClassAliasResolver<Factory> resolver =\n        new ClassAliasResolver<>(DatasetStateStore.Factory.class);\n\n    String stateStoreType = ConfigUtils.getString(config, ConfigurationKeys.STATE_STORE_TYPE_KEY,\n        ConfigurationKeys.DEFAULT_STATE_STORE_TYPE);\n\n    try {\n      DatasetStateStore.Factory stateStoreFactory =\n          resolver.resolveClass(stateStoreType).newInstance();\n\n      return stateStoreFactory.createStateStore(config);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/DatasetStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"N"}],"commitId":"7e63c7b914bdbd511a502f40c79b051acf8e514e","commitMessage":"@@@[GOBBLIN-33] Allow state store locations to be independently configured for intermediate and final state storage\n\nAllow state store locations to be independently\nconfigured for intermediate and final state\nstorage.\n\nAllow port to be non-standard when setting up\n`StateStores`\n\nBetter way to strip path from appWorkDir\n\nCloses #2035 from kadaan/Fix_for_GOBBLIN-33\n","date":"2017-08-16 03:46:40","modifiedFileCount":"8","status":"M","submitter":"Joel Baranick"}]
