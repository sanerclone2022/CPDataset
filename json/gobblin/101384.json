[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private PathFilter getFileFilter() {\n    final String extension = (this.expectedExtension.startsWith(\".\")) ?\n        this.expectedExtension :\n        \".\" + this.expectedExtension;\n\n    return new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return path.getName().endsWith(extension);\n      }\n    };\n  }\n","date":"2017-07-31 15:51:25","endLine":181,"groupId":"1993","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getFileFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e0/82bda1a55960a2f38933a6e5d81fa4f0b8cc49.src","preCode":"  private PathFilter getFileFilter() {\n    final String extension = (this.expectedExtension.startsWith(\".\")) ?\n        this.expectedExtension :\n        \".\" + this.expectedExtension;\n\n    return new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return path.getName().endsWith(extension);\n      }\n    };\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/RegexBasedPartitionedRetriever.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private PathFilter getFileFilter() {\n    final String extension = (this.expectedExtension.startsWith(\".\")) ?\n        this.expectedExtension :\n        \".\" + this.expectedExtension;\n\n    return new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return path.getName().endsWith(extension);\n      }\n    };\n  }\n","date":"2017-07-31 15:51:25","endLine":207,"groupId":"1993","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getFileFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a9/ff2576a27368f47ea12e7e36160ffcf82e3bb8.src","preCode":"  private PathFilter getFileFilter() {\n    final String extension = (this.expectedExtension.startsWith(\".\")) ?\n        this.expectedExtension :\n        \".\" + this.expectedExtension;\n\n    return new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return path.getName().endsWith(extension);\n      }\n    };\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/DatePartitionedNestedRetriever.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2018-02-09 03:40:19","codes":[{"authorDate":"2018-02-09 03:40:19","commitOrder":2,"curCode":"  private PathFilter getFileFilter() {\n    final String extension = (this.expectedExtension.startsWith(\".\")) ?\n        this.expectedExtension :\n        \".\" + this.expectedExtension;\n\n    return new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return path.getName().endsWith(extension) &&\n            !(schemaInSourceDir && path.getName().equals(schemaFile)) ;\n      }\n    };\n  }\n","date":"2018-02-09 03:40:19","endLine":188,"groupId":"101384","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getFileFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/7d/3ad92b6c4d1cf26f52a81f37d044e94c30ae8e.src","preCode":"  private PathFilter getFileFilter() {\n    final String extension = (this.expectedExtension.startsWith(\".\")) ?\n        this.expectedExtension :\n        \".\" + this.expectedExtension;\n\n    return new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return path.getName().endsWith(extension);\n      }\n    };\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/RegexBasedPartitionedRetriever.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"},{"authorDate":"2018-02-09 03:40:19","commitOrder":2,"curCode":"  private PathFilter getFileFilter() {\n    final String extension = (this.expectedExtension.startsWith(\".\")) ?\n        this.expectedExtension :\n        \".\" + this.expectedExtension;\n\n    return new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return path.getName().endsWith(extension) &&\n            !(schemaInSourceDir && path.getName().equals(schemaFile)) ;\n      }\n    };\n  }\n","date":"2018-02-09 03:40:19","endLine":214,"groupId":"101384","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getFileFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/4c/335552bb7d659c82c0607624d173fb4aa27137.src","preCode":"  private PathFilter getFileFilter() {\n    final String extension = (this.expectedExtension.startsWith(\".\")) ?\n        this.expectedExtension :\n        \".\" + this.expectedExtension;\n\n    return new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return path.getName().endsWith(extension);\n      }\n    };\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/DatePartitionedNestedRetriever.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"5c678d9b6b008c9fef0eeea731f2bf19e55e1cea","commitMessage":"@@@[GOBBLIN-396] add date partitioned based json source\n\nCloses #2270 from\narjun4084346/jsonDatePartitionedSource\n","date":"2018-02-09 03:40:19","modifiedFileCount":"7","status":"M","submitter":"Arjun"}]
