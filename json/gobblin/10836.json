[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void write(DataOutput out) throws IOException {\n    Text text = new Text();\n    text.set(this.jobId);\n    text.write(out);\n    text.set(this.taskId);\n    text.write(out);\n    out.writeLong(this.startTime);\n    out.writeLong(this.endTime);\n    out.writeLong(this.duration);\n    super.write(out);\n  }\n","date":"2017-07-31 15:51:25","endLine":330,"groupId":"3237","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"write","params":"(DataOutputout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6e/b2f5f19cd226071e2958a98f7b4e463da470e0.src","preCode":"  public void write(DataOutput out) throws IOException {\n    Text text = new Text();\n    text.set(this.jobId);\n    text.write(out);\n    text.set(this.taskId);\n    text.write(out);\n    out.writeLong(this.startTime);\n    out.writeLong(this.endTime);\n    out.writeLong(this.duration);\n    super.write(out);\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/TaskState.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":320,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void write(DataOutput out, boolean writeTasks)\n      throws IOException {\n    Text text = new Text();\n    text.set(this.jobName);\n    text.write(out);\n    text.set(this.jobId);\n    text.write(out);\n    out.writeLong(this.startTime);\n    out.writeLong(this.endTime);\n    out.writeLong(this.duration);\n    text.set(this.state.name());\n    text.write(out);\n    out.writeInt(this.taskCount);\n    if (writeTasks) {\n      out.writeInt(this.taskStates.size() + this.skippedTaskStates.size());\n      for (TaskState taskState : this.taskStates.values()) {\n        taskState.write(out);\n      }\n      for (TaskState taskState : this.skippedTaskStates.values()) {\n        taskState.write(out);\n      }\n    } else {\n      out.writeInt(0);\n    }\n    super.write(out);\n  }\n","date":"2017-07-31 15:51:25","endLine":544,"groupId":"3237","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(DataOutputout@booleanwriteTasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3b/d300600357068bade3336405cee3fb59ef9d54.src","preCode":"  public void write(DataOutput out, boolean writeTasks)\n      throws IOException {\n    Text text = new Text();\n    text.set(this.jobName);\n    text.write(out);\n    text.set(this.jobId);\n    text.write(out);\n    out.writeLong(this.startTime);\n    out.writeLong(this.endTime);\n    out.writeLong(this.duration);\n    text.set(this.state.name());\n    text.write(out);\n    out.writeInt(this.taskCount);\n    if (writeTasks) {\n      out.writeInt(this.taskStates.size() + this.skippedTaskStates.size());\n      for (TaskState taskState : this.taskStates.values()) {\n        taskState.write(out);\n      }\n      for (TaskState taskState : this.skippedTaskStates.values()) {\n        taskState.write(out);\n      }\n    } else {\n      out.writeInt(0);\n    }\n    super.write(out);\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/JobState.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":519,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2018-10-27 08:51:20","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void write(DataOutput out) throws IOException {\n    Text text = new Text();\n    text.set(this.jobId);\n    text.write(out);\n    text.set(this.taskId);\n    text.write(out);\n    out.writeLong(this.startTime);\n    out.writeLong(this.endTime);\n    out.writeLong(this.duration);\n    super.write(out);\n  }\n","date":"2017-07-31 15:51:25","endLine":330,"groupId":"10836","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"write","params":"(DataOutputout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6e/b2f5f19cd226071e2958a98f7b4e463da470e0.src","preCode":"  public void write(DataOutput out) throws IOException {\n    Text text = new Text();\n    text.set(this.jobId);\n    text.write(out);\n    text.set(this.taskId);\n    text.write(out);\n    out.writeLong(this.startTime);\n    out.writeLong(this.endTime);\n    out.writeLong(this.duration);\n    super.write(out);\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/TaskState.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":320,"status":"N"},{"authorDate":"2018-10-27 08:51:20","commitOrder":2,"curCode":"  public void write(DataOutput out, boolean writeTasks, boolean writePreviousWorkUnitStates)\n      throws IOException {\n    Text text = new Text();\n    text.set(this.jobName);\n    text.write(out);\n    text.set(this.jobId);\n    text.write(out);\n    out.writeLong(this.startTime);\n    out.writeLong(this.endTime);\n    out.writeLong(this.duration);\n    text.set(this.state.name());\n    text.write(out);\n    out.writeInt(this.taskCount);\n    if (writeTasks) {\n      out.writeInt(this.taskStates.size() + this.skippedTaskStates.size());\n      for (TaskState taskState : this.taskStates.values()) {\n        taskState.write(out);\n      }\n      for (TaskState taskState : this.skippedTaskStates.values()) {\n        taskState.write(out);\n      }\n    } else {\n      out.writeInt(0);\n    }\n    super.write(out, writePreviousWorkUnitStates);\n  }\n","date":"2018-10-27 08:51:20","endLine":554,"groupId":"10836","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(DataOutputout@booleanwriteTasks@booleanwritePreviousWorkUnitStates)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/c0/f92710a4b104b145360f5950d772dfa0b3fecb.src","preCode":"  public void write(DataOutput out, boolean writeTasks)\n      throws IOException {\n    Text text = new Text();\n    text.set(this.jobName);\n    text.write(out);\n    text.set(this.jobId);\n    text.write(out);\n    out.writeLong(this.startTime);\n    out.writeLong(this.endTime);\n    out.writeLong(this.duration);\n    text.set(this.state.name());\n    text.write(out);\n    out.writeInt(this.taskCount);\n    if (writeTasks) {\n      out.writeInt(this.taskStates.size() + this.skippedTaskStates.size());\n      for (TaskState taskState : this.taskStates.values()) {\n        taskState.write(out);\n      }\n      for (TaskState taskState : this.skippedTaskStates.values()) {\n        taskState.write(out);\n      }\n    } else {\n      out.writeInt(0);\n    }\n    super.write(out);\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/runtime/JobState.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":529,"status":"M"}],"commitId":"602cee793711e63f72304835cd35762d9087770c","commitMessage":"@@@[GOBBLIN-622] Avoid writing previous workunits in SourceState\n\nCloses #2491 from yukuai518/p2\n","date":"2018-10-27 08:51:20","modifiedFileCount":"3","status":"M","submitter":"Kuai Yu"}]
