[{"authorTime":"2018-10-02 12:20:23","codes":[{"authorDate":"2018-10-02 12:20:23","commitOrder":2,"curCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 2000L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 6000L);\n    Assert.assertEquals(flowStatus.getMessage(), js2.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size());\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","date":"2018-10-02 12:20:23","endLine":137,"groupId":"1147","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindLatest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/e857ef22c32fb6a09ffbfd164eb2193a3bd90a.src","preCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 2000L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 6000L);\n    Assert.assertEquals(flowStatus.getMessage(), js2.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size());\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"MB"},{"authorDate":"2018-10-02 12:20:23","commitOrder":2,"curCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1000L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 6000L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js1.getMessage(), js2.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size());\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","date":"2018-10-02 12:20:23","endLine":217,"groupId":"7094","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/e857ef22c32fb6a09ffbfd164eb2193a3bd90a.src","preCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1000L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 6000L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js1.getMessage(), js2.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size());\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"MB"}],"commitId":"391615e72e5f7bdd78034447881a3e325a0288e6","commitMessage":"@@@[GOBBLIN-597] avoid submitting gaas job if it is already running\n\nCloses #2463 from\narjun4084346/skipDuplicateGaasJob\n","date":"2018-10-02 12:20:23","modifiedFileCount":"9","status":"M","submitter":"Arjun"},{"authorTime":"2018-10-02 12:20:23","codes":[{"authorDate":"2019-02-28 05:29:25","commitOrder":3,"curCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 2000L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 6000L);\n    Assert.assertEquals(flowStatus.getMessage(), js2.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size());\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n\n    List<FlowStatus> flowStatusList = _client.getLatestFlowStatus(flowId, 2);\n    Assert.assertEquals(flowStatusList.size(), 2);\n    Assert.assertEquals(flowStatusList.get(0).getId().getFlowExecutionId(), (Long) 1L);\n    Assert.assertEquals(flowStatusList.get(1).getId().getFlowExecutionId(), (Long) 0L);\n  }\n","date":"2019-02-28 05:29:25","endLine":152,"groupId":"1147","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindLatest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f3/39eb26d79dc0da2e91f3379b0334d42e741846.src","preCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 2000L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 6000L);\n    Assert.assertEquals(flowStatus.getMessage(), js2.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size());\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2018-10-02 12:20:23","commitOrder":3,"curCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1000L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 6000L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js1.getMessage(), js2.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size());\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","date":"2018-10-02 12:20:23","endLine":217,"groupId":"7094","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d5/e857ef22c32fb6a09ffbfd164eb2193a3bd90a.src","preCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1000L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 6000L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js1.getMessage(), js2.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size());\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"N"}],"commitId":"970a4a6ed7674d6e6cdf7b3bce5e017a7ed33d5d","commitMessage":"@@@[GOBBLIN-692] Add support to query last K flow executions in Gobblin-a?\n\nCloses #2564 from sv2000/restFlowStatus\n","date":"2019-02-28 05:29:25","modifiedFileCount":"8","status":"M","submitter":"suvasude"},{"authorTime":"2019-08-20 13:49:20","codes":[{"authorDate":"2019-08-20 13:49:20","commitOrder":4,"curCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(7000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1, fs1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2, fs2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 7000L);\n    Assert.assertEquals(flowStatus.getMessage(), js2.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n\n    List<FlowStatus> flowStatusList = _client.getLatestFlowStatus(flowId, 2);\n    Assert.assertEquals(flowStatusList.size(), 2);\n    Assert.assertEquals(flowStatusList.get(0).getId().getFlowExecutionId(), (Long) 1L);\n    Assert.assertEquals(flowStatusList.get(1).getId().getFlowExecutionId(), (Long) 0L);\n  }\n","date":"2019-08-20 13:49:20","endLine":165,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindLatest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6a/86607f6518fab69181c2b6fac70ccc0146ab90.src","preCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 2000L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 6000L);\n    Assert.assertEquals(flowStatus.getMessage(), js2.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size());\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n\n    List<FlowStatus> flowStatusList = _client.getLatestFlowStatus(flowId, 2);\n    Assert.assertEquals(flowStatusList.size(), 2);\n    Assert.assertEquals(flowStatusList.get(0).getId().getFlowExecutionId(), (Long) 1L);\n    Assert.assertEquals(flowStatusList.get(1).getId().getFlowExecutionId(), (Long) 0L);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2019-08-20 13:49:20","commitOrder":4,"curCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2, fs1);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js1.getMessage(), js2.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","date":"2019-08-20 13:49:20","endLine":251,"groupId":"7094","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6a/86607f6518fab69181c2b6fac70ccc0146ab90.src","preCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1000L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 6000L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js1.getMessage(), js2.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size());\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"}],"commitId":"59f3beeea1e62dcc1f3901f082e46bc3d237f9fb","commitMessage":"@@@[GOBBLIN-860] Process flow-level events for setting/retrieving flow status\n\nCloses #2715 from jack-moseley/flow-level-events\n","date":"2019-08-20 13:49:20","modifiedFileCount":"9","status":"M","submitter":"Jack Moseley"},{"authorTime":"2019-08-20 13:49:20","codes":[{"authorDate":"2019-09-28 04:26:03","commitOrder":5,"curCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").jobTag(\"dataset1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js3 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").jobTag(\"dataset2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 3\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(7000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1, fs1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2, js3, fs2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 7000L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js2.getMessage(), js3.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n\n    List<FlowStatus> flowStatusList = _client.getLatestFlowStatus(flowId, 2, null);\n    Assert.assertEquals(flowStatusList.size(), 2);\n    Assert.assertEquals(flowStatusList.get(0).getId().getFlowExecutionId(), (Long) 1L);\n    Assert.assertEquals(flowStatusList.get(1).getId().getFlowExecutionId(), (Long) 0L);\n    Assert.assertEquals(flowStatusList.get(0).getJobStatuses().size(), 2);\n\n    List<FlowStatus> flowStatusList2 = _client.getLatestFlowStatus(flowId, 1, \"dataset1\");\n    Assert.assertEquals(flowStatusList2.get(0).getJobStatuses().size(), 1);\n    Assert.assertEquals(flowStatusList2.get(0).getJobStatuses().get(0).getJobTag(), \"dataset1\");\n  }\n","date":"2019-09-28 04:26:03","endLine":174,"groupId":"3075","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindLatest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b0/08f83739e6564154699fe82e6b49db8a05ff98.src","preCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(7000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1, fs1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2, fs2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 7000L);\n    Assert.assertEquals(flowStatus.getMessage(), js2.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n\n    List<FlowStatus> flowStatusList = _client.getLatestFlowStatus(flowId, 2);\n    Assert.assertEquals(flowStatusList.size(), 2);\n    Assert.assertEquals(flowStatusList.get(0).getId().getFlowExecutionId(), (Long) 1L);\n    Assert.assertEquals(flowStatusList.get(1).getId().getFlowExecutionId(), (Long) 0L);\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2019-08-20 13:49:20","commitOrder":5,"curCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2, fs1);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js1.getMessage(), js2.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","date":"2019-08-20 13:49:20","endLine":251,"groupId":"7094","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6a/86607f6518fab69181c2b6fac70ccc0146ab90.src","preCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2, fs1);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js1.getMessage(), js2.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"N"}],"commitId":"5d4795e28fe7502b0e2233fc830c2b3f7adeb637","commitMessage":"@@@[GOBBLIN-881] Add job tag field that can be used to filter job statuses\n\nCloses #2735 from jack-moseley/job-tags\n","date":"2019-09-28 04:26:03","modifiedFileCount":"9","status":"M","submitter":"Jack Moseley"},{"authorTime":"2020-06-02 09:27:07","codes":[{"authorDate":"2020-06-02 09:27:07","commitOrder":6,"curCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").jobTag(\"dataset1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js3 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").jobTag(\"dataset2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 3\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(7000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Flow message\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1, fs1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2, js3, fs2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 7000L);\n    Assert.assertEquals(flowStatus.getMessage(), fs2.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n\n    List<FlowStatus> flowStatusList = _client.getLatestFlowStatus(flowId, 2, null);\n    Assert.assertEquals(flowStatusList.size(), 2);\n    Assert.assertEquals(flowStatusList.get(0).getId().getFlowExecutionId(), (Long) 1L);\n    Assert.assertEquals(flowStatusList.get(1).getId().getFlowExecutionId(), (Long) 0L);\n    Assert.assertEquals(flowStatusList.get(0).getJobStatuses().size(), 2);\n\n    List<FlowStatus> flowStatusList2 = _client.getLatestFlowStatus(flowId, 1, \"dataset1\");\n    Assert.assertEquals(flowStatusList2.get(0).getJobStatuses().size(), 1);\n    Assert.assertEquals(flowStatusList2.get(0).getJobStatuses().get(0).getJobTag(), \"dataset1\");\n  }\n","date":"2020-06-02 09:27:07","endLine":167,"groupId":"3075","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindLatest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e1/33582f05b4b1faa7b13aa454c2f8bb40a967ee.src","preCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").jobTag(\"dataset1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js3 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").jobTag(\"dataset2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 3\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(7000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1, fs1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2, js3, fs2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 7000L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js2.getMessage(), js3.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n\n    List<FlowStatus> flowStatusList = _client.getLatestFlowStatus(flowId, 2, null);\n    Assert.assertEquals(flowStatusList.size(), 2);\n    Assert.assertEquals(flowStatusList.get(0).getId().getFlowExecutionId(), (Long) 1L);\n    Assert.assertEquals(flowStatusList.get(1).getId().getFlowExecutionId(), (Long) 0L);\n    Assert.assertEquals(flowStatusList.get(0).getJobStatuses().size(), 2);\n\n    List<FlowStatus> flowStatusList2 = _client.getLatestFlowStatus(flowId, 1, \"dataset1\");\n    Assert.assertEquals(flowStatusList2.get(0).getJobStatuses().size(), 1);\n    Assert.assertEquals(flowStatusList2.get(0).getJobStatuses().get(0).getJobTag(), \"dataset1\");\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2020-06-02 09:27:07","commitOrder":6,"curCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Flow message\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2, fs1);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getMessage(), fs1.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","date":"2020-06-02 09:27:07","endLine":253,"groupId":"3042","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e1/33582f05b4b1faa7b13aa454c2f8bb40a967ee.src","preCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2, fs1);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getMessage(), messageJoiner.join(js1.getMessage(), js2.getMessage()));\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"}],"commitId":"93f9a817ff9cc259734eec81e4cb7408aab8cc98","commitMessage":"@@@[GOBBLIN-1154] Improve gaas error messages\n\nCloses #2993 from jack-moseley/gaas-improved-\nerrors\n","date":"2020-06-02 09:27:07","modifiedFileCount":"9","status":"M","submitter":"Jack Moseley"},{"authorTime":"2021-07-16 02:37:59","codes":[{"authorDate":"2021-07-16 02:37:59","commitOrder":7,"curCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 =\n        org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\")\n            .jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n            .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n            .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").issues(Collections.emptyList())\n            .build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 =\n        org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\")\n            .jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(5000L)\n            .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).issues(Collections.emptyList()).build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 =\n        org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\")\n            .jobGroup(\"jgroup1\").jobName(\"job1\").jobTag(\"dataset1\").startTime(2000L).endTime(6000L)\n            .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\").processedCount(200)\n            .jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").issues(Collections.emptyList())\n            .build();\n    org.apache.gobblin.service.monitoring.JobStatus js3 =\n        org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\")\n            .jobGroup(\"jgroup1\").jobName(\"job2\").jobTag(\"dataset2\").startTime(2000L).endTime(6000L)\n            .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 3\").processedCount(200)\n            .jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").issues(Collections.emptyList())\n            .build();\n    org.apache.gobblin.service.monitoring.JobStatus fs2 =\n        org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\")\n            .jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(7000L)\n            .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Flow message\")\n            .issues(Collections.emptyList()).build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1, fs1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2, js3, fs2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 7000L);\n    Assert.assertEquals(flowStatus.getMessage(), fs2.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n\n    List<FlowStatus> flowStatusList = _client.getLatestFlowStatus(flowId, 2, null);\n    Assert.assertEquals(flowStatusList.size(), 2);\n    Assert.assertEquals(flowStatusList.get(0).getId().getFlowExecutionId(), (Long) 1L);\n    Assert.assertEquals(flowStatusList.get(1).getId().getFlowExecutionId(), (Long) 0L);\n    Assert.assertEquals(flowStatusList.get(0).getJobStatuses().size(), 2);\n\n    List<FlowStatus> flowStatusList2 = _client.getLatestFlowStatus(flowId, 1, \"dataset1\");\n    Assert.assertEquals(flowStatusList2.get(0).getJobStatuses().size(), 1);\n    Assert.assertEquals(flowStatusList2.get(0).getJobStatuses().get(0).getJobTag(), \"dataset1\");\n  }\n","date":"2021-07-16 02:37:59","endLine":183,"groupId":"101512","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindLatest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/da/81dd939e22e387b77b756ad4996088ca672134.src","preCode":"  public void testFindLatest() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\")\n        .processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(5000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").jobTag(\"dataset1\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js3 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").jobTag(\"dataset2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Test message 3\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(7000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(\"Flow message\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList1 = Lists.newArrayList(js1, fs1);\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList2 = Lists.newArrayList(js2, js3, fs2);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList1);\n    _listOfJobStatusLists.add(jobStatusList2);\n\n    FlowId flowId = new FlowId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\");\n    FlowStatus flowStatus = _client.getLatestFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 1L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 7000L);\n    Assert.assertEquals(flowStatus.getMessage(), fs2.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.COMPLETE);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList2.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList2.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n\n    List<FlowStatus> flowStatusList = _client.getLatestFlowStatus(flowId, 2, null);\n    Assert.assertEquals(flowStatusList.size(), 2);\n    Assert.assertEquals(flowStatusList.get(0).getId().getFlowExecutionId(), (Long) 1L);\n    Assert.assertEquals(flowStatusList.get(1).getId().getFlowExecutionId(), (Long) 0L);\n    Assert.assertEquals(flowStatusList.get(0).getJobStatuses().size(), 2);\n\n    List<FlowStatus> flowStatusList2 = _client.getLatestFlowStatus(flowId, 1, \"dataset1\");\n    Assert.assertEquals(flowStatusList2.get(0).getJobStatuses().size(), 1);\n    Assert.assertEquals(flowStatusList2.get(0).getJobStatuses().get(0).getJobTag(), \"dataset1\");\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2021-07-16 02:37:59","commitOrder":7,"curCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 =\n        org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\")\n            .jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n            .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n            .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").issues(Collections.emptyList())\n            .build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 =\n        org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\")\n            .jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n            .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\").processedCount(200)\n            .jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").issues(Collections.emptyList())\n            .build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 =\n        org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\")\n            .jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY)\n            .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Flow message\")\n            .issues(Collections.emptyList()).build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2, fs1);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getMessage(), fs1.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","date":"2021-07-16 02:37:59","endLine":281,"groupId":"101512","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/da/81dd939e22e387b77b756ad4996088ca672134.src","preCode":"  public void testGetRunning() throws Exception {\n    org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100)\n        .jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build();\n    org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L)\n        .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\")\n        .processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build();\n    org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\")\n        .flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY)\n        .eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Flow message\").build();\n    List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1, js2, fs1);\n    _listOfJobStatusLists = Lists.newArrayList();\n    _listOfJobStatusLists.add(jobStatusList);\n\n    FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0);\n    FlowStatus flowStatus = _client.getFlowStatus(flowId);\n\n    Assert.assertEquals(flowStatus.getId().getFlowGroup(), \"fgroup1\");\n    Assert.assertEquals(flowStatus.getId().getFlowName(), \"flow1\");\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(), 0L);\n    Assert.assertEquals(flowStatus.getMessage(), fs1.getMessage());\n    Assert.assertEquals(flowStatus.getExecutionStatus(), ExecutionStatus.RUNNING);\n\n    JobStatusArray jobStatuses = flowStatus.getJobStatuses();\n\n    Assert.assertEquals(jobStatusList.size(), jobStatuses.size() + 1);\n\n    for (int i = 0; i < jobStatuses.size(); i++) {\n      org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i);\n      JobStatus js = jobStatuses.get(i);\n\n      compareJobStatus(js, mjs);\n    }\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"}],"commitId":"b5e32b158bd713c45caa5b4b8866f8a4c4fc3a29","commitMessage":"@@@[GOBBLIN-1457] Add automatic troubleshooter to Gobblin service (#3299)\n\nIn previous commits.  we've added automatic troubleshooting to Gobblin\nAzkaban jobs.  and here we will collect and expose discovered issues\nin Gobblin service.\n\nInitial implementation will store issues for a limited number of jobs in\nmemory.  and future commits will add persistence.","date":"2021-07-16 02:37:59","modifiedFileCount":"14","status":"M","submitter":"Alex Prokofiev"}]
