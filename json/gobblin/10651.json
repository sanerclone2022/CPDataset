[{"authorTime":"2018-07-10 00:30:25","codes":[{"authorDate":"2018-07-10 00:30:25","commitOrder":1,"curCode":"  public void testCanBuildGPG() throws IOException {\n    Map<String, Object> encryptionProperties = new HashMap<>();\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, GPGCodec.TAG);\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEYSTORE_PATH_KEY, GPGFileEncryptor.class.getResource(\n        GPGFileEncryptorTest.PUBLIC_KEY).toString());\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEY_NAME, String.valueOf(GPGFileEncryptorTest.KEY_ID));\n\n    testGPG(encryptionProperties);\n  }\n","date":"2018-07-10 00:30:25","endLine":68,"groupId":"574","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCanBuildGPG","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/68/2e03dce04c04cf9d754e0f7e9fb90ec1c5b4f6.src","preCode":"  public void testCanBuildGPG() throws IOException {\n    Map<String, Object> encryptionProperties = new HashMap<>();\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, GPGCodec.TAG);\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEYSTORE_PATH_KEY, GPGFileEncryptor.class.getResource(\n        GPGFileEncryptorTest.PUBLIC_KEY).toString());\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEY_NAME, String.valueOf(GPGFileEncryptorTest.KEY_ID));\n\n    testGPG(encryptionProperties);\n  }\n","realPath":"gobblin-modules/gobblin-crypto-provider/src/test/java/org/apache/gobblin/crypto/GobblinEncryptionProviderTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2018-07-10 00:30:25","commitOrder":1,"curCode":"  public void testBuildGPGBadCipher() throws IOException {\n    Map<String, Object> encryptionProperties = new HashMap<>();\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, GPGCodec.TAG);\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEYSTORE_PATH_KEY, GPGFileEncryptor.class.getResource(\n        GPGFileEncryptorTest.PUBLIC_KEY).toString());\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEY_NAME, String.valueOf(GPGFileEncryptorTest.KEY_ID));\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_CIPHER_KEY, \"BadCipher\");\n\n    testGPG(encryptionProperties);\n  }\n","date":"2018-07-10 00:30:25","endLine":92,"groupId":"574","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBuildGPGBadCipher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/68/2e03dce04c04cf9d754e0f7e9fb90ec1c5b4f6.src","preCode":"  public void testBuildGPGBadCipher() throws IOException {\n    Map<String, Object> encryptionProperties = new HashMap<>();\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, GPGCodec.TAG);\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEYSTORE_PATH_KEY, GPGFileEncryptor.class.getResource(\n        GPGFileEncryptorTest.PUBLIC_KEY).toString());\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEY_NAME, String.valueOf(GPGFileEncryptorTest.KEY_ID));\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_CIPHER_KEY, \"BadCipher\");\n\n    testGPG(encryptionProperties);\n  }\n","realPath":"gobblin-modules/gobblin-crypto-provider/src/test/java/org/apache/gobblin/crypto/GobblinEncryptionProviderTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"e92e5f8a0f7641cbe89279f0a977f9f27a6ba768","commitMessage":"@@@[GOBBLIN-521] Add support for encryption in the GPGCodec\n\nCloses #2391 from htran1/gpg_encryptor\n","date":"2018-07-10 00:30:25","modifiedFileCount":"6","status":"B","submitter":"Hung Tran"},{"authorTime":"2018-08-03 02:53:53","codes":[{"authorDate":"2018-08-03 02:53:53","commitOrder":2,"curCode":"  public void testCanBuildGPG() throws IOException {\n    Map<String, Object> encryptionProperties = new HashMap<>();\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, GPGCodec.TAG);\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEYSTORE_PATH_KEY, GPGFileEncryptor.class.getResource(\n        PUBLIC_KEY).toString());\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEY_NAME, String.valueOf(GPGFileEncryptorTest.KEY_ID));\n\n    testGPG(encryptionProperties);\n  }\n","date":"2018-08-03 02:53:53","endLine":70,"groupId":"10651","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testCanBuildGPG","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/42/1c7ba8314ca56989a785861275d73ca23cc8aa.src","preCode":"  public void testCanBuildGPG() throws IOException {\n    Map<String, Object> encryptionProperties = new HashMap<>();\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, GPGCodec.TAG);\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEYSTORE_PATH_KEY, GPGFileEncryptor.class.getResource(\n        GPGFileEncryptorTest.PUBLIC_KEY).toString());\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEY_NAME, String.valueOf(GPGFileEncryptorTest.KEY_ID));\n\n    testGPG(encryptionProperties);\n  }\n","realPath":"gobblin-modules/gobblin-crypto-provider/src/test/java/org/apache/gobblin/crypto/GobblinEncryptionProviderTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2018-08-03 02:53:53","commitOrder":2,"curCode":"  public void testBuildGPGBadCipher() throws IOException {\n    Map<String, Object> encryptionProperties = new HashMap<>();\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, GPGCodec.TAG);\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEYSTORE_PATH_KEY, GPGFileEncryptor.class.getResource(\n        PUBLIC_KEY).toString());\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEY_NAME, String.valueOf(GPGFileEncryptorTest.KEY_ID));\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_CIPHER_KEY, \"BadCipher\");\n\n    testGPG(encryptionProperties);\n  }\n","date":"2018-08-03 02:53:53","endLine":94,"groupId":"10651","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testBuildGPGBadCipher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/42/1c7ba8314ca56989a785861275d73ca23cc8aa.src","preCode":"  public void testBuildGPGBadCipher() throws IOException {\n    Map<String, Object> encryptionProperties = new HashMap<>();\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, GPGCodec.TAG);\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEYSTORE_PATH_KEY, GPGFileEncryptor.class.getResource(\n        GPGFileEncryptorTest.PUBLIC_KEY).toString());\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_KEY_NAME, String.valueOf(GPGFileEncryptorTest.KEY_ID));\n    encryptionProperties.put(EncryptionConfigParser.ENCRYPTION_CIPHER_KEY, \"BadCipher\");\n\n    testGPG(encryptionProperties);\n  }\n","realPath":"gobblin-modules/gobblin-crypto-provider/src/test/java/org/apache/gobblin/crypto/GobblinEncryptionProviderTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"7ab7f8b098a1ca7e2b45fef98f2c28e470796199","commitMessage":"@@@[GOBBLIN-553] Fix FileAwareInputStreamDataWriterTest access to public key\n\nCloses #2414 from htran1/encryption_test_fix1\n","date":"2018-08-03 02:53:53","modifiedFileCount":"2","status":"M","submitter":"Hung Tran"}]
