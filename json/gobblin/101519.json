[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2018-09-08 08:29:14","commitOrder":2,"curCode":"  public void updateFlowConfig(FlowConfig flowConfig)\n      throws RemoteInvocationException {\n    LOG.debug(\"updateFlowConfig with groupName \" + flowConfig.getId().getFlowGroup() + \" flowName \" +\n        flowConfig.getId().getFlowName());\n\n    FlowId flowId = new FlowId().setFlowGroup(flowConfig.getId().getFlowGroup())\n        .setFlowName(flowConfig.getId().getFlowName());\n\n    UpdateRequest<FlowConfig> updateRequest =\n        _flowconfigsV2RequestBuilders.update().id(new ComplexResourceKey<>(flowId, new FlowStatusId()))\n            .input(flowConfig).build();\n\n    ResponseFuture<EmptyRecord> response = _restClient.get().sendRequest(updateRequest);\n\n    response.getResponse();\n  }\n","date":"2018-09-08 08:29:14","endLine":148,"groupId":"4087","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"updateFlowConfig","params":"(FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/14/71883803d9cf7b786655cc01933f73f79578dd.src","preCode":"  public void updateFlowConfig(FlowConfig flowConfig)\n      throws RemoteInvocationException {\n    LOG.debug(\"updateFlowConfig with groupName \" + flowConfig.getId().getFlowGroup() + \" flowName \" +\n        flowConfig.getId().getFlowName());\n\n    FlowId flowId = new FlowId().setFlowGroup(flowConfig.getId().getFlowGroup())\n        .setFlowName(flowConfig.getId().getFlowName());\n\n    UpdateRequest<FlowConfig> updateRequest =\n        _flowconfigsV2RequestBuilders.update().id(new ComplexResourceKey<>(flowId, new FlowStatusId()))\n            .input(flowConfig).build();\n\n    ResponseFuture<EmptyRecord> response = _restClient.get().sendRequest(updateRequest);\n\n    response.getResponse();\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/main/java/org/apache/gobblin/service/FlowConfigV2Client.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void deleteFlowConfig(FlowId flowId)\n      throws RemoteInvocationException {\n    LOG.debug(\"deleteFlowConfig with groupName \" + flowId.getFlowGroup() + \" flowName \" +\n        flowId.getFlowName());\n\n    DeleteRequest<FlowConfig> deleteRequest = _flowconfigsRequestBuilders.delete()\n        .id(new ComplexResourceKey<>(flowId, new EmptyRecord())).build();\n    ResponseFuture<EmptyRecord> response = _restClient.get().sendRequest(deleteRequest);\n\n    response.getResponse();\n  }\n","date":"2017-07-31 15:51:25","endLine":157,"groupId":"6879","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteFlowConfig","params":"(FlowIdflowId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/28/255bb7489509aeb6d24e28dfd6f5cef565b96f.src","preCode":"  public void deleteFlowConfig(FlowId flowId)\n      throws RemoteInvocationException {\n    LOG.debug(\"deleteFlowConfig with groupName \" + flowId.getFlowGroup() + \" flowName \" +\n        flowId.getFlowName());\n\n    DeleteRequest<FlowConfig> deleteRequest = _flowconfigsRequestBuilders.delete()\n        .id(new ComplexResourceKey<>(flowId, new EmptyRecord())).build();\n    ResponseFuture<EmptyRecord> response = _restClient.get().sendRequest(deleteRequest);\n\n    response.getResponse();\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/main/java/org/apache/gobblin/service/FlowConfigClient.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"NB"}],"commitId":"1896d7fab5ec43ac248fdb5bebf0218bed156d00","commitMessage":"@@@[GOBBLIN-538] Flow config v2 resource\n\nCloses #2431 from\narjun4084346/FlowConfigV2Resource\n","date":"2018-09-08 08:29:14","modifiedFileCount":"5","status":"M","submitter":"Arjun"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2020-11-04 06:14:06","commitOrder":3,"curCode":"  public void updateFlowConfig(FlowConfig flowConfig)\n      throws RemoteInvocationException {\n    LOG.debug(\"updateFlowConfig with groupName \" + flowConfig.getId().getFlowGroup() + \" flowName \" +\n        flowConfig.getId().getFlowName());\n\n    FlowId flowId = new FlowId().setFlowGroup(flowConfig.getId().getFlowGroup())\n        .setFlowName(flowConfig.getId().getFlowName());\n\n    UpdateRequest<FlowConfig> updateRequest =\n        _flowconfigsV2RequestBuilders.update().id(new ComplexResourceKey<>(flowId, new FlowStatusId()))\n            .input(flowConfig).build();\n\n    FlowClientUtils.sendRequestWithRetry(_restClient.get(), updateRequest, FlowconfigsV2RequestBuilders.getPrimaryResource());\n  }\n","date":"2020-11-04 06:14:06","endLine":159,"groupId":"101519","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"updateFlowConfig","params":"(FlowConfigflowConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/64/269d4ac483385fe396848fe21281cf5c5a5b14.src","preCode":"  public void updateFlowConfig(FlowConfig flowConfig)\n      throws RemoteInvocationException {\n    LOG.debug(\"updateFlowConfig with groupName \" + flowConfig.getId().getFlowGroup() + \" flowName \" +\n        flowConfig.getId().getFlowName());\n\n    FlowId flowId = new FlowId().setFlowGroup(flowConfig.getId().getFlowGroup())\n        .setFlowName(flowConfig.getId().getFlowName());\n\n    UpdateRequest<FlowConfig> updateRequest =\n        _flowconfigsV2RequestBuilders.update().id(new ComplexResourceKey<>(flowId, new FlowStatusId()))\n            .input(flowConfig).build();\n\n    ResponseFuture<EmptyRecord> response = _restClient.get().sendRequest(updateRequest);\n\n    response.getResponse();\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/main/java/org/apache/gobblin/service/FlowConfigV2Client.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":3,"curCode":"  public void deleteFlowConfig(FlowId flowId)\n      throws RemoteInvocationException {\n    LOG.debug(\"deleteFlowConfig with groupName \" + flowId.getFlowGroup() + \" flowName \" +\n        flowId.getFlowName());\n\n    DeleteRequest<FlowConfig> deleteRequest = _flowconfigsRequestBuilders.delete()\n        .id(new ComplexResourceKey<>(flowId, new EmptyRecord())).build();\n    ResponseFuture<EmptyRecord> response = _restClient.get().sendRequest(deleteRequest);\n\n    response.getResponse();\n  }\n","date":"2017-07-31 15:51:25","endLine":157,"groupId":"101519","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteFlowConfig","params":"(FlowIdflowId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/28/255bb7489509aeb6d24e28dfd6f5cef565b96f.src","preCode":"  public void deleteFlowConfig(FlowId flowId)\n      throws RemoteInvocationException {\n    LOG.debug(\"deleteFlowConfig with groupName \" + flowId.getFlowGroup() + \" flowName \" +\n        flowId.getFlowName());\n\n    DeleteRequest<FlowConfig> deleteRequest = _flowconfigsRequestBuilders.delete()\n        .id(new ComplexResourceKey<>(flowId, new EmptyRecord())).build();\n    ResponseFuture<EmptyRecord> response = _restClient.get().sendRequest(deleteRequest);\n\n    response.getResponse();\n  }\n","realPath":"gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/main/java/org/apache/gobblin/service/FlowConfigClient.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"N"}],"commitId":"f2767242fe863307feaf68332f0d3617f30e8e4b","commitMessage":"@@@[GOBBLIN-1285] Add option to only accept requests to leader node and redirect requests in the client\n\nCloses #3124 from jack-moseley/gaas-redirect\n","date":"2020-11-04 06:14:06","modifiedFileCount":"9","status":"M","submitter":"Jack Moseley"}]
