[{"authorTime":"2021-03-24 06:21:10","codes":[{"authorDate":"2021-03-24 06:21:10","commitOrder":1,"curCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      return Optional.of(new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testIcebergTable\").build());\n    }\n","date":"2021-03-24 06:21:10","endLine":264,"groupId":"3821","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPartition","params":"(Pathpath@HiveTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/88/f72f9d7d827c246090f6d366803fa6d3cbe3e0.src","preCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      return Optional.of(new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testIcebergTable\").build());\n    }\n","realPath":"gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"B"},{"authorDate":"2021-03-24 06:21:10","commitOrder":1,"curCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      HivePartition partition = new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testTable\").build();\n      partition.setLocation(path.toString());\n      return Optional.of(partition);\n    }\n","date":"2021-03-24 06:21:10","endLine":272,"groupId":"2305","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartition","params":"(Pathpath@HiveTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0d/13ecf8271eab82791b699d1a47a2b90db7d4bf.src","preCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      HivePartition partition = new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testTable\").build();\n      partition.setLocation(path.toString());\n      return Optional.of(partition);\n    }\n","realPath":"gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/HiveMetadataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"B"}],"commitId":"d9ae5353c74fdcd385835fca9b586b3fdb90971b","commitMessage":"@@@[GOBBLIN-1396] Enable HiveWriter to consume gmce and register into hive MetadataStore\n\n[GOBBLIN-1396]Enable HiveWriter to consume gmce\nand register into hive MetadataStore\n\nbug fix\n\nadd default branch to pass styleCheck\n\nbug fix to avoid dead lock\n\naddress comments\n\naddress comments\n\nenable rewrite/drop file in HiveMetadataWriter\n\nremove unintentional change\n\naddress comments\n\nforce to set schema literal\n\nCloses #3234 from ZihanLi58/GOBBLIN-1396\n","date":"2021-03-24 06:21:10","modifiedFileCount":"5","status":"B","submitter":"Zihan Li"},{"authorTime":"2021-07-16 02:46:56","codes":[{"authorDate":"2021-03-24 06:21:10","commitOrder":2,"curCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      return Optional.of(new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testIcebergTable\").build());\n    }\n","date":"2021-03-24 06:21:10","endLine":264,"groupId":"3821","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getPartition","params":"(Pathpath@HiveTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/88/f72f9d7d827c246090f6d366803fa6d3cbe3e0.src","preCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      return Optional.of(new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testIcebergTable\").build());\n    }\n","realPath":"gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2021-07-16 02:46:56","commitOrder":2,"curCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      HivePartition partition = new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(table.getDbName()).withTableName(table.getTableName()).build();\n      partition.setLocation(path.toString());\n      return Optional.of(partition);\n    }\n","date":"2021-07-16 02:46:56","endLine":289,"groupId":"2305","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartition","params":"(Pathpath@HiveTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/11/756dd12359d710965e57644e70247446982008.src","preCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      HivePartition partition = new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testTable\").build();\n      partition.setLocation(path.toString());\n      return Optional.of(partition);\n    }\n","realPath":"gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/HiveMetadataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"M"}],"commitId":"e5b6461ecfa5422bdbc309293e753932af7cd5dd","commitMessage":"@@@Merge pull request #3329 from ZihanLi58/GOBBLIN-1484\n\n[GOBBLIN-1484]Make Gobblin metadata writer be able to support schema source DB","date":"2021-07-16 02:46:56","modifiedFileCount":"5","status":"M","submitter":"Sudarshan Vasudevan"},{"authorTime":"2021-07-16 02:46:56","codes":[{"authorDate":"2021-09-11 03:02:42","commitOrder":3,"curCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/10\")) {\n        partitionValue = \"2020-03-17-10\";\n      }  else if (path.toString().contains(\"hourly/2020/03/17/11\")) {\n        partitionValue = \"2020-03-17-11\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/12\")) {\n        partitionValue = \"2020-03-17-12\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      return Optional.of(new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testIcebergTable\").build());\n    }\n","date":"2021-09-11 03:02:42","endLine":454,"groupId":"3844","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getPartition","params":"(Pathpath@HiveTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/c2/34675526d8e6fe21bf54a3fb176b7c01dd1cf1.src","preCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      return Optional.of(new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testIcebergTable\").build());\n    }\n","realPath":"gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"M"},{"authorDate":"2021-07-16 02:46:56","commitOrder":3,"curCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      HivePartition partition = new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(table.getDbName()).withTableName(table.getTableName()).build();\n      partition.setLocation(path.toString());\n      return Optional.of(partition);\n    }\n","date":"2021-07-16 02:46:56","endLine":289,"groupId":"2305","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartition","params":"(Pathpath@HiveTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/11/756dd12359d710965e57644e70247446982008.src","preCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      HivePartition partition = new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(table.getDbName()).withTableName(table.getTableName()).build();\n      partition.setLocation(path.toString());\n      return Optional.of(partition);\n    }\n","realPath":"gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/HiveMetadataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"N"}],"commitId":"47707df00a6884ada5974a5f5203408ce1efb890","commitMessage":"@@@[GOBBLIN-1533] Add completeness watermark to iceberg tables (#3385)\n\n* [GOBBLIN-1533] Add completeness watermark to iceberg tables\n\n* updated hive metadata writer test\n\n* Add apache header\n\n* Added correct default partition type\n\n* Fixed kafka audit url and logic to get topic name for iceberg table\n\n* Changes based on review\n\n* Make audit check granularity configurable\n\n* Added additional optimization to check for current hour during completion watermark calculation\n\n* optimization to skip audit check if its upto date by checking the seconds from epoch between current watermark and now\n\n* fixed test case\n\n* Replace hours from epoch with duration\n\n* Moved logging\n\n* Update partition spec with late field even when schema has been updated","date":"2021-09-11 03:02:42","modifiedFileCount":"8","status":"M","submitter":"vbohra"},{"authorTime":"2021-07-16 02:46:56","codes":[{"authorDate":"2021-09-18 06:47:20","commitOrder":4,"curCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"hourly/2021/09/16/09\")) {\n        partitionValue = \"2021-09-16-09\";\n      } else if (path.toString().contains(\"hourly/2021/09/16/10\")) {\n        partitionValue = \"2021-09-16-10\";\n      } else if (path.toString().contains(\"hourly/2021/09/16/11\")) {\n        partitionValue = \"2021-09-16-11\";\n      }  else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      return Optional.of(new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testIcebergTable\").build());\n    }\n","date":"2021-09-18 06:47:20","endLine":454,"groupId":"101752","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"getPartition","params":"(Pathpath@HiveTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8a/ba5e74d5b8f2491f1be6eaaf14618dda9dcf51.src","preCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/10\")) {\n        partitionValue = \"2020-03-17-10\";\n      }  else if (path.toString().contains(\"hourly/2020/03/17/11\")) {\n        partitionValue = \"2020-03-17-11\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/12\")) {\n        partitionValue = \"2020-03-17-12\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      return Optional.of(new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(\"hivedb\").withTableName(\"testIcebergTable\").build());\n    }\n","realPath":"gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"M"},{"authorDate":"2021-07-16 02:46:56","commitOrder":4,"curCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      HivePartition partition = new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(table.getDbName()).withTableName(table.getTableName()).build();\n      partition.setLocation(path.toString());\n      return Optional.of(partition);\n    }\n","date":"2021-07-16 02:46:56","endLine":289,"groupId":"101752","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartition","params":"(Pathpath@HiveTabletable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/11/756dd12359d710965e57644e70247446982008.src","preCode":"    protected Optional<HivePartition> getPartition(Path path, HiveTable table) throws IOException {\n      String partitionValue = \"\";\n      if (path.toString().contains(\"hourly/2020/03/17/08\")) {\n        partitionValue = \"2020-03-17-08\";\n      } else if (path.toString().contains(\"hourly/2020/03/17/09\")) {\n        partitionValue = \"2020-03-17-09\";\n      } else if (path.toString().contains(\"daily/2020/03/17\")) {\n        partitionValue = \"2020-03-17-00\";\n      }\n      HivePartition partition = new HivePartition.Builder().withPartitionValues(Lists.newArrayList(partitionValue))\n          .withDbName(table.getDbName()).withTableName(table.getTableName()).build();\n      partition.setLocation(path.toString());\n      return Optional.of(partition);\n    }\n","realPath":"gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/HiveMetadataWriterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"N"}],"commitId":"4a92e1e4e848310a5d9e76725a5b4717707e9f42","commitMessage":"@@@[GOBBLIN-1547] Set completion watermark to end of hour instead of beg? (#3398)\n\n* [GOBBLIN-1547] Set completion watermark to end of hour instead of beginning\n\n* Fixed code style","date":"2021-09-18 06:47:20","modifiedFileCount":"2","status":"M","submitter":"vbohra"}]
