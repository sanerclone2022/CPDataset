[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    zkDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n  }\n","date":"2017-07-31 15:51:25","endLine":145,"groupId":"1053","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPersistDatasetState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/74/2aa98b1ccfa1c6747c9cd64242771188c15458.src","preCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    zkDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/test/java/org/apache/gobblin/runtime/ZkDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    this.fsDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n  }\n","date":"2017-07-31 15:51:25","endLine":133,"groupId":"1053","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPersistDatasetState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8a/a9ca8d4bfecaaab6ea7f1cc2e75e432ee0f30b.src","preCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    this.fsDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/FsDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2018-01-30 09:08:46","commitOrder":2,"curCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    zkDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n\n    \r\n    datasetState.setDatasetUrn(TEST_DATASET_URN2);\n    datasetState.setId(TEST_DATASET_URN2);\n    datasetState.setDuration(2000);\n\n    zkDatasetStateStore.persistDatasetState(TEST_DATASET_URN2, datasetState);\n  }\n","date":"2018-01-30 09:08:46","endLine":153,"groupId":"1053","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPersistDatasetState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/10/91cf7e861eb52ff6a29b99332c91f1b3584d12.src","preCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    zkDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/test/java/org/apache/gobblin/runtime/ZkDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    this.fsDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n  }\n","date":"2017-07-31 15:51:25","endLine":133,"groupId":"1053","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPersistDatasetState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8a/a9ca8d4bfecaaab6ea7f1cc2e75e432ee0f30b.src","preCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    this.fsDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/FsDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"N"}],"commitId":"c35f76e4e2a0f9f25580924d46cef1b732af7d63","commitMessage":"@@@[GOBBLIN-392] Load all dataset states when getLatestDatasetStatesByUrns() is called\n\nCloses #2268 from htran1/fix_dataset_state_fetch\n","date":"2018-01-30 09:08:46","modifiedFileCount":"4","status":"M","submitter":"Hung Tran"},{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2018-03-30 02:27:20","commitOrder":3,"curCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    zkDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n\n    \r\n    datasetState.setDatasetUrn(TEST_DATASET_URN2);\n    datasetState.setId(TEST_DATASET_URN2);\n    datasetState.setDuration(2000);\n\n    zkDatasetStateStore.persistDatasetState(TEST_DATASET_URN2, datasetState);\n\n    \r\n    datasetState.setJobName(TEST_JOB_NAME2);\n    zkDatasetStateStore.persistDatasetState(TEST_DATASET_URN2, datasetState);\n  }\n","date":"2018-03-30 02:27:20","endLine":173,"groupId":"10722","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPersistDatasetState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2e/e5f1d2d5c057cd6b5894bc5a1b0d57b925ceca.src","preCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    zkDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n\n    \r\n    datasetState.setDatasetUrn(TEST_DATASET_URN2);\n    datasetState.setId(TEST_DATASET_URN2);\n    datasetState.setDuration(2000);\n\n    zkDatasetStateStore.persistDatasetState(TEST_DATASET_URN2, datasetState);\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/test/java/org/apache/gobblin/runtime/ZkDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"},{"authorDate":"2017-07-31 15:51:25","commitOrder":3,"curCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    this.fsDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n  }\n","date":"2017-07-31 15:51:25","endLine":133,"groupId":"10722","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testPersistDatasetState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/8a/a9ca8d4bfecaaab6ea7f1cc2e75e432ee0f30b.src","preCode":"  public void testPersistDatasetState() throws IOException {\n    JobState.DatasetState datasetState = new JobState.DatasetState(TEST_JOB_NAME, TEST_JOB_ID);\n\n    datasetState.setDatasetUrn(TEST_DATASET_URN);\n    datasetState.setState(JobState.RunningState.COMMITTED);\n    datasetState.setId(TEST_DATASET_URN);\n    datasetState.setStartTime(this.startTime);\n    datasetState.setEndTime(this.startTime + 1000);\n    datasetState.setDuration(1000);\n\n    for (int i = 0; i < 3; i++) {\n      TaskState taskState = new TaskState();\n      taskState.setJobId(TEST_JOB_ID);\n      taskState.setTaskId(TEST_TASK_ID_PREFIX + i);\n      taskState.setId(TEST_TASK_ID_PREFIX + i);\n      taskState.setWorkingState(WorkUnitState.WorkingState.COMMITTED);\n      datasetState.addTaskState(taskState);\n    }\n\n    this.fsDatasetStateStore.persistDatasetState(TEST_DATASET_URN, datasetState);\n  }\n","realPath":"gobblin-runtime/src/test/java/org/apache/gobblin/runtime/FsDatasetStateStoreTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"N"}],"commitId":"7f55214e20610a2b99652e003af9a7c684da7e49","commitMessage":"@@@[GOBBLIN-446] Add support for migrating state for all jobs in a job store\n\nCloses #2321 from htran1/state_store_mig_all_jobs\n","date":"2018-03-30 02:27:20","modifiedFileCount":"10","status":"M","submitter":"Hung Tran"}]
