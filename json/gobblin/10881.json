[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void loadNewJobConfigAndHandleNewJob(Path path, JobScheduler.Action action) {\n    \r\n\n    String customizedInfo = \"\";\n    try {\n      Properties jobProps =\n          SchedulerUtils.loadGenericJobConfig(this.jobScheduler.properties, path, jobConfigFileDirPath);\n      LOG.debug(\"Loaded job properties: {}\", jobProps);\n      switch (action) {\n        case SCHEDULE:\n          boolean runOnce = Boolean.valueOf(jobProps.getProperty(ConfigurationKeys.JOB_RUN_ONCE_KEY, \"false\"));\n          customizedInfo = \"schedule\";\n          addToJobNameMap(jobProps);\n          jobScheduler.scheduleJob(jobProps, runOnce ? new RunOnceJobListener() : new EmailNotificationJobListener());\n          break;\n        case RESCHEDULE:\n          customizedInfo = \"reschedule\";\n          rescheduleJob(jobProps);\n          break;\n        case UNSCHEDULE:\n          throw new RuntimeException(\"Should not call loadNewJobConfigAndHandleNewJob for unscheduling jobs.\");\n        default:\n          break;\n      }\n    } catch (ConfigurationException | IOException e) {\n      LOG.error(\"Failed to load from job configuration file \" + path.toString(), e);\n    } catch (JobException je) {\n      LOG.error(\"Failed to \" + customizedInfo + \" new job loaded from job configuration file \" + path.toString(), je);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":99,"groupId":"499","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadNewJobConfigAndHandleNewJob","params":"(Pathpath@JobScheduler.Actionaction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/705e068a66f014abcdc57e59887bb7ee1ed6d6.src","preCode":"  public void loadNewJobConfigAndHandleNewJob(Path path, JobScheduler.Action action) {\n    \r\n\n    String customizedInfo = \"\";\n    try {\n      Properties jobProps =\n          SchedulerUtils.loadGenericJobConfig(this.jobScheduler.properties, path, jobConfigFileDirPath);\n      LOG.debug(\"Loaded job properties: {}\", jobProps);\n      switch (action) {\n        case SCHEDULE:\n          boolean runOnce = Boolean.valueOf(jobProps.getProperty(ConfigurationKeys.JOB_RUN_ONCE_KEY, \"false\"));\n          customizedInfo = \"schedule\";\n          addToJobNameMap(jobProps);\n          jobScheduler.scheduleJob(jobProps, runOnce ? new RunOnceJobListener() : new EmailNotificationJobListener());\n          break;\n        case RESCHEDULE:\n          customizedInfo = \"reschedule\";\n          rescheduleJob(jobProps);\n          break;\n        case UNSCHEDULE:\n          throw new RuntimeException(\"Should not call loadNewJobConfigAndHandleNewJob for unscheduling jobs.\");\n        default:\n          break;\n      }\n    } catch (ConfigurationException | IOException e) {\n      LOG.error(\"Failed to load from job configuration file \" + path.toString(), e);\n    } catch (JobException je) {\n      LOG.error(\"Failed to \" + customizedInfo + \" new job loaded from job configuration file \" + path.toString(), je);\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/scheduler/PathAlterationListenerAdaptorForMonitor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void loadNewCommonConfigAndHandleNewJob(Path path, JobScheduler.Action action) {\n    String customizedInfoAction = \"\";\n    String customizedInfoResult = \"\";\n    try {\n      for (Properties jobProps : SchedulerUtils.loadGenericJobConfigs(jobScheduler.properties, path,\n          jobConfigFileDirPath)) {\n        try {\n          switch (action) {\n            case SCHEDULE:\n              boolean runOnce = Boolean.valueOf(jobProps.getProperty(ConfigurationKeys.JOB_RUN_ONCE_KEY, \"false\"));\n              customizedInfoAction = \"schedule\";\n              customizedInfoResult = \"creation or equivalent action\";\n              addToJobNameMap(jobProps);\n              jobScheduler.scheduleJob(jobProps,\n                  runOnce ? new RunOnceJobListener() : new EmailNotificationJobListener());\n              break;\n            case RESCHEDULE:\n              customizedInfoAction = \"reschedule\";\n              customizedInfoResult = \"change\";\n              rescheduleJob(jobProps);\n              break;\n            case UNSCHEDULE:\n              throw new RuntimeException(\"Should not call loadNewCommonConfigAndHandleNewJob for unscheduling jobs.\");\n            default:\n              break;\n          }\n        } catch (JobException je) {\n          LOG.error(\n              \"Failed to \" + customizedInfoAction + \" job reloaded from job configuration file \" + jobProps.getProperty(\n                  ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY), je);\n        }\n      }\n    } catch (ConfigurationException | IOException e) {\n      LOG.error(\n          \"Failed to reload job configuration files affected by \" + customizedInfoResult + \" to \" + path.toString(), e);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":137,"groupId":"500","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadNewCommonConfigAndHandleNewJob","params":"(Pathpath@JobScheduler.Actionaction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0b/705e068a66f014abcdc57e59887bb7ee1ed6d6.src","preCode":"  public void loadNewCommonConfigAndHandleNewJob(Path path, JobScheduler.Action action) {\n    String customizedInfoAction = \"\";\n    String customizedInfoResult = \"\";\n    try {\n      for (Properties jobProps : SchedulerUtils.loadGenericJobConfigs(jobScheduler.properties, path,\n          jobConfigFileDirPath)) {\n        try {\n          switch (action) {\n            case SCHEDULE:\n              boolean runOnce = Boolean.valueOf(jobProps.getProperty(ConfigurationKeys.JOB_RUN_ONCE_KEY, \"false\"));\n              customizedInfoAction = \"schedule\";\n              customizedInfoResult = \"creation or equivalent action\";\n              addToJobNameMap(jobProps);\n              jobScheduler.scheduleJob(jobProps,\n                  runOnce ? new RunOnceJobListener() : new EmailNotificationJobListener());\n              break;\n            case RESCHEDULE:\n              customizedInfoAction = \"reschedule\";\n              customizedInfoResult = \"change\";\n              rescheduleJob(jobProps);\n              break;\n            case UNSCHEDULE:\n              throw new RuntimeException(\"Should not call loadNewCommonConfigAndHandleNewJob for unscheduling jobs.\");\n            default:\n              break;\n          }\n        } catch (JobException je) {\n          LOG.error(\n              \"Failed to \" + customizedInfoAction + \" job reloaded from job configuration file \" + jobProps.getProperty(\n                  ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY), je);\n        }\n      }\n    } catch (ConfigurationException | IOException e) {\n      LOG.error(\n          \"Failed to reload job configuration files affected by \" + customizedInfoResult + \" to \" + path.toString(), e);\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/scheduler/PathAlterationListenerAdaptorForMonitor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2019-09-25 06:00:52","codes":[{"authorDate":"2019-09-25 06:00:52","commitOrder":2,"curCode":"  public void loadNewJobConfigAndHandleNewJob(Path path, JobScheduler.Action action) {\n    \r\n\n    String customizedInfo = \"\";\n    try {\n      Properties jobProps =\n          SchedulerUtils.loadGenericJobConfig(this.jobScheduler.properties, path, jobConfigFileDirPath, this.jobSpecResolver);\n      LOG.debug(\"Loaded job properties: {}\", jobProps);\n      switch (action) {\n        case SCHEDULE:\n          boolean runOnce = Boolean.valueOf(jobProps.getProperty(ConfigurationKeys.JOB_RUN_ONCE_KEY, \"false\"));\n          customizedInfo = \"schedule\";\n          addToJobNameMap(jobProps);\n          jobScheduler.scheduleJob(jobProps, runOnce ? new RunOnceJobListener() : new EmailNotificationJobListener());\n          break;\n        case RESCHEDULE:\n          customizedInfo = \"reschedule\";\n          rescheduleJob(jobProps);\n          break;\n        case UNSCHEDULE:\n          throw new RuntimeException(\"Should not call loadNewJobConfigAndHandleNewJob for unscheduling jobs.\");\n        default:\n          break;\n      }\n    } catch (ConfigurationException | IOException e) {\n      LOG.error(\"Failed to load from job configuration file \" + path.toString(), e);\n    } catch (JobException je) {\n      LOG.error(\"Failed to \" + customizedInfo + \" new job loaded from job configuration file \" + path.toString(), je);\n    }\n  }\n","date":"2019-09-25 06:00:52","endLine":102,"groupId":"10881","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"loadNewJobConfigAndHandleNewJob","params":"(Pathpath@JobScheduler.Actionaction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a4/d837aa54e19e03c0dc6aabd4e286ac797f5858.src","preCode":"  public void loadNewJobConfigAndHandleNewJob(Path path, JobScheduler.Action action) {\n    \r\n\n    String customizedInfo = \"\";\n    try {\n      Properties jobProps =\n          SchedulerUtils.loadGenericJobConfig(this.jobScheduler.properties, path, jobConfigFileDirPath);\n      LOG.debug(\"Loaded job properties: {}\", jobProps);\n      switch (action) {\n        case SCHEDULE:\n          boolean runOnce = Boolean.valueOf(jobProps.getProperty(ConfigurationKeys.JOB_RUN_ONCE_KEY, \"false\"));\n          customizedInfo = \"schedule\";\n          addToJobNameMap(jobProps);\n          jobScheduler.scheduleJob(jobProps, runOnce ? new RunOnceJobListener() : new EmailNotificationJobListener());\n          break;\n        case RESCHEDULE:\n          customizedInfo = \"reschedule\";\n          rescheduleJob(jobProps);\n          break;\n        case UNSCHEDULE:\n          throw new RuntimeException(\"Should not call loadNewJobConfigAndHandleNewJob for unscheduling jobs.\");\n        default:\n          break;\n      }\n    } catch (ConfigurationException | IOException e) {\n      LOG.error(\"Failed to load from job configuration file \" + path.toString(), e);\n    } catch (JobException je) {\n      LOG.error(\"Failed to \" + customizedInfo + \" new job loaded from job configuration file \" + path.toString(), je);\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/scheduler/PathAlterationListenerAdaptorForMonitor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2019-09-25 06:00:52","commitOrder":2,"curCode":"  public void loadNewCommonConfigAndHandleNewJob(Path path, JobScheduler.Action action) {\n    String customizedInfoAction = \"\";\n    String customizedInfoResult = \"\";\n    try {\n      for (Properties jobProps : SchedulerUtils.loadGenericJobConfigs(jobScheduler.properties, path,\n          jobConfigFileDirPath, this.jobSpecResolver)) {\n        try {\n          switch (action) {\n            case SCHEDULE:\n              boolean runOnce = Boolean.valueOf(jobProps.getProperty(ConfigurationKeys.JOB_RUN_ONCE_KEY, \"false\"));\n              customizedInfoAction = \"schedule\";\n              customizedInfoResult = \"creation or equivalent action\";\n              addToJobNameMap(jobProps);\n              jobScheduler.scheduleJob(jobProps,\n                  runOnce ? new RunOnceJobListener() : new EmailNotificationJobListener());\n              break;\n            case RESCHEDULE:\n              customizedInfoAction = \"reschedule\";\n              customizedInfoResult = \"change\";\n              rescheduleJob(jobProps);\n              break;\n            case UNSCHEDULE:\n              throw new RuntimeException(\"Should not call loadNewCommonConfigAndHandleNewJob for unscheduling jobs.\");\n            default:\n              break;\n          }\n        } catch (JobException je) {\n          LOG.error(\n              \"Failed to \" + customizedInfoAction + \" job reloaded from job configuration file \" + jobProps.getProperty(\n                  ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY), je);\n        }\n      }\n    } catch (ConfigurationException | IOException e) {\n      LOG.error(\n          \"Failed to reload job configuration files affected by \" + customizedInfoResult + \" to \" + path.toString(), e);\n    }\n  }\n","date":"2019-09-25 06:00:52","endLine":140,"groupId":"10881","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"loadNewCommonConfigAndHandleNewJob","params":"(Pathpath@JobScheduler.Actionaction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a4/d837aa54e19e03c0dc6aabd4e286ac797f5858.src","preCode":"  public void loadNewCommonConfigAndHandleNewJob(Path path, JobScheduler.Action action) {\n    String customizedInfoAction = \"\";\n    String customizedInfoResult = \"\";\n    try {\n      for (Properties jobProps : SchedulerUtils.loadGenericJobConfigs(jobScheduler.properties, path,\n          jobConfigFileDirPath)) {\n        try {\n          switch (action) {\n            case SCHEDULE:\n              boolean runOnce = Boolean.valueOf(jobProps.getProperty(ConfigurationKeys.JOB_RUN_ONCE_KEY, \"false\"));\n              customizedInfoAction = \"schedule\";\n              customizedInfoResult = \"creation or equivalent action\";\n              addToJobNameMap(jobProps);\n              jobScheduler.scheduleJob(jobProps,\n                  runOnce ? new RunOnceJobListener() : new EmailNotificationJobListener());\n              break;\n            case RESCHEDULE:\n              customizedInfoAction = \"reschedule\";\n              customizedInfoResult = \"change\";\n              rescheduleJob(jobProps);\n              break;\n            case UNSCHEDULE:\n              throw new RuntimeException(\"Should not call loadNewCommonConfigAndHandleNewJob for unscheduling jobs.\");\n            default:\n              break;\n          }\n        } catch (JobException je) {\n          LOG.error(\n              \"Failed to \" + customizedInfoAction + \" job reloaded from job configuration file \" + jobProps.getProperty(\n                  ConfigurationKeys.JOB_CONFIG_FILE_PATH_KEY), je);\n        }\n      }\n    } catch (ConfigurationException | IOException e) {\n      LOG.error(\n          \"Failed to reload job configuration files affected by \" + customizedInfoResult + \" to \" + path.toString(), e);\n    }\n  }\n","realPath":"gobblin-runtime/src/main/java/org/apache/gobblin/scheduler/PathAlterationListenerAdaptorForMonitor.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"7d260ab2c32a773e317a31cd264f5c97d2d48a10","commitMessage":"@@@[GOBBLIN-701] Add secure templates (duplicate of #2571)\n\nCloses #2739 from jack-moseley/secure-template\n","date":"2019-09-25 06:00:52","modifiedFileCount":"15","status":"M","submitter":"Jack Moseley"}]
