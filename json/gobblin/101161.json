[{"authorTime":"2018-07-31 00:57:31","codes":[{"authorDate":"2019-11-12 05:36:55","commitOrder":2,"curCode":"  public HiveDataNode(Config nodeProps) throws DataNodeCreationException {\n    super(nodeProps);\n    try {\n      this.metastoreUri = ConfigUtils.getString(nodeProps, METASTORE_URI_KEY, \"\");\n      Preconditions.checkArgument(!Strings.isNullOrEmpty(this.metastoreUri), \"hive.metastore.uri cannot be null or empty.\");\n\n      \r\n      if (!isMetastoreUriValid(new URI(this.metastoreUri))) {\n        throw new IOException(\"Invalid hive metastore URI \" + this.metastoreUri);\n      }\n    } catch (Exception e) {\n      throw new DataNodeCreationException(e);\n    }\n  }\n","date":"2019-11-12 05:36:55","endLine":64,"groupId":"5682","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"HiveDataNode","params":"(ConfignodeProps)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/04/7e27888bebda73d7a7e5c7574e9a1d37bb476b.src","preCode":"  public HiveDataNode(Config nodeProps) throws DataNodeCreationException {\n    super(nodeProps);\n    try {\n      this.metastoreUri = ConfigUtils.getString(nodeProps, METASTORE_URI_KEY, \"\");\n      Preconditions.checkArgument(!Strings.isNullOrEmpty(this.metastoreUri), \"hive.metastore.uri cannot be null or empty.\");\n\n      \r\n      if (!isMetastoreUriValid(new URI(this.metastoreUri))) {\n        throw new IOException(\"Invalid hive metastore URI \" + this.metastoreUri);\n      }\n    } catch (Exception e) {\n      throw new DataNodeCreationException(e);\n    }\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/flowgraph/datanodes/hive/HiveDataNode.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2018-07-31 00:57:31","commitOrder":2,"curCode":"  public FileSystemDataNode(Config nodeProps) throws DataNodeCreationException {\n    super(nodeProps);\n    try {\n      this.fsUri = ConfigUtils.getString(nodeProps, FS_URI_KEY, \"\");\n      Preconditions.checkArgument(!Strings.isNullOrEmpty(this.fsUri), \"fs.uri cannot be null or empty.\");\n\n      \r\n      if (!isUriValid(new URI(this.fsUri))) {\n        throw new IOException(\"Invalid FS URI \" + this.fsUri);\n      }\n    } catch (Exception e) {\n      throw new DataNodeCreationException(e);\n    }\n  }\n","date":"2018-07-31 00:57:31","endLine":63,"groupId":"5682","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"FileSystemDataNode","params":"(ConfignodeProps)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/72/f1a66ebb8d95689c4bb0ce7720fb8f426d684d.src","preCode":"  public FileSystemDataNode(Config nodeProps) throws DataNodeCreationException {\n    super(nodeProps);\n    try {\n      this.fsUri = ConfigUtils.getString(nodeProps, FS_URI_KEY, \"\");\n      Preconditions.checkArgument(!Strings.isNullOrEmpty(this.fsUri), \"fs.uri cannot be null or empty.\");\n\n      \r\n      if (!isUriValid(new URI(this.fsUri))) {\n        throw new IOException(\"Invalid FS URI \" + this.fsUri);\n      }\n    } catch (Exception e) {\n      throw new DataNodeCreationException(e);\n    }\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/flowgraph/datanodes/fs/FileSystemDataNode.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"NB"}],"commitId":"3c1efb9c4608d8ff0c93395117d2136a82565851","commitMessage":"@@@[GOBBLIN-948] add hive data node and descriptor\n\nCloses #2797 from arjun4084346/ei-dm\n","date":"2019-11-12 05:36:55","modifiedFileCount":"2","status":"M","submitter":"Arjun"},{"authorTime":"2020-08-19 05:15:58","codes":[{"authorDate":"2019-11-12 05:36:55","commitOrder":3,"curCode":"  public HiveDataNode(Config nodeProps) throws DataNodeCreationException {\n    super(nodeProps);\n    try {\n      this.metastoreUri = ConfigUtils.getString(nodeProps, METASTORE_URI_KEY, \"\");\n      Preconditions.checkArgument(!Strings.isNullOrEmpty(this.metastoreUri), \"hive.metastore.uri cannot be null or empty.\");\n\n      \r\n      if (!isMetastoreUriValid(new URI(this.metastoreUri))) {\n        throw new IOException(\"Invalid hive metastore URI \" + this.metastoreUri);\n      }\n    } catch (Exception e) {\n      throw new DataNodeCreationException(e);\n    }\n  }\n","date":"2019-11-12 05:36:55","endLine":64,"groupId":"101161","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"HiveDataNode","params":"(ConfignodeProps)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/04/7e27888bebda73d7a7e5c7574e9a1d37bb476b.src","preCode":"  public HiveDataNode(Config nodeProps) throws DataNodeCreationException {\n    super(nodeProps);\n    try {\n      this.metastoreUri = ConfigUtils.getString(nodeProps, METASTORE_URI_KEY, \"\");\n      Preconditions.checkArgument(!Strings.isNullOrEmpty(this.metastoreUri), \"hive.metastore.uri cannot be null or empty.\");\n\n      \r\n      if (!isMetastoreUriValid(new URI(this.metastoreUri))) {\n        throw new IOException(\"Invalid hive metastore URI \" + this.metastoreUri);\n      }\n    } catch (Exception e) {\n      throw new DataNodeCreationException(e);\n    }\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/flowgraph/datanodes/hive/HiveDataNode.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"},{"authorDate":"2020-08-19 05:15:58","commitOrder":3,"curCode":"  public FileSystemDataNode(Config nodeProps) throws DataNodeCreationException {\n    super(nodeProps);\n    try {\n      this.fsUri = ConfigUtils.getString(this.getResolvedConfig(), FS_URI_KEY, \"\");\n      Preconditions.checkArgument(!Strings.isNullOrEmpty(this.fsUri), \"fs.uri cannot be null or empty.\");\n\n      \r\n      if (!isUriValid(new URI(this.fsUri))) {\n        throw new IOException(\"Invalid FS URI \" + this.fsUri);\n      }\n    } catch (Exception e) {\n      throw new DataNodeCreationException(e);\n    }\n  }\n","date":"2020-08-19 05:15:58","endLine":65,"groupId":"101161","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"FileSystemDataNode","params":"(ConfignodeProps)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/15/9735aa3af7dd4eb36e804b4979ca6ce8e36a73.src","preCode":"  public FileSystemDataNode(Config nodeProps) throws DataNodeCreationException {\n    super(nodeProps);\n    try {\n      this.fsUri = ConfigUtils.getString(nodeProps, FS_URI_KEY, \"\");\n      Preconditions.checkArgument(!Strings.isNullOrEmpty(this.fsUri), \"fs.uri cannot be null or empty.\");\n\n      \r\n      if (!isUriValid(new URI(this.fsUri))) {\n        throw new IOException(\"Invalid FS URI \" + this.fsUri);\n      }\n    } catch (Exception e) {\n      throw new DataNodeCreationException(e);\n    }\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/flowgraph/datanodes/fs/FileSystemDataNode.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"f0904f3fae2e12b995251ad349760a1bf4a3a0d3","commitMessage":"@@@[GOBBLIN-1241] Allow nodes/edges in HOCON format and delay resolution to allow overriding\n\nCloses #3083 from jack-moseley/data-node-resolve\n","date":"2020-08-19 05:15:58","modifiedFileCount":"5","status":"M","submitter":"Jack Moseley"}]
