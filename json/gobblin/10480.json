[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2018-09-01 13:31:21","commitOrder":2,"curCode":"  private WriteResponse getWriteResponseorThrow(Pair<WriteResponse, Throwable> writeResponseThrowablePair)\n      throws ExecutionException {\n    try {\n      if (writeResponseThrowablePair.getFirst() != null) {\n        return writeResponseThrowablePair.getFirst();\n      } else if (writeResponseThrowablePair.getSecond() != null) {\n        throw new ExecutionException(writeResponseThrowablePair.getSecond());\n      } else {\n        throw new ExecutionException(new RuntimeException(\"Could not find non-null WriteResponse pair\"));\n      }\n    } finally {\n      done.set(true);\n    }\n\n  }\n","date":"2018-09-01 13:31:45","endLine":190,"groupId":"7853","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"getWriteResponseorThrow","params":"(Pair<WriteResponse@Throwable>writeResponseThrowablePair)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f5/92ffa3fe30a198d149b1901471a273443c4178.src","preCode":"  private WriteResponse getWriteResponseorThrow(Pair<WriteResponse, Throwable> writeResponseThrowablePair)\n      throws ExecutionException {\n    try {\n      if (writeResponseThrowablePair.getFirst() != null) {\n        return writeResponseThrowablePair.getFirst();\n      } else if (writeResponseThrowablePair.getSecond() != null) {\n        throw new ExecutionException(writeResponseThrowablePair.getSecond());\n      } else {\n        throw new ExecutionException(new RuntimeException(\"Could not find non-null WriteResponse pair\"));\n      }\n    } finally {\n      done.set(true);\n    }\n\n  }\n","realPath":"gobblin-modules/gobblin-elasticsearch/src/main/java/org/apache/gobblin/elasticsearch/writer/FutureCallbackHolder.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  private WriteResponse getWriteResponseorThrow(Pair<WriteResponse, Throwable> writeResponseThrowablePair)\n      throws ExecutionException {\n    if (writeResponseThrowablePair.getFirst() != null) {\n      return writeResponseThrowablePair.getFirst();\n    } else if (writeResponseThrowablePair.getSecond() != null) {\n      throw new ExecutionException(writeResponseThrowablePair.getSecond());\n    } else {\n      throw new ExecutionException(new RuntimeException(\"Could not find non-null WriteResponse pair\"));\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":242,"groupId":"7853","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getWriteResponseorThrow","params":"(Pair<WriteResponse@Throwable>writeResponseThrowablePair)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f7/001dac43c49c903b98b68655f72cd1f964e72d.src","preCode":"  private WriteResponse getWriteResponseorThrow(Pair<WriteResponse, Throwable> writeResponseThrowablePair)\n      throws ExecutionException {\n    if (writeResponseThrowablePair.getFirst() != null) {\n      return writeResponseThrowablePair.getFirst();\n    } else if (writeResponseThrowablePair.getSecond() != null) {\n      throw new ExecutionException(writeResponseThrowablePair.getSecond());\n    } else {\n      throw new ExecutionException(new RuntimeException(\"Could not find non-null WriteResponse pair\"));\n    }\n  }\n","realPath":"gobblin-modules/gobblin-couchbase/src/main/java/org/apache/gobblin/couchbase/writer/CouchbaseWriter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"NB"}],"commitId":"f1bc746ca50cffa1247c00b6c5bdd34b7321198d","commitMessage":"@@@[GOBBLIN-17] Add Elasticsearch writer (rest + transport)\n\nCloses #2419 from shirshanka/elastic\n","date":"2018-09-01 13:31:45","modifiedFileCount":"7","status":"M","submitter":"Shirshanka Das"},{"authorTime":"2019-09-17 11:25:09","codes":[{"authorDate":"2018-09-01 13:31:21","commitOrder":3,"curCode":"  private WriteResponse getWriteResponseorThrow(Pair<WriteResponse, Throwable> writeResponseThrowablePair)\n      throws ExecutionException {\n    try {\n      if (writeResponseThrowablePair.getFirst() != null) {\n        return writeResponseThrowablePair.getFirst();\n      } else if (writeResponseThrowablePair.getSecond() != null) {\n        throw new ExecutionException(writeResponseThrowablePair.getSecond());\n      } else {\n        throw new ExecutionException(new RuntimeException(\"Could not find non-null WriteResponse pair\"));\n      }\n    } finally {\n      done.set(true);\n    }\n\n  }\n","date":"2018-09-01 13:31:45","endLine":190,"groupId":"10480","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getWriteResponseorThrow","params":"(Pair<WriteResponse@Throwable>writeResponseThrowablePair)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f5/92ffa3fe30a198d149b1901471a273443c4178.src","preCode":"  private WriteResponse getWriteResponseorThrow(Pair<WriteResponse, Throwable> writeResponseThrowablePair)\n      throws ExecutionException {\n    try {\n      if (writeResponseThrowablePair.getFirst() != null) {\n        return writeResponseThrowablePair.getFirst();\n      } else if (writeResponseThrowablePair.getSecond() != null) {\n        throw new ExecutionException(writeResponseThrowablePair.getSecond());\n      } else {\n        throw new ExecutionException(new RuntimeException(\"Could not find non-null WriteResponse pair\"));\n      }\n    } finally {\n      done.set(true);\n    }\n\n  }\n","realPath":"gobblin-modules/gobblin-elasticsearch/src/main/java/org/apache/gobblin/elasticsearch/writer/FutureCallbackHolder.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"N"},{"authorDate":"2019-09-17 11:25:09","commitOrder":3,"curCode":"  private WriteResponse getWriteResponseOrThrow(Pair<WriteResponse, Throwable> writeResponseThrowablePair)\n      throws ExecutionException {\n    if (writeResponseThrowablePair.getFirst() != null) {\n      return writeResponseThrowablePair.getFirst();\n    } else if (writeResponseThrowablePair.getSecond() != null) {\n      throw new ExecutionException(writeResponseThrowablePair.getSecond());\n    } else {\n      throw new ExecutionException(new RuntimeException(\"Could not find non-null WriteResponse pair\"));\n    }\n  }\n","date":"2019-09-17 11:25:09","endLine":268,"groupId":"10480","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getWriteResponseOrThrow","params":"(Pair<WriteResponse@Throwable>writeResponseThrowablePair)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/c2/bd550add0baa19a539051a732f6a73fb3ffc8c.src","preCode":"  private WriteResponse getWriteResponseorThrow(Pair<WriteResponse, Throwable> writeResponseThrowablePair)\n      throws ExecutionException {\n    if (writeResponseThrowablePair.getFirst() != null) {\n      return writeResponseThrowablePair.getFirst();\n    } else if (writeResponseThrowablePair.getSecond() != null) {\n      throw new ExecutionException(writeResponseThrowablePair.getSecond());\n    } else {\n      throw new ExecutionException(new RuntimeException(\"Could not find non-null WriteResponse pair\"));\n    }\n  }\n","realPath":"gobblin-modules/gobblin-couchbase/src/main/java/org/apache/gobblin/couchbase/writer/CouchbaseWriter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"}],"commitId":"fb289fdba46c9db65ec650a2f42048e031d4416e","commitMessage":"@@@[GOBBLIN-880] Bump CouchbaseWriter Couchbase SDK version + write docs + cert based auth + enable TTL + dnsSrv[]\n\nJIRA ticket:\nhttps://issues.apache.org/jira/browse/GOBBLIN-880\nRB Changes:\n    1 - Added logic to connect using certificate based\nauth to the buckets (Will need to bump\ncom.couchbase.client:java-client to a newer\nversion like 2.7.6) and associated configs\n    2 - TTL  implementation\n      * Added configs to allow setting a TTL\n(documentTTL) and also specify the timeunits\n(documentTTLUnits) of these settings\n      * Added logic to specify the path to key to the\nfield containing the source timestamp\n(documentTTLOriginField) and its units\n(documentTTLOriginUnits) to disambiguate between\nUNIX (sec) timestamps and other formats like\ntimestamps in milliseconds.\n    3 - Added missing dnsSrv config\n    4 - Written proper documentation on gobblin-\ndocs/writers/CouchbaseWriter.md\n    5 - Brought in CouchbaseMock from Gradle and adapt\nexisting unit tests.\n    6 - Added getTimeUnit to ConfigUtils + Unit tests\n\nCloses #2734 from menarguez/gobblin-880\n","date":"2019-09-17 11:25:09","modifiedFileCount":"8","status":"M","submitter":"Michael Menarguez"}]
