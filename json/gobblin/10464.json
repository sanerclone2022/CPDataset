[{"authorTime":"2019-05-07 06:53:00","codes":[{"authorDate":"2019-05-07 06:53:00","commitOrder":1,"curCode":"  public KeyValueEventObjectReporter(Builder builder) {\n    super(builder);\n\n    this.topic = builder.topic;\n    this.namespaceOverride = builder.namespaceOverride;\n\n    Config config = builder.config.get();\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_EVENTS_PUSHERKEYS, randomKey);\n    }\n  }\n","date":"2019-05-07 06:53:00","endLine":86,"groupId":"5124","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"KeyValueEventObjectReporter","params":"(Builderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/fb/4e006f8882e659449f80e1f4afb9eba56bd9d9.src","preCode":"  public KeyValueEventObjectReporter(Builder builder) {\n    super(builder);\n\n    this.topic = builder.topic;\n    this.namespaceOverride = builder.namespaceOverride;\n\n    Config config = builder.config.get();\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_EVENTS_PUSHERKEYS, randomKey);\n    }\n  }\n","realPath":"gobblin-modules/gobblin-kafka-common/src/main/java/org/apache/gobblin/metrics/reporter/KeyValueEventObjectReporter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2019-05-07 06:53:00","commitOrder":1,"curCode":"  public KeyValueMetricObjectReporter(Builder builder, Config config) {\n    super(builder, config);\n\n    this.topic = builder.topic;\n    this.namespaceOverride = builder.namespaceOverride;\n\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_PUSHERKEYS, randomKey);\n    }\n  }\n","date":"2019-05-07 06:53:00","endLine":86,"groupId":"5124","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"KeyValueMetricObjectReporter","params":"(Builderbuilder@Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/96/372c080e948db97f7f8ec2bc4155135716271f.src","preCode":"  public KeyValueMetricObjectReporter(Builder builder, Config config) {\n    super(builder, config);\n\n    this.topic = builder.topic;\n    this.namespaceOverride = builder.namespaceOverride;\n\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_PUSHERKEYS, randomKey);\n    }\n  }\n","realPath":"gobblin-modules/gobblin-kafka-common/src/main/java/org/apache/gobblin/metrics/reporter/KeyValueMetricObjectReporter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"856fbc103e9fd144f062fb0ecaeba1f35f2f205b","commitMessage":"@@@[GOBBLIN-758] Added new reporters to emit MetricReport and GobblinTrackingEvent without serializing them. Also added random key generator for reporters.\n\nCloses #2622 from vikrambohra/ETL-8675\n","date":"2019-05-07 06:53:00","modifiedFileCount":"8","status":"B","submitter":"vbohra"},{"authorTime":"2019-07-16 05:38:21","codes":[{"authorDate":"2019-07-16 05:38:21","commitOrder":2,"curCode":"  public KeyValueEventObjectReporter(Builder builder) {\n    super(builder);\n\n    Config config = builder.config.get();\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_EVENTS_PUSHERKEYS, randomKey);\n    }\n\n    schema = AvroUtils.overrideNameAndNamespace(GobblinTrackingEvent.getClassSchema(), builder.topic, builder.namespaceOverride);\n  }\n","date":"2019-07-16 05:38:21","endLine":86,"groupId":"5124","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"KeyValueEventObjectReporter","params":"(Builderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/b9/7e48c7e94ed7e302548ebb57973f6942c11817.src","preCode":"  public KeyValueEventObjectReporter(Builder builder) {\n    super(builder);\n\n    this.topic = builder.topic;\n    this.namespaceOverride = builder.namespaceOverride;\n\n    Config config = builder.config.get();\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_EVENTS_PUSHERKEYS, randomKey);\n    }\n  }\n","realPath":"gobblin-modules/gobblin-kafka-common/src/main/java/org/apache/gobblin/metrics/reporter/KeyValueEventObjectReporter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-07-16 05:38:21","commitOrder":2,"curCode":"  public KeyValueMetricObjectReporter(Builder builder, Config config) {\n    super(builder, config);\n\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_PUSHERKEYS, randomKey);\n    }\n\n    schema = AvroUtils.overrideNameAndNamespace(MetricReport.getClassSchema(), builder.topic, builder.namespaceOverride);\n  }\n","date":"2019-07-16 05:38:21","endLine":84,"groupId":"5124","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"KeyValueMetricObjectReporter","params":"(Builderbuilder@Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6b/6309c8c65f9564914a948fd713d80955191599.src","preCode":"  public KeyValueMetricObjectReporter(Builder builder, Config config) {\n    super(builder, config);\n\n    this.topic = builder.topic;\n    this.namespaceOverride = builder.namespaceOverride;\n\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_PUSHERKEYS, randomKey);\n    }\n  }\n","realPath":"gobblin-modules/gobblin-kafka-common/src/main/java/org/apache/gobblin/metrics/reporter/KeyValueMetricObjectReporter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"f3dc04da9d05546306fc1d7310a350a3aec76777","commitMessage":"@@@[GOBBLIN-825] Initialize message schema at object construction rather than creating a new instance for every message\n\nCloses #2686 from vikrambohra/master\n","date":"2019-07-16 05:38:21","modifiedFileCount":"6","status":"M","submitter":"vbohra"},{"authorTime":"2019-07-16 05:38:21","codes":[{"authorDate":"2021-04-17 05:23:25","commitOrder":3,"curCode":"  public KeyValueEventObjectReporter(Builder builder) {\n    super(builder);\n\n    Config config = builder.config;\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_EVENTS_PUSHERKEYS, randomKey);\n    }\n\n    schema = AvroUtils.overrideNameAndNamespace(GobblinTrackingEvent.getClassSchema(), builder.topic, builder.namespaceOverride);\n  }\n","date":"2021-04-17 05:23:25","endLine":86,"groupId":"10464","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"KeyValueEventObjectReporter","params":"(Builderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/cd/81d61282b8683bdfb374ae0bfc619e7914bcb0.src","preCode":"  public KeyValueEventObjectReporter(Builder builder) {\n    super(builder);\n\n    Config config = builder.config.get();\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_EVENTS_PUSHERKEYS, randomKey);\n    }\n\n    schema = AvroUtils.overrideNameAndNamespace(GobblinTrackingEvent.getClassSchema(), builder.topic, builder.namespaceOverride);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-common/src/main/java/org/apache/gobblin/metrics/reporter/KeyValueEventObjectReporter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-07-16 05:38:21","commitOrder":3,"curCode":"  public KeyValueMetricObjectReporter(Builder builder, Config config) {\n    super(builder, config);\n\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_PUSHERKEYS, randomKey);\n    }\n\n    schema = AvroUtils.overrideNameAndNamespace(MetricReport.getClassSchema(), builder.topic, builder.namespaceOverride);\n  }\n","date":"2019-07-16 05:38:21","endLine":84,"groupId":"10464","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"KeyValueMetricObjectReporter","params":"(Builderbuilder@Configconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/6b/6309c8c65f9564914a948fd713d80955191599.src","preCode":"  public KeyValueMetricObjectReporter(Builder builder, Config config) {\n    super(builder, config);\n\n    Config pusherConfig = ConfigUtils.getConfigOrEmpty(config, PUSHER_CONFIG).withFallback(config);\n    String pusherClassName =\n        ConfigUtils.getString(config, PUSHER_CLASS, PusherUtils.DEFAULT_KEY_VALUE_PUSHER_CLASS_NAME);\n    this.pusher = (KeyValuePusher) PusherUtils\n        .getPusher(pusherClassName, builder.brokers, builder.topic, Optional.of(pusherConfig));\n    this.closer.register(this.pusher);\n\n    randomKey = String.valueOf(\n        new Random().nextInt(ConfigUtils.getInt(config, KEY_SIZE_KEY, ConfigurationKeys.DEFAULT_REPORTER_KEY_SIZE)));\n    if (config.hasPath(PUSHER_KEYS)) {\n      List<String> keys = Splitter.on(\",\").omitEmptyStrings().trimResults().splitToList(config.getString(PUSHER_KEYS));\n      this.keys = keys;\n    } else {\n      log.info(\n          \"Key not assigned from config. Please set it with property {} Using randomly generated number {} as key \",\n          ConfigurationKeys.METRICS_REPORTING_PUSHERKEYS, randomKey);\n    }\n\n    schema = AvroUtils.overrideNameAndNamespace(MetricReport.getClassSchema(), builder.topic, builder.namespaceOverride);\n  }\n","realPath":"gobblin-modules/gobblin-kafka-common/src/main/java/org/apache/gobblin/metrics/reporter/KeyValueMetricObjectReporter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"}],"commitId":"522d31205cba743209437976946adf7bf0c4f1be","commitMessage":"@@@[GOBBLIN-1423] Add config to Event reporter to control queue capacity?\n\nCloses #3259 from vikrambohra/GOBBLIN-1423\n","date":"2021-04-17 05:23:25","modifiedFileCount":"5","status":"M","submitter":"vbohra"}]
