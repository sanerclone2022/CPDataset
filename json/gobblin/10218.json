[{"authorTime":"2020-03-12 07:14:19","codes":[{"authorDate":"2020-03-12 07:14:19","commitOrder":1,"curCode":"  public void testSimple() throws Exception {\n\n    TestKafkaAvroJobMonitor monitor =\n        new TestKafkaAvroJobMonitor(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n    monitor.buildMetricsContextAndMetrics();\n\n    AvroSerializer<GobblinTrackingEvent> serializer =\n        new AvroBinarySerializer<>(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n\n    GobblinTrackingEvent event = new GobblinTrackingEvent(0L, \"namespace\", \"event\", Maps.<String, String>newHashMap());\n    Collection<Either<JobSpec, URI>> results = monitor.parseJobSpec(serializer.serializeRecord(event));\n    Assert.assertEquals(results.size(), 1);\n    Assert.assertEquals(monitor.events.size(), 1);\n    Assert.assertEquals(monitor.events.get(0), event);\n\n    monitor.shutdownMetrics();\n  }\n","date":"2020-03-12 07:14:19","endLine":66,"groupId":"758","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2e/63cc2412c498f86f055824b1827b73b9054cff.src","preCode":"  public void testSimple() throws Exception {\n\n    TestKafkaAvroJobMonitor monitor =\n        new TestKafkaAvroJobMonitor(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n    monitor.buildMetricsContextAndMetrics();\n\n    AvroSerializer<GobblinTrackingEvent> serializer =\n        new AvroBinarySerializer<>(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n\n    GobblinTrackingEvent event = new GobblinTrackingEvent(0L, \"namespace\", \"event\", Maps.<String, String>newHashMap());\n    Collection<Either<JobSpec, URI>> results = monitor.parseJobSpec(serializer.serializeRecord(event));\n    Assert.assertEquals(results.size(), 1);\n    Assert.assertEquals(monitor.events.size(), 1);\n    Assert.assertEquals(monitor.events.get(0), event);\n\n    monitor.shutdownMetrics();\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/KafkaAvroJobMonitorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2020-03-12 07:14:19","commitOrder":1,"curCode":"  public void testWrongSchemaVersionWriter() throws Exception {\n    TestKafkaAvroJobMonitor monitor =\n        new TestKafkaAvroJobMonitor(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n    monitor.buildMetricsContextAndMetrics();\n\n    AvroSerializer<GobblinTrackingEvent> serializer =\n        new AvroBinarySerializer<>(GobblinTrackingEvent.SCHEMA$, new FixedSchemaVersionWriter());\n\n    GobblinTrackingEvent event = new GobblinTrackingEvent(0L, \"namespace\", \"event\", Maps.<String, String>newHashMap());\n    Collection<Either<JobSpec, URI>> results = monitor.parseJobSpec(serializer.serializeRecord(event));\n    Assert.assertEquals(results.size(), 0);\n    Assert.assertEquals(monitor.events.size(), 0);\n    Assert.assertEquals(monitor.getMessageParseFailures().getCount(), 1);\n\n    monitor.shutdownMetrics();\n  }\n","date":"2020-03-12 07:14:19","endLine":123,"groupId":"758","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWrongSchemaVersionWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2e/63cc2412c498f86f055824b1827b73b9054cff.src","preCode":"  public void testWrongSchemaVersionWriter() throws Exception {\n    TestKafkaAvroJobMonitor monitor =\n        new TestKafkaAvroJobMonitor(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n    monitor.buildMetricsContextAndMetrics();\n\n    AvroSerializer<GobblinTrackingEvent> serializer =\n        new AvroBinarySerializer<>(GobblinTrackingEvent.SCHEMA$, new FixedSchemaVersionWriter());\n\n    GobblinTrackingEvent event = new GobblinTrackingEvent(0L, \"namespace\", \"event\", Maps.<String, String>newHashMap());\n    Collection<Either<JobSpec, URI>> results = monitor.parseJobSpec(serializer.serializeRecord(event));\n    Assert.assertEquals(results.size(), 0);\n    Assert.assertEquals(monitor.events.size(), 0);\n    Assert.assertEquals(monitor.getMessageParseFailures().getCount(), 1);\n\n    monitor.shutdownMetrics();\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/KafkaAvroJobMonitorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"7a328f9a232a60973d27c50859e6b84e63df90f7","commitMessage":"@@@[GOBBLIN-1040] HighLevelConsumer re-design by removing references to ?\n\nCloses #2900 from vikrambohra/GOBBLIN-1040\n","date":"2020-03-12 07:14:19","modifiedFileCount":"16","status":"B","submitter":"vbohra"},{"authorTime":"2021-05-11 08:17:01","codes":[{"authorDate":"2021-05-11 08:17:01","commitOrder":2,"curCode":"  public void testSimple() throws Exception {\n\n    TestKafkaAvroJobMonitor monitor =\n        new TestKafkaAvroJobMonitor(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n    monitor.buildMetricsContextAndMetrics();\n\n    AvroSerializer<GobblinTrackingEvent> serializer =\n        new AvroBinarySerializer<>(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n\n    GobblinTrackingEvent event = new GobblinTrackingEvent(0L, \"namespace\", \"event\", Maps.<String, String>newHashMap());\n    Collection<JobSpec> results = monitor.parseJobSpec(serializer.serializeRecord(event));\n    Assert.assertEquals(results.size(), 1);\n    Assert.assertEquals(monitor.events.size(), 1);\n    Assert.assertEquals(monitor.events.get(0), event);\n\n    monitor.shutdownMetrics();\n  }\n","date":"2021-05-11 08:17:01","endLine":66,"groupId":"10218","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/92/f95a3a2992980c40f0397c2a6d109ce57cbeeb.src","preCode":"  public void testSimple() throws Exception {\n\n    TestKafkaAvroJobMonitor monitor =\n        new TestKafkaAvroJobMonitor(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n    monitor.buildMetricsContextAndMetrics();\n\n    AvroSerializer<GobblinTrackingEvent> serializer =\n        new AvroBinarySerializer<>(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n\n    GobblinTrackingEvent event = new GobblinTrackingEvent(0L, \"namespace\", \"event\", Maps.<String, String>newHashMap());\n    Collection<Either<JobSpec, URI>> results = monitor.parseJobSpec(serializer.serializeRecord(event));\n    Assert.assertEquals(results.size(), 1);\n    Assert.assertEquals(monitor.events.size(), 1);\n    Assert.assertEquals(monitor.events.get(0), event);\n\n    monitor.shutdownMetrics();\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/KafkaAvroJobMonitorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2021-05-11 08:17:01","commitOrder":2,"curCode":"  public void testWrongSchemaVersionWriter() throws Exception {\n    TestKafkaAvroJobMonitor monitor =\n        new TestKafkaAvroJobMonitor(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n    monitor.buildMetricsContextAndMetrics();\n\n    AvroSerializer<GobblinTrackingEvent> serializer =\n        new AvroBinarySerializer<>(GobblinTrackingEvent.SCHEMA$, new FixedSchemaVersionWriter());\n\n    GobblinTrackingEvent event = new GobblinTrackingEvent(0L, \"namespace\", \"event\", Maps.<String, String>newHashMap());\n    Collection<JobSpec> results = monitor.parseJobSpec(serializer.serializeRecord(event));\n    Assert.assertEquals(results.size(), 0);\n    Assert.assertEquals(monitor.events.size(), 0);\n    Assert.assertEquals(monitor.getMessageParseFailures().getCount(), 1);\n\n    monitor.shutdownMetrics();\n  }\n","date":"2021-05-11 08:17:01","endLine":123,"groupId":"10218","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWrongSchemaVersionWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/92/f95a3a2992980c40f0397c2a6d109ce57cbeeb.src","preCode":"  public void testWrongSchemaVersionWriter() throws Exception {\n    TestKafkaAvroJobMonitor monitor =\n        new TestKafkaAvroJobMonitor(GobblinTrackingEvent.SCHEMA$, new NoopSchemaVersionWriter());\n    monitor.buildMetricsContextAndMetrics();\n\n    AvroSerializer<GobblinTrackingEvent> serializer =\n        new AvroBinarySerializer<>(GobblinTrackingEvent.SCHEMA$, new FixedSchemaVersionWriter());\n\n    GobblinTrackingEvent event = new GobblinTrackingEvent(0L, \"namespace\", \"event\", Maps.<String, String>newHashMap());\n    Collection<Either<JobSpec, URI>> results = monitor.parseJobSpec(serializer.serializeRecord(event));\n    Assert.assertEquals(results.size(), 0);\n    Assert.assertEquals(monitor.events.size(), 0);\n    Assert.assertEquals(monitor.getMessageParseFailures().getCount(), 1);\n\n    monitor.shutdownMetrics();\n  }\n","realPath":"gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/KafkaAvroJobMonitorTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"ae62d77a0b3b0d123cea811b00bd363b6c6d30f3","commitMessage":"@@@[GOBBLIN-1441] separate delete and cancel specs in KafkaJobMonitor\n\nCloses #3276 from\narjun4084346/cancelDeleteInCluster\n","date":"2021-05-11 08:17:01","modifiedFileCount":"13","status":"M","submitter":"Arjun"}]
