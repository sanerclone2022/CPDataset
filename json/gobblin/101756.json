[{"authorTime":"2021-02-05 04:13:05","codes":[{"authorDate":"2021-02-05 04:13:05","commitOrder":1,"curCode":"  protected void rewriteFiles(GobblinMetadataChangeEvent gmce, Map<String, Collection<HiveSpec>> newSpecsMap,\n      Map<String, Collection<HiveSpec>> oldSpecsMap, Table table, TableMetadata tableMetadata) throws IOException {\n    PartitionSpec partitionSpec = table.spec();\n    tableMetadata.transaction = Optional.of(tableMetadata.transaction.or(table::newTransaction));\n    Transaction transaction = tableMetadata.transaction.get();\n    Set<DataFile> newDataFiles = new HashSet<>();\n    getIcebergDataFilesToBeAddedHelper(gmce, table, newSpecsMap, tableMetadata)\n        .forEach(dataFile -> {\n          newDataFiles.add(dataFile);\n          tableMetadata.addedFiles.put(dataFile.path(), \"\");\n        });\n    Set<DataFile> oldDataFiles = getIcebergDataFilesToBeDeleted(gmce, table, newSpecsMap, oldSpecsMap, partitionSpec);\n    if (oldDataFiles.isEmpty() && !newDataFiles.isEmpty()) {\n      \r\n      DataFile file = newDataFiles.iterator().next();\n      Expression exp = Expressions.startsWith(ICEBERG_FILE_PATH_COLUMN, (String) file.path());\n      if (FindFiles.in(table).withMetadataMatching(exp).collect().iterator().hasNext()) {\n        \r\n        return;\n      }\n      \r\n      \r\n      tableMetadata.appendFiles = Optional.of(tableMetadata.appendFiles.or(transaction::newAppend));\n      AppendFiles appendFiles = tableMetadata.appendFiles.get();\n      newDataFiles.forEach(appendFiles::appendFile);\n      return;\n    }\n    transaction.newRewrite().rewriteFiles(oldDataFiles, newDataFiles).commit();\n  }\n","date":"2021-02-05 04:13:05","endLine":445,"groupId":"2794","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"rewriteFiles","params":"(GobblinMetadataChangeEventgmce@Map<String@Collection<HiveSpec>>newSpecsMap@Map<String@Collection<HiveSpec>>oldSpecsMap@Tabletable@TableMetadatatableMetadata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ed/89f1a290336f9bf5e926db9648556071bd5f36.src","preCode":"  protected void rewriteFiles(GobblinMetadataChangeEvent gmce, Map<String, Collection<HiveSpec>> newSpecsMap,\n      Map<String, Collection<HiveSpec>> oldSpecsMap, Table table, TableMetadata tableMetadata) throws IOException {\n    PartitionSpec partitionSpec = table.spec();\n    tableMetadata.transaction = Optional.of(tableMetadata.transaction.or(table::newTransaction));\n    Transaction transaction = tableMetadata.transaction.get();\n    Set<DataFile> newDataFiles = new HashSet<>();\n    getIcebergDataFilesToBeAddedHelper(gmce, table, newSpecsMap, tableMetadata)\n        .forEach(dataFile -> {\n          newDataFiles.add(dataFile);\n          tableMetadata.addedFiles.put(dataFile.path(), \"\");\n        });\n    Set<DataFile> oldDataFiles = getIcebergDataFilesToBeDeleted(gmce, table, newSpecsMap, oldSpecsMap, partitionSpec);\n    if (oldDataFiles.isEmpty() && !newDataFiles.isEmpty()) {\n      \r\n      DataFile file = newDataFiles.iterator().next();\n      Expression exp = Expressions.startsWith(ICEBERG_FILE_PATH_COLUMN, (String) file.path());\n      if (FindFiles.in(table).withMetadataMatching(exp).collect().iterator().hasNext()) {\n        \r\n        return;\n      }\n      \r\n      \r\n      tableMetadata.appendFiles = Optional.of(tableMetadata.appendFiles.or(transaction::newAppend));\n      AppendFiles appendFiles = tableMetadata.appendFiles.get();\n      newDataFiles.forEach(appendFiles::appendFile);\n      return;\n    }\n    transaction.newRewrite().rewriteFiles(oldDataFiles, newDataFiles).commit();\n  }\n","realPath":"gobblin-iceberg/src/main/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"B"},{"authorDate":"2021-02-05 04:13:05","commitOrder":1,"curCode":"  protected void addFiles(GobblinMetadataChangeEvent gmce, Map<String, Collection<HiveSpec>> newSpecsMap, Table table,\n      TableMetadata tableMetadata) throws IOException {\n    Transaction transaction = tableMetadata.transaction.get();\n    tableMetadata.appendFiles = Optional.of(tableMetadata.appendFiles.or(transaction::newAppend));\n    AppendFiles appendFiles = tableMetadata.appendFiles.get();\n    getIcebergDataFilesToBeAddedHelper(gmce, table, newSpecsMap, tableMetadata)\n        .forEach(dataFile -> {\n          appendFiles.appendFile(dataFile);\n          tableMetadata.addedFiles.put(dataFile.path(), \"\");\n        });\n  }\n","date":"2021-02-05 04:13:05","endLine":527,"groupId":"586","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addFiles","params":"(GobblinMetadataChangeEventgmce@Map<String@Collection<HiveSpec>>newSpecsMap@Tabletable@TableMetadatatableMetadata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ed/89f1a290336f9bf5e926db9648556071bd5f36.src","preCode":"  protected void addFiles(GobblinMetadataChangeEvent gmce, Map<String, Collection<HiveSpec>> newSpecsMap, Table table,\n      TableMetadata tableMetadata) throws IOException {\n    Transaction transaction = tableMetadata.transaction.get();\n    tableMetadata.appendFiles = Optional.of(tableMetadata.appendFiles.or(transaction::newAppend));\n    AppendFiles appendFiles = tableMetadata.appendFiles.get();\n    getIcebergDataFilesToBeAddedHelper(gmce, table, newSpecsMap, tableMetadata)\n        .forEach(dataFile -> {\n          appendFiles.appendFile(dataFile);\n          tableMetadata.addedFiles.put(dataFile.path(), \"\");\n        });\n  }\n","realPath":"gobblin-iceberg/src/main/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":517,"status":"B"}],"commitId":"4e2dc94eb570086c768c247f669255d62f84f3d6","commitMessage":"@@@[GOBBLIN-1335] Publish GMCE(GobblinMetadataChangeEvent) publisher and iceberg retention job to Gobblin OSS\n\n[GOBBLIN-1335] Publish\nGMCE(GobblinMetadataChangeEvent) publisher and\niceberg retention job to Gobblin OSS\n\nadd OSS comments\n\nadd unit test\n\nAdd icebergWriter to be able to consume GMCE and\nregister into iceberg table\n\nMake it re-writable for catalog inside\nicebergWriter\n\naddress comments\n\ntrigger build\n\ntrigger build\n\naddress comments\n\nMerge branch 'master' into GOBBLIN-1335\n\nMerge branch 'master' into GOBBLIN-1335\n\ndefine iceberg version\n\naddress comments\n\ninclude recent changes\n\nMerge remote-tracking branch 'origin' into\nGOBBLIN-1335\n\nMerge remote-tracking branch 'origin' into\nGOBBLIN-1335\n\nmerge master and modify method privacy level to\nmake them be re-writable\n\nCloses #3172 from ZihanLi58/GOBBLIN-1335\n","date":"2021-02-05 04:13:05","modifiedFileCount":"1","status":"B","submitter":"Zihan Li"},{"authorTime":"2021-08-07 02:52:37","codes":[{"authorDate":"2021-08-07 02:52:37","commitOrder":2,"curCode":"  protected void rewriteFiles(GobblinMetadataChangeEvent gmce, Map<String, Collection<HiveSpec>> newSpecsMap,\n      Map<String, Collection<HiveSpec>> oldSpecsMap, Table table, TableMetadata tableMetadata) throws IOException {\n    PartitionSpec partitionSpec = table.spec();\n    tableMetadata.ensureTxnInit();\n    Set<DataFile> newDataFiles = new HashSet<>();\n    getIcebergDataFilesToBeAddedHelper(gmce, table, newSpecsMap, tableMetadata)\n        .forEach(dataFile -> {\n          newDataFiles.add(dataFile);\n          tableMetadata.addedFiles.put(dataFile.path(), \"\");\n        });\n    Set<DataFile> oldDataFiles = getIcebergDataFilesToBeDeleted(gmce, table, newSpecsMap, oldSpecsMap, partitionSpec);\n\n    \r\n    if (oldDataFiles.isEmpty() && !newDataFiles.isEmpty()) {\n      \r\n      DataFile dataFile = newDataFiles.iterator().next();\n      Expression exp = Expressions.startsWith(ICEBERG_FILE_PATH_COLUMN, dataFile.path().toString());\n      if (FindFiles.in(table).withMetadataMatching(exp).collect().iterator().hasNext()) {\n        \r\n        return;\n      }\n      \r\n      \r\n      \r\n      \r\n      AppendFiles appendFiles = tableMetadata.getOrInitAppendFiles();\n      newDataFiles.forEach(appendFiles::appendFile);\n      return;\n    }\n\n    tableMetadata.transaction.get().newRewrite().rewriteFiles(oldDataFiles, newDataFiles).commit();\n  }\n","date":"2021-08-07 02:52:37","endLine":482,"groupId":"101756","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"rewriteFiles","params":"(GobblinMetadataChangeEventgmce@Map<String@Collection<HiveSpec>>newSpecsMap@Map<String@Collection<HiveSpec>>oldSpecsMap@Tabletable@TableMetadatatableMetadata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3a/bd491a3ac113c5f9f82a2627054fb1a53dd3e8.src","preCode":"  protected void rewriteFiles(GobblinMetadataChangeEvent gmce, Map<String, Collection<HiveSpec>> newSpecsMap,\n      Map<String, Collection<HiveSpec>> oldSpecsMap, Table table, TableMetadata tableMetadata) throws IOException {\n    PartitionSpec partitionSpec = table.spec();\n    tableMetadata.transaction = Optional.of(tableMetadata.transaction.or(table::newTransaction));\n    Transaction transaction = tableMetadata.transaction.get();\n    Set<DataFile> newDataFiles = new HashSet<>();\n    getIcebergDataFilesToBeAddedHelper(gmce, table, newSpecsMap, tableMetadata)\n        .forEach(dataFile -> {\n          newDataFiles.add(dataFile);\n          tableMetadata.addedFiles.put(dataFile.path(), \"\");\n        });\n    Set<DataFile> oldDataFiles = getIcebergDataFilesToBeDeleted(gmce, table, newSpecsMap, oldSpecsMap, partitionSpec);\n    if (oldDataFiles.isEmpty() && !newDataFiles.isEmpty()) {\n      \r\n      DataFile file = newDataFiles.iterator().next();\n      Expression exp = Expressions.startsWith(ICEBERG_FILE_PATH_COLUMN, (String) file.path());\n      if (FindFiles.in(table).withMetadataMatching(exp).collect().iterator().hasNext()) {\n        \r\n        return;\n      }\n      \r\n      \r\n      tableMetadata.appendFiles = Optional.of(tableMetadata.appendFiles.or(transaction::newAppend));\n      AppendFiles appendFiles = tableMetadata.appendFiles.get();\n      newDataFiles.forEach(appendFiles::appendFile);\n      return;\n    }\n    transaction.newRewrite().rewriteFiles(oldDataFiles, newDataFiles).commit();\n  }\n","realPath":"gobblin-iceberg/src/main/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":451,"status":"M"},{"authorDate":"2021-08-07 02:52:37","commitOrder":2,"curCode":"  protected void addFiles(GobblinMetadataChangeEvent gmce, Map<String, Collection<HiveSpec>> newSpecsMap, Table table,\n      TableMetadata tableMetadata) {\n    AppendFiles appendFiles = tableMetadata.getOrInitAppendFiles();\n    getIcebergDataFilesToBeAddedHelper(gmce, table, newSpecsMap, tableMetadata)\n        .forEach(dataFile -> {\n          appendFiles.appendFile(dataFile);\n          tableMetadata.addedFiles.put(dataFile.path(), \"\");\n        });\n  }\n","date":"2021-08-07 02:52:37","endLine":570,"groupId":"101756","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addFiles","params":"(GobblinMetadataChangeEventgmce@Map<String@Collection<HiveSpec>>newSpecsMap@Tabletable@TableMetadatatableMetadata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3a/bd491a3ac113c5f9f82a2627054fb1a53dd3e8.src","preCode":"  protected void addFiles(GobblinMetadataChangeEvent gmce, Map<String, Collection<HiveSpec>> newSpecsMap, Table table,\n      TableMetadata tableMetadata) throws IOException {\n    Transaction transaction = tableMetadata.transaction.get();\n    tableMetadata.appendFiles = Optional.of(tableMetadata.appendFiles.or(transaction::newAppend));\n    AppendFiles appendFiles = tableMetadata.appendFiles.get();\n    getIcebergDataFilesToBeAddedHelper(gmce, table, newSpecsMap, tableMetadata)\n        .forEach(dataFile -> {\n          appendFiles.appendFile(dataFile);\n          tableMetadata.addedFiles.put(dataFile.path(), \"\");\n        });\n  }\n","realPath":"gobblin-iceberg/src/main/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":562,"status":"M"}],"commitId":"dd205150d13d9ad9cd77a604d0bc577e19e9c628","commitMessage":"@@@[GOBBLIN-1501] Documentation + Code Cleaning for IcebergMetadataWriter  (#3347)\n\n* Add more comments in IcebergMetadataWriter while reading thru the code base\n\n* Fix unit tests post force the compile-time casting of gmce","date":"2021-08-07 02:52:37","modifiedFileCount":"7","status":"M","submitter":"Lei"}]
