[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testConvertGpgRecord() throws Exception {\n    final String expectedFileContents = \"123456789\";\n    final String passphrase = \"12\";\n    DecryptConverter converter = new DecryptConverter();\n    WorkUnitState workUnitState = new WorkUnitState();\n\n    try {\n      setEncryptedPassphrase(passphrase, workUnitState);\n      converter.init(workUnitState);\n\n      FileSystem fs = FileSystem.getLocal(new Configuration());\n\n      URL url = getClass().getClassLoader().getResource(\"decryptConverterTest/decrypt-test.txt.gpg\");\n      Assert.assertNotNull(url);\n\n      String gpgFilePath = url.getFile();\n      try (FSDataInputStream gpgFileInput = fs.open(new Path(gpgFilePath))) {\n\t      FileAwareInputStream fileAwareInputStream =\n\t          new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(), gpgFileInput);\n\n\t      Iterable<FileAwareInputStream> iterable =\n\t          converter.convertRecord(\"outputSchema\", fileAwareInputStream, workUnitState);\n\t      fileAwareInputStream = Iterables.getFirst(iterable, null);\n\t      Assert.assertNotNull(fileAwareInputStream);\n\n\t      String actual = IOUtils.toString(fileAwareInputStream.getInputStream(), Charsets.UTF_8);\n\t      Assert.assertEquals(actual, expectedFileContents);\n      }\n    } finally {\n      deleteMasterPwdFile();\n      converter.close();\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":89,"groupId":"3507","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testConvertGpgRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ec/83771ed52b808d3f90bb23f29bf5863ca353c2.src","preCode":"  public void testConvertGpgRecord() throws Exception {\n    final String expectedFileContents = \"123456789\";\n    final String passphrase = \"12\";\n    DecryptConverter converter = new DecryptConverter();\n    WorkUnitState workUnitState = new WorkUnitState();\n\n    try {\n      setEncryptedPassphrase(passphrase, workUnitState);\n      converter.init(workUnitState);\n\n      FileSystem fs = FileSystem.getLocal(new Configuration());\n\n      URL url = getClass().getClassLoader().getResource(\"decryptConverterTest/decrypt-test.txt.gpg\");\n      Assert.assertNotNull(url);\n\n      String gpgFilePath = url.getFile();\n      try (FSDataInputStream gpgFileInput = fs.open(new Path(gpgFilePath))) {\n\t      FileAwareInputStream fileAwareInputStream =\n\t          new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(), gpgFileInput);\n\n\t      Iterable<FileAwareInputStream> iterable =\n\t          converter.convertRecord(\"outputSchema\", fileAwareInputStream, workUnitState);\n\t      fileAwareInputStream = Iterables.getFirst(iterable, null);\n\t      Assert.assertNotNull(fileAwareInputStream);\n\n\t      String actual = IOUtils.toString(fileAwareInputStream.getInputStream(), Charsets.UTF_8);\n\t      Assert.assertEquals(actual, expectedFileContents);\n      }\n    } finally {\n      deleteMasterPwdFile();\n      converter.close();\n    }\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/converter/DecryptConverterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testConvertDifferentEncryption()\n      throws IOException, DataConversionException {\n    final String expectedFileContents = \"2345678\";\n\n    WorkUnitState workUnitState = new WorkUnitState();\n    workUnitState.getJobState()\n        .setProp(\"converter.encrypt.\" + EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, \"insecure_shift\");\n\n    try (DecryptConverter converter = new DecryptConverter()) {\n      converter.init(workUnitState);\n      FileSystem fs = FileSystem.getLocal(new Configuration());\n\n      URL url = getClass().getClassLoader().getResource(\"decryptConverterTest/decrypt-test.txt.insecure_shift\");\n      Assert.assertNotNull(url);\n\n      String testFilePath = url.getFile();\n      try (FSDataInputStream testFileInput = fs.open(new Path(testFilePath))) {\n        FileAwareInputStream fileAwareInputStream =\n            new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(), testFileInput);\n        fileAwareInputStream.getFile().setDestination(new Path(\"file:///tmp/decrypt-test.txt.insecure_shift\"));\n        Iterable<FileAwareInputStream> iterable =\n            converter.convertRecord(\"outputSchema\", fileAwareInputStream, workUnitState);\n        FileAwareInputStream decryptedStream = Iterables.getFirst(iterable, null);\n        Assert.assertNotNull(decryptedStream);\n\n        String actual = IOUtils.toString(decryptedStream.getInputStream(), Charsets.UTF_8);\n        Assert.assertEquals(actual, expectedFileContents);\n        Assert.assertEquals(decryptedStream.getFile().getDestination().getName(), \"decrypt-test.txt\");\n      }\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":122,"groupId":"2825","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConvertDifferentEncryption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ec/83771ed52b808d3f90bb23f29bf5863ca353c2.src","preCode":"  public void testConvertDifferentEncryption()\n      throws IOException, DataConversionException {\n    final String expectedFileContents = \"2345678\";\n\n    WorkUnitState workUnitState = new WorkUnitState();\n    workUnitState.getJobState()\n        .setProp(\"converter.encrypt.\" + EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, \"insecure_shift\");\n\n    try (DecryptConverter converter = new DecryptConverter()) {\n      converter.init(workUnitState);\n      FileSystem fs = FileSystem.getLocal(new Configuration());\n\n      URL url = getClass().getClassLoader().getResource(\"decryptConverterTest/decrypt-test.txt.insecure_shift\");\n      Assert.assertNotNull(url);\n\n      String testFilePath = url.getFile();\n      try (FSDataInputStream testFileInput = fs.open(new Path(testFilePath))) {\n        FileAwareInputStream fileAwareInputStream =\n            new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(), testFileInput);\n        fileAwareInputStream.getFile().setDestination(new Path(\"file:///tmp/decrypt-test.txt.insecure_shift\"));\n        Iterable<FileAwareInputStream> iterable =\n            converter.convertRecord(\"outputSchema\", fileAwareInputStream, workUnitState);\n        FileAwareInputStream decryptedStream = Iterables.getFirst(iterable, null);\n        Assert.assertNotNull(decryptedStream);\n\n        String actual = IOUtils.toString(decryptedStream.getInputStream(), Charsets.UTF_8);\n        Assert.assertEquals(actual, expectedFileContents);\n        Assert.assertEquals(decryptedStream.getFile().getDestination().getName(), \"decrypt-test.txt\");\n      }\n    }\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/converter/DecryptConverterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2018-10-22 23:39:46","codes":[{"authorDate":"2018-10-22 23:39:46","commitOrder":2,"curCode":"  public void testConvertGpgRecord() throws Exception {\n    final String expectedFileContents = \"123456789\";\n    final String passphrase = \"12\";\n    DecryptConverter converter = new DecryptConverter();\n    WorkUnitState workUnitState = new WorkUnitState();\n\n    try {\n      setEncryptedPassphrase(passphrase, workUnitState);\n      converter.init(workUnitState);\n\n      FileSystem fs = FileSystem.getLocal(new Configuration());\n\n      URL url = getClass().getClassLoader().getResource(\"decryptConverterTest/decrypt-test.txt.gpg\");\n      Assert.assertNotNull(url);\n\n      String gpgFilePath = url.getFile();\n      try (FSDataInputStream gpgFileInput = fs.open(new Path(gpgFilePath))) {\n\t      FileAwareInputStream fileAwareInputStream = FileAwareInputStream.builder()\n            .file(CopyableFileUtils.getTestCopyableFile()).inputStream(gpgFileInput).build();\n\n\t      Iterable<FileAwareInputStream> iterable =\n\t          converter.convertRecord(\"outputSchema\", fileAwareInputStream, workUnitState);\n\t      fileAwareInputStream = Iterables.getFirst(iterable, null);\n\t      Assert.assertNotNull(fileAwareInputStream);\n\n\t      String actual = IOUtils.toString(fileAwareInputStream.getInputStream(), Charsets.UTF_8);\n\t      Assert.assertEquals(actual, expectedFileContents);\n      }\n    } finally {\n      deleteMasterPwdFile();\n      converter.close();\n    }\n  }\n","date":"2018-10-22 23:39:46","endLine":89,"groupId":"101663","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testConvertGpgRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/4e/48e9a0d1dfac4c5256abcc445e48f0aa3055fe.src","preCode":"  public void testConvertGpgRecord() throws Exception {\n    final String expectedFileContents = \"123456789\";\n    final String passphrase = \"12\";\n    DecryptConverter converter = new DecryptConverter();\n    WorkUnitState workUnitState = new WorkUnitState();\n\n    try {\n      setEncryptedPassphrase(passphrase, workUnitState);\n      converter.init(workUnitState);\n\n      FileSystem fs = FileSystem.getLocal(new Configuration());\n\n      URL url = getClass().getClassLoader().getResource(\"decryptConverterTest/decrypt-test.txt.gpg\");\n      Assert.assertNotNull(url);\n\n      String gpgFilePath = url.getFile();\n      try (FSDataInputStream gpgFileInput = fs.open(new Path(gpgFilePath))) {\n\t      FileAwareInputStream fileAwareInputStream =\n\t          new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(), gpgFileInput);\n\n\t      Iterable<FileAwareInputStream> iterable =\n\t          converter.convertRecord(\"outputSchema\", fileAwareInputStream, workUnitState);\n\t      fileAwareInputStream = Iterables.getFirst(iterable, null);\n\t      Assert.assertNotNull(fileAwareInputStream);\n\n\t      String actual = IOUtils.toString(fileAwareInputStream.getInputStream(), Charsets.UTF_8);\n\t      Assert.assertEquals(actual, expectedFileContents);\n      }\n    } finally {\n      deleteMasterPwdFile();\n      converter.close();\n    }\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/converter/DecryptConverterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2018-10-22 23:39:46","commitOrder":2,"curCode":"  public void testConvertDifferentEncryption()\n      throws IOException, DataConversionException {\n    final String expectedFileContents = \"2345678\";\n\n    WorkUnitState workUnitState = new WorkUnitState();\n    workUnitState.getJobState()\n        .setProp(\"converter.encrypt.\" + EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, \"insecure_shift\");\n\n    try (DecryptConverter converter = new DecryptConverter()) {\n      converter.init(workUnitState);\n      FileSystem fs = FileSystem.getLocal(new Configuration());\n\n      URL url = getClass().getClassLoader().getResource(\"decryptConverterTest/decrypt-test.txt.insecure_shift\");\n      Assert.assertNotNull(url);\n\n      String testFilePath = url.getFile();\n      try (FSDataInputStream testFileInput = fs.open(new Path(testFilePath))) {\n        FileAwareInputStream fileAwareInputStream = FileAwareInputStream.builder()\n            .file(CopyableFileUtils.getTestCopyableFile()).inputStream(testFileInput).build();\n        fileAwareInputStream.getFile().setDestination(new Path(\"file:///tmp/decrypt-test.txt.insecure_shift\"));\n        Iterable<FileAwareInputStream> iterable =\n            converter.convertRecord(\"outputSchema\", fileAwareInputStream, workUnitState);\n        FileAwareInputStream decryptedStream = Iterables.getFirst(iterable, null);\n        Assert.assertNotNull(decryptedStream);\n\n        String actual = IOUtils.toString(decryptedStream.getInputStream(), Charsets.UTF_8);\n        Assert.assertEquals(actual, expectedFileContents);\n        Assert.assertEquals(decryptedStream.getFile().getDestination().getName(), \"decrypt-test.txt\");\n      }\n    }\n  }\n","date":"2018-10-22 23:39:46","endLine":122,"groupId":"101663","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConvertDifferentEncryption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/4e/48e9a0d1dfac4c5256abcc445e48f0aa3055fe.src","preCode":"  public void testConvertDifferentEncryption()\n      throws IOException, DataConversionException {\n    final String expectedFileContents = \"2345678\";\n\n    WorkUnitState workUnitState = new WorkUnitState();\n    workUnitState.getJobState()\n        .setProp(\"converter.encrypt.\" + EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, \"insecure_shift\");\n\n    try (DecryptConverter converter = new DecryptConverter()) {\n      converter.init(workUnitState);\n      FileSystem fs = FileSystem.getLocal(new Configuration());\n\n      URL url = getClass().getClassLoader().getResource(\"decryptConverterTest/decrypt-test.txt.insecure_shift\");\n      Assert.assertNotNull(url);\n\n      String testFilePath = url.getFile();\n      try (FSDataInputStream testFileInput = fs.open(new Path(testFilePath))) {\n        FileAwareInputStream fileAwareInputStream =\n            new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(), testFileInput);\n        fileAwareInputStream.getFile().setDestination(new Path(\"file:///tmp/decrypt-test.txt.insecure_shift\"));\n        Iterable<FileAwareInputStream> iterable =\n            converter.convertRecord(\"outputSchema\", fileAwareInputStream, workUnitState);\n        FileAwareInputStream decryptedStream = Iterables.getFirst(iterable, null);\n        Assert.assertNotNull(decryptedStream);\n\n        String actual = IOUtils.toString(decryptedStream.getInputStream(), Charsets.UTF_8);\n        Assert.assertEquals(actual, expectedFileContents);\n        Assert.assertEquals(decryptedStream.getFile().getDestination().getName(), \"decrypt-test.txt\");\n      }\n    }\n  }\n","realPath":"gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/converter/DecryptConverterTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"cba3699299c7a4013fc4c193caebe87c1cac5b76","commitMessage":"@@@[GOBBLIN-598] Add DistcpFileSplitter to allow for block level distcp\n\n[GOBBLIN-598] Add DistcpFileSplitter to allow for\nblock level distcp\n\nFix task state bug for merging in block distcp\n\nAddress review comments.  and add javadoc/comments\n\nAllowSplit and ADL modifications\n\nCloses #2461 from cshen98/distcp1\n","date":"2018-10-22 23:39:46","modifiedFileCount":"14","status":"M","submitter":"Carl Shen"}]
