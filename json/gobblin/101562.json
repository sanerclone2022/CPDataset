[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public DatasetHelper(Dataset dataset, FileSystem fs, Collection<String> extensions) {\n    this.extensions = extensions;\n    this.fs = fs;\n    this.dataset = dataset;\n    this.condition = createRecompactionCondition();\n\n    try {\n      this.inputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_INPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_INPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.outputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.lateInputRecordCountProvider = new LateFileRecordCountProvider(this.inputRecordCountProvider);\n      this.lateOutputRecordCountProvider = new LateFileRecordCountProvider(this.outputRecordCountProvider);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to instantiate RecordCountProvider\", e);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":88,"groupId":"2766","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"DatasetHelper","params":"(Datasetdataset@FileSystemfs@Collection<String>extensions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2e/ede65e3bbc632bd12bc90702b1e63ca9f6f3ff.src","preCode":"  public DatasetHelper(Dataset dataset, FileSystem fs, Collection<String> extensions) {\n    this.extensions = extensions;\n    this.fs = fs;\n    this.dataset = dataset;\n    this.condition = createRecompactionCondition();\n\n    try {\n      this.inputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_INPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_INPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.outputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.lateInputRecordCountProvider = new LateFileRecordCountProvider(this.inputRecordCountProvider);\n      this.lateOutputRecordCountProvider = new LateFileRecordCountProvider(this.outputRecordCountProvider);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to instantiate RecordCountProvider\", e);\n    }\n  }\n","realPath":"gobblin-compaction/src/main/java/org/apache/gobblin/compaction/dataset/DatasetHelper.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  protected MRCompactorJobRunner(Dataset dataset, FileSystem fs) {\n    this.dataset = dataset;\n    this.fs = fs;\n    this.perm = HadoopUtils.deserializeFsPermission(this.dataset.jobProps(), COMPACTION_JOB_OUTPUT_DIR_PERMISSION,\n        FsPermission.getDefault());\n    this.recompactFromDestPaths = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RECOMPACT_FROM_DEST_PATHS, MRCompactor.DEFAULT_COMPACTION_RECOMPACT_FROM_DEST_PATHS);\n    this.recompactAllData = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RECOMPACT_ALL_DATA, MRCompactor.DEFAULT_COMPACTION_RECOMPACT_ALL_DATA);\n    this.renameSourceDir = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RENAME_SOURCE_DIR_ENABLED, MRCompactor.DEFAULT_COMPACTION_RENAME_SOURCE_DIR_ENABLED);\n\n    Preconditions.checkArgument(this.dataset.jobProps().contains(MRCompactor.COMPACTION_SHOULD_DEDUPLICATE),\n        String.format(\"Missing property %s for dataset %s\", MRCompactor.COMPACTION_SHOULD_DEDUPLICATE, this.dataset));\n    this.shouldDeduplicate = this.dataset.jobProps().getPropAsBoolean(MRCompactor.COMPACTION_SHOULD_DEDUPLICATE);\n\n    this.outputDeduplicated = this.dataset.jobProps().getPropAsBoolean(MRCompactor.COMPACTION_OUTPUT_DEDUPLICATED,\n        MRCompactor.DEFAULT_COMPACTION_OUTPUT_DEDUPLICATED);\n\n    this.usePrimeReducers = this.dataset.jobProps().getPropAsBoolean(COMPACTION_JOB_USE_PRIME_REDUCERS,\n        DEFAULT_COMPACTION_JOB_USE_PRIME_REDUCERS);\n\n    this.eventSubmitter = new EventSubmitter.Builder(\n        GobblinMetrics.get(this.dataset.jobProps().getProp(ConfigurationKeys.JOB_NAME_KEY)).getMetricContext(),\n        MRCompactor.COMPACTION_TRACKING_EVENTS_NAMESPACE).build();\n\n    this.copyLateDataThreadPoolSize = this.dataset.jobProps().getPropAsInt(COMPACTION_COPY_LATE_DATA_THREAD_POOL_SIZE,\n        DEFAULT_COMPACTION_COPY_LATE_DATA_THREAD_POOL_SIZE);\n\n    try {\n      this.inputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_INPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_INPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.outputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.lateInputRecordCountProvider = new LateFileRecordCountProvider(this.inputRecordCountProvider);\n      this.lateOutputRecordCountProvider = new LateFileRecordCountProvider(this.outputRecordCountProvider);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to instantiate RecordCountProvider\", e);\n    }\n\n    this.applicablePathCache = CacheBuilder.newBuilder().maximumSize(2000).build();\n    this.datasetHelper = new DatasetHelper(this.dataset, this.fs, this.getApplicableFileExtensions());\n\n  }\n","date":"2017-07-31 15:51:25","endLine":206,"groupId":"5929","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"MRCompactorJobRunner","params":"(Datasetdataset@FileSystemfs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/49/1bc81b34e83bcb529a730aea8ffa01c78dc226.src","preCode":"  protected MRCompactorJobRunner(Dataset dataset, FileSystem fs) {\n    this.dataset = dataset;\n    this.fs = fs;\n    this.perm = HadoopUtils.deserializeFsPermission(this.dataset.jobProps(), COMPACTION_JOB_OUTPUT_DIR_PERMISSION,\n        FsPermission.getDefault());\n    this.recompactFromDestPaths = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RECOMPACT_FROM_DEST_PATHS, MRCompactor.DEFAULT_COMPACTION_RECOMPACT_FROM_DEST_PATHS);\n    this.recompactAllData = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RECOMPACT_ALL_DATA, MRCompactor.DEFAULT_COMPACTION_RECOMPACT_ALL_DATA);\n    this.renameSourceDir = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RENAME_SOURCE_DIR_ENABLED, MRCompactor.DEFAULT_COMPACTION_RENAME_SOURCE_DIR_ENABLED);\n\n    Preconditions.checkArgument(this.dataset.jobProps().contains(MRCompactor.COMPACTION_SHOULD_DEDUPLICATE),\n        String.format(\"Missing property %s for dataset %s\", MRCompactor.COMPACTION_SHOULD_DEDUPLICATE, this.dataset));\n    this.shouldDeduplicate = this.dataset.jobProps().getPropAsBoolean(MRCompactor.COMPACTION_SHOULD_DEDUPLICATE);\n\n    this.outputDeduplicated = this.dataset.jobProps().getPropAsBoolean(MRCompactor.COMPACTION_OUTPUT_DEDUPLICATED,\n        MRCompactor.DEFAULT_COMPACTION_OUTPUT_DEDUPLICATED);\n\n    this.usePrimeReducers = this.dataset.jobProps().getPropAsBoolean(COMPACTION_JOB_USE_PRIME_REDUCERS,\n        DEFAULT_COMPACTION_JOB_USE_PRIME_REDUCERS);\n\n    this.eventSubmitter = new EventSubmitter.Builder(\n        GobblinMetrics.get(this.dataset.jobProps().getProp(ConfigurationKeys.JOB_NAME_KEY)).getMetricContext(),\n        MRCompactor.COMPACTION_TRACKING_EVENTS_NAMESPACE).build();\n\n    this.copyLateDataThreadPoolSize = this.dataset.jobProps().getPropAsInt(COMPACTION_COPY_LATE_DATA_THREAD_POOL_SIZE,\n        DEFAULT_COMPACTION_COPY_LATE_DATA_THREAD_POOL_SIZE);\n\n    try {\n      this.inputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_INPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_INPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.outputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.lateInputRecordCountProvider = new LateFileRecordCountProvider(this.inputRecordCountProvider);\n      this.lateOutputRecordCountProvider = new LateFileRecordCountProvider(this.outputRecordCountProvider);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to instantiate RecordCountProvider\", e);\n    }\n\n    this.applicablePathCache = CacheBuilder.newBuilder().maximumSize(2000).build();\n    this.datasetHelper = new DatasetHelper(this.dataset, this.fs, this.getApplicableFileExtensions());\n\n  }\n","realPath":"gobblin-compaction/src/main/java/org/apache/gobblin/compaction/mapreduce/MRCompactorJobRunner.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-09-08 10:34:48","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public DatasetHelper(Dataset dataset, FileSystem fs, Collection<String> extensions) {\n    this.extensions = extensions;\n    this.fs = fs;\n    this.dataset = dataset;\n    this.condition = createRecompactionCondition();\n\n    try {\n      this.inputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_INPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_INPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.outputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.lateInputRecordCountProvider = new LateFileRecordCountProvider(this.inputRecordCountProvider);\n      this.lateOutputRecordCountProvider = new LateFileRecordCountProvider(this.outputRecordCountProvider);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to instantiate RecordCountProvider\", e);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":88,"groupId":"101562","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"DatasetHelper","params":"(Datasetdataset@FileSystemfs@Collection<String>extensions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/2e/ede65e3bbc632bd12bc90702b1e63ca9f6f3ff.src","preCode":"  public DatasetHelper(Dataset dataset, FileSystem fs, Collection<String> extensions) {\n    this.extensions = extensions;\n    this.fs = fs;\n    this.dataset = dataset;\n    this.condition = createRecompactionCondition();\n\n    try {\n      this.inputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_INPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_INPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.outputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.lateInputRecordCountProvider = new LateFileRecordCountProvider(this.inputRecordCountProvider);\n      this.lateOutputRecordCountProvider = new LateFileRecordCountProvider(this.outputRecordCountProvider);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to instantiate RecordCountProvider\", e);\n    }\n  }\n","realPath":"gobblin-compaction/src/main/java/org/apache/gobblin/compaction/dataset/DatasetHelper.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"},{"authorDate":"2017-09-08 10:34:48","commitOrder":2,"curCode":"  protected MRCompactorJobRunner(Dataset dataset, FileSystem fs) {\n    this.dataset = dataset;\n    this.fs = fs;\n    this.perm = HadoopUtils.deserializeFsPermission(this.dataset.jobProps(), COMPACTION_JOB_OUTPUT_DIR_PERMISSION,\n        FsPermission.getDefault());\n    this.recompactFromDestPaths = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RECOMPACT_FROM_DEST_PATHS, MRCompactor.DEFAULT_COMPACTION_RECOMPACT_FROM_DEST_PATHS);\n    this.recompactAllData = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RECOMPACT_ALL_DATA, MRCompactor.DEFAULT_COMPACTION_RECOMPACT_ALL_DATA);\n    this.renameSourceDir = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RENAME_SOURCE_DIR_ENABLED, MRCompactor.DEFAULT_COMPACTION_RENAME_SOURCE_DIR_ENABLED);\n\n    Preconditions.checkArgument(this.dataset.jobProps().contains(MRCompactor.COMPACTION_SHOULD_DEDUPLICATE),\n        String.format(\"Missing property %s for dataset %s\", MRCompactor.COMPACTION_SHOULD_DEDUPLICATE, this.dataset));\n    this.shouldDeduplicate = this.dataset.jobProps().getPropAsBoolean(MRCompactor.COMPACTION_SHOULD_DEDUPLICATE);\n\n    this.outputDeduplicated = this.dataset.jobProps().getPropAsBoolean(MRCompactor.COMPACTION_OUTPUT_DEDUPLICATED,\n        MRCompactor.DEFAULT_COMPACTION_OUTPUT_DEDUPLICATED);\n\n    this.usePrimeReducers = this.dataset.jobProps().getPropAsBoolean(COMPACTION_JOB_USE_PRIME_REDUCERS,\n        DEFAULT_COMPACTION_JOB_USE_PRIME_REDUCERS);\n\n    this.eventSubmitter = new EventSubmitter.Builder(\n        GobblinMetrics.get(this.dataset.jobProps().getProp(ConfigurationKeys.JOB_NAME_KEY)).getMetricContext(),\n        MRCompactor.COMPACTION_TRACKING_EVENTS_NAMESPACE).build();\n\n    this.copyLateDataThreadPoolSize = this.dataset.jobProps().getPropAsInt(COMPACTION_COPY_LATE_DATA_THREAD_POOL_SIZE,\n        DEFAULT_COMPACTION_COPY_LATE_DATA_THREAD_POOL_SIZE);\n\n    this.tmpFsUri = this.dataset.jobProps().getProp(COMPACTION_TMP_FS,\n        null);\n\n    try {\n      Log.info(\"Tmp fs uri:\"+this.tmpFsUri);\n      if (this.tmpFsUri != null) {\n        this.tmpFs = FileSystem.get(new URI(this.tmpFsUri), new Configuration());\n      } else {\n        this.tmpFs = MRCompactorJobRunner.this.fs;\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed get Filesystem from tmp fs uri\", e);\n    }\n\n    try {\n      this.inputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_INPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_INPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.outputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.lateInputRecordCountProvider = new LateFileRecordCountProvider(this.inputRecordCountProvider);\n      this.lateOutputRecordCountProvider = new LateFileRecordCountProvider(this.outputRecordCountProvider);\n      this.isRetryEnabled= this.dataset.jobProps().getPropAsBoolean(COMPACTION_RETRY_ENABLED,\n          false);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to instantiate RecordCountProvider\", e);\n    }\n\n    this.applicablePathCache = CacheBuilder.newBuilder().maximumSize(2000).build();\n    this.datasetHelper = new DatasetHelper(this.dataset, this.fs, this.getApplicableFileExtensions());\n\n    this.outputExtension = this.dataset.jobProps().getProp(MRCompactor.COMPACTION_FILE_EXTENSION, \".avro\");\n\n    if (this.isRetryEnabled) {\n      this.retrierConfig = ConfigBuilder.create()\n          .loadProps(this.dataset.jobProps().getProperties(), COMPACTION_RETRY_PREFIX)\n          .build()\n          .withFallback(COMPACTION_RETRY_DEFAULTS);\n\n      LOG.info(\"Retry enabled for compaction publish :\"+ retrierConfig.root().render(ConfigRenderOptions.concise()));\n    } else {\n      this.retrierConfig = WriterUtils.NO_RETRY_CONFIG;\n      LOG.info(\"Retry disabled for compaction\");\n    }\n\n  }\n","date":"2017-09-08 10:34:48","endLine":269,"groupId":"101562","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"MRCompactorJobRunner","params":"(Datasetdataset@FileSystemfs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e4/36e4d303b6c3970ac44b2e9622f6dbdeba8b28.src","preCode":"  protected MRCompactorJobRunner(Dataset dataset, FileSystem fs) {\n    this.dataset = dataset;\n    this.fs = fs;\n    this.perm = HadoopUtils.deserializeFsPermission(this.dataset.jobProps(), COMPACTION_JOB_OUTPUT_DIR_PERMISSION,\n        FsPermission.getDefault());\n    this.recompactFromDestPaths = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RECOMPACT_FROM_DEST_PATHS, MRCompactor.DEFAULT_COMPACTION_RECOMPACT_FROM_DEST_PATHS);\n    this.recompactAllData = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RECOMPACT_ALL_DATA, MRCompactor.DEFAULT_COMPACTION_RECOMPACT_ALL_DATA);\n    this.renameSourceDir = this.dataset.jobProps().getPropAsBoolean(\n        MRCompactor.COMPACTION_RENAME_SOURCE_DIR_ENABLED, MRCompactor.DEFAULT_COMPACTION_RENAME_SOURCE_DIR_ENABLED);\n\n    Preconditions.checkArgument(this.dataset.jobProps().contains(MRCompactor.COMPACTION_SHOULD_DEDUPLICATE),\n        String.format(\"Missing property %s for dataset %s\", MRCompactor.COMPACTION_SHOULD_DEDUPLICATE, this.dataset));\n    this.shouldDeduplicate = this.dataset.jobProps().getPropAsBoolean(MRCompactor.COMPACTION_SHOULD_DEDUPLICATE);\n\n    this.outputDeduplicated = this.dataset.jobProps().getPropAsBoolean(MRCompactor.COMPACTION_OUTPUT_DEDUPLICATED,\n        MRCompactor.DEFAULT_COMPACTION_OUTPUT_DEDUPLICATED);\n\n    this.usePrimeReducers = this.dataset.jobProps().getPropAsBoolean(COMPACTION_JOB_USE_PRIME_REDUCERS,\n        DEFAULT_COMPACTION_JOB_USE_PRIME_REDUCERS);\n\n    this.eventSubmitter = new EventSubmitter.Builder(\n        GobblinMetrics.get(this.dataset.jobProps().getProp(ConfigurationKeys.JOB_NAME_KEY)).getMetricContext(),\n        MRCompactor.COMPACTION_TRACKING_EVENTS_NAMESPACE).build();\n\n    this.copyLateDataThreadPoolSize = this.dataset.jobProps().getPropAsInt(COMPACTION_COPY_LATE_DATA_THREAD_POOL_SIZE,\n        DEFAULT_COMPACTION_COPY_LATE_DATA_THREAD_POOL_SIZE);\n\n    try {\n      this.inputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_INPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_INPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.outputRecordCountProvider = (RecordCountProvider) Class\n          .forName(this.dataset.jobProps().getProp(MRCompactor.COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER,\n              MRCompactor.DEFAULT_COMPACTION_OUTPUT_RECORD_COUNT_PROVIDER))\n          .newInstance();\n      this.lateInputRecordCountProvider = new LateFileRecordCountProvider(this.inputRecordCountProvider);\n      this.lateOutputRecordCountProvider = new LateFileRecordCountProvider(this.outputRecordCountProvider);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to instantiate RecordCountProvider\", e);\n    }\n\n    this.applicablePathCache = CacheBuilder.newBuilder().maximumSize(2000).build();\n    this.datasetHelper = new DatasetHelper(this.dataset, this.fs, this.getApplicableFileExtensions());\n\n  }\n","realPath":"gobblin-compaction/src/main/java/org/apache/gobblin/compaction/mapreduce/MRCompactorJobRunner.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"M"}],"commitId":"344d6d3c68b23ba451cabbf3bacb389e38e27f11","commitMessage":"@@@Merge pull request #1993 from treff7es/eventual_consistent_fs_support\n","date":"2017-09-08 10:34:48","modifiedFileCount":"14","status":"M","submitter":"Abhishek Tiwari"}]
