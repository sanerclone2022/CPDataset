[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutorInstance.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutorInstance.Verb, Spec>>) this.specExecutorInstanceConsumer.changedSpecs().get();\n\n    \r\n    if (Thread.interrupted()) {\n      throw new InterruptedException();\n    }\n\n    for (Pair<SpecExecutorInstance.Verb, Spec> entry : changesSpecs) {\n      SpecExecutorInstance.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutorInstance.Verb.ADD)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.UPDATE)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.DELETE)) {\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n      }\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":147,"groupId":"3148","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fetchJobSpecs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e6/60710296af9efde2babf3ce7365296ee7e2e3b.src","preCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutorInstance.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutorInstance.Verb, Spec>>) this.specExecutorInstanceConsumer.changedSpecs().get();\n\n    \r\n    if (Thread.interrupted()) {\n      throw new InterruptedException();\n    }\n\n    for (Pair<SpecExecutorInstance.Verb, Spec> entry : changesSpecs) {\n      SpecExecutorInstance.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutorInstance.Verb.ADD)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.UPDATE)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.DELETE)) {\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n      }\n    }\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/StreamingJobConfigurationManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutorInstance.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutorInstance.Verb, Spec>>) this.specExecutorInstanceConsumer.changedSpecs().get();\n\n    for (Pair<SpecExecutorInstance.Verb, Spec> entry : changesSpecs) {\n\n      SpecExecutorInstance.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutorInstance.Verb.ADD)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.UPDATE)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.DELETE)) {\n\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n        jobSpecs.remove(entry.getValue().getUri());\n      }\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":145,"groupId":"3148","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fetchJobSpecs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/92/90b5a176b978a244ac2e6a4a9195cdd780dd19.src","preCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutorInstance.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutorInstance.Verb, Spec>>) this.specExecutorInstanceConsumer.changedSpecs().get();\n\n    for (Pair<SpecExecutorInstance.Verb, Spec> entry : changesSpecs) {\n\n      SpecExecutorInstance.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutorInstance.Verb.ADD)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.UPDATE)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.DELETE)) {\n\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n        jobSpecs.remove(entry.getValue().getUri());\n      }\n    }\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/ScheduledJobConfigurationManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-09-12 17:29:05","codes":[{"authorDate":"2017-09-12 17:29:05","commitOrder":2,"curCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutor.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutor.Verb, Spec>>) this.specConsumer.changedSpecs().get();\n\n    \r\n    if (Thread.interrupted()) {\n      throw new InterruptedException();\n    }\n\n    for (Pair<SpecExecutor.Verb, Spec> entry : changesSpecs) {\n      SpecExecutor.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutor.Verb.ADD)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutor.Verb.UPDATE)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutor.Verb.DELETE)) {\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n      }\n    }\n  }\n","date":"2017-09-12 17:29:21","endLine":146,"groupId":"2506","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fetchJobSpecs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/73/70dc663eac2224442702d8ef54bf7f0d7efe5d.src","preCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutorInstance.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutorInstance.Verb, Spec>>) this.specExecutorInstanceConsumer.changedSpecs().get();\n\n    \r\n    if (Thread.interrupted()) {\n      throw new InterruptedException();\n    }\n\n    for (Pair<SpecExecutorInstance.Verb, Spec> entry : changesSpecs) {\n      SpecExecutorInstance.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutorInstance.Verb.ADD)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.UPDATE)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.DELETE)) {\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n      }\n    }\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/StreamingJobConfigurationManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2017-09-12 17:29:05","commitOrder":2,"curCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutor.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutor.Verb, Spec>>) this._specConsumer.changedSpecs().get();\n\n    for (Pair<SpecExecutor.Verb, Spec> entry : changesSpecs) {\n\n      SpecExecutor.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutor.Verb.ADD)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutor.Verb.UPDATE)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutor.Verb.DELETE)) {\n\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n        jobSpecs.remove(entry.getValue().getUri());\n      }\n    }\n  }\n","date":"2017-09-12 17:29:21","endLine":144,"groupId":"2506","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fetchJobSpecs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/0f/2d3569d6efe14697371d86c3d97837055c0cdd.src","preCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutorInstance.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutorInstance.Verb, Spec>>) this.specExecutorInstanceConsumer.changedSpecs().get();\n\n    for (Pair<SpecExecutorInstance.Verb, Spec> entry : changesSpecs) {\n\n      SpecExecutorInstance.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutorInstance.Verb.ADD)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.UPDATE)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutorInstanceConsumer.Verb.DELETE)) {\n\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n        jobSpecs.remove(entry.getValue().getUri());\n      }\n    }\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/ScheduledJobConfigurationManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"9402a9037554bcae4cc958a69a85eb4a16e8c179","commitMessage":"@@@[GOBBLIN-3] Multi-hop flow compiler implementation\n\nCloses #2078 from autumnust/flowcompiler\n","date":"2017-09-12 17:29:21","modifiedFileCount":"18","status":"M","submitter":"Lei Sun"},{"authorTime":"2019-04-19 07:51:36","codes":[{"authorDate":"2017-09-12 17:29:05","commitOrder":3,"curCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutor.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutor.Verb, Spec>>) this.specConsumer.changedSpecs().get();\n\n    \r\n    if (Thread.interrupted()) {\n      throw new InterruptedException();\n    }\n\n    for (Pair<SpecExecutor.Verb, Spec> entry : changesSpecs) {\n      SpecExecutor.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutor.Verb.ADD)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutor.Verb.UPDATE)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutor.Verb.DELETE)) {\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n      }\n    }\n  }\n","date":"2017-09-12 17:29:21","endLine":146,"groupId":"2506","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"fetchJobSpecs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/73/70dc663eac2224442702d8ef54bf7f0d7efe5d.src","preCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutor.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutor.Verb, Spec>>) this.specConsumer.changedSpecs().get();\n\n    \r\n    if (Thread.interrupted()) {\n      throw new InterruptedException();\n    }\n\n    for (Pair<SpecExecutor.Verb, Spec> entry : changesSpecs) {\n      SpecExecutor.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutor.Verb.ADD)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutor.Verb.UPDATE)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutor.Verb.DELETE)) {\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n      }\n    }\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/StreamingJobConfigurationManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"},{"authorDate":"2019-04-19 07:51:36","commitOrder":3,"curCode":"  protected void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutor.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutor.Verb, Spec>>) this._specConsumer.changedSpecs().get();\n\n    for (Pair<SpecExecutor.Verb, Spec> entry : changesSpecs) {\n\n      SpecExecutor.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutor.Verb.ADD)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutor.Verb.UPDATE)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutor.Verb.DELETE)) {\n\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n        jobSpecs.remove(entry.getValue().getUri());\n      }\n    }\n  }\n","date":"2019-04-19 07:51:36","endLine":145,"groupId":"2506","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"fetchJobSpecs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e3/11507a3d7fc575753f4c1d3a6ddec3b8c4ea8a.src","preCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutor.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutor.Verb, Spec>>) this._specConsumer.changedSpecs().get();\n\n    for (Pair<SpecExecutor.Verb, Spec> entry : changesSpecs) {\n\n      SpecExecutor.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutor.Verb.ADD)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutor.Verb.UPDATE)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutor.Verb.DELETE)) {\n\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n        jobSpecs.remove(entry.getValue().getUri());\n      }\n    }\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/ScheduledJobConfigurationManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"aa45670a59188184b401c1177fbf8ce8f6d344dd","commitMessage":"@@@[GOBBLIN-742] Implement a FileSystem based JobConfigurationManager.\n\nDear Gobblin maintainers. \n\nPlease accept this PR. I understand that it will\nnot be reviewed until I have checked off all the\nsteps below!\n\n\n JIRA\n- [x] My PR addresses the following [Gobblin JIRA]\n(https://issues.apache.org/jira/browse/GOBBLIN/)\nissues and references them in the PR title. For\nexample.  \"[GOBBLIN-XXX] My Gobblin PR\"\n    -\nhttps://issues.apache.org/jira/browse/GOBBLIN-742\n\n\n Description\n- [x] Here are some details about my PR.  including\nscreenshots (if applicable):\nThis task aims to implement a FileSystem based\nJobConfigurationManager. The manager has an\nunderlying SpecConsumer which reads specs from a\nconfig specified path on HDFS and persists them to\na JobCatalog. On successful consumption of the\nspec by the manager .  it is deleted from the\noriginal path.  So on the next fetch.  only new\nspecs will be picked up by the\nJobConfigurationManager.\n\n\n Tests\n- [x] My PR adds the following unit tests __OR__\ndoes not need testing for this extremely good\nreason:\nFsScheduledJobConfigurationManagerTest\n\n\n Commits\n- [x] My commits all reference JIRA issues in\ntheir subject lines.  and I have squashed multiple\ncommits if they address the same issue. In\naddition.  my commits follow the guidelines from\n\"[How to write a good git commit\nmessage](http://chris.beams.io/posts/git-\ncommit/)\":\n    1. Subject is separated from body by a blank line\n    2. Subject is limited to 50 characters\n    3. Subject does not end with a period\n    4. Subject uses the imperative mood (\"add\".  not\n\"adding\")\n    5. Body wraps at 72 characters\n    6. Body explains \"what\" and \"why\".  not \"how\"\n\nGOBBLIN-742: Implement a FileSystem based\nJobConfigurationManager.\n\nGOBBLIN-742: Address reviewer feedback.\n\nCloses #2608 from sv2000/fsSpecConsumer\n","date":"2019-04-19 07:51:36","modifiedFileCount":"2","status":"M","submitter":"sv2000"},{"authorTime":"2020-12-01 05:57:54","codes":[{"authorDate":"2020-12-01 05:57:54","commitOrder":4,"curCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutor.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutor.Verb, Spec>>) this.specConsumer.changedSpecs().get();\n\n    \r\n    if (Thread.interrupted()) {\n      throw new InterruptedException();\n    }\n\n    for (Pair<SpecExecutor.Verb, Spec> entry : changesSpecs) {\n      SpecExecutor.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutor.Verb.ADD)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutor.Verb.UPDATE)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutor.Verb.DELETE)) {\n        \r\n        Spec anonymousSpec = entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n      } else if (verb.equals(SpecExecutor.Verb.CANCEL)) {\n        Spec anonymousSpec = entry.getValue();\n        postCancelJobConfigArrival(anonymousSpec.getUri().toString());\n      }\n    }\n  }\n","date":"2020-12-01 05:57:54","endLine":168,"groupId":"10101","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"fetchJobSpecs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d7/31e80f6007dcfe1efcb9fb3a74f76b553268cb.src","preCode":"  private void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutor.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutor.Verb, Spec>>) this.specConsumer.changedSpecs().get();\n\n    \r\n    if (Thread.interrupted()) {\n      throw new InterruptedException();\n    }\n\n    for (Pair<SpecExecutor.Verb, Spec> entry : changesSpecs) {\n      SpecExecutor.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutor.Verb.ADD)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutor.Verb.UPDATE)) {\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n      } else if (verb.equals(SpecExecutor.Verb.DELETE)) {\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n      }\n    }\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/StreamingJobConfigurationManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2020-12-01 05:57:54","commitOrder":4,"curCode":"  protected void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutor.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutor.Verb, Spec>>) this._specConsumer.changedSpecs().get();\n\n    for (Pair<SpecExecutor.Verb, Spec> entry : changesSpecs) {\n\n      SpecExecutor.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutor.Verb.ADD)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutor.Verb.UPDATE)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutor.Verb.DELETE)) {\n\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n        jobSpecs.remove(entry.getValue().getUri());\n      } else if (verb.equals(SpecExecutor.Verb.CANCEL)) {\n        \r\n        Spec anonymousSpec = entry.getValue();\n        postCancelJobConfigArrival(anonymousSpec.getUri().toString());\n        }\n    }\n  }\n","date":"2020-12-01 05:57:54","endLine":149,"groupId":"10101","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"fetchJobSpecs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/60/1ed90a3331ebc2e73c5b497e45fa7d5b272683.src","preCode":"  protected void fetchJobSpecs() throws ExecutionException, InterruptedException {\n    List<Pair<SpecExecutor.Verb, Spec>> changesSpecs =\n        (List<Pair<SpecExecutor.Verb, Spec>>) this._specConsumer.changedSpecs().get();\n\n    for (Pair<SpecExecutor.Verb, Spec> entry : changesSpecs) {\n\n      SpecExecutor.Verb verb = entry.getKey();\n      if (verb.equals(SpecExecutor.Verb.ADD)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postNewJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutor.Verb.UPDATE)) {\n\n        \r\n        JobSpec jobSpec = (JobSpec) entry.getValue();\n        postUpdateJobConfigArrival(jobSpec.getUri().toString(), jobSpec.getConfigAsProperties());\n        jobSpecs.put(entry.getValue().getUri(), (JobSpec) entry.getValue());\n      } else if (verb.equals(SpecExecutor.Verb.DELETE)) {\n\n        \r\n        Spec anonymousSpec = (Spec) entry.getValue();\n        postDeleteJobConfigArrival(anonymousSpec.getUri().toString(), new Properties());\n        jobSpecs.remove(entry.getValue().getUri());\n      }\n    }\n  }\n","realPath":"gobblin-cluster/src/main/java/org/apache/gobblin/cluster/ScheduledJobConfigurationManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"0ac0671251f39f9a922e68267894099cb668e896","commitMessage":"@@@[GOBBLIN-1319] fix cancellation in gobblin cluster jobs\n\nCloses #3155 from arjun4084346/flowCancel\n","date":"2020-12-01 05:57:54","modifiedFileCount":"17","status":"M","submitter":"Arjun"}]
