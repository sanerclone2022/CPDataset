[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public Converter<SCHEMA, SCHEMA, DATA, DATA> init(WorkUnitState workUnit) {\n    super.init(workUnit);\n    Map<String, Object> config = EncryptionConfigParser\n        .getConfigForBranch(EncryptionConfigParser.EntityType.CONVERTER, getClass().getSimpleName(), workUnit);\n    encryptor = EncryptionFactory.buildStreamCryptoProvider(config);\n\n    String fieldsToEncryptConfig = workUnit.getProp(FIELDS_TO_ENCRYPT_CONFIG_NAME, null);\n    if (fieldsToEncryptConfig == null) {\n      throw new IllegalArgumentException(\"Must fill in the \" + FIELDS_TO_ENCRYPT_CONFIG_NAME + \" config option!\");\n    }\n\n    fieldsToEncrypt = Splitter.on(',').splitToList(fieldsToEncryptConfig);\n\n    return this;\n  }\n","date":"2017-07-31 15:51:25","endLine":63,"groupId":"361","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(WorkUnitStateworkUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/49/30a7ccfe28685e4131fcc26c4b337b77b75829.src","preCode":"  public Converter<SCHEMA, SCHEMA, DATA, DATA> init(WorkUnitState workUnit) {\n    super.init(workUnit);\n    Map<String, Object> config = EncryptionConfigParser\n        .getConfigForBranch(EncryptionConfigParser.EntityType.CONVERTER, getClass().getSimpleName(), workUnit);\n    encryptor = EncryptionFactory.buildStreamCryptoProvider(config);\n\n    String fieldsToEncryptConfig = workUnit.getProp(FIELDS_TO_ENCRYPT_CONFIG_NAME, null);\n    if (fieldsToEncryptConfig == null) {\n      throw new IllegalArgumentException(\"Must fill in the \" + FIELDS_TO_ENCRYPT_CONFIG_NAME + \" config option!\");\n    }\n\n    fieldsToEncrypt = Splitter.on(',').splitToList(fieldsToEncryptConfig);\n\n    return this;\n  }\n","realPath":"gobblin-modules/gobblin-crypto-provider/src/main/java/org/apache/gobblin/converter/StringFieldEncryptorConverter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  protected StreamCodec buildEncryptor(WorkUnitState config) {\n    Map<String, Object> encryptionConfig =\n        EncryptionConfigParser.getConfigForBranch(EncryptionConfigParser.EntityType.CONVERTER, getClass().getSimpleName(), config);\n    if (encryptionConfig == null) {\n      throw new IllegalStateException(\"No encryption config specified in job - can't encrypt!\");\n    }\n\n    return EncryptionFactory.buildStreamCryptoProvider(encryptionConfig);\n  }\n","date":"2017-07-31 15:51:25","endLine":43,"groupId":"64","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildEncryptor","params":"(WorkUnitStateconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d9/1f72c468a1f2cc7a5f2ac713d8bdf2e0a67cd3.src","preCode":"  protected StreamCodec buildEncryptor(WorkUnitState config) {\n    Map<String, Object> encryptionConfig =\n        EncryptionConfigParser.getConfigForBranch(EncryptionConfigParser.EntityType.CONVERTER, getClass().getSimpleName(), config);\n    if (encryptionConfig == null) {\n      throw new IllegalStateException(\"No encryption config specified in job - can't encrypt!\");\n    }\n\n    return EncryptionFactory.buildStreamCryptoProvider(encryptionConfig);\n  }\n","realPath":"gobblin-modules/gobblin-crypto-provider/src/main/java/org/apache/gobblin/converter/SerializedRecordToEncryptedSerializedRecordConverter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2018-03-20 02:39:46","codes":[{"authorDate":"2018-03-20 02:39:46","commitOrder":2,"curCode":"  public Converter<SCHEMA, SCHEMA, DATA, DATA> init(WorkUnitState workUnit) {\n    super.init(workUnit);\n    Map<String, Object> config = EncryptionConfigParser\n        .getConfigForBranch(EncryptionConfigParser.EntityType.CONVERTER_ENCRYPT, getClass().getSimpleName(), workUnit);\n    encryptor = EncryptionFactory.buildStreamCryptoProvider(config);\n\n    String fieldsToEncryptConfig = workUnit.getProp(FIELDS_TO_ENCRYPT_CONFIG_NAME, null);\n    if (fieldsToEncryptConfig == null) {\n      throw new IllegalArgumentException(\"Must fill in the \" + FIELDS_TO_ENCRYPT_CONFIG_NAME + \" config option!\");\n    }\n\n    fieldsToEncrypt = Splitter.on(',').splitToList(fieldsToEncryptConfig);\n\n    return this;\n  }\n","date":"2018-03-20 02:39:55","endLine":61,"groupId":"10672","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(WorkUnitStateworkUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f2/42ec55345cd58302e434ac885a2168d09c1ad0.src","preCode":"  public Converter<SCHEMA, SCHEMA, DATA, DATA> init(WorkUnitState workUnit) {\n    super.init(workUnit);\n    Map<String, Object> config = EncryptionConfigParser\n        .getConfigForBranch(EncryptionConfigParser.EntityType.CONVERTER, getClass().getSimpleName(), workUnit);\n    encryptor = EncryptionFactory.buildStreamCryptoProvider(config);\n\n    String fieldsToEncryptConfig = workUnit.getProp(FIELDS_TO_ENCRYPT_CONFIG_NAME, null);\n    if (fieldsToEncryptConfig == null) {\n      throw new IllegalArgumentException(\"Must fill in the \" + FIELDS_TO_ENCRYPT_CONFIG_NAME + \" config option!\");\n    }\n\n    fieldsToEncrypt = Splitter.on(',').splitToList(fieldsToEncryptConfig);\n\n    return this;\n  }\n","realPath":"gobblin-modules/gobblin-crypto-provider/src/main/java/org/apache/gobblin/converter/StringFieldEncryptorConverter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2018-03-20 02:39:46","commitOrder":2,"curCode":"  protected StreamCodec buildEncryptor(WorkUnitState config) {\n    Map<String, Object> encryptionConfig =\n        EncryptionConfigParser.getConfigForBranch(EncryptionConfigParser.EntityType.CONVERTER_ENCRYPT, getClass().getSimpleName(), config);\n    if (encryptionConfig == null) {\n      throw new IllegalStateException(\"No encryption config specified in job - can't encrypt!\");\n    }\n\n    return EncryptionFactory.buildStreamCryptoProvider(encryptionConfig);\n  }\n","date":"2018-03-20 02:39:55","endLine":41,"groupId":"10672","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"buildEncryptor","params":"(WorkUnitStateconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/be/550c7e07ce30b59b073e473f421324e03af5e9.src","preCode":"  protected StreamCodec buildEncryptor(WorkUnitState config) {\n    Map<String, Object> encryptionConfig =\n        EncryptionConfigParser.getConfigForBranch(EncryptionConfigParser.EntityType.CONVERTER, getClass().getSimpleName(), config);\n    if (encryptionConfig == null) {\n      throw new IllegalStateException(\"No encryption config specified in job - can't encrypt!\");\n    }\n\n    return EncryptionFactory.buildStreamCryptoProvider(encryptionConfig);\n  }\n","realPath":"gobblin-modules/gobblin-crypto-provider/src/main/java/org/apache/gobblin/converter/SerializedRecordToEncryptedSerializedRecordConverter.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"}],"commitId":"b7f123f77a58c690a9acf89f6d3168aeda259a17","commitMessage":"@@@[GOBBLIN-427] Add a decryption converter\n\nCloses #2304 from xzhang27/master\n","date":"2018-03-20 02:39:55","modifiedFileCount":"5","status":"M","submitter":"Xiang"}]
