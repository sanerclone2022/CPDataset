[{"authorTime":"2020-05-02 06:08:08","codes":[{"authorDate":"2020-04-30 14:39:30","commitOrder":3,"curCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"fetchExecJobLogs\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.EXECID, execId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.JOBID, jobId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.OFFSET, offset));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.LENGTH, length));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        HttpGet httpGet = new HttpGet(client.url + \"/executor?\" + URLEncodedUtils.format(nvps, \"UTF-8\"));\n        httpGet.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpGet);\n        closer.register(response);\n        Map<String, String> map = AzkabanClient.handleResponse(response);\n        FileUtils.writeStringToFile(output, map.get(AzkabanClientParams.DATA), Charsets.UTF_8);\n        return new AzkabanSuccess();\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client cannot \"\n            + \"fetch execId \" + execId, e);\n      }\n    }\n","date":"2020-04-30 14:39:30","endLine":376,"groupId":"1319","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"call","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/60/1b4cbbea2982fd0fe8341829308a02a498d07e.src","preCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"fetchExecJobLogs\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.EXECID, execId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.JOBID, jobId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.OFFSET, offset));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.LENGTH, length));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        HttpGet httpGet = new HttpGet(client.url + \"/executor?\" + URLEncodedUtils.format(nvps, \"UTF-8\"));\n        httpGet.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpGet);\n        closer.register(response);\n        Map<String, String> map = AzkabanClient.handleResponse(response);\n        FileUtils.writeStringToFile(output, map.get(AzkabanClientParams.DATA), Charsets.UTF_8);\n        return new AzkabanSuccess();\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client cannot \"\n            + \"fetch execId \" + execId, e);\n      }\n    }\n","realPath":"gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"NB"},{"authorDate":"2020-05-02 06:08:08","commitOrder":3,"curCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"getProxyUsers\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.PROJECT, projectName));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        HttpGet httpGet = new HttpGet(client.url + \"/manager?\" + URLEncodedUtils.format(nvps, \"UTF-8\"));\n        httpGet.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpGet);\n        closer.register(response);\n        Map<String, String> map = AzkabanClient.handleResponse(response);\n        return new AzkabanGetProxyUsersStatus(new AzkabanGetProxyUsersStatus.ProxyUsers(map));\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client failed to get proxy users\", e);\n      }\n    }\n","date":"2020-05-02 06:08:08","endLine":454,"groupId":"1320","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"call","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/30/981aa616f7c3fb10090758b34ebb7d253591a8.src","preCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"getProxyUsers\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.PROJECT, projectName));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        HttpGet httpGet = new HttpGet(client.url + \"/manager?\" + URLEncodedUtils.format(nvps, \"UTF-8\"));\n        httpGet.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpGet);\n        closer.register(response);\n        Map<String, String> map = AzkabanClient.handleResponse(response);\n        return new AzkabanGetProxyUsersStatus(new AzkabanGetProxyUsersStatus.ProxyUsers(map));\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client failed to get proxy users\", e);\n      }\n    }\n","realPath":"gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"B"}],"commitId":"753f880c79155568139ab7836d49be952a346028","commitMessage":"@@@[GOBBLIN-1137] Add API for getting list of proxy users from an azkaban project\n\nCloses #2976 from jack-moseley/get-proxy-users\n","date":"2020-05-02 06:08:08","modifiedFileCount":"2","status":"M","submitter":"Jack Moseley"},{"authorTime":"2020-05-02 06:08:08","codes":[{"authorDate":"2021-01-07 04:04:59","commitOrder":4,"curCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"fetchExecJobLogs\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.EXECID, execId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.JOBID, jobId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.OFFSET, String.valueOf(offset)));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.LENGTH, String.valueOf(length)));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        HttpGet httpGet = new HttpGet(client.url + \"/executor?\" + URLEncodedUtils.format(nvps, \"UTF-8\"));\n        httpGet.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpGet);\n        closer.register(response);\n        Map<String, String> map = AzkabanClient.handleResponse(response);\n\n        try (Writer logWriter = new OutputStreamWriter(output, StandardCharsets.UTF_8)) {\n          logWriter.write(map.get(AzkabanClientParams.DATA));\n        }\n\n        return new AzkabanSuccess();\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client cannot \"\n            + \"fetch execId \" + execId, e);\n      }\n    }\n","date":"2021-01-07 04:04:59","endLine":418,"groupId":"11202","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"call","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/34/4d3b2ee03fc3d32c1f2b715dd129396e46173e.src","preCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"fetchExecJobLogs\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.EXECID, execId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.JOBID, jobId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.OFFSET, offset));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.LENGTH, length));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        HttpGet httpGet = new HttpGet(client.url + \"/executor?\" + URLEncodedUtils.format(nvps, \"UTF-8\"));\n        httpGet.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpGet);\n        closer.register(response);\n        Map<String, String> map = AzkabanClient.handleResponse(response);\n        FileUtils.writeStringToFile(output, map.get(AzkabanClientParams.DATA), Charsets.UTF_8);\n        return new AzkabanSuccess();\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client cannot \"\n            + \"fetch execId \" + execId, e);\n      }\n    }\n","realPath":"gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"M"},{"authorDate":"2020-05-02 06:08:08","commitOrder":4,"curCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"getProxyUsers\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.PROJECT, projectName));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        HttpGet httpGet = new HttpGet(client.url + \"/manager?\" + URLEncodedUtils.format(nvps, \"UTF-8\"));\n        httpGet.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpGet);\n        closer.register(response);\n        Map<String, String> map = AzkabanClient.handleResponse(response);\n        return new AzkabanGetProxyUsersStatus(new AzkabanGetProxyUsersStatus.ProxyUsers(map));\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client failed to get proxy users\", e);\n      }\n    }\n","date":"2020-05-02 06:08:08","endLine":454,"groupId":"11202","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"call","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/30/981aa616f7c3fb10090758b34ebb7d253591a8.src","preCode":"    public AzkabanClientStatus call()\n        throws AzkabanClientException {\n      try (Closer closer = Closer.create()) {\n        client.refreshSession(this.invalidSession);\n        List<NameValuePair> nvps = new ArrayList<>();\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.AJAX, \"getProxyUsers\"));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.SESSION_ID, client.sessionId));\n        nvps.add(new BasicNameValuePair(AzkabanClientParams.PROJECT, projectName));\n\n        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n        Header requestType = new BasicHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        HttpGet httpGet = new HttpGet(client.url + \"/manager?\" + URLEncodedUtils.format(nvps, \"UTF-8\"));\n        httpGet.setHeaders(new Header[]{contentType, requestType});\n\n        CloseableHttpResponse response = client.httpClient.execute(httpGet);\n        closer.register(response);\n        Map<String, String> map = AzkabanClient.handleResponse(response);\n        return new AzkabanGetProxyUsersStatus(new AzkabanGetProxyUsersStatus.ProxyUsers(map));\n      } catch (InvalidSessionException e) {\n        this.invalidSession = true;\n        throw e;\n      } catch (Exception e) {\n        throw new AzkabanClientException(\"Azkaban client failed to get proxy users\", e);\n      }\n    }\n","realPath":"gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"N"}],"commitId":"4353e0054d19e3cc898547656848511a9c700089","commitMessage":"@@@[GOBBLIN-1340] Extend Azkaban client\n\n[GOBBLIN-1340] Extend Azkaban client\n\nWe extend Azkaban client with API calls to check\nproject existence. \nand get list of the flows. Log retrieval API is\nrefactored to stream\nlogs and use strongly-typed parameters.\n\nAzkaban client tests can now run concurrently.  and\nshould be more stable.\n\nThese changes will be used in the end-to-end\nGobblin testing framework.\n\nAdd missing Azkaban configuration key\n\nAddress code review comments\n\nCloses #3176 from aplex/azkaban-client-ext\n","date":"2021-01-07 04:04:59","modifiedFileCount":"5","status":"M","submitter":"aprokofiev"}]
