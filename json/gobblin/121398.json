[{"authorTime":"2019-03-30 02:48:36","codes":[{"authorDate":"2019-03-30 02:48:36","commitOrder":1,"curCode":"  protected void addLineageSourceInfo(WorkUnit workUnit, State state) {\n    if (!lineageInfo.isPresent()) {\n      log.info(\"Lineage is not enabled\");\n      return;\n    }\n\n    String platform = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_PLATFORM, DatasetConstants.PLATFORM_HDFS);\n    Path dataDir = new Path(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY));\n    String dataset = Path.getPathWithoutSchemeAndAuthority(dataDir).toString();\n    DatasetDescriptor source = new DatasetDescriptor(platform, dataset);\n    lineageInfo.get().setSource(source, workUnit);\n  }\n","date":"2019-03-30 02:48:36","endLine":247,"groupId":"3538","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addLineageSourceInfo","params":"(WorkUnitworkUnit@Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/14/730e89225c1aea234a96a7816eebc3ea451843.src","preCode":"  protected void addLineageSourceInfo(WorkUnit workUnit, State state) {\n    if (!lineageInfo.isPresent()) {\n      log.info(\"Lineage is not enabled\");\n      return;\n    }\n\n    String platform = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_PLATFORM, DatasetConstants.PLATFORM_HDFS);\n    Path dataDir = new Path(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY));\n    String dataset = Path.getPathWithoutSchemeAndAuthority(dataDir).toString();\n    DatasetDescriptor source = new DatasetDescriptor(platform, dataset);\n    lineageInfo.get().setSource(source, workUnit);\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/extractor/filebased/FileBasedSource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"},{"authorDate":"2019-03-30 02:48:36","commitOrder":1,"curCode":"  protected void addLineageSourceInfo(WorkUnit workUnit, State state) {\n    if (!lineageInfo.isPresent()) {\n      log.info(\"Lineage is not enabled\");\n      return;\n    }\n\n    String platform = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_PLATFORM, DatasetConstants.PLATFORM_HDFS);\n    Path dataDir = new Path(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY));\n    String dataset = Path.getPathWithoutSchemeAndAuthority(dataDir).toString();\n    DatasetDescriptor datasetDescriptor = new DatasetDescriptor(platform, dataset);\n\n    String partitionName = workUnit.getProp(ConfigurationKeys.WORK_UNIT_DATE_PARTITION_NAME);\n    PartitionDescriptor descriptor = new PartitionDescriptor(partitionName, datasetDescriptor);\n\n    lineageInfo.get().setSource(descriptor, workUnit);\n  }\n","date":"2019-03-30 02:48:36","endLine":255,"groupId":"3538","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addLineageSourceInfo","params":"(WorkUnitworkUnit@Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/83/da81d8e3389dbc13e7bfc32736ffc216251539.src","preCode":"  protected void addLineageSourceInfo(WorkUnit workUnit, State state) {\n    if (!lineageInfo.isPresent()) {\n      log.info(\"Lineage is not enabled\");\n      return;\n    }\n\n    String platform = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_PLATFORM, DatasetConstants.PLATFORM_HDFS);\n    Path dataDir = new Path(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY));\n    String dataset = Path.getPathWithoutSchemeAndAuthority(dataDir).toString();\n    DatasetDescriptor datasetDescriptor = new DatasetDescriptor(platform, dataset);\n\n    String partitionName = workUnit.getProp(ConfigurationKeys.WORK_UNIT_DATE_PARTITION_NAME);\n    PartitionDescriptor descriptor = new PartitionDescriptor(partitionName, datasetDescriptor);\n\n    lineageInfo.get().setSource(descriptor, workUnit);\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/PartitionedFileSourceBase.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"B"}],"commitId":"e5297bcba910c1b6d781fc9b344f8c35c95da8d3","commitMessage":"@@@[GOBBLIN-716] Add lineage in FileBasedSource\n\nCloses #2583 from zxcware/fslineage\n","date":"2019-03-30 02:48:36","modifiedFileCount":"10","status":"B","submitter":"zhchen"},{"authorTime":"2021-01-13 04:20:19","codes":[{"authorDate":"2021-01-13 04:20:19","commitOrder":2,"curCode":"  protected void addLineageSourceInfo(WorkUnit workUnit, State state) {\n    if (!lineageInfo.isPresent()) {\n      log.info(\"Lineage is not enabled\");\n      return;\n    }\n\n    String platform = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_PLATFORM, DatasetConstants.PLATFORM_HDFS);\n    Path dataDir = new Path(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY));\n    String dataset = Path.getPathWithoutSchemeAndAuthority(dataDir).toString();\n    URI fileSystemUrl =\n        URI.create(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_FS_URI, ConfigurationKeys.LOCAL_FS_URI));\n    DatasetDescriptor source = new DatasetDescriptor(platform, fileSystemUrl, dataset);\n    lineageInfo.get().setSource(source, workUnit);\n  }\n","date":"2021-01-13 04:20:19","endLine":254,"groupId":"121398","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"addLineageSourceInfo","params":"(WorkUnitworkUnit@Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3b/c6bfcd937513c4c9e96af46dc78d62fcd9df1c.src","preCode":"  protected void addLineageSourceInfo(WorkUnit workUnit, State state) {\n    if (!lineageInfo.isPresent()) {\n      log.info(\"Lineage is not enabled\");\n      return;\n    }\n\n    String platform = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_PLATFORM, DatasetConstants.PLATFORM_HDFS);\n    Path dataDir = new Path(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY));\n    String dataset = Path.getPathWithoutSchemeAndAuthority(dataDir).toString();\n    DatasetDescriptor source = new DatasetDescriptor(platform, dataset);\n    lineageInfo.get().setSource(source, workUnit);\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/extractor/filebased/FileBasedSource.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"},{"authorDate":"2021-01-13 04:20:19","commitOrder":2,"curCode":"  protected void addLineageSourceInfo(WorkUnit workUnit, State state) {\n    if (!lineageInfo.isPresent()) {\n      log.info(\"Lineage is not enabled\");\n      return;\n    }\n\n    String platform = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_PLATFORM, DatasetConstants.PLATFORM_HDFS);\n    Path dataDir = new Path(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY));\n    String dataset = Path.getPathWithoutSchemeAndAuthority(dataDir).toString();\n    URI fileSystemUrl =\n        URI.create(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_FS_URI, ConfigurationKeys.LOCAL_FS_URI));\n    DatasetDescriptor datasetDescriptor = new DatasetDescriptor(platform, fileSystemUrl, dataset);\n\n    String partitionName = workUnit.getProp(ConfigurationKeys.WORK_UNIT_DATE_PARTITION_NAME);\n    PartitionDescriptor descriptor = new PartitionDescriptor(partitionName, datasetDescriptor);\n\n    lineageInfo.get().setSource(descriptor, workUnit);\n  }\n","date":"2021-01-13 04:20:19","endLine":254,"groupId":"121398","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"addLineageSourceInfo","params":"(WorkUnitworkUnit@Statestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/ec/e7db0c0ef40ca500da7c7f27073e26e92ab3e7.src","preCode":"  protected void addLineageSourceInfo(WorkUnit workUnit, State state) {\n    if (!lineageInfo.isPresent()) {\n      log.info(\"Lineage is not enabled\");\n      return;\n    }\n\n    String platform = state.getProp(ConfigurationKeys.SOURCE_FILEBASED_PLATFORM, DatasetConstants.PLATFORM_HDFS);\n    Path dataDir = new Path(state.getProp(ConfigurationKeys.SOURCE_FILEBASED_DATA_DIRECTORY));\n    String dataset = Path.getPathWithoutSchemeAndAuthority(dataDir).toString();\n    DatasetDescriptor datasetDescriptor = new DatasetDescriptor(platform, dataset);\n\n    String partitionName = workUnit.getProp(ConfigurationKeys.WORK_UNIT_DATE_PARTITION_NAME);\n    PartitionDescriptor descriptor = new PartitionDescriptor(partitionName, datasetDescriptor);\n\n    lineageInfo.get().setSource(descriptor, workUnit);\n  }\n","realPath":"gobblin-core/src/main/java/org/apache/gobblin/source/PartitionedFileSourceBase.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"f2283c0f8fbff0a5305aee54884359b2cba5ac65","commitMessage":"@@@[GOBBLIN-1339] Add cluster name to dataset descriptor\n\n[GOBBLIN-1339] Add cluster name to dataset\ndescriptor\n\nWe use dataset descriptors to track lineage.\nPreviously.  it\nonly included the platform name (hive. hdfs) and\npath of the\ndataset. As a result.  we could not differentiate\nthe data copy\nbetween multiple production clusters.  as the\ndataset descriptors\nwere the same for them. We add an optional cluster\nname to\naddress that.\n\nThis change will be used for data copy audit\nsystem.\n\nHive and file-based copy code is updated to\ninclude cluster names.\n\nUse full storage system url instead of just well-\nknown name\n\nCloses #3178 from aplex/dataset-cluster\n","date":"2021-01-13 04:20:19","modifiedFileCount":"13","status":"M","submitter":"aprokofiev"}]
