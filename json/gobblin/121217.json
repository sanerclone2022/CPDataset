[{"authorTime":"2018-08-22 02:36:36","codes":[{"authorDate":"2019-03-13 08:05:13","commitOrder":3,"curCode":"  public void addSerDeProperties(Path path, HiveRegistrationUnit hiveUnit)\n      throws IOException {\n    hiveUnit.setSerDeType(this.serDeWrapper.getSerDe().getClass().getName());\n    hiveUnit.setInputFormat(this.serDeWrapper.getInputFormatClassName());\n    hiveUnit.setOutputFormat(this.serDeWrapper.getOutputFormatClassName());\n\n    addSchemaProperties(path, hiveUnit);\n  }\n","date":"2019-03-13 08:05:13","endLine":132,"groupId":"1295","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addSerDeProperties","params":"(Pathpath@HiveRegistrationUnithiveUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/98/1beb6ed2e0e54765216a2b7cd00f41f792da35.src","preCode":"  public void addSerDeProperties(Path path, HiveRegistrationUnit hiveUnit)\n      throws IOException {\n    hiveUnit.setSerDeType(this.serDeWrapper.getSerDe().getClass().getName());\n    hiveUnit.setInputFormat(this.serDeWrapper.getInputFormatClassName());\n    hiveUnit.setOutputFormat(this.serDeWrapper.getOutputFormatClassName());\n\n    addSchemaProperties(path, hiveUnit);\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/orc/HiveOrcSerDeManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"},{"authorDate":"2018-08-22 02:36:36","commitOrder":3,"curCode":"  public void addSerDeProperties(Path path, HiveRegistrationUnit hiveUnit) throws IOException {\n    Preconditions.checkArgument(this.fs.getFileStatus(path).isDirectory(), path + \" is not a directory.\");\n    Schema schema;\n    try (Timer.Context context = metricContext.timer(HIVE_SPEC_SCHEMA_READING_TIMER).time()) {\n      schema = getDirectorySchema(path);\n    }\n    if (schema == null) {\n      return;\n    }\n    hiveUnit.setSerDeType(this.serDeWrapper.getSerDe().getClass().getName());\n    hiveUnit.setInputFormat(this.serDeWrapper.getInputFormatClassName());\n    hiveUnit.setOutputFormat(this.serDeWrapper.getOutputFormatClassName());\n\n    addSchemaProperties(path, hiveUnit, schema);\n  }\n","date":"2018-08-22 02:36:36","endLine":119,"groupId":"1295","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addSerDeProperties","params":"(Pathpath@HiveRegistrationUnithiveUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/72/77c2e4375a3dba511898fbb514b86963a04f95.src","preCode":"  public void addSerDeProperties(Path path, HiveRegistrationUnit hiveUnit) throws IOException {\n    Preconditions.checkArgument(this.fs.getFileStatus(path).isDirectory(), path + \" is not a directory.\");\n    Schema schema;\n    try (Timer.Context context = metricContext.timer(HIVE_SPEC_SCHEMA_READING_TIMER).time()) {\n      schema = getDirectorySchema(path);\n    }\n    if (schema == null) {\n      return;\n    }\n    hiveUnit.setSerDeType(this.serDeWrapper.getSerDe().getClass().getName());\n    hiveUnit.setInputFormat(this.serDeWrapper.getInputFormatClassName());\n    hiveUnit.setOutputFormat(this.serDeWrapper.getOutputFormatClassName());\n\n    addSchemaProperties(path, hiveUnit, schema);\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/avro/HiveAvroSerDeManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"NB"}],"commitId":"81ea16963f63e3fcda77221f655accb1f5406d34","commitMessage":"@@@[GOBBLIN-693] Add ORC hive serde manager\n\nCloses #2565 from htran1/orc_hive_reg\n","date":"2019-03-13 08:05:13","modifiedFileCount":"2","status":"M","submitter":"Hung Tran"},{"authorTime":"2019-08-17 00:36:25","codes":[{"authorDate":"2019-03-13 08:05:13","commitOrder":4,"curCode":"  public void addSerDeProperties(Path path, HiveRegistrationUnit hiveUnit)\n      throws IOException {\n    hiveUnit.setSerDeType(this.serDeWrapper.getSerDe().getClass().getName());\n    hiveUnit.setInputFormat(this.serDeWrapper.getInputFormatClassName());\n    hiveUnit.setOutputFormat(this.serDeWrapper.getOutputFormatClassName());\n\n    addSchemaProperties(path, hiveUnit);\n  }\n","date":"2019-03-13 08:05:13","endLine":132,"groupId":"121217","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addSerDeProperties","params":"(Pathpath@HiveRegistrationUnithiveUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/98/1beb6ed2e0e54765216a2b7cd00f41f792da35.src","preCode":"  public void addSerDeProperties(Path path, HiveRegistrationUnit hiveUnit)\n      throws IOException {\n    hiveUnit.setSerDeType(this.serDeWrapper.getSerDe().getClass().getName());\n    hiveUnit.setInputFormat(this.serDeWrapper.getInputFormatClassName());\n    hiveUnit.setOutputFormat(this.serDeWrapper.getOutputFormatClassName());\n\n    addSchemaProperties(path, hiveUnit);\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/orc/HiveOrcSerDeManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2019-08-17 00:36:25","commitOrder":4,"curCode":"  public void addSerDeProperties(Path path, HiveRegistrationUnit hiveUnit) throws IOException {\n    Preconditions.checkArgument(this.fs.getFileStatus(path).isDirectory(), path + \" is not a directory.\");\n    Schema schema;\n    try (Timer.Context context = metricContext.timer(HIVE_SPEC_SCHEMA_READING_TIMER).time()) {\n      schema = getDirectorySchema(path);\n    }\n    if (schema == null) {\n      return;\n    }\n    hiveUnit.setSerDeType(this.serDeWrapper.getSerDe().getClass().getName());\n    hiveUnit.setInputFormat(this.serDeWrapper.getInputFormatClassName());\n    hiveUnit.setOutputFormat(this.serDeWrapper.getOutputFormatClassName());\n    addSchemaPropertiesIfRequired(path, hiveUnit, schema);\n  }\n","date":"2019-08-17 00:36:25","endLine":126,"groupId":"121217","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"addSerDeProperties","params":"(Pathpath@HiveRegistrationUnithiveUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/9c/4e9601588c07c1b5baccfcafa5c0de28975e3a.src","preCode":"  public void addSerDeProperties(Path path, HiveRegistrationUnit hiveUnit) throws IOException {\n    Preconditions.checkArgument(this.fs.getFileStatus(path).isDirectory(), path + \" is not a directory.\");\n    Schema schema;\n    try (Timer.Context context = metricContext.timer(HIVE_SPEC_SCHEMA_READING_TIMER).time()) {\n      schema = getDirectorySchema(path);\n    }\n    if (schema == null) {\n      return;\n    }\n    hiveUnit.setSerDeType(this.serDeWrapper.getSerDe().getClass().getName());\n    hiveUnit.setInputFormat(this.serDeWrapper.getInputFormatClassName());\n    hiveUnit.setOutputFormat(this.serDeWrapper.getOutputFormatClassName());\n\n    addSchemaProperties(path, hiveUnit, schema);\n  }\n","realPath":"gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/avro/HiveAvroSerDeManager.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"c210e9281da3c4a65d8836e8010b1b8331e3f38f","commitMessage":"@@@[GOBBLIN-851] Provide capability to disable Hive partition schema registration.\n\nCloses #2707 from yukuai518/schema\n","date":"2019-08-17 00:36:25","modifiedFileCount":"4","status":"M","submitter":"Kuai Yu"}]
