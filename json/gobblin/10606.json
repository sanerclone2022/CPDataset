[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    try (ByteArrayOutputStream byteArrayOs = new ByteArrayOutputStream();\n        OutputStream os = compressedValues ? new GZIPOutputStream(byteArrayOs) : byteArrayOs;\n        DataOutputStream dataOutput = new DataOutputStream(os)) {\n\n      for (T state : states) {\n        addStateToDataOutputStream(dataOutput, state);\n      }\n\n      dataOutput.close();\n      putData(storeName, tableName, byteArrayOs.toByteArray());\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":177,"groupId":"8190","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"putAll","params":"(StringstoreName@StringtableName@Collection<T>states)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/59/d0e4fc8d41d95626ef74f117dfec49218be31b.src","preCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    try (ByteArrayOutputStream byteArrayOs = new ByteArrayOutputStream();\n        OutputStream os = compressedValues ? new GZIPOutputStream(byteArrayOs) : byteArrayOs;\n        DataOutputStream dataOutput = new DataOutputStream(os)) {\n\n      for (T state : states) {\n        addStateToDataOutputStream(dataOutput, state);\n      }\n\n      dataOutput.close();\n      putData(storeName, tableName, byteArrayOs.toByteArray());\n    }\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/main/java/org/apache/gobblin/metastore/ZkStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    try (Connection connection = dataSource.getConnection();\n        PreparedStatement insertStatement = connection.prepareStatement(UPSERT_JOB_STATE_SQL);\n        ByteArrayOutputStream byteArrayOs = new ByteArrayOutputStream();\n        OutputStream os = compressedValues ? new GZIPOutputStream(byteArrayOs) : byteArrayOs;\n        DataOutputStream dataOutput = new DataOutputStream(os)) {\n\n      int index = 0;\n      insertStatement.setString(++index, storeName);\n      insertStatement.setString(++index, tableName);\n\n      for (T state : states) {\n        addStateToDataOutputStream(dataOutput, state);\n      }\n\n      dataOutput.close();\n      insertStatement.setBlob(++index, new ByteArrayInputStream(byteArrayOs.toByteArray()));\n\n      insertStatement.executeUpdate();\n      connection.commit();\n    } catch (SQLException e) {\n      throw new IOException(\"Failure storing state to store \" + storeName + \" table \" + tableName, e);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":254,"groupId":"8190","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"putAll","params":"(StringstoreName@StringtableName@Collection<T>states)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/3e/2b928727af6a50927a61166fac7cf07aad14ae.src","preCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    try (Connection connection = dataSource.getConnection();\n        PreparedStatement insertStatement = connection.prepareStatement(UPSERT_JOB_STATE_SQL);\n        ByteArrayOutputStream byteArrayOs = new ByteArrayOutputStream();\n        OutputStream os = compressedValues ? new GZIPOutputStream(byteArrayOs) : byteArrayOs;\n        DataOutputStream dataOutput = new DataOutputStream(os)) {\n\n      int index = 0;\n      insertStatement.setString(++index, storeName);\n      insertStatement.setString(++index, tableName);\n\n      for (T state : states) {\n        addStateToDataOutputStream(dataOutput, state);\n      }\n\n      dataOutput.close();\n      insertStatement.setBlob(++index, new ByteArrayInputStream(byteArrayOs.toByteArray()));\n\n      insertStatement.executeUpdate();\n      connection.commit();\n    } catch (SQLException e) {\n      throw new IOException(\"Failure storing state to store \" + storeName + \" table \" + tableName, e);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2021-08-31 08:25:27","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    try (ByteArrayOutputStream byteArrayOs = new ByteArrayOutputStream();\n        OutputStream os = compressedValues ? new GZIPOutputStream(byteArrayOs) : byteArrayOs;\n        DataOutputStream dataOutput = new DataOutputStream(os)) {\n\n      for (T state : states) {\n        addStateToDataOutputStream(dataOutput, state);\n      }\n\n      dataOutput.close();\n      putData(storeName, tableName, byteArrayOs.toByteArray());\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":177,"groupId":"10606","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"putAll","params":"(StringstoreName@StringtableName@Collection<T>states)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/59/d0e4fc8d41d95626ef74f117dfec49218be31b.src","preCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    try (ByteArrayOutputStream byteArrayOs = new ByteArrayOutputStream();\n        OutputStream os = compressedValues ? new GZIPOutputStream(byteArrayOs) : byteArrayOs;\n        DataOutputStream dataOutput = new DataOutputStream(os)) {\n\n      for (T state : states) {\n        addStateToDataOutputStream(dataOutput, state);\n      }\n\n      dataOutput.close();\n      putData(storeName, tableName, byteArrayOs.toByteArray());\n    }\n  }\n","realPath":"gobblin-modules/gobblin-helix/src/main/java/org/apache/gobblin/metastore/ZkStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"N"},{"authorDate":"2021-08-31 08:25:27","commitOrder":2,"curCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    try (Connection connection = dataSource.getConnection();\n        PreparedStatement insertStatement = connection.prepareStatement(UPSERT_JOB_STATE_SQL);\n        ByteArrayOutputStream byteArrayOs = new ByteArrayOutputStream();\n        OutputStream os = compressedValues ? new GZIPOutputStream(byteArrayOs) : byteArrayOs;\n        DataOutputStream dataOutput = new DataOutputStream(os)) {\n\n      insertStatement.setString(1, storeName);\n      insertStatement.setString(2, tableName);\n\n      for (T state : states) {\n        addStateToDataOutputStream(dataOutput, state);\n      }\n\n      dataOutput.close();\n      insertStatement.setBlob(3, new ByteArrayInputStream(byteArrayOs.toByteArray()));\n\n      insertStatement.executeUpdate();\n      connection.commit();\n    } catch (SQLException e) {\n      throw new IOException(\"Failure storing state to store \" + storeName + \" table \" + tableName, e);\n    }\n  }\n","date":"2021-08-31 08:25:27","endLine":295,"groupId":"10606","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"putAll","params":"(StringstoreName@StringtableName@Collection<T>states)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/5c/79fa9a71268225b43e18a2a2c5a88707f00e8d.src","preCode":"  public void putAll(String storeName, String tableName, Collection<T> states) throws IOException {\n    try (Connection connection = dataSource.getConnection();\n        PreparedStatement insertStatement = connection.prepareStatement(UPSERT_JOB_STATE_SQL);\n        ByteArrayOutputStream byteArrayOs = new ByteArrayOutputStream();\n        OutputStream os = compressedValues ? new GZIPOutputStream(byteArrayOs) : byteArrayOs;\n        DataOutputStream dataOutput = new DataOutputStream(os)) {\n\n      int index = 0;\n      insertStatement.setString(++index, storeName);\n      insertStatement.setString(++index, tableName);\n\n      for (T state : states) {\n        addStateToDataOutputStream(dataOutput, state);\n      }\n\n      dataOutput.close();\n      insertStatement.setBlob(++index, new ByteArrayInputStream(byteArrayOs.toByteArray()));\n\n      insertStatement.executeUpdate();\n      connection.commit();\n    } catch (SQLException e) {\n      throw new IOException(\"Failure storing state to store \" + storeName + \" table \" + tableName, e);\n    }\n  }\n","realPath":"gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStore.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"0632fbe770a0074e1888ed8a80de0c8d487061ad","commitMessage":"@@@[GOBBLIN-1527] Refactor flowexecutions endpoint job status state retrieval\n\nThis is merely a refactoring of the job status state retrieval impl. used by the existing 'flowexecutions' endpoint.  to enable reuse by the forthcoming finder separate commit. Functionality should not change and should continue to conform to all existing unit tests.","date":"2021-08-31 08:25:27","modifiedFileCount":"4","status":"M","submitter":"Kip Kohn"}]
