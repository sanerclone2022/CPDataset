[{"authorTime":"2021-02-05 04:13:05","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":2,"curCode":"  public ConfigurableCleanableDataset<FileSystemDatasetVersion> datasetAtPath(Path path) throws IOException {\n    try {\n      return new ConfigurableCleanableDataset<>(this.fs, this.props, path,\n          this.client\n              .getConfig(this.props.getProperty(ConfigurationKeys.CONFIG_MANAGEMENT_STORE_URI) + path.toString()),\n          LoggerFactory.getLogger(ConfigurableCleanableDataset.class));\n    } catch (VersionDoesNotExistException | ConfigStoreFactoryDoesNotExistsException | ConfigStoreCreationException\n        | URISyntaxException e) {\n      throw new IllegalArgumentException(e);\n    }\n  }\n","date":"2017-07-31 15:51:25","endLine":69,"groupId":"1548","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"datasetAtPath","params":"(Pathpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a4/c9910ffa03558139864eaa7f3699a5945e10b7.src","preCode":"  public ConfigurableCleanableDataset<FileSystemDatasetVersion> datasetAtPath(Path path) throws IOException {\n    try {\n      return new ConfigurableCleanableDataset<>(this.fs, this.props, path,\n          this.client\n              .getConfig(this.props.getProperty(ConfigurationKeys.CONFIG_MANAGEMENT_STORE_URI) + path.toString()),\n          LoggerFactory.getLogger(ConfigurableCleanableDataset.class));\n    } catch (VersionDoesNotExistException | ConfigStoreFactoryDoesNotExistsException | ConfigStoreCreationException\n        | URISyntaxException e) {\n      throw new IllegalArgumentException(e);\n    }\n  }\n","realPath":"gobblin-data-management/src/main/java/org/apache/gobblin/data/management/retention/profile/ManagedCleanableDatasetFinder.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"NB"},{"authorDate":"2021-02-05 04:13:05","commitOrder":2,"curCode":"  public ConfigurableCleanableDataset<FileSystemDatasetVersion> datasetAtPath(Path path) throws IOException {\n    try {\n      return new CleanableIcebergDataset<>(this.fs, this.props, path,\n          this.client.getConfig(this.props.getProperty(ConfigurationKeys.CONFIG_MANAGEMENT_STORE_URI) + ICEBERG_CONFIG_PREFIX + path.toString()),\n          LoggerFactory.getLogger(CleanableIcebergDataset.class));\n    } catch (ConfigStoreFactoryDoesNotExistsException | ConfigStoreCreationException | URISyntaxException | VersionDoesNotExistException var3) {\n      throw new IllegalArgumentException(var3);\n    }\n  }\n","date":"2021-02-05 04:13:05","endLine":61,"groupId":"1548","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"datasetAtPath","params":"(Pathpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a2/684e4c6f60aa84deaa9211ff5a320fd7197d12.src","preCode":"  public ConfigurableCleanableDataset<FileSystemDatasetVersion> datasetAtPath(Path path) throws IOException {\n    try {\n      return new CleanableIcebergDataset<>(this.fs, this.props, path,\n          this.client.getConfig(this.props.getProperty(ConfigurationKeys.CONFIG_MANAGEMENT_STORE_URI) + ICEBERG_CONFIG_PREFIX + path.toString()),\n          LoggerFactory.getLogger(CleanableIcebergDataset.class));\n    } catch (ConfigStoreFactoryDoesNotExistsException | ConfigStoreCreationException | URISyntaxException | VersionDoesNotExistException var3) {\n      throw new IllegalArgumentException(var3);\n    }\n  }\n","realPath":"gobblin-data-management/src/main/java/org/apache/gobblin/data/management/retention/profile/ManagedIcebergCleanableDatasetFinder.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"4e2dc94eb570086c768c247f669255d62f84f3d6","commitMessage":"@@@[GOBBLIN-1335] Publish GMCE(GobblinMetadataChangeEvent) publisher and iceberg retention job to Gobblin OSS\n\n[GOBBLIN-1335] Publish\nGMCE(GobblinMetadataChangeEvent) publisher and\niceberg retention job to Gobblin OSS\n\nadd OSS comments\n\nadd unit test\n\nAdd icebergWriter to be able to consume GMCE and\nregister into iceberg table\n\nMake it re-writable for catalog inside\nicebergWriter\n\naddress comments\n\ntrigger build\n\ntrigger build\n\naddress comments\n\nMerge branch 'master' into GOBBLIN-1335\n\nMerge branch 'master' into GOBBLIN-1335\n\ndefine iceberg version\n\naddress comments\n\ninclude recent changes\n\nMerge remote-tracking branch 'origin' into\nGOBBLIN-1335\n\nMerge remote-tracking branch 'origin' into\nGOBBLIN-1335\n\nmerge master and modify method privacy level to\nmake them be re-writable\n\nCloses #3172 from ZihanLi58/GOBBLIN-1335\n","date":"2021-02-05 04:13:05","modifiedFileCount":"1","status":"M","submitter":"Zihan Li"},{"authorTime":"2021-02-05 04:13:05","codes":[{"authorDate":"2021-09-23 04:37:55","commitOrder":3,"curCode":"  public ConfigurableCleanableDataset<FileSystemDatasetVersion> datasetAtPath(Path path) throws IOException {\n    Properties datasetProps = new Properties();\n    datasetProps.putAll(this.props);\n    datasetProps.setProperty(FsCleanableHelper.RETENTION_DATASET_ROOT, path.toString());\n\n    try {\n      return new ConfigurableCleanableDataset<>(this.fs, datasetProps, path,\n          this.client\n              .getConfig(this.props.getProperty(ConfigurationKeys.CONFIG_MANAGEMENT_STORE_URI) + path),\n          LoggerFactory.getLogger(ConfigurableCleanableDataset.class));\n    } catch (VersionDoesNotExistException | ConfigStoreFactoryDoesNotExistsException | ConfigStoreCreationException\n        | URISyntaxException e) {\n      throw new IllegalArgumentException(e);\n    }\n  }\n","date":"2021-09-23 04:37:55","endLine":74,"groupId":"101721","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"datasetAtPath","params":"(Pathpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/26/fd400ea8f37045c172e48ae44850b53aca7381.src","preCode":"  public ConfigurableCleanableDataset<FileSystemDatasetVersion> datasetAtPath(Path path) throws IOException {\n    try {\n      return new ConfigurableCleanableDataset<>(this.fs, this.props, path,\n          this.client\n              .getConfig(this.props.getProperty(ConfigurationKeys.CONFIG_MANAGEMENT_STORE_URI) + path.toString()),\n          LoggerFactory.getLogger(ConfigurableCleanableDataset.class));\n    } catch (VersionDoesNotExistException | ConfigStoreFactoryDoesNotExistsException | ConfigStoreCreationException\n        | URISyntaxException e) {\n      throw new IllegalArgumentException(e);\n    }\n  }\n","realPath":"gobblin-data-management/src/main/java/org/apache/gobblin/data/management/retention/profile/ManagedCleanableDatasetFinder.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2021-02-05 04:13:05","commitOrder":3,"curCode":"  public ConfigurableCleanableDataset<FileSystemDatasetVersion> datasetAtPath(Path path) throws IOException {\n    try {\n      return new CleanableIcebergDataset<>(this.fs, this.props, path,\n          this.client.getConfig(this.props.getProperty(ConfigurationKeys.CONFIG_MANAGEMENT_STORE_URI) + ICEBERG_CONFIG_PREFIX + path.toString()),\n          LoggerFactory.getLogger(CleanableIcebergDataset.class));\n    } catch (ConfigStoreFactoryDoesNotExistsException | ConfigStoreCreationException | URISyntaxException | VersionDoesNotExistException var3) {\n      throw new IllegalArgumentException(var3);\n    }\n  }\n","date":"2021-02-05 04:13:05","endLine":61,"groupId":"101721","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"datasetAtPath","params":"(Pathpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/a2/684e4c6f60aa84deaa9211ff5a320fd7197d12.src","preCode":"  public ConfigurableCleanableDataset<FileSystemDatasetVersion> datasetAtPath(Path path) throws IOException {\n    try {\n      return new CleanableIcebergDataset<>(this.fs, this.props, path,\n          this.client.getConfig(this.props.getProperty(ConfigurationKeys.CONFIG_MANAGEMENT_STORE_URI) + ICEBERG_CONFIG_PREFIX + path.toString()),\n          LoggerFactory.getLogger(CleanableIcebergDataset.class));\n    } catch (ConfigStoreFactoryDoesNotExistsException | ConfigStoreCreationException | URISyntaxException | VersionDoesNotExistException var3) {\n      throw new IllegalArgumentException(var3);\n    }\n  }\n","realPath":"gobblin-data-management/src/main/java/org/apache/gobblin/data/management/retention/profile/ManagedIcebergCleanableDatasetFinder.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"}],"commitId":"c05416eb3cfbff887ffb13fa253f0b476bd6eb2f","commitMessage":"@@@[GOBBLIN-1550] Add dataset.root in ConfigurableCleanableDataset (#3400)\n\n* add dataset.root in a couple of dataset finders\n\n* address review comments","date":"2021-09-23 04:37:55","modifiedFileCount":"1","status":"M","submitter":"Arjun Singh Bora"}]
