[{"authorTime":"2019-09-25 06:00:52","codes":[{"authorDate":"2019-10-23 07:05:40","commitOrder":3,"curCode":"  public void tryResolving(Config userConfig, DatasetDescriptor inputDescriptor, DatasetDescriptor outputDescriptor)\n      throws SpecNotFoundException, JobTemplate.TemplateException {\n    Config inputDescriptorConfig = inputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_INPUT_DATASET_DESCRIPTOR_PREFIX);\n    Config outputDescriptorConfig = outputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_OUTPUT_DATASET_DESCRIPTOR_PREFIX);\n    userConfig = userConfig.withFallback(inputDescriptorConfig).withFallback(outputDescriptorConfig);\n\n    JobSpec.Builder jobSpecBuilder = JobSpec.builder().withConfig(userConfig);\n\n    for (JobTemplate template: this.jobTemplates) {\n      this.jobSpecResolver.resolveJobSpec(jobSpecBuilder.withTemplate(template).build());\n    }\n  }\n","date":"2019-10-23 07:05:40","endLine":187,"groupId":"2530","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"tryResolving","params":"(ConfiguserConfig@DatasetDescriptorinputDescriptor@DatasetDescriptoroutputDescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e8/33897dfb2092b8ef8bbad1f724fc0a0eebc7e4.src","preCode":"  public void tryResolving(Config userConfig, DatasetDescriptor inputDescriptor, DatasetDescriptor outputDescriptor)\n      throws SpecNotFoundException, JobTemplate.TemplateException {\n    Config inputDescriptorConfig = inputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_INPUT_DATASET_DESCRIPTOR_PREFIX);\n    Config outputDescriptorConfig = outputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_OUTPUT_DATASET_DESCRIPTOR_PREFIX);\n    userConfig = userConfig.withFallback(inputDescriptorConfig).withFallback(outputDescriptorConfig);\n\n    JobSpec.Builder jobSpecBuilder = JobSpec.builder().withConfig(userConfig);\n\n    for (JobTemplate template: this.jobTemplates) {\n      this.jobSpecResolver.resolveJobSpec(jobSpecBuilder.withTemplate(template).build());\n    }\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/template/StaticFlowTemplate.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"B"},{"authorDate":"2019-09-25 06:00:52","commitOrder":3,"curCode":"  public List<Config> getResolvedJobConfigs(Config userConfig, DatasetDescriptor inputDescriptor,\n      DatasetDescriptor outputDescriptor)\n      throws SpecNotFoundException, JobTemplate.TemplateException {\n    Config inputDescriptorConfig = inputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_INPUT_DATASET_DESCRIPTOR_PREFIX);\n    Config outputDescriptorConfig = outputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_OUTPUT_DATASET_DESCRIPTOR_PREFIX);\n    userConfig = userConfig.withFallback(inputDescriptorConfig).withFallback(outputDescriptorConfig);\n\n    List<Config> resolvedJobConfigs = new ArrayList<>();\n    JobSpec.Builder jobSpecBuilder = JobSpec.builder().withConfig(userConfig);\n    for (JobTemplate jobTemplate: getJobTemplates()) {\n      ResolvedJobSpec resolvedJobSpec = this.jobSpecResolver.resolveJobSpec(jobSpecBuilder.withTemplate(jobTemplate).build());\n      Config resolvedJobConfig = resolvedJobSpec.getConfig().withValue(\n          ConfigurationKeys.JOB_TEMPLATE_PATH, ConfigValueFactory.fromAnyRef(jobTemplate.getUri().toString()));\n      resolvedJobConfigs.add(resolvedJobConfig);\n    }\n    return resolvedJobConfigs;\n  }\n","date":"2019-09-25 06:00:52","endLine":202,"groupId":"8046","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getResolvedJobConfigs","params":"(ConfiguserConfig@DatasetDescriptorinputDescriptor@DatasetDescriptoroutputDescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/53/c8e37844ef48dc9844bafaccb6b37c004c4900.src","preCode":"  public List<Config> getResolvedJobConfigs(Config userConfig, DatasetDescriptor inputDescriptor,\n      DatasetDescriptor outputDescriptor)\n      throws SpecNotFoundException, JobTemplate.TemplateException {\n    Config inputDescriptorConfig = inputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_INPUT_DATASET_DESCRIPTOR_PREFIX);\n    Config outputDescriptorConfig = outputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_OUTPUT_DATASET_DESCRIPTOR_PREFIX);\n    userConfig = userConfig.withFallback(inputDescriptorConfig).withFallback(outputDescriptorConfig);\n\n    List<Config> resolvedJobConfigs = new ArrayList<>();\n    JobSpec.Builder jobSpecBuilder = JobSpec.builder().withConfig(userConfig);\n    for (JobTemplate jobTemplate: getJobTemplates()) {\n      ResolvedJobSpec resolvedJobSpec = this.jobSpecResolver.resolveJobSpec(jobSpecBuilder.withTemplate(jobTemplate).build());\n      Config resolvedJobConfig = resolvedJobSpec.getConfig().withValue(\n          ConfigurationKeys.JOB_TEMPLATE_PATH, ConfigValueFactory.fromAnyRef(jobTemplate.getUri().toString()));\n      resolvedJobConfigs.add(resolvedJobConfig);\n    }\n    return resolvedJobConfigs;\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/template/StaticFlowTemplate.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"NB"}],"commitId":"14ff4e537810f48115f71c27210f0881a45fdbe6","commitMessage":"@@@[GOBBLIN-909] Return error message for unresolved substitutions in explain query\n\nCloses #2763 from jack-moseley/explain-unresolved\n","date":"2019-10-23 07:05:40","modifiedFileCount":"9","status":"M","submitter":"Jack Moseley"},{"authorTime":"2021-07-29 04:02:46","codes":[{"authorDate":"2019-10-23 07:05:40","commitOrder":4,"curCode":"  public void tryResolving(Config userConfig, DatasetDescriptor inputDescriptor, DatasetDescriptor outputDescriptor)\n      throws SpecNotFoundException, JobTemplate.TemplateException {\n    Config inputDescriptorConfig = inputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_INPUT_DATASET_DESCRIPTOR_PREFIX);\n    Config outputDescriptorConfig = outputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_OUTPUT_DATASET_DESCRIPTOR_PREFIX);\n    userConfig = userConfig.withFallback(inputDescriptorConfig).withFallback(outputDescriptorConfig);\n\n    JobSpec.Builder jobSpecBuilder = JobSpec.builder().withConfig(userConfig);\n\n    for (JobTemplate template: this.jobTemplates) {\n      this.jobSpecResolver.resolveJobSpec(jobSpecBuilder.withTemplate(template).build());\n    }\n  }\n","date":"2019-10-23 07:05:40","endLine":187,"groupId":"101154","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"tryResolving","params":"(ConfiguserConfig@DatasetDescriptorinputDescriptor@DatasetDescriptoroutputDescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/e8/33897dfb2092b8ef8bbad1f724fc0a0eebc7e4.src","preCode":"  public void tryResolving(Config userConfig, DatasetDescriptor inputDescriptor, DatasetDescriptor outputDescriptor)\n      throws SpecNotFoundException, JobTemplate.TemplateException {\n    Config inputDescriptorConfig = inputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_INPUT_DATASET_DESCRIPTOR_PREFIX);\n    Config outputDescriptorConfig = outputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_OUTPUT_DATASET_DESCRIPTOR_PREFIX);\n    userConfig = userConfig.withFallback(inputDescriptorConfig).withFallback(outputDescriptorConfig);\n\n    JobSpec.Builder jobSpecBuilder = JobSpec.builder().withConfig(userConfig);\n\n    for (JobTemplate template: this.jobTemplates) {\n      this.jobSpecResolver.resolveJobSpec(jobSpecBuilder.withTemplate(template).build());\n    }\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/template/StaticFlowTemplate.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"N"},{"authorDate":"2021-07-29 04:02:46","commitOrder":4,"curCode":"  public List<Config> getResolvedJobConfigs(Config userConfig, DatasetDescriptor inputDescriptor,\n      DatasetDescriptor outputDescriptor)\n      throws SpecNotFoundException, JobTemplate.TemplateException {\n    Config inputDescriptorConfig = inputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_INPUT_DATASET_DESCRIPTOR_PREFIX);\n    Config outputDescriptorConfig = outputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_OUTPUT_DATASET_DESCRIPTOR_PREFIX);\n    userConfig = userConfig.withFallback(inputDescriptorConfig).withFallback(outputDescriptorConfig);\n\n    List<Config> resolvedJobConfigs = new ArrayList<>(getJobTemplates().size());\n    JobSpec.Builder jobSpecBuilder = JobSpec.builder().withConfig(userConfig);\n    for (JobTemplate jobTemplate: getJobTemplates()) {\n      ResolvedJobSpec resolvedJobSpec = this.jobSpecResolver.resolveJobSpec(jobSpecBuilder.withTemplate(jobTemplate).build());\n      Config resolvedJobConfig = resolvedJobSpec.getConfig().withValue(\n          ConfigurationKeys.JOB_TEMPLATE_PATH, ConfigValueFactory.fromAnyRef(jobTemplate.getUri().toString()));\n      resolvedJobConfigs.add(resolvedJobConfig);\n    }\n    return resolvedJobConfigs;\n  }\n","date":"2021-07-29 04:02:46","endLine":200,"groupId":"101154","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getResolvedJobConfigs","params":"(ConfiguserConfig@DatasetDescriptorinputDescriptor@DatasetDescriptoroutputDescriptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/d8/f3bf9b4162d81520a33a2e871e07103f1b116e.src","preCode":"  public List<Config> getResolvedJobConfigs(Config userConfig, DatasetDescriptor inputDescriptor,\n      DatasetDescriptor outputDescriptor)\n      throws SpecNotFoundException, JobTemplate.TemplateException {\n    Config inputDescriptorConfig = inputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_INPUT_DATASET_DESCRIPTOR_PREFIX);\n    Config outputDescriptorConfig = outputDescriptor.getRawConfig().atPath(DatasetDescriptorConfigKeys.FLOW_EDGE_OUTPUT_DATASET_DESCRIPTOR_PREFIX);\n    userConfig = userConfig.withFallback(inputDescriptorConfig).withFallback(outputDescriptorConfig);\n\n    List<Config> resolvedJobConfigs = new ArrayList<>();\n    JobSpec.Builder jobSpecBuilder = JobSpec.builder().withConfig(userConfig);\n    for (JobTemplate jobTemplate: getJobTemplates()) {\n      ResolvedJobSpec resolvedJobSpec = this.jobSpecResolver.resolveJobSpec(jobSpecBuilder.withTemplate(jobTemplate).build());\n      Config resolvedJobConfig = resolvedJobSpec.getConfig().withValue(\n          ConfigurationKeys.JOB_TEMPLATE_PATH, ConfigValueFactory.fromAnyRef(jobTemplate.getUri().toString()));\n      resolvedJobConfigs.add(resolvedJobConfig);\n    }\n    return resolvedJobConfigs;\n  }\n","realPath":"gobblin-service/src/main/java/org/apache/gobblin/service/modules/template/StaticFlowTemplate.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"}],"commitId":"9a9e239ec7c1c870916d2ceec442a537275c1166","commitMessage":"@@@[GOBBLIN-1496] Initialize arrays and maps related to gobblin as a service with an in? (#3339)\n\n* optimize some maps and arrays that can be initialized with a fixed size\n\n* use newHashmapWithExpectedSize\n\n* fix checkstyle\n\n* fix bug\n\n* undo accidental change getTimeUnit","date":"2021-07-29 04:02:46","modifiedFileCount":"11","status":"M","submitter":"William Lo"}]
