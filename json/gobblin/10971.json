[{"authorTime":"2017-07-31 15:51:25","codes":[{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testSimpleCalls() throws Exception {\n    FileSystem fs = Mockito.mock(FileSystem.class);\n    Mockito.when(fs.getFileStatus(Mockito.any(Path.class))).thenReturn(new FileStatus(0, false, 0, 0, 0, new Path(\"/\")));\n\n    Limiter limiter = new CountBasedLimiter(2);\n\n    ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs, limiter);\n\n    Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")));\n    Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")));\n    try {\n      throttledFileSystem.getFileStatus(new Path(\"/myFile\"));\n      Assert.fail();\n    } catch (NotEnoughPermitsException expected) {\n      \r\n    }\n\n  }\n","date":"2017-07-31 15:51:25","endLine":54,"groupId":"3428","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleCalls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f8/a863f0386a878aa601302077839d31f8ce7cab.src","preCode":"  public void testSimpleCalls() throws Exception {\n    FileSystem fs = Mockito.mock(FileSystem.class);\n    Mockito.when(fs.getFileStatus(Mockito.any(Path.class))).thenReturn(new FileStatus(0, false, 0, 0, 0, new Path(\"/\")));\n\n    Limiter limiter = new CountBasedLimiter(2);\n\n    ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs, limiter);\n\n    Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")));\n    Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")));\n    try {\n      throttledFileSystem.getFileStatus(new Path(\"/myFile\"));\n      Assert.fail();\n    } catch (NotEnoughPermitsException expected) {\n      \r\n    }\n\n  }\n","realPath":"gobblin-utility/src/test/java/org/apache/gobblin/util/filesystem/ThrottledFileSystemTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"},{"authorDate":"2017-07-31 15:51:25","commitOrder":1,"curCode":"  public void testListing() throws Exception {\n    FileSystem fs = Mockito.mock(FileSystem.class);\n    Mockito.when(fs.listStatus(Mockito.any(Path.class))).thenAnswer(new Answer<FileStatus[]>() {\n      @Override\n      public FileStatus[] answer(InvocationOnMock invocation) throws Throwable {\n        Path path = (Path) invocation.getArguments()[0];\n        int files = Integer.parseInt(path.getName());\n\n        FileStatus status = new FileStatus(0, false, 0, 0, 0, new Path(\"/\"));\n        FileStatus[] out = new FileStatus[files];\n        for (int i = 0; i < files; i++) {\n          out[i] = status;\n        }\n\n        return out;\n      }\n    });\n\n    Limiter limiter = new CountBasedLimiter(5);\n\n    ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs, limiter);\n\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\"))); \r\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/250\"))); \r\n    try {\n      throttledFileSystem.listStatus(new Path(\"/files/150\")); \r\n      Assert.fail();\n    } catch (NotEnoughPermitsException expected) {\n      \r\n    }\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\"))); \r\n  }\n","date":"2017-07-31 15:51:25","endLine":88,"groupId":"3429","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testListing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f8/a863f0386a878aa601302077839d31f8ce7cab.src","preCode":"  public void testListing() throws Exception {\n    FileSystem fs = Mockito.mock(FileSystem.class);\n    Mockito.when(fs.listStatus(Mockito.any(Path.class))).thenAnswer(new Answer<FileStatus[]>() {\n      @Override\n      public FileStatus[] answer(InvocationOnMock invocation) throws Throwable {\n        Path path = (Path) invocation.getArguments()[0];\n        int files = Integer.parseInt(path.getName());\n\n        FileStatus status = new FileStatus(0, false, 0, 0, 0, new Path(\"/\"));\n        FileStatus[] out = new FileStatus[files];\n        for (int i = 0; i < files; i++) {\n          out[i] = status;\n        }\n\n        return out;\n      }\n    });\n\n    Limiter limiter = new CountBasedLimiter(5);\n\n    ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs, limiter);\n\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\"))); \r\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/250\"))); \r\n    try {\n      throttledFileSystem.listStatus(new Path(\"/files/150\")); \r\n      Assert.fail();\n    } catch (NotEnoughPermitsException expected) {\n      \r\n    }\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\"))); \r\n  }\n","realPath":"gobblin-utility/src/test/java/org/apache/gobblin/util/filesystem/ThrottledFileSystemTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"}],"commitId":"5457af88d56b8fb89b172129fd1ff24ecdd4eba8","commitMessage":"@@@Merge pull request #2031 from abti/move_packages_to_apache\n","date":"2017-07-31 15:51:25","modifiedFileCount":"2","status":"B","submitter":"Abhishek Tiwari"},{"authorTime":"2017-11-08 00:55:19","codes":[{"authorDate":"2017-11-08 00:55:19","commitOrder":2,"curCode":"  public void testSimpleCalls() throws Exception {\n    FileSystem fs = Mockito.mock(FileSystem.class);\n    Mockito.when(fs.getFileStatus(Mockito.any(Path.class))).thenReturn(new FileStatus(0, false, 0, 0, 0, new Path(\"/\")));\n\n    Limiter limiter = new CountBasedLimiter(2);\n\n    ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs, limiter, \"testService\");\n\n    Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")));\n    Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")));\n    try {\n      throttledFileSystem.getFileStatus(new Path(\"/myFile\"));\n      Assert.fail();\n    } catch (NotEnoughPermitsException expected) {\n      \r\n    }\n\n  }\n","date":"2017-11-08 00:55:19","endLine":54,"groupId":"10971","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testSimpleCalls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f0/d33d5b3e2f81cc90b48fee578b4a180908b844.src","preCode":"  public void testSimpleCalls() throws Exception {\n    FileSystem fs = Mockito.mock(FileSystem.class);\n    Mockito.when(fs.getFileStatus(Mockito.any(Path.class))).thenReturn(new FileStatus(0, false, 0, 0, 0, new Path(\"/\")));\n\n    Limiter limiter = new CountBasedLimiter(2);\n\n    ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs, limiter);\n\n    Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")));\n    Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")));\n    try {\n      throttledFileSystem.getFileStatus(new Path(\"/myFile\"));\n      Assert.fail();\n    } catch (NotEnoughPermitsException expected) {\n      \r\n    }\n\n  }\n","realPath":"gobblin-utility/src/test/java/org/apache/gobblin/util/filesystem/ThrottledFileSystemTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2017-11-08 00:55:19","commitOrder":2,"curCode":"  public void testListing() throws Exception {\n    FileSystem fs = Mockito.mock(FileSystem.class);\n    Mockito.when(fs.listStatus(Mockito.any(Path.class))).thenAnswer(new Answer<FileStatus[]>() {\n      @Override\n      public FileStatus[] answer(InvocationOnMock invocation) throws Throwable {\n        Path path = (Path) invocation.getArguments()[0];\n        int files = Integer.parseInt(path.getName());\n\n        FileStatus status = new FileStatus(0, false, 0, 0, 0, new Path(\"/\"));\n        FileStatus[] out = new FileStatus[files];\n        for (int i = 0; i < files; i++) {\n          out[i] = status;\n        }\n\n        return out;\n      }\n    });\n\n    Limiter limiter = new CountBasedLimiter(5);\n\n    ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs, limiter, \"testService\");\n    Assert.assertEquals(throttledFileSystem.getServiceName(), \"testService\");\n\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\"))); \r\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/250\"))); \r\n    try {\n      throttledFileSystem.listStatus(new Path(\"/files/150\")); \r\n      Assert.fail();\n    } catch (NotEnoughPermitsException expected) {\n      \r\n    }\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\"))); \r\n  }\n","date":"2017-11-08 00:55:19","endLine":89,"groupId":"10971","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testListing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-gobblin-10-0.7/blobInfo/CC_OUT/blobs/f0/d33d5b3e2f81cc90b48fee578b4a180908b844.src","preCode":"  public void testListing() throws Exception {\n    FileSystem fs = Mockito.mock(FileSystem.class);\n    Mockito.when(fs.listStatus(Mockito.any(Path.class))).thenAnswer(new Answer<FileStatus[]>() {\n      @Override\n      public FileStatus[] answer(InvocationOnMock invocation) throws Throwable {\n        Path path = (Path) invocation.getArguments()[0];\n        int files = Integer.parseInt(path.getName());\n\n        FileStatus status = new FileStatus(0, false, 0, 0, 0, new Path(\"/\"));\n        FileStatus[] out = new FileStatus[files];\n        for (int i = 0; i < files; i++) {\n          out[i] = status;\n        }\n\n        return out;\n      }\n    });\n\n    Limiter limiter = new CountBasedLimiter(5);\n\n    ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs, limiter);\n\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\"))); \r\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/250\"))); \r\n    try {\n      throttledFileSystem.listStatus(new Path(\"/files/150\")); \r\n      Assert.fail();\n    } catch (NotEnoughPermitsException expected) {\n      \r\n    }\n    Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\"))); \r\n  }\n","realPath":"gobblin-utility/src/test/java/org/apache/gobblin/util/filesystem/ThrottledFileSystemTest.java","repoName":"gobblin","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"0e556151964217332f52e88bb28940095341a6d4","commitMessage":"@@@[GOBBLIN-287] Adding a service name to the resource name for multiple throttling quotas\n\nCloses #2142 from jdintruff/gobblin-287\n","date":"2017-11-08 00:55:19","modifiedFileCount":"4","status":"M","submitter":"Jack Dintruff"}]
