[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testParseWithExtraSpaces() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"      ls       /  \";\n        zkMain.cl.parseCommand(cmdstring);\n        Assert.assertEquals(\"Spaces also considered as characters\", zkMain.cl.getNumArguments(), 2);\n        Assert.assertEquals(\"ls is not taken as first argument\", zkMain.cl.getCmdArgument(0), \"ls\");\n        Assert.assertEquals(\"/ is not taken as second argument\", zkMain.cl.getCmdArgument(1), \"/\");\n    }\n","date":"2018-10-19 20:39:50","endLine":168,"groupId":"4345","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseWithExtraSpaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f8/be441dafc8fc5fc652897518470e5cc1122cde.src","preCode":"    public void testParseWithExtraSpaces() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"      ls       /  \";\n        zkMain.cl.parseCommand(cmdstring);\n        Assert.assertEquals(\"Spaces also considered as characters\", zkMain.cl.getNumArguments(), 2);\n        Assert.assertEquals(\"ls is not taken as first argument\", zkMain.cl.getCmdArgument(0), \"ls\");\n        Assert.assertEquals(\"/ is not taken as second argument\", zkMain.cl.getCmdArgument(1), \"/\");\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ZooKeeperTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testParseWithMultipleQuotes() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"create /node '' ''\";\n        zkMain.cl.parseCommand(cmdstring);\n        Assert.assertEquals(\"expected 5 arguments\", zkMain.cl.getNumArguments(), 4);\n        Assert.assertEquals(\"create is not taken as first argument\", zkMain.cl.getCmdArgument(0), \"create\");\n        Assert.assertEquals(\"/node is not taken as second argument\", zkMain.cl.getCmdArgument(1), \"/node\");\n        Assert.assertEquals(\"empty string is not taken as third argument\", zkMain.cl.getCmdArgument(2), \"\");\n        Assert.assertEquals(\"empty string is not taken as fourth argument\", zkMain.cl.getCmdArgument(3), \"\");\n    }\n","date":"2018-10-19 20:39:50","endLine":223,"groupId":"4276","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseWithMultipleQuotes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f8/be441dafc8fc5fc652897518470e5cc1122cde.src","preCode":"    public void testParseWithMultipleQuotes() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"create /node '' ''\";\n        zkMain.cl.parseCommand(cmdstring);\n        Assert.assertEquals(\"expected 5 arguments\", zkMain.cl.getNumArguments(), 4);\n        Assert.assertEquals(\"create is not taken as first argument\", zkMain.cl.getCmdArgument(0), \"create\");\n        Assert.assertEquals(\"/node is not taken as second argument\", zkMain.cl.getCmdArgument(1), \"/node\");\n        Assert.assertEquals(\"empty string is not taken as third argument\", zkMain.cl.getCmdArgument(2), \"\");\n        Assert.assertEquals(\"empty string is not taken as fourth argument\", zkMain.cl.getCmdArgument(3), \"\");\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ZooKeeperTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testParseWithExtraSpaces() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"      ls       /  \";\n        zkMain.cl.parseCommand(cmdstring);\n        assertEquals(\"Spaces also considered as characters\", zkMain.cl.getNumArguments(), 2);\n        assertEquals(\"ls is not taken as first argument\", zkMain.cl.getCmdArgument(0), \"ls\");\n        assertEquals(\"/ is not taken as second argument\", zkMain.cl.getCmdArgument(1), \"/\");\n    }\n","date":"2019-08-17 23:13:15","endLine":237,"groupId":"4345","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseWithExtraSpaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d1/9f627e069855c66c71e7f1f184e877352d7e0c.src","preCode":"    public void testParseWithExtraSpaces() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"      ls       /  \";\n        zkMain.cl.parseCommand(cmdstring);\n        Assert.assertEquals(\"Spaces also considered as characters\", zkMain.cl.getNumArguments(), 2);\n        Assert.assertEquals(\"ls is not taken as first argument\", zkMain.cl.getCmdArgument(0), \"ls\");\n        Assert.assertEquals(\"/ is not taken as second argument\", zkMain.cl.getCmdArgument(1), \"/\");\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ZooKeeperTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testParseWithMultipleQuotes() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"create /node '' ''\";\n        zkMain.cl.parseCommand(cmdstring);\n        assertEquals(\"expected 5 arguments\", zkMain.cl.getNumArguments(), 4);\n        assertEquals(\"create is not taken as first argument\", zkMain.cl.getCmdArgument(0), \"create\");\n        assertEquals(\"/node is not taken as second argument\", zkMain.cl.getCmdArgument(1), \"/node\");\n        assertEquals(\"empty string is not taken as third argument\", zkMain.cl.getCmdArgument(2), \"\");\n        assertEquals(\"empty string is not taken as fourth argument\", zkMain.cl.getCmdArgument(3), \"\");\n    }\n","date":"2019-08-17 23:13:15","endLine":295,"groupId":"588","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseWithMultipleQuotes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d1/9f627e069855c66c71e7f1f184e877352d7e0c.src","preCode":"    public void testParseWithMultipleQuotes() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"create /node '' ''\";\n        zkMain.cl.parseCommand(cmdstring);\n        Assert.assertEquals(\"expected 5 arguments\", zkMain.cl.getNumArguments(), 4);\n        Assert.assertEquals(\"create is not taken as first argument\", zkMain.cl.getCmdArgument(0), \"create\");\n        Assert.assertEquals(\"/node is not taken as second argument\", zkMain.cl.getCmdArgument(1), \"/node\");\n        Assert.assertEquals(\"empty string is not taken as third argument\", zkMain.cl.getCmdArgument(2), \"\");\n        Assert.assertEquals(\"empty string is not taken as fourth argument\", zkMain.cl.getCmdArgument(3), \"\");\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ZooKeeperTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testParseWithExtraSpaces() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"      ls       /  \";\n        zkMain.cl.parseCommand(cmdstring);\n        assertEquals(zkMain.cl.getNumArguments(), 2, \"Spaces also considered as characters\");\n        assertEquals(zkMain.cl.getCmdArgument(0), \"ls\", \"ls is not taken as first argument\");\n        assertEquals(zkMain.cl.getCmdArgument(1), \"/\", \"/ is not taken as second argument\");\n    }\n","date":"2020-08-04 21:01:52","endLine":231,"groupId":"10337","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseWithExtraSpaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/70/74896bcffb7d251e264f265e231f1e21560870.src","preCode":"    public void testParseWithExtraSpaces() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"      ls       /  \";\n        zkMain.cl.parseCommand(cmdstring);\n        assertEquals(\"Spaces also considered as characters\", zkMain.cl.getNumArguments(), 2);\n        assertEquals(\"ls is not taken as first argument\", zkMain.cl.getCmdArgument(0), \"ls\");\n        assertEquals(\"/ is not taken as second argument\", zkMain.cl.getCmdArgument(1), \"/\");\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ZooKeeperTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testParseWithMultipleQuotes() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"create /node '' ''\";\n        zkMain.cl.parseCommand(cmdstring);\n        assertEquals(zkMain.cl.getNumArguments(), 4, \"expected 5 arguments\");\n        assertEquals(zkMain.cl.getCmdArgument(0), \"create\", \"create is not taken as first argument\");\n        assertEquals(zkMain.cl.getCmdArgument(1), \"/node\", \"/node is not taken as second argument\");\n        assertEquals(zkMain.cl.getCmdArgument(2), \"\", \"empty string is not taken as third argument\");\n        assertEquals(zkMain.cl.getCmdArgument(3), \"\", \"empty string is not taken as fourth argument\");\n    }\n","date":"2020-08-04 21:01:52","endLine":287,"groupId":"10337","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseWithMultipleQuotes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/70/74896bcffb7d251e264f265e231f1e21560870.src","preCode":"    public void testParseWithMultipleQuotes() throws Exception {\n        final ZooKeeper zk = createClient();\n        ZooKeeperMain zkMain = new ZooKeeperMain(zk);\n        String cmdstring = \"create /node '' ''\";\n        zkMain.cl.parseCommand(cmdstring);\n        assertEquals(\"expected 5 arguments\", zkMain.cl.getNumArguments(), 4);\n        assertEquals(\"create is not taken as first argument\", zkMain.cl.getCmdArgument(0), \"create\");\n        assertEquals(\"/node is not taken as second argument\", zkMain.cl.getCmdArgument(1), \"/node\");\n        assertEquals(\"empty string is not taken as third argument\", zkMain.cl.getCmdArgument(2), \"\");\n        assertEquals(\"empty string is not taken as fourth argument\", zkMain.cl.getCmdArgument(3), \"\");\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ZooKeeperTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
