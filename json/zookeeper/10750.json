[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":2,"curCode":"    public static void writeDynamicConfig(final String dynamicConfigFilename,\n                                          final QuorumVerifier qv,\n                                          final boolean needKeepVersion)\n            throws IOException {\n\n        new AtomicFileWritingIdiom(new File(dynamicConfigFilename), new WriterStatement() {\n            @Override\n            public void write(Writer out) throws IOException {\n                Properties cfg = new Properties();\n                cfg.load( new StringReader(\n                        qv.toString()));\n\n                List<String> servers = new ArrayList<String>();\n                for (Entry<Object, Object> entry : cfg.entrySet()) {\n                    String key = entry.getKey().toString().trim();\n                    if ( !needKeepVersion && key.startsWith(\"version\"))\n                        continue;\n\n                    String value = entry.getValue().toString().trim();\n                    servers.add(key\n                            .concat(\"=\")\n                            .concat(value));\n                }\n\n                Collections.sort(servers);\n                out.write(StringUtils.joinStrings(servers, \"\\n\"));\n            }\n        });\n    }\n","date":"2018-10-05 20:25:43","endLine":516,"groupId":"4412","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeDynamicConfig","params":"(finalStringdynamicConfigFilename@finalQuorumVerifierqv@finalbooleanneedKeepVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f4/e8a5f089f6d47c0a2b8a5adad8fb9465c6596c.src","preCode":"    public static void writeDynamicConfig(final String dynamicConfigFilename,\n                                          final QuorumVerifier qv,\n                                          final boolean needKeepVersion)\n            throws IOException {\n\n        new AtomicFileWritingIdiom(new File(dynamicConfigFilename), new WriterStatement() {\n            @Override\n            public void write(Writer out) throws IOException {\n                Properties cfg = new Properties();\n                cfg.load( new StringReader(\n                        qv.toString()));\n\n                List<String> servers = new ArrayList<String>();\n                for (Entry<Object, Object> entry : cfg.entrySet()) {\n                    String key = entry.getKey().toString().trim();\n                    if ( !needKeepVersion && key.startsWith(\"version\"))\n                        continue;\n\n                    String value = entry.getValue().toString().trim();\n                    servers.add(key\n                            .concat(\"=\")\n                            .concat(value));\n                }\n\n                Collections.sort(servers);\n                out.write(StringUtils.joinStrings(servers, \"\\n\"));\n            }\n        });\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":488,"status":"NB"},{"authorDate":"2018-10-19 20:39:50","commitOrder":2,"curCode":"    private void parseProperties(Properties cfg) {\n        for (Entry<Object, Object> entry : cfg.entrySet()) {\n            String key = entry.getKey().toString().trim();\n            String value = entry.getValue().toString().trim();\n            setProperty(key, value);\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":227,"groupId":"4247","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parseProperties","params":"(Propertiescfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/dc/24b19cf0136d1c10db3b93a2aef35fac78eb1a.src","preCode":"    private void parseProperties(Properties cfg) {\n        for (Entry<Object, Object> entry : cfg.entrySet()) {\n            String key = entry.getKey().toString().trim();\n            String value = entry.getValue().toString().trim();\n            setProperty(key, value);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKConfig.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"M","submitter":"Norbert Kalmar"},{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":3,"curCode":"    public static void writeDynamicConfig(final String dynamicConfigFilename, final QuorumVerifier qv, final boolean needKeepVersion) throws IOException {\n\n        new AtomicFileWritingIdiom(new File(dynamicConfigFilename), new WriterStatement() {\n            @Override\n            public void write(Writer out) throws IOException {\n                Properties cfg = new Properties();\n                cfg.load(new StringReader(qv.toString()));\n\n                List<String> servers = new ArrayList<String>();\n                for (Entry<Object, Object> entry : cfg.entrySet()) {\n                    String key = entry.getKey().toString().trim();\n                    if (!needKeepVersion && key.startsWith(\"version\")) {\n                        continue;\n                    }\n\n                    String value = entry.getValue().toString().trim();\n                    servers.add(key.concat(\"=\").concat(value));\n                }\n\n                Collections.sort(servers);\n                out.write(StringUtils.joinStrings(servers, \"\\n\"));\n            }\n        });\n    }\n","date":"2019-08-17 23:13:15","endLine":574,"groupId":"10750","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeDynamicConfig","params":"(finalStringdynamicConfigFilename@finalQuorumVerifierqv@finalbooleanneedKeepVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/a4/3a7cfbca03850c8885e078331bfcb48aa4ef4a.src","preCode":"    public static void writeDynamicConfig(final String dynamicConfigFilename,\n                                          final QuorumVerifier qv,\n                                          final boolean needKeepVersion)\n            throws IOException {\n\n        new AtomicFileWritingIdiom(new File(dynamicConfigFilename), new WriterStatement() {\n            @Override\n            public void write(Writer out) throws IOException {\n                Properties cfg = new Properties();\n                cfg.load( new StringReader(\n                        qv.toString()));\n\n                List<String> servers = new ArrayList<String>();\n                for (Entry<Object, Object> entry : cfg.entrySet()) {\n                    String key = entry.getKey().toString().trim();\n                    if ( !needKeepVersion && key.startsWith(\"version\"))\n                        continue;\n\n                    String value = entry.getValue().toString().trim();\n                    servers.add(key\n                            .concat(\"=\")\n                            .concat(value));\n                }\n\n                Collections.sort(servers);\n                out.write(StringUtils.joinStrings(servers, \"\\n\"));\n            }\n        });\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":551,"status":"M"},{"authorDate":"2018-10-19 20:39:50","commitOrder":3,"curCode":"    private void parseProperties(Properties cfg) {\n        for (Entry<Object, Object> entry : cfg.entrySet()) {\n            String key = entry.getKey().toString().trim();\n            String value = entry.getValue().toString().trim();\n            setProperty(key, value);\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":227,"groupId":"10750","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parseProperties","params":"(Propertiescfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/dc/24b19cf0136d1c10db3b93a2aef35fac78eb1a.src","preCode":"    private void parseProperties(Properties cfg) {\n        for (Entry<Object, Object> entry : cfg.entrySet()) {\n            String key = entry.getKey().toString().trim();\n            String value = entry.getValue().toString().trim();\n            setProperty(key, value);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKConfig.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"N"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
