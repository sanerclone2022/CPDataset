[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testEnableQuorumServerRequireSaslWithoutQuorumLearnerRequireSasl()\n            throws Exception {\n        Map<String, String> authConfigs = new HashMap<String, String>();\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_LOGIN_CONTEXT,\n                \"QuorumLearner\");\n        authConfigs.put(QuorumAuth.QUORUM_SASL_AUTH_ENABLED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"false\");\n        MainThread mthread = new MainThread(1, PortAssignment.unique(), \"\",\n                authConfigs);\n        String args[] = new String[1];\n        args[0] = mthread.getConfFile().toString();\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args)\n                        throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            Assert.fail(\"Must throw exception as quorumpeer learner is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":170,"groupId":"2019","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEnableQuorumServerRequireSaslWithoutQuorumLearnerRequireSasl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/5e/ebdb335c02cd82321afdba6748c06f1324bc87.src","preCode":"    public void testEnableQuorumServerRequireSaslWithoutQuorumLearnerRequireSasl()\n            throws Exception {\n        Map<String, String> authConfigs = new HashMap<String, String>();\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_LOGIN_CONTEXT,\n                \"QuorumLearner\");\n        authConfigs.put(QuorumAuth.QUORUM_SASL_AUTH_ENABLED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"false\");\n        MainThread mthread = new MainThread(1, PortAssignment.unique(), \"\",\n                authConfigs);\n        String args[] = new String[1];\n        args[0] = mthread.getConfFile().toString();\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args)\n                        throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            Assert.fail(\"Must throw exception as quorumpeer learner is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/auth/QuorumDigestAuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testEnableQuorumAuthenticationConfigurations()\n            throws Exception {\n        Map<String, String> authConfigs = new HashMap<String, String>();\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_LOGIN_CONTEXT,\n                \"QuorumLearner\");\n        authConfigs.put(QuorumAuth.QUORUM_SASL_AUTH_ENABLED, \"false\");\n\n        \r\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"false\");\n        MainThread mthread = new MainThread(1, PortAssignment.unique(), \"\",\n                authConfigs);\n        String args[] = new String[1];\n        args[0] = mthread.getConfFile().toString();\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args)\n                        throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            Assert.fail(\"Must throw exception as quorum sasl is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n\n        \r\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"false\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"true\");\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args)\n                        throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            Assert.fail(\"Must throw exception as quorum sasl is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":221,"groupId":"2019","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEnableQuorumAuthenticationConfigurations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/5e/ebdb335c02cd82321afdba6748c06f1324bc87.src","preCode":"    public void testEnableQuorumAuthenticationConfigurations()\n            throws Exception {\n        Map<String, String> authConfigs = new HashMap<String, String>();\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_LOGIN_CONTEXT,\n                \"QuorumLearner\");\n        authConfigs.put(QuorumAuth.QUORUM_SASL_AUTH_ENABLED, \"false\");\n\n        \r\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"false\");\n        MainThread mthread = new MainThread(1, PortAssignment.unique(), \"\",\n                authConfigs);\n        String args[] = new String[1];\n        args[0] = mthread.getConfFile().toString();\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args)\n                        throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            Assert.fail(\"Must throw exception as quorum sasl is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n\n        \r\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"false\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"true\");\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args)\n                        throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            Assert.fail(\"Must throw exception as quorum sasl is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/auth/QuorumDigestAuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testEnableQuorumServerRequireSaslWithoutQuorumLearnerRequireSasl() throws Exception {\n        Map<String, String> authConfigs = new HashMap<String, String>();\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_LOGIN_CONTEXT, \"QuorumLearner\");\n        authConfigs.put(QuorumAuth.QUORUM_SASL_AUTH_ENABLED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"false\");\n        MainThread mthread = new MainThread(1, PortAssignment.unique(), \"\", authConfigs);\n        String[] args = new String[1];\n        args[0] = mthread.getConfFile().toString();\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args) throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            fail(\"Must throw exception as quorumpeer learner is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":162,"groupId":"10183","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEnableQuorumServerRequireSaslWithoutQuorumLearnerRequireSasl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ed/86607c4f120a24b88d7a27a69833573c4432cd.src","preCode":"    public void testEnableQuorumServerRequireSaslWithoutQuorumLearnerRequireSasl()\n            throws Exception {\n        Map<String, String> authConfigs = new HashMap<String, String>();\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_LOGIN_CONTEXT,\n                \"QuorumLearner\");\n        authConfigs.put(QuorumAuth.QUORUM_SASL_AUTH_ENABLED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"false\");\n        MainThread mthread = new MainThread(1, PortAssignment.unique(), \"\",\n                authConfigs);\n        String args[] = new String[1];\n        args[0] = mthread.getConfFile().toString();\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args)\n                        throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            Assert.fail(\"Must throw exception as quorumpeer learner is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/auth/QuorumDigestAuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testEnableQuorumAuthenticationConfigurations() throws Exception {\n        Map<String, String> authConfigs = new HashMap<String, String>();\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_LOGIN_CONTEXT, \"QuorumLearner\");\n        authConfigs.put(QuorumAuth.QUORUM_SASL_AUTH_ENABLED, \"false\");\n\n        \r\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"false\");\n        MainThread mthread = new MainThread(1, PortAssignment.unique(), \"\", authConfigs);\n        String[] args = new String[1];\n        args[0] = mthread.getConfFile().toString();\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args) throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            fail(\"Must throw exception as quorum sasl is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n\n        \r\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"false\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"true\");\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args) throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            fail(\"Must throw exception as quorum sasl is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":207,"groupId":"10183","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEnableQuorumAuthenticationConfigurations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ed/86607c4f120a24b88d7a27a69833573c4432cd.src","preCode":"    public void testEnableQuorumAuthenticationConfigurations()\n            throws Exception {\n        Map<String, String> authConfigs = new HashMap<String, String>();\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_LOGIN_CONTEXT,\n                \"QuorumLearner\");\n        authConfigs.put(QuorumAuth.QUORUM_SASL_AUTH_ENABLED, \"false\");\n\n        \r\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"true\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"false\");\n        MainThread mthread = new MainThread(1, PortAssignment.unique(), \"\",\n                authConfigs);\n        String args[] = new String[1];\n        args[0] = mthread.getConfFile().toString();\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args)\n                        throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            Assert.fail(\"Must throw exception as quorum sasl is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n\n        \r\n        authConfigs.put(QuorumAuth.QUORUM_SERVER_SASL_AUTH_REQUIRED, \"false\");\n        authConfigs.put(QuorumAuth.QUORUM_LEARNER_SASL_AUTH_REQUIRED, \"true\");\n        try {\n            new QuorumPeerMain() {\n                @Override\n                protected void initializeAndRun(String[] args)\n                        throws ConfigException, IOException, AdminServer.AdminServerException {\n                    super.initializeAndRun(args);\n                }\n            }.initializeAndRun(args);\n            Assert.fail(\"Must throw exception as quorum sasl is not enabled!\");\n        } catch (ConfigException e) {\n            \r\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/auth/QuorumDigestAuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
