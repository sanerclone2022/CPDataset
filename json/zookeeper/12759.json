[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public QuorumMaj(Properties props) throws ConfigException {\n        for (Entry<Object, Object> entry : props.entrySet()) {\n            String key = entry.getKey().toString();\n            String value = entry.getValue().toString();\n\n            if (key.startsWith(\"server.\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                QuorumServer qs = new QuorumServer(sid, value);\n                allMembers.put(Long.valueOf(sid), qs);\n                if (qs.type == LearnerType.PARTICIPANT)\n                    votingMembers.put(Long.valueOf(sid), qs);\n                else {\n                    observingMembers.put(Long.valueOf(sid), qs);\n                }\n            } else if (key.equals(\"version\")) {\n                version = Long.parseLong(value, 16);\n            }\n        }\n        half = votingMembers.size() / 2;\n    }\n","date":"2018-10-05 20:25:43","endLine":101,"groupId":"2255","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"QuorumMaj","params":"(Propertiesprops)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/00/03c2aaa40fe15e81779077459d94f99878c261.src","preCode":"    public QuorumMaj(Properties props) throws ConfigException {\n        for (Entry<Object, Object> entry : props.entrySet()) {\n            String key = entry.getKey().toString();\n            String value = entry.getValue().toString();\n\n            if (key.startsWith(\"server.\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                QuorumServer qs = new QuorumServer(sid, value);\n                allMembers.put(Long.valueOf(sid), qs);\n                if (qs.type == LearnerType.PARTICIPANT)\n                    votingMembers.put(Long.valueOf(sid), qs);\n                else {\n                    observingMembers.put(Long.valueOf(sid), qs);\n                }\n            } else if (key.equals(\"version\")) {\n                version = Long.parseLong(value, 16);\n            }\n        }\n        half = votingMembers.size() / 2;\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    private void parse(Properties quorumProp) throws ConfigException{\n        for (Entry<Object, Object> entry : quorumProp.entrySet()) {\n            String key = entry.getKey().toString();\n            String value = entry.getValue().toString(); \n            \n            if (key.startsWith(\"server.\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                QuorumServer qs = new QuorumServer(sid, value);\n                allMembers.put(Long.valueOf(sid), qs);  \n                if (qs.type == LearnerType.PARTICIPANT) \n                   participatingMembers.put(Long.valueOf(sid), qs);\n                else {\n                   observingMembers.put(Long.valueOf(sid), qs);\n                }\n            } else if (key.startsWith(\"group\")) {\n                int dot = key.indexOf('.');\n                long gid = Long.parseLong(key.substring(dot + 1));\n                \n                numGroups++;\n                \n                String parts[] = value.split(\":\");\n                for(String s : parts){\n                    long sid = Long.parseLong(s);\n                    if(serverGroup.containsKey(sid))\n                        throw new ConfigException(\"Server \" + sid + \"is in multiple groups\");\n                    else\n                        serverGroup.put(sid, gid);\n                }\n                    \n                \n            } else if(key.startsWith(\"weight\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                serverWeight.put(sid, Long.parseLong(value));\n            } else if (key.equals(\"version\")){\n               version = Long.parseLong(value, 16);\n            }        \n        }\n        \n        for (QuorumServer qs: allMembers.values()){\n           Long id = qs.id;\n           if (qs.type == LearnerType.PARTICIPANT){\n               if (!serverGroup.containsKey(id)) \n                   throw new ConfigException(\"Server \" + id + \"is not in a group\");\n               if (!serverWeight.containsKey(id))\n                   serverWeight.put(id, (long) 1);\n            }\n        }\n           \n           \n        computeGroupWeight();\n    }\n","date":"2018-10-05 20:25:43","endLine":239,"groupId":"2255","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(PropertiesquorumProp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/40/4aa8ceadf23e37ae807e4ad358421a06b21a6d.src","preCode":"    private void parse(Properties quorumProp) throws ConfigException{\n        for (Entry<Object, Object> entry : quorumProp.entrySet()) {\n            String key = entry.getKey().toString();\n            String value = entry.getValue().toString(); \n            \n            if (key.startsWith(\"server.\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                QuorumServer qs = new QuorumServer(sid, value);\n                allMembers.put(Long.valueOf(sid), qs);  \n                if (qs.type == LearnerType.PARTICIPANT) \n                   participatingMembers.put(Long.valueOf(sid), qs);\n                else {\n                   observingMembers.put(Long.valueOf(sid), qs);\n                }\n            } else if (key.startsWith(\"group\")) {\n                int dot = key.indexOf('.');\n                long gid = Long.parseLong(key.substring(dot + 1));\n                \n                numGroups++;\n                \n                String parts[] = value.split(\":\");\n                for(String s : parts){\n                    long sid = Long.parseLong(s);\n                    if(serverGroup.containsKey(sid))\n                        throw new ConfigException(\"Server \" + sid + \"is in multiple groups\");\n                    else\n                        serverGroup.put(sid, gid);\n                }\n                    \n                \n            } else if(key.startsWith(\"weight\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                serverWeight.put(sid, Long.parseLong(value));\n            } else if (key.equals(\"version\")){\n               version = Long.parseLong(value, 16);\n            }        \n        }\n        \n        for (QuorumServer qs: allMembers.values()){\n           Long id = qs.id;\n           if (qs.type == LearnerType.PARTICIPANT){\n               if (!serverGroup.containsKey(id)) \n                   throw new ConfigException(\"Server \" + id + \"is not in a group\");\n               if (!serverWeight.containsKey(id))\n                   serverWeight.put(id, (long) 1);\n            }\n        }\n           \n           \n        computeGroupWeight();\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public QuorumMaj(Properties props) throws ConfigException {\n        for (Entry<Object, Object> entry : props.entrySet()) {\n            String key = entry.getKey().toString();\n            String value = entry.getValue().toString();\n\n            if (key.startsWith(\"server.\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                QuorumServer qs = new QuorumServer(sid, value);\n                allMembers.put(Long.valueOf(sid), qs);\n                if (qs.type == LearnerType.PARTICIPANT) {\n                    votingMembers.put(Long.valueOf(sid), qs);\n                } else {\n                    observingMembers.put(Long.valueOf(sid), qs);\n                }\n            } else if (key.equals(\"version\")) {\n                version = Long.parseLong(value, 16);\n            }\n        }\n        half = votingMembers.size() / 2;\n    }\n","date":"2019-08-17 23:13:15","endLine":104,"groupId":"12759","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"QuorumMaj","params":"(Propertiesprops)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/6e/6f1c2887d2bfcc1682f0df39ec07bbe4bcac31.src","preCode":"    public QuorumMaj(Properties props) throws ConfigException {\n        for (Entry<Object, Object> entry : props.entrySet()) {\n            String key = entry.getKey().toString();\n            String value = entry.getValue().toString();\n\n            if (key.startsWith(\"server.\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                QuorumServer qs = new QuorumServer(sid, value);\n                allMembers.put(Long.valueOf(sid), qs);\n                if (qs.type == LearnerType.PARTICIPANT)\n                    votingMembers.put(Long.valueOf(sid), qs);\n                else {\n                    observingMembers.put(Long.valueOf(sid), qs);\n                }\n            } else if (key.equals(\"version\")) {\n                version = Long.parseLong(value, 16);\n            }\n        }\n        half = votingMembers.size() / 2;\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    private void parse(Properties quorumProp) throws ConfigException {\n        for (Entry<Object, Object> entry : quorumProp.entrySet()) {\n            String key = entry.getKey().toString();\n            String value = entry.getValue().toString();\n\n            if (key.startsWith(\"server.\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                QuorumServer qs = new QuorumServer(sid, value);\n                allMembers.put(Long.valueOf(sid), qs);\n                if (qs.type == LearnerType.PARTICIPANT) {\n                    participatingMembers.put(Long.valueOf(sid), qs);\n                } else {\n                    observingMembers.put(Long.valueOf(sid), qs);\n                }\n            } else if (key.startsWith(\"group\")) {\n                int dot = key.indexOf('.');\n                long gid = Long.parseLong(key.substring(dot + 1));\n\n                numGroups++;\n\n                String[] parts = value.split(\":\");\n                for (String s : parts) {\n                    long sid = Long.parseLong(s);\n                    if (serverGroup.containsKey(sid)) {\n                        throw new ConfigException(\"Server \" + sid + \"is in multiple groups\");\n                    } else {\n                        serverGroup.put(sid, gid);\n                    }\n                }\n\n            } else if (key.startsWith(\"weight\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                serverWeight.put(sid, Long.parseLong(value));\n            } else if (key.equals(\"version\")) {\n                version = Long.parseLong(value, 16);\n            }\n        }\n\n        for (QuorumServer qs : allMembers.values()) {\n            Long id = qs.id;\n            if (qs.type == LearnerType.PARTICIPANT) {\n                if (!serverGroup.containsKey(id)) {\n                    throw new ConfigException(\"Server \" + id + \"is not in a group\");\n                }\n                if (!serverWeight.containsKey(id)) {\n                    serverWeight.put(id, (long) 1);\n                }\n            }\n        }\n\n        computeGroupWeight();\n    }\n","date":"2019-08-17 23:13:15","endLine":240,"groupId":"12759","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(PropertiesquorumProp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f4/5aa1bced5c3b8665e12d4d71fae4c4a9566ab3.src","preCode":"    private void parse(Properties quorumProp) throws ConfigException{\n        for (Entry<Object, Object> entry : quorumProp.entrySet()) {\n            String key = entry.getKey().toString();\n            String value = entry.getValue().toString(); \n            \n            if (key.startsWith(\"server.\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                QuorumServer qs = new QuorumServer(sid, value);\n                allMembers.put(Long.valueOf(sid), qs);  \n                if (qs.type == LearnerType.PARTICIPANT) \n                   participatingMembers.put(Long.valueOf(sid), qs);\n                else {\n                   observingMembers.put(Long.valueOf(sid), qs);\n                }\n            } else if (key.startsWith(\"group\")) {\n                int dot = key.indexOf('.');\n                long gid = Long.parseLong(key.substring(dot + 1));\n                \n                numGroups++;\n                \n                String parts[] = value.split(\":\");\n                for(String s : parts){\n                    long sid = Long.parseLong(s);\n                    if(serverGroup.containsKey(sid))\n                        throw new ConfigException(\"Server \" + sid + \"is in multiple groups\");\n                    else\n                        serverGroup.put(sid, gid);\n                }\n                    \n                \n            } else if(key.startsWith(\"weight\")) {\n                int dot = key.indexOf('.');\n                long sid = Long.parseLong(key.substring(dot + 1));\n                serverWeight.put(sid, Long.parseLong(value));\n            } else if (key.equals(\"version\")){\n               version = Long.parseLong(value, 16);\n            }        \n        }\n        \n        for (QuorumServer qs: allMembers.values()){\n           Long id = qs.id;\n           if (qs.type == LearnerType.PARTICIPANT){\n               if (!serverGroup.containsKey(id)) \n                   throw new ConfigException(\"Server \" + id + \"is not in a group\");\n               if (!serverWeight.containsKey(id))\n                   serverWeight.put(id, (long) 1);\n            }\n        }\n           \n           \n        computeGroupWeight();\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
