[{"authorTime":"2018-11-23 00:56:01","codes":[{"authorDate":"2018-11-23 00:56:01","commitOrder":2,"curCode":"        public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n            if (LOG.isTraceEnabled()) {\n                LOG.trace(\"Channel inactive {}\", ctx.channel());\n            }\n            allChannels.remove(ctx.channel());\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isTraceEnabled()) {\n                    LOG.trace(\"Channel inactive caused close {}\", cnxn);\n                }\n                cnxn.close();\n            }\n        }\n","date":"2018-11-23 00:56:01","endLine":144,"groupId":"1966","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"channelInactive","params":"(ChannelHandlerContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/99/de0e6eda8e6302181a4c2f8f5d4c8d3451ffad.src","preCode":"        public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n            if (LOG.isTraceEnabled()) {\n                LOG.trace(\"Channel inactive {}\", ctx.channel());\n            }\n            allChannels.remove(ctx.channel());\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isTraceEnabled()) {\n                    LOG.trace(\"Channel inactive caused close {}\", cnxn);\n                }\n                cnxn.close();\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"},{"authorDate":"2018-11-23 00:56:01","commitOrder":2,"curCode":"        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n            LOG.warn(\"Exception caught\", cause);\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Closing {}\", cnxn);\n                }\n                cnxn.close();\n            }\n        }\n","date":"2018-11-23 00:56:01","endLine":156,"groupId":"4383","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"exceptionCaught","params":"(ChannelHandlerContextctx@Throwablecause)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/99/de0e6eda8e6302181a4c2f8f5d4c8d3451ffad.src","preCode":"        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n            LOG.warn(\"Exception caught\", cause);\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Closing {}\", cnxn);\n                }\n                cnxn.close();\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"MB"}],"commitId":"caca062767c36525e6ecead2ae0f34c447394809","commitMessage":"@@@ZOOKEEPER-3152: Port ZK netty stack to netty4\n\nSummary: Ported the client connection netty stack from netty3 to netty4. This includes both the server side (NettyServerCnxn and friends) and the client side (ClientCnxnSocketNetty).\n\nTest Plan: Modified `FourLetterWordsTest` and `NettyServerCnxnTest`.  plus manual testing on a regional ensemble.\n\nFB Reviewers: nixon\n\nAuthor: Ilya Maykov <ilyam@fb.com>\n\nReviewers: andor@apache.org\n\nCloses #669 from ivmaykov/ZOOKEEPER-3152\n","date":"2018-11-23 00:56:01","modifiedFileCount":"12","status":"M","submitter":"Ilya Maykov"},{"authorTime":"2019-07-03 06:44:25","codes":[{"authorDate":"2019-07-03 06:44:25","commitOrder":3,"curCode":"        public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n            if (LOG.isTraceEnabled()) {\n                LOG.trace(\"Channel inactive {}\", ctx.channel());\n            }\n            allChannels.remove(ctx.channel());\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isTraceEnabled()) {\n                    LOG.trace(\"Channel inactive caused close {}\", cnxn);\n                }\n                cnxn.close(ServerCnxn.DisconnectReason.CHANNEL_DISCONNECTED);\n            }\n        }\n","date":"2019-07-03 06:44:25","endLine":225,"groupId":"1966","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"channelInactive","params":"(ChannelHandlerContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/9a/05df6fc68e2e5c3cc32e989b4c633049021093.src","preCode":"        public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n            if (LOG.isTraceEnabled()) {\n                LOG.trace(\"Channel inactive {}\", ctx.channel());\n            }\n            allChannels.remove(ctx.channel());\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isTraceEnabled()) {\n                    LOG.trace(\"Channel inactive caused close {}\", cnxn);\n                }\n                cnxn.close();\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"M"},{"authorDate":"2019-07-03 06:44:25","commitOrder":3,"curCode":"        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n            LOG.warn(\"Exception caught\", cause);\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Closing {}\", cnxn);\n                }\n                cnxn.close(ServerCnxn.DisconnectReason.CHANNEL_CLOSED_EXCEPTION);\n            }\n        }\n","date":"2019-07-03 06:44:25","endLine":237,"groupId":"4383","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"exceptionCaught","params":"(ChannelHandlerContextctx@Throwablecause)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/9a/05df6fc68e2e5c3cc32e989b4c633049021093.src","preCode":"        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n            LOG.warn(\"Exception caught\", cause);\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Closing {}\", cnxn);\n                }\n                cnxn.close();\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"M"}],"commitId":"9bee98bd06f50a2085785406a1084f75c652ada1","commitMessage":"@@@ZOOKEEPER-3439: Observability improvements on client / server connection close.\n\nCurrently when server closes a client connection there is not enough information recorded (except few exception logs) which makes it hard to do postmortems. On the other side.  having a complete view of the aggregated connection closing reason will provide more signals based on which we can better operate the clusters (e.g. predicate an incident might happen based on the trending of the connection closing reasons).\n\nServer metrics was not added in this PR as we internally use a different metrics system - so some work needed to migrate to ServerMetrics. Want to submit first to get community feedback on this.\n\nAuthor: Michael Han <lhan@twitter.com>\n\nReviewers: Enrico Olivelli <eolivelli@gmail.com>.  maoling <maoling199210191@sina.com>.  enixon\n\nCloses #997 from hanm/twitter/cc6d87505d9745caace2c86acf58d6ffa085281e\n","date":"2019-07-03 06:44:25","modifiedFileCount":"14","status":"M","submitter":"Michael Han"},{"authorTime":"2019-08-03 14:42:39","codes":[{"authorDate":"2019-07-03 06:44:25","commitOrder":4,"curCode":"        public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n            if (LOG.isTraceEnabled()) {\n                LOG.trace(\"Channel inactive {}\", ctx.channel());\n            }\n            allChannels.remove(ctx.channel());\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isTraceEnabled()) {\n                    LOG.trace(\"Channel inactive caused close {}\", cnxn);\n                }\n                cnxn.close(ServerCnxn.DisconnectReason.CHANNEL_DISCONNECTED);\n            }\n        }\n","date":"2019-07-03 06:44:25","endLine":225,"groupId":"1966","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"channelInactive","params":"(ChannelHandlerContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/9a/05df6fc68e2e5c3cc32e989b4c633049021093.src","preCode":"        public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n            if (LOG.isTraceEnabled()) {\n                LOG.trace(\"Channel inactive {}\", ctx.channel());\n            }\n            allChannels.remove(ctx.channel());\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isTraceEnabled()) {\n                    LOG.trace(\"Channel inactive caused close {}\", cnxn);\n                }\n                cnxn.close(ServerCnxn.DisconnectReason.CHANNEL_DISCONNECTED);\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"N"},{"authorDate":"2019-08-03 14:42:39","commitOrder":4,"curCode":"        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n            LOG.warn(\"Exception caught\", cause);\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                LOG.debug(\"Closing {}\", cnxn);\n                cnxn.close(ServerCnxn.DisconnectReason.CHANNEL_CLOSED_EXCEPTION);\n            }\n        }\n","date":"2019-08-03 14:42:39","endLine":238,"groupId":"3405","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"exceptionCaught","params":"(ChannelHandlerContextctx@Throwablecause)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/89/28c53cfbc06dc51df04f3fceb9011e1014d735.src","preCode":"        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n            LOG.warn(\"Exception caught\", cause);\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Closing {}\", cnxn);\n                }\n                cnxn.close(ServerCnxn.DisconnectReason.CHANNEL_CLOSED_EXCEPTION);\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"}],"commitId":"d84b7a682eb4601005db9fac886079b1a9a4d4b0","commitMessage":"@@@ZOOKEEPER-3339: Improve Debug and Trace Log Statements\n\nAuthor: Beluga Behr <dam6923@gmail.com>\n\nReviewers: andor@apache.org.  nkalmar@apache.org.  maoling@apache.org.  fangmin@apache.org\n\nCloses #878 from belugabehr/ZOOKEEPER-3339\n","date":"2019-08-03 14:42:39","modifiedFileCount":"33","status":"M","submitter":"Beluga Behr"},{"authorTime":"2019-11-24 00:08:23","codes":[{"authorDate":"2019-11-24 00:08:23","commitOrder":5,"curCode":"        public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n            if (LOG.isTraceEnabled()) {\n                LOG.trace(\"Channel inactive {}\", ctx.channel());\n            }\n\n            allChannels.remove(ctx.channel());\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isTraceEnabled()) {\n                    LOG.trace(\"Channel inactive caused close {}\", cnxn);\n                }\n                updateHandshakeCountIfStarted(cnxn);\n                cnxn.close(ServerCnxn.DisconnectReason.CHANNEL_DISCONNECTED);\n            }\n        }\n","date":"2019-11-24 00:08:23","endLine":269,"groupId":"10732","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"channelInactive","params":"(ChannelHandlerContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/78/e03029fa271db184e3f6efae756805d87b0891.src","preCode":"        public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n            if (LOG.isTraceEnabled()) {\n                LOG.trace(\"Channel inactive {}\", ctx.channel());\n            }\n\n            allChannels.remove(ctx.channel());\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                if (LOG.isTraceEnabled()) {\n                    LOG.trace(\"Channel inactive caused close {}\", cnxn);\n                }\n                cnxn.close(ServerCnxn.DisconnectReason.CHANNEL_DISCONNECTED);\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"M"},{"authorDate":"2019-11-24 00:08:23","commitOrder":5,"curCode":"        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n            LOG.warn(\"Exception caught\", cause);\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                LOG.debug(\"Closing {}\", cnxn);\n                updateHandshakeCountIfStarted(cnxn);\n                cnxn.close(ServerCnxn.DisconnectReason.CHANNEL_CLOSED_EXCEPTION);\n            }\n        }\n","date":"2019-11-24 00:08:23","endLine":280,"groupId":"10732","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"exceptionCaught","params":"(ChannelHandlerContextctx@Throwablecause)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/78/e03029fa271db184e3f6efae756805d87b0891.src","preCode":"        public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n            LOG.warn(\"Exception caught\", cause);\n            NettyServerCnxn cnxn = ctx.channel().attr(CONNECTION_ATTRIBUTE).getAndSet(null);\n            if (cnxn != null) {\n                LOG.debug(\"Closing {}\", cnxn);\n                cnxn.close(ServerCnxn.DisconnectReason.CHANNEL_CLOSED_EXCEPTION);\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"}],"commitId":"804095c060e3b11c33b201a304031dc3ac18cfb6","commitMessage":"@@@ZOOKEEPER-3473: Improving successful TLS handshake throughput with concurrent control\n\nWhen there are lots of clients trying to re-establish sessions.  there might be lots of half finished handshake timed out.  and those failed ones keep reconnecting to another server and restarting the handshake from beginning again.  which caused herd effect.\n\nAnd the number of total ZK sessions could be supported within session timeout are impacted a lot after enabling TLS.\n\nTo improve the throughput.  we added the TLS concurrent control to reduce the herd effect.  and from out benchmark this doubled the sessions we could support within session timeout.\n\nE2E test result:\n\nTested performance and correctness from E2E. For correctness.  tested both secure and insecure\nconnections.  the outstandingHandshakeNum will go to 0 eventually.\n\nFor performance.  tested with 110k sessions with 10s session timeout.  there is no session expire when leader election triggered.  while before it can only support 50k sessions.\n\nAuthor: Fangmin Lyu <fangmin@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Andor Molnar <andor@apache.org>\n\nCloses #1027 from lvfangmin/ZOOKEEPER-3473\n","date":"2019-11-24 00:08:23","modifiedFileCount":"6","status":"M","submitter":"Fangmin Lyu"}]
