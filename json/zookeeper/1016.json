[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testValidSaslIds() throws Exception {\n        ZooKeeper zk = createClient();\n\n        List<String> validIds = new ArrayList<String>();\n        validIds.add(\"user\");\n        validIds.add(\"service/host.name.com\");\n        validIds.add(\"user@KERB.REALM\");\n        validIds.add(\"service/host.name.com@KERB.REALM\");\n\n        int i = 0;\n        for(String validId: validIds) {\n            List<ACL> aclList = new ArrayList<ACL>();\n            ACL acl = new ACL(0,new Id(\"sasl\",validId));\n            aclList.add(acl);\n            zk.create(\"/valid\"+i,null,aclList,CreateMode.PERSISTENT);\n            i++;\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":144,"groupId":"3272","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testValidSaslIds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/08/8fe1f02752cd830c6970fe4f64012159d13126.src","preCode":"    public void testValidSaslIds() throws Exception {\n        ZooKeeper zk = createClient();\n\n        List<String> validIds = new ArrayList<String>();\n        validIds.add(\"user\");\n        validIds.add(\"service/host.name.com\");\n        validIds.add(\"user@KERB.REALM\");\n        validIds.add(\"service/host.name.com@KERB.REALM\");\n\n        int i = 0;\n        for(String validId: validIds) {\n            List<ACL> aclList = new ArrayList<ACL>();\n            ACL acl = new ACL(0,new Id(\"sasl\",validId));\n            aclList.add(acl);\n            zk.create(\"/valid\"+i,null,aclList,CreateMode.PERSISTENT);\n            i++;\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/SaslAuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testInvalidSaslIds() throws Exception {\n        ZooKeeper zk = createClient();\n\n        List<String> invalidIds = new ArrayList<String>();\n        invalidIds.add(\"user@KERB.REALM/server.com\");\n        invalidIds.add(\"user@KERB.REALM1@KERB.REALM2\");\n\n        int i = 0;\n        for(String invalidId: invalidIds) {\n            List<ACL> aclList = new ArrayList<ACL>();\n            try {\n                ACL acl = new ACL(0,new Id(\"sasl\",invalidId));\n                aclList.add(acl);\n                zk.create(\"/invalid\"+i,null,aclList,CreateMode.PERSISTENT);\n                Assert.fail(\"SASLAuthenticationProvider.isValid() failed to catch invalid Id.\");\n            }\n            catch (KeeperException.InvalidACLException e) {\n                \r\n            }\n            finally {\n                i++;\n            }\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":170,"groupId":"2498","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidSaslIds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/08/8fe1f02752cd830c6970fe4f64012159d13126.src","preCode":"    public void testInvalidSaslIds() throws Exception {\n        ZooKeeper zk = createClient();\n\n        List<String> invalidIds = new ArrayList<String>();\n        invalidIds.add(\"user@KERB.REALM/server.com\");\n        invalidIds.add(\"user@KERB.REALM1@KERB.REALM2\");\n\n        int i = 0;\n        for(String invalidId: invalidIds) {\n            List<ACL> aclList = new ArrayList<ACL>();\n            try {\n                ACL acl = new ACL(0,new Id(\"sasl\",invalidId));\n                aclList.add(acl);\n                zk.create(\"/invalid\"+i,null,aclList,CreateMode.PERSISTENT);\n                Assert.fail(\"SASLAuthenticationProvider.isValid() failed to catch invalid Id.\");\n            }\n            catch (KeeperException.InvalidACLException e) {\n                \r\n            }\n            finally {\n                i++;\n            }\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/SaslAuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":2,"curCode":"    public void testValidSaslIds() throws Exception {\n        ZooKeeper zk = createClient();\n\n        List<String> validIds = new ArrayList<String>();\n        validIds.add(\"user\");\n        validIds.add(\"service/host.name.com\");\n        validIds.add(\"user@KERB.REALM\");\n        validIds.add(\"service/host.name.com@KERB.REALM\");\n\n        int i = 0;\n        for(String validId: validIds) {\n            List<ACL> aclList = new ArrayList<ACL>();\n            ACL acl = new ACL(0,new Id(\"sasl\",validId));\n            aclList.add(acl);\n            zk.create(\"/valid\"+i,null,aclList,CreateMode.PERSISTENT);\n            i++;\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":144,"groupId":"1016","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testValidSaslIds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/08/8fe1f02752cd830c6970fe4f64012159d13126.src","preCode":"    public void testValidSaslIds() throws Exception {\n        ZooKeeper zk = createClient();\n\n        List<String> validIds = new ArrayList<String>();\n        validIds.add(\"user\");\n        validIds.add(\"service/host.name.com\");\n        validIds.add(\"user@KERB.REALM\");\n        validIds.add(\"service/host.name.com@KERB.REALM\");\n\n        int i = 0;\n        for(String validId: validIds) {\n            List<ACL> aclList = new ArrayList<ACL>();\n            ACL acl = new ACL(0,new Id(\"sasl\",validId));\n            aclList.add(acl);\n            zk.create(\"/valid\"+i,null,aclList,CreateMode.PERSISTENT);\n            i++;\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/SaslAuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"N"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testInvalidSaslIds() throws Exception {\n        ZooKeeper zk = createClient();\n\n        List<String> invalidIds = new ArrayList<String>();\n        invalidIds.add(\"user@KERB.REALM/server.com\");\n        invalidIds.add(\"user@KERB.REALM1@KERB.REALM2\");\n\n        int i = 0;\n        for (String invalidId : invalidIds) {\n            List<ACL> aclList = new ArrayList<ACL>();\n            try {\n                ACL acl = new ACL(0, new Id(\"sasl\", invalidId));\n                aclList.add(acl);\n                zk.create(\"/invalid\" + i, null, aclList, CreateMode.PERSISTENT);\n                fail(\"SASLAuthenticationProvider.isValid() failed to catch invalid Id.\");\n            } catch (KeeperException.InvalidACLException e) {\n                \r\n            } finally {\n                i++;\n            }\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":166,"groupId":"1016","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidSaslIds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/a6/3ab10145ace70ae18ac38e2ea0751f57c802ae.src","preCode":"    public void testInvalidSaslIds() throws Exception {\n        ZooKeeper zk = createClient();\n\n        List<String> invalidIds = new ArrayList<String>();\n        invalidIds.add(\"user@KERB.REALM/server.com\");\n        invalidIds.add(\"user@KERB.REALM1@KERB.REALM2\");\n\n        int i = 0;\n        for(String invalidId: invalidIds) {\n            List<ACL> aclList = new ArrayList<ACL>();\n            try {\n                ACL acl = new ACL(0,new Id(\"sasl\",invalidId));\n                aclList.add(acl);\n                zk.create(\"/invalid\"+i,null,aclList,CreateMode.PERSISTENT);\n                Assert.fail(\"SASLAuthenticationProvider.isValid() failed to catch invalid Id.\");\n            }\n            catch (KeeperException.InvalidACLException e) {\n                \r\n            }\n            finally {\n                i++;\n            }\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/SaslAuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
