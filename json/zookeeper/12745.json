[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2019-06-14 15:06:42","commitOrder":2,"curCode":"    ByteBuffer createMsg(int state, long leader, long zxid, long epoch){\n        byte requestBytes[] = new byte[28];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n\n        \r\n\r\n\n\n        requestBuffer.clear();\n        requestBuffer.putInt(state);\n        requestBuffer.putLong(leader);\n        requestBuffer.putLong(zxid);\n        requestBuffer.putLong(epoch);\n\n        return requestBuffer;\n    }\n","date":"2019-06-14 15:06:42","endLine":110,"groupId":"677","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createMsg","params":"(intstate@longleader@longzxid@longepoch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d3/a631b7f5d51de567ae06f679cc3a1ba228aec5.src","preCode":"    ByteBuffer createMsg(int state, long leader, long zxid, long epoch){\n        byte requestBytes[] = new byte[28];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n\n        \r\n\r\n\n\n        requestBuffer.clear();\n        requestBuffer.putInt(state);\n        requestBuffer.putLong(leader);\n        requestBuffer.putLong(zxid);\n        requestBuffer.putLong(epoch);\n\n        return requestBuffer;\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":2,"curCode":"    static ByteBuffer buildMsg(int state,\n            long leader,\n            long zxid,\n            long electionEpoch,\n            long epoch,\n            byte[] configData) {\n        byte requestBytes[] = new byte[44 + configData.length];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n\n        \r\n\r\n\n\n        requestBuffer.clear();\n        requestBuffer.putInt(state);\n        requestBuffer.putLong(leader);\n        requestBuffer.putLong(zxid);\n        requestBuffer.putLong(electionEpoch);\n        requestBuffer.putLong(epoch);\n        requestBuffer.putInt(Notification.CURRENTVERSION);\n        requestBuffer.putInt(configData.length);\n        requestBuffer.put(configData);\n\n        return requestBuffer;\n    }\n","date":"2018-10-05 20:25:43","endLine":603,"groupId":"677","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildMsg","params":"(intstate@longleader@longzxid@longelectionEpoch@longepoch@byte[]configData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/5e/8a6caaa280649ef34dbdc8dc148fc8a397cf41.src","preCode":"    static ByteBuffer buildMsg(int state,\n            long leader,\n            long zxid,\n            long electionEpoch,\n            long epoch,\n            byte[] configData) {\n        byte requestBytes[] = new byte[44 + configData.length];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n\n        \r\n\r\n\n\n        requestBuffer.clear();\n        requestBuffer.putInt(state);\n        requestBuffer.putLong(leader);\n        requestBuffer.putLong(zxid);\n        requestBuffer.putLong(electionEpoch);\n        requestBuffer.putLong(epoch);\n        requestBuffer.putInt(Notification.CURRENTVERSION);\n        requestBuffer.putInt(configData.length);\n        requestBuffer.put(configData);\n\n        return requestBuffer;\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":579,"status":"NB"}],"commitId":"5874a0f355417024ce8ebe03ab2f6eaf5b9a228c","commitMessage":"@@@ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum\n\nThe quorum connection manager is handling connections sequentially with a default listen backlog queue size 50.  during the network loss.  there are socket read timed out.  which is syncLimit * tickTime.  and almost all the following connect requests in the backlog queue will timed out from the other side before it's being processed.\n\nThose timed out learners will try to connect to a different server.  and leaves the connect requests on server side without sending the close_notify packet. The server is slowly consuming from these queue with syncLimit * tickTime timeout for each of those requests which haven't sent notify_close packet. Any new connect requests will be queued up again when there is spot in the listen backlog queue.  but timed out before the server handles it.  and it can never successfully finish any new connection.  and it failed to join the quorum.\n\nPlease check the Jira for more details.\n\nAuthor: Fangmin Lyu <fangmin@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Andor Moln?r <andor@apache.org>\n\nCloses #843 from lvfangmin/ZOOKEEPER-3296\n","date":"2019-06-14 15:06:42","modifiedFileCount":"2","status":"M","submitter":"Fangmin Lyu"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":3,"curCode":"    ByteBuffer createMsg(int state, long leader, long zxid, long epoch) {\n        byte[] requestBytes = new byte[28];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n\n        \r\n\r\n\n\n        requestBuffer.clear();\n        requestBuffer.putInt(state);\n        requestBuffer.putLong(leader);\n        requestBuffer.putLong(zxid);\n        requestBuffer.putLong(epoch);\n\n        return requestBuffer;\n    }\n","date":"2019-08-17 23:13:15","endLine":106,"groupId":"12745","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createMsg","params":"(intstate@longleader@longzxid@longepoch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/01/3ca53f8fc3867874c84b4b50ace8e197c9fa2d.src","preCode":"    ByteBuffer createMsg(int state, long leader, long zxid, long epoch){\n        byte requestBytes[] = new byte[28];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n\n        \r\n\r\n\n\n        requestBuffer.clear();\n        requestBuffer.putInt(state);\n        requestBuffer.putLong(leader);\n        requestBuffer.putLong(zxid);\n        requestBuffer.putLong(epoch);\n\n        return requestBuffer;\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":3,"curCode":"    static ByteBuffer buildMsg(int state, long leader, long zxid, long electionEpoch, long epoch, byte[] configData) {\n        byte[] requestBytes = new byte[44 + configData.length];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n\n        \r\n\r\n\n\n        requestBuffer.clear();\n        requestBuffer.putInt(state);\n        requestBuffer.putLong(leader);\n        requestBuffer.putLong(zxid);\n        requestBuffer.putLong(electionEpoch);\n        requestBuffer.putLong(epoch);\n        requestBuffer.putInt(Notification.CURRENTVERSION);\n        requestBuffer.putInt(configData.length);\n        requestBuffer.put(configData);\n\n        return requestBuffer;\n    }\n","date":"2019-08-17 23:13:15","endLine":592,"groupId":"12745","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildMsg","params":"(intstate@longleader@longzxid@longelectionEpoch@longepoch@byte[]configData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/4e/010b76d5e616340f7b57718c46827d16813251.src","preCode":"    static ByteBuffer buildMsg(int state,\n            long leader,\n            long zxid,\n            long electionEpoch,\n            long epoch,\n            byte[] configData) {\n        byte requestBytes[] = new byte[44 + configData.length];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n\n        \r\n\r\n\n\n        requestBuffer.clear();\n        requestBuffer.putInt(state);\n        requestBuffer.putLong(leader);\n        requestBuffer.putLong(zxid);\n        requestBuffer.putLong(electionEpoch);\n        requestBuffer.putLong(epoch);\n        requestBuffer.putInt(Notification.CURRENTVERSION);\n        requestBuffer.putInt(configData.length);\n        requestBuffer.put(configData);\n\n        return requestBuffer;\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":573,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
