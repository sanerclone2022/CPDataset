[{"authorTime":"2019-08-09 22:15:20","codes":[{"authorDate":"2019-08-09 22:15:20","commitOrder":2,"curCode":"    public void deletePath(final String path) {\n        Objects.requireNonNull(path, \"Path cannot be null\");\n\n        final String[] pathComponents = StringUtils.split(path, '/');\n        if (pathComponents.length == 0) {\n            throw new IllegalArgumentException(\"Invalid path: \" + path);\n        }\n\n        writeLock.lock();\n        try {\n            TrieNode parent = rootNode;\n            for (final String part : pathComponents) {\n                if (parent.getChild(part) == null) {\n                    \r\n                    return;\n                }\n                parent = parent.getChild(part);\n                LOG.debug(\"{}\", parent);\n            }\n\n            final TrieNode realParent = parent.getParent();\n            realParent.deleteChild(parent.getValue());\n        } finally {\n            writeLock.unlock();\n        }\n    }\n","date":"2019-08-09 22:15:20","endLine":258,"groupId":"2057","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deletePath","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/0a/96b27ce8900e993794006a819286738c2588a1.src","preCode":"    public void deletePath(final String path) {\n        Objects.requireNonNull(path, \"Path cannot be null\");\n\n        final String[] pathComponents = StringUtils.split(path, '/');\n        if (pathComponents.length == 0) {\n            throw new IllegalArgumentException(\"Invalid path: \" + path);\n        }\n\n        writeLock.lock();\n        try {\n            TrieNode parent = rootNode;\n            for (final String part : pathComponents) {\n                if (parent.getChild(part) == null) {\n                    \r\n                    return;\n                }\n                parent = parent.getChild(part);\n                LOG.debug(\"{}\", parent);\n            }\n\n            final TrieNode realParent = parent.getParent();\n            realParent.deleteChild(parent.getValue());\n        } finally {\n            writeLock.unlock();\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/common/PathTrie.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"MB"},{"authorDate":"2019-08-09 22:15:20","commitOrder":2,"curCode":"    public boolean existsNode(final String path) {\n      Objects.requireNonNull(path, \"Path cannot be null\");\n\n      final String[] pathComponents = StringUtils.split(path, '/');\n      if (pathComponents.length == 0) {\n          throw new IllegalArgumentException(\"Invalid path: \" + path);\n      }\n\n      readLock.lock();\n      try {\n          TrieNode parent = rootNode;\n          for (final String part : pathComponents) {\n              if (parent.getChild(part) == null) {\n                  \r\n                  return false;\n              }\n              parent = parent.getChild(part);\n              LOG.debug(\"{}\", parent);\n          }\n      } finally {\n          readLock.unlock();\n      }\n      return true;\n    }\n","date":"2019-08-09 22:15:20","endLine":290,"groupId":"2057","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"existsNode","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/0a/96b27ce8900e993794006a819286738c2588a1.src","preCode":"    public boolean existsNode(final String path) {\n      Objects.requireNonNull(path, \"Path cannot be null\");\n\n      final String[] pathComponents = StringUtils.split(path, '/');\n      if (pathComponents.length == 0) {\n          throw new IllegalArgumentException(\"Invalid path: \" + path);\n      }\n\n      readLock.lock();\n      try {\n          TrieNode parent = rootNode;\n          for (final String part : pathComponents) {\n              if (parent.getChild(part) == null) {\n                  \r\n                  return false;\n              }\n              parent = parent.getChild(part);\n              LOG.debug(\"{}\", parent);\n          }\n      } finally {\n          readLock.unlock();\n      }\n      return true;\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/common/PathTrie.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"B"}],"commitId":"04cc5cae1e7d4b007490e68109a676b88ce790a3","commitMessage":"@@@ZOOKEEPER-3347: Improve PathTrie Consistency\n\nAuthor: Beluga Behr <dam6923@gmail.com>\nAuthor: apache <dam6923@gmail.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #888 from belugabehr/ZOOKEEPER-3347 and squashes the following commits:\n\nbb9efee81 [apache] Added unit tests\n4f8dc4b04 [apache] Fixed double-locking\n34b61838d [Beluga Behr] Simplified further\n6c6ec6c18 [Beluga Behr] ZOOKEEPER-3347: Improve PathTrie Consistency\n","date":"2019-08-09 22:15:20","modifiedFileCount":"3","status":"M","submitter":"Beluga Behr"},{"authorTime":"2020-10-06 18:39:37","codes":[{"authorDate":"2020-10-06 18:39:37","commitOrder":3,"curCode":"     public void deletePath(final String path) {\n         Objects.requireNonNull(path, \"Path cannot be null\");\n\n         if (path.length() == 0) {\n             throw new IllegalArgumentException(\"Invalid path: \" + path);\n         }\n         final String[] pathComponents = split(path);\n\n\n         writeLock.lock();\n         try {\n             TrieNode parent = rootNode;\n             for (final String part : pathComponents) {\n                 if (parent.getChild(part) == null) {\n                     \r\n                     return;\n                 }\n                 parent = parent.getChild(part);\n                 LOG.debug(\"{}\", parent);\n             }\n\n             final TrieNode realParent = parent.getParent();\n             realParent.deleteChild(parent.getValue());\n         } finally {\n             writeLock.unlock();\n         }\n     }\n","date":"2020-10-06 18:39:37","endLine":259,"groupId":"10768","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"deletePath","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/86/acdd9f9a546bd2bf4bc31ca1c967846320b57b.src","preCode":"     public void deletePath(final String path) {\n         Objects.requireNonNull(path, \"Path cannot be null\");\n\n         final String[] pathComponents = StringUtils.split(path, '/');\n         if (pathComponents.length == 0) {\n             throw new IllegalArgumentException(\"Invalid path: \" + path);\n         }\n\n         writeLock.lock();\n         try {\n             TrieNode parent = rootNode;\n             for (final String part : pathComponents) {\n                 if (parent.getChild(part) == null) {\n                     \r\n                     return;\n                 }\n                 parent = parent.getChild(part);\n                 LOG.debug(\"{}\", parent);\n             }\n\n             final TrieNode realParent = parent.getParent();\n             realParent.deleteChild(parent.getValue());\n         } finally {\n             writeLock.unlock();\n         }\n     }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/common/PathTrie.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2020-10-06 18:39:37","commitOrder":3,"curCode":"     public boolean existsNode(final String path) {\n         Objects.requireNonNull(path, \"Path cannot be null\");\n\n         if (path.length() == 0) {\n             throw new IllegalArgumentException(\"Invalid path: \" + path);\n         }\n         final String[] pathComponents = split(path);\n\n         readLock.lock();\n         try {\n             TrieNode parent = rootNode;\n             for (final String part : pathComponents) {\n                 if (parent.getChild(part) == null) {\n                     \r\n                     return false;\n                 }\n                 parent = parent.getChild(part);\n                 LOG.debug(\"{}\", parent);\n             }\n         } finally {\n             readLock.unlock();\n         }\n         return true;\n     }\n","date":"2020-10-06 18:39:37","endLine":291,"groupId":"10768","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"existsNode","params":"(finalStringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/86/acdd9f9a546bd2bf4bc31ca1c967846320b57b.src","preCode":"     public boolean existsNode(final String path) {\n         Objects.requireNonNull(path, \"Path cannot be null\");\n\n         final String[] pathComponents = StringUtils.split(path, '/');\n         if (pathComponents.length == 0) {\n             throw new IllegalArgumentException(\"Invalid path: \" + path);\n         }\n\n         readLock.lock();\n         try {\n             TrieNode parent = rootNode;\n             for (final String part : pathComponents) {\n                 if (parent.getChild(part) == null) {\n                     \r\n                     return false;\n                 }\n                 parent = parent.getChild(part);\n                 LOG.debug(\"{}\", parent);\n             }\n         } finally {\n             readLock.unlock();\n         }\n         return true;\n     }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/common/PathTrie.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":268,"status":"M"}],"commitId":"d3282c62ddb30a8ce265dcebca0e106c51f07ca3","commitMessage":"@@@ZOOKEEPER-3952: Remove commons-lang from ZooKeeper\n\nRemoved commons-lang from main project.  replaced functionality with standard Java code.\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Christopher Tubbs <ctubbsii@apache.org>.  Enrico Olivelli <eolivelli@apache.org>.  Mate Szalay-Beko <symat@apache.org>.  tison <wander4096@gmail.com>\n\nCloses #1478 from tamaashu/ZOOKEEPER-3952\n","date":"2020-10-06 18:39:37","modifiedFileCount":"2","status":"M","submitter":"Tamas Penzes"}]
