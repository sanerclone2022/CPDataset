[{"authorTime":"2020-04-07 15:07:50","codes":[{"authorDate":"2020-04-07 15:07:50","commitOrder":1,"curCode":"    public void testTooShortPartialNotificationMessage() throws Exception {\n\n        \r\n\r\n\r\n\n        startMockServer(1);\n        byte requestBytes[] = new byte[12];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n        requestBuffer.clear();\n        requestBuffer.putInt(ServerState.LOOKING.ordinal());   \r\n        requestBuffer.putLong(0);                              \r\n        mockCnxManager.toSend(0L, requestBuffer);\n\n        \r\n\r\n\r\n\n        sendValidNotifications(1, 0);\n        leaderElectionThread.join(5000);\n        if (leaderElectionThread.isAlive()) {\n            Assert.fail(\"Leader election thread didn't join, something went wrong.\");\n        }\n    }\n","date":"2020-04-07 15:07:50","endLine":114,"groupId":"1328","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTooShortPartialNotificationMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/84/65c9ee55d6bd1be4cd650d1b5a7ad47be2db78.src","preCode":"    public void testTooShortPartialNotificationMessage() throws Exception {\n\n        \r\n\r\n\r\n\n        startMockServer(1);\n        byte requestBytes[] = new byte[12];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n        requestBuffer.clear();\n        requestBuffer.putInt(ServerState.LOOKING.ordinal());   \r\n        requestBuffer.putLong(0);                              \r\n        mockCnxManager.toSend(0L, requestBuffer);\n\n        \r\n\r\n\r\n\n        sendValidNotifications(1, 0);\n        leaderElectionThread.join(5000);\n        if (leaderElectionThread.isAlive()) {\n            Assert.fail(\"Leader election thread didn't join, something went wrong.\");\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/FLEMalformedNotificationMessageTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2020-04-07 15:07:50","commitOrder":1,"curCode":"    public void testNotificationMessageWithNegativeConfigLength() throws Exception {\n\n        \r\n\r\n\n        startMockServer(1);\n        byte requestBytes[] = new byte[48];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n        requestBuffer.clear();\n        requestBuffer.putInt(ServerState.LOOKING.ordinal());   \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putInt(FastLeaderElection.Notification.CURRENTVERSION);   \r\n        requestBuffer.putInt(-123);                            \r\n        mockCnxManager.toSend(0L, requestBuffer);\n\n        \r\n\r\n\r\n\n        sendValidNotifications(1, 0);\n        leaderElectionThread.join(5000);\n        if (leaderElectionThread.isAlive()) {\n            Assert.fail(\"Leader election thread didn't join, something went wrong.\");\n        }\n    }\n","date":"2020-04-07 15:07:50","endLine":145,"groupId":"1329","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNotificationMessageWithNegativeConfigLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/84/65c9ee55d6bd1be4cd650d1b5a7ad47be2db78.src","preCode":"    public void testNotificationMessageWithNegativeConfigLength() throws Exception {\n\n        \r\n\r\n\n        startMockServer(1);\n        byte requestBytes[] = new byte[48];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n        requestBuffer.clear();\n        requestBuffer.putInt(ServerState.LOOKING.ordinal());   \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putInt(FastLeaderElection.Notification.CURRENTVERSION);   \r\n        requestBuffer.putInt(-123);                            \r\n        mockCnxManager.toSend(0L, requestBuffer);\n\n        \r\n\r\n\r\n\n        sendValidNotifications(1, 0);\n        leaderElectionThread.join(5000);\n        if (leaderElectionThread.isAlive()) {\n            Assert.fail(\"Leader election thread didn't join, something went wrong.\");\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/FLEMalformedNotificationMessageTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"}],"commitId":"a548253408384d9e943b151c942d795017dca70c","commitMessage":"@@@ZOOKEEPER-3769: handling malformed Leader Election notification messages\n\nUsing ZooKeeper with JDK 12.0.2 on CentOS 7 when the current leader is killed.  we saw a few times that some partial Leader Election notification (vote) messages were delivered to the other ZooKeeper servers. The malformed / partial messages are causing different exceptions in the WorkerReceiver thread of FastLeaderElection which were not handled before. This was leading to the death of the WorkerReceiver thread.  which caused that the given ZooKeeper Server was unable to receive leader election messages anymore and was not able to re-join to any quorum until it got restarted.\n\nIn the proposed fix I created unit tests to simulate certain error cases with regards to partial leader election messages.  and fixed the error handling in FastLeaderElection.\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1300 from symat/ZOOKEEPER-3769-master\n","date":"2020-04-07 15:07:50","modifiedFileCount":"1","status":"B","submitter":"Mate Szalay-Beko"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":2,"curCode":"    public void testTooShortPartialNotificationMessage() throws Exception {\n\n        \r\n\r\n\r\n\n        startMockServer(1);\n        byte requestBytes[] = new byte[12];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n        requestBuffer.clear();\n        requestBuffer.putInt(ServerState.LOOKING.ordinal());   \r\n        requestBuffer.putLong(0);                              \r\n        mockCnxManager.toSend(0L, requestBuffer);\n\n        \r\n\r\n\r\n\n        sendValidNotifications(1, 0);\n        leaderElectionThread.join(5000);\n        if (leaderElectionThread.isAlive()) {\n            fail(\"Leader election thread didn't join, something went wrong.\");\n        }\n    }\n","date":"2020-08-04 21:01:52","endLine":113,"groupId":"10173","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testTooShortPartialNotificationMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/30/187644a87e493b2d483fcc11b72c715f32d063.src","preCode":"    public void testTooShortPartialNotificationMessage() throws Exception {\n\n        \r\n\r\n\r\n\n        startMockServer(1);\n        byte requestBytes[] = new byte[12];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n        requestBuffer.clear();\n        requestBuffer.putInt(ServerState.LOOKING.ordinal());   \r\n        requestBuffer.putLong(0);                              \r\n        mockCnxManager.toSend(0L, requestBuffer);\n\n        \r\n\r\n\r\n\n        sendValidNotifications(1, 0);\n        leaderElectionThread.join(5000);\n        if (leaderElectionThread.isAlive()) {\n            Assert.fail(\"Leader election thread didn't join, something went wrong.\");\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/FLEMalformedNotificationMessageTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":2,"curCode":"    public void testNotificationMessageWithNegativeConfigLength() throws Exception {\n\n        \r\n\r\n\n        startMockServer(1);\n        byte requestBytes[] = new byte[48];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n        requestBuffer.clear();\n        requestBuffer.putInt(ServerState.LOOKING.ordinal());   \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putInt(FastLeaderElection.Notification.CURRENTVERSION);   \r\n        requestBuffer.putInt(-123);                            \r\n        mockCnxManager.toSend(0L, requestBuffer);\n\n        \r\n\r\n\r\n\n        sendValidNotifications(1, 0);\n        leaderElectionThread.join(5000);\n        if (leaderElectionThread.isAlive()) {\n            fail(\"Leader election thread didn't join, something went wrong.\");\n        }\n    }\n","date":"2020-08-04 21:01:52","endLine":144,"groupId":"10173","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testNotificationMessageWithNegativeConfigLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/30/187644a87e493b2d483fcc11b72c715f32d063.src","preCode":"    public void testNotificationMessageWithNegativeConfigLength() throws Exception {\n\n        \r\n\r\n\n        startMockServer(1);\n        byte requestBytes[] = new byte[48];\n        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);\n        requestBuffer.clear();\n        requestBuffer.putInt(ServerState.LOOKING.ordinal());   \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putLong(0);                              \r\n        requestBuffer.putInt(FastLeaderElection.Notification.CURRENTVERSION);   \r\n        requestBuffer.putInt(-123);                            \r\n        mockCnxManager.toSend(0L, requestBuffer);\n\n        \r\n\r\n\r\n\n        sendValidNotifications(1, 0);\n        leaderElectionThread.join(5000);\n        if (leaderElectionThread.isAlive()) {\n            Assert.fail(\"Leader election thread didn't join, something went wrong.\");\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/FLEMalformedNotificationMessageTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
