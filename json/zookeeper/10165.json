[{"authorTime":"2020-03-20 00:09:38","codes":[{"authorDate":"2019-11-29 21:49:13","commitOrder":2,"curCode":"    public void testGetAllReachableAddresses() throws Exception {\n        InetSocketAddress reachableHost1 = new InetSocketAddress(\"127.0.0.1\", 1234);\n        InetSocketAddress reachableHost2 = new InetSocketAddress(\"127.0.0.1\", 2345);\n        InetSocketAddress unreachableHost1 = new InetSocketAddress(\"unreachable1.address.zookeeper.apache.com\", 1234);\n        InetSocketAddress unreachableHost2 = new InetSocketAddress(\"unreachable2.address.zookeeper.apache.com\", 1234);\n\n        MultipleAddresses multipleAddresses = new MultipleAddresses(\n          Arrays.asList(unreachableHost1, unreachableHost2, reachableHost1, reachableHost2));\n\n        Set<InetSocketAddress> reachableHosts = new HashSet<>(Arrays.asList(reachableHost1, reachableHost2));\n        Assert.assertEquals(reachableHosts, multipleAddresses.getAllReachableAddresses());\n    }\n","date":"2019-11-29 21:49:13","endLine":167,"groupId":"2970","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetAllReachableAddresses","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/99/203204279d9a5ee9f29741d291d42450364884.src","preCode":"    public void testGetAllReachableAddresses() throws Exception {\n        InetSocketAddress reachableHost1 = new InetSocketAddress(\"127.0.0.1\", 1234);\n        InetSocketAddress reachableHost2 = new InetSocketAddress(\"127.0.0.1\", 2345);\n        InetSocketAddress unreachableHost1 = new InetSocketAddress(\"unreachable1.address.zookeeper.apache.com\", 1234);\n        InetSocketAddress unreachableHost2 = new InetSocketAddress(\"unreachable2.address.zookeeper.apache.com\", 1234);\n\n        MultipleAddresses multipleAddresses = new MultipleAddresses(\n          Arrays.asList(unreachableHost1, unreachableHost2, reachableHost1, reachableHost2));\n\n        Set<InetSocketAddress> reachableHosts = new HashSet<>(Arrays.asList(reachableHost1, reachableHost2));\n        Assert.assertEquals(reachableHosts, multipleAddresses.getAllReachableAddresses());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/MultipleAddressesTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"NB"},{"authorDate":"2020-03-20 00:09:38","commitOrder":2,"curCode":"    public void testGetAllReachableAddressesOrAllWhenSomeReachable() throws Exception {\n        InetSocketAddress reachableHost1 = new InetSocketAddress(\"127.0.0.1\", 1234);\n        InetSocketAddress reachableHost2 = new InetSocketAddress(\"127.0.0.1\", 2345);\n        InetSocketAddress unreachableHost1 = new InetSocketAddress(\"unreachable1.address.zookeeper.apache.com\", 1234);\n        InetSocketAddress unreachableHost2 = new InetSocketAddress(\"unreachable2.address.zookeeper.apache.com\", 1234);\n\n        MultipleAddresses multipleAddresses = new MultipleAddresses(\n          Arrays.asList(unreachableHost1, unreachableHost2, reachableHost1, reachableHost2));\n\n        Set<InetSocketAddress> reachableHosts = new HashSet<>(Arrays.asList(reachableHost1, reachableHost2));\n        Assert.assertEquals(reachableHosts, multipleAddresses.getAllReachableAddressesOrAll());\n    }\n","date":"2020-03-20 00:09:38","endLine":202,"groupId":"2970","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetAllReachableAddressesOrAllWhenSomeReachable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/0e/1615df9f56fa68be44fa0556b289d292ab29a2.src","preCode":"    public void testGetAllReachableAddressesOrAllWhenSomeReachable() throws Exception {\n        InetSocketAddress reachableHost1 = new InetSocketAddress(\"127.0.0.1\", 1234);\n        InetSocketAddress reachableHost2 = new InetSocketAddress(\"127.0.0.1\", 2345);\n        InetSocketAddress unreachableHost1 = new InetSocketAddress(\"unreachable1.address.zookeeper.apache.com\", 1234);\n        InetSocketAddress unreachableHost2 = new InetSocketAddress(\"unreachable2.address.zookeeper.apache.com\", 1234);\n\n        MultipleAddresses multipleAddresses = new MultipleAddresses(\n          Arrays.asList(unreachableHost1, unreachableHost2, reachableHost1, reachableHost2));\n\n        Set<InetSocketAddress> reachableHosts = new HashSet<>(Arrays.asList(reachableHost1, reachableHost2));\n        Assert.assertEquals(reachableHosts, multipleAddresses.getAllReachableAddressesOrAll());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/MultipleAddressesTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"B"}],"commitId":"b1105ccc47685c64d1cca7ccb0b2bb66c194374a","commitMessage":"@@@ZOOKEEPER-3758: Leader reachability check fails with single address\n\nSince ZooKeeper 3.6.0 we can specify multiple addresses for each ZooKeeper server instance\n(this can increase availability when multiple physical network interfaces can be used parallel\nin the cluster). ZooKeeper will perform ICMP ECHO requests or try to establish a TCP connection\non port 7 (Echo) of the destination host in order to find the reachable addresses. This should\nhappen only if the user provide multiple addresses in the configuration.  in a single address is\nused then ZooKeeper shouldn?t send any ICMP requests.\n\nThis works as we expected for the leader election connections.  but in this Jira issue we found\na bug when the reachability check was performed even with a single address when the Follower\ntries to connect to the newly elected Leader.\n\nThe fix follows the same approach we discussed for the election protocol before (see\nZOOKEEPER-3698). We avoid the reachability check for single addresses. Also when we have\nmultiple addresses and none of them can be reached.  we still start to connect to all addresses\nin parallel.\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1288 from symat/ZOOKEEPER-3758\n","date":"2020-03-20 00:09:38","modifiedFileCount":"3","status":"M","submitter":"Mate Szalay-Beko"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testGetAllReachableAddresses() throws Exception {\n        InetSocketAddress reachableHost1 = new InetSocketAddress(\"127.0.0.1\", 1234);\n        InetSocketAddress reachableHost2 = new InetSocketAddress(\"127.0.0.1\", 2345);\n        InetSocketAddress unreachableHost1 = new InetSocketAddress(\"unreachable1.address.zookeeper.apache.com\", 1234);\n        InetSocketAddress unreachableHost2 = new InetSocketAddress(\"unreachable2.address.zookeeper.apache.com\", 1234);\n\n        MultipleAddresses multipleAddresses = new MultipleAddresses(\n          Arrays.asList(unreachableHost1, unreachableHost2, reachableHost1, reachableHost2));\n\n        Set<InetSocketAddress> reachableHosts = new HashSet<>(Arrays.asList(reachableHost1, reachableHost2));\n        assertEquals(reachableHosts, multipleAddresses.getAllReachableAddresses());\n    }\n","date":"2020-08-04 21:01:52","endLine":194,"groupId":"10165","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetAllReachableAddresses","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/bf/86ce0f43062c43e7ad235dd3f829bd0f715832.src","preCode":"    public void testGetAllReachableAddresses() throws Exception {\n        InetSocketAddress reachableHost1 = new InetSocketAddress(\"127.0.0.1\", 1234);\n        InetSocketAddress reachableHost2 = new InetSocketAddress(\"127.0.0.1\", 2345);\n        InetSocketAddress unreachableHost1 = new InetSocketAddress(\"unreachable1.address.zookeeper.apache.com\", 1234);\n        InetSocketAddress unreachableHost2 = new InetSocketAddress(\"unreachable2.address.zookeeper.apache.com\", 1234);\n\n        MultipleAddresses multipleAddresses = new MultipleAddresses(\n          Arrays.asList(unreachableHost1, unreachableHost2, reachableHost1, reachableHost2));\n\n        Set<InetSocketAddress> reachableHosts = new HashSet<>(Arrays.asList(reachableHost1, reachableHost2));\n        Assert.assertEquals(reachableHosts, multipleAddresses.getAllReachableAddresses());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/MultipleAddressesTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testGetAllReachableAddressesOrAllWhenSomeReachable() throws Exception {\n        InetSocketAddress reachableHost1 = new InetSocketAddress(\"127.0.0.1\", 1234);\n        InetSocketAddress reachableHost2 = new InetSocketAddress(\"127.0.0.1\", 2345);\n        InetSocketAddress unreachableHost1 = new InetSocketAddress(\"unreachable1.address.zookeeper.apache.com\", 1234);\n        InetSocketAddress unreachableHost2 = new InetSocketAddress(\"unreachable2.address.zookeeper.apache.com\", 1234);\n\n        MultipleAddresses multipleAddresses = new MultipleAddresses(\n          Arrays.asList(unreachableHost1, unreachableHost2, reachableHost1, reachableHost2));\n\n        Set<InetSocketAddress> reachableHosts = new HashSet<>(Arrays.asList(reachableHost1, reachableHost2));\n        assertEquals(reachableHosts, multipleAddresses.getAllReachableAddressesOrAll());\n    }\n","date":"2020-08-04 21:01:52","endLine":208,"groupId":"10165","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetAllReachableAddressesOrAllWhenSomeReachable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/bf/86ce0f43062c43e7ad235dd3f829bd0f715832.src","preCode":"    public void testGetAllReachableAddressesOrAllWhenSomeReachable() throws Exception {\n        InetSocketAddress reachableHost1 = new InetSocketAddress(\"127.0.0.1\", 1234);\n        InetSocketAddress reachableHost2 = new InetSocketAddress(\"127.0.0.1\", 2345);\n        InetSocketAddress unreachableHost1 = new InetSocketAddress(\"unreachable1.address.zookeeper.apache.com\", 1234);\n        InetSocketAddress unreachableHost2 = new InetSocketAddress(\"unreachable2.address.zookeeper.apache.com\", 1234);\n\n        MultipleAddresses multipleAddresses = new MultipleAddresses(\n          Arrays.asList(unreachableHost1, unreachableHost2, reachableHost1, reachableHost2));\n\n        Set<InetSocketAddress> reachableHosts = new HashSet<>(Arrays.asList(reachableHost1, reachableHost2));\n        Assert.assertEquals(reachableHosts, multipleAddresses.getAllReachableAddressesOrAll());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/MultipleAddressesTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
