[{"authorTime":"2019-11-29 21:49:13","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":3,"curCode":"    public void testQuorumSSL() throws Exception {\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        clearSSLSystemProperties();\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration);\n        q3.start();\n\n        assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","date":"2019-08-17 23:13:15","endLine":450,"groupId":"266","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuorumSSL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/dc/d9fcee6e9fa7640f839d54a9fdff896c4a1bb7.src","preCode":"    public void testQuorumSSL() throws Exception {\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        clearSSLSystemProperties();\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration);\n        q3.start();\n\n        assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":433,"status":"NB"},{"authorDate":"2019-11-29 21:49:13","commitOrder":3,"curCode":"    public void testQuorumSSLWithMultipleAddresses() throws Exception {\n        quorumConfiguration = generateMultiAddressQuorumConfiguration();\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        clearSSLSystemProperties();\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration);\n        q3.start();\n\n        assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","date":"2019-11-29 21:49:13","endLine":501,"groupId":"266","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuorumSSLWithMultipleAddresses","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/09/245c53d72fc2820a49cd7c4d5dd4e2120e532d.src","preCode":"    public void testQuorumSSLWithMultipleAddresses() throws Exception {\n        quorumConfiguration = generateMultiAddressQuorumConfiguration();\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        clearSSLSystemProperties();\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration);\n        q3.start();\n\n        assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"B"}],"commitId":"815c8f2130b8b43e11abe52b226707f707a93581","commitMessage":"@@@ZOOKEEPER-3188: Improve resilience to network\n\nThis PR is the rebase of the [previous pull request](https://github.com/apache/zookeeper/pull/730).  so all the kudos should go to the original authors...\n\nIn [ZOOKEEPER-3188](https://issues.apache.org/jira/browse/ZOOKEEPER-3188) we add ability to specify several addresses for quorum operations. Also added reconnection attempts if connection to leader lost.\n\nIn this PR I rebased the changes on the current master.  resolving some minor conflicts with:\n- [ZOOKEEPER-3296](https://issues.apache.org/jira/browse/ZOOKEEPER-3296): Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum\n- [ZOOKEEPER-3320](https://issues.apache.org/jira/browse/ZOOKEEPER-3320): Leader election port stop listen when hostname unresolvable for some time\n- [ZOOKEEPER-3385](https://issues.apache.org/jira/browse/ZOOKEEPER-3385): Add admin command to display leader\n- [ZOOKEEPER-3386](https://issues.apache.org/jira/browse/ZOOKEEPER-3386): Add admin command to display voting view\n- [ZOOKEEPER-3398](https://issues.apache.org/jira/browse/ZOOKEEPER-3398): Learner.connectToLeader() may take too long to time-out\n\nI still want to test the feature manually (e.g. using docker containers with multiple virtual networks / interfaces). The steps to the manual test could be recorded in the [google docs](https://docs.google.com/document/d/1iGVwxeHp57qogwfdodCh9b32P2_kOQaJZ2GDo7j36fI/edit?usp=sharing) as well.\n\nAlso I think we could add a few more unit tests where we are using multiple addresses. The current tests are using a single address only.\n\nAlso the Zookeeper documentation needs to be changed (e.g. by a follow-up Jira?) to promote the new feature and the new config format (possibly including also the admin command documentation in relation with [ZOOKEEPER-3386](https://issues.apache.org/jira/browse/ZOOKEEPER-3386) and [ZOOKEEPER-3461](https://issues.apache.org/jira/browse/ZOOKEEPER-3461))\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\nAuthor: Mate Szalay-Beko <mszalay@cloudera.com>\n\nReviewers: eolivelli@apache.org.  andor@apache.org\n\nCloses #1048 from symat/ZOOKEEPER-3188 and squashes the following commits:\n\n3c6fc52d7 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n356882d46 [Mate Szalay-Beko] ZOOKEEPER-3188: document new configuration format for using multiple addresses\n45b6c0fdb [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n4b6bcea48 [Mate Szalay-Beko] ZOOKEEPER-3188: MultiAddress unit tests for Quorum TLS and Kerberos/Digest authentication\n40bc44c23 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\nf875f5c67 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n31805e79b [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n0f95678ca [Mate Szalay-Beko] ZOOKEEPER-3188: skip unreachable addresses when Learner connects to Leader\ne232c55da [Mate Szalay-Beko] ZOOKEEPER-3188: fix flaky unit MultiAddress unit test\ne892d8d8e [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n6f2ab755f [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n2eedf2687 [Mate Szalay-Beko] ZOOKEEPER-3188: fix PR commits; handle case when Leader can not bind to port on startup\n483d2fc9c [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\na5d6bcb97 [Mate Szalay-Beko] ZOOKEEPER-3188: support for dynamic reconfig + add more unit tests\ned31d2ce9 [Mate Szalay-Beko] ZOOKEEPER-3188: better shutdown for executors (following PR comments)\n8713a5bbf [Mate Szalay-Beko] ZOOKEEPER-3188: add fixes for PR comments\n05eae83c0 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\ne823af4b1 [Mate Szalay-Beko] Merge remote-tracking branch 'origin/master' into ZOOKEEPER-3188\nde7bad2a6 [Mate Szalay-Beko] Merge remote-tracking branch 'origin/master' into ZOOKEEPER-3188\nda98a8da6 [Mate Szalay-Beko] ZOOKEEPER-3188: fix JDK-13 warning\n5bd1f4e2c [Mate Szalay-Beko] ZOOKEEPER-3188: supress spotbugs warning\n42a52a688 [Mate Szalay-Beko] ZOOKEEPER-3188: improve based on code review comments\n6c4220a0d [Mate Szalay-Beko] ZOOKEEPER-3188: fix SendWorker.asyncValidateIfSocketIsStillReachable\n5b22432c1 [Mate Szalay-Beko] ZOOKEEPER-3188: fix LeaderElection to work with multiple election addresses\n7bfbe7e5c [Mate Szalay-Beko] ZOOKEEPER-3188: Improve resilience to network\n","date":"2019-11-29 21:49:13","modifiedFileCount":"26","status":"M","submitter":"Mate Szalay-Beko"},{"authorTime":"2020-02-16 17:25:14","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":4,"curCode":"    public void testQuorumSSL() throws Exception {\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        clearSSLSystemProperties();\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration);\n        q3.start();\n\n        assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","date":"2019-08-17 23:13:15","endLine":450,"groupId":"10157","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuorumSSL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/dc/d9fcee6e9fa7640f839d54a9fdff896c4a1bb7.src","preCode":"    public void testQuorumSSL() throws Exception {\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        clearSSLSystemProperties();\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration);\n        q3.start();\n\n        assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":433,"status":"N"},{"authorDate":"2020-02-16 17:25:14","commitOrder":4,"curCode":"    public void testQuorumSSLWithMultipleAddresses() throws Exception {\n        System.setProperty(QuorumPeer.CONFIG_KEY_MULTI_ADDRESS_ENABLED, \"true\");\n        quorumConfiguration = generateMultiAddressQuorumConfiguration();\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        clearSSLSystemProperties();\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration);\n        q3.start();\n\n        assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","date":"2020-02-16 17:25:14","endLine":503,"groupId":"10157","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuorumSSLWithMultipleAddresses","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/59/3edbd92451d0c5b4d626d40c3d53b1f5616133.src","preCode":"    public void testQuorumSSLWithMultipleAddresses() throws Exception {\n        quorumConfiguration = generateMultiAddressQuorumConfiguration();\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        clearSSLSystemProperties();\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration);\n        q3.start();\n\n        assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"M"}],"commitId":"3aa922c5737c9ef0879f290181cb281261c965e0","commitMessage":"@@@ZOOKEEPER-3720: Fix rolling upgrade failure (invalid protocol version)\n\nThe multi-address feature introduced in ZOOKEEPER-3188 required\nchanges in the Quorum protocol as we had to send all addresses in\nthe connection initiation message to enable the receiving side to\nchoose a reachable address in case of network failure.\n\nThe new code can handle both the old and the new protocol versions to\navoid 'invalid protocol' error e.g. during rolling restarts. However. \nthe new protocol version still can not be used during rolling upgrade\nif the old servers are not supporting this protocol. In this case the\nold and the new servers would form two distinct partitions until all\nthe servers get upgraded. To support rolling upgrades too.  we want to\ndisable the MultiAddress feature by default and use the old protocol.\n\nIf the user would like enable the MultiAddress feature on a 3.6.0\ncluster.  she/he can do it either by 1) starting the cluster from\nscratch (without rolling upgrade).  or 2) performing a rolling upgrade\nwithout the MultiAddress feature enabled then doing a rolling restart\nwith a new configuration where the MultiAddress feature is enabled.\nDuring the rolling restart there will be no partitions.  as all the\nservers in the cluster now will run ZooKeeper version 3.6.0 which\nunderstands now both protocols.\n\nThe changes in this patch:\n- introducing new config property: multiAddress.enabled.  disabled\nby default\n- updating QuorumCnxManager to be able to use both protocol versions\nand to use the old one if MultiAddress is disabled\n- failing with ConfigException if the user provides multiple\naddresses in the config while having MultiAddress disabled\n- updating the existing MultiAddress related tests to enable the\nfeature first\n- add some new tests\n- update the documentation\n\nTesting:\n- I ran all the unit tests\n- Using https://github.com/symat/zk-rolling-upgrade-test\n  - I tested rolling upgrade from 3.5.6\n  - I tested rolling restart to enable the MultiAddress feature\n- Using https://github.com/symat/zookeeper-docker-test\n  - I tested the MultiAddress feature by disabling some virtual\n    interfaces and waiting for the cluster to recover\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Norbert Kalmar <nkalmar@apache.org>.  Andor Molnar <andor@apache.org>\n\nCloses #1251 from symat/ZOOKEEPER-3720\n","date":"2020-02-16 17:25:14","modifiedFileCount":"14","status":"M","submitter":"Mate Szalay-Beko"}]
