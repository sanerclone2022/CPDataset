[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testSessionTimeoutAccess() throws Exception {\n        \r\n        DisconnectableZooKeeper zk = createClient(TICK_TIME * 4);\n        Assert.assertEquals(TICK_TIME * 4, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME);\n        Assert.assertEquals(TICK_TIME * 2, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME * 30);\n        Assert.assertEquals(TICK_TIME * 20, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","date":"2018-10-19 20:39:50","endLine":347,"groupId":"4396","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSessionTimeoutAccess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/88/9b65e430b7125b170ecfd44881e933049f3a28.src","preCode":"    public void testSessionTimeoutAccess() throws Exception {\n        \r\n        DisconnectableZooKeeper zk = createClient(TICK_TIME * 4);\n        Assert.assertEquals(TICK_TIME * 4, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME);\n        Assert.assertEquals(TICK_TIME * 2, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME * 30);\n        Assert.assertEquals(TICK_TIME * 20, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SessionTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testMinMaxSessionTimeout() throws Exception {\n        \r\n        final int MINSESS = 20000;\n        final int MAXSESS = 240000;\n        {\n            ZooKeeperServer zs = ClientBase.getServer(serverFactory);\n            zs.setMinSessionTimeout(MINSESS);\n            zs.setMaxSessionTimeout(MAXSESS);\n        }\n\n        \r\n        int timeout = 120000;\n        DisconnectableZooKeeper zk = createClient(timeout);\n        Assert.assertEquals(timeout, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MINSESS/2);\n        Assert.assertEquals(MINSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MAXSESS * 2);\n        Assert.assertEquals(MAXSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","date":"2018-10-19 20:39:50","endLine":392,"groupId":"2345","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinMaxSessionTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/88/9b65e430b7125b170ecfd44881e933049f3a28.src","preCode":"    public void testMinMaxSessionTimeout() throws Exception {\n        \r\n        final int MINSESS = 20000;\n        final int MAXSESS = 240000;\n        {\n            ZooKeeperServer zs = ClientBase.getServer(serverFactory);\n            zs.setMinSessionTimeout(MINSESS);\n            zs.setMaxSessionTimeout(MAXSESS);\n        }\n\n        \r\n        int timeout = 120000;\n        DisconnectableZooKeeper zk = createClient(timeout);\n        Assert.assertEquals(timeout, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MINSESS/2);\n        Assert.assertEquals(MINSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MAXSESS * 2);\n        Assert.assertEquals(MAXSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SessionTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":360,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-06-07 20:13:24","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":2,"curCode":"    public void testSessionTimeoutAccess() throws Exception {\n        \r\n        DisconnectableZooKeeper zk = createClient(TICK_TIME * 4);\n        Assert.assertEquals(TICK_TIME * 4, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME);\n        Assert.assertEquals(TICK_TIME * 2, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME * 30);\n        Assert.assertEquals(TICK_TIME * 20, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","date":"2018-10-19 20:39:50","endLine":347,"groupId":"4396","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSessionTimeoutAccess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/88/9b65e430b7125b170ecfd44881e933049f3a28.src","preCode":"    public void testSessionTimeoutAccess() throws Exception {\n        \r\n        DisconnectableZooKeeper zk = createClient(TICK_TIME * 4);\n        Assert.assertEquals(TICK_TIME * 4, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME);\n        Assert.assertEquals(TICK_TIME * 2, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME * 30);\n        Assert.assertEquals(TICK_TIME * 20, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SessionTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"N"},{"authorDate":"2019-06-07 20:13:24","commitOrder":2,"curCode":"    public void testMinMaxSessionTimeout() throws Exception {\n        \r\n        final int MINSESS = 20000;\n        final int MAXSESS = 240000;\n        {\n            ZooKeeperServer zs = serverFactory.getZooKeeperServer();\n            zs.setMinSessionTimeout(MINSESS);\n            zs.setMaxSessionTimeout(MAXSESS);\n        }\n\n        \r\n        int timeout = 120000;\n        DisconnectableZooKeeper zk = createClient(timeout);\n        Assert.assertEquals(timeout, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MINSESS/2);\n        Assert.assertEquals(MINSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MAXSESS * 2);\n        Assert.assertEquals(MAXSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","date":"2019-06-07 20:13:24","endLine":392,"groupId":"2345","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinMaxSessionTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/e8/2c0a643fcdceafc68d332ca7f5494c89f46adc.src","preCode":"    public void testMinMaxSessionTimeout() throws Exception {\n        \r\n        final int MINSESS = 20000;\n        final int MAXSESS = 240000;\n        {\n            ZooKeeperServer zs = ClientBase.getServer(serverFactory);\n            zs.setMinSessionTimeout(MINSESS);\n            zs.setMaxSessionTimeout(MAXSESS);\n        }\n\n        \r\n        int timeout = 120000;\n        DisconnectableZooKeeper zk = createClient(timeout);\n        Assert.assertEquals(timeout, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MINSESS/2);\n        Assert.assertEquals(MINSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MAXSESS * 2);\n        Assert.assertEquals(MAXSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SessionTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":360,"status":"M"}],"commitId":"89e7e55811b7115a9155f25cd572520055af00fc","commitMessage":"@@@ZOOKEEPER-3416: Remove redundant ServerCnxnFactoryAccessor.\n\nWe have two ways to access the private zkServer inside ServerCnxnFactory.  and there is really no need to keep maintaining both. We could remove ServerCnxnFactoryAccessor when we added the public accessor for ServerCnxnFactory in ZOOKEEPER-1346.  but we did not.\n\nThe solution is to consolidate all access of the zkServer through the public accessor of ServerCnxnFactory. The end result is cleaner code base and less confusion.\n\nAuthor: Michael Han <lhan@twitter.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>\n\nCloses #969 from hanm/twitter/91216a8821e3aac9ab56f8cc51bd30d425eebae8\n","date":"2019-06-07 20:13:24","modifiedFileCount":"10","status":"M","submitter":"Michael Han"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":3,"curCode":"    public void testSessionTimeoutAccess() throws Exception {\n        \r\n        DisconnectableZooKeeper zk = createClient(TICK_TIME * 4);\n        assertEquals(TICK_TIME * 4, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME);\n        assertEquals(TICK_TIME * 2, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME * 30);\n        assertEquals(TICK_TIME * 20, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","date":"2019-08-17 23:13:15","endLine":332,"groupId":"10611","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSessionTimeoutAccess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ff/b896a239a10ce78e062c5a860b8c994a83c7c8.src","preCode":"    public void testSessionTimeoutAccess() throws Exception {\n        \r\n        DisconnectableZooKeeper zk = createClient(TICK_TIME * 4);\n        Assert.assertEquals(TICK_TIME * 4, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME);\n        Assert.assertEquals(TICK_TIME * 2, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(TICK_TIME * 30);\n        Assert.assertEquals(TICK_TIME * 20, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SessionTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":3,"curCode":"    public void testMinMaxSessionTimeout() throws Exception {\n        \r\n        final int MINSESS = 20000;\n        final int MAXSESS = 240000;\n        {\n            ZooKeeperServer zs = serverFactory.getZooKeeperServer();\n            zs.setMinSessionTimeout(MINSESS);\n            zs.setMaxSessionTimeout(MAXSESS);\n        }\n\n        \r\n        int timeout = 120000;\n        DisconnectableZooKeeper zk = createClient(timeout);\n        assertEquals(timeout, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MINSESS / 2);\n        assertEquals(MINSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MAXSESS * 2);\n        assertEquals(MAXSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","date":"2019-08-17 23:13:15","endLine":379,"groupId":"10611","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinMaxSessionTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ff/b896a239a10ce78e062c5a860b8c994a83c7c8.src","preCode":"    public void testMinMaxSessionTimeout() throws Exception {\n        \r\n        final int MINSESS = 20000;\n        final int MAXSESS = 240000;\n        {\n            ZooKeeperServer zs = serverFactory.getZooKeeperServer();\n            zs.setMinSessionTimeout(MINSESS);\n            zs.setMaxSessionTimeout(MAXSESS);\n        }\n\n        \r\n        int timeout = 120000;\n        DisconnectableZooKeeper zk = createClient(timeout);\n        Assert.assertEquals(timeout, zk.getSessionTimeout());\n        \r\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MINSESS/2);\n        Assert.assertEquals(MINSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n\n        \r\n        zk = createClient(MAXSESS * 2);\n        Assert.assertEquals(MAXSESS, zk.getSessionTimeout());\n        LOG.info(zk.toString());\n        zk.close();\n        LOG.info(zk.toString());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SessionTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
