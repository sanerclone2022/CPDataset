[{"authorTime":"2020-07-13 18:10:05","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":3,"curCode":"    public void testParseServersWithoutPort() {\n        String servers = \"10.10.10.1,10.10.10.2\";\n        ConnectStringParser parser = new ConnectStringParser(servers);\n        assertEquals(\"10.10.10.1\", parser.getServerAddresses().get(0).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(0).getPort());\n        assertEquals(\"10.10.10.2\", parser.getServerAddresses().get(1).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(1).getPort());\n\n        servers = \"[2001:db8:1::242:ac11:2],[2001:db8:85a3:8d3:1319:8a2e:370:7348]\";\n        parser = new ConnectStringParser(servers);\n        assertEquals(\"2001:db8:1::242:ac11:2\", parser.getServerAddresses().get(0).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(0).getPort());\n        assertEquals(\"2001:db8:85a3:8d3:1319:8a2e:370:7348\", parser.getServerAddresses().get(1).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(1).getPort());\n    }\n","date":"2019-08-17 23:13:15","endLine":65,"groupId":"180","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseServersWithoutPort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/06/6e0f35849b4b4996a63816d0ec8954a924bb9b.src","preCode":"    public void testParseServersWithoutPort() {\n        String servers = \"10.10.10.1,10.10.10.2\";\n        ConnectStringParser parser = new ConnectStringParser(servers);\n        assertEquals(\"10.10.10.1\", parser.getServerAddresses().get(0).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(0).getPort());\n        assertEquals(\"10.10.10.2\", parser.getServerAddresses().get(1).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(1).getPort());\n\n        servers = \"[2001:db8:1::242:ac11:2],[2001:db8:85a3:8d3:1319:8a2e:370:7348]\";\n        parser = new ConnectStringParser(servers);\n        assertEquals(\"2001:db8:1::242:ac11:2\", parser.getServerAddresses().get(0).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(0).getPort());\n        assertEquals(\"2001:db8:85a3:8d3:1319:8a2e:370:7348\", parser.getServerAddresses().get(1).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(1).getPort());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/ConnectStringParserTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"NB"},{"authorDate":"2020-07-13 18:10:05","commitOrder":3,"curCode":"    public void testParseIPV6ConnectionString() {\n        String servers = \"[127::1],127.0.10.2\";\n        ConnectStringParser parser = new ConnectStringParser(servers);\n\n        Assert.assertEquals(\"127::1\", parser.getServerAddresses().get(0).getHostString());\n        Assert.assertEquals(\"127.0.10.2\", parser.getServerAddresses().get(1).getHostString());\n        Assert.assertEquals(2181, parser.getServerAddresses().get(0).getPort());\n        Assert.assertEquals(2181, parser.getServerAddresses().get(1).getPort());\n\n        servers = \"[127::1]:2181,[127::2]:2182,[127::3]:2183\";\n        parser = new ConnectStringParser(servers);\n\n        Assert.assertEquals(\"127::1\", parser.getServerAddresses().get(0).getHostString());\n        Assert.assertEquals(\"127::2\", parser.getServerAddresses().get(1).getHostString());\n        Assert.assertEquals(\"127::3\", parser.getServerAddresses().get(2).getHostString());\n        Assert.assertEquals(2181, parser.getServerAddresses().get(0).getPort());\n        Assert.assertEquals(2182, parser.getServerAddresses().get(1).getPort());\n        Assert.assertEquals(2183, parser.getServerAddresses().get(2).getPort());\n    }\n","date":"2020-07-13 18:10:05","endLine":108,"groupId":"183","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseIPV6ConnectionString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/e1/048f2838846d8fb6e8084384c6f2fc17c120e8.src","preCode":"    public void testParseIPV6ConnectionString() {\n        String servers = \"[127::1],127.0.10.2\";\n        ConnectStringParser parser = new ConnectStringParser(servers);\n\n        Assert.assertEquals(\"127::1\", parser.getServerAddresses().get(0).getHostString());\n        Assert.assertEquals(\"127.0.10.2\", parser.getServerAddresses().get(1).getHostString());\n        Assert.assertEquals(2181, parser.getServerAddresses().get(0).getPort());\n        Assert.assertEquals(2181, parser.getServerAddresses().get(1).getPort());\n\n        servers = \"[127::1]:2181,[127::2]:2182,[127::3]:2183\";\n        parser = new ConnectStringParser(servers);\n\n        Assert.assertEquals(\"127::1\", parser.getServerAddresses().get(0).getHostString());\n        Assert.assertEquals(\"127::2\", parser.getServerAddresses().get(1).getHostString());\n        Assert.assertEquals(\"127::3\", parser.getServerAddresses().get(2).getHostString());\n        Assert.assertEquals(2181, parser.getServerAddresses().get(0).getPort());\n        Assert.assertEquals(2182, parser.getServerAddresses().get(1).getPort());\n        Assert.assertEquals(2183, parser.getServerAddresses().get(2).getPort());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/ConnectStringParserTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"}],"commitId":"f362313860401024b7141489e66ee76af442eb76","commitMessage":"@@@ZOOKEEPER-3878: Client connection fails if IPV6 is not enclosed in square brackets\n\nAuthor: Mohammad Arshad 72626 <mohammad.arshad@huawei.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>\n\nCloses #1398 from arshadmohammad/ZOOKEEPER-3878-master\n","date":"2020-07-13 18:10:05","modifiedFileCount":"4","status":"M","submitter":"Mohammad Arshad 72626"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":4,"curCode":"    public void testParseServersWithoutPort() {\n        String servers = \"10.10.10.1,10.10.10.2\";\n        ConnectStringParser parser = new ConnectStringParser(servers);\n        assertEquals(\"10.10.10.1\", parser.getServerAddresses().get(0).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(0).getPort());\n        assertEquals(\"10.10.10.2\", parser.getServerAddresses().get(1).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(1).getPort());\n\n        servers = \"[2001:db8:1::242:ac11:2],[2001:db8:85a3:8d3:1319:8a2e:370:7348]\";\n        parser = new ConnectStringParser(servers);\n        assertEquals(\"2001:db8:1::242:ac11:2\", parser.getServerAddresses().get(0).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(0).getPort());\n        assertEquals(\"2001:db8:85a3:8d3:1319:8a2e:370:7348\", parser.getServerAddresses().get(1).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(1).getPort());\n    }\n","date":"2019-08-17 23:13:15","endLine":65,"groupId":"10525","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseServersWithoutPort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/06/6e0f35849b4b4996a63816d0ec8954a924bb9b.src","preCode":"    public void testParseServersWithoutPort() {\n        String servers = \"10.10.10.1,10.10.10.2\";\n        ConnectStringParser parser = new ConnectStringParser(servers);\n        assertEquals(\"10.10.10.1\", parser.getServerAddresses().get(0).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(0).getPort());\n        assertEquals(\"10.10.10.2\", parser.getServerAddresses().get(1).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(1).getPort());\n\n        servers = \"[2001:db8:1::242:ac11:2],[2001:db8:85a3:8d3:1319:8a2e:370:7348]\";\n        parser = new ConnectStringParser(servers);\n        assertEquals(\"2001:db8:1::242:ac11:2\", parser.getServerAddresses().get(0).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(0).getPort());\n        assertEquals(\"2001:db8:85a3:8d3:1319:8a2e:370:7348\", parser.getServerAddresses().get(1).getHostString());\n        assertEquals(DEFAULT_PORT, parser.getServerAddresses().get(1).getPort());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/ConnectStringParserTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"},{"authorDate":"2020-08-04 21:01:52","commitOrder":4,"curCode":"    public void testParseIPV6ConnectionString() {\n        String servers = \"[127::1],127.0.10.2\";\n        ConnectStringParser parser = new ConnectStringParser(servers);\n\n        assertEquals(\"127::1\", parser.getServerAddresses().get(0).getHostString());\n        assertEquals(\"127.0.10.2\", parser.getServerAddresses().get(1).getHostString());\n        assertEquals(2181, parser.getServerAddresses().get(0).getPort());\n        assertEquals(2181, parser.getServerAddresses().get(1).getPort());\n\n        servers = \"[127::1]:2181,[127::2]:2182,[127::3]:2183\";\n        parser = new ConnectStringParser(servers);\n\n        assertEquals(\"127::1\", parser.getServerAddresses().get(0).getHostString());\n        assertEquals(\"127::2\", parser.getServerAddresses().get(1).getHostString());\n        assertEquals(\"127::3\", parser.getServerAddresses().get(2).getHostString());\n        assertEquals(2181, parser.getServerAddresses().get(0).getPort());\n        assertEquals(2182, parser.getServerAddresses().get(1).getPort());\n        assertEquals(2183, parser.getServerAddresses().get(2).getPort());\n    }\n","date":"2020-08-04 21:01:52","endLine":107,"groupId":"10525","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testParseIPV6ConnectionString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/fc/30e69920f65b4c859b5268dec783bcef3c681e.src","preCode":"    public void testParseIPV6ConnectionString() {\n        String servers = \"[127::1],127.0.10.2\";\n        ConnectStringParser parser = new ConnectStringParser(servers);\n\n        Assert.assertEquals(\"127::1\", parser.getServerAddresses().get(0).getHostString());\n        Assert.assertEquals(\"127.0.10.2\", parser.getServerAddresses().get(1).getHostString());\n        Assert.assertEquals(2181, parser.getServerAddresses().get(0).getPort());\n        Assert.assertEquals(2181, parser.getServerAddresses().get(1).getPort());\n\n        servers = \"[127::1]:2181,[127::2]:2182,[127::3]:2183\";\n        parser = new ConnectStringParser(servers);\n\n        Assert.assertEquals(\"127::1\", parser.getServerAddresses().get(0).getHostString());\n        Assert.assertEquals(\"127::2\", parser.getServerAddresses().get(1).getHostString());\n        Assert.assertEquals(\"127::3\", parser.getServerAddresses().get(2).getHostString());\n        Assert.assertEquals(2181, parser.getServerAddresses().get(0).getPort());\n        Assert.assertEquals(2182, parser.getServerAddresses().get(1).getPort());\n        Assert.assertEquals(2183, parser.getServerAddresses().get(2).getPort());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/ConnectStringParserTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
