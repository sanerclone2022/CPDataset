[{"authorTime":"2019-10-09 22:38:44","codes":[{"authorDate":"2019-10-09 22:38:44","commitOrder":1,"curCode":"    public void testSerializeDoesntLockACLCacheWhileWriting() throws Exception {\n        DataTree tree = new DataTree();\n        tree.createNode(\"/marker\", new byte[]{42}, null, -1, 1, 1, 1);\n        final AtomicBoolean ranTestCase = new AtomicBoolean();\n        DataOutputStream out = new DataOutputStream(new ByteArrayOutputStream());\n        BinaryOutputArchive oa = new BinaryOutputArchive(out) {\n            @Override\n            public void writeInt(int size, String tag) throws IOException {\n                final Semaphore semaphore = new Semaphore(0);\n\n                new Thread(new Runnable() {\n                    @Override\n                    public void run() {\n\n                        synchronized (tree.getReferenceCountedAclCache()) {\n                            \r\n                            semaphore.release();\n                        }\n                    }\n                }).start();\n\n                try {\n                    boolean acquired = semaphore.tryAcquire(30, TimeUnit.SECONDS);\n                    \r\n                    \r\n                    assertTrue(\"Couldn't acquire a lock on the ACLCache while we were calling tree.serialize\", acquired);\n                } catch (InterruptedException e1) {\n                    throw new RuntimeException(e1);\n                }\n                ranTestCase.set(true);\n\n                super.writeInt(size, tag);\n            }\n        };\n\n        tree.serialize(oa, \"test\");\n\n        \r\n        assertTrue(\"Didn't find the expected node\", ranTestCase.get());\n    }\n","date":"2019-10-09 22:38:44","endLine":304,"groupId":"3419","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerializeDoesntLockACLCacheWhileWriting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/11/eb8365d9ce0e72b945536f334524548bab56e4.src","preCode":"    public void testSerializeDoesntLockACLCacheWhileWriting() throws Exception {\n        DataTree tree = new DataTree();\n        tree.createNode(\"/marker\", new byte[]{42}, null, -1, 1, 1, 1);\n        final AtomicBoolean ranTestCase = new AtomicBoolean();\n        DataOutputStream out = new DataOutputStream(new ByteArrayOutputStream());\n        BinaryOutputArchive oa = new BinaryOutputArchive(out) {\n            @Override\n            public void writeInt(int size, String tag) throws IOException {\n                final Semaphore semaphore = new Semaphore(0);\n\n                new Thread(new Runnable() {\n                    @Override\n                    public void run() {\n\n                        synchronized (tree.getReferenceCountedAclCache()) {\n                            \r\n                            semaphore.release();\n                        }\n                    }\n                }).start();\n\n                try {\n                    boolean acquired = semaphore.tryAcquire(30, TimeUnit.SECONDS);\n                    \r\n                    \r\n                    assertTrue(\"Couldn't acquire a lock on the ACLCache while we were calling tree.serialize\", acquired);\n                } catch (InterruptedException e1) {\n                    throw new RuntimeException(e1);\n                }\n                ranTestCase.set(true);\n\n                super.writeInt(size, tag);\n            }\n        };\n\n        tree.serialize(oa, \"test\");\n\n        \r\n        assertTrue(\"Didn't find the expected node\", ranTestCase.get());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/DataTreeTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"B"},{"authorDate":"2019-10-09 22:38:44","commitOrder":1,"curCode":"    public void testDeserializeDoesntLockACLCacheWhileReading() throws Exception {\n        DataTree tree = new DataTree();\n        tree.createNode(\"/marker\", new byte[]{42}, null, -1, 1, 1, 1);\n        final AtomicBoolean ranTestCase = new AtomicBoolean();\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        DataOutputStream out = new DataOutputStream(baos);\n        BinaryOutputArchive oa = new BinaryOutputArchive(out);\n\n        tree.serialize(oa, \"test\");\n\n        DataTree tree2 = new DataTree();\n        DataInputStream in = new DataInputStream(new ByteArrayInputStream(baos.toByteArray()));\n        BinaryInputArchive ia = new BinaryInputArchive(in) {\n            @Override\n            public long readLong(String tag) throws IOException {\n                final Semaphore semaphore = new Semaphore(0);\n\n                new Thread(new Runnable() {\n                    @Override\n                    public void run() {\n\n                        synchronized (tree2.getReferenceCountedAclCache()) {\n                            \r\n                            semaphore.release();\n                        }\n                    }\n                }).start();\n\n                try {\n                    boolean acquired = semaphore.tryAcquire(30, TimeUnit.SECONDS);\n                    \r\n                    \r\n                    assertTrue(\"Couldn't acquire a lock on the ACLCache while we were calling tree.deserialize\", acquired);\n                } catch (InterruptedException e1) {\n                    throw new RuntimeException(e1);\n                }\n                ranTestCase.set(true);\n\n                return super.readLong(tag);\n            }\n        };\n\n        tree2.deserialize(ia, \"test\");\n\n        \r\n        assertTrue(\"Didn't find the expected node\", ranTestCase.get());\n    }\n","date":"2019-10-09 22:38:44","endLine":355,"groupId":"3082","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeserializeDoesntLockACLCacheWhileReading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/11/eb8365d9ce0e72b945536f334524548bab56e4.src","preCode":"    public void testDeserializeDoesntLockACLCacheWhileReading() throws Exception {\n        DataTree tree = new DataTree();\n        tree.createNode(\"/marker\", new byte[]{42}, null, -1, 1, 1, 1);\n        final AtomicBoolean ranTestCase = new AtomicBoolean();\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        DataOutputStream out = new DataOutputStream(baos);\n        BinaryOutputArchive oa = new BinaryOutputArchive(out);\n\n        tree.serialize(oa, \"test\");\n\n        DataTree tree2 = new DataTree();\n        DataInputStream in = new DataInputStream(new ByteArrayInputStream(baos.toByteArray()));\n        BinaryInputArchive ia = new BinaryInputArchive(in) {\n            @Override\n            public long readLong(String tag) throws IOException {\n                final Semaphore semaphore = new Semaphore(0);\n\n                new Thread(new Runnable() {\n                    @Override\n                    public void run() {\n\n                        synchronized (tree2.getReferenceCountedAclCache()) {\n                            \r\n                            semaphore.release();\n                        }\n                    }\n                }).start();\n\n                try {\n                    boolean acquired = semaphore.tryAcquire(30, TimeUnit.SECONDS);\n                    \r\n                    \r\n                    assertTrue(\"Couldn't acquire a lock on the ACLCache while we were calling tree.deserialize\", acquired);\n                } catch (InterruptedException e1) {\n                    throw new RuntimeException(e1);\n                }\n                ranTestCase.set(true);\n\n                return super.readLong(tag);\n            }\n        };\n\n        tree2.deserialize(ia, \"test\");\n\n        \r\n        assertTrue(\"Didn't find the expected node\", ranTestCase.get());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/DataTreeTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"B"}],"commitId":"f4c7b698bd239bcd15ee380d2ee38814dba432cd","commitMessage":"@@@ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe?\n\n?n network/disk issues happen during datatree serialization\n\nAuthor: Mcfatealan <louchang_new@163.com>\n\nReviewers: fangmin@apache.org.  andor@apache.org\n\nCloses #1077 from mcfatealan/ZOOKEEPER-3531 and squashes the following commits:\n\n60109185e [Mcfatealan] minor\n951dd5cac [Mcfatealan] fix checkstyle issue\n96ea4a066 [Mcfatealan] finer-synchronization for deserialize\nb79446a6f [Mcfatealan] minor fix for checkstyle\nd5f7d04ab [Mcfatealan] ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang when network/disk issues happen during datatree serialization\n","date":"2019-10-09 22:38:44","modifiedFileCount":"2","status":"B","submitter":"Mcfatealan"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":2,"curCode":"    public void testSerializeDoesntLockACLCacheWhileWriting() throws Exception {\n        DataTree tree = new DataTree();\n        tree.createNode(\"/marker\", new byte[] { 42 }, null, -1, 1, 1, 1);\n        final AtomicBoolean ranTestCase = new AtomicBoolean();\n        DataOutputStream out = new DataOutputStream(new ByteArrayOutputStream());\n        BinaryOutputArchive oa = new BinaryOutputArchive(out) {\n            @Override\n            public void writeInt(int size, String tag) throws IOException {\n                final Semaphore semaphore = new Semaphore(0);\n\n                new Thread(new Runnable() {\n                    @Override\n                    public void run() {\n\n                        synchronized (tree.getReferenceCountedAclCache()) {\n                            \r\n                            semaphore.release();\n                        }\n                    }\n                }).start();\n\n                try {\n                    boolean acquired = semaphore.tryAcquire(30, TimeUnit.SECONDS);\n                    \r\n                    \r\n                    assertTrue(acquired, \"Couldn't acquire a lock on the ACLCache while we were calling tree.serialize\");\n                } catch (InterruptedException e1) {\n                    throw new RuntimeException(e1);\n                }\n                ranTestCase.set(true);\n\n                super.writeInt(size, tag);\n            }\n        };\n\n        tree.serialize(oa, \"test\");\n\n        \r\n        assertTrue(ranTestCase.get(), \"Didn't find the expected node\");\n    }\n","date":"2020-08-04 21:01:52","endLine":308,"groupId":"1094","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerializeDoesntLockACLCacheWhileWriting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/fe/83b76d884586dc5dc0759c6c3c886c3aa87ec1.src","preCode":"    public void testSerializeDoesntLockACLCacheWhileWriting() throws Exception {\n        DataTree tree = new DataTree();\n        tree.createNode(\"/marker\", new byte[]{42}, null, -1, 1, 1, 1);\n        final AtomicBoolean ranTestCase = new AtomicBoolean();\n        DataOutputStream out = new DataOutputStream(new ByteArrayOutputStream());\n        BinaryOutputArchive oa = new BinaryOutputArchive(out) {\n            @Override\n            public void writeInt(int size, String tag) throws IOException {\n                final Semaphore semaphore = new Semaphore(0);\n\n                new Thread(new Runnable() {\n                    @Override\n                    public void run() {\n\n                        synchronized (tree.getReferenceCountedAclCache()) {\n                            \r\n                            semaphore.release();\n                        }\n                    }\n                }).start();\n\n                try {\n                    boolean acquired = semaphore.tryAcquire(30, TimeUnit.SECONDS);\n                    \r\n                    \r\n                    assertTrue(\"Couldn't acquire a lock on the ACLCache while we were calling tree.serialize\", acquired);\n                } catch (InterruptedException e1) {\n                    throw new RuntimeException(e1);\n                }\n                ranTestCase.set(true);\n\n                super.writeInt(size, tag);\n            }\n        };\n\n        tree.serialize(oa, \"test\");\n\n        \r\n        assertTrue(\"Didn't find the expected node\", ranTestCase.get());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/DataTreeTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":2,"curCode":"    public void testDeserializeDoesntLockACLCacheWhileReading() throws Exception {\n        DataTree tree = new DataTree();\n        tree.createNode(\"/marker\", new byte[] { 42 }, null, -1, 1, 1, 1);\n        final AtomicBoolean ranTestCase = new AtomicBoolean();\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        DataOutputStream out = new DataOutputStream(baos);\n        BinaryOutputArchive oa = new BinaryOutputArchive(out);\n\n        tree.serialize(oa, \"test\");\n\n        DataTree tree2 = new DataTree();\n        DataInputStream in = new DataInputStream(new ByteArrayInputStream(baos.toByteArray()));\n        BinaryInputArchive ia = new BinaryInputArchive(in) {\n            @Override\n            public long readLong(String tag) throws IOException {\n                final Semaphore semaphore = new Semaphore(0);\n\n                new Thread(new Runnable() {\n                    @Override\n                    public void run() {\n\n                        synchronized (tree2.getReferenceCountedAclCache()) {\n                            \r\n                            semaphore.release();\n                        }\n                    }\n                }).start();\n\n                try {\n                    boolean acquired = semaphore.tryAcquire(30, TimeUnit.SECONDS);\n                    \r\n                    \r\n                    assertTrue(acquired, \"Couldn't acquire a lock on the ACLCache while we were calling tree.deserialize\");\n                } catch (InterruptedException e1) {\n                    throw new RuntimeException(e1);\n                }\n                ranTestCase.set(true);\n\n                return super.readLong(tag);\n            }\n        };\n\n        tree2.deserialize(ia, \"test\");\n\n        \r\n        assertTrue(ranTestCase.get(), \"Didn't find the expected node\");\n    }\n","date":"2020-08-04 21:01:52","endLine":360,"groupId":"1094","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeserializeDoesntLockACLCacheWhileReading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/fe/83b76d884586dc5dc0759c6c3c886c3aa87ec1.src","preCode":"    public void testDeserializeDoesntLockACLCacheWhileReading() throws Exception {\n        DataTree tree = new DataTree();\n        tree.createNode(\"/marker\", new byte[]{42}, null, -1, 1, 1, 1);\n        final AtomicBoolean ranTestCase = new AtomicBoolean();\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        DataOutputStream out = new DataOutputStream(baos);\n        BinaryOutputArchive oa = new BinaryOutputArchive(out);\n\n        tree.serialize(oa, \"test\");\n\n        DataTree tree2 = new DataTree();\n        DataInputStream in = new DataInputStream(new ByteArrayInputStream(baos.toByteArray()));\n        BinaryInputArchive ia = new BinaryInputArchive(in) {\n            @Override\n            public long readLong(String tag) throws IOException {\n                final Semaphore semaphore = new Semaphore(0);\n\n                new Thread(new Runnable() {\n                    @Override\n                    public void run() {\n\n                        synchronized (tree2.getReferenceCountedAclCache()) {\n                            \r\n                            semaphore.release();\n                        }\n                    }\n                }).start();\n\n                try {\n                    boolean acquired = semaphore.tryAcquire(30, TimeUnit.SECONDS);\n                    \r\n                    \r\n                    assertTrue(\"Couldn't acquire a lock on the ACLCache while we were calling tree.deserialize\", acquired);\n                } catch (InterruptedException e1) {\n                    throw new RuntimeException(e1);\n                }\n                ranTestCase.set(true);\n\n                return super.readLong(tag);\n            }\n        };\n\n        tree2.deserialize(ia, \"test\");\n\n        \r\n        assertTrue(\"Didn't find the expected node\", ranTestCase.get());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/DataTreeTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
