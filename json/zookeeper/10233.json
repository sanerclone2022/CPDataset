[{"authorTime":"2019-07-26 03:41:50","codes":[{"authorDate":"2019-07-26 03:41:50","commitOrder":1,"curCode":"    public void testTooManySyncsEssential() throws Exception {\n        LearnerSyncThrottler throttler =\n                new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        } catch (SyncThrottleException ex) {\n            Assert.fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        throttler.beginSync(false);\n    }\n","date":"2019-07-26 03:41:50","endLine":75,"groupId":"3911","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTooManySyncsEssential","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d3/ce47b2def80ae2b494136b2331b15ab4aa874a.src","preCode":"    public void testTooManySyncsEssential() throws Exception {\n        LearnerSyncThrottler throttler =\n                new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        } catch (SyncThrottleException ex) {\n            Assert.fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        throttler.beginSync(false);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerSyncThrottlerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"},{"authorDate":"2019-07-26 03:41:50","commitOrder":1,"curCode":"    public void testNoThrottle() throws Exception {\n        LearnerSyncThrottler throttler =\n                new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        }\n        catch (SyncThrottleException ex) {\n            Assert.fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        for (int i = 0; i < 5; i++) {\n            throttler.endSync();\n            throttler.beginSync(false);\n        }\n        Assert.assertTrue(\"should get here without exception\", true);\n    }\n","date":"2019-07-26 03:41:50","endLine":95,"groupId":"3911","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoThrottle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d3/ce47b2def80ae2b494136b2331b15ab4aa874a.src","preCode":"    public void testNoThrottle() throws Exception {\n        LearnerSyncThrottler throttler =\n                new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        }\n        catch (SyncThrottleException ex) {\n            Assert.fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        for (int i = 0; i < 5; i++) {\n            throttler.endSync();\n            throttler.beginSync(false);\n        }\n        Assert.assertTrue(\"should get here without exception\", true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerSyncThrottlerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"}],"commitId":"f38905e58e4961ae04d876e1855d6ccb372a706b","commitMessage":"@@@ZOOKEEPER-3437: Improve sync throttling on a learner master\n\nAuthor: Jie Huang <jiehuang@fb.com>\n\nReviewers: Michael Han <lhan@twitter.com>.  Enrico Olivelli <eolivelli@apache.org>.  Fangmin Lyu <fangmin@apache.org>\n\nCloses #995 from jhuan31/ZOOKEEPER-3437\n","date":"2019-07-26 03:41:50","modifiedFileCount":"9","status":"B","submitter":"Jie Huang"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testTooManySyncsEssential() throws Exception {\n        LearnerSyncThrottler throttler = new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        } catch (SyncThrottleException ex) {\n            fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        throttler.beginSync(false);\n    }\n","date":"2019-08-17 23:13:15","endLine":74,"groupId":"857","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTooManySyncsEssential","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/9c/6385e41840226dacf8207f6a25727707501866.src","preCode":"    public void testTooManySyncsEssential() throws Exception {\n        LearnerSyncThrottler throttler =\n                new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        } catch (SyncThrottleException ex) {\n            Assert.fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        throttler.beginSync(false);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerSyncThrottlerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testNoThrottle() throws Exception {\n        LearnerSyncThrottler throttler = new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        } catch (SyncThrottleException ex) {\n            fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        for (int i = 0; i < 5; i++) {\n            throttler.endSync();\n            throttler.beginSync(false);\n        }\n        assertTrue(\"should get here without exception\", true);\n    }\n","date":"2019-08-17 23:13:15","endLine":92,"groupId":"857","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoThrottle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/9c/6385e41840226dacf8207f6a25727707501866.src","preCode":"    public void testNoThrottle() throws Exception {\n        LearnerSyncThrottler throttler =\n                new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        }\n        catch (SyncThrottleException ex) {\n            Assert.fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        for (int i = 0; i < 5; i++) {\n            throttler.endSync();\n            throttler.beginSync(false);\n        }\n        Assert.assertTrue(\"should get here without exception\", true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerSyncThrottlerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testTooManySyncsEssential(LearnerSyncThrottler.SyncType syncType) {\n        assertThrows(SyncThrottleException.class, () -> {\n            LearnerSyncThrottler throttler = new LearnerSyncThrottler(5, syncType);\n            try {\n                for (int i = 0; i < 6; i++) {\n                    throttler.beginSync(true);\n                }\n            } catch (SyncThrottleException ex) {\n                fail(\"essential syncs should not be throttled\");\n            }\n            throttler.endSync();\n            throttler.beginSync(false);\n        });\n    }\n","date":"2020-08-04 21:01:52","endLine":68,"groupId":"10233","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testTooManySyncsEssential","params":"(LearnerSyncThrottler.SyncTypesyncType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/fb/d33d2a02fac0a9c8f0c056e0e6aa4b2021021a.src","preCode":"    public void testTooManySyncsEssential() throws Exception {\n        LearnerSyncThrottler throttler = new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        } catch (SyncThrottleException ex) {\n            fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        throttler.beginSync(false);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerSyncThrottlerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testNoThrottle(LearnerSyncThrottler.SyncType syncType) throws Exception {\n        LearnerSyncThrottler throttler = new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        } catch (SyncThrottleException ex) {\n            fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        for (int i = 0; i < 5; i++) {\n            throttler.endSync();\n            throttler.beginSync(false);\n        }\n        assertTrue(true, \"should get here without exception\");\n    }\n","date":"2020-08-04 21:01:52","endLine":87,"groupId":"10233","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testNoThrottle","params":"(LearnerSyncThrottler.SyncTypesyncType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/fb/d33d2a02fac0a9c8f0c056e0e6aa4b2021021a.src","preCode":"    public void testNoThrottle() throws Exception {\n        LearnerSyncThrottler throttler = new LearnerSyncThrottler(5, syncType);\n        try {\n            for (int i = 0; i < 6; i++) {\n                throttler.beginSync(true);\n            }\n        } catch (SyncThrottleException ex) {\n            fail(\"essential syncs should not be throttled\");\n        }\n        throttler.endSync();\n        for (int i = 0; i < 5; i++) {\n            throttler.endSync();\n            throttler.beginSync(false);\n        }\n        assertTrue(\"should get here without exception\", true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerSyncThrottlerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
