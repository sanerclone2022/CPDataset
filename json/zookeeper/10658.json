[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testChild()\n        throws IOException, KeeperException, InterruptedException\n    {\n        String name = \"/foo\";\n        zk.create(name, name.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n\n        String childname = name + \"/bar\";\n        zk.create(childname, childname.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.EPHEMERAL);\n\n        Stat stat = new Stat();\n        List<String> s = zk.getChildren(name, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid() + 1, stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(1, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n        Assert.assertEquals(name.length(), stat.getDataLength());\n        Assert.assertEquals(1, stat.getNumChildren());\n        Assert.assertEquals(s.size(), stat.getNumChildren());\n\n        s = zk.getChildren(childname, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid(), stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(0, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(zk.getSessionId(), stat.getEphemeralOwner());\n        Assert.assertEquals(childname.length(), stat.getDataLength());\n        Assert.assertEquals(0, stat.getNumChildren());\n        Assert.assertEquals(s.size(), stat.getNumChildren());\n    }\n","date":"2018-10-19 20:39:50","endLine":89,"groupId":"2846","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testChild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/e4/1fffe08a4988542924b5a8bbca7ba377ec23ec.src","preCode":"    public void testChild()\n        throws IOException, KeeperException, InterruptedException\n    {\n        String name = \"/foo\";\n        zk.create(name, name.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n\n        String childname = name + \"/bar\";\n        zk.create(childname, childname.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.EPHEMERAL);\n\n        Stat stat = new Stat();\n        List<String> s = zk.getChildren(name, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid() + 1, stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(1, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n        Assert.assertEquals(name.length(), stat.getDataLength());\n        Assert.assertEquals(1, stat.getNumChildren());\n        Assert.assertEquals(s.size(), stat.getNumChildren());\n\n        s = zk.getChildren(childname, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid(), stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(0, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(zk.getSessionId(), stat.getEphemeralOwner());\n        Assert.assertEquals(childname.length(), stat.getDataLength());\n        Assert.assertEquals(0, stat.getNumChildren());\n        Assert.assertEquals(s.size(), stat.getNumChildren());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/GetChildren2Test.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testChild()\n        throws IOException, KeeperException, InterruptedException\n    {\n        String name = \"/foo\";\n        zk.create(name, name.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n\n        String childname = name + \"/bar\";\n        zk.create(childname, childname.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.EPHEMERAL);\n\n        Stat stat;\n\n        stat = newStat();\n        zk.getData(name, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid() + 1, stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(1, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n        Assert.assertEquals(name.length(), stat.getDataLength());\n        Assert.assertEquals(1, stat.getNumChildren());\n\n        stat = newStat();\n        zk.getData(childname, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid(), stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(0, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(zk.getSessionId(), stat.getEphemeralOwner());\n        Assert.assertEquals(childname.length(), stat.getDataLength());\n        Assert.assertEquals(0, stat.getNumChildren());\n    }\n","date":"2018-10-19 20:39:50","endLine":135,"groupId":"2846","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testChild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f4/c01aa5cd9ba22ebe2f72e6a876f3b17e3684f5.src","preCode":"    public void testChild()\n        throws IOException, KeeperException, InterruptedException\n    {\n        String name = \"/foo\";\n        zk.create(name, name.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n\n        String childname = name + \"/bar\";\n        zk.create(childname, childname.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.EPHEMERAL);\n\n        Stat stat;\n\n        stat = newStat();\n        zk.getData(name, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid() + 1, stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(1, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n        Assert.assertEquals(name.length(), stat.getDataLength());\n        Assert.assertEquals(1, stat.getNumChildren());\n\n        stat = newStat();\n        zk.getData(childname, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid(), stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(0, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(zk.getSessionId(), stat.getEphemeralOwner());\n        Assert.assertEquals(childname.length(), stat.getDataLength());\n        Assert.assertEquals(0, stat.getNumChildren());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/StatTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testChild() throws IOException, KeeperException, InterruptedException {\n        String name = \"/foo\";\n        zk.create(name, name.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n\n        String childname = name + \"/bar\";\n        zk.create(childname, childname.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL);\n\n        Stat stat = new Stat();\n        List<String> s = zk.getChildren(name, false, stat);\n\n        assertEquals(stat.getCzxid(), stat.getMzxid());\n        assertEquals(stat.getCzxid() + 1, stat.getPzxid());\n        assertEquals(stat.getCtime(), stat.getMtime());\n        assertEquals(1, stat.getCversion());\n        assertEquals(0, stat.getVersion());\n        assertEquals(0, stat.getAversion());\n        assertEquals(0, stat.getEphemeralOwner());\n        assertEquals(name.length(), stat.getDataLength());\n        assertEquals(1, stat.getNumChildren());\n        assertEquals(s.size(), stat.getNumChildren());\n\n        s = zk.getChildren(childname, false, stat);\n\n        assertEquals(stat.getCzxid(), stat.getMzxid());\n        assertEquals(stat.getCzxid(), stat.getPzxid());\n        assertEquals(stat.getCtime(), stat.getMtime());\n        assertEquals(0, stat.getCversion());\n        assertEquals(0, stat.getVersion());\n        assertEquals(0, stat.getAversion());\n        assertEquals(zk.getSessionId(), stat.getEphemeralOwner());\n        assertEquals(childname.length(), stat.getDataLength());\n        assertEquals(0, stat.getNumChildren());\n        assertEquals(s.size(), stat.getNumChildren());\n    }\n","date":"2019-08-17 23:13:15","endLine":85,"groupId":"10658","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testChild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/1d/8c0fd3df3ad0bf8a39a1576288bc9f5f3ba874.src","preCode":"    public void testChild()\n        throws IOException, KeeperException, InterruptedException\n    {\n        String name = \"/foo\";\n        zk.create(name, name.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n\n        String childname = name + \"/bar\";\n        zk.create(childname, childname.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.EPHEMERAL);\n\n        Stat stat = new Stat();\n        List<String> s = zk.getChildren(name, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid() + 1, stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(1, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n        Assert.assertEquals(name.length(), stat.getDataLength());\n        Assert.assertEquals(1, stat.getNumChildren());\n        Assert.assertEquals(s.size(), stat.getNumChildren());\n\n        s = zk.getChildren(childname, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid(), stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(0, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(zk.getSessionId(), stat.getEphemeralOwner());\n        Assert.assertEquals(childname.length(), stat.getDataLength());\n        Assert.assertEquals(0, stat.getNumChildren());\n        Assert.assertEquals(s.size(), stat.getNumChildren());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/GetChildren2Test.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testChild() throws IOException, KeeperException, InterruptedException {\n        String name = \"/foo\";\n        zk.create(name, name.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n\n        String childname = name + \"/bar\";\n        zk.create(childname, childname.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL);\n\n        Stat stat;\n\n        stat = newStat();\n        zk.getData(name, false, stat);\n\n        assertEquals(stat.getCzxid(), stat.getMzxid());\n        assertEquals(stat.getCzxid() + 1, stat.getPzxid());\n        assertEquals(stat.getCtime(), stat.getMtime());\n        assertEquals(1, stat.getCversion());\n        assertEquals(0, stat.getVersion());\n        assertEquals(0, stat.getAversion());\n        assertEquals(0, stat.getEphemeralOwner());\n        assertEquals(name.length(), stat.getDataLength());\n        assertEquals(1, stat.getNumChildren());\n\n        stat = newStat();\n        zk.getData(childname, false, stat);\n\n        assertEquals(stat.getCzxid(), stat.getMzxid());\n        assertEquals(stat.getCzxid(), stat.getPzxid());\n        assertEquals(stat.getCtime(), stat.getMtime());\n        assertEquals(0, stat.getCversion());\n        assertEquals(0, stat.getVersion());\n        assertEquals(0, stat.getAversion());\n        assertEquals(zk.getSessionId(), stat.getEphemeralOwner());\n        assertEquals(childname.length(), stat.getDataLength());\n        assertEquals(0, stat.getNumChildren());\n    }\n","date":"2019-08-17 23:13:15","endLine":129,"groupId":"10658","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testChild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/cf/575139b2f7a41f0cd807b9e7943257592944dd.src","preCode":"    public void testChild()\n        throws IOException, KeeperException, InterruptedException\n    {\n        String name = \"/foo\";\n        zk.create(name, name.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n\n        String childname = name + \"/bar\";\n        zk.create(childname, childname.getBytes(), Ids.OPEN_ACL_UNSAFE,\n                CreateMode.EPHEMERAL);\n\n        Stat stat;\n\n        stat = newStat();\n        zk.getData(name, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid() + 1, stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(1, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n        Assert.assertEquals(name.length(), stat.getDataLength());\n        Assert.assertEquals(1, stat.getNumChildren());\n\n        stat = newStat();\n        zk.getData(childname, false, stat);\n\n        Assert.assertEquals(stat.getCzxid(), stat.getMzxid());\n        Assert.assertEquals(stat.getCzxid(), stat.getPzxid());\n        Assert.assertEquals(stat.getCtime(), stat.getMtime());\n        Assert.assertEquals(0, stat.getCversion());\n        Assert.assertEquals(0, stat.getVersion());\n        Assert.assertEquals(0, stat.getAversion());\n        Assert.assertEquals(zk.getSessionId(), stat.getEphemeralOwner());\n        Assert.assertEquals(childname.length(), stat.getDataLength());\n        Assert.assertEquals(0, stat.getNumChildren());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/StatTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
