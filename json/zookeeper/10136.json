[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testNoCommitWorkersReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testNoCommitWorkersReadOnlyWorkload\");\n        setUp(0, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        Assert.assertFalse(fail);\n        Assert.assertTrue(\"No read requests processed\", processedReadRequests.get() > 0);\n        \r\n        Assert.assertTrue(\"Write requests processed\", processedWriteRequests.get() == numClients);\n    }\n","date":"2018-10-05 20:25:43","endLine":212,"groupId":"2118","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoCommitWorkersReadOnlyWorkload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c6/ee230acf2e0b717690493c4393a9aa334264fe.src","preCode":"    public void testNoCommitWorkersReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testNoCommitWorkersReadOnlyWorkload\");\n        setUp(0, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        Assert.assertFalse(fail);\n        Assert.assertTrue(\"No read requests processed\", processedReadRequests.get() > 0);\n        \r\n        Assert.assertTrue(\"Write requests processed\", processedWriteRequests.get() == numClients);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testOneCommitWorkerReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testOneCommitWorkerReadOnlyWorkload\");\n        setUp(1, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        Assert.assertFalse(fail);\n        Assert.assertTrue(\"No read requests processed\", processedReadRequests.get() > 0);\n        \r\n        Assert.assertTrue(\"Write requests processed\", processedWriteRequests.get() == numClients);\n    }\n","date":"2018-10-05 20:25:43","endLine":238,"groupId":"2118","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOneCommitWorkerReadOnlyWorkload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c6/ee230acf2e0b717690493c4393a9aa334264fe.src","preCode":"    public void testOneCommitWorkerReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testOneCommitWorkerReadOnlyWorkload\");\n        setUp(1, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        Assert.assertFalse(fail);\n        Assert.assertTrue(\"No read requests processed\", processedReadRequests.get() > 0);\n        \r\n        Assert.assertTrue(\"Write requests processed\", processedWriteRequests.get() == numClients);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testNoCommitWorkersReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testNoCommitWorkersReadOnlyWorkload\");\n        setUp(0, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        assertFalse(fail);\n        assertTrue(\"No read requests processed\", processedReadRequests.get() > 0);\n        \r\n        assertTrue(\"Write requests processed\", processedWriteRequests.get() == numClients);\n    }\n","date":"2019-08-17 23:13:15","endLine":212,"groupId":"4408","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoCommitWorkersReadOnlyWorkload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ae/439db08d3b1f2745be875ec5310e6693910c98.src","preCode":"    public void testNoCommitWorkersReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testNoCommitWorkersReadOnlyWorkload\");\n        setUp(0, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        Assert.assertFalse(fail);\n        Assert.assertTrue(\"No read requests processed\", processedReadRequests.get() > 0);\n        \r\n        Assert.assertTrue(\"Write requests processed\", processedWriteRequests.get() == numClients);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testOneCommitWorkerReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testOneCommitWorkerReadOnlyWorkload\");\n        setUp(1, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        assertFalse(fail);\n        assertTrue(\"No read requests processed\", processedReadRequests.get() > 0);\n        \r\n        assertTrue(\"Write requests processed\", processedWriteRequests.get() == numClients);\n    }\n","date":"2019-08-17 23:13:15","endLine":238,"groupId":"4408","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOneCommitWorkerReadOnlyWorkload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ae/439db08d3b1f2745be875ec5310e6693910c98.src","preCode":"    public void testOneCommitWorkerReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testOneCommitWorkerReadOnlyWorkload\");\n        setUp(1, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        Assert.assertFalse(fail);\n        Assert.assertTrue(\"No read requests processed\", processedReadRequests.get() > 0);\n        \r\n        Assert.assertTrue(\"Write requests processed\", processedWriteRequests.get() == numClients);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testNoCommitWorkersReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testNoCommitWorkersReadOnlyWorkload\");\n        setUp(0, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        assertFalse(fail);\n        assertTrue(processedReadRequests.get() > 0, \"No read requests processed\");\n        \r\n        assertTrue(processedWriteRequests.get() == numClients, \"Write requests processed\");\n    }\n","date":"2020-08-04 21:01:52","endLine":212,"groupId":"10136","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testNoCommitWorkersReadOnlyWorkload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/46/958d1949c32cbb4416fb42d662c3813d06a094.src","preCode":"    public void testNoCommitWorkersReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testNoCommitWorkersReadOnlyWorkload\");\n        setUp(0, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        assertFalse(fail);\n        assertTrue(\"No read requests processed\", processedReadRequests.get() > 0);\n        \r\n        assertTrue(\"Write requests processed\", processedWriteRequests.get() == numClients);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testOneCommitWorkerReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testOneCommitWorkerReadOnlyWorkload\");\n        setUp(1, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        assertFalse(fail);\n        assertTrue(processedReadRequests.get() > 0, \"No read requests processed\");\n        \r\n        assertTrue(processedWriteRequests.get() == numClients, \"Write requests processed\");\n    }\n","date":"2020-08-04 21:01:52","endLine":238,"groupId":"10136","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testOneCommitWorkerReadOnlyWorkload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/46/958d1949c32cbb4416fb42d662c3813d06a094.src","preCode":"    public void testOneCommitWorkerReadOnlyWorkload() throws Exception {\n        int numClients = 10;\n        LOG.info(\"testOneCommitWorkerReadOnlyWorkload\");\n        setUp(1, numClients, 0);\n        synchronized (this) {\n            wait(TEST_RUN_TIME_IN_MS);\n        }\n        assertFalse(fail);\n        assertTrue(\"No read requests processed\", processedReadRequests.get() > 0);\n        \r\n        assertTrue(\"Write requests processed\", processedWriteRequests.get() == numClients);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
