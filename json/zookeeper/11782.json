[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    static public CreateMode fromFlag(int flag) throws KeeperException {\n        switch(flag) {\n        case 0: return CreateMode.PERSISTENT;\n\n        case 1: return CreateMode.EPHEMERAL;\n\n        case 2: return CreateMode.PERSISTENT_SEQUENTIAL;\n\n        case 3: return CreateMode.EPHEMERAL_SEQUENTIAL ;\n\n        case 4: return CreateMode.CONTAINER;\n\n        case 5: return CreateMode.PERSISTENT_WITH_TTL;\n\n        case 6: return CreateMode.PERSISTENT_SEQUENTIAL_WITH_TTL;\n\n        default:\n            String errMsg = \"Received an invalid flag value: \" + flag\n                    + \" to convert to a CreateMode\";\n            LOG.error(errMsg);\n            throw new KeeperException.BadArgumentsException(errMsg);\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":134,"groupId":"1501","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fromFlag","params":"(intflag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/58/7f7a1291569fa2a2f710519df2f128c61b0ad8.src","preCode":"    static public CreateMode fromFlag(int flag) throws KeeperException {\n        switch(flag) {\n        case 0: return CreateMode.PERSISTENT;\n\n        case 1: return CreateMode.EPHEMERAL;\n\n        case 2: return CreateMode.PERSISTENT_SEQUENTIAL;\n\n        case 3: return CreateMode.EPHEMERAL_SEQUENTIAL ;\n\n        case 4: return CreateMode.CONTAINER;\n\n        case 5: return CreateMode.PERSISTENT_WITH_TTL;\n\n        case 6: return CreateMode.PERSISTENT_SEQUENTIAL_WITH_TTL;\n\n        default:\n            String errMsg = \"Received an invalid flag value: \" + flag\n                    + \" to convert to a CreateMode\";\n            LOG.error(errMsg);\n            throw new KeeperException.BadArgumentsException(errMsg);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/CreateMode.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    static public CreateMode fromFlag(int flag, CreateMode defaultMode) {\n        switch(flag) {\n            case 0:\n                return CreateMode.PERSISTENT;\n\n            case 1:\n                return CreateMode.EPHEMERAL;\n\n            case 2:\n                return CreateMode.PERSISTENT_SEQUENTIAL;\n\n            case 3:\n                return CreateMode.EPHEMERAL_SEQUENTIAL;\n\n            case 4:\n                return CreateMode.CONTAINER;\n\n            case 5:\n                return CreateMode.PERSISTENT_WITH_TTL;\n\n            case 6:\n                return CreateMode.PERSISTENT_SEQUENTIAL_WITH_TTL;\n\n            default:\n                return defaultMode;\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":165,"groupId":"1501","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fromFlag","params":"(intflag@CreateModedefaultMode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/58/7f7a1291569fa2a2f710519df2f128c61b0ad8.src","preCode":"    static public CreateMode fromFlag(int flag, CreateMode defaultMode) {\n        switch(flag) {\n            case 0:\n                return CreateMode.PERSISTENT;\n\n            case 1:\n                return CreateMode.EPHEMERAL;\n\n            case 2:\n                return CreateMode.PERSISTENT_SEQUENTIAL;\n\n            case 3:\n                return CreateMode.EPHEMERAL_SEQUENTIAL;\n\n            case 4:\n                return CreateMode.CONTAINER;\n\n            case 5:\n                return CreateMode.PERSISTENT_WITH_TTL;\n\n            case 6:\n                return CreateMode.PERSISTENT_SEQUENTIAL_WITH_TTL;\n\n            default:\n                return defaultMode;\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/CreateMode.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public static CreateMode fromFlag(int flag) throws KeeperException {\n        switch (flag) {\n        case 0:\n            return CreateMode.PERSISTENT;\n\n        case 1:\n            return CreateMode.EPHEMERAL;\n\n        case 2:\n            return CreateMode.PERSISTENT_SEQUENTIAL;\n\n        case 3:\n            return CreateMode.EPHEMERAL_SEQUENTIAL;\n\n        case 4:\n            return CreateMode.CONTAINER;\n\n        case 5:\n            return CreateMode.PERSISTENT_WITH_TTL;\n\n        case 6:\n            return CreateMode.PERSISTENT_SEQUENTIAL_WITH_TTL;\n\n        default:\n            String errMsg = \"Received an invalid flag value: \" + flag + \" to convert to a CreateMode\";\n            LOG.error(errMsg);\n            throw new KeeperException.BadArgumentsException(errMsg);\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":140,"groupId":"11782","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"fromFlag","params":"(intflag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/13/9722a1f3aca90d35f28bbd7604fadf7e3b9c27.src","preCode":"    static public CreateMode fromFlag(int flag) throws KeeperException {\n        switch(flag) {\n        case 0: return CreateMode.PERSISTENT;\n\n        case 1: return CreateMode.EPHEMERAL;\n\n        case 2: return CreateMode.PERSISTENT_SEQUENTIAL;\n\n        case 3: return CreateMode.EPHEMERAL_SEQUENTIAL ;\n\n        case 4: return CreateMode.CONTAINER;\n\n        case 5: return CreateMode.PERSISTENT_WITH_TTL;\n\n        case 6: return CreateMode.PERSISTENT_SEQUENTIAL_WITH_TTL;\n\n        default:\n            String errMsg = \"Received an invalid flag value: \" + flag\n                    + \" to convert to a CreateMode\";\n            LOG.error(errMsg);\n            throw new KeeperException.BadArgumentsException(errMsg);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/CreateMode.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public static CreateMode fromFlag(int flag, CreateMode defaultMode) {\n        switch (flag) {\n        case 0:\n            return CreateMode.PERSISTENT;\n\n        case 1:\n            return CreateMode.EPHEMERAL;\n\n        case 2:\n            return CreateMode.PERSISTENT_SEQUENTIAL;\n\n        case 3:\n            return CreateMode.EPHEMERAL_SEQUENTIAL;\n\n        case 4:\n            return CreateMode.CONTAINER;\n\n        case 5:\n            return CreateMode.PERSISTENT_WITH_TTL;\n\n        case 6:\n            return CreateMode.PERSISTENT_SEQUENTIAL_WITH_TTL;\n\n        default:\n            return defaultMode;\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":171,"groupId":"11782","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"fromFlag","params":"(intflag@CreateModedefaultMode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/13/9722a1f3aca90d35f28bbd7604fadf7e3b9c27.src","preCode":"    static public CreateMode fromFlag(int flag, CreateMode defaultMode) {\n        switch(flag) {\n            case 0:\n                return CreateMode.PERSISTENT;\n\n            case 1:\n                return CreateMode.EPHEMERAL;\n\n            case 2:\n                return CreateMode.PERSISTENT_SEQUENTIAL;\n\n            case 3:\n                return CreateMode.EPHEMERAL_SEQUENTIAL;\n\n            case 4:\n                return CreateMode.CONTAINER;\n\n            case 5:\n                return CreateMode.PERSISTENT_WITH_TTL;\n\n            case 6:\n                return CreateMode.PERSISTENT_SEQUENTIAL_WITH_TTL;\n\n            default:\n                return defaultMode;\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/CreateMode.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
