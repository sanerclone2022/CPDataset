[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"        public void verifyMultiFailure_AllErrorResult() {\n            List<Op> ops = Arrays.asList(\n                    Op.create(\"/multi\", new byte[0],\n                            Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT),\n                    Op.delete(\"/nonexist1\", -1),\n                    Op.setData(\"/multi\", \"test\".getBytes(), -1));\n            zk.multi(ops, this, null);\n            latch_await();\n\n            Assert.assertTrue(this.opResults.get(0) instanceof OpResult.ErrorResult);\n            Assert.assertTrue(this.opResults.get(1) instanceof OpResult.ErrorResult);\n            Assert.assertTrue(this.opResults.get(2) instanceof OpResult.ErrorResult);\n        }\n","date":"2018-10-19 20:39:50","endLine":792,"groupId":"3534","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyMultiFailure_AllErrorResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/b6/34c9fc059c48480d9afa04f97b6026d85c0010.src","preCode":"        public void verifyMultiFailure_AllErrorResult() {\n            List<Op> ops = Arrays.asList(\n                    Op.create(\"/multi\", new byte[0],\n                            Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT),\n                    Op.delete(\"/nonexist1\", -1),\n                    Op.setData(\"/multi\", \"test\".getBytes(), -1));\n            zk.multi(ops, this, null);\n            latch_await();\n\n            Assert.assertTrue(this.opResults.get(0) instanceof OpResult.ErrorResult);\n            Assert.assertTrue(this.opResults.get(1) instanceof OpResult.ErrorResult);\n            Assert.assertTrue(this.opResults.get(2) instanceof OpResult.ErrorResult);\n        }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AsyncOps.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":780,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"        public void verifyMultiFailure_NoSideEffect() throws KeeperException, InterruptedException {\n            List<Op> ops = Arrays.asList(\n                    Op.create(\"/multi\", new byte[0],\n                            Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT),\n                    Op.delete(\"/nonexist1\", -1));\n            zk.multi(ops, this, null);\n            latch_await();\n\n            Assert.assertTrue(this.opResults.get(0) instanceof OpResult.ErrorResult);\n            Assert.assertNull(zk.exists(\"/multi\", false));\n        }\n","date":"2018-10-19 20:39:50","endLine":804,"groupId":"2914","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyMultiFailure_NoSideEffect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/b6/34c9fc059c48480d9afa04f97b6026d85c0010.src","preCode":"        public void verifyMultiFailure_NoSideEffect() throws KeeperException, InterruptedException {\n            List<Op> ops = Arrays.asList(\n                    Op.create(\"/multi\", new byte[0],\n                            Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT),\n                    Op.delete(\"/nonexist1\", -1));\n            zk.multi(ops, this, null);\n            latch_await();\n\n            Assert.assertTrue(this.opResults.get(0) instanceof OpResult.ErrorResult);\n            Assert.assertNull(zk.exists(\"/multi\", false));\n        }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AsyncOps.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":794,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"        public void verifyMultiFailure_AllErrorResult() {\n            List<Op> ops = Arrays.asList(\n                Op.create(\"/multi\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT),\n                Op.delete(\"/nonexist1\", -1), Op.setData(\"/multi\", \"test\".getBytes(), -1));\n            zk.multi(ops, this, null);\n            latch_await();\n\n            assertTrue(this.opResults.get(0) instanceof OpResult.ErrorResult);\n            assertTrue(this.opResults.get(1) instanceof OpResult.ErrorResult);\n            assertTrue(this.opResults.get(2) instanceof OpResult.ErrorResult);\n        }\n","date":"2019-08-17 23:13:15","endLine":807,"groupId":"10535","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyMultiFailure_AllErrorResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d5/f2310c3317ce4973d943d396cb3a8cfa110d89.src","preCode":"        public void verifyMultiFailure_AllErrorResult() {\n            List<Op> ops = Arrays.asList(\n                    Op.create(\"/multi\", new byte[0],\n                            Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT),\n                    Op.delete(\"/nonexist1\", -1),\n                    Op.setData(\"/multi\", \"test\".getBytes(), -1));\n            zk.multi(ops, this, null);\n            latch_await();\n\n            Assert.assertTrue(this.opResults.get(0) instanceof OpResult.ErrorResult);\n            Assert.assertTrue(this.opResults.get(1) instanceof OpResult.ErrorResult);\n            Assert.assertTrue(this.opResults.get(2) instanceof OpResult.ErrorResult);\n        }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AsyncOps.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":797,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"        public void verifyMultiFailure_NoSideEffect() throws KeeperException, InterruptedException {\n            List<Op> ops = Arrays.asList(\n                Op.create(\"/multi\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT),\n                Op.delete(\"/nonexist1\", -1));\n            zk.multi(ops, this, null);\n            latch_await();\n\n            assertTrue(this.opResults.get(0) instanceof OpResult.ErrorResult);\n            assertNull(zk.exists(\"/multi\", false));\n        }\n","date":"2019-08-17 23:13:15","endLine":818,"groupId":"10535","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyMultiFailure_NoSideEffect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d5/f2310c3317ce4973d943d396cb3a8cfa110d89.src","preCode":"        public void verifyMultiFailure_NoSideEffect() throws KeeperException, InterruptedException {\n            List<Op> ops = Arrays.asList(\n                    Op.create(\"/multi\", new byte[0],\n                            Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT),\n                    Op.delete(\"/nonexist1\", -1));\n            zk.multi(ops, this, null);\n            latch_await();\n\n            Assert.assertTrue(this.opResults.get(0) instanceof OpResult.ErrorResult);\n            Assert.assertNull(zk.exists(\"/multi\", false));\n        }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AsyncOps.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":809,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
