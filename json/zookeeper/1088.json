[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testSnapFilesGreaterThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileAboveRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        tmpDir = ClientBase.createTmpDir();\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        Assert.assertTrue(\"Failed to create version_2 dir:\" + version2.toString(),\n                version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        List<File> snapsAboveRecentFiles = new ArrayList<File>();\n        List<File> logsAboveRecentFiles = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge,\n                logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n        createDataDirFiles(offset, fileAboveRecentCount, false, version2,\n                snapsAboveRecentFiles, logsAboveRecentFiles);\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n        verifyFilesAfterPurge(snapsAboveRecentFiles, true);\n        verifyFilesAfterPurge(logsAboveRecentFiles, true);\n    }\n","date":"2018-10-05 20:25:43","endLine":270,"groupId":"1143","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSnapFilesGreaterThanToRetain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/78/98e6eaafeab60440558acd6eea55983410298b.src","preCode":"    public void testSnapFilesGreaterThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileAboveRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        tmpDir = ClientBase.createTmpDir();\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        Assert.assertTrue(\"Failed to create version_2 dir:\" + version2.toString(),\n                version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        List<File> snapsAboveRecentFiles = new ArrayList<File>();\n        List<File> logsAboveRecentFiles = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge,\n                logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n        createDataDirFiles(offset, fileAboveRecentCount, false, version2,\n                snapsAboveRecentFiles, logsAboveRecentFiles);\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n        verifyFilesAfterPurge(snapsAboveRecentFiles, true);\n        verifyFilesAfterPurge(logsAboveRecentFiles, true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/PurgeTxnTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testSnapFilesLessThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        tmpDir = ClientBase.createTmpDir();\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        Assert.assertTrue(\"Failed to create version_2 dir:\" + version2.toString(),\n                version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge,\n                logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n    }\n","date":"2018-10-05 20:25:43","endLine":343,"groupId":"2194","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSnapFilesLessThanToRetain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/78/98e6eaafeab60440558acd6eea55983410298b.src","preCode":"    public void testSnapFilesLessThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        tmpDir = ClientBase.createTmpDir();\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        Assert.assertTrue(\"Failed to create version_2 dir:\" + version2.toString(),\n                version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge,\n                logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/PurgeTxnTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testSnapFilesGreaterThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileAboveRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        tmpDir = ClientBase.createTmpDir();\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        assertTrue(\"Failed to create version_2 dir:\" + version2.toString(), version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        List<File> snapsAboveRecentFiles = new ArrayList<File>();\n        List<File> logsAboveRecentFiles = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge, logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n        createDataDirFiles(offset, fileAboveRecentCount, false, version2, snapsAboveRecentFiles, logsAboveRecentFiles);\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n        verifyFilesAfterPurge(snapsAboveRecentFiles, true);\n        verifyFilesAfterPurge(logsAboveRecentFiles, true);\n    }\n","date":"2019-08-17 23:13:15","endLine":252,"groupId":"1143","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSnapFilesGreaterThanToRetain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f9/c3091d52112157e529978ec52a98193775d0de.src","preCode":"    public void testSnapFilesGreaterThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileAboveRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        tmpDir = ClientBase.createTmpDir();\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        Assert.assertTrue(\"Failed to create version_2 dir:\" + version2.toString(),\n                version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        List<File> snapsAboveRecentFiles = new ArrayList<File>();\n        List<File> logsAboveRecentFiles = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge,\n                logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n        createDataDirFiles(offset, fileAboveRecentCount, false, version2,\n                snapsAboveRecentFiles, logsAboveRecentFiles);\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n        verifyFilesAfterPurge(snapsAboveRecentFiles, true);\n        verifyFilesAfterPurge(logsAboveRecentFiles, true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/PurgeTxnTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testSnapFilesLessThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        tmpDir = ClientBase.createTmpDir();\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        assertTrue(\"Failed to create version_2 dir:\" + version2.toString(), version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge, logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n    }\n","date":"2019-08-17 23:13:15","endLine":322,"groupId":"2194","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSnapFilesLessThanToRetain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f9/c3091d52112157e529978ec52a98193775d0de.src","preCode":"    public void testSnapFilesLessThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        tmpDir = ClientBase.createTmpDir();\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        Assert.assertTrue(\"Failed to create version_2 dir:\" + version2.toString(),\n                version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge,\n                logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/PurgeTxnTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2020-01-30 16:43:09","codes":[{"authorDate":"2020-01-30 16:43:09","commitOrder":3,"curCode":"    public void testSnapFilesGreaterThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileAboveRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        assertTrue(\"Failed to create version_2 dir:\" + version2.toString(), version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        List<File> snapsAboveRecentFiles = new ArrayList<File>();\n        List<File> logsAboveRecentFiles = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge, logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n        createDataDirFiles(offset, fileAboveRecentCount, false, version2, snapsAboveRecentFiles, logsAboveRecentFiles);\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n        verifyFilesAfterPurge(snapsAboveRecentFiles, true);\n        verifyFilesAfterPurge(logsAboveRecentFiles, true);\n    }\n","date":"2020-01-30 16:43:09","endLine":262,"groupId":"1143","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSnapFilesGreaterThanToRetain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/29/c1027949e6031e450b9681c5d40e9f428217cc.src","preCode":"    public void testSnapFilesGreaterThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileAboveRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        tmpDir = ClientBase.createTmpDir();\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        assertTrue(\"Failed to create version_2 dir:\" + version2.toString(), version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        List<File> snapsAboveRecentFiles = new ArrayList<File>();\n        List<File> logsAboveRecentFiles = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge, logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n        createDataDirFiles(offset, fileAboveRecentCount, false, version2, snapsAboveRecentFiles, logsAboveRecentFiles);\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n        verifyFilesAfterPurge(snapsAboveRecentFiles, true);\n        verifyFilesAfterPurge(logsAboveRecentFiles, true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/PurgeTxnTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"},{"authorDate":"2020-01-30 16:43:09","commitOrder":3,"curCode":"    public void testSnapFilesLessThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        assertTrue(\"Failed to create version_2 dir:\" + version2.toString(), version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge, logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n    }\n","date":"2020-01-30 16:43:09","endLine":330,"groupId":"2194","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSnapFilesLessThanToRetain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/29/c1027949e6031e450b9681c5d40e9f428217cc.src","preCode":"    public void testSnapFilesLessThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        tmpDir = ClientBase.createTmpDir();\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        assertTrue(\"Failed to create version_2 dir:\" + version2.toString(), version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge, logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/PurgeTxnTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"M"}],"commitId":"2abdfbc261d4ba2f9d17b51f2b46ab748a7d451f","commitMessage":"@@@ZOOKEEPER-3231: Purge task may lost data when the recent snapshots are all invalid\n\n- Purge task uses `FileTxnSnapLog#findNRecentSnapshot`.  which's likely to lost data when the recent 3 snapshots are all invalid(a new valid snapshot has not generated yet) and at the same time.  Purge task(`e.g ./zkCleanup.sh -n 3`) has started a new round work to clean up the preceding snapshots. we will lose all the data.that's a small probability events.  but it's reproducible.\n- Overall.  using `snaplog.findNValidSnapshots` to make sure the purge task tries to retain N valid snapshots(rather than N snapshots) to avoid a risk of data loss.\n- For the unit test.  it's not easy to use the `mock` way for the following reasons:\n   - when we want to test the `dataDir` which some Snapshots are valid.  others not.Just writing a little data contents to the snapshot to make it valid/invalid has a better flexibility.\n   - too much code changes in the `PurgeTxnTest.java`(pass the original UT) and `FileTxnSnapLog.java`(have some handles)\n- more details in the [ZOOKEEPER-3231](https://issues.apache.org/jira/browse/ZOOKEEPER-3231)\n\nAuthor: maoling <maoling199210191@sina.com>\n\nReviewers: enixon@apache.org.  andor@apache.org\n\nCloses #1079 from maoling/ZOOKEEPER-3231 and squashes the following commits:\n\n674175bef [maoling] setUp() & tearDown().\n472dfd33c [maoling] ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid\n","date":"2020-01-30 16:43:09","modifiedFileCount":"4","status":"M","submitter":"maoling"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":4,"curCode":"    public void testSnapFilesGreaterThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileAboveRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        assertTrue(version2.mkdir(), \"Failed to create version_2 dir:\" + version2.toString());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        List<File> snapsAboveRecentFiles = new ArrayList<File>();\n        List<File> logsAboveRecentFiles = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge, logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n        createDataDirFiles(offset, fileAboveRecentCount, false, version2, snapsAboveRecentFiles, logsAboveRecentFiles);\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n        verifyFilesAfterPurge(snapsAboveRecentFiles, true);\n        verifyFilesAfterPurge(logsAboveRecentFiles, true);\n    }\n","date":"2020-08-04 21:01:52","endLine":263,"groupId":"1088","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testSnapFilesGreaterThanToRetain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/3a/45a8d9610c4f780bcd6bdaa45773349ff625c2.src","preCode":"    public void testSnapFilesGreaterThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileAboveRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        assertTrue(\"Failed to create version_2 dir:\" + version2.toString(), version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        List<File> snapsAboveRecentFiles = new ArrayList<File>();\n        List<File> logsAboveRecentFiles = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge, logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n        createDataDirFiles(offset, fileAboveRecentCount, false, version2, snapsAboveRecentFiles, logsAboveRecentFiles);\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n        verifyFilesAfterPurge(snapsAboveRecentFiles, true);\n        verifyFilesAfterPurge(logsAboveRecentFiles, true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/PurgeTxnTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":4,"curCode":"    public void testSnapFilesLessThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        assertTrue(version2.mkdir(), \"Failed to create version_2 dir:\" + version2.toString());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge, logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n    }\n","date":"2020-08-04 21:01:52","endLine":331,"groupId":"1088","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testSnapFilesLessThanToRetain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/3a/45a8d9610c4f780bcd6bdaa45773349ff625c2.src","preCode":"    public void testSnapFilesLessThanToRetain() throws Exception {\n        int nRecentCount = 4;\n        int fileToPurgeCount = 2;\n        AtomicInteger offset = new AtomicInteger(0);\n        File version2 = new File(tmpDir.toString(), \"version-2\");\n        assertTrue(\"Failed to create version_2 dir:\" + version2.toString(), version2.mkdir());\n        List<File> snapsToPurge = new ArrayList<File>();\n        List<File> logsToPurge = new ArrayList<File>();\n        List<File> snaps = new ArrayList<File>();\n        List<File> logs = new ArrayList<File>();\n        createDataDirFiles(offset, fileToPurgeCount, false, version2, snapsToPurge, logsToPurge);\n        createDataDirFiles(offset, nRecentCount, false, version2, snaps, logs);\n        logs.add(logsToPurge.remove(0)); \r\n\n        \r\n\r\n\n        logsToPurge.remove(0);\n\n        FileTxnSnapLog txnLog = new FileTxnSnapLog(tmpDir, tmpDir);\n        PurgeTxnLog.purgeOlderSnapshots(txnLog, snaps.get(snaps.size() - 1));\n        txnLog.close();\n        verifyFilesAfterPurge(snapsToPurge, false);\n        verifyFilesAfterPurge(logsToPurge, false);\n        verifyFilesAfterPurge(snaps, true);\n        verifyFilesAfterPurge(logs, true);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/PurgeTxnTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
