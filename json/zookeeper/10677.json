[{"authorTime":"2019-11-11 20:59:08","codes":[{"authorDate":"2019-12-19 16:51:41","commitOrder":2,"curCode":"    private static List<String> readAuditLog(ByteArrayOutputStream os) throws IOException {\n        List<String> logs = new ArrayList<>();\n        LineNumberReader r = new LineNumberReader(\n                new StringReader(os.toString()));\n        String line;\n        while ((line = r.readLine()) != null) {\n            logs.add(line);\n        }\n        os.reset();\n        return logs;\n    }\n","date":"2019-12-19 16:51:41","endLine":88,"groupId":"4406","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"readAuditLog","params":"(ByteArrayOutputStreamos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/7a/ed4c6ff4276be29edac92c56d49046983a11d5.src","preCode":"    private static List<String> readAuditLog(ByteArrayOutputStream os) throws IOException {\n        List<String> logs = new ArrayList<>();\n        LineNumberReader r = new LineNumberReader(\n                new StringReader(os.toString()));\n        String line;\n        while ((line = r.readLine()) != null) {\n            logs.add(line);\n        }\n        os.reset();\n        return logs;\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/audit/StandaloneServerAuditTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2019-11-11 20:59:08","commitOrder":2,"curCode":"    private static List<String> readAuditLog(ByteArrayOutputStream os,\n                                             int numberOfLogEntry,\n                                             boolean skipEphemralDeletion) throws IOException {\n        List<String> logs = new ArrayList<>();\n        LineNumberReader r = new LineNumberReader(\n                new StringReader(os.toString()));\n        String line;\n        while ((line = r.readLine()) != null) {\n            if (skipEphemralDeletion\n                    && line.contains(AuditConstants.OP_DEL_EZNODE_EXP)) {\n                continue;\n            }\n            logs.add(line);\n        }\n        os.reset();\n        assertEquals(\n                \"Expected number of log entries are not generated. Logs are \"\n                        + logs,\n                numberOfLogEntry, logs.size());\n        return logs;\n\n    }\n","date":"2019-11-11 20:59:08","endLine":366,"groupId":"4406","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"readAuditLog","params":"(ByteArrayOutputStreamos@intnumberOfLogEntry@booleanskipEphemralDeletion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/0c/408110a17573b94f510a185d3b550b7781e20b.src","preCode":"    private static List<String> readAuditLog(ByteArrayOutputStream os,\n                                             int numberOfLogEntry,\n                                             boolean skipEphemralDeletion) throws IOException {\n        List<String> logs = new ArrayList<>();\n        LineNumberReader r = new LineNumberReader(\n                new StringReader(os.toString()));\n        String line;\n        while ((line = r.readLine()) != null) {\n            if (skipEphemralDeletion\n                    && line.contains(AuditConstants.OP_DEL_EZNODE_EXP)) {\n                continue;\n            }\n            logs.add(line);\n        }\n        os.reset();\n        assertEquals(\n                \"Expected number of log entries are not generated. Logs are \"\n                        + logs,\n                numberOfLogEntry, logs.size());\n        return logs;\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/audit/Log4jAuditLoggerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"NB"}],"commitId":"7c9a1e4e9ae9e3a17c4766b34787e39ca1e42794","commitMessage":"@@@ZOOKEEPER-3653: Audit Log feature fails in a stand alone zookeeper setup\n\nAuthor: sujithsimon22 <sujith.abraham.simon@huawei.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>. Mohammad Arshad <arshad@apache.org>\n\nCloses #1185 from sujithsimon22/master\n","date":"2019-12-19 16:51:41","modifiedFileCount":"1","status":"M","submitter":"Sujith Simon"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2019-12-19 16:51:41","commitOrder":3,"curCode":"    private static List<String> readAuditLog(ByteArrayOutputStream os) throws IOException {\n        List<String> logs = new ArrayList<>();\n        LineNumberReader r = new LineNumberReader(\n                new StringReader(os.toString()));\n        String line;\n        while ((line = r.readLine()) != null) {\n            logs.add(line);\n        }\n        os.reset();\n        return logs;\n    }\n","date":"2019-12-19 16:51:41","endLine":88,"groupId":"10677","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"readAuditLog","params":"(ByteArrayOutputStreamos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/7a/ed4c6ff4276be29edac92c56d49046983a11d5.src","preCode":"    private static List<String> readAuditLog(ByteArrayOutputStream os) throws IOException {\n        List<String> logs = new ArrayList<>();\n        LineNumberReader r = new LineNumberReader(\n                new StringReader(os.toString()));\n        String line;\n        while ((line = r.readLine()) != null) {\n            logs.add(line);\n        }\n        os.reset();\n        return logs;\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/audit/StandaloneServerAuditTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"N"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    private static List<String> readAuditLog(ByteArrayOutputStream os,\n                                             int numberOfLogEntry,\n                                             boolean skipEphemralDeletion) throws IOException {\n        List<String> logs = new ArrayList<>();\n        LineNumberReader r = new LineNumberReader(\n                new StringReader(os.toString()));\n        String line;\n        while ((line = r.readLine()) != null) {\n            if (skipEphemralDeletion\n                    && line.contains(AuditConstants.OP_DEL_EZNODE_EXP)) {\n                continue;\n            }\n            logs.add(line);\n        }\n        os.reset();\n        assertEquals(numberOfLogEntry, logs.size(),\n                \"Expected number of log entries are not generated. Logs are \"\n                        + logs);\n        return logs;\n\n    }\n","date":"2020-08-04 21:01:52","endLine":365,"groupId":"10677","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"readAuditLog","params":"(ByteArrayOutputStreamos@intnumberOfLogEntry@booleanskipEphemralDeletion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/8a/5f781a83a59533fe78c4a0391a647ceabdddf3.src","preCode":"    private static List<String> readAuditLog(ByteArrayOutputStream os,\n                                             int numberOfLogEntry,\n                                             boolean skipEphemralDeletion) throws IOException {\n        List<String> logs = new ArrayList<>();\n        LineNumberReader r = new LineNumberReader(\n                new StringReader(os.toString()));\n        String line;\n        while ((line = r.readLine()) != null) {\n            if (skipEphemralDeletion\n                    && line.contains(AuditConstants.OP_DEL_EZNODE_EXP)) {\n                continue;\n            }\n            logs.add(line);\n        }\n        os.reset();\n        assertEquals(\n                \"Expected number of log entries are not generated. Logs are \"\n                        + logs,\n                numberOfLogEntry, logs.size());\n        return logs;\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/audit/Log4jAuditLoggerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
