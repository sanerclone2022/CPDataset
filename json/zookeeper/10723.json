[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public List<String> getChildren(String path, Stat stat, Watcher watcher)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        synchronized (n) {\n            if (stat != null) {\n                n.copyStat(stat);\n            }\n            List<String> children=new ArrayList<String>(n.getChildren());\n\n            if (watcher != null) {\n                childWatches.addWatch(path, watcher);\n            }\n            return children;\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":730,"groupId":"2551","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getChildren","params":"(Stringpath@Statstat@Watcherwatcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c2/4396a702aeba29e590733edfe6103b16cbf306.src","preCode":"    public List<String> getChildren(String path, Stat stat, Watcher watcher)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        synchronized (n) {\n            if (stat != null) {\n                n.copyStat(stat);\n            }\n            List<String> children=new ArrayList<String>(n.getChildren());\n\n            if (watcher != null) {\n                childWatches.addWatch(path, watcher);\n            }\n            return children;\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":713,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public List<ACL> getACL(String path, Stat stat)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        synchronized (n) {\n            n.copyStat(stat);\n            return new ArrayList<ACL>(aclCache.convertLong(n.acl));\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":758,"groupId":"2904","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getACL","params":"(Stringpath@Statstat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c2/4396a702aeba29e590733edfe6103b16cbf306.src","preCode":"    public List<ACL> getACL(String path, Stat stat)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        synchronized (n) {\n            n.copyStat(stat);\n            return new ArrayList<ACL>(aclCache.convertLong(n.acl));\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":748,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2019-04-12 18:29:32","commitOrder":2,"curCode":"    public List<String> getChildren(String path, Stat stat, Watcher watcher)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        List<String> children;\n        synchronized (n) {\n            if (stat != null) {\n                n.copyStat(stat);\n            }\n            children = new ArrayList<String>(n.getChildren());\n\n            if (watcher != null) {\n                childWatches.addWatch(path, watcher);\n            }\n        }\n\n        int bytes = 0;\n        for (String child : children) {\n            bytes += child.length();\n        }\n        updateReadStat(path, bytes);\n\n        return children;\n    }\n","date":"2019-04-12 18:29:32","endLine":727,"groupId":"3884","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getChildren","params":"(Stringpath@Statstat@Watcherwatcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/70/6912cc30f9998b6177d4bc133a1791ff241c8f.src","preCode":"    public List<String> getChildren(String path, Stat stat, Watcher watcher)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        synchronized (n) {\n            if (stat != null) {\n                n.copyStat(stat);\n            }\n            List<String> children=new ArrayList<String>(n.getChildren());\n\n            if (watcher != null) {\n                childWatches.addWatch(path, watcher);\n            }\n            return children;\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":702,"status":"M"},{"authorDate":"2018-10-05 20:25:43","commitOrder":2,"curCode":"    public List<ACL> getACL(String path, Stat stat)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        synchronized (n) {\n            n.copyStat(stat);\n            return new ArrayList<ACL>(aclCache.convertLong(n.acl));\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":758,"groupId":"2904","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getACL","params":"(Stringpath@Statstat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c2/4396a702aeba29e590733edfe6103b16cbf306.src","preCode":"    public List<ACL> getACL(String path, Stat stat)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        synchronized (n) {\n            n.copyStat(stat);\n            return new ArrayList<ACL>(aclCache.convertLong(n.acl));\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":748,"status":"N"}],"commitId":"ff132ab9dd3dd83df1dbfae5bc9f0cc53f6a4d45","commitMessage":"@@@ZOOKEEPER-3324: Add read/write metrics for top level znodes\n\nanother example of Set metrics.\n\nAuthor: Jie Huang <jiehuang@fb.com>\n\nReviewers: andor@apache.org\n\nCloses #860 from jhuan31/ZOOKEEPER-3324\n","date":"2019-04-12 18:29:32","modifiedFileCount":"3","status":"M","submitter":"Jie Huang"},{"authorTime":"2019-08-01 13:31:29","codes":[{"authorDate":"2019-04-12 18:29:32","commitOrder":3,"curCode":"    public List<String> getChildren(String path, Stat stat, Watcher watcher)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        List<String> children;\n        synchronized (n) {\n            if (stat != null) {\n                n.copyStat(stat);\n            }\n            children = new ArrayList<String>(n.getChildren());\n\n            if (watcher != null) {\n                childWatches.addWatch(path, watcher);\n            }\n        }\n\n        int bytes = 0;\n        for (String child : children) {\n            bytes += child.length();\n        }\n        updateReadStat(path, bytes);\n\n        return children;\n    }\n","date":"2019-04-12 18:29:32","endLine":727,"groupId":"10723","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getChildren","params":"(Stringpath@Statstat@Watcherwatcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/70/6912cc30f9998b6177d4bc133a1791ff241c8f.src","preCode":"    public List<String> getChildren(String path, Stat stat, Watcher watcher)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        List<String> children;\n        synchronized (n) {\n            if (stat != null) {\n                n.copyStat(stat);\n            }\n            children = new ArrayList<String>(n.getChildren());\n\n            if (watcher != null) {\n                childWatches.addWatch(path, watcher);\n            }\n        }\n\n        int bytes = 0;\n        for (String child : children) {\n            bytes += child.length();\n        }\n        updateReadStat(path, bytes);\n\n        return children;\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":702,"status":"N"},{"authorDate":"2019-08-01 13:31:29","commitOrder":3,"curCode":"    public List<ACL> getACL(String path, Stat stat)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        synchronized (n) {\n            if (stat != null) {\n                n.copyStat(stat);\n            }\n            return new ArrayList<ACL>(aclCache.convertLong(n.acl));\n        }\n    }\n","date":"2019-08-01 13:31:29","endLine":809,"groupId":"10723","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getACL","params":"(Stringpath@Statstat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/1c/7f4dc88f94c334705fcebb218b00f5ab4b2da8.src","preCode":"    public List<ACL> getACL(String path, Stat stat)\n            throws KeeperException.NoNodeException {\n        DataNode n = nodes.get(path);\n        if (n == null) {\n            throw new KeeperException.NoNodeException();\n        }\n        synchronized (n) {\n            n.copyStat(stat);\n            return new ArrayList<ACL>(aclCache.convertLong(n.acl));\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":797,"status":"M"}],"commitId":"b2f5548bd5757edbf1887838a487a90523ed2b52","commitMessage":"@@@ZOOKEEPER-3418: Improve quorum throughput through eager ACL checks of requests on local servers.\n\nServing write requests that change the state of the system requires quorum operations.  and in some cases.  the quorum operations can be avoided if the requests are doomed to fail. ACL check failure is such a case. To optimize for this case.  we elevate the ACL check logic and perform eager ACL check on local server (where the requests are received).  and fail fast.  before sending the requests to leader.\n\nAs with any features.  there is a feature flag that can control this feature on.  or off (default). This feature is also forward compatible in that for new any new Op code (and some existing Op code we did not explicit check against).  they will pass the check and (potentially) fail on leader side.  instead of being prematurely filtered out on local server.\n\nThe end result is better throughput and stability of the quorum for certain workloads.\n\nAuthor: Michael Han <lhan@twitter.com>\n\nReviewers: Andor Molnar <andor@apache.org>.  Enrico Olivelli <eolivelli@apache.org>\n\nCloses #971 from hanm/twitter/5c6bbfac811d29228fd97a4621fd6ba547fed178\n","date":"2019-08-01 13:31:29","modifiedFileCount":"9","status":"M","submitter":"Michael Han"}]
