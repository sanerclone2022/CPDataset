[{"authorTime":"2019-01-10 00:22:40","codes":[{"authorDate":"2019-01-10 00:22:40","commitOrder":1,"curCode":"    public void testACLDigestHashHiding_AdminUser() {\n        \r\n        List<Id> authInfo = new ArrayList<Id>();\n        authInfo.add(new Id(\"digest\", \"adminuser:adminsecret\"));\n\n        \r\n        Request r = new Request(cnxn, 0, 0, ZooDefs.OpCode.getACL, bb, authInfo);\n        processor.processRequest(r);\n\n        \r\n        assertMasked(false);\n    }\n","date":"2019-02-06 19:36:37","endLine":164,"groupId":"295","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testACLDigestHashHiding_AdminUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c3/4d7c9ea739716cb94796df103a1c2837303711.src","preCode":"    public void testACLDigestHashHiding_AdminUser() {\n        \r\n        List<Id> authInfo = new ArrayList<Id>();\n        authInfo.add(new Id(\"digest\", \"adminuser:adminsecret\"));\n\n        \r\n        Request r = new Request(cnxn, 0, 0, ZooDefs.OpCode.getACL, bb, authInfo);\n        processor.processRequest(r);\n\n        \r\n        assertMasked(false);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/FinalRequestProcessorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"B"},{"authorDate":"2019-01-10 00:22:40","commitOrder":1,"curCode":"    public void testACLDigestHashHiding_OnlyAdmin() {\n        \r\n        testACLs.clear();\n        testACLs.addAll(Arrays.asList(\n                new ACL(ZooDefs.Perms.READ, new Id(\"digest\", \"user:secrethash\")),\n                new ACL(ZooDefs.Perms.ADMIN, new Id(\"digest\", \"adminuser:adminsecret\"))\n        ));\n        List<Id> authInfo = new ArrayList<Id>();\n        authInfo.add(new Id(\"digest\", \"adminuser:adminsecret\"));\n\n        \r\n        Request r = new Request(cnxn, 0, 0, ZooDefs.OpCode.getACL, bb, authInfo);\n        processor.processRequest(r);\n\n        \r\n        assertTrue(\"Not a GetACL response. Auth failed?\", responseRecord[0] instanceof GetACLResponse);\n        GetACLResponse rsp = (GetACLResponse)responseRecord[0];\n        assertThat(\"Number of ACLs in the response are different\", rsp.getAcl().size(), equalTo(2));\n\n        \r\n        assertThat(\"Password hash mismatch in the response\", rsp.getAcl().get(0).getId().getId(), equalTo(\"user:secrethash\"));\n        assertThat(\"Password hash mismatch in the response\", rsp.getAcl().get(1).getId().getId(), equalTo(\"adminuser:adminsecret\"));\n    }\n","date":"2019-02-06 19:36:37","endLine":189,"groupId":"295","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testACLDigestHashHiding_OnlyAdmin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c3/4d7c9ea739716cb94796df103a1c2837303711.src","preCode":"    public void testACLDigestHashHiding_OnlyAdmin() {\n        \r\n        testACLs.clear();\n        testACLs.addAll(Arrays.asList(\n                new ACL(ZooDefs.Perms.READ, new Id(\"digest\", \"user:secrethash\")),\n                new ACL(ZooDefs.Perms.ADMIN, new Id(\"digest\", \"adminuser:adminsecret\"))\n        ));\n        List<Id> authInfo = new ArrayList<Id>();\n        authInfo.add(new Id(\"digest\", \"adminuser:adminsecret\"));\n\n        \r\n        Request r = new Request(cnxn, 0, 0, ZooDefs.OpCode.getACL, bb, authInfo);\n        processor.processRequest(r);\n\n        \r\n        assertTrue(\"Not a GetACL response. Auth failed?\", responseRecord[0] instanceof GetACLResponse);\n        GetACLResponse rsp = (GetACLResponse)responseRecord[0];\n        assertThat(\"Number of ACLs in the response are different\", rsp.getAcl().size(), equalTo(2));\n\n        \r\n        assertThat(\"Password hash mismatch in the response\", rsp.getAcl().get(0).getId().getId(), equalTo(\"user:secrethash\"));\n        assertThat(\"Password hash mismatch in the response\", rsp.getAcl().get(1).getId().getId(), equalTo(\"adminuser:adminsecret\"));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/FinalRequestProcessorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"B"}],"commitId":"af741cb319d4760cfab1cd3b560635adacd8deca","commitMessage":"@@@ZOOKEEPER-1392: Request READ or ADMIN permission for getAcl()\n","date":"2019-02-06 19:36:37","modifiedFileCount":"1","status":"B","submitter":"Andor Molnar"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2019-01-10 00:22:40","commitOrder":2,"curCode":"    public void testACLDigestHashHiding_AdminUser() {\n        \r\n        List<Id> authInfo = new ArrayList<Id>();\n        authInfo.add(new Id(\"digest\", \"adminuser:adminsecret\"));\n\n        \r\n        Request r = new Request(cnxn, 0, 0, ZooDefs.OpCode.getACL, bb, authInfo);\n        processor.processRequest(r);\n\n        \r\n        assertMasked(false);\n    }\n","date":"2019-02-06 19:36:37","endLine":164,"groupId":"1063","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testACLDigestHashHiding_AdminUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c3/4d7c9ea739716cb94796df103a1c2837303711.src","preCode":"    public void testACLDigestHashHiding_AdminUser() {\n        \r\n        List<Id> authInfo = new ArrayList<Id>();\n        authInfo.add(new Id(\"digest\", \"adminuser:adminsecret\"));\n\n        \r\n        Request r = new Request(cnxn, 0, 0, ZooDefs.OpCode.getACL, bb, authInfo);\n        processor.processRequest(r);\n\n        \r\n        assertMasked(false);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/FinalRequestProcessorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"N"},{"authorDate":"2020-08-04 21:01:52","commitOrder":2,"curCode":"    public void testACLDigestHashHiding_OnlyAdmin() {\n        \r\n        testACLs.clear();\n        testACLs.addAll(Arrays.asList(new ACL(ZooDefs.Perms.READ, new Id(\"digest\", \"user:secrethash\")), new ACL(ZooDefs.Perms.ADMIN, new Id(\"digest\", \"adminuser:adminsecret\"))));\n        List<Id> authInfo = new ArrayList<Id>();\n        authInfo.add(new Id(\"digest\", \"adminuser:adminsecret\"));\n\n        \r\n        Request r = new Request(cnxn, 0, 0, ZooDefs.OpCode.getACL, bb, authInfo);\n        processor.processRequest(r);\n\n        \r\n        assertTrue(responseRecord[0] instanceof GetACLResponse, \"Not a GetACL response. Auth failed?\");\n        GetACLResponse rsp = (GetACLResponse) responseRecord[0];\n        assertThat(\"Number of ACLs in the response are different\", rsp.getAcl().size(), equalTo(2));\n\n        \r\n        assertThat(\"Password hash mismatch in the response\", rsp.getAcl().get(0).getId().getId(), equalTo(\"user:secrethash\"));\n        assertThat(\"Password hash mismatch in the response\", rsp.getAcl().get(1).getId().getId(), equalTo(\"adminuser:adminsecret\"));\n    }\n","date":"2020-08-04 21:01:52","endLine":181,"groupId":"1063","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testACLDigestHashHiding_OnlyAdmin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/01/81d2ebeae7746dd5a9262598d7396a8b623ff2.src","preCode":"    public void testACLDigestHashHiding_OnlyAdmin() {\n        \r\n        testACLs.clear();\n        testACLs.addAll(Arrays.asList(new ACL(ZooDefs.Perms.READ, new Id(\"digest\", \"user:secrethash\")), new ACL(ZooDefs.Perms.ADMIN, new Id(\"digest\", \"adminuser:adminsecret\"))));\n        List<Id> authInfo = new ArrayList<Id>();\n        authInfo.add(new Id(\"digest\", \"adminuser:adminsecret\"));\n\n        \r\n        Request r = new Request(cnxn, 0, 0, ZooDefs.OpCode.getACL, bb, authInfo);\n        processor.processRequest(r);\n\n        \r\n        assertTrue(\"Not a GetACL response. Auth failed?\", responseRecord[0] instanceof GetACLResponse);\n        GetACLResponse rsp = (GetACLResponse) responseRecord[0];\n        assertThat(\"Number of ACLs in the response are different\", rsp.getAcl().size(), equalTo(2));\n\n        \r\n        assertThat(\"Password hash mismatch in the response\", rsp.getAcl().get(0).getId().getId(), equalTo(\"user:secrethash\"));\n        assertThat(\"Password hash mismatch in the response\", rsp.getAcl().get(1).getId().getId(), equalTo(\"adminuser:adminsecret\"));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/FinalRequestProcessorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
