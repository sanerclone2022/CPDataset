[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testPacketsMetrics() {\n        \r\n        ServerStats serverStats = new ServerStats(providerMock);\n        int incrementCount = 20;\n\n        \r\n        for (int i = 0; i < incrementCount; i++) {\n            serverStats.incrementPacketsSent();\n            serverStats.incrementPacketsReceived();\n            serverStats.incrementPacketsReceived();\n        }\n\n        \r\n        Assert.assertEquals(incrementCount, serverStats.getPacketsSent());\n        Assert.assertEquals(incrementCount*2, serverStats.getPacketsReceived());\n\n        \r\n        serverStats.resetRequestCounters();\n\n        \r\n        assertAllPacketsZero(serverStats);\n\n    }\n","date":"2018-10-05 20:25:43","endLine":63,"groupId":"1570","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPacketsMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d2/8dc8ca2f643cd6597ec2d785a98fca6f33ba90.src","preCode":"    public void testPacketsMetrics() {\n        \r\n        ServerStats serverStats = new ServerStats(providerMock);\n        int incrementCount = 20;\n\n        \r\n        for (int i = 0; i < incrementCount; i++) {\n            serverStats.incrementPacketsSent();\n            serverStats.incrementPacketsReceived();\n            serverStats.incrementPacketsReceived();\n        }\n\n        \r\n        Assert.assertEquals(incrementCount, serverStats.getPacketsSent());\n        Assert.assertEquals(incrementCount*2, serverStats.getPacketsReceived());\n\n        \r\n        serverStats.resetRequestCounters();\n\n        \r\n        assertAllPacketsZero(serverStats);\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerStatsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testFsyncThresholdExceedMetrics() {\n        \r\n        ServerStats serverStats = new ServerStats(providerMock);\n        int incrementCount = 30;\n\n        \r\n        for (int i = 0; i < incrementCount; i++) {\n            serverStats.incrementFsyncThresholdExceedCount();\n        }\n\n        \r\n        Assert.assertEquals(incrementCount, serverStats.getFsyncThresholdExceedCount());\n\n        \r\n        serverStats.resetFsyncThresholdExceedCount();\n\n        \r\n        assertFsyncThresholdExceedCountZero(serverStats);\n\n    }\n","date":"2018-10-05 20:25:43","endLine":110,"groupId":"1573","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFsyncThresholdExceedMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d2/8dc8ca2f643cd6597ec2d785a98fca6f33ba90.src","preCode":"    public void testFsyncThresholdExceedMetrics() {\n        \r\n        ServerStats serverStats = new ServerStats(providerMock);\n        int incrementCount = 30;\n\n        \r\n        for (int i = 0; i < incrementCount; i++) {\n            serverStats.incrementFsyncThresholdExceedCount();\n        }\n\n        \r\n        Assert.assertEquals(incrementCount, serverStats.getFsyncThresholdExceedCount());\n\n        \r\n        serverStats.resetFsyncThresholdExceedCount();\n\n        \r\n        assertFsyncThresholdExceedCountZero(serverStats);\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerStatsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testPacketsMetrics() {\n        \r\n        ServerStats serverStats = new ServerStats(providerMock);\n        int incrementCount = 20;\n\n        \r\n        for (int i = 0; i < incrementCount; i++) {\n            serverStats.incrementPacketsSent();\n            serverStats.incrementPacketsReceived();\n            serverStats.incrementPacketsReceived();\n        }\n\n        \r\n        assertEquals(incrementCount, serverStats.getPacketsSent());\n        assertEquals(incrementCount * 2, serverStats.getPacketsReceived());\n\n        \r\n        serverStats.resetRequestCounters();\n\n        \r\n        assertAllPacketsZero(serverStats);\n\n    }\n","date":"2019-08-17 23:13:15","endLine":62,"groupId":"1097","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPacketsMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/05/a35058e92a29ab0b02e6a5babed0442b404ee1.src","preCode":"    public void testPacketsMetrics() {\n        \r\n        ServerStats serverStats = new ServerStats(providerMock);\n        int incrementCount = 20;\n\n        \r\n        for (int i = 0; i < incrementCount; i++) {\n            serverStats.incrementPacketsSent();\n            serverStats.incrementPacketsReceived();\n            serverStats.incrementPacketsReceived();\n        }\n\n        \r\n        Assert.assertEquals(incrementCount, serverStats.getPacketsSent());\n        Assert.assertEquals(incrementCount*2, serverStats.getPacketsReceived());\n\n        \r\n        serverStats.resetRequestCounters();\n\n        \r\n        assertAllPacketsZero(serverStats);\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerStatsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testFsyncThresholdExceedMetrics() {\n        \r\n        ServerStats serverStats = new ServerStats(providerMock);\n        int incrementCount = 30;\n\n        \r\n        for (int i = 0; i < incrementCount; i++) {\n            serverStats.incrementFsyncThresholdExceedCount();\n        }\n\n        \r\n        assertEquals(incrementCount, serverStats.getFsyncThresholdExceedCount());\n\n        \r\n        serverStats.resetFsyncThresholdExceedCount();\n\n        \r\n        assertFsyncThresholdExceedCountZero(serverStats);\n\n    }\n","date":"2019-08-17 23:13:15","endLine":106,"groupId":"1097","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFsyncThresholdExceedMetrics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/05/a35058e92a29ab0b02e6a5babed0442b404ee1.src","preCode":"    public void testFsyncThresholdExceedMetrics() {\n        \r\n        ServerStats serverStats = new ServerStats(providerMock);\n        int incrementCount = 30;\n\n        \r\n        for (int i = 0; i < incrementCount; i++) {\n            serverStats.incrementFsyncThresholdExceedCount();\n        }\n\n        \r\n        Assert.assertEquals(incrementCount, serverStats.getFsyncThresholdExceedCount());\n\n        \r\n        serverStats.resetFsyncThresholdExceedCount();\n\n        \r\n        assertFsyncThresholdExceedCountZero(serverStats);\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerStatsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
