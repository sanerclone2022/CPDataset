[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testHammer() throws Exception {\n        setUp(false);\n        bang = true;\n        LOG.info(\"Starting hammers\");\n        HammerThread[] hammers = new HammerThread[100];\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i] = new HammerThread(\"HammerThread-\" + i);\n            hammers[i].start();\n        }\n        LOG.info(\"Started hammers\");\n        Thread.sleep(5000); \r\n        bang = false;\n        LOG.info(\"Stopping hammers\");\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i].interrupt();\n            verifyThreadTerminated(hammers[i], 60000);\n            Assert.assertFalse(hammers[i].failed);\n        }\n\n        \r\n        LOG.info(\"Hammers stopped, verifying consistency\");\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n\n        restart();\n\n        \r\n        LOG.info(\"Verifying hammers 2\");\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n        tearDown();\n    }\n","date":"2018-10-19 20:39:50","endLine":198,"groupId":"218","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testHammer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/1c/cdc0bc02dc3996a17294ab78f0c5ee364c8ea8.src","preCode":"    public void testHammer() throws Exception {\n        setUp(false);\n        bang = true;\n        LOG.info(\"Starting hammers\");\n        HammerThread[] hammers = new HammerThread[100];\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i] = new HammerThread(\"HammerThread-\" + i);\n            hammers[i].start();\n        }\n        LOG.info(\"Started hammers\");\n        Thread.sleep(5000); \r\n        bang = false;\n        LOG.info(\"Stopping hammers\");\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i].interrupt();\n            verifyThreadTerminated(hammers[i], 60000);\n            Assert.assertFalse(hammers[i].failed);\n        }\n\n        \r\n        LOG.info(\"Hammers stopped, verifying consistency\");\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n\n        restart();\n\n        \r\n        LOG.info(\"Verifying hammers 2\");\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n        tearDown();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AsyncHammerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testObserversHammer() throws Exception {\n        setUp(true);\n        bang = true;\n        Thread[] hammers = new Thread[100];\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i] = new HammerThread(\"HammerThread-\" + i);\n            hammers[i].start();\n        }\n        Thread.sleep(5000); \r\n        bang = false;\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i].interrupt();\n            verifyThreadTerminated(hammers[i], 60000);\n        }\n        \r\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n        tearDown();\n    }\n","date":"2018-10-19 20:39:50","endLine":218,"groupId":"4016","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testObserversHammer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/1c/cdc0bc02dc3996a17294ab78f0c5ee364c8ea8.src","preCode":"    public void testObserversHammer() throws Exception {\n        setUp(true);\n        bang = true;\n        Thread[] hammers = new Thread[100];\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i] = new HammerThread(\"HammerThread-\" + i);\n            hammers[i].start();\n        }\n        Thread.sleep(5000); \r\n        bang = false;\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i].interrupt();\n            verifyThreadTerminated(hammers[i], 60000);\n        }\n        \r\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n        tearDown();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AsyncHammerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testHammer() throws Exception {\n        setUp(false);\n        bang = true;\n        LOG.info(\"Starting hammers\");\n        HammerThread[] hammers = new HammerThread[100];\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i] = new HammerThread(\"HammerThread-\" + i);\n            hammers[i].start();\n        }\n        LOG.info(\"Started hammers\");\n        Thread.sleep(5000); \r\n        bang = false;\n        LOG.info(\"Stopping hammers\");\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i].interrupt();\n            verifyThreadTerminated(hammers[i], 60000);\n            assertFalse(hammers[i].failed);\n        }\n\n        \r\n        LOG.info(\"Hammers stopped, verifying consistency\");\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n\n        restart();\n\n        \r\n        LOG.info(\"Verifying hammers 2\");\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n        tearDown();\n    }\n","date":"2019-08-17 23:13:15","endLine":202,"groupId":"10595","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testHammer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/69/d006a4e10c68382cb5d517f3504ae1cd780dec.src","preCode":"    public void testHammer() throws Exception {\n        setUp(false);\n        bang = true;\n        LOG.info(\"Starting hammers\");\n        HammerThread[] hammers = new HammerThread[100];\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i] = new HammerThread(\"HammerThread-\" + i);\n            hammers[i].start();\n        }\n        LOG.info(\"Started hammers\");\n        Thread.sleep(5000); \r\n        bang = false;\n        LOG.info(\"Stopping hammers\");\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i].interrupt();\n            verifyThreadTerminated(hammers[i], 60000);\n            Assert.assertFalse(hammers[i].failed);\n        }\n\n        \r\n        LOG.info(\"Hammers stopped, verifying consistency\");\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n\n        restart();\n\n        \r\n        LOG.info(\"Verifying hammers 2\");\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n        tearDown();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AsyncHammerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2018-10-19 20:39:50","commitOrder":2,"curCode":"    public void testObserversHammer() throws Exception {\n        setUp(true);\n        bang = true;\n        Thread[] hammers = new Thread[100];\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i] = new HammerThread(\"HammerThread-\" + i);\n            hammers[i].start();\n        }\n        Thread.sleep(5000); \r\n        bang = false;\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i].interrupt();\n            verifyThreadTerminated(hammers[i], 60000);\n        }\n        \r\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n        tearDown();\n    }\n","date":"2018-10-19 20:39:50","endLine":218,"groupId":"10595","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testObserversHammer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/1c/cdc0bc02dc3996a17294ab78f0c5ee364c8ea8.src","preCode":"    public void testObserversHammer() throws Exception {\n        setUp(true);\n        bang = true;\n        Thread[] hammers = new Thread[100];\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i] = new HammerThread(\"HammerThread-\" + i);\n            hammers[i].start();\n        }\n        Thread.sleep(5000); \r\n        bang = false;\n        for (int i = 0; i < hammers.length; i++) {\n            hammers[i].interrupt();\n            verifyThreadTerminated(hammers[i], 60000);\n        }\n        \r\n        qb.verifyRootOfAllServersMatch(qb.hostPort);\n        tearDown();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AsyncHammerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"N"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
