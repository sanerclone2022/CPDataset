[{"authorTime":"2020-05-04 20:20:27","codes":[{"authorDate":"2020-05-04 20:20:27","commitOrder":1,"curCode":"            public void processResult(int rc, String path, Object ctx, byte[] data,\n                    Stat stat) {\n                decOutstanding();\n                synchronized (statSync) {\n                    if (!alive) {\n                        return;\n                    }\n                    if (rc != 0) {\n                        System.err.println(\"Got rc = \" + rc);\n                        errors++;\n                    } else {\n                        finished++;\n                        rlatency += Time.currentElapsedTime() - (Long) ctx;\n                        reads++;\n                    }\n                }\n            }\n","date":"2020-05-04 20:20:27","endLine":398,"groupId":"1358","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"processResult","params":"(intrc@Stringpath@Objectctx@byte[]data@Statstat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/af/cffc81622ae5d12b6b78a5cd4b0b2d8bbe75a6.src","preCode":"            public void processResult(int rc, String path, Object ctx, byte[] data,\n                    Stat stat) {\n                decOutstanding();\n                synchronized (statSync) {\n                    if (!alive) {\n                        return;\n                    }\n                    if (rc != 0) {\n                        System.err.println(\"Got rc = \" + rc);\n                        errors++;\n                    } else {\n                        finished++;\n                        rlatency += Time.currentElapsedTime() - (Long) ctx;\n                        reads++;\n                    }\n                }\n            }\n","realPath":"zookeeper-it/src/main/java/org/apache/zookeeper/test/system/GenerateLoad.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":382,"status":"B"},{"authorDate":"2020-05-04 20:20:27","commitOrder":1,"curCode":"            public void processResult(int rc, String path, Object ctx, Stat stat) {\n                decOutstanding();\n                synchronized (statSync) {\n                    if (rc != 0) {\n                        System.err.println(\"Got rc = \" + rc);\n                        errors++;\n                    } else {\n                        finished++;\n                        wlatency += Time.currentElapsedTime() - (Long) ctx;\n                        writes++;\n                    }\n                }\n            }\n","date":"2020-05-04 20:20:27","endLine":412,"groupId":"1358","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"processResult","params":"(intrc@Stringpath@Objectctx@Statstat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/af/cffc81622ae5d12b6b78a5cd4b0b2d8bbe75a6.src","preCode":"            public void processResult(int rc, String path, Object ctx, Stat stat) {\n                decOutstanding();\n                synchronized (statSync) {\n                    if (rc != 0) {\n                        System.err.println(\"Got rc = \" + rc);\n                        errors++;\n                    } else {\n                        finished++;\n                        wlatency += Time.currentElapsedTime() - (Long) ctx;\n                        writes++;\n                    }\n                }\n            }\n","realPath":"zookeeper-it/src/main/java/org/apache/zookeeper/test/system/GenerateLoad.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":400,"status":"B"}],"commitId":"92f23ecd8159fd8d9c2fb8f34dd94f680ee6f712","commitMessage":"@@@ZOOKEEPER-3791: Miscellaneous Maven fixes\n\n* Fix fatjar and full-build profile problems with redundant module\n  activation\n* Remove \"activeByDefault\" profiles that don't do anything useful\n* Make javadoc a bit quieter\n* Fix assembly plugin warning about `/`\n* Fix antrun warnings about tasks config renamed to target\n* Fix docs module packaging (doesn't need to be jar)\n* Fix zookeeper-it module by moving classes into standarad Maven\n  directory layout and configuring surefire plugin to find the tests\n\nAuthor: Christopher Tubbs <ctubbsii@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1314 from ctubbsii/misc-maven-fixes\n","date":"2020-05-04 20:20:27","modifiedFileCount":"0","status":"B","submitter":"Christopher Tubbs"},{"authorTime":"2020-11-23 19:39:38","codes":[{"authorDate":"2020-11-23 19:39:38","commitOrder":2,"curCode":"            public void processResult(int rc, String path, Object ctx, byte[] data,\n                    Stat stat) {\n                decOutstanding();\n                synchronized (statSync) {\n                    if (!alive) {\n                        return;\n                    }\n                    if (rc != 0) {\n                        LOG.info(\"Got rc = \" + rc);\n                        errors++;\n                    } else {\n                        finished++;\n                        rlatency += Time.currentElapsedTime() - (Long) ctx;\n                        reads++;\n                    }\n                }\n            }\n","date":"2020-11-23 19:39:38","endLine":398,"groupId":"11830","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"processResult","params":"(intrc@Stringpath@Objectctx@byte[]data@Statstat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/18/e9ea0cd407eb49afaa455980eb8e714e35e6f7.src","preCode":"            public void processResult(int rc, String path, Object ctx, byte[] data,\n                    Stat stat) {\n                decOutstanding();\n                synchronized (statSync) {\n                    if (!alive) {\n                        return;\n                    }\n                    if (rc != 0) {\n                        System.err.println(\"Got rc = \" + rc);\n                        errors++;\n                    } else {\n                        finished++;\n                        rlatency += Time.currentElapsedTime() - (Long) ctx;\n                        reads++;\n                    }\n                }\n            }\n","realPath":"zookeeper-it/src/main/java/org/apache/zookeeper/test/system/GenerateLoad.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":382,"status":"M"},{"authorDate":"2020-11-23 19:39:38","commitOrder":2,"curCode":"            public void processResult(int rc, String path, Object ctx, Stat stat) {\n                decOutstanding();\n                synchronized (statSync) {\n                    if (rc != 0) {\n                        LOG.info(\"Got rc = \" + rc);\n                        errors++;\n                    } else {\n                        finished++;\n                        wlatency += Time.currentElapsedTime() - (Long) ctx;\n                        writes++;\n                    }\n                }\n            }\n","date":"2020-11-23 19:39:38","endLine":412,"groupId":"11830","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"processResult","params":"(intrc@Stringpath@Objectctx@Statstat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/18/e9ea0cd407eb49afaa455980eb8e714e35e6f7.src","preCode":"            public void processResult(int rc, String path, Object ctx, Stat stat) {\n                decOutstanding();\n                synchronized (statSync) {\n                    if (rc != 0) {\n                        System.err.println(\"Got rc = \" + rc);\n                        errors++;\n                    } else {\n                        finished++;\n                        wlatency += Time.currentElapsedTime() - (Long) ctx;\n                        writes++;\n                    }\n                }\n            }\n","realPath":"zookeeper-it/src/main/java/org/apache/zookeeper/test/system/GenerateLoad.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":400,"status":"M"}],"commitId":"ea3042d5c4d17b7e645d07a73d0cb9e832d0e9f0","commitMessage":"@@@ZOOKEEPER-3989: GenerateLoad needs to use log for protecting sensitive?\n\nSensitive data about args[0].  zkHostPort.  and cmdNumber are directly printed and may leak.\nFor security.  log should be used to record these data.  as well as log in other classes such as org.apache.zookeeper.server.ZooKeeperServer:\nLOG = LoggerFactory.getLogger(GenerateLoad.class);\n```\nLOG.error(\"Could not connect to \" + args[0]);\n......\nLOG.info(\"Connecting exclusively to \" + zkHostPort.toString());\n......\nLOG.error(\"Not a valid number: \" + e.getMessage());\n```\n\nAuthor: Matteo Minardi <matteo.minardi@diennea.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Benjamin Reed <breed@apache.org>.  Damien Diederen <ddiederen@apache.org>\n\nCloses #1530 from mino181295/fix/ZOOKEEPER-3989/generate-load-uselog\n","date":"2020-11-23 19:39:38","modifiedFileCount":"1","status":"M","submitter":"Matteo Minardi"}]
