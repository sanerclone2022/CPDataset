[{"authorTime":"2018-10-16 22:22:07","codes":[{"authorDate":"2018-10-16 22:22:07","commitOrder":1,"curCode":"    public void testCipherSuites() throws Exception {\n        \r\n        SSLServerSocketFactory ssf = (SSLServerSocketFactory)SSLServerSocketFactory.getDefault();\n        List<String> defaultCiphers = new ArrayList<String>();\n        for (String cipher : ssf.getDefaultCipherSuites()) {\n            if (!cipher.matches(\".*EMPTY.*\") && cipher.startsWith(\"TLS\") && cipher.contains(\"RSA\")) {\n                defaultCiphers.add(cipher);\n            }\n        }\n\n        if (defaultCiphers.size() < 2) {\n            fail(\"JDK has to support at least 2 valid (RSA) cipher suites for this test to run\");\n        }\n\n        \r\n        String suitesOfEnsemble = String.join(\",\", defaultCiphers.subList(1, defaultCiphers.size()));\n        System.setProperty(quorumX509Util.getCipherSuitesProperty(), suitesOfEnsemble);\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        \r\n        String suiteOfClient = defaultCiphers.get(0);\n        System.setProperty(quorumX509Util.getCipherSuitesProperty(), suiteOfClient);\n\n        \r\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q3.start();\n\n        Assert.assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","date":"2018-10-16 22:22:07","endLine":748,"groupId":"1227","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCipherSuites","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/b0/88f47b16cdafac4d3b3ba2913c0996b140fbcd.src","preCode":"    public void testCipherSuites() throws Exception {\n        \r\n        SSLServerSocketFactory ssf = (SSLServerSocketFactory)SSLServerSocketFactory.getDefault();\n        List<String> defaultCiphers = new ArrayList<String>();\n        for (String cipher : ssf.getDefaultCipherSuites()) {\n            if (!cipher.matches(\".*EMPTY.*\") && cipher.startsWith(\"TLS\") && cipher.contains(\"RSA\")) {\n                defaultCiphers.add(cipher);\n            }\n        }\n\n        if (defaultCiphers.size() < 2) {\n            fail(\"JDK has to support at least 2 valid (RSA) cipher suites for this test to run\");\n        }\n\n        \r\n        String suitesOfEnsemble = String.join(\",\", defaultCiphers.subList(1, defaultCiphers.size()));\n        System.setProperty(quorumX509Util.getCipherSuitesProperty(), suitesOfEnsemble);\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        \r\n        String suiteOfClient = defaultCiphers.get(0);\n        System.setProperty(quorumX509Util.getCipherSuitesProperty(), suiteOfClient);\n\n        \r\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q3.start();\n\n        Assert.assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":711,"status":"B"},{"authorDate":"2018-10-16 22:22:07","commitOrder":1,"curCode":"    public void testProtocolVersion() throws Exception {\n        System.setProperty(quorumX509Util.getSslProtocolProperty(), \"TLSv1.2\");\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        System.setProperty(quorumX509Util.getSslProtocolProperty(), \"TLSv1.1\");\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q3.start();\n\n        Assert.assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","date":"2018-10-16 22:22:07","endLine":770,"groupId":"275","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testProtocolVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/b0/88f47b16cdafac4d3b3ba2913c0996b140fbcd.src","preCode":"    public void testProtocolVersion() throws Exception {\n        System.setProperty(quorumX509Util.getSslProtocolProperty(), \"TLSv1.2\");\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        System.setProperty(quorumX509Util.getSslProtocolProperty(), \"TLSv1.1\");\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q3.start();\n\n        Assert.assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":751,"status":"B"}],"commitId":"7b679bc9dd98f06ee10bbb0978cfee5dab7b74dc","commitMessage":"@@@ZOOKEEPER-236: SSL Support for Atomic Broadcast protocol (master)\n\nCherry-picked from branch-3.5.\n\nAuthor: Andor Molnar <andor@apache.org>\nAuthor: Abraham Fine <afine@apache.org>\n\nReviewers: hanm@apache.org.  breed@apache.org\n\nCloses #655 from anmolnar/ZOOKEEPER-236_master and squashes the following commits:\n\n8c3aa11e [Andor Molnar] ZOOKEEPER-3165: Java 9: X509UtilTest.testCreateSSLContextWithoutTrustStorePassword fails\neb272749 [Abraham Fine] ZOOKEEPER-236: SSL Support for Atomic Broadcast protocol\n","date":"2018-10-16 22:22:07","modifiedFileCount":"20","status":"B","submitter":"Andor Molnar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testCipherSuites() throws Exception {\n        \r\n        SSLServerSocketFactory ssf = (SSLServerSocketFactory) SSLServerSocketFactory.getDefault();\n        List<String> defaultCiphers = new ArrayList<String>();\n        for (String cipher : ssf.getDefaultCipherSuites()) {\n            if (!cipher.matches(\".*EMPTY.*\") && cipher.startsWith(\"TLS\") && cipher.contains(\"RSA\")) {\n                defaultCiphers.add(cipher);\n            }\n        }\n\n        if (defaultCiphers.size() < 2) {\n            fail(\"JDK has to support at least 2 valid (RSA) cipher suites for this test to run\");\n        }\n\n        \r\n        String suitesOfEnsemble = String.join(\",\", defaultCiphers.subList(1, defaultCiphers.size()));\n        System.setProperty(quorumX509Util.getCipherSuitesProperty(), suitesOfEnsemble);\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        \r\n        String suiteOfClient = defaultCiphers.get(0);\n        System.setProperty(quorumX509Util.getCipherSuitesProperty(), suiteOfClient);\n\n        \r\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q3.start();\n\n        assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","date":"2019-08-17 23:13:15","endLine":805,"groupId":"10161","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCipherSuites","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/dc/d9fcee6e9fa7640f839d54a9fdff896c4a1bb7.src","preCode":"    public void testCipherSuites() throws Exception {\n        \r\n        SSLServerSocketFactory ssf = (SSLServerSocketFactory)SSLServerSocketFactory.getDefault();\n        List<String> defaultCiphers = new ArrayList<String>();\n        for (String cipher : ssf.getDefaultCipherSuites()) {\n            if (!cipher.matches(\".*EMPTY.*\") && cipher.startsWith(\"TLS\") && cipher.contains(\"RSA\")) {\n                defaultCiphers.add(cipher);\n            }\n        }\n\n        if (defaultCiphers.size() < 2) {\n            fail(\"JDK has to support at least 2 valid (RSA) cipher suites for this test to run\");\n        }\n\n        \r\n        String suitesOfEnsemble = String.join(\",\", defaultCiphers.subList(1, defaultCiphers.size()));\n        System.setProperty(quorumX509Util.getCipherSuitesProperty(), suitesOfEnsemble);\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        \r\n        String suiteOfClient = defaultCiphers.get(0);\n        System.setProperty(quorumX509Util.getCipherSuitesProperty(), suiteOfClient);\n\n        \r\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q3.start();\n\n        Assert.assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":768,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testProtocolVersion() throws Exception {\n        System.setProperty(quorumX509Util.getSslProtocolProperty(), \"TLSv1.2\");\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        System.setProperty(quorumX509Util.getSslProtocolProperty(), \"TLSv1.1\");\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q3.start();\n\n        assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","date":"2019-08-17 23:13:15","endLine":827,"groupId":"10161","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testProtocolVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/dc/d9fcee6e9fa7640f839d54a9fdff896c4a1bb7.src","preCode":"    public void testProtocolVersion() throws Exception {\n        System.setProperty(quorumX509Util.getSslProtocolProperty(), \"TLSv1.2\");\n\n        q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED);\n\n        q1.start();\n        q2.start();\n\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1, CONNECTION_TIMEOUT));\n        Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2, CONNECTION_TIMEOUT));\n\n        System.setProperty(quorumX509Util.getSslProtocolProperty(), \"TLSv1.1\");\n\n        \r\n        q3 = new MainThread(3, clientPortQp3, quorumConfiguration, SSL_QUORUM_ENABLED);\n        q3.start();\n\n        Assert.assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3, CONNECTION_TIMEOUT));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":808,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
