[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testNewEpochZxid() throws Exception {\n        long peerZxid;\n        db.txnLog.add(createProposal(getZxid(0, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        db.lastProcessedZxid = getZxid(2, 0);\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        peerZxid = getZxid(0, 0);\n        \r\n        \r\n        \r\n        assertTrue(learnerHandler.syncFollower(peerZxid, db, leader));\n        assertEquals(0, learnerHandler.getQueuedPackets().size());\n        reset();\n\n        \r\n        peerZxid = getZxid(1, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, db, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(1, 2), getZxid(1, 2));\n        \r\n        assertEquals(5, learnerHandler.getQueuedPackets().size());\n        queuedPacketMatches(new long[] { getZxid(1, 1), getZxid(1, 2)});\n        reset();\n\n        \r\n        peerZxid = getZxid(2, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, db, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(2, 0), getZxid(2, 0));\n        \r\n        assertEquals(1, learnerHandler.getQueuedPackets().size());\n        reset();\n\n    }\n","date":"2018-10-05 20:25:43","endLine":482,"groupId":"217","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNewEpochZxid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f2/389714b9c3806bca83575221e6d64878869268.src","preCode":"    public void testNewEpochZxid() throws Exception {\n        long peerZxid;\n        db.txnLog.add(createProposal(getZxid(0, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        db.lastProcessedZxid = getZxid(2, 0);\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        peerZxid = getZxid(0, 0);\n        \r\n        \r\n        \r\n        assertTrue(learnerHandler.syncFollower(peerZxid, db, leader));\n        assertEquals(0, learnerHandler.getQueuedPackets().size());\n        reset();\n\n        \r\n        peerZxid = getZxid(1, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, db, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(1, 2), getZxid(1, 2));\n        \r\n        assertEquals(5, learnerHandler.getQueuedPackets().size());\n        queuedPacketMatches(new long[] { getZxid(1, 1), getZxid(1, 2)});\n        reset();\n\n        \r\n        peerZxid = getZxid(2, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, db, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(2, 0), getZxid(2, 0));\n        \r\n        assertEquals(1, learnerHandler.getQueuedPackets().size());\n        reset();\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerHandlerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testDuplicatedTxn() throws Exception {\n        long peerZxid;\n        db.txnLog.add(createProposal(getZxid(0, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        db.lastProcessedZxid = getZxid(2, 0);\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        peerZxid = getZxid(1, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, db, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(1, 2), getZxid(1, 2));\n        \r\n        assertEquals(5, learnerHandler.getQueuedPackets().size());\n        queuedPacketMatches(new long[] { getZxid(1, 1), getZxid(1, 2)});\n        reset();\n\n    }\n","date":"2018-10-05 20:25:43","endLine":569,"groupId":"219","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuplicatedTxn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f2/389714b9c3806bca83575221e6d64878869268.src","preCode":"    public void testDuplicatedTxn() throws Exception {\n        long peerZxid;\n        db.txnLog.add(createProposal(getZxid(0, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        db.lastProcessedZxid = getZxid(2, 0);\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        peerZxid = getZxid(1, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, db, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(1, 2), getZxid(1, 2));\n        \r\n        assertEquals(5, learnerHandler.getQueuedPackets().size());\n        queuedPacketMatches(new long[] { getZxid(1, 1), getZxid(1, 2)});\n        reset();\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerHandlerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":544,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2018-12-09 10:16:58","codes":[{"authorDate":"2018-12-09 10:16:58","commitOrder":2,"curCode":"    public void testNewEpochZxid() throws Exception {\n        long peerZxid;\n        db.txnLog.add(createProposal(getZxid(0, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        db.lastProcessedZxid = getZxid(2, 0);\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        peerZxid = getZxid(0, 0);\n        \r\n        \r\n        \r\n        assertTrue(learnerHandler.syncFollower(peerZxid, leader));\n        assertEquals(0, learnerHandler.getQueuedPackets().size());\n        reset();\n\n        \r\n        peerZxid = getZxid(1, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(1, 2), getZxid(1, 2));\n        \r\n        assertEquals(5, learnerHandler.getQueuedPackets().size());\n        queuedPacketMatches(new long[] { getZxid(1, 1), getZxid(1, 2)});\n        reset();\n\n        \r\n        peerZxid = getZxid(2, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(2, 0), getZxid(2, 0));\n        \r\n        assertEquals(1, learnerHandler.getQueuedPackets().size());\n        reset();\n\n    }\n","date":"2018-12-09 10:16:58","endLine":483,"groupId":"10250","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNewEpochZxid","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/1c/d33ec917842b58d578607ca8f19fa6d819c765.src","preCode":"    public void testNewEpochZxid() throws Exception {\n        long peerZxid;\n        db.txnLog.add(createProposal(getZxid(0, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        db.lastProcessedZxid = getZxid(2, 0);\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        peerZxid = getZxid(0, 0);\n        \r\n        \r\n        \r\n        assertTrue(learnerHandler.syncFollower(peerZxid, db, leader));\n        assertEquals(0, learnerHandler.getQueuedPackets().size());\n        reset();\n\n        \r\n        peerZxid = getZxid(1, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, db, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(1, 2), getZxid(1, 2));\n        \r\n        assertEquals(5, learnerHandler.getQueuedPackets().size());\n        queuedPacketMatches(new long[] { getZxid(1, 1), getZxid(1, 2)});\n        reset();\n\n        \r\n        peerZxid = getZxid(2, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, db, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(2, 0), getZxid(2, 0));\n        \r\n        assertEquals(1, learnerHandler.getQueuedPackets().size());\n        reset();\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerHandlerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":444,"status":"M"},{"authorDate":"2018-12-09 10:16:58","commitOrder":2,"curCode":"    public void testDuplicatedTxn() throws Exception {\n        long peerZxid;\n        db.txnLog.add(createProposal(getZxid(0, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        db.lastProcessedZxid = getZxid(2, 0);\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        peerZxid = getZxid(1, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(1, 2), getZxid(1, 2));\n        \r\n        assertEquals(5, learnerHandler.getQueuedPackets().size());\n        queuedPacketMatches(new long[] { getZxid(1, 1), getZxid(1, 2)});\n        reset();\n\n    }\n","date":"2018-12-09 10:16:58","endLine":570,"groupId":"10250","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuplicatedTxn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/1c/d33ec917842b58d578607ca8f19fa6d819c765.src","preCode":"    public void testDuplicatedTxn() throws Exception {\n        long peerZxid;\n        db.txnLog.add(createProposal(getZxid(0, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n        db.txnLog.add(createProposal(getZxid(1, 1)));\n        db.txnLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        db.lastProcessedZxid = getZxid(2, 0);\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n        db.committedLog.add(createProposal(getZxid(1, 1)));\n        db.committedLog.add(createProposal(getZxid(1, 2)));\n\n        \r\n        peerZxid = getZxid(1, 0);\n        assertFalse(learnerHandler.syncFollower(peerZxid, db, leader));\n        \r\n        assertOpType(Leader.DIFF, getZxid(1, 2), getZxid(1, 2));\n        \r\n        assertEquals(5, learnerHandler.getQueuedPackets().size());\n        queuedPacketMatches(new long[] { getZxid(1, 1), getZxid(1, 2)});\n        reset();\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerHandlerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":545,"status":"M"}],"commitId":"b2513c114931dc377bac5e1d39e2f81c6e8cf17e","commitMessage":"@@@ZOOKEEPER-3140: Allow Followers to host Observers\n\nCreates a new abstraction.  LearnerMaster.  to represent the portions of the Leader logic that are used in LearnerHandler. Leader implements LearnerMaster and a new class ObserverMaster implements LearnerMaster. Followers have the option of instantiating a ObserverMaster thread when they assume their role and so support Learner traffic.\n\nA new parameter 'observerMasterPort' is used to control which Follower instances host Observers.\n\nAuthor: Brian Nixon <nixon@fb.com>\n\nReviewers: fangmin@apache.org.  hanm@apache.org.  eolivelli@gmail.com\n\nCloses #628 from enixon/learner-master\n","date":"2018-12-09 10:16:58","modifiedFileCount":"21","status":"M","submitter":"Brian Nixon"}]
