[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public static ZooKeeper[] createHandles(QuorumUtil qu) throws IOException {\n        \r\n        \r\n        ZooKeeper[] zkArr = new ZooKeeper[qu.ALL + 1];\n        zkArr[0] = null; \r\n        for (int i = 1; i <= qu.ALL; i++) {\n            \r\n            zkArr[i] = new ZooKeeper(\"127.0.0.1:\"\n                    + qu.getPeer(i).peer.getClientPort(),\n                    ClientBase.CONNECTION_TIMEOUT, new Watcher() {\n                        public void process(WatchedEvent event) {\n                        }});\n        }\n        return zkArr;\n    }\n","date":"2018-10-19 20:39:50","endLine":219,"groupId":"2714","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createHandles","params":"(QuorumUtilqu)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/8d/10dc968c6d16d785a149304912245c438796e6.src","preCode":"    public static ZooKeeper[] createHandles(QuorumUtil qu) throws IOException {\n        \r\n        \r\n        ZooKeeper[] zkArr = new ZooKeeper[qu.ALL + 1];\n        zkArr[0] = null; \r\n        for (int i = 1; i <= qu.ALL; i++) {\n            \r\n            zkArr[i] = new ZooKeeper(\"127.0.0.1:\"\n                    + qu.getPeer(i).peer.getClientPort(),\n                    ClientBase.CONNECTION_TIMEOUT, new Watcher() {\n                        public void process(WatchedEvent event) {\n                        }});\n        }\n        return zkArr;\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/ReconfigTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public static ZooKeeperAdmin[] createAdminHandles(QuorumUtil qu) throws IOException {\n        \r\n        \r\n        ZooKeeperAdmin[] zkAdminArr = new ZooKeeperAdmin[qu.ALL + 1];\n        zkAdminArr[0] = null; \r\n        for (int i = 1; i <= qu.ALL; i++) {\n            \r\n            zkAdminArr[i] = new ZooKeeperAdmin(\"127.0.0.1:\"\n                    + qu.getPeer(i).peer.getClientPort(),\n                    ClientBase.CONNECTION_TIMEOUT, new Watcher() {\n                public void process(WatchedEvent event) {\n                }});\n            zkAdminArr[i].addAuthInfo(\"digest\", \"super:test\".getBytes());\n        }\n\n        return zkAdminArr;\n    }\n","date":"2018-10-19 20:39:50","endLine":237,"groupId":"2058","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createAdminHandles","params":"(QuorumUtilqu)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/8d/10dc968c6d16d785a149304912245c438796e6.src","preCode":"    public static ZooKeeperAdmin[] createAdminHandles(QuorumUtil qu) throws IOException {\n        \r\n        \r\n        ZooKeeperAdmin[] zkAdminArr = new ZooKeeperAdmin[qu.ALL + 1];\n        zkAdminArr[0] = null; \r\n        for (int i = 1; i <= qu.ALL; i++) {\n            \r\n            zkAdminArr[i] = new ZooKeeperAdmin(\"127.0.0.1:\"\n                    + qu.getPeer(i).peer.getClientPort(),\n                    ClientBase.CONNECTION_TIMEOUT, new Watcher() {\n                public void process(WatchedEvent event) {\n                }});\n            zkAdminArr[i].addAuthInfo(\"digest\", \"super:test\".getBytes());\n        }\n\n        return zkAdminArr;\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/ReconfigTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-09-18 17:20:31","codes":[{"authorDate":"2019-09-18 17:20:31","commitOrder":2,"curCode":"    public static ZooKeeper[] createHandles(QuorumUtil qu) throws IOException {\n        \r\n        \r\n        ZooKeeper[] zkArr = new ZooKeeper[qu.ALL + 1];\n        zkArr[0] = null; \r\n        for (int i = 1; i <= qu.ALL; i++) {\n            \r\n            zkArr[i] = new ZooKeeper(\n                \"127.0.0.1:\" + qu.getPeer(i).peer.getClientPort(),\n                ClientBase.CONNECTION_TIMEOUT,\n                DummyWatcher.INSTANCE);\n        }\n        return zkArr;\n    }\n","date":"2019-09-18 17:20:31","endLine":231,"groupId":"10584","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createHandles","params":"(QuorumUtilqu)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/8c/ae63fe26ca82156d56058944f4c5800ccdb36b.src","preCode":"    public static ZooKeeper[] createHandles(QuorumUtil qu) throws IOException {\n        \r\n        \r\n        ZooKeeper[] zkArr = new ZooKeeper[qu.ALL + 1];\n        zkArr[0] = null; \r\n        for (int i = 1; i <= qu.ALL; i++) {\n            \r\n            zkArr[i] = new ZooKeeper(\n                    \"127.0.0.1:\" + qu.getPeer(i).peer.getClientPort(),\n                    ClientBase.CONNECTION_TIMEOUT,\n                    new Watcher() {\n                        public void process(WatchedEvent event) {\n                        }\n                    });\n        }\n        return zkArr;\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/ReconfigTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2019-09-18 17:20:31","commitOrder":2,"curCode":"    public static ZooKeeperAdmin[] createAdminHandles(QuorumUtil qu) throws IOException {\n        \r\n        \r\n        ZooKeeperAdmin[] zkAdminArr = new ZooKeeperAdmin[qu.ALL + 1];\n        zkAdminArr[0] = null; \r\n        for (int i = 1; i <= qu.ALL; i++) {\n            \r\n            zkAdminArr[i] = new ZooKeeperAdmin(\n                    \"127.0.0.1:\" + qu.getPeer(i).peer.getClientPort(),\n                    ClientBase.CONNECTION_TIMEOUT,\n                    DummyWatcher.INSTANCE);\n            zkAdminArr[i].addAuthInfo(\"digest\", \"super:test\".getBytes());\n        }\n\n        return zkAdminArr;\n    }\n","date":"2019-09-18 17:20:31","endLine":248,"groupId":"10584","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createAdminHandles","params":"(QuorumUtilqu)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/8c/ae63fe26ca82156d56058944f4c5800ccdb36b.src","preCode":"    public static ZooKeeperAdmin[] createAdminHandles(QuorumUtil qu) throws IOException {\n        \r\n        \r\n        ZooKeeperAdmin[] zkAdminArr = new ZooKeeperAdmin[qu.ALL + 1];\n        zkAdminArr[0] = null; \r\n        for (int i = 1; i <= qu.ALL; i++) {\n            \r\n            zkAdminArr[i] = new ZooKeeperAdmin(\n                    \"127.0.0.1:\" + qu.getPeer(i).peer.getClientPort(),\n                    ClientBase.CONNECTION_TIMEOUT,\n                    new Watcher() {\n                        public void process(WatchedEvent event) {\n                        }\n                    });\n            zkAdminArr[i].addAuthInfo(\"digest\", \"super:test\".getBytes());\n        }\n\n        return zkAdminArr;\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/ReconfigTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"}],"commitId":"7b8b37617bd86989f94510acac32e7fa94058a6b","commitMessage":"@@@ZOOKEEPER-3523: Replace dummy watcher with a unified singleton\n\nRevisit subclasses of `Watcher` and replace dummy implement with a global singleton `Watcher.DUMMY_WATCHER`.\n\nA followup could be use separated `Watcher` in tests instead of implement `Watcher` for `XXXTests`. It would be better to keep test case \"class\" alone IMO.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Michael Han <hanm@apache.org>.  Enrico Olivelli <eolivelli@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1064 from TisonKun/ZOOKEEPER-3523\n","date":"2019-09-18 17:20:31","modifiedFileCount":"16","status":"M","submitter":"tison"}]
