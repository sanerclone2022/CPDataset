[{"authorTime":"2018-11-06 02:40:55","codes":[{"authorDate":"2018-11-06 02:40:55","commitOrder":1,"curCode":"    public void testClientCanonicalization() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"zk1.apache.org\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        Assert.assertEquals(\"The computed principal does not appear to have been canonicalized\", \"zookeeper/zk1.apache.org\", principal);\n    }\n","date":"2018-11-06 02:40:55","endLine":42,"groupId":"2597","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientCanonicalization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/91/dec23b62a717c54e25e12c2d0a06dda4ad0fe8.src","preCode":"    public void testClientCanonicalization() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"zk1.apache.org\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        Assert.assertEquals(\"The computed principal does not appear to have been canonicalized\", \"zookeeper/zk1.apache.org\", principal);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ClientCanonicalizeTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"B"},{"authorDate":"2018-11-06 02:40:55","commitOrder":1,"curCode":"    public void testClientCanonicalizationToIp() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"127.0.0.1\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        Assert.assertEquals(\"The computed principal does appear to have falled back to the original host name\",\n            \"zookeeper/zookeeper.apache.org\", principal);\n    }\n","date":"2018-11-06 02:40:55","endLine":75,"groupId":"2598","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientCanonicalizationToIp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/91/dec23b62a717c54e25e12c2d0a06dda4ad0fe8.src","preCode":"    public void testClientCanonicalizationToIp() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"127.0.0.1\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        Assert.assertEquals(\"The computed principal does appear to have falled back to the original host name\",\n            \"zookeeper/zookeeper.apache.org\", principal);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ClientCanonicalizeTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"}],"commitId":"83fd6e298dda420125f8be35fda68cb226b0ee05","commitMessage":"@@@ZOOKEEPER-3156: Add in option to canonicalize host name\n\nThis is the master and 3.5 version of #648.  It should apply cleanly to both lines.  but if you want a separate pull request for each I am happy to do it.\n\nAuthor: Robert Evans <evans@yahoo-inc.com>\n\nReviewers: fangmin@apache.org.  andor@apache.org\n\nCloses #652 from revans2/ZOOKEEPER-3156\n","date":"2018-11-06 02:40:55","modifiedFileCount":"2","status":"B","submitter":"Robert Evans"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testClientCanonicalization() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"zk1.apache.org\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        assertEquals(\"The computed principal does not appear to have been canonicalized\", \"zookeeper/zk1.apache.org\", principal);\n    }\n","date":"2019-08-17 23:13:15","endLine":43,"groupId":"2597","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientCanonicalization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/79/9af3a2fd6674c67b3377e46a435be63b9ee532.src","preCode":"    public void testClientCanonicalization() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"zk1.apache.org\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        Assert.assertEquals(\"The computed principal does not appear to have been canonicalized\", \"zookeeper/zk1.apache.org\", principal);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ClientCanonicalizeTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testClientCanonicalizationToIp() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"127.0.0.1\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        assertEquals(\"The computed principal does appear to have falled back to the original host name\", \"zookeeper/zookeeper.apache.org\", principal);\n    }\n","date":"2019-08-17 23:13:15","endLine":74,"groupId":"2598","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientCanonicalizationToIp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/79/9af3a2fd6674c67b3377e46a435be63b9ee532.src","preCode":"    public void testClientCanonicalizationToIp() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"127.0.0.1\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        Assert.assertEquals(\"The computed principal does appear to have falled back to the original host name\",\n            \"zookeeper/zookeeper.apache.org\", principal);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ClientCanonicalizeTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testClientCanonicalization() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"zk1.apache.org\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        assertEquals(\"zookeeper/zk1.apache.org\", principal, \"The computed principal does not appear to have been canonicalized\");\n    }\n","date":"2020-08-04 21:01:52","endLine":44,"groupId":"1014","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testClientCanonicalization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/cc/a6647b1cbd0cb6319f12aff1e4904c22616c4f.src","preCode":"    public void testClientCanonicalization() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"zk1.apache.org\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        assertEquals(\"The computed principal does not appear to have been canonicalized\", \"zookeeper/zk1.apache.org\", principal);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ClientCanonicalizeTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testClientCanonicalizationToIp() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"127.0.0.1\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        assertEquals(\"zookeeper/zookeeper.apache.org\", principal, \"The computed principal does appear to have falled back to the original host name\");\n    }\n","date":"2020-08-04 21:01:52","endLine":75,"groupId":"1014","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testClientCanonicalizationToIp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/cc/a6647b1cbd0cb6319f12aff1e4904c22616c4f.src","preCode":"    public void testClientCanonicalizationToIp() throws IOException, InterruptedException {\n        SaslServerPrincipal.WrapperInetSocketAddress addr = mock(SaslServerPrincipal.WrapperInetSocketAddress.class);\n        SaslServerPrincipal.WrapperInetAddress ia = mock(SaslServerPrincipal.WrapperInetAddress.class);\n\n        when(addr.getHostName()).thenReturn(\"zookeeper.apache.org\");\n        when(addr.getAddress()).thenReturn(ia);\n        when(ia.getCanonicalHostName()).thenReturn(\"127.0.0.1\");\n        when(ia.getHostAddress()).thenReturn(\"127.0.0.1\");\n\n        ZKClientConfig conf = new ZKClientConfig();\n        String principal = SaslServerPrincipal.getServerPrincipal(addr, conf);\n        assertEquals(\"The computed principal does appear to have falled back to the original host name\", \"zookeeper/zookeeper.apache.org\", principal);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/ClientCanonicalizeTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
