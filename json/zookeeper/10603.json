[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testCreatingWatchedEvent() {\n        \r\n       \r\n\n        EnumSet<EventType> allTypes = EnumSet.allOf(EventType.class);\n       EnumSet<KeeperState> allStates = EnumSet.allOf(KeeperState.class);\n       WatchedEvent we;\n\n        for(EventType et : allTypes) {\n           for(KeeperState ks : allStates) {\n               we = new WatchedEvent(et, ks, \"blah\");\n               Assert.assertEquals(et, we.getType());\n               Assert.assertEquals(ks, we.getState());\n               Assert.assertEquals(\"blah\", we.getPath());\n           }\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":50,"groupId":"1455","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreatingWatchedEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/75/ec3dd3e96dc8c355555a1cd6ff28248098555d.src","preCode":"    public void testCreatingWatchedEvent() {\n        \r\n       \r\n\n        EnumSet<EventType> allTypes = EnumSet.allOf(EventType.class);\n       EnumSet<KeeperState> allStates = EnumSet.allOf(KeeperState.class);\n       WatchedEvent we;\n\n        for(EventType et : allTypes) {\n           for(KeeperState ks : allStates) {\n               we = new WatchedEvent(et, ks, \"blah\");\n               Assert.assertEquals(et, we.getType());\n               Assert.assertEquals(ks, we.getState());\n               Assert.assertEquals(\"blah\", we.getPath());\n           }\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/WatchedEventTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testCreatingWatchedEventFromWrapper() {\n        \r\n\n        EnumSet<EventType> allTypes = EnumSet.allOf(EventType.class);\n       EnumSet<KeeperState> allStates = EnumSet.allOf(KeeperState.class);\n       WatchedEvent we;\n       WatcherEvent wep;\n\n        for(EventType et : allTypes) {\n           for(KeeperState ks : allStates) {\n               wep = new WatcherEvent(et.getIntValue(), ks.getIntValue(), \"blah\");\n               we = new WatchedEvent(wep);\n               Assert.assertEquals(et, we.getType());\n               Assert.assertEquals(ks, we.getState());\n               Assert.assertEquals(\"blah\", we.getPath());\n           }\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":70,"groupId":"1486","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreatingWatchedEventFromWrapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/75/ec3dd3e96dc8c355555a1cd6ff28248098555d.src","preCode":"    public void testCreatingWatchedEventFromWrapper() {\n        \r\n\n        EnumSet<EventType> allTypes = EnumSet.allOf(EventType.class);\n       EnumSet<KeeperState> allStates = EnumSet.allOf(KeeperState.class);\n       WatchedEvent we;\n       WatcherEvent wep;\n\n        for(EventType et : allTypes) {\n           for(KeeperState ks : allStates) {\n               wep = new WatcherEvent(et.getIntValue(), ks.getIntValue(), \"blah\");\n               we = new WatchedEvent(wep);\n               Assert.assertEquals(et, we.getType());\n               Assert.assertEquals(ks, we.getState());\n               Assert.assertEquals(\"blah\", we.getPath());\n           }\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/WatchedEventTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testCreatingWatchedEvent() {\n        \r\n        \r\n\n        EnumSet<EventType> allTypes = EnumSet.allOf(EventType.class);\n        EnumSet<KeeperState> allStates = EnumSet.allOf(KeeperState.class);\n        WatchedEvent we;\n\n        for (EventType et : allTypes) {\n            for (KeeperState ks : allStates) {\n                we = new WatchedEvent(et, ks, \"blah\");\n                assertEquals(et, we.getType());\n                assertEquals(ks, we.getState());\n                assertEquals(\"blah\", we.getPath());\n            }\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":50,"groupId":"10603","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreatingWatchedEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/17/d3510329e81ddb5685b8af9d96fb9140feb4c0.src","preCode":"    public void testCreatingWatchedEvent() {\n        \r\n       \r\n\n        EnumSet<EventType> allTypes = EnumSet.allOf(EventType.class);\n       EnumSet<KeeperState> allStates = EnumSet.allOf(KeeperState.class);\n       WatchedEvent we;\n\n        for(EventType et : allTypes) {\n           for(KeeperState ks : allStates) {\n               we = new WatchedEvent(et, ks, \"blah\");\n               Assert.assertEquals(et, we.getType());\n               Assert.assertEquals(ks, we.getState());\n               Assert.assertEquals(\"blah\", we.getPath());\n           }\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/WatchedEventTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testCreatingWatchedEventFromWrapper() {\n        \r\n\n        EnumSet<EventType> allTypes = EnumSet.allOf(EventType.class);\n        EnumSet<KeeperState> allStates = EnumSet.allOf(KeeperState.class);\n        WatchedEvent we;\n        WatcherEvent wep;\n\n        for (EventType et : allTypes) {\n            for (KeeperState ks : allStates) {\n                wep = new WatcherEvent(et.getIntValue(), ks.getIntValue(), \"blah\");\n                we = new WatchedEvent(wep);\n                assertEquals(et, we.getType());\n                assertEquals(ks, we.getState());\n                assertEquals(\"blah\", we.getPath());\n            }\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":70,"groupId":"10603","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreatingWatchedEventFromWrapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/17/d3510329e81ddb5685b8af9d96fb9140feb4c0.src","preCode":"    public void testCreatingWatchedEventFromWrapper() {\n        \r\n\n        EnumSet<EventType> allTypes = EnumSet.allOf(EventType.class);\n       EnumSet<KeeperState> allStates = EnumSet.allOf(KeeperState.class);\n       WatchedEvent we;\n       WatcherEvent wep;\n\n        for(EventType et : allTypes) {\n           for(KeeperState ks : allStates) {\n               wep = new WatcherEvent(et.getIntValue(), ks.getIntValue(), \"blah\");\n               we = new WatchedEvent(wep);\n               Assert.assertEquals(et, we.getType());\n               Assert.assertEquals(ks, we.getState());\n               Assert.assertEquals(\"blah\", we.getPath());\n           }\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/WatchedEventTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
