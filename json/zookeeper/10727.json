[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void sendResponse(ReplyHeader h, Record r, String tag)\n            throws IOException {\n        if (closingChannel || !channel.isOpen()) {\n            return;\n        }\n        super.sendResponse(h, r, tag);\n        if (h.getXid() > 0) {\n            \r\n            if (!zkServer.shouldThrottle(outstandingCount.decrementAndGet())) {\n                enableRecv();\n            }\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":196,"groupId":"3624","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sendResponse","params":"(ReplyHeaderh@Recordr@Stringtag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/0b/2772433b38c4a7651bdb77966984222526b1e9.src","preCode":"    public void sendResponse(ReplyHeader h, Record r, String tag)\n            throws IOException {\n        if (closingChannel || !channel.isOpen()) {\n            return;\n        }\n        super.sendResponse(h, r, tag);\n        if (h.getXid() > 0) {\n            \r\n            if (!zkServer.shouldThrottle(outstandingCount.decrementAndGet())) {\n                enableRecv();\n            }\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void sendResponse(ReplyHeader h, Record r, String tag) {\n        try {\n            super.sendResponse(h, r, tag);\n            if (h.getXid() > 0) {\n                \r\n                if (outstandingRequests.decrementAndGet() < 1 ||\n                    zkServer.getInProcess() < outstandingLimit) {\n                    enableRecv();\n                }\n            }\n         } catch(Exception e) {\n            LOG.warn(\"Unexpected exception. Destruction averted.\", e);\n         }\n    }\n","date":"2018-10-05 20:25:43","endLine":702,"groupId":"3588","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sendResponse","params":"(ReplyHeaderh@Recordr@Stringtag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c3/44c659deea68b5f8c9051eb50ec93a8cefa2ca.src","preCode":"    public void sendResponse(ReplyHeader h, Record r, String tag) {\n        try {\n            super.sendResponse(h, r, tag);\n            if (h.getXid() > 0) {\n                \r\n                if (outstandingRequests.decrementAndGet() < 1 ||\n                    zkServer.getInProcess() < outstandingLimit) {\n                    enableRecv();\n                }\n            }\n         } catch(Exception e) {\n            LOG.warn(\"Unexpected exception. Destruction averted.\", e);\n         }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":689,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2020-05-28 11:43:25","codes":[{"authorDate":"2020-05-28 11:43:25","commitOrder":2,"curCode":"    public int sendResponse(ReplyHeader h, Record r, String tag,\n                             String cacheKey, Stat stat, int opCode) throws IOException {\n        \r\n        \r\n        if (closingChannel || !channel.isOpen()) {\n            return 0;\n        }\n        ByteBuffer[] bb = serialize(h, r, tag, cacheKey, stat, opCode);\n        int responseSize = bb[0].getInt();\n        bb[0].rewind();\n        sendBuffer(bb);\n        decrOutstandingAndCheckThrottle(h);\n        return responseSize;\n    }\n","date":"2020-05-28 11:43:25","endLine":193,"groupId":"10727","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sendResponse","params":"(ReplyHeaderh@Recordr@Stringtag@StringcacheKey@Statstat@intopCode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/cf/9aa457f8b637e1089f374e7dcc8a9c390c6cea.src","preCode":"    public void sendResponse(ReplyHeader h, Record r, String tag)\n            throws IOException {\n        if (closingChannel || !channel.isOpen()) {\n            return;\n        }\n        super.sendResponse(h, r, tag);\n        if (h.getXid() > 0) {\n            \r\n            if (!zkServer.shouldThrottle(outstandingCount.decrementAndGet())) {\n                enableRecv();\n            }\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"},{"authorDate":"2020-05-28 11:43:25","commitOrder":2,"curCode":"    public int sendResponse(ReplyHeader h, Record r, String tag, String cacheKey, Stat stat, int opCode) {\n        int responseSize = 0;\n        try {\n            ByteBuffer[] bb = serialize(h, r, tag, cacheKey, stat, opCode);\n            responseSize = bb[0].getInt();\n            bb[0].rewind();\n            sendBuffer(bb);\n            decrOutstandingAndCheckThrottle(h);\n        } catch (Exception e) {\n            LOG.warn(\"Unexpected exception. Destruction averted.\", e);\n        }\n        return responseSize;\n    }\n","date":"2020-05-28 11:43:25","endLine":680,"groupId":"10727","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sendResponse","params":"(ReplyHeaderh@Recordr@Stringtag@StringcacheKey@Statstat@intopCode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f9/67fffe97486410468495241be731ad95b95738.src","preCode":"    public void sendResponse(ReplyHeader h, Record r, String tag) {\n        try {\n            super.sendResponse(h, r, tag);\n            if (h.getXid() > 0) {\n                \r\n                if (outstandingRequests.decrementAndGet() < 1 ||\n                    zkServer.getInProcess() < outstandingLimit) {\n                    enableRecv();\n                }\n            }\n         } catch(Exception e) {\n            LOG.warn(\"Unexpected exception. Destruction averted.\", e);\n         }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":668,"status":"M"}],"commitId":"b1e67ca2807f836592ec0106c0c38e3ce997ee8e","commitMessage":"@@@ZOOKEEPER-3847: Add a couple metrics to help track Netty memory usage\n\nAuthor: Jie Huang <jiehuang@fb.com>\n\nReviewers: Michael Han <hanm@apache.org>\n\nCloses #1367 from jhuan31/ZOOKEEPER-3847\n","date":"2020-05-28 11:43:25","modifiedFileCount":"7","status":"M","submitter":"Jie Huang"}]
