[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testCreate()\n            throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        Assert.assertNotNull(\"Ttl node should not have been deleted yet\", zk.exists(\"/foo\", false));\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        Assert.assertNull(\"Ttl node should have been deleted\", zk.exists(\"/foo\", false));\n    }\n","date":"2018-10-05 20:25:43","endLine":66,"groupId":"104","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c6/01a27d67709b503125fa11d317817d06a05a62.src","preCode":"    public void testCreate()\n            throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        Assert.assertNotNull(\"Ttl node should not have been deleted yet\", zk.exists(\"/foo\", false));\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        Assert.assertNull(\"Ttl node should have been deleted\", zk.exists(\"/foo\", false));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/Emulate353TTLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testCreate()\n            throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        Assert.assertNotNull(\"Ttl node should not have been deleted yet\", zk.exists(\"/foo\", false));\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        Assert.assertNull(\"Ttl node should have been deleted\", zk.exists(\"/foo\", false));\n    }\n","date":"2018-10-05 20:25:43","endLine":78,"groupId":"104","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/24/40030cc995fc5e1e4199cac87d310da688580b.src","preCode":"    public void testCreate()\n            throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        Assert.assertNotNull(\"Ttl node should not have been deleted yet\", zk.exists(\"/foo\", false));\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        Assert.assertNull(\"Ttl node should have been deleted\", zk.exists(\"/foo\", false));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/CreateTTLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testCreate() throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        assertNotNull(\"Ttl node should not have been deleted yet\", zk.exists(\"/foo\", false));\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        assertNull(\"Ttl node should have been deleted\", zk.exists(\"/foo\", false));\n    }\n","date":"2019-08-17 23:13:15","endLine":69,"groupId":"1675","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/79/67beb2c22f786b7408e2d694e71066219848e5.src","preCode":"    public void testCreate()\n            throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        Assert.assertNotNull(\"Ttl node should not have been deleted yet\", zk.exists(\"/foo\", false));\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        Assert.assertNull(\"Ttl node should have been deleted\", zk.exists(\"/foo\", false));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/Emulate353TTLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testCreate() throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        assertNotNull(\"Ttl node should not have been deleted yet\", zk.exists(\"/foo\", false));\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        assertNull(\"Ttl node should have been deleted\", zk.exists(\"/foo\", false));\n    }\n","date":"2019-08-17 23:13:15","endLine":82,"groupId":"1675","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/b4/c8fa02b28db9bf17dc4a5918de51bad64adf46.src","preCode":"    public void testCreate()\n            throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        Assert.assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        Assert.assertNotNull(\"Ttl node should not have been deleted yet\", zk.exists(\"/foo\", false));\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        Assert.assertNull(\"Ttl node should have been deleted\", zk.exists(\"/foo\", false));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/CreateTTLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testCreate() throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        assertNotNull(zk.exists(\"/foo\", false), \"Ttl node should not have been deleted yet\");\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        assertNull(zk.exists(\"/foo\", false), \"Ttl node should have been deleted\");\n    }\n","date":"2020-08-04 21:01:52","endLine":73,"groupId":"1018","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/8b/b67774d4dd0d5dd06d20e4fae2de4a6e8de658.src","preCode":"    public void testCreate() throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        assertNotNull(\"Ttl node should not have been deleted yet\", zk.exists(\"/foo\", false));\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        assertNull(\"Ttl node should have been deleted\", zk.exists(\"/foo\", false));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/Emulate353TTLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testCreate() throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        assertNotNull(zk.exists(\"/foo\", false), \"Ttl node should not have been deleted yet\");\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        assertNull(zk.exists(\"/foo\", false), \"Ttl node should have been deleted\");\n    }\n","date":"2020-08-04 21:01:52","endLine":93,"groupId":"1018","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testCreate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/2c/f5db4a592b4d15614090ec086d802e71e44e05.src","preCode":"    public void testCreate() throws KeeperException, InterruptedException {\n        Stat stat = new Stat();\n        zk.create(\"/foo\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_WITH_TTL, stat, 100);\n        assertEquals(0, stat.getEphemeralOwner());\n\n        final AtomicLong fakeElapsed = new AtomicLong(0);\n        ContainerManager containerManager = newContainerManager(fakeElapsed);\n        containerManager.checkContainers();\n        assertNotNull(\"Ttl node should not have been deleted yet\", zk.exists(\"/foo\", false));\n\n        fakeElapsed.set(1000);\n        containerManager.checkContainers();\n        assertNull(\"Ttl node should have been deleted\", zk.exists(\"/foo\", false));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/CreateTTLTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
