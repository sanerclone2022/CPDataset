[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void connectionRetryTimeoutTest() throws Exception {\n        Learner learner = new TimeoutLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.connectToLeader(addr, \"\");\n    }\n","date":"2018-10-05 20:25:43","endLine":114,"groupId":"331","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"connectionRetryTimeoutTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/17/935505ca7f41445ea21824818a969568bfdf13.src","preCode":"    public void connectionRetryTimeoutTest() throws Exception {\n        Learner learner = new TimeoutLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.connectToLeader(addr, \"\");\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void connectionInitLimitTimeoutTest() throws Exception {\n        TimeoutLearner learner = new TimeoutLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n        \n        \r\n        learner.setTimeMultiplier((long)4000 * 1000000);\n        \n        learner.setPassConnectAttempt(5);\n\n        \r\n        try {\n            learner.connectToLeader(addr, \"\");\n            Assert.fail(\"should have thrown IOException!\");\n        } catch (IOException e) {\n            \r\n            Assert.assertTrue(learner.nanoTime() > 2000*5*1000000);\n            Assert.assertEquals(3, learner.getSockConnectAttempt());\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":140,"groupId":"331","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"connectionInitLimitTimeoutTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/17/935505ca7f41445ea21824818a969568bfdf13.src","preCode":"    public void connectionInitLimitTimeoutTest() throws Exception {\n        TimeoutLearner learner = new TimeoutLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n        \n        \r\n        learner.setTimeMultiplier((long)4000 * 1000000);\n        \n        learner.setPassConnectAttempt(5);\n\n        \r\n        try {\n            learner.connectToLeader(addr, \"\");\n            Assert.fail(\"should have thrown IOException!\");\n        } catch (IOException e) {\n            \r\n            Assert.assertTrue(learner.nanoTime() > 2000*5*1000000);\n            Assert.assertEquals(3, learner.getSockConnectAttempt());\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":2,"curCode":"    public void connectionRetryTimeoutTest() throws Exception {\n        Learner learner = new TimeoutLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.connectToLeader(addr, \"\");\n    }\n","date":"2018-10-05 20:25:43","endLine":114,"groupId":"331","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"connectionRetryTimeoutTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/17/935505ca7f41445ea21824818a969568bfdf13.src","preCode":"    public void connectionRetryTimeoutTest() throws Exception {\n        Learner learner = new TimeoutLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.connectToLeader(addr, \"\");\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void connectionInitLimitTimeoutTest() throws Exception {\n        TimeoutLearner learner = new TimeoutLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.setTimeMultiplier((long) 4000 * 1000000);\n\n        learner.setPassConnectAttempt(5);\n\n        \r\n        try {\n            learner.connectToLeader(addr, \"\");\n            fail(\"should have thrown IOException!\");\n        } catch (IOException e) {\n            \r\n            assertTrue(learner.nanoTime() > 2000 * 5 * 1000000);\n            assertEquals(3, learner.getSockConnectAttempt());\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":144,"groupId":"331","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"connectionInitLimitTimeoutTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/88/647a22b621937108a99b80d881b408cfa79c18.src","preCode":"    public void connectionInitLimitTimeoutTest() throws Exception {\n        TimeoutLearner learner = new TimeoutLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n        \n        \r\n        learner.setTimeMultiplier((long)4000 * 1000000);\n        \n        learner.setPassConnectAttempt(5);\n\n        \r\n        try {\n            learner.connectToLeader(addr, \"\");\n            Assert.fail(\"should have thrown IOException!\");\n        } catch (IOException e) {\n            \r\n            Assert.assertTrue(learner.nanoTime() > 2000*5*1000000);\n            Assert.assertEquals(3, learner.getSockConnectAttempt());\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2019-11-29 21:49:13","codes":[{"authorDate":"2019-11-29 21:49:13","commitOrder":3,"curCode":"    public void connectionRetryTimeoutTest() throws Exception {\n        Learner learner = new TestLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.connectToLeader(new MultipleAddresses(addr), \"\");\n    }\n","date":"2019-11-29 21:49:13","endLine":144,"groupId":"331","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"connectionRetryTimeoutTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/1d/121ac8bde7050a56e3d16ce517d4c3a4255b02.src","preCode":"    public void connectionRetryTimeoutTest() throws Exception {\n        Learner learner = new TimeoutLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.connectToLeader(addr, \"\");\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2019-11-29 21:49:13","commitOrder":3,"curCode":"    public void connectionInitLimitTimeoutTest() throws Exception {\n        TestLearner learner = new TestLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.setTimeMultiplier((long) 4000 * 1000_000);\n\n        learner.setPassConnectAttempt(5);\n\n        \r\n        try {\n            learner.connectToLeader(new MultipleAddresses(addr), \"\");\n            fail(\"should have thrown IOException!\");\n        } catch (IOException e) {\n            \r\n            assertTrue(learner.nanoTime() > 2000 * 5 * 1000_000);\n            assertEquals(3, learner.getSockConnectAttempt());\n        }\n    }\n","date":"2019-11-29 21:49:13","endLine":171,"groupId":"331","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"connectionInitLimitTimeoutTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/1d/121ac8bde7050a56e3d16ce517d4c3a4255b02.src","preCode":"    public void connectionInitLimitTimeoutTest() throws Exception {\n        TimeoutLearner learner = new TimeoutLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.setTimeMultiplier((long) 4000 * 1000000);\n\n        learner.setPassConnectAttempt(5);\n\n        \r\n        try {\n            learner.connectToLeader(addr, \"\");\n            fail(\"should have thrown IOException!\");\n        } catch (IOException e) {\n            \r\n            assertTrue(learner.nanoTime() > 2000 * 5 * 1000000);\n            assertEquals(3, learner.getSockConnectAttempt());\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"815c8f2130b8b43e11abe52b226707f707a93581","commitMessage":"@@@ZOOKEEPER-3188: Improve resilience to network\n\nThis PR is the rebase of the [previous pull request](https://github.com/apache/zookeeper/pull/730).  so all the kudos should go to the original authors...\n\nIn [ZOOKEEPER-3188](https://issues.apache.org/jira/browse/ZOOKEEPER-3188) we add ability to specify several addresses for quorum operations. Also added reconnection attempts if connection to leader lost.\n\nIn this PR I rebased the changes on the current master.  resolving some minor conflicts with:\n- [ZOOKEEPER-3296](https://issues.apache.org/jira/browse/ZOOKEEPER-3296): Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum\n- [ZOOKEEPER-3320](https://issues.apache.org/jira/browse/ZOOKEEPER-3320): Leader election port stop listen when hostname unresolvable for some time\n- [ZOOKEEPER-3385](https://issues.apache.org/jira/browse/ZOOKEEPER-3385): Add admin command to display leader\n- [ZOOKEEPER-3386](https://issues.apache.org/jira/browse/ZOOKEEPER-3386): Add admin command to display voting view\n- [ZOOKEEPER-3398](https://issues.apache.org/jira/browse/ZOOKEEPER-3398): Learner.connectToLeader() may take too long to time-out\n\nI still want to test the feature manually (e.g. using docker containers with multiple virtual networks / interfaces). The steps to the manual test could be recorded in the [google docs](https://docs.google.com/document/d/1iGVwxeHp57qogwfdodCh9b32P2_kOQaJZ2GDo7j36fI/edit?usp=sharing) as well.\n\nAlso I think we could add a few more unit tests where we are using multiple addresses. The current tests are using a single address only.\n\nAlso the Zookeeper documentation needs to be changed (e.g. by a follow-up Jira?) to promote the new feature and the new config format (possibly including also the admin command documentation in relation with [ZOOKEEPER-3386](https://issues.apache.org/jira/browse/ZOOKEEPER-3386) and [ZOOKEEPER-3461](https://issues.apache.org/jira/browse/ZOOKEEPER-3461))\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\nAuthor: Mate Szalay-Beko <mszalay@cloudera.com>\n\nReviewers: eolivelli@apache.org.  andor@apache.org\n\nCloses #1048 from symat/ZOOKEEPER-3188 and squashes the following commits:\n\n3c6fc52d7 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n356882d46 [Mate Szalay-Beko] ZOOKEEPER-3188: document new configuration format for using multiple addresses\n45b6c0fdb [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n4b6bcea48 [Mate Szalay-Beko] ZOOKEEPER-3188: MultiAddress unit tests for Quorum TLS and Kerberos/Digest authentication\n40bc44c23 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\nf875f5c67 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n31805e79b [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n0f95678ca [Mate Szalay-Beko] ZOOKEEPER-3188: skip unreachable addresses when Learner connects to Leader\ne232c55da [Mate Szalay-Beko] ZOOKEEPER-3188: fix flaky unit MultiAddress unit test\ne892d8d8e [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n6f2ab755f [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n2eedf2687 [Mate Szalay-Beko] ZOOKEEPER-3188: fix PR commits; handle case when Leader can not bind to port on startup\n483d2fc9c [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\na5d6bcb97 [Mate Szalay-Beko] ZOOKEEPER-3188: support for dynamic reconfig + add more unit tests\ned31d2ce9 [Mate Szalay-Beko] ZOOKEEPER-3188: better shutdown for executors (following PR comments)\n8713a5bbf [Mate Szalay-Beko] ZOOKEEPER-3188: add fixes for PR comments\n05eae83c0 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\ne823af4b1 [Mate Szalay-Beko] Merge remote-tracking branch 'origin/master' into ZOOKEEPER-3188\nde7bad2a6 [Mate Szalay-Beko] Merge remote-tracking branch 'origin/master' into ZOOKEEPER-3188\nda98a8da6 [Mate Szalay-Beko] ZOOKEEPER-3188: fix JDK-13 warning\n5bd1f4e2c [Mate Szalay-Beko] ZOOKEEPER-3188: supress spotbugs warning\n42a52a688 [Mate Szalay-Beko] ZOOKEEPER-3188: improve based on code review comments\n6c4220a0d [Mate Szalay-Beko] ZOOKEEPER-3188: fix SendWorker.asyncValidateIfSocketIsStillReachable\n5b22432c1 [Mate Szalay-Beko] ZOOKEEPER-3188: fix LeaderElection to work with multiple election addresses\n7bfbe7e5c [Mate Szalay-Beko] ZOOKEEPER-3188: Improve resilience to network\n","date":"2019-11-29 21:49:13","modifiedFileCount":"26","status":"M","submitter":"Mate Szalay-Beko"},{"authorTime":"2019-11-29 21:49:13","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":4,"curCode":"    public void connectionRetryTimeoutTest() throws Exception {\n        assertThrows(IOException.class, () -> {\n            Learner learner = new TestLearner();\n            learner.self = new QuorumPeer();\n            learner.self.setTickTime(2000);\n            learner.self.setInitLimit(5);\n            learner.self.setSyncLimit(2);\n\n            \r\n            InetSocketAddress addr = new InetSocketAddress(1111);\n\n            \r\n            learner.connectToLeader(new MultipleAddresses(addr), \"\");\n        });\n    }\n","date":"2020-08-04 21:01:52","endLine":159,"groupId":"10139","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"connectionRetryTimeoutTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d8/76c167f94dd59df0f4cc00484d941766b442a8.src","preCode":"    public void connectionRetryTimeoutTest() throws Exception {\n        Learner learner = new TestLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.connectToLeader(new MultipleAddresses(addr), \"\");\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2019-11-29 21:49:13","commitOrder":4,"curCode":"    public void connectionInitLimitTimeoutTest() throws Exception {\n        TestLearner learner = new TestLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.setTimeMultiplier((long) 4000 * 1000_000);\n\n        learner.setPassConnectAttempt(5);\n\n        \r\n        try {\n            learner.connectToLeader(new MultipleAddresses(addr), \"\");\n            fail(\"should have thrown IOException!\");\n        } catch (IOException e) {\n            \r\n            assertTrue(learner.nanoTime() > 2000 * 5 * 1000_000);\n            assertEquals(3, learner.getSockConnectAttempt());\n        }\n    }\n","date":"2019-11-29 21:49:13","endLine":171,"groupId":"10139","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"connectionInitLimitTimeoutTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/1d/121ac8bde7050a56e3d16ce517d4c3a4255b02.src","preCode":"    public void connectionInitLimitTimeoutTest() throws Exception {\n        TestLearner learner = new TestLearner();\n        learner.self = new QuorumPeer();\n        learner.self.setTickTime(2000);\n        learner.self.setInitLimit(5);\n        learner.self.setSyncLimit(2);\n\n        \r\n        InetSocketAddress addr = new InetSocketAddress(1111);\n\n        \r\n        learner.setTimeMultiplier((long) 4000 * 1000_000);\n\n        learner.setPassConnectAttempt(5);\n\n        \r\n        try {\n            learner.connectToLeader(new MultipleAddresses(addr), \"\");\n            fail(\"should have thrown IOException!\");\n        } catch (IOException e) {\n            \r\n            assertTrue(learner.nanoTime() > 2000 * 5 * 1000_000);\n            assertEquals(3, learner.getSockConnectAttempt());\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"N"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
