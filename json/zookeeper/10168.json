[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"        protected Leader makeLeader(FileTxnSnapLog logFactory) throws IOException {\n            LeaderZooKeeperServer zk = new LeaderZooKeeperServer(logFactory, this, this.getZkDb()) {\n                @Override\n                protected void setupRequestProcessors() {\n                    \r\n\r\n\n                    RequestProcessor finalProcessor = new FinalRequestProcessor(this);\n                    RequestProcessor toBeAppliedProcessor = new Leader.ToBeAppliedRequestProcessor(finalProcessor,\n                            getLeader());\n                    commitProcessor = new CommitProcessor(toBeAppliedProcessor, Long.toString(getServerId()), false,\n                            getZooKeeperServerListener());\n                    commitProcessor.start();\n                    ProposalRequestProcessor proposalProcessor = new MockProposalRequestProcessor(this,\n                            commitProcessor);\n                    proposalProcessor.initialize();\n                    prepRequestProcessor = new PrepRequestProcessor(this, proposalProcessor);\n                    prepRequestProcessor.start();\n                    firstProcessor = new LeaderRequestProcessor(this, prepRequestProcessor);\n                }\n\n            };\n            return new Leader(this, zk);\n        }\n","date":"2018-10-05 20:25:43","endLine":209,"groupId":"2764","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"makeLeader","params":"(FileTxnSnapLoglogFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/e9/6d2736581bf75fe99e235ac3e42e25ca04f1b9.src","preCode":"        protected Leader makeLeader(FileTxnSnapLog logFactory) throws IOException {\n            LeaderZooKeeperServer zk = new LeaderZooKeeperServer(logFactory, this, this.getZkDb()) {\n                @Override\n                protected void setupRequestProcessors() {\n                    \r\n\r\n\n                    RequestProcessor finalProcessor = new FinalRequestProcessor(this);\n                    RequestProcessor toBeAppliedProcessor = new Leader.ToBeAppliedRequestProcessor(finalProcessor,\n                            getLeader());\n                    commitProcessor = new CommitProcessor(toBeAppliedProcessor, Long.toString(getServerId()), false,\n                            getZooKeeperServerListener());\n                    commitProcessor.start();\n                    ProposalRequestProcessor proposalProcessor = new MockProposalRequestProcessor(this,\n                            commitProcessor);\n                    proposalProcessor.initialize();\n                    prepRequestProcessor = new PrepRequestProcessor(this, proposalProcessor);\n                    prepRequestProcessor.start();\n                    firstProcessor = new LeaderRequestProcessor(this, prepRequestProcessor);\n                }\n\n            };\n            return new Leader(this, zk);\n        }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/RaceConditionTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    protected void setupRequestProcessors() {\n        RequestProcessor finalProcessor = new FinalRequestProcessor(this);\n        RequestProcessor toBeAppliedProcessor = new Leader.ToBeAppliedRequestProcessor(finalProcessor, getLeader());\n        commitProcessor = new CommitProcessor(toBeAppliedProcessor,\n                Long.toString(getServerId()), false,\n                getZooKeeperServerListener());\n        commitProcessor.start();\n        ProposalRequestProcessor proposalProcessor = new ProposalRequestProcessor(this,\n                commitProcessor);\n        proposalProcessor.initialize();\n        prepRequestProcessor = new PrepRequestProcessor(this, proposalProcessor);\n        prepRequestProcessor.start();\n        firstProcessor = new LeaderRequestProcessor(this, prepRequestProcessor);\n\n        setupContainerManager();\n    }\n","date":"2018-10-05 20:25:43","endLine":80,"groupId":"2764","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupRequestProcessors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/4f/8c095fd08fce54b4ef0cdf3c98d7385839079b.src","preCode":"    protected void setupRequestProcessors() {\n        RequestProcessor finalProcessor = new FinalRequestProcessor(this);\n        RequestProcessor toBeAppliedProcessor = new Leader.ToBeAppliedRequestProcessor(finalProcessor, getLeader());\n        commitProcessor = new CommitProcessor(toBeAppliedProcessor,\n                Long.toString(getServerId()), false,\n                getZooKeeperServerListener());\n        commitProcessor.start();\n        ProposalRequestProcessor proposalProcessor = new ProposalRequestProcessor(this,\n                commitProcessor);\n        proposalProcessor.initialize();\n        prepRequestProcessor = new PrepRequestProcessor(this, proposalProcessor);\n        prepRequestProcessor.start();\n        firstProcessor = new LeaderRequestProcessor(this, prepRequestProcessor);\n\n        setupContainerManager();\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-16 22:22:07","commitOrder":2,"curCode":"        protected Leader makeLeader(FileTxnSnapLog logFactory) throws IOException, X509Exception {\n            LeaderZooKeeperServer zk = new LeaderZooKeeperServer(logFactory, this, this.getZkDb()) {\n                @Override\n                protected void setupRequestProcessors() {\n                    \r\n\r\n\n                    RequestProcessor finalProcessor = new FinalRequestProcessor(this);\n                    RequestProcessor toBeAppliedProcessor = new Leader.ToBeAppliedRequestProcessor(finalProcessor,\n                            getLeader());\n                    commitProcessor = new CommitProcessor(toBeAppliedProcessor, Long.toString(getServerId()), false,\n                            getZooKeeperServerListener());\n                    commitProcessor.start();\n                    ProposalRequestProcessor proposalProcessor = new MockProposalRequestProcessor(this,\n                            commitProcessor);\n                    proposalProcessor.initialize();\n                    prepRequestProcessor = new PrepRequestProcessor(this, proposalProcessor);\n                    prepRequestProcessor.start();\n                    firstProcessor = new LeaderRequestProcessor(this, prepRequestProcessor);\n                }\n\n            };\n            return new Leader(this, zk);\n        }\n","date":"2018-10-16 22:22:07","endLine":210,"groupId":"10168","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"makeLeader","params":"(FileTxnSnapLoglogFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ea/2a4d385184d2331d888562e573292a3e4660fb.src","preCode":"        protected Leader makeLeader(FileTxnSnapLog logFactory) throws IOException {\n            LeaderZooKeeperServer zk = new LeaderZooKeeperServer(logFactory, this, this.getZkDb()) {\n                @Override\n                protected void setupRequestProcessors() {\n                    \r\n\r\n\n                    RequestProcessor finalProcessor = new FinalRequestProcessor(this);\n                    RequestProcessor toBeAppliedProcessor = new Leader.ToBeAppliedRequestProcessor(finalProcessor,\n                            getLeader());\n                    commitProcessor = new CommitProcessor(toBeAppliedProcessor, Long.toString(getServerId()), false,\n                            getZooKeeperServerListener());\n                    commitProcessor.start();\n                    ProposalRequestProcessor proposalProcessor = new MockProposalRequestProcessor(this,\n                            commitProcessor);\n                    proposalProcessor.initialize();\n                    prepRequestProcessor = new PrepRequestProcessor(this, proposalProcessor);\n                    prepRequestProcessor.start();\n                    firstProcessor = new LeaderRequestProcessor(this, prepRequestProcessor);\n                }\n\n            };\n            return new Leader(this, zk);\n        }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/RaceConditionTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"},{"authorDate":"2018-10-05 20:25:43","commitOrder":2,"curCode":"    protected void setupRequestProcessors() {\n        RequestProcessor finalProcessor = new FinalRequestProcessor(this);\n        RequestProcessor toBeAppliedProcessor = new Leader.ToBeAppliedRequestProcessor(finalProcessor, getLeader());\n        commitProcessor = new CommitProcessor(toBeAppliedProcessor,\n                Long.toString(getServerId()), false,\n                getZooKeeperServerListener());\n        commitProcessor.start();\n        ProposalRequestProcessor proposalProcessor = new ProposalRequestProcessor(this,\n                commitProcessor);\n        proposalProcessor.initialize();\n        prepRequestProcessor = new PrepRequestProcessor(this, proposalProcessor);\n        prepRequestProcessor.start();\n        firstProcessor = new LeaderRequestProcessor(this, prepRequestProcessor);\n\n        setupContainerManager();\n    }\n","date":"2018-10-05 20:25:43","endLine":80,"groupId":"10168","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setupRequestProcessors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/4f/8c095fd08fce54b4ef0cdf3c98d7385839079b.src","preCode":"    protected void setupRequestProcessors() {\n        RequestProcessor finalProcessor = new FinalRequestProcessor(this);\n        RequestProcessor toBeAppliedProcessor = new Leader.ToBeAppliedRequestProcessor(finalProcessor, getLeader());\n        commitProcessor = new CommitProcessor(toBeAppliedProcessor,\n                Long.toString(getServerId()), false,\n                getZooKeeperServerListener());\n        commitProcessor.start();\n        ProposalRequestProcessor proposalProcessor = new ProposalRequestProcessor(this,\n                commitProcessor);\n        proposalProcessor.initialize();\n        prepRequestProcessor = new PrepRequestProcessor(this, proposalProcessor);\n        prepRequestProcessor.start();\n        firstProcessor = new LeaderRequestProcessor(this, prepRequestProcessor);\n\n        setupContainerManager();\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"}],"commitId":"7b679bc9dd98f06ee10bbb0978cfee5dab7b74dc","commitMessage":"@@@ZOOKEEPER-236: SSL Support for Atomic Broadcast protocol (master)\n\nCherry-picked from branch-3.5.\n\nAuthor: Andor Molnar <andor@apache.org>\nAuthor: Abraham Fine <afine@apache.org>\n\nReviewers: hanm@apache.org.  breed@apache.org\n\nCloses #655 from anmolnar/ZOOKEEPER-236_master and squashes the following commits:\n\n8c3aa11e [Andor Molnar] ZOOKEEPER-3165: Java 9: X509UtilTest.testCreateSSLContextWithoutTrustStorePassword fails\neb272749 [Abraham Fine] ZOOKEEPER-236: SSL Support for Atomic Broadcast protocol\n","date":"2018-10-16 22:22:07","modifiedFileCount":"20","status":"M","submitter":"Andor Molnar"}]
