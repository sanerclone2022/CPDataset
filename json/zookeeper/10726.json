[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(LOG, ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                                     \"Deliver event \" + event + \" to 0x\"\n                                     + Long.toHexString(this.sessionId)\n                                     + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Problem sending to \" + getRemoteSocketAddress(), e1);\n            }\n            close();\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":166,"groupId":"1170","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/0b/2772433b38c4a7651bdb77966984222526b1e9.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(LOG, ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                                     \"Deliver event \" + event + \" to 0x\"\n                                     + Long.toHexString(this.sessionId)\n                                     + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Problem sending to \" + getRemoteSocketAddress(), e1);\n            }\n            close();\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(LOG, ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                                     \"Deliver event \" + event + \" to 0x\"\n                                     + Long.toHexString(this.sessionId)\n                                     + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        sendResponse(h, e, \"notification\");\n    }\n","date":"2018-10-05 20:25:43","endLine":723,"groupId":"1170","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c3/44c659deea68b5f8c9051eb50ec93a8cefa2ca.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(LOG, ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                                     \"Deliver event \" + event + \" to 0x\"\n                                     + Long.toHexString(this.sessionId)\n                                     + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        sendResponse(h, e, \"notification\");\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":710,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-01-15 02:38:53","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":2,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(LOG, ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                                     \"Deliver event \" + event + \" to 0x\"\n                                     + Long.toHexString(this.sessionId)\n                                     + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Problem sending to \" + getRemoteSocketAddress(), e1);\n            }\n            close();\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":166,"groupId":"1170","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/0b/2772433b38c4a7651bdb77966984222526b1e9.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(LOG, ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                                     \"Deliver event \" + event + \" to 0x\"\n                                     + Long.toHexString(this.sessionId)\n                                     + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Problem sending to \" + getRemoteSocketAddress(), e1);\n            }\n            close();\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"N"},{"authorDate":"2019-01-15 02:38:53","commitOrder":2,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(LOG, ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                                     \"Deliver event \" + event + \" to 0x\"\n                                     + Long.toHexString(this.sessionId)\n                                     + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        sendResponse(h, e, \"notification\", null, null);\n    }\n","date":"2019-01-15 02:38:53","endLine":712,"groupId":"1170","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c2/ab78487a827f0ee945a184adff4afe9c6db51d.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(LOG, ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                                     \"Deliver event \" + event + \" to 0x\"\n                                     + Long.toHexString(this.sessionId)\n                                     + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        sendResponse(h, e, \"notification\");\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":699,"status":"M"}],"commitId":"9828685d20bc99272ec0689a590d27b0f8f7ebb6","commitMessage":"@@@ZOOKEEPER-3180: Add response cache to improve the throughput of read ?\n\n?heavy traffic\n\nIntroduces a ResponseCache that interacts with ServerCnxn to cache the serialized response for getData requests.\n\nAuthor: Brian Nixon <nixon@fb.com>\n\nReviewers: hanm@apache.org.  fangmin@apache.org.  andor@apache.org\n\nCloses #684 from enixon/response-cache and squashes the following commits:\n\nc264b88f8 [Brian Nixon] fix the types in ResponseCacheTest::checkCacheStatus to match the recent change\n5e36b396a [Brian Nixon] add documentation\ne413de1a6 [Brian Nixon] remove JMX use from ResponseCacheTest\nc7a3f8eb0 [Brian Nixon] ZOOKEEPER-3180: Add response cache to improve the throughput of read heavy traffic\n","date":"2019-01-15 02:38:53","modifiedFileCount":"11","status":"M","submitter":"Brian Nixon"},{"authorTime":"2019-01-15 02:38:53","codes":[{"authorDate":"2019-10-10 20:37:45","commitOrder":3,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            LOG.debug(\"Problem sending to {}\", getRemoteSocketAddress(), e1);\n            close();\n        }\n    }\n","date":"2019-10-10 20:37:45","endLine":167,"groupId":"1170","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ca/89672144d1610ff43fad249165410a52fa468b.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Problem sending to \" + getRemoteSocketAddress(), e1);\n            }\n            close();\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2019-01-15 02:38:53","commitOrder":3,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(LOG, ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                                     \"Deliver event \" + event + \" to 0x\"\n                                     + Long.toHexString(this.sessionId)\n                                     + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        sendResponse(h, e, \"notification\", null, null);\n    }\n","date":"2019-01-15 02:38:53","endLine":712,"groupId":"1170","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c2/ab78487a827f0ee945a184adff4afe9c6db51d.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(LOG, ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                                     \"Deliver event \" + event + \" to 0x\"\n                                     + Long.toHexString(this.sessionId)\n                                     + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        sendResponse(h, e, \"notification\", null, null);\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":699,"status":"N"}],"commitId":"11c07921c15e2fb7692375327b53f26a583b77ca","commitMessage":"@@@ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org.  andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format\n","date":"2019-10-10 20:37:45","modifiedFileCount":"155","status":"M","submitter":"tison"},{"authorTime":"2019-11-18 16:05:38","codes":[{"authorDate":"2019-10-10 20:37:45","commitOrder":4,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            LOG.debug(\"Problem sending to {}\", getRemoteSocketAddress(), e1);\n            close();\n        }\n    }\n","date":"2019-10-10 20:37:45","endLine":167,"groupId":"1170","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ca/89672144d1610ff43fad249165410a52fa468b.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            LOG.debug(\"Problem sending to {}\", getRemoteSocketAddress(), e1);\n            close();\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"N"},{"authorDate":"2019-11-18 16:05:38","commitOrder":4,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        \r\n        \r\n        \r\n        sendResponse(h, e, \"notification\", null, null, ZooDefs.OpCode.error);\n    }\n","date":"2019-11-18 16:05:38","endLine":699,"groupId":"1170","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d0/591e57673d9aa0b45418250bc10174e7e6cfb6.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        sendResponse(h, e, \"notification\", null, null);\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":683,"status":"M"}],"commitId":"945167c338d4a26c18bdaf49fb9000186a5f7025","commitMessage":"@@@ZOOKEEPER-3560: Add response cache to serve get children (2) requests.\n\nZOOKEEPER-3180 introduces response cache but it only covers getData requests. This commit is to extend the response cache based on the infrastructure set up by ZOOKEEPER-3180 to so the response of get children requests can also be served out of cache. Some design decisions:\n\n* Only OpCode.getChildren2 is supported.  as OpCode.getChildren does not have associated stats and current cache infra relies on stats to invalidate cache.\n\n* The children list is stored in a separate response cache object so it does not pollute the existing data cache that's serving getData requests.  and this separation also allows potential separate tuning of each cache based on workload characteristics.\n\n* As a result of cache object separation.  new server metrics is added to measure cache hit / miss for get children requests.  that's separated from get data requests.\n\nSimilar as ZOOKEEPER-3180.  the get children response cache is enabled by default.  with a default cache size of 400.  and can be disabled (together with get data response cache.).\n\nAuthor: Michael Han <lhan@twitter.com>\nAuthor: Michael Han <hanm@apache.org>\n\nReviewers: eolivelli@apache.org.  andor@apache.org.  enixon@apache.org\n\nCloses #1098 from hanm/cache\n","date":"2019-11-18 16:05:38","modifiedFileCount":"10","status":"M","submitter":"Michael Han"},{"authorTime":"2019-11-21 12:58:30","codes":[{"authorDate":"2019-11-21 12:58:30","commitOrder":5,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            LOG.debug(\"Problem sending to {}\", getRemoteSocketAddress(), e1);\n            close();\n        }\n    }\n","date":"2019-11-21 12:58:30","endLine":168,"groupId":"1170","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/5f/98d799a299217d0c04688c0e3ae44d6a122e23.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            LOG.debug(\"Problem sending to {}\", getRemoteSocketAddress(), e1);\n            close();\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2019-11-21 12:58:30","commitOrder":5,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        \r\n        \r\n        \r\n        sendResponse(h, e, \"notification\", null, null, ZooDefs.OpCode.error);\n    }\n","date":"2019-11-21 12:58:30","endLine":700,"groupId":"1170","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/9c/de078d36066117597147d7d848251921eaee17.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(-1, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        \r\n        \r\n        \r\n        sendResponse(h, e, \"notification\", null, null, ZooDefs.OpCode.error);\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":684,"status":"M"}],"commitId":"ae68c7d50e4057ef3f9b99ac0cd0200a8bd5f235","commitMessage":"@@@ZOOKEEPER-3570: make the special client xid constant\n\n- more details in the [ZOOKEEPER-3570](https://issues.apache.org/jira/browse/ZOOKEEPER-3570)\n\nAuthor: maoling <maoling199210191@sina.com>\n\nReviewers: Fangmin Lyu <fangmin@apache.org>.  Brian Nixon <enixon@apache.org>\n\nCloses #1136 from maoling/ZOOKEEPER-3570\n","date":"2019-11-21 12:58:30","modifiedFileCount":"5","status":"M","submitter":"maoling"},{"authorTime":"2020-05-28 11:43:25","codes":[{"authorDate":"2020-05-28 11:43:25","commitOrder":6,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            int responseSize = sendResponse(h, e, \"notification\");\n            ServerMetrics.getMetrics().WATCH_BYTES.add(responseSize);\n        } catch (IOException e1) {\n            LOG.debug(\"Problem sending to {}\", getRemoteSocketAddress(), e1);\n            close();\n        }\n    }\n","date":"2020-05-28 11:43:25","endLine":177,"groupId":"10726","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/cf/9aa457f8b637e1089f374e7dcc8a9c390c6cea.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        try {\n            sendResponse(h, e, \"notification\");\n        } catch (IOException e1) {\n            LOG.debug(\"Problem sending to {}\", getRemoteSocketAddress(), e1);\n            close();\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2020-05-28 11:43:25","commitOrder":6,"curCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        \r\n        \r\n        \r\n        int responseSize = sendResponse(h, e, \"notification\", null, null, ZooDefs.OpCode.error);\n        ServerMetrics.getMetrics().WATCH_BYTES.add(responseSize);\n    }\n","date":"2020-05-28 11:43:25","endLine":705,"groupId":"10726","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(WatchedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f9/67fffe97486410468495241be731ad95b95738.src","preCode":"    public void process(WatchedEvent event) {\n        ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, -1L, 0);\n        if (LOG.isTraceEnabled()) {\n            ZooTrace.logTraceMessage(\n                LOG,\n                ZooTrace.EVENT_DELIVERY_TRACE_MASK,\n                \"Deliver event \" + event + \" to 0x\" + Long.toHexString(this.sessionId) + \" through \" + this);\n        }\n\n        \r\n        WatcherEvent e = event.getWrapper();\n\n        \r\n        \r\n        \r\n        sendResponse(h, e, \"notification\", null, null, ZooDefs.OpCode.error);\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":688,"status":"M"}],"commitId":"b1e67ca2807f836592ec0106c0c38e3ce997ee8e","commitMessage":"@@@ZOOKEEPER-3847: Add a couple metrics to help track Netty memory usage\n\nAuthor: Jie Huang <jiehuang@fb.com>\n\nReviewers: Michael Han <hanm@apache.org>\n\nCloses #1367 from jhuan31/ZOOKEEPER-3847\n","date":"2020-05-28 11:43:25","modifiedFileCount":"7","status":"M","submitter":"Jie Huang"}]
