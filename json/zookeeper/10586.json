[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testSessionRestore() throws KeeperException, InterruptedException, IOException {\n        zk.create(\"/srestore\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.EPHEMERAL);\n        assertNotNull(\"Ephemeral node has not been created\", zk.exists(\"/srestore\", null));\n\n        zk.disconnect();\n        zk.close();\n\n        zk = createClient();\n        assertNotNull(\"Ephemeral node should be present when session is restored\", zk.exists(\"/srestore\", null));\n    }\n","date":"2018-10-19 20:39:50","endLine":111,"groupId":"281","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSessionRestore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/09/badae12a1dc6665e51eae90e35c8ac4688c220.src","preCode":"    public void testSessionRestore() throws KeeperException, InterruptedException, IOException {\n        zk.create(\"/srestore\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.EPHEMERAL);\n        assertNotNull(\"Ephemeral node has not been created\", zk.exists(\"/srestore\", null));\n\n        zk.disconnect();\n        zk.close();\n\n        zk = createClient();\n        assertNotNull(\"Ephemeral node should be present when session is restored\", zk.exists(\"/srestore\", null));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SessionTimeoutTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testSessionSurviveServerRestart() throws Exception {\n        zk.create(\"/sdeath\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.EPHEMERAL);\n        assertNotNull(\"Ephemeral node has not been created\", zk.exists(\"/sdeath\", null));\n\n        zk.disconnect();\n        stopServer();\n        startServer();\n        zk = createClient();\n\n        assertNotNull(\"Ephemeral node should be present when server restarted\", zk.exists(\"/sdeath\", null));\n    }\n","date":"2018-10-19 20:39:50","endLine":128,"groupId":"282","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSessionSurviveServerRestart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/09/badae12a1dc6665e51eae90e35c8ac4688c220.src","preCode":"    public void testSessionSurviveServerRestart() throws Exception {\n        zk.create(\"/sdeath\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.EPHEMERAL);\n        assertNotNull(\"Ephemeral node has not been created\", zk.exists(\"/sdeath\", null));\n\n        zk.disconnect();\n        stopServer();\n        startServer();\n        zk = createClient();\n\n        assertNotNull(\"Ephemeral node should be present when server restarted\", zk.exists(\"/sdeath\", null));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SessionTimeoutTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":2,"curCode":"    public void testSessionRestore() throws KeeperException, InterruptedException, IOException {\n        zk.create(\"/srestore\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL);\n        assertNotNull(zk.exists(\"/srestore\", null), \"Ephemeral node has not been created\");\n\n        zk.disconnect();\n        zk.close();\n\n        zk = createClient();\n        assertNotNull(zk.exists(\"/srestore\", null), \"Ephemeral node should be present when session is restored\");\n    }\n","date":"2020-08-04 21:01:52","endLine":119,"groupId":"10586","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testSessionRestore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/05/85ce6fadf757d9d43b8684dc38f007d093e0d5.src","preCode":"    public void testSessionRestore() throws KeeperException, InterruptedException, IOException {\n        zk.create(\"/srestore\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL);\n        assertNotNull(\"Ephemeral node has not been created\", zk.exists(\"/srestore\", null));\n\n        zk.disconnect();\n        zk.close();\n\n        zk = createClient();\n        assertNotNull(\"Ephemeral node should be present when session is restored\", zk.exists(\"/srestore\", null));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SessionTimeoutTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":2,"curCode":"    public void testSessionSurviveServerRestart() throws Exception {\n        zk.create(\"/sdeath\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL);\n        assertNotNull(zk.exists(\"/sdeath\", null), \"Ephemeral node has not been created\");\n\n        zk.disconnect();\n        stopServer();\n        startServer();\n        zk = createClient();\n\n        assertNotNull(zk.exists(\"/sdeath\", null), \"Ephemeral node should be present when server restarted\");\n    }\n","date":"2020-08-04 21:01:52","endLine":135,"groupId":"10586","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testSessionSurviveServerRestart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/05/85ce6fadf757d9d43b8684dc38f007d093e0d5.src","preCode":"    public void testSessionSurviveServerRestart() throws Exception {\n        zk.create(\"/sdeath\", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL);\n        assertNotNull(\"Ephemeral node has not been created\", zk.exists(\"/sdeath\", null));\n\n        zk.disconnect();\n        stopServer();\n        startServer();\n        zk = createClient();\n\n        assertNotNull(\"Ephemeral node should be present when server restarted\", zk.exists(\"/sdeath\", null));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SessionTimeoutTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
