[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"        private void checkFlush(boolean force) {\n            if ((force && sb.length() > 0) || sb.length() > 2048) {\n                sendBuffer(ByteBuffer.wrap(sb.toString().getBytes()));\n                \r\n                sb.setLength(0);\n            }\n        }\n","date":"2018-10-05 20:25:43","endLine":245,"groupId":"4181","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkFlush","params":"(booleanforce)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/0b/2772433b38c4a7651bdb77966984222526b1e9.src","preCode":"        private void checkFlush(boolean force) {\n            if ((force && sb.length() > 0) || sb.length() > 2048) {\n                sendBuffer(ByteBuffer.wrap(sb.toString().getBytes()));\n                \r\n                sb.setLength(0);\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"        private void checkFlush(boolean force) {\n            if ((force && sb.length() > 0) || sb.length() > 2048) {\n                sendBufferSync(ByteBuffer.wrap(sb.toString().getBytes()));\n                \r\n                sb.setLength(0);\n            }\n        }\n","date":"2018-10-05 20:25:43","endLine":456,"groupId":"4274","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkFlush","params":"(booleanforce)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c3/44c659deea68b5f8c9051eb50ec93a8cefa2ca.src","preCode":"        private void checkFlush(boolean force) {\n            if ((force && sb.length() > 0) || sb.length() > 2048) {\n                sendBufferSync(ByteBuffer.wrap(sb.toString().getBytes()));\n                \r\n                sb.setLength(0);\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":450,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2020-10-30 19:03:41","codes":[{"authorDate":"2020-10-30 19:03:41","commitOrder":2,"curCode":"        private void checkFlush(boolean force) {\n            if ((force && sb.length() > 0) || sb.length() > 2048) {\n                sendBuffer(ByteBuffer.wrap(sb.toString().getBytes(UTF_8)));\n                \r\n                sb.setLength(0);\n            }\n        }\n","date":"2020-10-30 19:03:41","endLine":241,"groupId":"10728","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkFlush","params":"(booleanforce)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/11/0807a4cf5829179ec3095b2b17ba6ce153d0fe.src","preCode":"        private void checkFlush(boolean force) {\n            if ((force && sb.length() > 0) || sb.length() > 2048) {\n                sendBuffer(ByteBuffer.wrap(sb.toString().getBytes()));\n                \r\n                sb.setLength(0);\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"M"},{"authorDate":"2020-10-30 19:03:41","commitOrder":2,"curCode":"        private void checkFlush(boolean force) {\n            if ((force && sb.length() > 0) || sb.length() > 2048) {\n                sendBufferSync(ByteBuffer.wrap(sb.toString().getBytes(UTF_8)));\n                \r\n                sb.setLength(0);\n            }\n        }\n","date":"2020-10-30 19:03:41","endLine":450,"groupId":"10728","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkFlush","params":"(booleanforce)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/2e/65da84044a4ca8b539d1eaa542531c9470a121.src","preCode":"        private void checkFlush(boolean force) {\n            if ((force && sb.length() > 0) || sb.length() > 2048) {\n                sendBufferSync(ByteBuffer.wrap(sb.toString().getBytes()));\n                \r\n                sb.setLength(0);\n            }\n        }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/NIOServerCnxn.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":444,"status":"M"}],"commitId":"8654e7ed37717df79eb06f75de43eafe4f47b175","commitMessage":"@@@ZOOKEEPER-3342: Use StandardCharsets\n\n> Encodes this String into a sequence of bytes using the platform's default charset.  storing the result into a new byte array.  The behavior of this method when this string cannot be encoded in the default charset is unspecified.\n\nhttps://docs.oracle.com/javase/8/docs/api/java/lang/String.html#getBytes--\n\n1.  Since this is a distributed system.  it is always possible that different nodes have different default charsets defined.  I think it's most safe to specify it explicitly across all nodes for safety sake.  You could for example see a situation where an upgrade JVM uses a different default and during a rolling upgrade of the JVM.  different nodes now have a different default.\n2.  The default charset is usually \"ISO-8859-1\".  UTF-8 covers more of our international friends.\n3. Explicitly specifying the CharSet yields slight performance gains\n4. Explicitly specifying the CharSet removes the need for try/catch blocks of UnsupportedEncodingException\n\nhttps://blog.codecentric.de/en/2014/04/faster-cleaner-code-since-java-7/\n\nAuthor: David Mollitor <dmollitor@apache.org>\nAuthor: Beluga Behr <dam6923@gmail.com>\nAuthor: David Mollitor <dam6923@gmail.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Andor Molnar <anmolnar@apache.org>\n\nCloses #882 from belugabehr/ZOOKEEPER-3342\n","date":"2020-10-30 19:03:41","modifiedFileCount":"32","status":"M","submitter":"David Mollitor"}]
