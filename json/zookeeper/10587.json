[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testAuth() throws Exception {\n        ZooKeeper zk = createClient();\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            Assert.fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.info(\"Got exception as expected: \" + e);\n        }\n        finally {\n            zk.close();\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":80,"groupId":"556","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAuth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ee/013872f2616f349df840380d95a9b0974dba81.src","preCode":"    public void testAuth() throws Exception {\n        ZooKeeper zk = createClient();\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            Assert.fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.info(\"Got exception as expected: \" + e);\n        }\n        finally {\n            zk.close();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SaslAuthMissingClientConfigTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testAuth() throws Exception {\n        \r\n        \r\n        CountdownWatcher watcher = new CountdownWatcher();\n        TestableZooKeeper zk = new TestableZooKeeper(hostPort, CONNECTION_TIMEOUT, watcher);\n        if (!watcher.clientConnected.await(CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS))\n        {\n            Assert.fail(\"Unable to connect to server\");\n        }\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            Assert.fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.info(\"Got exception as expected: \" + e);\n        }\n        finally {\n            zk.close();\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":91,"groupId":"556","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAuth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/df/8c9033b712ed42cf2955c910abb2a0104b7481.src","preCode":"    public void testAuth() throws Exception {\n        \r\n        \r\n        CountdownWatcher watcher = new CountdownWatcher();\n        TestableZooKeeper zk = new TestableZooKeeper(hostPort, CONNECTION_TIMEOUT, watcher);\n        if (!watcher.clientConnected.await(CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS))\n        {\n            Assert.fail(\"Unable to connect to server\");\n        }\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            Assert.fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.info(\"Got exception as expected: \" + e);\n        }\n        finally {\n            zk.close();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SaslAuthFailDesignatedClientTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testAuth() throws Exception {\n        ZooKeeper zk = createClient();\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.info(\"Got exception as expected: \" + e);\n        } finally {\n            zk.close();\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":78,"groupId":"556","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAuth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ef/e52d6fb5ff984f64ae8406a37814f126fcb31c.src","preCode":"    public void testAuth() throws Exception {\n        ZooKeeper zk = createClient();\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            Assert.fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.info(\"Got exception as expected: \" + e);\n        }\n        finally {\n            zk.close();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SaslAuthMissingClientConfigTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testAuth() throws Exception {\n        \r\n        \r\n        CountdownWatcher watcher = new CountdownWatcher();\n        TestableZooKeeper zk = new TestableZooKeeper(hostPort, CONNECTION_TIMEOUT, watcher);\n        if (!watcher.clientConnected.await(CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS)) {\n            fail(\"Unable to connect to server\");\n        }\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.info(\"Got exception as expected: \" + e);\n        } finally {\n            zk.close();\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":87,"groupId":"556","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAuth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/24/1d7861b753e5761bfb17690da7be32e6f2c0c1.src","preCode":"    public void testAuth() throws Exception {\n        \r\n        \r\n        CountdownWatcher watcher = new CountdownWatcher();\n        TestableZooKeeper zk = new TestableZooKeeper(hostPort, CONNECTION_TIMEOUT, watcher);\n        if (!watcher.clientConnected.await(CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS))\n        {\n            Assert.fail(\"Unable to connect to server\");\n        }\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            Assert.fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.info(\"Got exception as expected: \" + e);\n        }\n        finally {\n            zk.close();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SaslAuthFailDesignatedClientTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2019-10-10 20:37:45","codes":[{"authorDate":"2019-10-10 20:37:45","commitOrder":3,"curCode":"    public void testAuth() throws Exception {\n        ZooKeeper zk = createClient();\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.debug(\"Got exception as expected\", e);\n        } finally {\n            zk.close();\n        }\n    }\n","date":"2019-10-10 20:37:45","endLine":78,"groupId":"10587","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAuth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/51/a6d03f024bfc95c9dcc8545d8c7f39dddce0e2.src","preCode":"    public void testAuth() throws Exception {\n        ZooKeeper zk = createClient();\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.info(\"Got exception as expected: \" + e);\n        } finally {\n            zk.close();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SaslAuthMissingClientConfigTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2019-10-10 20:37:45","commitOrder":3,"curCode":"    public void testAuth() throws Exception {\n        \r\n        \r\n        CountdownWatcher watcher = new CountdownWatcher();\n        TestableZooKeeper zk = new TestableZooKeeper(hostPort, CONNECTION_TIMEOUT, watcher);\n        if (!watcher.clientConnected.await(CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS)) {\n            fail(\"Unable to connect to server\");\n        }\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.debug(\"Got exception as expected\", e);\n        } finally {\n            zk.close();\n        }\n    }\n","date":"2019-10-10 20:37:45","endLine":87,"groupId":"10587","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAuth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f0/a85c2002db07e197cb1edc070928693c5a3846.src","preCode":"    public void testAuth() throws Exception {\n        \r\n        \r\n        CountdownWatcher watcher = new CountdownWatcher();\n        TestableZooKeeper zk = new TestableZooKeeper(hostPort, CONNECTION_TIMEOUT, watcher);\n        if (!watcher.clientConnected.await(CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS)) {\n            fail(\"Unable to connect to server\");\n        }\n        try {\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            fail(\"Should have gotten exception.\");\n        } catch (KeeperException e) {\n            \r\n            LOG.info(\"Got exception as expected: \" + e);\n        } finally {\n            zk.close();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/SaslAuthFailDesignatedClientTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"11c07921c15e2fb7692375327b53f26a583b77ca","commitMessage":"@@@ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org.  andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format\n","date":"2019-10-10 20:37:45","modifiedFileCount":"155","status":"M","submitter":"tison"}]
