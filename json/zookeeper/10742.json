[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getPort());\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getPort());\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n    }\n","date":"2018-10-05 20:25:43","endLine":174,"groupId":"252","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"dumpConf","params":"(PrintWriterpwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/2e/f8a5e3ed0e77520632b79ac23621a6c085add5.src","preCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getPort());\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getPort());\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getPort());\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getPort());\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n        pwriter.println(\"membership: \");\n        pwriter.print(new String(self.getQuorumVerifier().toString().getBytes()));\n    }\n","date":"2018-10-05 20:25:43","endLine":183,"groupId":"252","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"dumpConf","params":"(PrintWriterpwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f6/e4f1135b5353ea195c0a39da73627028518fad.src","preCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getPort());\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getPort());\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n        pwriter.println(\"membership: \");\n        pwriter.print(new String(self.getQuorumVerifier().toString().getBytes()));\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-11-29 21:49:13","codes":[{"authorDate":"2019-11-29 21:49:13","commitOrder":2,"curCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getAllPorts()\n                .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getAllPorts()\n                .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n    }\n","date":"2019-11-29 21:49:13","endLine":182,"groupId":"1824","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"dumpConf","params":"(PrintWriterpwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/b1/a72c4e9723c9bf7290cf7a044602e3f895c5c1.src","preCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getPort());\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getPort());\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2019-11-29 21:49:13","commitOrder":2,"curCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getAllPorts()\n                .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getAllPorts()\n                        .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n        pwriter.println(\"membership: \");\n        pwriter.print(new String(self.getQuorumVerifier().toString().getBytes()));\n    }\n","date":"2019-11-29 21:49:13","endLine":185,"groupId":"1824","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"dumpConf","params":"(PrintWriterpwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c6/cd93b4d18021b6380f42f7bb9fcdb62e09e38b.src","preCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getPort());\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getPort());\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n        pwriter.println(\"membership: \");\n        pwriter.print(new String(self.getQuorumVerifier().toString().getBytes()));\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"}],"commitId":"815c8f2130b8b43e11abe52b226707f707a93581","commitMessage":"@@@ZOOKEEPER-3188: Improve resilience to network\n\nThis PR is the rebase of the [previous pull request](https://github.com/apache/zookeeper/pull/730).  so all the kudos should go to the original authors...\n\nIn [ZOOKEEPER-3188](https://issues.apache.org/jira/browse/ZOOKEEPER-3188) we add ability to specify several addresses for quorum operations. Also added reconnection attempts if connection to leader lost.\n\nIn this PR I rebased the changes on the current master.  resolving some minor conflicts with:\n- [ZOOKEEPER-3296](https://issues.apache.org/jira/browse/ZOOKEEPER-3296): Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum\n- [ZOOKEEPER-3320](https://issues.apache.org/jira/browse/ZOOKEEPER-3320): Leader election port stop listen when hostname unresolvable for some time\n- [ZOOKEEPER-3385](https://issues.apache.org/jira/browse/ZOOKEEPER-3385): Add admin command to display leader\n- [ZOOKEEPER-3386](https://issues.apache.org/jira/browse/ZOOKEEPER-3386): Add admin command to display voting view\n- [ZOOKEEPER-3398](https://issues.apache.org/jira/browse/ZOOKEEPER-3398): Learner.connectToLeader() may take too long to time-out\n\nI still want to test the feature manually (e.g. using docker containers with multiple virtual networks / interfaces). The steps to the manual test could be recorded in the [google docs](https://docs.google.com/document/d/1iGVwxeHp57qogwfdodCh9b32P2_kOQaJZ2GDo7j36fI/edit?usp=sharing) as well.\n\nAlso I think we could add a few more unit tests where we are using multiple addresses. The current tests are using a single address only.\n\nAlso the Zookeeper documentation needs to be changed (e.g. by a follow-up Jira?) to promote the new feature and the new config format (possibly including also the admin command documentation in relation with [ZOOKEEPER-3386](https://issues.apache.org/jira/browse/ZOOKEEPER-3386) and [ZOOKEEPER-3461](https://issues.apache.org/jira/browse/ZOOKEEPER-3461))\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\nAuthor: Mate Szalay-Beko <mszalay@cloudera.com>\n\nReviewers: eolivelli@apache.org.  andor@apache.org\n\nCloses #1048 from symat/ZOOKEEPER-3188 and squashes the following commits:\n\n3c6fc52d7 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n356882d46 [Mate Szalay-Beko] ZOOKEEPER-3188: document new configuration format for using multiple addresses\n45b6c0fdb [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n4b6bcea48 [Mate Szalay-Beko] ZOOKEEPER-3188: MultiAddress unit tests for Quorum TLS and Kerberos/Digest authentication\n40bc44c23 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\nf875f5c67 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n31805e79b [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n0f95678ca [Mate Szalay-Beko] ZOOKEEPER-3188: skip unreachable addresses when Learner connects to Leader\ne232c55da [Mate Szalay-Beko] ZOOKEEPER-3188: fix flaky unit MultiAddress unit test\ne892d8d8e [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n6f2ab755f [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n2eedf2687 [Mate Szalay-Beko] ZOOKEEPER-3188: fix PR commits; handle case when Leader can not bind to port on startup\n483d2fc9c [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\na5d6bcb97 [Mate Szalay-Beko] ZOOKEEPER-3188: support for dynamic reconfig + add more unit tests\ned31d2ce9 [Mate Szalay-Beko] ZOOKEEPER-3188: better shutdown for executors (following PR comments)\n8713a5bbf [Mate Szalay-Beko] ZOOKEEPER-3188: add fixes for PR comments\n05eae83c0 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\ne823af4b1 [Mate Szalay-Beko] Merge remote-tracking branch 'origin/master' into ZOOKEEPER-3188\nde7bad2a6 [Mate Szalay-Beko] Merge remote-tracking branch 'origin/master' into ZOOKEEPER-3188\nda98a8da6 [Mate Szalay-Beko] ZOOKEEPER-3188: fix JDK-13 warning\n5bd1f4e2c [Mate Szalay-Beko] ZOOKEEPER-3188: supress spotbugs warning\n42a52a688 [Mate Szalay-Beko] ZOOKEEPER-3188: improve based on code review comments\n6c4220a0d [Mate Szalay-Beko] ZOOKEEPER-3188: fix SendWorker.asyncValidateIfSocketIsStillReachable\n5b22432c1 [Mate Szalay-Beko] ZOOKEEPER-3188: fix LeaderElection to work with multiple election addresses\n7bfbe7e5c [Mate Szalay-Beko] ZOOKEEPER-3188: Improve resilience to network\n","date":"2019-11-29 21:49:13","modifiedFileCount":"26","status":"M","submitter":"Mate Szalay-Beko"},{"authorTime":"2020-10-30 19:03:41","codes":[{"authorDate":"2019-11-29 21:49:13","commitOrder":3,"curCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getAllPorts()\n                .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getAllPorts()\n                .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n    }\n","date":"2019-11-29 21:49:13","endLine":182,"groupId":"10742","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"dumpConf","params":"(PrintWriterpwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/b1/a72c4e9723c9bf7290cf7a044602e3f895c5c1.src","preCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getAllPorts()\n                .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getAllPorts()\n                .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"N"},{"authorDate":"2020-10-30 19:03:41","commitOrder":3,"curCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getAllPorts()\n                .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getAllPorts()\n                        .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n        pwriter.println(\"membership: \");\n        pwriter.print(self.getQuorumVerifier().toString());\n    }\n","date":"2020-10-30 19:03:41","endLine":190,"groupId":"10742","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"dumpConf","params":"(PrintWriterpwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f2/7ce827421fbed4e5da32974480525ddcab3485.src","preCode":"    public void dumpConf(PrintWriter pwriter) {\n        super.dumpConf(pwriter);\n\n        pwriter.print(\"initLimit=\");\n        pwriter.println(self.getInitLimit());\n        pwriter.print(\"syncLimit=\");\n        pwriter.println(self.getSyncLimit());\n        pwriter.print(\"electionAlg=\");\n        pwriter.println(self.getElectionType());\n        pwriter.print(\"electionPort=\");\n        pwriter.println(self.getElectionAddress().getAllPorts()\n                .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"quorumPort=\");\n        pwriter.println(self.getQuorumAddress().getAllPorts()\n                        .stream().map(Objects::toString).collect(Collectors.joining(\"|\")));\n        pwriter.print(\"peerType=\");\n        pwriter.println(self.getLearnerType().ordinal());\n        pwriter.println(\"membership: \");\n        pwriter.print(new String(self.getQuorumVerifier().toString().getBytes()));\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"}],"commitId":"8654e7ed37717df79eb06f75de43eafe4f47b175","commitMessage":"@@@ZOOKEEPER-3342: Use StandardCharsets\n\n> Encodes this String into a sequence of bytes using the platform's default charset.  storing the result into a new byte array.  The behavior of this method when this string cannot be encoded in the default charset is unspecified.\n\nhttps://docs.oracle.com/javase/8/docs/api/java/lang/String.html#getBytes--\n\n1.  Since this is a distributed system.  it is always possible that different nodes have different default charsets defined.  I think it's most safe to specify it explicitly across all nodes for safety sake.  You could for example see a situation where an upgrade JVM uses a different default and during a rolling upgrade of the JVM.  different nodes now have a different default.\n2.  The default charset is usually \"ISO-8859-1\".  UTF-8 covers more of our international friends.\n3. Explicitly specifying the CharSet yields slight performance gains\n4. Explicitly specifying the CharSet removes the need for try/catch blocks of UnsupportedEncodingException\n\nhttps://blog.codecentric.de/en/2014/04/faster-cleaner-code-since-java-7/\n\nAuthor: David Mollitor <dmollitor@apache.org>\nAuthor: Beluga Behr <dam6923@gmail.com>\nAuthor: David Mollitor <dam6923@gmail.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Andor Molnar <anmolnar@apache.org>\n\nCloses #882 from belugabehr/ZOOKEEPER-3342\n","date":"2020-10-30 19:03:41","modifiedFileCount":"32","status":"M","submitter":"David Mollitor"}]
