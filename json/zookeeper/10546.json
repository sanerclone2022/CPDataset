[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testSuper() throws Exception {\n        ZooKeeper zk = createClient();\n        try {\n            zk.addAuthInfo(\"digest\", \"pat:pass\".getBytes());\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL,\n                    CreateMode.PERSISTENT);\n            zk.close();\n            \r\n            zk = createClient();\n            try {\n                zk.getData(\"/path1\", false, null);\n                Assert.fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"pat:pass2\".getBytes());\n            try {\n                zk.getData(\"/path1\", false, null);\n                Assert.fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"super:test2\".getBytes());\n            try {\n                zk.getData(\"/path1\", false, null);\n                Assert.fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"super:test\".getBytes());\n            zk.getData(\"/path1\", false, null);\n        } finally {\n            zk.close();\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":149,"groupId":"3594","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSuper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/60/e3453bbc705cbb2a37604165647a37a8198b53.src","preCode":"    public void testSuper() throws Exception {\n        ZooKeeper zk = createClient();\n        try {\n            zk.addAuthInfo(\"digest\", \"pat:pass\".getBytes());\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL,\n                    CreateMode.PERSISTENT);\n            zk.close();\n            \r\n            zk = createClient();\n            try {\n                zk.getData(\"/path1\", false, null);\n                Assert.fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"pat:pass2\".getBytes());\n            try {\n                zk.getData(\"/path1\", false, null);\n                Assert.fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"super:test2\".getBytes());\n            try {\n                zk.getData(\"/path1\", false, null);\n                Assert.fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"super:test\".getBytes());\n            zk.getData(\"/path1\", false, null);\n        } finally {\n            zk.close();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testSuperACL() throws Exception {\n    \t ZooKeeper zk = createClient();\n         try {\n             zk.addAuthInfo(\"digest\", \"pat:pass\".getBytes());\n             zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL,\n                     CreateMode.PERSISTENT);\n             zk.close();\n             \r\n             zk = createClient();\n             zk.addAuthInfo(\"digest\", \"super:test\".getBytes());\n             zk.getData(\"/path1\", false, null);\n             \n             zk.setACL(\"/path1\", Ids.READ_ACL_UNSAFE, -1);\n             zk.create(\"/path1/foo\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n           \n             \n             zk.setACL(\"/path1\", Ids.OPEN_ACL_UNSAFE, -1);\n        \t \n         } finally {\n             zk.close();\n         }\n    }\n","date":"2018-10-19 20:39:50","endLine":173,"groupId":"3595","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSuperACL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/60/e3453bbc705cbb2a37604165647a37a8198b53.src","preCode":"    public void testSuperACL() throws Exception {\n    \t ZooKeeper zk = createClient();\n         try {\n             zk.addAuthInfo(\"digest\", \"pat:pass\".getBytes());\n             zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL,\n                     CreateMode.PERSISTENT);\n             zk.close();\n             \r\n             zk = createClient();\n             zk.addAuthInfo(\"digest\", \"super:test\".getBytes());\n             zk.getData(\"/path1\", false, null);\n             \n             zk.setACL(\"/path1\", Ids.READ_ACL_UNSAFE, -1);\n             zk.create(\"/path1/foo\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n           \n             \n             zk.setACL(\"/path1\", Ids.OPEN_ACL_UNSAFE, -1);\n        \t \n         } finally {\n             zk.close();\n         }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testSuper() throws Exception {\n        ZooKeeper zk = createClient();\n        try {\n            zk.addAuthInfo(\"digest\", \"pat:pass\".getBytes());\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n            zk.close();\n            \r\n            zk = createClient();\n            try {\n                zk.getData(\"/path1\", false, null);\n                fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"pat:pass2\".getBytes());\n            try {\n                zk.getData(\"/path1\", false, null);\n                fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"super:test2\".getBytes());\n            try {\n                zk.getData(\"/path1\", false, null);\n                fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"super:test\".getBytes());\n            zk.getData(\"/path1\", false, null);\n        } finally {\n            zk.close();\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":139,"groupId":"10546","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSuper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c7/8f6202b3d5c3e9dda2ac1d119f532af79e964c.src","preCode":"    public void testSuper() throws Exception {\n        ZooKeeper zk = createClient();\n        try {\n            zk.addAuthInfo(\"digest\", \"pat:pass\".getBytes());\n            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL,\n                    CreateMode.PERSISTENT);\n            zk.close();\n            \r\n            zk = createClient();\n            try {\n                zk.getData(\"/path1\", false, null);\n                Assert.fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"pat:pass2\".getBytes());\n            try {\n                zk.getData(\"/path1\", false, null);\n                Assert.fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"super:test2\".getBytes());\n            try {\n                zk.getData(\"/path1\", false, null);\n                Assert.fail(\"auth verification\");\n            } catch (KeeperException.NoAuthException e) {\n                \r\n            }\n            zk.close();\n            \r\n            zk = createClient();\n            zk.addAuthInfo(\"digest\", \"super:test\".getBytes());\n            zk.getData(\"/path1\", false, null);\n        } finally {\n            zk.close();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2018-10-19 20:39:50","commitOrder":2,"curCode":"    public void testSuperACL() throws Exception {\n    \t ZooKeeper zk = createClient();\n         try {\n             zk.addAuthInfo(\"digest\", \"pat:pass\".getBytes());\n             zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL,\n                     CreateMode.PERSISTENT);\n             zk.close();\n             \r\n             zk = createClient();\n             zk.addAuthInfo(\"digest\", \"super:test\".getBytes());\n             zk.getData(\"/path1\", false, null);\n             \n             zk.setACL(\"/path1\", Ids.READ_ACL_UNSAFE, -1);\n             zk.create(\"/path1/foo\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n           \n             \n             zk.setACL(\"/path1\", Ids.OPEN_ACL_UNSAFE, -1);\n        \t \n         } finally {\n             zk.close();\n         }\n    }\n","date":"2018-10-19 20:39:50","endLine":173,"groupId":"10546","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSuperACL","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/60/e3453bbc705cbb2a37604165647a37a8198b53.src","preCode":"    public void testSuperACL() throws Exception {\n    \t ZooKeeper zk = createClient();\n         try {\n             zk.addAuthInfo(\"digest\", \"pat:pass\".getBytes());\n             zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL,\n                     CreateMode.PERSISTENT);\n             zk.close();\n             \r\n             zk = createClient();\n             zk.addAuthInfo(\"digest\", \"super:test\".getBytes());\n             zk.getData(\"/path1\", false, null);\n             \n             zk.setACL(\"/path1\", Ids.READ_ACL_UNSAFE, -1);\n             zk.create(\"/path1/foo\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n           \n             \n             zk.setACL(\"/path1\", Ids.OPEN_ACL_UNSAFE, -1);\n        \t \n         } finally {\n             zk.close();\n         }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/AuthTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"N"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
