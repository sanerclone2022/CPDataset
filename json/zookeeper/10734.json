[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public SaslServerCallbackHandler(Configuration configuration)\n            throws IOException {\n        String serverSection = System.getProperty(\n                ZooKeeperSaslServer.LOGIN_CONTEXT_NAME_KEY,\n                ZooKeeperSaslServer.DEFAULT_LOGIN_CONTEXT_NAME);\n        AppConfigurationEntry configurationEntries[] = configuration.getAppConfigurationEntry(serverSection);\n\n        if (configurationEntries == null) {\n            String errorMessage = \"Could not find a '\" + serverSection + \"' entry in this configuration: Server cannot start.\";\n            LOG.error(errorMessage);\n            throw new IOException(errorMessage);\n        }\n        credentials.clear();\n        for(AppConfigurationEntry entry: configurationEntries) {\n            Map<String,?> options = entry.getOptions();\n            \r\n            \r\n            for(Map.Entry<String, ?> pair : options.entrySet()) {\n                String key = pair.getKey();\n                if (key.startsWith(USER_PREFIX)) {\n                    String userName = key.substring(USER_PREFIX.length());\n                    credentials.put(userName,(String)pair.getValue());\n                }\n            }\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":74,"groupId":"1992","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"SaslServerCallbackHandler","params":"(Configurationconfiguration)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/9f/53a4d1c17d843ee3785bb4d520bd8bf55baf06.src","preCode":"    public SaslServerCallbackHandler(Configuration configuration)\n            throws IOException {\n        String serverSection = System.getProperty(\n                ZooKeeperSaslServer.LOGIN_CONTEXT_NAME_KEY,\n                ZooKeeperSaslServer.DEFAULT_LOGIN_CONTEXT_NAME);\n        AppConfigurationEntry configurationEntries[] = configuration.getAppConfigurationEntry(serverSection);\n\n        if (configurationEntries == null) {\n            String errorMessage = \"Could not find a '\" + serverSection + \"' entry in this configuration: Server cannot start.\";\n            LOG.error(errorMessage);\n            throw new IOException(errorMessage);\n        }\n        credentials.clear();\n        for(AppConfigurationEntry entry: configurationEntries) {\n            Map<String,?> options = entry.getOptions();\n            \r\n            \r\n            for(Map.Entry<String, ?> pair : options.entrySet()) {\n                String key = pair.getKey();\n                if (key.startsWith(USER_PREFIX)) {\n                    String userName = key.substring(USER_PREFIX.length());\n                    credentials.put(userName,(String)pair.getValue());\n                }\n            }\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public SaslQuorumServerCallbackHandler(Configuration configuration,\n            String serverSection, Set<String> authzHosts) throws IOException {\n        AppConfigurationEntry configurationEntries[] = configuration.getAppConfigurationEntry(serverSection);\n\n        if (configurationEntries == null) {\n            String errorMessage = \"Could not find a '\" + serverSection + \"' entry in this configuration: Server cannot start.\";\n            LOG.error(errorMessage);\n            throw new IOException(errorMessage);\n        }\n        credentials.clear();\n        for(AppConfigurationEntry entry: configurationEntries) {\n            Map<String,?> options = entry.getOptions();\n            \r\n            \r\n            for(Map.Entry<String, ?> pair : options.entrySet()) {\n                String key = pair.getKey();\n                if (key.startsWith(USER_PREFIX)) {\n                    String userName = key.substring(USER_PREFIX.length());\n                    credentials.put(userName,(String)pair.getValue());\n                }\n            }\n        }\n\n        \r\n        this.authzHosts = authzHosts;\n    }\n","date":"2018-10-05 20:25:43","endLine":77,"groupId":"1992","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"SaslQuorumServerCallbackHandler","params":"(Configurationconfiguration@StringserverSection@Set<String>authzHosts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/3e/71bb1774b0209ffc508c1da099d8dae708917b.src","preCode":"    public SaslQuorumServerCallbackHandler(Configuration configuration,\n            String serverSection, Set<String> authzHosts) throws IOException {\n        AppConfigurationEntry configurationEntries[] = configuration.getAppConfigurationEntry(serverSection);\n\n        if (configurationEntries == null) {\n            String errorMessage = \"Could not find a '\" + serverSection + \"' entry in this configuration: Server cannot start.\";\n            LOG.error(errorMessage);\n            throw new IOException(errorMessage);\n        }\n        credentials.clear();\n        for(AppConfigurationEntry entry: configurationEntries) {\n            Map<String,?> options = entry.getOptions();\n            \r\n            \r\n            for(Map.Entry<String, ?> pair : options.entrySet()) {\n                String key = pair.getKey();\n                if (key.startsWith(USER_PREFIX)) {\n                    String userName = key.substring(USER_PREFIX.length());\n                    credentials.put(userName,(String)pair.getValue());\n                }\n            }\n        }\n\n        \r\n        this.authzHosts = authzHosts;\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public SaslServerCallbackHandler(Configuration configuration) throws IOException {\n        String serverSection = System.getProperty(\n            ZooKeeperSaslServer.LOGIN_CONTEXT_NAME_KEY,\n            ZooKeeperSaslServer.DEFAULT_LOGIN_CONTEXT_NAME);\n\n        AppConfigurationEntry[] configurationEntries = configuration.getAppConfigurationEntry(serverSection);\n\n        if (configurationEntries == null) {\n            String errorMessage = \"Could not find a '\" + serverSection + \"' entry in this configuration: Server cannot start.\";\n            LOG.error(errorMessage);\n            throw new IOException(errorMessage);\n        }\n        credentials.clear();\n        for (AppConfigurationEntry entry : configurationEntries) {\n            Map<String, ?> options = entry.getOptions();\n            \r\n            \r\n            for (Map.Entry<String, ?> pair : options.entrySet()) {\n                String key = pair.getKey();\n                if (key.startsWith(USER_PREFIX)) {\n                    String userName = key.substring(USER_PREFIX.length());\n                    credentials.put(userName, (String) pair.getValue());\n                }\n            }\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":73,"groupId":"10734","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"SaslServerCallbackHandler","params":"(Configurationconfiguration)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/df/9ee206628b5b5c32331a044e9e964a80811070.src","preCode":"    public SaslServerCallbackHandler(Configuration configuration)\n            throws IOException {\n        String serverSection = System.getProperty(\n                ZooKeeperSaslServer.LOGIN_CONTEXT_NAME_KEY,\n                ZooKeeperSaslServer.DEFAULT_LOGIN_CONTEXT_NAME);\n        AppConfigurationEntry configurationEntries[] = configuration.getAppConfigurationEntry(serverSection);\n\n        if (configurationEntries == null) {\n            String errorMessage = \"Could not find a '\" + serverSection + \"' entry in this configuration: Server cannot start.\";\n            LOG.error(errorMessage);\n            throw new IOException(errorMessage);\n        }\n        credentials.clear();\n        for(AppConfigurationEntry entry: configurationEntries) {\n            Map<String,?> options = entry.getOptions();\n            \r\n            \r\n            for(Map.Entry<String, ?> pair : options.entrySet()) {\n                String key = pair.getKey();\n                if (key.startsWith(USER_PREFIX)) {\n                    String userName = key.substring(USER_PREFIX.length());\n                    credentials.put(userName,(String)pair.getValue());\n                }\n            }\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public SaslQuorumServerCallbackHandler(\n        Configuration configuration,\n        String serverSection,\n        Set<String> authzHosts) throws IOException {\n        AppConfigurationEntry[] configurationEntries = configuration.getAppConfigurationEntry(serverSection);\n\n        if (configurationEntries == null) {\n            String errorMessage = \"Could not find a '\" + serverSection + \"' entry in this configuration: Server cannot start.\";\n            LOG.error(errorMessage);\n            throw new IOException(errorMessage);\n        }\n        credentials.clear();\n        for (AppConfigurationEntry entry : configurationEntries) {\n            Map<String, ?> options = entry.getOptions();\n            \r\n            \r\n            for (Map.Entry<String, ?> pair : options.entrySet()) {\n                String key = pair.getKey();\n                if (key.startsWith(USER_PREFIX)) {\n                    String userName = key.substring(USER_PREFIX.length());\n                    credentials.put(userName, (String) pair.getValue());\n                }\n            }\n        }\n\n        \r\n        this.authzHosts = authzHosts;\n    }\n","date":"2019-08-17 23:13:15","endLine":79,"groupId":"10734","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"SaslQuorumServerCallbackHandler","params":"(Configurationconfiguration@StringserverSection@Set<String>authzHosts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/4b/711a6b5f76edceb4de4445b20b583139450bd6.src","preCode":"    public SaslQuorumServerCallbackHandler(Configuration configuration,\n            String serverSection, Set<String> authzHosts) throws IOException {\n        AppConfigurationEntry configurationEntries[] = configuration.getAppConfigurationEntry(serverSection);\n\n        if (configurationEntries == null) {\n            String errorMessage = \"Could not find a '\" + serverSection + \"' entry in this configuration: Server cannot start.\";\n            LOG.error(errorMessage);\n            throw new IOException(errorMessage);\n        }\n        credentials.clear();\n        for(AppConfigurationEntry entry: configurationEntries) {\n            Map<String,?> options = entry.getOptions();\n            \r\n            \r\n            for(Map.Entry<String, ?> pair : options.entrySet()) {\n                String key = pair.getKey();\n                if (key.startsWith(USER_PREFIX)) {\n                    String userName = key.substring(USER_PREFIX.length());\n                    credentials.put(userName,(String)pair.getValue());\n                }\n            }\n        }\n\n        \r\n        this.authzHosts = authzHosts;\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
