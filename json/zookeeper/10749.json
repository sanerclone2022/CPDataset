[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void processRequest(Request request) {\n        if (!finished) {\n            \r\n            \r\n            \r\n            Request upgradeRequest = null;\n            try {\n                upgradeRequest = zks.checkUpgradeSession(request);\n            } catch (KeeperException ke) {\n                if (request.getHdr() != null) {\n                    request.getHdr().setType(OpCode.error);\n                    request.setTxn(new ErrorTxn(ke.code().intValue()));\n                }\n                request.setException(ke);\n                LOG.info(\"Error creating upgrade request\",  ke);\n            } catch (IOException ie) {\n                LOG.error(\"Unexpected error in upgrade\", ie);\n            }\n            if (upgradeRequest != null) {\n                queuedRequests.add(upgradeRequest);\n            }\n            queuedRequests.add(request);\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":136,"groupId":"1763","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"processRequest","params":"(Requestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c6/23eba888ca6fa91eced97b662d7280ebadb919.src","preCode":"    public void processRequest(Request request) {\n        if (!finished) {\n            \r\n            \r\n            \r\n            Request upgradeRequest = null;\n            try {\n                upgradeRequest = zks.checkUpgradeSession(request);\n            } catch (KeeperException ke) {\n                if (request.getHdr() != null) {\n                    request.getHdr().setType(OpCode.error);\n                    request.setTxn(new ErrorTxn(ke.code().intValue()));\n                }\n                request.setException(ke);\n                LOG.info(\"Error creating upgrade request\",  ke);\n            } catch (IOException ie) {\n                LOG.error(\"Unexpected error in upgrade\", ie);\n            }\n            if (upgradeRequest != null) {\n                queuedRequests.add(upgradeRequest);\n            }\n            queuedRequests.add(request);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void processRequest(Request request) {\n        if (!finished) {\n            Request upgradeRequest = null;\n            try {\n                upgradeRequest = zks.checkUpgradeSession(request);\n            } catch (KeeperException ke) {\n                if (request.getHdr() != null) {\n                    request.getHdr().setType(OpCode.error);\n                    request.setTxn(new ErrorTxn(ke.code().intValue()));\n                }\n                request.setException(ke);\n                LOG.info(\"Error creating upgrade request\",  ke);\n            } catch (IOException ie) {\n                LOG.error(\"Unexpected error in upgrade\", ie);\n            }\n            if (upgradeRequest != null) {\n                queuedRequests.add(upgradeRequest);\n            }\n            queuedRequests.add(request);\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":145,"groupId":"1763","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"processRequest","params":"(Requestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/85/a5212e557768e3cdb44deead530f8485d0bb10.src","preCode":"    public void processRequest(Request request) {\n        if (!finished) {\n            Request upgradeRequest = null;\n            try {\n                upgradeRequest = zks.checkUpgradeSession(request);\n            } catch (KeeperException ke) {\n                if (request.getHdr() != null) {\n                    request.getHdr().setType(OpCode.error);\n                    request.setTxn(new ErrorTxn(ke.code().intValue()));\n                }\n                request.setException(ke);\n                LOG.info(\"Error creating upgrade request\",  ke);\n            } catch (IOException ie) {\n                LOG.error(\"Unexpected error in upgrade\", ie);\n            }\n            if (upgradeRequest != null) {\n                queuedRequests.add(upgradeRequest);\n            }\n            queuedRequests.add(request);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-12-09 10:16:58","commitOrder":2,"curCode":"    void processRequest(Request request, boolean checkForUpgrade) {\n        if (!finished) {\n            if (checkForUpgrade) {\n                \r\n                \r\n                \r\n                Request upgradeRequest = null;\n                try {\n                    upgradeRequest = zks.checkUpgradeSession(request);\n                } catch (KeeperException ke) {\n                    if (request.getHdr() != null) {\n                        request.getHdr().setType(OpCode.error);\n                        request.setTxn(new ErrorTxn(ke.code().intValue()));\n                    }\n                    request.setException(ke);\n                    LOG.info(\"Error creating upgrade request\", ke);\n                } catch (IOException ie) {\n                    LOG.error(\"Unexpected error in upgrade\", ie);\n                }\n                if (upgradeRequest != null) {\n                    queuedRequests.add(upgradeRequest);\n                }\n            }\n\n            queuedRequests.add(request);\n        }\n    }\n","date":"2018-12-09 10:16:58","endLine":143,"groupId":"1763","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"processRequest","params":"(Requestrequest@booleancheckForUpgrade)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/2f/345a87c8b879f19711d9186a7125e3d5740be1.src","preCode":"    public void processRequest(Request request) {\n        if (!finished) {\n            \r\n            \r\n            \r\n            Request upgradeRequest = null;\n            try {\n                upgradeRequest = zks.checkUpgradeSession(request);\n            } catch (KeeperException ke) {\n                if (request.getHdr() != null) {\n                    request.getHdr().setType(OpCode.error);\n                    request.setTxn(new ErrorTxn(ke.code().intValue()));\n                }\n                request.setException(ke);\n                LOG.info(\"Error creating upgrade request\",  ke);\n            } catch (IOException ie) {\n                LOG.error(\"Unexpected error in upgrade\", ie);\n            }\n            if (upgradeRequest != null) {\n                queuedRequests.add(upgradeRequest);\n            }\n            queuedRequests.add(request);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2018-10-05 20:25:43","commitOrder":2,"curCode":"    public void processRequest(Request request) {\n        if (!finished) {\n            Request upgradeRequest = null;\n            try {\n                upgradeRequest = zks.checkUpgradeSession(request);\n            } catch (KeeperException ke) {\n                if (request.getHdr() != null) {\n                    request.getHdr().setType(OpCode.error);\n                    request.setTxn(new ErrorTxn(ke.code().intValue()));\n                }\n                request.setException(ke);\n                LOG.info(\"Error creating upgrade request\",  ke);\n            } catch (IOException ie) {\n                LOG.error(\"Unexpected error in upgrade\", ie);\n            }\n            if (upgradeRequest != null) {\n                queuedRequests.add(upgradeRequest);\n            }\n            queuedRequests.add(request);\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":145,"groupId":"1763","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"processRequest","params":"(Requestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/85/a5212e557768e3cdb44deead530f8485d0bb10.src","preCode":"    public void processRequest(Request request) {\n        if (!finished) {\n            Request upgradeRequest = null;\n            try {\n                upgradeRequest = zks.checkUpgradeSession(request);\n            } catch (KeeperException ke) {\n                if (request.getHdr() != null) {\n                    request.getHdr().setType(OpCode.error);\n                    request.setTxn(new ErrorTxn(ke.code().intValue()));\n                }\n                request.setException(ke);\n                LOG.info(\"Error creating upgrade request\",  ke);\n            } catch (IOException ie) {\n                LOG.error(\"Unexpected error in upgrade\", ie);\n            }\n            if (upgradeRequest != null) {\n                queuedRequests.add(upgradeRequest);\n            }\n            queuedRequests.add(request);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"}],"commitId":"b2513c114931dc377bac5e1d39e2f81c6e8cf17e","commitMessage":"@@@ZOOKEEPER-3140: Allow Followers to host Observers\n\nCreates a new abstraction.  LearnerMaster.  to represent the portions of the Leader logic that are used in LearnerHandler. Leader implements LearnerMaster and a new class ObserverMaster implements LearnerMaster. Followers have the option of instantiating a ObserverMaster thread when they assume their role and so support Learner traffic.\n\nA new parameter 'observerMasterPort' is used to control which Follower instances host Observers.\n\nAuthor: Brian Nixon <nixon@fb.com>\n\nReviewers: fangmin@apache.org.  hanm@apache.org.  eolivelli@gmail.com\n\nCloses #628 from enixon/learner-master\n","date":"2018-12-09 10:16:58","modifiedFileCount":"21","status":"M","submitter":"Brian Nixon"},{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2019-10-10 20:37:45","commitOrder":3,"curCode":"    void processRequest(Request request, boolean checkForUpgrade) {\n        if (!finished) {\n            if (checkForUpgrade) {\n                \r\n                \r\n                \r\n                Request upgradeRequest = null;\n                try {\n                    upgradeRequest = zks.checkUpgradeSession(request);\n                } catch (KeeperException ke) {\n                    if (request.getHdr() != null) {\n                        request.getHdr().setType(OpCode.error);\n                        request.setTxn(new ErrorTxn(ke.code().intValue()));\n                    }\n                    request.setException(ke);\n                    LOG.warn(\"Error creating upgrade request\", ke);\n                } catch (IOException ie) {\n                    LOG.error(\"Unexpected error in upgrade\", ie);\n                }\n                if (upgradeRequest != null) {\n                    queuedRequests.add(upgradeRequest);\n                }\n            }\n\n            queuedRequests.add(request);\n        }\n    }\n","date":"2019-10-10 20:37:45","endLine":145,"groupId":"10749","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"processRequest","params":"(Requestrequest@booleancheckForUpgrade)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/88/144de360270bca71570bdcba31056806a0826a.src","preCode":"    void processRequest(Request request, boolean checkForUpgrade) {\n        if (!finished) {\n            if (checkForUpgrade) {\n                \r\n                \r\n                \r\n                Request upgradeRequest = null;\n                try {\n                    upgradeRequest = zks.checkUpgradeSession(request);\n                } catch (KeeperException ke) {\n                    if (request.getHdr() != null) {\n                        request.getHdr().setType(OpCode.error);\n                        request.setTxn(new ErrorTxn(ke.code().intValue()));\n                    }\n                    request.setException(ke);\n                    LOG.info(\"Error creating upgrade request\", ke);\n                } catch (IOException ie) {\n                    LOG.error(\"Unexpected error in upgrade\", ie);\n                }\n                if (upgradeRequest != null) {\n                    queuedRequests.add(upgradeRequest);\n                }\n            }\n\n            queuedRequests.add(request);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2018-10-05 20:25:43","commitOrder":3,"curCode":"    public void processRequest(Request request) {\n        if (!finished) {\n            Request upgradeRequest = null;\n            try {\n                upgradeRequest = zks.checkUpgradeSession(request);\n            } catch (KeeperException ke) {\n                if (request.getHdr() != null) {\n                    request.getHdr().setType(OpCode.error);\n                    request.setTxn(new ErrorTxn(ke.code().intValue()));\n                }\n                request.setException(ke);\n                LOG.info(\"Error creating upgrade request\",  ke);\n            } catch (IOException ie) {\n                LOG.error(\"Unexpected error in upgrade\", ie);\n            }\n            if (upgradeRequest != null) {\n                queuedRequests.add(upgradeRequest);\n            }\n            queuedRequests.add(request);\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":145,"groupId":"10749","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"processRequest","params":"(Requestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/85/a5212e557768e3cdb44deead530f8485d0bb10.src","preCode":"    public void processRequest(Request request) {\n        if (!finished) {\n            Request upgradeRequest = null;\n            try {\n                upgradeRequest = zks.checkUpgradeSession(request);\n            } catch (KeeperException ke) {\n                if (request.getHdr() != null) {\n                    request.getHdr().setType(OpCode.error);\n                    request.setTxn(new ErrorTxn(ke.code().intValue()));\n                }\n                request.setException(ke);\n                LOG.info(\"Error creating upgrade request\",  ke);\n            } catch (IOException ie) {\n                LOG.error(\"Unexpected error in upgrade\", ie);\n            }\n            if (upgradeRequest != null) {\n                queuedRequests.add(upgradeRequest);\n            }\n            queuedRequests.add(request);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"}],"commitId":"11c07921c15e2fb7692375327b53f26a583b77ca","commitMessage":"@@@ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org.  andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format\n","date":"2019-10-10 20:37:45","modifiedFileCount":"155","status":"M","submitter":"tison"}]
