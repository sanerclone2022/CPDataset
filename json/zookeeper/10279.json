[{"authorTime":"2019-08-24 01:43:02","codes":[{"authorDate":"2019-08-24 01:43:02","commitOrder":1,"curCode":"    public void testTrackReceived() throws InterruptedException {\n        long timestamp1 = System.currentTimeMillis();\n        MessageTracker messageTracker = new MessageTracker(BUFFERED_MESSAGE_SIZE);\n\n        \r\n        messageTracker.trackReceived(timestamp1);\n        Assert.assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n\n        Thread.sleep(2);\n\n        \r\n        long timestamp2 = System.currentTimeMillis();\n        messageTracker.trackReceived(timestamp2);\n        Assert.assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n    }\n","date":"2019-08-24 01:43:02","endLine":74,"groupId":"1840","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTrackReceived","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f1/cef10b4f04fd353b9b05f70c3dae80ed5bdf2b.src","preCode":"    public void testTrackReceived() throws InterruptedException {\n        long timestamp1 = System.currentTimeMillis();\n        MessageTracker messageTracker = new MessageTracker(BUFFERED_MESSAGE_SIZE);\n\n        \r\n        messageTracker.trackReceived(timestamp1);\n        Assert.assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n\n        Thread.sleep(2);\n\n        \r\n        long timestamp2 = System.currentTimeMillis();\n        messageTracker.trackReceived(timestamp2);\n        Assert.assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/util/MessageTrackerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2019-08-24 01:43:02","commitOrder":1,"curCode":"    public void testDumpToLog() {\n        long timestamp1 = System.currentTimeMillis();\n        MessageTracker messageTracker = new MessageTracker(BUFFERED_MESSAGE_SIZE);\n        String sid = \"127.0.0.1\";\n\n        \r\n        messageTracker.dumpToLog(sid);\n        Assert.assertNull(messageTracker.peekSent());\n        Assert.assertNull(messageTracker.peekReceived());\n\n        \r\n        messageTracker.trackSent(timestamp1);\n        Assert.assertEquals(messageTracker.peekSentTimestamp(), timestamp1);\n        Assert.assertNull(messageTracker.peekReceived());\n        messageTracker.dumpToLog(sid);\n        Assert.assertNull(messageTracker.peekSent());\n        Assert.assertNull(messageTracker.peekReceived());\n\n        \r\n        messageTracker.trackSent(timestamp1);\n        messageTracker.trackReceived(timestamp1);\n        Assert.assertEquals(messageTracker.peekSentTimestamp(), timestamp1);\n        Assert.assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n        messageTracker.dumpToLog(sid);\n        Assert.assertNull(messageTracker.peekSent());\n        Assert.assertNull(messageTracker.peekReceived());\n    }\n","date":"2019-08-24 01:43:02","endLine":128,"groupId":"1842","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDumpToLog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f1/cef10b4f04fd353b9b05f70c3dae80ed5bdf2b.src","preCode":"    public void testDumpToLog() {\n        long timestamp1 = System.currentTimeMillis();\n        MessageTracker messageTracker = new MessageTracker(BUFFERED_MESSAGE_SIZE);\n        String sid = \"127.0.0.1\";\n\n        \r\n        messageTracker.dumpToLog(sid);\n        Assert.assertNull(messageTracker.peekSent());\n        Assert.assertNull(messageTracker.peekReceived());\n\n        \r\n        messageTracker.trackSent(timestamp1);\n        Assert.assertEquals(messageTracker.peekSentTimestamp(), timestamp1);\n        Assert.assertNull(messageTracker.peekReceived());\n        messageTracker.dumpToLog(sid);\n        Assert.assertNull(messageTracker.peekSent());\n        Assert.assertNull(messageTracker.peekReceived());\n\n        \r\n        messageTracker.trackSent(timestamp1);\n        messageTracker.trackReceived(timestamp1);\n        Assert.assertEquals(messageTracker.peekSentTimestamp(), timestamp1);\n        Assert.assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n        messageTracker.dumpToLog(sid);\n        Assert.assertNull(messageTracker.peekSent());\n        Assert.assertNull(messageTracker.peekReceived());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/util/MessageTrackerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"b5817fbb12b88bc28be72f109c695ebf51bebf3b","commitMessage":"@@@ZOOKEEPER-3448: Introduce MessageTracker to assist debug leader and leaner connectivity issues.\n\nWe want to have better insight on the state of the world when learners lost connection with leader.  so we need capture more information when that happens. We capture more information through MessageTracker which will record the last few sent and received messages at various protocol stage.  and these information will be dumped to log files for further analysis.\n\nAuthor: Michael Han <lhan@twitter.com>\nAuthor: Michael Han <hanm@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Fangmin Lyu <fangmin@apache.org>\n\nCloses #1007 from hanm/twitter/2765eb0629d2f63f07d112270b582e8e931f734f\n","date":"2019-08-24 01:43:02","modifiedFileCount":"4","status":"B","submitter":"Michael Han"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":2,"curCode":"    public void testTrackReceived() throws InterruptedException {\n        long timestamp1 = System.currentTimeMillis();\n        MessageTracker messageTracker = new MessageTracker(BUFFERED_MESSAGE_SIZE);\n\n        \r\n        messageTracker.trackReceived(timestamp1);\n        assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n\n        Thread.sleep(2);\n\n        \r\n        long timestamp2 = System.currentTimeMillis();\n        messageTracker.trackReceived(timestamp2);\n        assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n    }\n","date":"2020-08-04 21:01:52","endLine":75,"groupId":"10279","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testTrackReceived","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d4/00cf993c990ec16e80fad5260532f3c9c0b821.src","preCode":"    public void testTrackReceived() throws InterruptedException {\n        long timestamp1 = System.currentTimeMillis();\n        MessageTracker messageTracker = new MessageTracker(BUFFERED_MESSAGE_SIZE);\n\n        \r\n        messageTracker.trackReceived(timestamp1);\n        Assert.assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n\n        Thread.sleep(2);\n\n        \r\n        long timestamp2 = System.currentTimeMillis();\n        messageTracker.trackReceived(timestamp2);\n        Assert.assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/util/MessageTrackerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":2,"curCode":"    public void testDumpToLog() {\n        long timestamp1 = System.currentTimeMillis();\n        MessageTracker messageTracker = new MessageTracker(BUFFERED_MESSAGE_SIZE);\n        String sid = \"127.0.0.1\";\n\n        \r\n        messageTracker.dumpToLog(sid);\n        assertNull(messageTracker.peekSent());\n        assertNull(messageTracker.peekReceived());\n\n        \r\n        messageTracker.trackSent(timestamp1);\n        assertEquals(messageTracker.peekSentTimestamp(), timestamp1);\n        assertNull(messageTracker.peekReceived());\n        messageTracker.dumpToLog(sid);\n        assertNull(messageTracker.peekSent());\n        assertNull(messageTracker.peekReceived());\n\n        \r\n        messageTracker.trackSent(timestamp1);\n        messageTracker.trackReceived(timestamp1);\n        assertEquals(messageTracker.peekSentTimestamp(), timestamp1);\n        assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n        messageTracker.dumpToLog(sid);\n        assertNull(messageTracker.peekSent());\n        assertNull(messageTracker.peekReceived());\n    }\n","date":"2020-08-04 21:01:52","endLine":129,"groupId":"10279","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testDumpToLog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d4/00cf993c990ec16e80fad5260532f3c9c0b821.src","preCode":"    public void testDumpToLog() {\n        long timestamp1 = System.currentTimeMillis();\n        MessageTracker messageTracker = new MessageTracker(BUFFERED_MESSAGE_SIZE);\n        String sid = \"127.0.0.1\";\n\n        \r\n        messageTracker.dumpToLog(sid);\n        Assert.assertNull(messageTracker.peekSent());\n        Assert.assertNull(messageTracker.peekReceived());\n\n        \r\n        messageTracker.trackSent(timestamp1);\n        Assert.assertEquals(messageTracker.peekSentTimestamp(), timestamp1);\n        Assert.assertNull(messageTracker.peekReceived());\n        messageTracker.dumpToLog(sid);\n        Assert.assertNull(messageTracker.peekSent());\n        Assert.assertNull(messageTracker.peekReceived());\n\n        \r\n        messageTracker.trackSent(timestamp1);\n        messageTracker.trackReceived(timestamp1);\n        Assert.assertEquals(messageTracker.peekSentTimestamp(), timestamp1);\n        Assert.assertEquals(messageTracker.peekReceivedTimestamp(), timestamp1);\n        messageTracker.dumpToLog(sid);\n        Assert.assertNull(messageTracker.peekSent());\n        Assert.assertNull(messageTracker.peekReceived());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/util/MessageTrackerTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
