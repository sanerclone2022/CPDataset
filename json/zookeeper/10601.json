[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testNodeCreated() throws Exception {\n        QuorumUtil qu = new QuorumUtil(1);\n        qu.startAll();\n\n        EventsWatcher watcher = new EventsWatcher();\n        ZooKeeper zk1 = createClient(qu, 1, watcher);\n        ZooKeeper zk2 = createClient(qu, 2);\n\n        String path = \"/test1-created\";\n\n        zk1.exists(path, watcher);\n        qu.shutdown(1);\n        zk2.create(path, new byte[2], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n        qu.start(1);\n        watcher.waitForConnected(TIMEOUT * 1000L);\n        watcher.assertEvent(TIMEOUT, EventType.NodeCreated);\n\n        qu.shutdownAll();\n    }\n","date":"2018-10-19 20:39:50","endLine":151,"groupId":"2324","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNodeCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/a7/604638173f4c4669d8d2efa74d5f318286c1da.src","preCode":"    public void testNodeCreated() throws Exception {\n        QuorumUtil qu = new QuorumUtil(1);\n        qu.startAll();\n\n        EventsWatcher watcher = new EventsWatcher();\n        ZooKeeper zk1 = createClient(qu, 1, watcher);\n        ZooKeeper zk2 = createClient(qu, 2);\n\n        String path = \"/test1-created\";\n\n        zk1.exists(path, watcher);\n        qu.shutdown(1);\n        zk2.create(path, new byte[2], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n        qu.start(1);\n        watcher.waitForConnected(TIMEOUT * 1000L);\n        watcher.assertEvent(TIMEOUT, EventType.NodeCreated);\n\n        qu.shutdownAll();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/WatchEventWhenAutoResetTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    public void testNodeChildrenChanged() throws Exception {\n        QuorumUtil qu = new QuorumUtil(1);\n        qu.startAll();\n\n        EventsWatcher watcher = new EventsWatcher();\n        ZooKeeper zk1 = createClient(qu, 1, watcher);\n        ZooKeeper zk2 = createClient(qu, 2);\n\n        String path = \"/test-children-changed\";\n\n        zk1.create(path, new byte[1], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n        zk1.getChildren(path, watcher);\n        qu.shutdown(1);\n        zk2.create(path + \"/children-1\", new byte[2],\n                ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        qu.start(1);\n        watcher.waitForConnected(TIMEOUT * 1000L);\n        watcher.assertEvent(TIMEOUT, EventType.NodeChildrenChanged);\n\n        qu.shutdownAll();\n    }\n","date":"2018-10-19 20:39:50","endLine":216,"groupId":"3654","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNodeChildrenChanged","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/a7/604638173f4c4669d8d2efa74d5f318286c1da.src","preCode":"    public void testNodeChildrenChanged() throws Exception {\n        QuorumUtil qu = new QuorumUtil(1);\n        qu.startAll();\n\n        EventsWatcher watcher = new EventsWatcher();\n        ZooKeeper zk1 = createClient(qu, 1, watcher);\n        ZooKeeper zk2 = createClient(qu, 2);\n\n        String path = \"/test-children-changed\";\n\n        zk1.create(path, new byte[1], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n        zk1.getChildren(path, watcher);\n        qu.shutdown(1);\n        zk2.create(path + \"/children-1\", new byte[2],\n                ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        qu.start(1);\n        watcher.waitForConnected(TIMEOUT * 1000L);\n        watcher.assertEvent(TIMEOUT, EventType.NodeChildrenChanged);\n\n        qu.shutdownAll();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/WatchEventWhenAutoResetTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2018-11-05 15:45:40","codes":[{"authorDate":"2018-11-05 15:45:40","commitOrder":2,"curCode":"    public void testNodeCreated() throws Exception {\n        String path = \"/test1-created\";\n\n        zk1.exists(path, watcher);\n        qu.shutdown(1);\n        zk2.create(path, new byte[2], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n        qu.start(1);\n        watcher.waitForConnected(TIMEOUT * 1000L);\n        watcher.assertEvent(TIMEOUT, EventType.NodeCreated);\n    }\n","date":"2018-11-05 15:45:40","endLine":152,"groupId":"10601","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNodeCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/33/e0f128c463ad63a0bddc1d805d26495bf06600.src","preCode":"    public void testNodeCreated() throws Exception {\n        QuorumUtil qu = new QuorumUtil(1);\n        qu.startAll();\n\n        EventsWatcher watcher = new EventsWatcher();\n        ZooKeeper zk1 = createClient(qu, 1, watcher);\n        ZooKeeper zk2 = createClient(qu, 2);\n\n        String path = \"/test1-created\";\n\n        zk1.exists(path, watcher);\n        qu.shutdown(1);\n        zk2.create(path, new byte[2], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n        qu.start(1);\n        watcher.waitForConnected(TIMEOUT * 1000L);\n        watcher.assertEvent(TIMEOUT, EventType.NodeCreated);\n\n        qu.shutdownAll();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/WatchEventWhenAutoResetTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"},{"authorDate":"2018-11-05 15:45:40","commitOrder":2,"curCode":"    public void testNodeChildrenChanged() throws Exception {\n        String path = \"/test-children-changed\";\n\n        zk1.create(path, new byte[1], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n        zk1.getChildren(path, watcher);\n        qu.shutdown(1);\n        zk2.create(path + \"/children-1\", new byte[2],\n                ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        qu.start(1);\n        watcher.waitForConnected(TIMEOUT * 1000L);\n        watcher.assertEvent(TIMEOUT, EventType.NodeChildrenChanged);\n    }\n","date":"2018-11-05 15:45:40","endLine":199,"groupId":"10601","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNodeChildrenChanged","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/33/e0f128c463ad63a0bddc1d805d26495bf06600.src","preCode":"    public void testNodeChildrenChanged() throws Exception {\n        QuorumUtil qu = new QuorumUtil(1);\n        qu.startAll();\n\n        EventsWatcher watcher = new EventsWatcher();\n        ZooKeeper zk1 = createClient(qu, 1, watcher);\n        ZooKeeper zk2 = createClient(qu, 2);\n\n        String path = \"/test-children-changed\";\n\n        zk1.create(path, new byte[1], ZooDefs.Ids.OPEN_ACL_UNSAFE,\n                CreateMode.PERSISTENT);\n        zk1.getChildren(path, watcher);\n        qu.shutdown(1);\n        zk2.create(path + \"/children-1\", new byte[2],\n                ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        qu.start(1);\n        watcher.waitForConnected(TIMEOUT * 1000L);\n        watcher.assertEvent(TIMEOUT, EventType.NodeChildrenChanged);\n\n        qu.shutdownAll();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/WatchEventWhenAutoResetTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"}],"commitId":"05d4d437d808f6cdf4c9dc5419a6e8d635c2ba5d","commitMessage":"@@@ZOOKEEPER-2807: Fix flaky test org.apache.zookeeper.test.WatchEventWhenAutoResetTest.testNodeDataChanged\n\nMark the test as ignored.\nPlease see https://issues.apache.org/jira/browse/ZOOKEEPER-3182 for more details\n\nAuthor: Andor Molnar <andor@apache.org>\n\nReviewers: Fangmin Lyu <fangmin@apache.org>\n\nCloses #682 from anmolnar/ZOOKEEPER-2807\n","date":"2018-11-05 15:45:40","modifiedFileCount":"1","status":"M","submitter":"Andor Molnar"}]
