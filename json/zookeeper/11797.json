[{"authorTime":"2019-11-09 00:30:25","codes":[{"authorDate":"2019-11-09 00:30:25","commitOrder":1,"curCode":"    private void removeWatches(\n        int opCode,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local) throws InterruptedException, KeeperException {\n        PathUtils.validatePath(path);\n        final String clientPath = path;\n        final String serverPath = prependChroot(clientPath);\n        WatchDeregistration wcb = new WatchDeregistration(clientPath, watcher, watcherType, local, watchManager);\n\n        RequestHeader h = new RequestHeader();\n        h.setType(opCode);\n        Record request = getRemoveWatchesRequest(opCode, watcherType, serverPath);\n\n        ReplyHeader r = cnxn.submitRequest(h, request, null, null, wcb);\n        if (r.getErr() != 0) {\n            throw KeeperException.create(KeeperException.Code.get(r.getErr()), clientPath);\n        }\n    }\n","date":"2019-11-09 00:30:25","endLine":3267,"groupId":"1277","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"removeWatches","params":"(intopCode@Stringpath@Watcherwatcher@WatcherTypewatcherType@booleanlocal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f6/f165deaf455a654311c75cce65b680d4971af8.src","preCode":"    private void removeWatches(\n        int opCode,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local) throws InterruptedException, KeeperException {\n        PathUtils.validatePath(path);\n        final String clientPath = path;\n        final String serverPath = prependChroot(clientPath);\n        WatchDeregistration wcb = new WatchDeregistration(clientPath, watcher, watcherType, local, watchManager);\n\n        RequestHeader h = new RequestHeader();\n        h.setType(opCode);\n        Record request = getRemoveWatchesRequest(opCode, watcherType, serverPath);\n\n        ReplyHeader r = cnxn.submitRequest(h, request, null, null, wcb);\n        if (r.getErr() != 0) {\n            throw KeeperException.create(KeeperException.Code.get(r.getErr()), clientPath);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":3248,"status":"B"},{"authorDate":"2019-11-09 00:30:25","commitOrder":1,"curCode":"    private void removeWatches(\n        int opCode,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local,\n        VoidCallback cb,\n        Object ctx) {\n        PathUtils.validatePath(path);\n        final String clientPath = path;\n        final String serverPath = prependChroot(clientPath);\n        WatchDeregistration wcb = new WatchDeregistration(clientPath, watcher, watcherType, local, watchManager);\n\n        RequestHeader h = new RequestHeader();\n        h.setType(opCode);\n        Record request = getRemoveWatchesRequest(opCode, watcherType, serverPath);\n\n        cnxn.queuePacket(h, new ReplyHeader(), request, null, cb, clientPath, serverPath, ctx, null, wcb);\n    }\n","date":"2019-11-09 00:30:25","endLine":3287,"groupId":"4497","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeWatches","params":"(intopCode@Stringpath@Watcherwatcher@WatcherTypewatcherType@booleanlocal@VoidCallbackcb@Objectctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f6/f165deaf455a654311c75cce65b680d4971af8.src","preCode":"    private void removeWatches(\n        int opCode,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local,\n        VoidCallback cb,\n        Object ctx) {\n        PathUtils.validatePath(path);\n        final String clientPath = path;\n        final String serverPath = prependChroot(clientPath);\n        WatchDeregistration wcb = new WatchDeregistration(clientPath, watcher, watcherType, local, watchManager);\n\n        RequestHeader h = new RequestHeader();\n        h.setType(opCode);\n        Record request = getRemoveWatchesRequest(opCode, watcherType, serverPath);\n\n        cnxn.queuePacket(h, new ReplyHeader(), request, null, cb, clientPath, serverPath, ctx, null, wcb);\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":3269,"status":"B"}],"commitId":"553639378d5cf86c2488afff4586e5e4cce38061","commitMessage":"@@@ZOOKEEPER-1416 - Persistent.  recursive watchers\n\n\n Background\n\nNote: this is a port of https://github.com/apache/zookeeper/pull/136\n\nImplementation for a persistent.  recursive watch addition for ZK. These watches are set via a new method.  addPersistentWatch() and are removed via the existing watcher removal methods. Persistent.  recursive watches have these characteristics: a) Once set.  they do not auto-remove when triggered; b) they trigger for all event types (child.  data.  etc.) on the node they are registered for and any child znode recursively; c) they are efficiently implemented by using the existing watch internals. A new class PathIterator walks up the path parent-by-parent when checking if a watcher applies.\n\n\n Implementation Details\n\n- A new enum manages the different \"modes\" for watchers: `WatcherMode`.\n- For traditional.  \"standard\" watchers.  the code path is almost exactly the same. There is very little overhead other than a bit of extra checks in `WatchManager`\n- Given how this is implemented it was difficult to add support when `WatchManagerOptimized` is used. I'm open to adding it for that version but it will take work. We should consider not supporting persistent/recursive watchers when WatchManagerOptimized is used. I notice that `WatchManagerOptimized` is not even mentioned in the docs.\n- The mode for a given watcher/path pair is held in a map inside of `WatcherModeManager`. The absence of an entry means Standard. This way.  there's no overhead for old.  standard watchers.\n- `PathParentIterator` is the \"meat\" of the implementation. Rather than set watchers on every ZNode implied by a recursive watcher. WatchManager passes any paths it processes through PathParentIterator which iterates up each parent znode looking for watchers.\n- The remainder of the changes are scaffolding to match how other watchers are used as well as Jute/API changes to set persistent/recursive watchers\n\n\n Testing\n\nThe tests were written years ago. I think they're comprehensive but reviewers should pay attention to anything that was missed. There is much ZooKeeper knowledge that's only in the heads of ZK committers.\n\n- `PersistentWatcherTest` - tests persistent.  non-recursive watchers\n- `PersistentRecursiveWatcherTest` - tests persistent.  recursive watchers\n- `PathParentIteratorTest`- exercises edges of PathParentIterator\n\nAuthor: randgalt <jordan@jordanzimmerman.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache. org>.  Norbert Kalmar <nkalmar@apache.org>.  Andor Moln?r <andor@apache.org>.  Justin Mao Ling <maoling199210191@sina.com>\n\nCloses #1106 from Randgalt/ZOOKEEPER-1416\n","date":"2019-11-09 00:30:25","modifiedFileCount":"14","status":"B","submitter":"randgalt"},{"authorTime":"2020-05-17 21:13:37","codes":[{"authorDate":"2020-05-17 21:13:37","commitOrder":2,"curCode":"    private void removeWatches(\n        int opCode,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local) throws InterruptedException, KeeperException {\n        PathUtils.validatePath(path);\n        final String clientPath = path;\n        final String serverPath = prependChroot(clientPath);\n        WatchDeregistration wcb = new WatchDeregistration(clientPath, watcher, watcherType, local, getWatchManager());\n\n        RequestHeader h = new RequestHeader();\n        h.setType(opCode);\n        Record request = getRemoveWatchesRequest(opCode, watcherType, serverPath);\n\n        ReplyHeader r = cnxn.submitRequest(h, request, null, null, wcb);\n        if (r.getErr() != 0) {\n            throw KeeperException.create(KeeperException.Code.get(r.getErr()), clientPath);\n        }\n    }\n","date":"2020-05-17 21:13:37","endLine":2895,"groupId":"11797","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"removeWatches","params":"(intopCode@Stringpath@Watcherwatcher@WatcherTypewatcherType@booleanlocal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/20/1cf20f203b8bc15ef513dd5b6ef15e68cd9d80.src","preCode":"    private void removeWatches(\n        int opCode,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local) throws InterruptedException, KeeperException {\n        PathUtils.validatePath(path);\n        final String clientPath = path;\n        final String serverPath = prependChroot(clientPath);\n        WatchDeregistration wcb = new WatchDeregistration(clientPath, watcher, watcherType, local, watchManager);\n\n        RequestHeader h = new RequestHeader();\n        h.setType(opCode);\n        Record request = getRemoveWatchesRequest(opCode, watcherType, serverPath);\n\n        ReplyHeader r = cnxn.submitRequest(h, request, null, null, wcb);\n        if (r.getErr() != 0) {\n            throw KeeperException.create(KeeperException.Code.get(r.getErr()), clientPath);\n        }\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":2876,"status":"M"},{"authorDate":"2020-05-17 21:13:37","commitOrder":2,"curCode":"    private void removeWatches(\n        int opCode,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local,\n        VoidCallback cb,\n        Object ctx) {\n        PathUtils.validatePath(path);\n        final String clientPath = path;\n        final String serverPath = prependChroot(clientPath);\n        WatchDeregistration wcb = new WatchDeregistration(clientPath, watcher, watcherType, local, getWatchManager());\n\n        RequestHeader h = new RequestHeader();\n        h.setType(opCode);\n        Record request = getRemoveWatchesRequest(opCode, watcherType, serverPath);\n\n        cnxn.queuePacket(h, new ReplyHeader(), request, null, cb, clientPath, serverPath, ctx, null, wcb);\n    }\n","date":"2020-05-17 21:13:37","endLine":2915,"groupId":"11797","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeWatches","params":"(intopCode@Stringpath@Watcherwatcher@WatcherTypewatcherType@booleanlocal@VoidCallbackcb@Objectctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/20/1cf20f203b8bc15ef513dd5b6ef15e68cd9d80.src","preCode":"    private void removeWatches(\n        int opCode,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local,\n        VoidCallback cb,\n        Object ctx) {\n        PathUtils.validatePath(path);\n        final String clientPath = path;\n        final String serverPath = prependChroot(clientPath);\n        WatchDeregistration wcb = new WatchDeregistration(clientPath, watcher, watcherType, local, watchManager);\n\n        RequestHeader h = new RequestHeader();\n        h.setType(opCode);\n        Record request = getRemoveWatchesRequest(opCode, watcherType, serverPath);\n\n        cnxn.queuePacket(h, new ReplyHeader(), request, null, cb, clientPath, serverPath, ctx, null, wcb);\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":2897,"status":"M"}],"commitId":"d99c9e8b701ebdbd3f0098d4d81696df97432262","commitMessage":"@@@ZOOKEEPER-837: Eliminate cycle dependency between ClientCnxn and ZooKeeper\n\n1. Extract ZKWatchManager to single file\n2. Move ZKWatchManager instance to ClientCnxn in order to eliminate cycle dependency\n3. let `ZooKeeper` syncs a copy of default watcher.  in order to reduce dependencies to `getWatchManager()`\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>.  Andor Molnar <andor@apache.org>\n\nCloses #1095 from TisonKun/ZOOKEEPER-837\n","date":"2020-05-17 21:13:37","modifiedFileCount":"8","status":"M","submitter":"tison"}]
