[{"authorTime":"2019-01-30 23:43:22","codes":[{"authorDate":"2019-01-30 23:43:22","commitOrder":1,"curCode":"    public void testReset() {\n        addDataPoints();\n        testCounterSet.reset();\n\n        Map<String, Object> values = testCounterSet.values();\n\n        Assert.assertEquals(\"There should be 10 values in the set\", 10, values.size());\n\n        Assert.assertEquals(\"avg_key1_test should =0\", 0D, values.get(\"avg_key1_test\"));\n        Assert.assertEquals(\"min_key1_test should =0\", 0L, values.get(\"min_key1_test\"));\n        Assert.assertEquals(\"max_key1_test should =0\", 0L, values.get(\"max_key1_test\"));\n        Assert.assertEquals(\"cnt_key1_test should =0\", 0L, values.get(\"cnt_key1_test\"));\n        Assert.assertEquals(\"sum_key1_test should =0\", 0L, values.get(\"sum_key1_test\"));\n\n        Assert.assertEquals(\"avg_key2_test should =0\", 0D, values.get(\"avg_key2_test\"));\n        Assert.assertEquals(\"min_key2_test should =0\", 0L, values.get(\"min_key2_test\"));\n        Assert.assertEquals(\"max_key2_test should =0\", 0L, values.get(\"max_key2_test\"));\n        Assert.assertEquals(\"cnt_key2_test should =0\", 0L, values.get(\"cnt_key2_test\"));\n        Assert.assertEquals(\"sum_key2_test should =0\", 0L, values.get(\"sum_key2_test\"));\n\n    }\n","date":"2019-01-30 23:43:22","endLine":65,"groupId":"3688","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/30/86981489a7b8232669e271af6ae3916c5dcb8e.src","preCode":"    public void testReset() {\n        addDataPoints();\n        testCounterSet.reset();\n\n        Map<String, Object> values = testCounterSet.values();\n\n        Assert.assertEquals(\"There should be 10 values in the set\", 10, values.size());\n\n        Assert.assertEquals(\"avg_key1_test should =0\", 0D, values.get(\"avg_key1_test\"));\n        Assert.assertEquals(\"min_key1_test should =0\", 0L, values.get(\"min_key1_test\"));\n        Assert.assertEquals(\"max_key1_test should =0\", 0L, values.get(\"max_key1_test\"));\n        Assert.assertEquals(\"cnt_key1_test should =0\", 0L, values.get(\"cnt_key1_test\"));\n        Assert.assertEquals(\"sum_key1_test should =0\", 0L, values.get(\"sum_key1_test\"));\n\n        Assert.assertEquals(\"avg_key2_test should =0\", 0D, values.get(\"avg_key2_test\"));\n        Assert.assertEquals(\"min_key2_test should =0\", 0L, values.get(\"min_key2_test\"));\n        Assert.assertEquals(\"max_key2_test should =0\", 0L, values.get(\"max_key2_test\"));\n        Assert.assertEquals(\"cnt_key2_test should =0\", 0L, values.get(\"cnt_key2_test\"));\n        Assert.assertEquals(\"sum_key2_test should =0\", 0L, values.get(\"sum_key2_test\"));\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/metric/AvgMinMaxCounterSetTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2019-01-30 23:43:22","commitOrder":1,"curCode":"    public void testReset() {\n        addDataPoints();\n        testCounter.reset();\n\n        Map<String, Object> values = testCounter.values();\n\n        Assert.assertEquals(\"There should be 9 values in the set\", 9, values.size());\n\n        Assert.assertEquals(\"should avg=0\", 0D, values.get(\"avg_test\"));\n        Assert.assertEquals(\"should have min=0\", 0L, values.get(\"min_test\"));\n        Assert.assertEquals(\"should have max=0\", 0L, values.get(\"max_test\"));\n        Assert.assertEquals(\"should have cnt=0\", 0L, values.get(\"cnt_test\"));\n        Assert.assertEquals(\"should have sum=0\", 0L, values.get(\"sum_test\"));\n        Assert.assertEquals(\"should have p50=0\", 0L, values.get(\"p50_test\"));\n        Assert.assertEquals(\"should have p95=0\", 0L, values.get(\"p95_test\"));\n        Assert.assertEquals(\"should have p99=0\", 0L, values.get(\"p99_test\"));\n        Assert.assertEquals(\"should have p999=0\", 0L, values.get(\"p999_test\"));\n    }\n","date":"2019-01-30 23:43:22","endLine":61,"groupId":"3688","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f8/b16e462a9efd93f78ea87bbc9bb06c8ea40e1f.src","preCode":"    public void testReset() {\n        addDataPoints();\n        testCounter.reset();\n\n        Map<String, Object> values = testCounter.values();\n\n        Assert.assertEquals(\"There should be 9 values in the set\", 9, values.size());\n\n        Assert.assertEquals(\"should avg=0\", 0D, values.get(\"avg_test\"));\n        Assert.assertEquals(\"should have min=0\", 0L, values.get(\"min_test\"));\n        Assert.assertEquals(\"should have max=0\", 0L, values.get(\"max_test\"));\n        Assert.assertEquals(\"should have cnt=0\", 0L, values.get(\"cnt_test\"));\n        Assert.assertEquals(\"should have sum=0\", 0L, values.get(\"sum_test\"));\n        Assert.assertEquals(\"should have p50=0\", 0L, values.get(\"p50_test\"));\n        Assert.assertEquals(\"should have p95=0\", 0L, values.get(\"p95_test\"));\n        Assert.assertEquals(\"should have p99=0\", 0L, values.get(\"p99_test\"));\n        Assert.assertEquals(\"should have p999=0\", 0L, values.get(\"p999_test\"));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounterTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"}],"commitId":"3302031ee6040fbcbb8f0c54eb37e5e161c7afd2","commitMessage":"@@@ZOOKEEPER-3251: Add new server metric types: percentile counter and c?\n\n?ounter set\n\nAuthor: Jie Huang <jiehuang@fb.com>\n\nReviewers: fangmin@apache.org.  andor@apache.org\n\nCloses #781 from jhuan31/ZOOKEEPER-3251 and squashes the following commits:\n\nc3f4f7f40 [Jie Huang] Make new unit test classes extend ZKTestCase\n50a631f54 [Jie Huang] Add Apache license header\ne9b7c9500 [Jie Huang] ZOOKEEPER-3251: Add new server metric types: percentile counter and counter set\n","date":"2019-01-30 23:43:22","modifiedFileCount":"4","status":"B","submitter":"Jie Huang"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testReset() {\n        addDataPoints();\n        testCounterSet.reset();\n\n        Map<String, Object> values = testCounterSet.values();\n\n        assertEquals(\"There should be 10 values in the set\", 10, values.size());\n\n        assertEquals(\"avg_key1_test should =0\", 0D, values.get(\"avg_key1_test\"));\n        assertEquals(\"min_key1_test should =0\", 0L, values.get(\"min_key1_test\"));\n        assertEquals(\"max_key1_test should =0\", 0L, values.get(\"max_key1_test\"));\n        assertEquals(\"cnt_key1_test should =0\", 0L, values.get(\"cnt_key1_test\"));\n        assertEquals(\"sum_key1_test should =0\", 0L, values.get(\"sum_key1_test\"));\n\n        assertEquals(\"avg_key2_test should =0\", 0D, values.get(\"avg_key2_test\"));\n        assertEquals(\"min_key2_test should =0\", 0L, values.get(\"min_key2_test\"));\n        assertEquals(\"max_key2_test should =0\", 0L, values.get(\"max_key2_test\"));\n        assertEquals(\"cnt_key2_test should =0\", 0L, values.get(\"cnt_key2_test\"));\n        assertEquals(\"sum_key2_test should =0\", 0L, values.get(\"sum_key2_test\"));\n\n    }\n","date":"2019-08-17 23:13:15","endLine":66,"groupId":"224","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/50/e3788ccb95281ae46743d5105ea5dab79e5ab4.src","preCode":"    public void testReset() {\n        addDataPoints();\n        testCounterSet.reset();\n\n        Map<String, Object> values = testCounterSet.values();\n\n        Assert.assertEquals(\"There should be 10 values in the set\", 10, values.size());\n\n        Assert.assertEquals(\"avg_key1_test should =0\", 0D, values.get(\"avg_key1_test\"));\n        Assert.assertEquals(\"min_key1_test should =0\", 0L, values.get(\"min_key1_test\"));\n        Assert.assertEquals(\"max_key1_test should =0\", 0L, values.get(\"max_key1_test\"));\n        Assert.assertEquals(\"cnt_key1_test should =0\", 0L, values.get(\"cnt_key1_test\"));\n        Assert.assertEquals(\"sum_key1_test should =0\", 0L, values.get(\"sum_key1_test\"));\n\n        Assert.assertEquals(\"avg_key2_test should =0\", 0D, values.get(\"avg_key2_test\"));\n        Assert.assertEquals(\"min_key2_test should =0\", 0L, values.get(\"min_key2_test\"));\n        Assert.assertEquals(\"max_key2_test should =0\", 0L, values.get(\"max_key2_test\"));\n        Assert.assertEquals(\"cnt_key2_test should =0\", 0L, values.get(\"cnt_key2_test\"));\n        Assert.assertEquals(\"sum_key2_test should =0\", 0L, values.get(\"sum_key2_test\"));\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/metric/AvgMinMaxCounterSetTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testReset() {\n        addDataPoints();\n        testCounter.reset();\n\n        Map<String, Object> values = testCounter.values();\n\n        assertEquals(\"There should be 9 values in the set\", 9, values.size());\n\n        assertEquals(\"should avg=0\", 0D, values.get(\"avg_test\"));\n        assertEquals(\"should have min=0\", 0L, values.get(\"min_test\"));\n        assertEquals(\"should have max=0\", 0L, values.get(\"max_test\"));\n        assertEquals(\"should have cnt=0\", 0L, values.get(\"cnt_test\"));\n        assertEquals(\"should have sum=0\", 0L, values.get(\"sum_test\"));\n        assertEquals(\"should have p50=0\", 0L, values.get(\"p50_test\"));\n        assertEquals(\"should have p95=0\", 0L, values.get(\"p95_test\"));\n        assertEquals(\"should have p99=0\", 0L, values.get(\"p99_test\"));\n        assertEquals(\"should have p999=0\", 0L, values.get(\"p999_test\"));\n    }\n","date":"2019-08-17 23:13:15","endLine":60,"groupId":"224","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/ec/fdbbcfb5b2d80be4c35a0e47186082b72cf807.src","preCode":"    public void testReset() {\n        addDataPoints();\n        testCounter.reset();\n\n        Map<String, Object> values = testCounter.values();\n\n        Assert.assertEquals(\"There should be 9 values in the set\", 9, values.size());\n\n        Assert.assertEquals(\"should avg=0\", 0D, values.get(\"avg_test\"));\n        Assert.assertEquals(\"should have min=0\", 0L, values.get(\"min_test\"));\n        Assert.assertEquals(\"should have max=0\", 0L, values.get(\"max_test\"));\n        Assert.assertEquals(\"should have cnt=0\", 0L, values.get(\"cnt_test\"));\n        Assert.assertEquals(\"should have sum=0\", 0L, values.get(\"sum_test\"));\n        Assert.assertEquals(\"should have p50=0\", 0L, values.get(\"p50_test\"));\n        Assert.assertEquals(\"should have p95=0\", 0L, values.get(\"p95_test\"));\n        Assert.assertEquals(\"should have p99=0\", 0L, values.get(\"p99_test\"));\n        Assert.assertEquals(\"should have p999=0\", 0L, values.get(\"p999_test\"));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounterTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testReset() {\n        addDataPoints();\n        testCounterSet.reset();\n\n        Map<String, Object> values = testCounterSet.values();\n\n        assertEquals(10, values.size(), \"There should be 10 values in the set\");\n\n        assertEquals(0D, values.get(\"avg_key1_test\"), \"avg_key1_test should =0\");\n        assertEquals(0L, values.get(\"min_key1_test\"), \"min_key1_test should =0\");\n        assertEquals(0L, values.get(\"max_key1_test\"), \"max_key1_test should =0\");\n        assertEquals(0L, values.get(\"cnt_key1_test\"), \"cnt_key1_test should =0\");\n        assertEquals(0L, values.get(\"sum_key1_test\"), \"sum_key1_test should =0\");\n\n        assertEquals(0D, values.get(\"avg_key2_test\"), \"avg_key2_test should =0\");\n        assertEquals(0L, values.get(\"min_key2_test\"), \"min_key2_test should =0\");\n        assertEquals(0L, values.get(\"max_key2_test\"), \"max_key2_test should =0\");\n        assertEquals(0L, values.get(\"cnt_key2_test\"), \"cnt_key2_test should =0\");\n        assertEquals(0L, values.get(\"sum_key2_test\"), \"sum_key2_test should =0\");\n\n    }\n","date":"2020-08-04 21:01:52","endLine":66,"groupId":"1075","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testReset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/72/01ca9c20dd1cb7e61fd9f701b977c3e7e356e1.src","preCode":"    public void testReset() {\n        addDataPoints();\n        testCounterSet.reset();\n\n        Map<String, Object> values = testCounterSet.values();\n\n        assertEquals(\"There should be 10 values in the set\", 10, values.size());\n\n        assertEquals(\"avg_key1_test should =0\", 0D, values.get(\"avg_key1_test\"));\n        assertEquals(\"min_key1_test should =0\", 0L, values.get(\"min_key1_test\"));\n        assertEquals(\"max_key1_test should =0\", 0L, values.get(\"max_key1_test\"));\n        assertEquals(\"cnt_key1_test should =0\", 0L, values.get(\"cnt_key1_test\"));\n        assertEquals(\"sum_key1_test should =0\", 0L, values.get(\"sum_key1_test\"));\n\n        assertEquals(\"avg_key2_test should =0\", 0D, values.get(\"avg_key2_test\"));\n        assertEquals(\"min_key2_test should =0\", 0L, values.get(\"min_key2_test\"));\n        assertEquals(\"max_key2_test should =0\", 0L, values.get(\"max_key2_test\"));\n        assertEquals(\"cnt_key2_test should =0\", 0L, values.get(\"cnt_key2_test\"));\n        assertEquals(\"sum_key2_test should =0\", 0L, values.get(\"sum_key2_test\"));\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/metric/AvgMinMaxCounterSetTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testReset() {\n        addDataPoints();\n        testCounter.reset();\n\n        Map<String, Object> values = testCounter.values();\n\n        assertEquals(9, values.size(), \"There should be 9 values in the set\");\n\n        assertEquals(0D, values.get(\"avg_test\"), \"should avg=0\");\n        assertEquals(0L, values.get(\"min_test\"), \"should have min=0\");\n        assertEquals(0L, values.get(\"max_test\"), \"should have max=0\");\n        assertEquals(0L, values.get(\"cnt_test\"), \"should have cnt=0\");\n        assertEquals(0L, values.get(\"sum_test\"), \"should have sum=0\");\n        assertEquals(0L, values.get(\"p50_test\"), \"should have p50=0\");\n        assertEquals(0L, values.get(\"p95_test\"), \"should have p95=0\");\n        assertEquals(0L, values.get(\"p99_test\"), \"should have p99=0\");\n        assertEquals(0L, values.get(\"p999_test\"), \"should have p999=0\");\n    }\n","date":"2020-08-04 21:01:52","endLine":60,"groupId":"1075","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testReset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/4b/482c97ac7ade8f3f62dc1ae1c0c3f0fe40b550.src","preCode":"    public void testReset() {\n        addDataPoints();\n        testCounter.reset();\n\n        Map<String, Object> values = testCounter.values();\n\n        assertEquals(\"There should be 9 values in the set\", 9, values.size());\n\n        assertEquals(\"should avg=0\", 0D, values.get(\"avg_test\"));\n        assertEquals(\"should have min=0\", 0L, values.get(\"min_test\"));\n        assertEquals(\"should have max=0\", 0L, values.get(\"max_test\"));\n        assertEquals(\"should have cnt=0\", 0L, values.get(\"cnt_test\"));\n        assertEquals(\"should have sum=0\", 0L, values.get(\"sum_test\"));\n        assertEquals(\"should have p50=0\", 0L, values.get(\"p50_test\"));\n        assertEquals(\"should have p95=0\", 0L, values.get(\"p95_test\"));\n        assertEquals(\"should have p99=0\", 0L, values.get(\"p99_test\"));\n        assertEquals(\"should have p999=0\", 0L, values.get(\"p999_test\"));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounterTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
