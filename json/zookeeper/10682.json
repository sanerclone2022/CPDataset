[{"authorTime":"2018-10-19 20:39:50","codes":[{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    private void removeWatches(ZooKeeper zk, String path, Watcher watcher,\n            WatcherType watcherType, boolean local, KeeperException.Code rc)\n            throws InterruptedException, KeeperException {\n        LOG.info(\n                \"Sending removeWatches req using zk {} path: {} type: {} watcher: {} \",\n                new Object[] { zk, path, watcherType, watcher });\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeWatches(path, watcher, watcherType, local, c1, null);\n            Assert.assertTrue(\"Didn't succeeds removeWatch operation\",\n                    c1.matches());\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException\n                        .create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeWatches(path, watcher, watcherType, local);\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":107,"groupId":"976","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"removeWatches","params":"(ZooKeeperzk@Stringpath@Watcherwatcher@WatcherTypewatcherType@booleanlocal@KeeperException.Coderc)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/93/1bb6f15f96645eba618ec79c46815421dba160.src","preCode":"    private void removeWatches(ZooKeeper zk, String path, Watcher watcher,\n            WatcherType watcherType, boolean local, KeeperException.Code rc)\n            throws InterruptedException, KeeperException {\n        LOG.info(\n                \"Sending removeWatches req using zk {} path: {} type: {} watcher: {} \",\n                new Object[] { zk, path, watcherType, watcher });\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeWatches(path, watcher, watcherType, local, c1, null);\n            Assert.assertTrue(\"Didn't succeeds removeWatch operation\",\n                    c1.matches());\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException\n                        .create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeWatches(path, watcher, watcherType, local);\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/RemoveWatchesTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"},{"authorDate":"2018-10-19 20:39:50","commitOrder":1,"curCode":"    private void removeAllWatches(ZooKeeper zk, String path,\n            WatcherType watcherType, boolean local, KeeperException.Code rc)\n            throws InterruptedException, KeeperException {\n        LOG.info(\"Sending removeWatches req using zk {} path: {} type: {} \",\n                new Object[] { zk, path, watcherType });\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeAllWatches(path, watcherType, local, c1, null);\n            Assert.assertTrue(\"Didn't succeeds removeWatch operation\",\n                    c1.matches());\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException\n                        .create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeAllWatches(path, watcherType, local);\n        }\n    }\n","date":"2018-10-19 20:39:50","endLine":127,"groupId":"976","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAllWatches","params":"(ZooKeeperzk@Stringpath@WatcherTypewatcherType@booleanlocal@KeeperException.Coderc)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/93/1bb6f15f96645eba618ec79c46815421dba160.src","preCode":"    private void removeAllWatches(ZooKeeper zk, String path,\n            WatcherType watcherType, boolean local, KeeperException.Code rc)\n            throws InterruptedException, KeeperException {\n        LOG.info(\"Sending removeWatches req using zk {} path: {} type: {} \",\n                new Object[] { zk, path, watcherType });\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeAllWatches(path, watcherType, local, c1, null);\n            Assert.assertTrue(\"Didn't succeeds removeWatch operation\",\n                    c1.matches());\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException\n                        .create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeAllWatches(path, watcherType, local);\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/RemoveWatchesTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"}],"commitId":"cb9f303bda9137d1aebe8eff3eab85c8a59f3cdd","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - zookeeper-server\n\nSeparating the java code is not feasible. Moving common and client back to server.\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #672 from nkalmar/ZOOKEEPER-3032r\n","date":"2018-10-19 20:39:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    private void removeWatches(\n        ZooKeeper zk,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local,\n        KeeperException.Code rc) throws InterruptedException, KeeperException {\n        LOG.info(\"Sending removeWatches req using zk {} path: {} type: {} watcher: {} \", zk, path, watcherType, watcher);\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeWatches(path, watcher, watcherType, local, c1, null);\n            assertTrue(\"Didn't succeeds removeWatch operation\", c1.matches());\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException.create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeWatches(path, watcher, watcherType, local);\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":113,"groupId":"1383","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"removeWatches","params":"(ZooKeeperzk@Stringpath@Watcherwatcher@WatcherTypewatcherType@booleanlocal@KeeperException.Coderc)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/2a/cb9693823ac0dfe4d75deee1fbd084b90c9aa1.src","preCode":"    private void removeWatches(ZooKeeper zk, String path, Watcher watcher,\n            WatcherType watcherType, boolean local, KeeperException.Code rc)\n            throws InterruptedException, KeeperException {\n        LOG.info(\n                \"Sending removeWatches req using zk {} path: {} type: {} watcher: {} \",\n                new Object[] { zk, path, watcherType, watcher });\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeWatches(path, watcher, watcherType, local, c1, null);\n            Assert.assertTrue(\"Didn't succeeds removeWatch operation\",\n                    c1.matches());\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException\n                        .create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeWatches(path, watcher, watcherType, local);\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/RemoveWatchesTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    private void removeAllWatches(\n        ZooKeeper zk,\n        String path,\n        WatcherType watcherType,\n        boolean local,\n        KeeperException.Code rc) throws InterruptedException, KeeperException {\n        LOG.info(\"Sending removeWatches req using zk {} path: {} type: {} \", zk, path, watcherType);\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeAllWatches(path, watcherType, local, c1, null);\n            assertTrue(\"Didn't succeeds removeWatch operation\", c1.matches());\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException.create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeAllWatches(path, watcherType, local);\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":133,"groupId":"1384","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAllWatches","params":"(ZooKeeperzk@Stringpath@WatcherTypewatcherType@booleanlocal@KeeperException.Coderc)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/2a/cb9693823ac0dfe4d75deee1fbd084b90c9aa1.src","preCode":"    private void removeAllWatches(ZooKeeper zk, String path,\n            WatcherType watcherType, boolean local, KeeperException.Code rc)\n            throws InterruptedException, KeeperException {\n        LOG.info(\"Sending removeWatches req using zk {} path: {} type: {} \",\n                new Object[] { zk, path, watcherType });\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeAllWatches(path, watcherType, local, c1, null);\n            Assert.assertTrue(\"Didn't succeeds removeWatch operation\",\n                    c1.matches());\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException\n                        .create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeAllWatches(path, watcherType, local);\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/RemoveWatchesTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    private void removeWatches(\n        ZooKeeper zk,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local,\n        KeeperException.Code rc,\n        boolean useAsync) throws InterruptedException, KeeperException {\n        LOG.info(\"Sending removeWatches req using zk {} path: {} type: {} watcher: {} \", zk, path, watcherType, watcher);\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeWatches(path, watcher, watcherType, local, c1, null);\n            assertTrue(c1.matches(), \"Didn't succeeds removeWatch operation\");\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException.create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeWatches(path, watcher, watcherType, local);\n        }\n    }\n","date":"2020-08-04 21:01:52","endLine":104,"groupId":"10682","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"removeWatches","params":"(ZooKeeperzk@Stringpath@Watcherwatcher@WatcherTypewatcherType@booleanlocal@KeeperException.Coderc@booleanuseAsync)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/b4/45e861cf86bee129f54a56cbed9cc2e90901ca.src","preCode":"    private void removeWatches(\n        ZooKeeper zk,\n        String path,\n        Watcher watcher,\n        WatcherType watcherType,\n        boolean local,\n        KeeperException.Code rc) throws InterruptedException, KeeperException {\n        LOG.info(\"Sending removeWatches req using zk {} path: {} type: {} watcher: {} \", zk, path, watcherType, watcher);\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeWatches(path, watcher, watcherType, local, c1, null);\n            assertTrue(\"Didn't succeeds removeWatch operation\", c1.matches());\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException.create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeWatches(path, watcher, watcherType, local);\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/RemoveWatchesTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    private void removeAllWatches(\n        ZooKeeper zk,\n        String path,\n        WatcherType watcherType,\n        boolean local,\n        KeeperException.Code rc,\n        boolean useAsync) throws InterruptedException, KeeperException {\n        LOG.info(\"Sending removeWatches req using zk {} path: {} type: {} \", zk, path, watcherType);\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeAllWatches(path, watcherType, local, c1, null);\n            assertTrue(c1.matches(), \"Didn't succeeds removeWatch operation\");\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException.create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeAllWatches(path, watcherType, local);\n        }\n    }\n","date":"2020-08-04 21:01:52","endLine":125,"groupId":"10682","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"removeAllWatches","params":"(ZooKeeperzk@Stringpath@WatcherTypewatcherType@booleanlocal@KeeperException.Coderc@booleanuseAsync)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/b4/45e861cf86bee129f54a56cbed9cc2e90901ca.src","preCode":"    private void removeAllWatches(\n        ZooKeeper zk,\n        String path,\n        WatcherType watcherType,\n        boolean local,\n        KeeperException.Code rc) throws InterruptedException, KeeperException {\n        LOG.info(\"Sending removeWatches req using zk {} path: {} type: {} \", zk, path, watcherType);\n        if (useAsync) {\n            MyCallback c1 = new MyCallback(rc.intValue(), path);\n            zk.removeAllWatches(path, watcherType, local, c1, null);\n            assertTrue(\"Didn't succeeds removeWatch operation\", c1.matches());\n            if (KeeperException.Code.OK.intValue() != c1.rc) {\n                KeeperException ke = KeeperException.create(KeeperException.Code.get(c1.rc));\n                throw ke;\n            }\n        } else {\n            zk.removeAllWatches(path, watcherType, local);\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/RemoveWatchesTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
