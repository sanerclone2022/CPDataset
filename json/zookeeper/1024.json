[{"authorTime":"2019-01-07 21:39:13","codes":[{"authorDate":"2019-01-07 21:39:13","commitOrder":2,"curCode":"    private void testAvgMinMaxCounter(AvgMinMaxCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n        long expectedMin = Arrays.stream(values).min().orElse(0);\n        long expectedMax = Arrays.stream(values).max().orElse(0);\n        long expectedSum = Arrays.stream(values).sum();\n        long expectedCnt = values.length;\n        double expectedAvg = expectedSum / Math.max(1, expectedCnt);\n\n        Assert.assertEquals(expectedAvg, metric.getAvg(), (double)200);\n        Assert.assertEquals(expectedMin, metric.getMin());\n        Assert.assertEquals(expectedMax, metric.getMax());\n        Assert.assertEquals(expectedCnt, metric.getCount());\n        Assert.assertEquals(expectedSum, metric.getTotal());\n\n        final Map<String, Object> results = metric.values();\n        Assert.assertEquals(expectedMax, (long)results.get(\"max_test\"));\n        Assert.assertEquals(expectedMin, (long)results.get(\"min_test\"));\n        Assert.assertEquals(expectedCnt, (long)results.get(\"cnt_test\"));\n        Assert.assertEquals(expectedAvg, (double)results.get(\"avg_test\"), (double)200);\n\n        metric.reset();\n    }\n","date":"2019-01-07 21:39:13","endLine":83,"groupId":"4585","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAvgMinMaxCounter","params":"(AvgMinMaxCountermetric@intsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/81/4072462375392b63871481a68b20a1473548b8.src","preCode":"    private void testAvgMinMaxCounter(AvgMinMaxCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n        long expectedMin = Arrays.stream(values).min().orElse(0);\n        long expectedMax = Arrays.stream(values).max().orElse(0);\n        long expectedSum = Arrays.stream(values).sum();\n        long expectedCnt = values.length;\n        double expectedAvg = expectedSum / Math.max(1, expectedCnt);\n\n        Assert.assertEquals(expectedAvg, metric.getAvg(), (double)200);\n        Assert.assertEquals(expectedMin, metric.getMin());\n        Assert.assertEquals(expectedMax, metric.getMax());\n        Assert.assertEquals(expectedCnt, metric.getCount());\n        Assert.assertEquals(expectedSum, metric.getTotal());\n\n        final Map<String, Object> results = metric.values();\n        Assert.assertEquals(expectedMax, (long)results.get(\"max_test\"));\n        Assert.assertEquals(expectedMin, (long)results.get(\"min_test\"));\n        Assert.assertEquals(expectedCnt, (long)results.get(\"cnt_test\"));\n        Assert.assertEquals(expectedAvg, (double)results.get(\"avg_test\"), (double)200);\n\n        metric.reset();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"MB"},{"authorDate":"2019-01-07 21:39:13","commitOrder":2,"curCode":"    private void testSimpleCounter(SimpleCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n\n        long expectedCount = Arrays.stream(values).sum();\n        Assert.assertEquals(expectedCount, metric.getCount());\n\n        final Map<String, Object> results = metric.values();\n        Assert.assertEquals(expectedCount, (long)results.get(\"test\"));\n\n        metric.reset();\n    }\n","date":"2019-01-07 21:39:13","endLine":108,"groupId":"4586","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleCounter","params":"(SimpleCountermetric@intsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/81/4072462375392b63871481a68b20a1473548b8.src","preCode":"    private void testSimpleCounter(SimpleCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n\n        long expectedCount = Arrays.stream(values).sum();\n        Assert.assertEquals(expectedCount, metric.getCount());\n\n        final Map<String, Object> results = metric.values();\n        Assert.assertEquals(expectedCount, (long)results.get(\"test\"));\n\n        metric.reset();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"MB"}],"commitId":"bc992480ec938a3fad4b90f75a52dd186e1b968a","commitMessage":"@@@ZOOKEEPER-2641: AvgRequestLatency metric improves to be more accurate\n\n- some original review historys were included [here ](https://github.com/apache/zookeeper/pull/629)\n- more details in [ZOOKEEPER-2641](https://issues.apache.org/jira/browse/ZOOKEEPER-2641)\n\nAuthor: maoling <maoling199210191@sina.com>\n\nReviewers: andor@apache.org\n\nCloses #748 from maoling/ZOOKEEPER-2641 and squashes the following commits:\n\ne0d4fc890 [maoling] fix the flaky test in the FourLetterWordsTest.testValidateStatOutput\n1739dbf1c [maoling] fix the flaky test in the CommandsTest.testMonitor\n01af4002e [maoling] ZOOKEEPER-2641:AvgRequestLatency metric improves to be more accurate\n","date":"2019-01-07 21:39:13","modifiedFileCount":"12","status":"M","submitter":"maoling"},{"authorTime":"2019-04-13 01:01:37","codes":[{"authorDate":"2019-01-07 21:39:13","commitOrder":3,"curCode":"    private void testAvgMinMaxCounter(AvgMinMaxCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n        long expectedMin = Arrays.stream(values).min().orElse(0);\n        long expectedMax = Arrays.stream(values).max().orElse(0);\n        long expectedSum = Arrays.stream(values).sum();\n        long expectedCnt = values.length;\n        double expectedAvg = expectedSum / Math.max(1, expectedCnt);\n\n        Assert.assertEquals(expectedAvg, metric.getAvg(), (double)200);\n        Assert.assertEquals(expectedMin, metric.getMin());\n        Assert.assertEquals(expectedMax, metric.getMax());\n        Assert.assertEquals(expectedCnt, metric.getCount());\n        Assert.assertEquals(expectedSum, metric.getTotal());\n\n        final Map<String, Object> results = metric.values();\n        Assert.assertEquals(expectedMax, (long)results.get(\"max_test\"));\n        Assert.assertEquals(expectedMin, (long)results.get(\"min_test\"));\n        Assert.assertEquals(expectedCnt, (long)results.get(\"cnt_test\"));\n        Assert.assertEquals(expectedAvg, (double)results.get(\"avg_test\"), (double)200);\n\n        metric.reset();\n    }\n","date":"2019-01-07 21:39:13","endLine":83,"groupId":"4585","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAvgMinMaxCounter","params":"(AvgMinMaxCountermetric@intsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/81/4072462375392b63871481a68b20a1473548b8.src","preCode":"    private void testAvgMinMaxCounter(AvgMinMaxCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n        long expectedMin = Arrays.stream(values).min().orElse(0);\n        long expectedMax = Arrays.stream(values).max().orElse(0);\n        long expectedSum = Arrays.stream(values).sum();\n        long expectedCnt = values.length;\n        double expectedAvg = expectedSum / Math.max(1, expectedCnt);\n\n        Assert.assertEquals(expectedAvg, metric.getAvg(), (double)200);\n        Assert.assertEquals(expectedMin, metric.getMin());\n        Assert.assertEquals(expectedMax, metric.getMax());\n        Assert.assertEquals(expectedCnt, metric.getCount());\n        Assert.assertEquals(expectedSum, metric.getTotal());\n\n        final Map<String, Object> results = metric.values();\n        Assert.assertEquals(expectedMax, (long)results.get(\"max_test\"));\n        Assert.assertEquals(expectedMin, (long)results.get(\"min_test\"));\n        Assert.assertEquals(expectedCnt, (long)results.get(\"cnt_test\"));\n        Assert.assertEquals(expectedAvg, (double)results.get(\"avg_test\"), (double)200);\n\n        metric.reset();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"},{"authorDate":"2019-04-13 01:01:37","commitOrder":3,"curCode":"    private void testSimpleCounter(SimpleCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n\n        long expectedCount = Arrays.stream(values).sum();\n        Assert.assertEquals(expectedCount, metric.get());\n\n        final Map<String, Object> results = metric.values();\n        Assert.assertEquals(expectedCount, (long)results.get(\"test\"));\n\n        metric.reset();\n    }\n","date":"2019-04-13 01:01:37","endLine":108,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleCounter","params":"(SimpleCountermetric@intsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/a7/1b3e26d0543e51d0617f77718c045e6b17b358.src","preCode":"    private void testSimpleCounter(SimpleCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n\n        long expectedCount = Arrays.stream(values).sum();\n        Assert.assertEquals(expectedCount, metric.getCount());\n\n        final Map<String, Object> results = metric.values();\n        Assert.assertEquals(expectedCount, (long)results.get(\"test\"));\n\n        metric.reset();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"f69ad1b0fed88da3c1b67fd73031e7248c0564f7","commitMessage":"@@@ZOOKEEPER-3143: Pluggable metrics system for ZooKeeper - Data Collection on Server\n\n- Make ServerMetrics a class.  not an enum.\n- Make ServerMetrics use MetricsProvider\n- After the bootstrap of the MetricsProvider reconfigure ServerMetrics in order to push data to the provider.\n- Introduce a default implementation of MetricsProvider.  based on current implementation\n- Change MetricsContext interface in order to support several types of Metrics.  in order to cover current metrics facilities. \n\nThe MetricsProvider API will allow ZooKeeper users to integrate ZooKeeper with other metrics systems.  like Prometheus.io/Dropwizard.....\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: fangmin@apache.org.  andor@apache.org\n\nCloses #854 from eolivelli/fix/metrics-provider-port-static and squashes the following commits:\n\nc5714ee66 [Enrico Olivelli] Fix dump and reset for SummarySets\ned6230e51 [Enrico Olivelli] Fix build\n8e8d87bdd [Enrico Olivelli] Merge branch 'master' into fix/metrics-provider-port-static\n02722b55b [Enrico Olivelli] Fix tests\n7ebc091e6 [Enrico Olivelli] Use toString in Monitor Command\n49a5c801a [Enrico Olivelli] Add Metrics to 4lw interface - mntr command\n137bda23a [Enrico Olivelli] A few nits\n80396915f [Enrico Olivelli] Introduce MetricsUtils\n9f28747bc [Enrico Olivelli] Fix after merge master\ne380607ae [Enrico Olivelli] Fix imports\nc2d0c358c [Enrico Olivelli] Introduce SummarySet\n4674d2350 [Enrico Olivelli] Fix trailing spaces\n6580b4a53 [Enrico Olivelli] Use a global static variable\nad8d44241 [Enrico Olivelli] Make DefaultMetricsProvider the default\nd455a1c8c [Enrico Olivelli] Fix test\nf997c30f3 [Enrico Olivelli] Fix spotbugs\n228c1d268 [Enrico Olivelli] ZOOKEEPER-3143 Pluggable metrics system for ZooKeeper - Data Collection on Server\n","date":"2019-04-13 01:01:37","modifiedFileCount":"47","status":"M","submitter":"Enrico Olivelli"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":4,"curCode":"    private void testAvgMinMaxCounter(AvgMinMaxCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n        long expectedMin = Arrays.stream(values).min().orElse(0);\n        long expectedMax = Arrays.stream(values).max().orElse(0);\n        long expectedSum = Arrays.stream(values).sum();\n        long expectedCnt = values.length;\n        double expectedAvg = expectedSum / Math.max(1, expectedCnt);\n\n        assertEquals(expectedAvg, metric.getAvg(), 200);\n        assertEquals(expectedMin, metric.getMin());\n        assertEquals(expectedMax, metric.getMax());\n        assertEquals(expectedCnt, metric.getCount());\n        assertEquals(expectedSum, metric.getTotal());\n\n        final Map<String, Object> results = metric.values();\n        assertEquals(expectedMax, (long) results.get(\"max_test\"));\n        assertEquals(expectedMin, (long) results.get(\"min_test\"));\n        assertEquals(expectedCnt, (long) results.get(\"cnt_test\"));\n        assertEquals(expectedAvg, (double) results.get(\"avg_test\"), 200);\n\n        metric.reset();\n    }\n","date":"2019-08-17 23:13:15","endLine":83,"groupId":"1024","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAvgMinMaxCounter","params":"(AvgMinMaxCountermetric@intsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/29/a9fd96b7bf04b18e7f9c12818ecad7e20e3db1.src","preCode":"    private void testAvgMinMaxCounter(AvgMinMaxCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n        long expectedMin = Arrays.stream(values).min().orElse(0);\n        long expectedMax = Arrays.stream(values).max().orElse(0);\n        long expectedSum = Arrays.stream(values).sum();\n        long expectedCnt = values.length;\n        double expectedAvg = expectedSum / Math.max(1, expectedCnt);\n\n        Assert.assertEquals(expectedAvg, metric.getAvg(), (double)200);\n        Assert.assertEquals(expectedMin, metric.getMin());\n        Assert.assertEquals(expectedMax, metric.getMax());\n        Assert.assertEquals(expectedCnt, metric.getCount());\n        Assert.assertEquals(expectedSum, metric.getTotal());\n\n        final Map<String, Object> results = metric.values();\n        Assert.assertEquals(expectedMax, (long)results.get(\"max_test\"));\n        Assert.assertEquals(expectedMin, (long)results.get(\"min_test\"));\n        Assert.assertEquals(expectedCnt, (long)results.get(\"cnt_test\"));\n        Assert.assertEquals(expectedAvg, (double)results.get(\"avg_test\"), (double)200);\n\n        metric.reset();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":4,"curCode":"    private void testSimpleCounter(SimpleCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n\n        long expectedCount = Arrays.stream(values).sum();\n        assertEquals(expectedCount, metric.get());\n\n        final Map<String, Object> results = metric.values();\n        assertEquals(expectedCount, (long) results.get(\"test\"));\n\n        metric.reset();\n    }\n","date":"2019-08-17 23:13:15","endLine":108,"groupId":"1024","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleCounter","params":"(SimpleCountermetric@intsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/29/a9fd96b7bf04b18e7f9c12818ecad7e20e3db1.src","preCode":"    private void testSimpleCounter(SimpleCounter metric, int size) {\n        final long[] values = generateRandomValues(size);\n        for (long value : values) {\n            metric.add(value);\n        }\n\n        long expectedCount = Arrays.stream(values).sum();\n        Assert.assertEquals(expectedCount, metric.get());\n\n        final Map<String, Object> results = metric.values();\n        Assert.assertEquals(expectedCount, (long)results.get(\"test\"));\n\n        metric.reset();\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
