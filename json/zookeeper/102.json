[{"authorTime":"2018-09-03 17:57:50","codes":[{"authorDate":"2018-09-03 17:57:50","commitOrder":1,"curCode":"    public String genJavaReadWrapper(String fname, String tag, boolean decl) {\n        StringBuilder ret = new StringBuilder(\"\");\n        if (decl) {\n            ret.append(\"      java.util.List \"+fname+\";\\n\");\n        }\n        ret.append(\"    {\\n\");\n        incrLevel();\n        ret.append(\"      Index \"+getId(\"vidx\")+\" = a_.startVector(\\\"\"+tag+\"\\\");\\n\");\n        ret.append(\"      if (\"+getId(\"vidx\")+\"!= null) {\");\n        ret.append(\"          \"+fname+\"=new java.util.ArrayList<\"+ mElement.getJavaType() + \">();\\n\");\n        ret.append(\"          for (; !\"+getId(\"vidx\")+\".done(); \"+getId(\"vidx\")+\".incr()) {\\n\");\n        ret.append(mElement.genJavaReadWrapper(getId(\"e\"), getId(\"e\"), true));\n        ret.append(\"            \"+fname+\".add(\"+getId(\"e\")+\");\\n\");\n        ret.append(\"          }\\n\");\n        ret.append(\"      }\\n\");\n        ret.append(\"    a_.endVector(\\\"\"+tag+\"\\\");\\n\");\n        decrLevel();\n        ret.append(\"    }\\n\");\n        return ret.toString();\n    }\n","date":"2018-09-03 17:57:50","endLine":73,"groupId":"1933","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"genJavaReadWrapper","params":"(Stringfname@Stringtag@booleandecl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/33/1970b8e6c8d72030fb1e92aef3e12d7ae144e8.src","preCode":"    public String genJavaReadWrapper(String fname, String tag, boolean decl) {\n        StringBuilder ret = new StringBuilder(\"\");\n        if (decl) {\n            ret.append(\"      java.util.List \"+fname+\";\\n\");\n        }\n        ret.append(\"    {\\n\");\n        incrLevel();\n        ret.append(\"      Index \"+getId(\"vidx\")+\" = a_.startVector(\\\"\"+tag+\"\\\");\\n\");\n        ret.append(\"      if (\"+getId(\"vidx\")+\"!= null) {\");\n        ret.append(\"          \"+fname+\"=new java.util.ArrayList<\"+ mElement.getJavaType() + \">();\\n\");\n        ret.append(\"          for (; !\"+getId(\"vidx\")+\".done(); \"+getId(\"vidx\")+\".incr()) {\\n\");\n        ret.append(mElement.genJavaReadWrapper(getId(\"e\"), getId(\"e\"), true));\n        ret.append(\"            \"+fname+\".add(\"+getId(\"e\")+\");\\n\");\n        ret.append(\"          }\\n\");\n        ret.append(\"      }\\n\");\n        ret.append(\"    a_.endVector(\\\"\"+tag+\"\\\");\\n\");\n        decrLevel();\n        ret.append(\"    }\\n\");\n        return ret.toString();\n    }\n","realPath":"zookeeper-jute/src/main/java/org/apache/jute/compiler/JVector.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2018-09-03 17:57:50","commitOrder":1,"curCode":"    public String genCsharpReadWrapper(String fname, String tag, boolean decl) {\n        StringBuilder ret = new StringBuilder(\"\");\n        if (decl) {\n            ret.append(\"      System.Collections.Generic.List<\" + mElement.getCsharpType()+ \"> \"+capitalize(fname)+\";\\n\");\n        }\n        ret.append(\"    {\\n\");\n        incrLevel();\n        ret.append(\"      IIndex \"+getId(\"vidx\")+\" = a_.StartVector(\\\"\"+tag+\"\\\");\\n\");\n        ret.append(\"      if (\"+getId(\"vidx\")+\"!= null) {\");\n        ret.append(\"          \"+capitalize(fname)+\"=new System.Collections.Generic.List<\"+ mElement.getCsharpType() + \">();\\n\");\n        ret.append(\"          for (; !\"+getId(\"vidx\")+\".Done(); \"+getId(\"vidx\")+\".Incr()) {\\n\");\n        ret.append(mElement.genCsharpReadWrapper(getId(\"e\"), getId(\"e\"), true));\n        ret.append(\"            \"+capitalize(fname)+\".Add(\"+getId(\"e\")+\");\\n\");\n        ret.append(\"          }\\n\");\n        ret.append(\"      }\\n\");\n        ret.append(\"    a_.EndVector(\\\"\"+tag+\"\\\");\\n\");\n        decrLevel();\n        ret.append(\"    }\\n\");\n        return ret.toString();\n    }\n","date":"2018-09-03 17:57:50","endLine":144,"groupId":"1933","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"genCsharpReadWrapper","params":"(Stringfname@Stringtag@booleandecl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/33/1970b8e6c8d72030fb1e92aef3e12d7ae144e8.src","preCode":"    public String genCsharpReadWrapper(String fname, String tag, boolean decl) {\n        StringBuilder ret = new StringBuilder(\"\");\n        if (decl) {\n            ret.append(\"      System.Collections.Generic.List<\" + mElement.getCsharpType()+ \"> \"+capitalize(fname)+\";\\n\");\n        }\n        ret.append(\"    {\\n\");\n        incrLevel();\n        ret.append(\"      IIndex \"+getId(\"vidx\")+\" = a_.StartVector(\\\"\"+tag+\"\\\");\\n\");\n        ret.append(\"      if (\"+getId(\"vidx\")+\"!= null) {\");\n        ret.append(\"          \"+capitalize(fname)+\"=new System.Collections.Generic.List<\"+ mElement.getCsharpType() + \">();\\n\");\n        ret.append(\"          for (; !\"+getId(\"vidx\")+\".Done(); \"+getId(\"vidx\")+\".Incr()) {\\n\");\n        ret.append(mElement.genCsharpReadWrapper(getId(\"e\"), getId(\"e\"), true));\n        ret.append(\"            \"+capitalize(fname)+\".Add(\"+getId(\"e\")+\");\\n\");\n        ret.append(\"          }\\n\");\n        ret.append(\"      }\\n\");\n        ret.append(\"    a_.EndVector(\\\"\"+tag+\"\\\");\\n\");\n        decrLevel();\n        ret.append(\"    }\\n\");\n        return ret.toString();\n    }\n","realPath":"zookeeper-jute/src/main/java/org/apache/jute/compiler/JVector.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"}],"commitId":"b7181d2c5a48accbd47e30430ccfe1291a91d900","commitMessage":"@@@ZOOKEEPER-3080: MAVEN MIGRATION - Step 1.5 - move jute dir\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #609 from nkalmar/ZOOKEEPER-3080\n","date":"2018-09-03 17:57:50","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-07-29 23:15:26","codes":[{"authorDate":"2018-09-03 17:57:50","commitOrder":2,"curCode":"    public String genJavaReadWrapper(String fname, String tag, boolean decl) {\n        StringBuilder ret = new StringBuilder(\"\");\n        if (decl) {\n            ret.append(\"      java.util.List \"+fname+\";\\n\");\n        }\n        ret.append(\"    {\\n\");\n        incrLevel();\n        ret.append(\"      Index \"+getId(\"vidx\")+\" = a_.startVector(\\\"\"+tag+\"\\\");\\n\");\n        ret.append(\"      if (\"+getId(\"vidx\")+\"!= null) {\");\n        ret.append(\"          \"+fname+\"=new java.util.ArrayList<\"+ mElement.getJavaType() + \">();\\n\");\n        ret.append(\"          for (; !\"+getId(\"vidx\")+\".done(); \"+getId(\"vidx\")+\".incr()) {\\n\");\n        ret.append(mElement.genJavaReadWrapper(getId(\"e\"), getId(\"e\"), true));\n        ret.append(\"            \"+fname+\".add(\"+getId(\"e\")+\");\\n\");\n        ret.append(\"          }\\n\");\n        ret.append(\"      }\\n\");\n        ret.append(\"    a_.endVector(\\\"\"+tag+\"\\\");\\n\");\n        decrLevel();\n        ret.append(\"    }\\n\");\n        return ret.toString();\n    }\n","date":"2018-09-03 17:57:50","endLine":73,"groupId":"102","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"genJavaReadWrapper","params":"(Stringfname@Stringtag@booleandecl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/33/1970b8e6c8d72030fb1e92aef3e12d7ae144e8.src","preCode":"    public String genJavaReadWrapper(String fname, String tag, boolean decl) {\n        StringBuilder ret = new StringBuilder(\"\");\n        if (decl) {\n            ret.append(\"      java.util.List \"+fname+\";\\n\");\n        }\n        ret.append(\"    {\\n\");\n        incrLevel();\n        ret.append(\"      Index \"+getId(\"vidx\")+\" = a_.startVector(\\\"\"+tag+\"\\\");\\n\");\n        ret.append(\"      if (\"+getId(\"vidx\")+\"!= null) {\");\n        ret.append(\"          \"+fname+\"=new java.util.ArrayList<\"+ mElement.getJavaType() + \">();\\n\");\n        ret.append(\"          for (; !\"+getId(\"vidx\")+\".done(); \"+getId(\"vidx\")+\".incr()) {\\n\");\n        ret.append(mElement.genJavaReadWrapper(getId(\"e\"), getId(\"e\"), true));\n        ret.append(\"            \"+fname+\".add(\"+getId(\"e\")+\");\\n\");\n        ret.append(\"          }\\n\");\n        ret.append(\"      }\\n\");\n        ret.append(\"    a_.endVector(\\\"\"+tag+\"\\\");\\n\");\n        decrLevel();\n        ret.append(\"    }\\n\");\n        return ret.toString();\n    }\n","realPath":"zookeeper-jute/src/main/java/org/apache/jute/compiler/JVector.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"},{"authorDate":"2019-07-29 23:15:26","commitOrder":2,"curCode":"    public String genCsharpReadWrapper(String fname, String tag, boolean decl) {\n        StringBuilder ret = new StringBuilder();\n        if (decl) {\n            ret.append(\"      System.Collections.Generic.List<\" + mElement.getCsharpType() + \"> \" + capitalize(fname) + \";\\n\");\n        }\n        ret.append(\"    {\\n\");\n        incrLevel();\n        ret.append(\"      IIndex \" + getId(\"vidx\") + \" = a_.StartVector(\\\"\" + tag + \"\\\");\\n\");\n        ret.append(\"      if (\" + getId(\"vidx\") + \"!= null) {\");\n        ret.append(\"          \" + capitalize(fname) + \"=new System.Collections.Generic.List<\" + mElement.getCsharpType() + \">();\\n\");\n        ret.append(\"          for (; !\" + getId(\"vidx\") + \".Done(); \" + getId(\"vidx\") + \".Incr()) {\\n\");\n        ret.append(mElement.genCsharpReadWrapper(getId(\"e\"), getId(\"e\"), true));\n        ret.append(\"            \" + capitalize(fname) + \".Add(\" + getId(\"e\") + \");\\n\");\n        ret.append(\"          }\\n\");\n        ret.append(\"      }\\n\");\n        ret.append(\"    a_.EndVector(\\\"\" + tag + \"\\\");\\n\");\n        decrLevel();\n        ret.append(\"    }\\n\");\n        return ret.toString();\n    }\n","date":"2019-07-29 23:15:26","endLine":154,"groupId":"102","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"genCsharpReadWrapper","params":"(Stringfname@Stringtag@booleandecl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/88/7d57ec3d1d71407f41120519605210d1dc01e7.src","preCode":"    public String genCsharpReadWrapper(String fname, String tag, boolean decl) {\n        StringBuilder ret = new StringBuilder(\"\");\n        if (decl) {\n            ret.append(\"      System.Collections.Generic.List<\" + mElement.getCsharpType()+ \"> \"+capitalize(fname)+\";\\n\");\n        }\n        ret.append(\"    {\\n\");\n        incrLevel();\n        ret.append(\"      IIndex \"+getId(\"vidx\")+\" = a_.StartVector(\\\"\"+tag+\"\\\");\\n\");\n        ret.append(\"      if (\"+getId(\"vidx\")+\"!= null) {\");\n        ret.append(\"          \"+capitalize(fname)+\"=new System.Collections.Generic.List<\"+ mElement.getCsharpType() + \">();\\n\");\n        ret.append(\"          for (; !\"+getId(\"vidx\")+\".Done(); \"+getId(\"vidx\")+\".Incr()) {\\n\");\n        ret.append(mElement.genCsharpReadWrapper(getId(\"e\"), getId(\"e\"), true));\n        ret.append(\"            \"+capitalize(fname)+\".Add(\"+getId(\"e\")+\");\\n\");\n        ret.append(\"          }\\n\");\n        ret.append(\"      }\\n\");\n        ret.append(\"    a_.EndVector(\\\"\"+tag+\"\\\");\\n\");\n        decrLevel();\n        ret.append(\"    }\\n\");\n        return ret.toString();\n    }\n","realPath":"zookeeper-jute/src/main/java/org/apache/jute/compiler/JVector.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"35f4aa227463ca95941b9045f9c554aa1696782f","commitMessage":"@@@ZOOKEEPER-3468: Enable BookKeeper checkstyle configuration on zookeeper-jute\n\nThis pr is based on #1022\n\ncc eolivelli maoling anmolnar\n\nalso locally test that add a 'author' tag would cause build failure.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Norbert Kalmar <nkalmar@apache.org>.  Enrico Olivelli <eolivelli@apache.org>\n\nCloses #1023 from TisonKun/ZOOKEEPER-3468\n","date":"2019-07-29 23:15:26","modifiedFileCount":"34","status":"M","submitter":"tison"}]
