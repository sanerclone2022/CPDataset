[{"authorTime":"2019-04-25 08:11:50","codes":[{"authorDate":"2019-04-25 08:11:50","commitOrder":1,"curCode":"    public void testTimeWaitingEmptyPoolInCommitProcessorRead() throws Exception {\n        setupProcessors(1, 1000);\n\n        \r\n        requestScheduled = new CountDownLatch(3);\n        commitProcessor.processRequest(createReadRequest(0l, 2));\n        commitProcessor.processRequest(createReadRequest(1l, 3));\n        commitProcessor.processRequest(createReadRequest(2l, 4));\n        requestScheduled.await(5, TimeUnit.SECONDS);\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1l, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        long actual = (long)MetricsUtils.currentServerMetrics().get(\"max_time_waiting_empty_pool_in_commit_processor_read_ms\");\n        \r\n        checkTimeMetric(actual, 2500L, 3500L);\n    }\n","date":"2019-04-25 08:11:50","endLine":367,"groupId":"4618","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeWaitingEmptyPoolInCommitProcessorRead","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/42/6aae9b814fc8bcf4483b97cc88d29a44bb1918.src","preCode":"    public void testTimeWaitingEmptyPoolInCommitProcessorRead() throws Exception {\n        setupProcessors(1, 1000);\n\n        \r\n        requestScheduled = new CountDownLatch(3);\n        commitProcessor.processRequest(createReadRequest(0l, 2));\n        commitProcessor.processRequest(createReadRequest(1l, 3));\n        commitProcessor.processRequest(createReadRequest(2l, 4));\n        requestScheduled.await(5, TimeUnit.SECONDS);\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1l, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        long actual = (long)MetricsUtils.currentServerMetrics().get(\"max_time_waiting_empty_pool_in_commit_processor_read_ms\");\n        \r\n        checkTimeMetric(actual, 2500L, 3500L);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":349,"status":"B"},{"authorDate":"2019-04-25 08:11:50","commitOrder":1,"curCode":"    public void testConcurrentRequestProcessingInCommitProcessor() throws Exception {\n        setupProcessors(3, 1000);\n\n        \r\n        commitSeen = new CountDownLatch(1);\n        commitProcessor.processRequest(createReadRequest(1l, 2));\n        commitProcessor.processRequest(createReadRequest(1l, 3));\n        commitProcessor.processRequest(createReadRequest(1l, 4));\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1l, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        \r\n        Map<String, Object> values = MetricsUtils.currentServerMetrics();\n        Assert.assertEquals(3L, values.get(\"max_concurrent_request_processing_in_commit_processor\"));\n    }\n","date":"2019-04-25 08:11:50","endLine":388,"groupId":"4618","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcurrentRequestProcessingInCommitProcessor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/42/6aae9b814fc8bcf4483b97cc88d29a44bb1918.src","preCode":"    public void testConcurrentRequestProcessingInCommitProcessor() throws Exception {\n        setupProcessors(3, 1000);\n\n        \r\n        commitSeen = new CountDownLatch(1);\n        commitProcessor.processRequest(createReadRequest(1l, 2));\n        commitProcessor.processRequest(createReadRequest(1l, 3));\n        commitProcessor.processRequest(createReadRequest(1l, 4));\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1l, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        \r\n        Map<String, Object> values = MetricsUtils.currentServerMetrics();\n        Assert.assertEquals(3L, values.get(\"max_concurrent_request_processing_in_commit_processor\"));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"B"}],"commitId":"cb9727dc5b6f37984fef5f62473ae4064a9f15cb","commitMessage":"@@@ZOOKEEPER-3268: Add commit processor metrics\n\nAuthor: Jie Huang <jiehuang@fb.com>\n\nReviewers: fangmin@apache.org.  evolivelli@aparche.org.  andor@apache.org\n\nCloses #800 from jhuan31/ZOOKEEPER-3268\n","date":"2019-04-25 08:11:50","modifiedFileCount":"3","status":"B","submitter":"Jie Huang"},{"authorTime":"2019-08-06 07:49:20","codes":[{"authorDate":"2019-04-25 08:11:50","commitOrder":2,"curCode":"    public void testTimeWaitingEmptyPoolInCommitProcessorRead() throws Exception {\n        setupProcessors(1, 1000);\n\n        \r\n        requestScheduled = new CountDownLatch(3);\n        commitProcessor.processRequest(createReadRequest(0l, 2));\n        commitProcessor.processRequest(createReadRequest(1l, 3));\n        commitProcessor.processRequest(createReadRequest(2l, 4));\n        requestScheduled.await(5, TimeUnit.SECONDS);\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1l, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        long actual = (long)MetricsUtils.currentServerMetrics().get(\"max_time_waiting_empty_pool_in_commit_processor_read_ms\");\n        \r\n        checkTimeMetric(actual, 2500L, 3500L);\n    }\n","date":"2019-04-25 08:11:50","endLine":367,"groupId":"4618","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeWaitingEmptyPoolInCommitProcessorRead","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/42/6aae9b814fc8bcf4483b97cc88d29a44bb1918.src","preCode":"    public void testTimeWaitingEmptyPoolInCommitProcessorRead() throws Exception {\n        setupProcessors(1, 1000);\n\n        \r\n        requestScheduled = new CountDownLatch(3);\n        commitProcessor.processRequest(createReadRequest(0l, 2));\n        commitProcessor.processRequest(createReadRequest(1l, 3));\n        commitProcessor.processRequest(createReadRequest(2l, 4));\n        requestScheduled.await(5, TimeUnit.SECONDS);\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1l, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        long actual = (long)MetricsUtils.currentServerMetrics().get(\"max_time_waiting_empty_pool_in_commit_processor_read_ms\");\n        \r\n        checkTimeMetric(actual, 2500L, 3500L);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":349,"status":"N"},{"authorDate":"2019-08-06 07:49:20","commitOrder":2,"curCode":"    public void testConcurrentRequestProcessingInCommitProcessor() throws Exception {\n        setupProcessors(3, 1000);\n\n        \r\n        commitSeen = new CountDownLatch(1);\n        requestScheduled = new CountDownLatch(3);\n        commitProcessor.processRequest(createReadRequest(1l, 2));\n        commitProcessor.processRequest(createReadRequest(1l, 3));\n        commitProcessor.processRequest(createReadRequest(1l, 4));\n        requestScheduled.await(5, TimeUnit.SECONDS);\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1l, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        \r\n        Map<String, Object> values = MetricsUtils.currentServerMetrics();\n        Assert.assertEquals(3L, values.get(\"max_concurrent_request_processing_in_commit_processor\"));\n    }\n","date":"2019-08-06 07:49:20","endLine":394,"groupId":"4618","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcurrentRequestProcessingInCommitProcessor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/2b/ef68843897c285d35212e113bc7d0f9fa755b4.src","preCode":"    public void testConcurrentRequestProcessingInCommitProcessor() throws Exception {\n        setupProcessors(3, 1000);\n\n        \r\n        commitSeen = new CountDownLatch(1);\n        commitProcessor.processRequest(createReadRequest(1l, 2));\n        commitProcessor.processRequest(createReadRequest(1l, 3));\n        commitProcessor.processRequest(createReadRequest(1l, 4));\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1l, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        \r\n        Map<String, Object> values = MetricsUtils.currentServerMetrics();\n        Assert.assertEquals(3L, values.get(\"max_concurrent_request_processing_in_commit_processor\"));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":375,"status":"M"}],"commitId":"8fbeec0db8010461ddeae88d15c3a0b1e59a3c64","commitMessage":"@@@ZOOKEEPER-3480: Fix the flaky test in CommitProcessorMetricsTest\n\nThis test is pretty flaky on Jenkins.  the previous code doesn't wait all requests being processed.  which may cause flaky.\n\nAuthor: Fangmin Lyu <fangmin@apache.org>\n\nReviewers: Norbert Kalmar <nkalmar@yahoo.com>.  maoling <maoling199210191@sina.com>.  Michael Han <hanm@apache.org>\n\nCloses #1035 from lvfangmin/ZOOKEEPER-3480\n","date":"2019-08-06 07:49:20","modifiedFileCount":"1","status":"M","submitter":"Fangmin Lyu"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":3,"curCode":"    public void testTimeWaitingEmptyPoolInCommitProcessorRead() throws Exception {\n        setupProcessors(1, 1000);\n\n        \r\n        requestScheduled = new CountDownLatch(3);\n        commitProcessor.processRequest(createReadRequest(0L, 2));\n        commitProcessor.processRequest(createReadRequest(1L, 3));\n        commitProcessor.processRequest(createReadRequest(2L, 4));\n        requestScheduled.await(5, TimeUnit.SECONDS);\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1L, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        long actual = (long) MetricsUtils.currentServerMetrics().get(\"max_time_waiting_empty_pool_in_commit_processor_read_ms\");\n        \r\n        checkTimeMetric(actual, 2500L, 3500L);\n    }\n","date":"2019-08-17 23:13:15","endLine":375,"groupId":"10122","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeWaitingEmptyPoolInCommitProcessorRead","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/29/fe94b81d02ce7828fefd382d9dde2807c76581.src","preCode":"    public void testTimeWaitingEmptyPoolInCommitProcessorRead() throws Exception {\n        setupProcessors(1, 1000);\n\n        \r\n        requestScheduled = new CountDownLatch(3);\n        commitProcessor.processRequest(createReadRequest(0l, 2));\n        commitProcessor.processRequest(createReadRequest(1l, 3));\n        commitProcessor.processRequest(createReadRequest(2l, 4));\n        requestScheduled.await(5, TimeUnit.SECONDS);\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1l, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        long actual = (long)MetricsUtils.currentServerMetrics().get(\"max_time_waiting_empty_pool_in_commit_processor_read_ms\");\n        \r\n        checkTimeMetric(actual, 2500L, 3500L);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":357,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":3,"curCode":"    public void testConcurrentRequestProcessingInCommitProcessor() throws Exception {\n        setupProcessors(3, 1000);\n\n        \r\n        commitSeen = new CountDownLatch(1);\n        requestScheduled = new CountDownLatch(3);\n        commitProcessor.processRequest(createReadRequest(1L, 2));\n        commitProcessor.processRequest(createReadRequest(1L, 3));\n        commitProcessor.processRequest(createReadRequest(1L, 4));\n        requestScheduled.await(5, TimeUnit.SECONDS);\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1L, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        \r\n        Map<String, Object> values = MetricsUtils.currentServerMetrics();\n        assertEquals(3L, values.get(\"max_concurrent_request_processing_in_commit_processor\"));\n    }\n","date":"2019-08-17 23:13:15","endLine":397,"groupId":"10122","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcurrentRequestProcessingInCommitProcessor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/29/fe94b81d02ce7828fefd382d9dde2807c76581.src","preCode":"    public void testConcurrentRequestProcessingInCommitProcessor() throws Exception {\n        setupProcessors(3, 1000);\n\n        \r\n        commitSeen = new CountDownLatch(1);\n        requestScheduled = new CountDownLatch(3);\n        commitProcessor.processRequest(createReadRequest(1l, 2));\n        commitProcessor.processRequest(createReadRequest(1l, 3));\n        commitProcessor.processRequest(createReadRequest(1l, 4));\n        requestScheduled.await(5, TimeUnit.SECONDS);\n\n        \r\n        poolEmpytied = new CountDownLatch(1);\n        commitProcessor.commit(createWriteRequest(1l, 1));\n        poolEmpytied.await(5, TimeUnit.SECONDS);\n\n        \r\n        Map<String, Object> values = MetricsUtils.currentServerMetrics();\n        Assert.assertEquals(3L, values.get(\"max_concurrent_request_processing_in_commit_processor\"));\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CommitProcessorMetricsTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
