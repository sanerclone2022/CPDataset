[{"authorTime":"2019-04-19 01:17:48","codes":[{"authorDate":"2019-04-19 01:17:48","commitOrder":1,"curCode":"    public void testJvmPauseMonitorExceedInfoThreshold() throws InterruptedException {\n        QuorumPeerConfig qpConfig = mock(QuorumPeerConfig.class);\n        when(qpConfig.getJvmPauseSleepTimeMs()).thenReturn(sleepTime);\n        when(qpConfig.getJvmPauseInfoThresholdMs()).thenReturn(infoTH);\n\n        pauseMonitor = new JvmPauseMonitor(qpConfig);\n        pauseMonitor.serviceStart();\n\n        Assert.assertEquals(sleepTime, Long.valueOf(pauseMonitor.sleepTimeMs));\n        Assert.assertEquals(infoTH, Long.valueOf(pauseMonitor.infoThresholdMs));\n\n        while(pauseMonitor.getNumGcInfoThresholdExceeded() == 0) {\n            Thread.sleep(200);\n        }\n    }\n","date":"2019-04-19 01:17:48","endLine":51,"groupId":"559","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testJvmPauseMonitorExceedInfoThreshold","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/4e/701b83d073b90504f701bb2312a4d975e66bac.src","preCode":"    public void testJvmPauseMonitorExceedInfoThreshold() throws InterruptedException {\n        QuorumPeerConfig qpConfig = mock(QuorumPeerConfig.class);\n        when(qpConfig.getJvmPauseSleepTimeMs()).thenReturn(sleepTime);\n        when(qpConfig.getJvmPauseInfoThresholdMs()).thenReturn(infoTH);\n\n        pauseMonitor = new JvmPauseMonitor(qpConfig);\n        pauseMonitor.serviceStart();\n\n        Assert.assertEquals(sleepTime, Long.valueOf(pauseMonitor.sleepTimeMs));\n        Assert.assertEquals(infoTH, Long.valueOf(pauseMonitor.infoThresholdMs));\n\n        while(pauseMonitor.getNumGcInfoThresholdExceeded() == 0) {\n            Thread.sleep(200);\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/util/JvmPauseMonitorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"},{"authorDate":"2019-04-19 01:17:48","commitOrder":1,"curCode":"    public void testJvmPauseMonitorExceedWarnThreshold() throws InterruptedException {\n        QuorumPeerConfig qpConfig = mock(QuorumPeerConfig.class);\n        when(qpConfig.getJvmPauseSleepTimeMs()).thenReturn(sleepTime);\n        when(qpConfig.getJvmPauseWarnThresholdMs()).thenReturn(warnTH);\n\n        pauseMonitor = new JvmPauseMonitor(qpConfig);\n        pauseMonitor.serviceStart();\n\n        Assert.assertEquals(sleepTime, Long.valueOf(pauseMonitor.sleepTimeMs));\n        Assert.assertEquals(warnTH, Long.valueOf(pauseMonitor.warnThresholdMs));\n\n        while(pauseMonitor.getNumGcWarnThresholdExceeded() == 0) {\n            Thread.sleep(200);\n        }\n\n    }\n","date":"2019-04-19 01:17:48","endLine":69,"groupId":"559","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJvmPauseMonitorExceedWarnThreshold","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/4e/701b83d073b90504f701bb2312a4d975e66bac.src","preCode":"    public void testJvmPauseMonitorExceedWarnThreshold() throws InterruptedException {\n        QuorumPeerConfig qpConfig = mock(QuorumPeerConfig.class);\n        when(qpConfig.getJvmPauseSleepTimeMs()).thenReturn(sleepTime);\n        when(qpConfig.getJvmPauseWarnThresholdMs()).thenReturn(warnTH);\n\n        pauseMonitor = new JvmPauseMonitor(qpConfig);\n        pauseMonitor.serviceStart();\n\n        Assert.assertEquals(sleepTime, Long.valueOf(pauseMonitor.sleepTimeMs));\n        Assert.assertEquals(warnTH, Long.valueOf(pauseMonitor.warnThresholdMs));\n\n        while(pauseMonitor.getNumGcWarnThresholdExceeded() == 0) {\n            Thread.sleep(200);\n        }\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/util/JvmPauseMonitorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"e9adf6ee09ef18258653d65c851fa84c3cd1a51d","commitMessage":"@@@ZOOKEEPER-3037: Add JVMPauseMonitor\n\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-3037\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #904 from nkalmar/ZOOKEEPER-3037 and squashes the following commits:\n\na6105324b [Norbert Kalmar] ZOOKEEPER-3037 - add serviceStop() and improve unit tests\n7d0baaa46 [Norbert Kalmar] ZOOKEEPER-3037 - refactor unit tests\n97d2c6103 [Norbert Kalmar] ZOOKEEPER-3037 - cite hadoop-common as source\n3661389e4 [Norbert Kalmar] ZOOKEEPER-3037 - Add unit test and various improvements\nf30975765 [Norbert Kalmar] ZOOKEEPER-3037 - Add JvmPauseMonitor\n","date":"2019-04-19 01:17:48","modifiedFileCount":"8","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testJvmPauseMonitorExceedInfoThreshold() throws InterruptedException {\n        QuorumPeerConfig qpConfig = mock(QuorumPeerConfig.class);\n        when(qpConfig.getJvmPauseSleepTimeMs()).thenReturn(sleepTime);\n        when(qpConfig.getJvmPauseInfoThresholdMs()).thenReturn(infoTH);\n\n        pauseMonitor = new JvmPauseMonitor(qpConfig);\n        pauseMonitor.serviceStart();\n\n        assertEquals(sleepTime, Long.valueOf(pauseMonitor.sleepTimeMs));\n        assertEquals(infoTH, Long.valueOf(pauseMonitor.infoThresholdMs));\n\n        while (pauseMonitor.getNumGcInfoThresholdExceeded() == 0) {\n            Thread.sleep(200);\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":50,"groupId":"10276","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testJvmPauseMonitorExceedInfoThreshold","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/58/b1902a2b2c4e6c812b4d46563a447af8ae2e56.src","preCode":"    public void testJvmPauseMonitorExceedInfoThreshold() throws InterruptedException {\n        QuorumPeerConfig qpConfig = mock(QuorumPeerConfig.class);\n        when(qpConfig.getJvmPauseSleepTimeMs()).thenReturn(sleepTime);\n        when(qpConfig.getJvmPauseInfoThresholdMs()).thenReturn(infoTH);\n\n        pauseMonitor = new JvmPauseMonitor(qpConfig);\n        pauseMonitor.serviceStart();\n\n        Assert.assertEquals(sleepTime, Long.valueOf(pauseMonitor.sleepTimeMs));\n        Assert.assertEquals(infoTH, Long.valueOf(pauseMonitor.infoThresholdMs));\n\n        while(pauseMonitor.getNumGcInfoThresholdExceeded() == 0) {\n            Thread.sleep(200);\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/util/JvmPauseMonitorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testJvmPauseMonitorExceedWarnThreshold() throws InterruptedException {\n        QuorumPeerConfig qpConfig = mock(QuorumPeerConfig.class);\n        when(qpConfig.getJvmPauseSleepTimeMs()).thenReturn(sleepTime);\n        when(qpConfig.getJvmPauseWarnThresholdMs()).thenReturn(warnTH);\n\n        pauseMonitor = new JvmPauseMonitor(qpConfig);\n        pauseMonitor.serviceStart();\n\n        assertEquals(sleepTime, Long.valueOf(pauseMonitor.sleepTimeMs));\n        assertEquals(warnTH, Long.valueOf(pauseMonitor.warnThresholdMs));\n\n        while (pauseMonitor.getNumGcWarnThresholdExceeded() == 0) {\n            Thread.sleep(200);\n        }\n\n    }\n","date":"2019-08-17 23:13:15","endLine":68,"groupId":"10276","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testJvmPauseMonitorExceedWarnThreshold","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/58/b1902a2b2c4e6c812b4d46563a447af8ae2e56.src","preCode":"    public void testJvmPauseMonitorExceedWarnThreshold() throws InterruptedException {\n        QuorumPeerConfig qpConfig = mock(QuorumPeerConfig.class);\n        when(qpConfig.getJvmPauseSleepTimeMs()).thenReturn(sleepTime);\n        when(qpConfig.getJvmPauseWarnThresholdMs()).thenReturn(warnTH);\n\n        pauseMonitor = new JvmPauseMonitor(qpConfig);\n        pauseMonitor.serviceStart();\n\n        Assert.assertEquals(sleepTime, Long.valueOf(pauseMonitor.sleepTimeMs));\n        Assert.assertEquals(warnTH, Long.valueOf(pauseMonitor.warnThresholdMs));\n\n        while(pauseMonitor.getNumGcWarnThresholdExceeded() == 0) {\n            Thread.sleep(200);\n        }\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/util/JvmPauseMonitorTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
