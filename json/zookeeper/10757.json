[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public boolean equals(Object o) {\n        if (!(o instanceof QuorumMaj)) {\n            return false;\n        }\n        QuorumMaj qm = (QuorumMaj) o;\n        if (qm.getVersion() == version)\n            return true;\n        if (allMembers.size() != qm.getAllMembers().size())\n            return false;\n        for (QuorumServer qs : allMembers.values()) {\n            QuorumServer qso = qm.getAllMembers().get(qs.id);\n            if (qso == null || !qs.equals(qso))\n                return false;\n        }\n        return true;\n    }\n","date":"2018-10-05 20:25:43","endLine":63,"groupId":"2874","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/00/03c2aaa40fe15e81779077459d94f99878c261.src","preCode":"    public boolean equals(Object o) {\n        if (!(o instanceof QuorumMaj)) {\n            return false;\n        }\n        QuorumMaj qm = (QuorumMaj) o;\n        if (qm.getVersion() == version)\n            return true;\n        if (allMembers.size() != qm.getAllMembers().size())\n            return false;\n        for (QuorumServer qs : allMembers.values()) {\n            QuorumServer qso = qm.getAllMembers().get(qs.id);\n            if (qso == null || !qs.equals(qso))\n                return false;\n        }\n        return true;\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"   public boolean equals(Object o){\n       if (!(o instanceof QuorumHierarchical)) {\n           return false;           \n       }       \n       QuorumHierarchical qm = (QuorumHierarchical)o;\n       if (qm.getVersion() == version) return true;\n       if ((allMembers.size()!=qm.getAllMembers().size()) ||\n           (serverWeight.size() != qm.serverWeight.size()) ||\n           (groupWeight.size() != qm.groupWeight.size()) ||\n            (serverGroup.size() != qm.serverGroup.size())) {\n           return false;\n       }   \n       for (QuorumServer qs: allMembers.values()){\n           QuorumServer qso = qm.getAllMembers().get(qs.id);\n           if (qso == null || !qs.equals(qso)) return false;\n       }\n       for (Entry<Long, Long> entry : serverWeight.entrySet()) {\n           if (!entry.getValue().equals(qm.serverWeight.get(entry.getKey())))\n               return false;\n       }\n       for (Entry<Long, Long> entry : groupWeight.entrySet()) {\n           if (!entry.getValue().equals(qm.groupWeight.get(entry.getKey())))\n               return false;\n       }\n       for (Entry<Long, Long> entry : serverGroup.entrySet()) {\n           if (!entry.getValue().equals(qm.serverGroup.get(entry.getKey())))\n               return false;\n       }\n       return true;\n   }\n","date":"2018-10-05 20:25:43","endLine":118,"groupId":"2874","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/40/4aa8ceadf23e37ae807e4ad358421a06b21a6d.src","preCode":"   public boolean equals(Object o){\n       if (!(o instanceof QuorumHierarchical)) {\n           return false;           \n       }       \n       QuorumHierarchical qm = (QuorumHierarchical)o;\n       if (qm.getVersion() == version) return true;\n       if ((allMembers.size()!=qm.getAllMembers().size()) ||\n           (serverWeight.size() != qm.serverWeight.size()) ||\n           (groupWeight.size() != qm.groupWeight.size()) ||\n            (serverGroup.size() != qm.serverGroup.size())) {\n           return false;\n       }   \n       for (QuorumServer qs: allMembers.values()){\n           QuorumServer qso = qm.getAllMembers().get(qs.id);\n           if (qso == null || !qs.equals(qso)) return false;\n       }\n       for (Entry<Long, Long> entry : serverWeight.entrySet()) {\n           if (!entry.getValue().equals(qm.serverWeight.get(entry.getKey())))\n               return false;\n       }\n       for (Entry<Long, Long> entry : groupWeight.entrySet()) {\n           if (!entry.getValue().equals(qm.groupWeight.get(entry.getKey())))\n               return false;\n       }\n       for (Entry<Long, Long> entry : serverGroup.entrySet()) {\n           if (!entry.getValue().equals(qm.serverGroup.get(entry.getKey())))\n               return false;\n       }\n       return true;\n   }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public boolean equals(Object o) {\n        if (!(o instanceof QuorumMaj)) {\n            return false;\n        }\n        QuorumMaj qm = (QuorumMaj) o;\n        if (qm.getVersion() == version) {\n            return true;\n        }\n        if (allMembers.size() != qm.getAllMembers().size()) {\n            return false;\n        }\n        for (QuorumServer qs : allMembers.values()) {\n            QuorumServer qso = qm.getAllMembers().get(qs.id);\n            if (qso == null || !qs.equals(qso)) {\n                return false;\n            }\n        }\n        return true;\n    }\n","date":"2019-08-17 23:13:15","endLine":66,"groupId":"10757","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/6e/6f1c2887d2bfcc1682f0df39ec07bbe4bcac31.src","preCode":"    public boolean equals(Object o) {\n        if (!(o instanceof QuorumMaj)) {\n            return false;\n        }\n        QuorumMaj qm = (QuorumMaj) o;\n        if (qm.getVersion() == version)\n            return true;\n        if (allMembers.size() != qm.getAllMembers().size())\n            return false;\n        for (QuorumServer qs : allMembers.values()) {\n            QuorumServer qso = qm.getAllMembers().get(qs.id);\n            if (qso == null || !qs.equals(qso))\n                return false;\n        }\n        return true;\n    }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public boolean equals(Object o) {\n        if (!(o instanceof QuorumHierarchical)) {\n            return false;\n        }\n        QuorumHierarchical qm = (QuorumHierarchical) o;\n        if (qm.getVersion() == version) {\n            return true;\n        }\n        if ((allMembers.size() != qm.getAllMembers().size())\n            || (serverWeight.size() != qm.serverWeight.size())\n            || (groupWeight.size() != qm.groupWeight.size())\n            || (serverGroup.size() != qm.serverGroup.size())) {\n            return false;\n        }\n        for (QuorumServer qs : allMembers.values()) {\n            QuorumServer qso = qm.getAllMembers().get(qs.id);\n            if (qso == null || !qs.equals(qso)) {\n                return false;\n            }\n        }\n        for (Entry<Long, Long> entry : serverWeight.entrySet()) {\n            if (!entry.getValue().equals(qm.serverWeight.get(entry.getKey()))) {\n                return false;\n            }\n        }\n        for (Entry<Long, Long> entry : groupWeight.entrySet()) {\n            if (!entry.getValue().equals(qm.groupWeight.get(entry.getKey()))) {\n                return false;\n            }\n        }\n        for (Entry<Long, Long> entry : serverGroup.entrySet()) {\n            if (!entry.getValue().equals(qm.serverGroup.get(entry.getKey()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n","date":"2019-08-17 23:13:15","endLine":122,"groupId":"10757","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/f4/5aa1bced5c3b8665e12d4d71fae4c4a9566ab3.src","preCode":"   public boolean equals(Object o){\n       if (!(o instanceof QuorumHierarchical)) {\n           return false;           \n       }       \n       QuorumHierarchical qm = (QuorumHierarchical)o;\n       if (qm.getVersion() == version) return true;\n       if ((allMembers.size()!=qm.getAllMembers().size()) ||\n           (serverWeight.size() != qm.serverWeight.size()) ||\n           (groupWeight.size() != qm.groupWeight.size()) ||\n            (serverGroup.size() != qm.serverGroup.size())) {\n           return false;\n       }   \n       for (QuorumServer qs: allMembers.values()){\n           QuorumServer qso = qm.getAllMembers().get(qs.id);\n           if (qso == null || !qs.equals(qso)) return false;\n       }\n       for (Entry<Long, Long> entry : serverWeight.entrySet()) {\n           if (!entry.getValue().equals(qm.serverWeight.get(entry.getKey())))\n               return false;\n       }\n       for (Entry<Long, Long> entry : groupWeight.entrySet()) {\n           if (!entry.getValue().equals(qm.groupWeight.get(entry.getKey())))\n               return false;\n       }\n       for (Entry<Long, Long> entry : serverGroup.entrySet()) {\n           if (!entry.getValue().equals(qm.serverGroup.get(entry.getKey())))\n               return false;\n       }\n       return true;\n   }\n","realPath":"zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"}]
