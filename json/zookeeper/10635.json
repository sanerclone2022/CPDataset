[{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testMultiGetChildrenAuthentication() throws KeeperException, InterruptedException {\n        List<ACL> writeOnly = Collections.singletonList(new ACL(ZooDefs.Perms.WRITE, new Id(\"world\", \"anyone\")));\n        zk.create(\"/foo_auth\", null, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_auth/bar\", null, Ids.READ_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_no_auth\", null, writeOnly, CreateMode.PERSISTENT);\n\n        \r\n        List<OpResult> multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_auth\")));\n        assertEquals(multiChildrenList.size(), 1);\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.GetChildrenResult);\n        List<String> childrenList = ((OpResult.GetChildrenResult) multiChildrenList.get(0)).getChildren();\n        assertEquals(childrenList.size(), 1);\n        assertEquals(childrenList.get(0), \"bar\");\n\n        \r\n        multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_no_auth\")));\n\n        assertEquals(multiChildrenList.size(), 1);\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.ErrorResult);\n        assertEquals(\"Expected NoAuthException for getting the children of a write only node\", ((OpResult.ErrorResult) multiChildrenList.get(0)).getErr(), KeeperException.Code.NOAUTH.intValue());\n\n    }\n","date":"2019-08-17 23:13:15","endLine":799,"groupId":"3797","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultiGetChildrenAuthentication","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/2e/48600da00aac97ff91a16afb6f720b988581bb.src","preCode":"    public void testMultiGetChildrenAuthentication() throws KeeperException, InterruptedException {\n        List<ACL> writeOnly = Collections.singletonList(new ACL(ZooDefs.Perms.WRITE, new Id(\"world\", \"anyone\")));\n        zk.create(\"/foo_auth\", null, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_auth/bar\", null, Ids.READ_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_no_auth\", null, writeOnly, CreateMode.PERSISTENT);\n\n        \r\n        List<OpResult> multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_auth\")));\n        assertEquals(multiChildrenList.size(), 1);\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.GetChildrenResult);\n        List<String> childrenList = ((OpResult.GetChildrenResult) multiChildrenList.get(0)).getChildren();\n        assertEquals(childrenList.size(), 1);\n        assertEquals(childrenList.get(0), \"bar\");\n\n        \r\n        multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_no_auth\")));\n\n        assertEquals(multiChildrenList.size(), 1);\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.ErrorResult);\n        assertEquals(\"Expected NoAuthException for getting the children of a write only node\", ((OpResult.ErrorResult) multiChildrenList.get(0)).getErr(), KeeperException.Code.NOAUTH.intValue());\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/MultiOperationTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":778,"status":"MB"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testMultiGetChildrenMixedAuthenticationCorrectFirst() throws KeeperException, InterruptedException {\n        List<ACL> writeOnly = Collections.singletonList(new ACL(ZooDefs.Perms.WRITE, new Id(\"world\", \"anyone\")));\n        zk.create(\"/foo_auth\", null, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_auth/bar\", null, Ids.READ_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_no_auth\", null, writeOnly, CreateMode.PERSISTENT);\n\n        \r\n        \r\n        List<OpResult> multiChildrenList;\n        multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_auth\"), Op.getChildren(\"/foo_no_auth\")));\n        assertSame(multiChildrenList.size(), 2);\n\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.GetChildrenResult);\n        List<String> childrenList = ((OpResult.GetChildrenResult) multiChildrenList.get(0)).getChildren();\n        assertEquals(childrenList.size(), 1);\n        assertEquals(childrenList.get(0), \"bar\");\n\n        assertTrue(multiChildrenList.get(1) instanceof OpResult.ErrorResult);\n        assertEquals(\"Expected NoAuthException for getting the children of a write only node\", ((OpResult.ErrorResult) multiChildrenList.get(1)).getErr(), KeeperException.Code.NOAUTH.intValue());\n    }\n","date":"2019-08-17 23:13:15","endLine":842,"groupId":"3802","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiGetChildrenMixedAuthenticationCorrectFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/2e/48600da00aac97ff91a16afb6f720b988581bb.src","preCode":"    public void testMultiGetChildrenMixedAuthenticationCorrectFirst() throws KeeperException, InterruptedException {\n        List<ACL> writeOnly = Collections.singletonList(new ACL(ZooDefs.Perms.WRITE, new Id(\"world\", \"anyone\")));\n        zk.create(\"/foo_auth\", null, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_auth/bar\", null, Ids.READ_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_no_auth\", null, writeOnly, CreateMode.PERSISTENT);\n\n        \r\n        \r\n        List<OpResult> multiChildrenList;\n        multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_auth\"), Op.getChildren(\"/foo_no_auth\")));\n        assertSame(multiChildrenList.size(), 2);\n\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.GetChildrenResult);\n        List<String> childrenList = ((OpResult.GetChildrenResult) multiChildrenList.get(0)).getChildren();\n        assertEquals(childrenList.size(), 1);\n        assertEquals(childrenList.get(0), \"bar\");\n\n        assertTrue(multiChildrenList.get(1) instanceof OpResult.ErrorResult);\n        assertEquals(\"Expected NoAuthException for getting the children of a write only node\", ((OpResult.ErrorResult) multiChildrenList.get(1)).getErr(), KeeperException.Code.NOAUTH.intValue());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/MultiOperationTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":823,"status":"MB"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testMultiGetChildrenAuthentication(boolean useAsync) throws KeeperException, InterruptedException {\n        List<ACL> writeOnly = Collections.singletonList(new ACL(ZooDefs.Perms.WRITE, new Id(\"world\", \"anyone\")));\n        zk.create(\"/foo_auth\", null, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_auth/bar\", null, Ids.READ_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_no_auth\", null, writeOnly, CreateMode.PERSISTENT);\n\n        \r\n        List<OpResult> multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_auth\")), useAsync);\n        assertEquals(multiChildrenList.size(), 1);\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.GetChildrenResult);\n        List<String> childrenList = ((OpResult.GetChildrenResult) multiChildrenList.get(0)).getChildren();\n        assertEquals(childrenList.size(), 1);\n        assertEquals(childrenList.get(0), \"bar\");\n\n        \r\n        multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_no_auth\")), useAsync);\n\n        assertEquals(multiChildrenList.size(), 1);\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.ErrorResult);\n        assertEquals(((OpResult.ErrorResult) multiChildrenList.get(0)).getErr(), KeeperException.Code.NOAUTH.intValue(),\n                \"Expected NoAuthException for getting the children of a write only node\");\n\n    }\n","date":"2020-08-04 21:01:52","endLine":830,"groupId":"10635","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testMultiGetChildrenAuthentication","params":"(booleanuseAsync)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/4f/f593222fe15df710f0d422f0f59b71e3793137.src","preCode":"    public void testMultiGetChildrenAuthentication() throws KeeperException, InterruptedException {\n        List<ACL> writeOnly = Collections.singletonList(new ACL(ZooDefs.Perms.WRITE, new Id(\"world\", \"anyone\")));\n        zk.create(\"/foo_auth\", null, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_auth/bar\", null, Ids.READ_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_no_auth\", null, writeOnly, CreateMode.PERSISTENT);\n\n        \r\n        List<OpResult> multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_auth\")));\n        assertEquals(multiChildrenList.size(), 1);\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.GetChildrenResult);\n        List<String> childrenList = ((OpResult.GetChildrenResult) multiChildrenList.get(0)).getChildren();\n        assertEquals(childrenList.size(), 1);\n        assertEquals(childrenList.get(0), \"bar\");\n\n        \r\n        multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_no_auth\")));\n\n        assertEquals(multiChildrenList.size(), 1);\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.ErrorResult);\n        assertEquals(\"Expected NoAuthException for getting the children of a write only node\", ((OpResult.ErrorResult) multiChildrenList.get(0)).getErr(), KeeperException.Code.NOAUTH.intValue());\n\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/MultiOperationTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":808,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testMultiGetChildrenMixedAuthenticationCorrectFirst(boolean useAsync) throws KeeperException, InterruptedException {\n        List<ACL> writeOnly = Collections.singletonList(new ACL(ZooDefs.Perms.WRITE, new Id(\"world\", \"anyone\")));\n        zk.create(\"/foo_auth\", null, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_auth/bar\", null, Ids.READ_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_no_auth\", null, writeOnly, CreateMode.PERSISTENT);\n\n        \r\n        \r\n        List<OpResult> multiChildrenList;\n        multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_auth\"), Op.getChildren(\"/foo_no_auth\")), useAsync);\n        assertSame(multiChildrenList.size(), 2);\n\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.GetChildrenResult);\n        List<String> childrenList = ((OpResult.GetChildrenResult) multiChildrenList.get(0)).getChildren();\n        assertEquals(childrenList.size(), 1);\n        assertEquals(childrenList.get(0), \"bar\");\n\n        assertTrue(multiChildrenList.get(1) instanceof OpResult.ErrorResult);\n        assertEquals(((OpResult.ErrorResult) multiChildrenList.get(1)).getErr(), KeeperException.Code.NOAUTH.intValue(),\n                \"Expected NoAuthException for getting the children of a write only node\");\n    }\n","date":"2020-08-04 21:01:52","endLine":877,"groupId":"10635","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testMultiGetChildrenMixedAuthenticationCorrectFirst","params":"(booleanuseAsync)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/4f/f593222fe15df710f0d422f0f59b71e3793137.src","preCode":"    public void testMultiGetChildrenMixedAuthenticationCorrectFirst() throws KeeperException, InterruptedException {\n        List<ACL> writeOnly = Collections.singletonList(new ACL(ZooDefs.Perms.WRITE, new Id(\"world\", \"anyone\")));\n        zk.create(\"/foo_auth\", null, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_auth/bar\", null, Ids.READ_ACL_UNSAFE, CreateMode.PERSISTENT);\n        zk.create(\"/foo_no_auth\", null, writeOnly, CreateMode.PERSISTENT);\n\n        \r\n        \r\n        List<OpResult> multiChildrenList;\n        multiChildrenList = multi(zk, Arrays.asList(Op.getChildren(\"/foo_auth\"), Op.getChildren(\"/foo_no_auth\")));\n        assertSame(multiChildrenList.size(), 2);\n\n        assertTrue(multiChildrenList.get(0) instanceof OpResult.GetChildrenResult);\n        List<String> childrenList = ((OpResult.GetChildrenResult) multiChildrenList.get(0)).getChildren();\n        assertEquals(childrenList.size(), 1);\n        assertEquals(childrenList.get(0), \"bar\");\n\n        assertTrue(multiChildrenList.get(1) instanceof OpResult.ErrorResult);\n        assertEquals(\"Expected NoAuthException for getting the children of a write only node\", ((OpResult.ErrorResult) multiChildrenList.get(1)).getErr(), KeeperException.Code.NOAUTH.intValue());\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/test/MultiOperationTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":857,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
