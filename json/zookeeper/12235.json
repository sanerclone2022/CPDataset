[{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    public void testRollingRestartWithoutMembershipChange() throws Exception {\n        int serverCount = 3;\n        String config = generateNewQuorumConfig(serverCount);\n        List<String> joiningServers = new ArrayList<>();\n        QuorumPeerTestBase.MainThread mt[] = new QuorumPeerTestBase.MainThread[serverCount];\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i),\n                    config, false);\n            mt[i].start();\n            joiningServers.add(serverAddress.get(i));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            Assert.assertTrue(\"waiting for server \" + i + \" being up\",\n                    ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPorts.get(i),\n                            CONNECTION_TIMEOUT));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i].shutdown();\n            mt[i].start();\n            verifyQuorumConfig(i, joiningServers, null);\n            verifyQuorumMembers(mt[i]);\n        }\n\n        for (int i = 0; i < serverCount; i++) {\n            mt[i].shutdown();\n        }\n    }\n","date":"2018-10-05 20:25:43","endLine":159,"groupId":"2309","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRollingRestartWithoutMembershipChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/65/ec469eea8b3c69a4ec29b88344a6de4f224eab.src","preCode":"    public void testRollingRestartWithoutMembershipChange() throws Exception {\n        int serverCount = 3;\n        String config = generateNewQuorumConfig(serverCount);\n        List<String> joiningServers = new ArrayList<>();\n        QuorumPeerTestBase.MainThread mt[] = new QuorumPeerTestBase.MainThread[serverCount];\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i),\n                    config, false);\n            mt[i].start();\n            joiningServers.add(serverAddress.get(i));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            Assert.assertTrue(\"waiting for server \" + i + \" being up\",\n                    ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPorts.get(i),\n                            CONNECTION_TIMEOUT));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i].shutdown();\n            mt[i].start();\n            verifyQuorumConfig(i, joiningServers, null);\n            verifyQuorumMembers(mt[i]);\n        }\n\n        for (int i = 0; i < serverCount; i++) {\n            mt[i].shutdown();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ReconfigRollingRestartCompatibilityTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"},{"authorDate":"2018-10-05 20:25:43","commitOrder":1,"curCode":"    private void verifyQuorumMembers(QuorumPeerTestBase.MainThread mt) {\n        Set<String> expectedConfigs = new HashSet<>();\n        for (String config : serverAddress.values()) {\n            expectedConfigs.add(config.substring(config.indexOf('=') + 1));\n        }\n        verifyQuorumMembers(mt, expectedConfigs);\n    }\n","date":"2018-10-05 20:25:43","endLine":243,"groupId":"2314","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyQuorumMembers","params":"(QuorumPeerTestBase.MainThreadmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/65/ec469eea8b3c69a4ec29b88344a6de4f224eab.src","preCode":"    private void verifyQuorumMembers(QuorumPeerTestBase.MainThread mt) {\n        Set<String> expectedConfigs = new HashSet<>();\n        for (String config : serverAddress.values()) {\n            expectedConfigs.add(config.substring(config.indexOf('=') + 1));\n        }\n        verifyQuorumMembers(mt, expectedConfigs);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ReconfigRollingRestartCompatibilityTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"B"}],"commitId":"faa7cec71fddfb959a7d67923acffdb67d93c953","commitMessage":"@@@ZOOKEEPER-3032: MAVEN MIGRATION - move java server.  client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org.  andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server.  client\n","date":"2018-10-05 20:25:43","modifiedFileCount":"0","status":"B","submitter":"Norbert Kalmar"},{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testRollingRestartWithoutMembershipChange() throws Exception {\n        int serverCount = 3;\n        String config = generateNewQuorumConfig(serverCount);\n        List<String> joiningServers = new ArrayList<>();\n        QuorumPeerTestBase.MainThread[] mt = new QuorumPeerTestBase.MainThread[serverCount];\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);\n            mt[i].start();\n            joiningServers.add(serverAddress.get(i));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            assertTrue(\"waiting for server \" + i + \" being up\", ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPorts.get(i), CONNECTION_TIMEOUT));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i].shutdown();\n            mt[i].start();\n            verifyQuorumConfig(i, joiningServers, null);\n            verifyQuorumMembers(mt[i]);\n        }\n\n        for (int i = 0; i < serverCount; i++) {\n            mt[i].shutdown();\n        }\n    }\n","date":"2019-08-17 23:13:15","endLine":148,"groupId":"2309","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRollingRestartWithoutMembershipChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/c4/d2bd7eaa7ccc95a122f22f9d1639bc58e8ff73.src","preCode":"    public void testRollingRestartWithoutMembershipChange() throws Exception {\n        int serverCount = 3;\n        String config = generateNewQuorumConfig(serverCount);\n        List<String> joiningServers = new ArrayList<>();\n        QuorumPeerTestBase.MainThread mt[] = new QuorumPeerTestBase.MainThread[serverCount];\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i),\n                    config, false);\n            mt[i].start();\n            joiningServers.add(serverAddress.get(i));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            Assert.assertTrue(\"waiting for server \" + i + \" being up\",\n                    ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPorts.get(i),\n                            CONNECTION_TIMEOUT));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i].shutdown();\n            mt[i].start();\n            verifyQuorumConfig(i, joiningServers, null);\n            verifyQuorumMembers(mt[i]);\n        }\n\n        for (int i = 0; i < serverCount; i++) {\n            mt[i].shutdown();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ReconfigRollingRestartCompatibilityTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2018-10-05 20:25:43","commitOrder":2,"curCode":"    private void verifyQuorumMembers(QuorumPeerTestBase.MainThread mt) {\n        Set<String> expectedConfigs = new HashSet<>();\n        for (String config : serverAddress.values()) {\n            expectedConfigs.add(config.substring(config.indexOf('=') + 1));\n        }\n        verifyQuorumMembers(mt, expectedConfigs);\n    }\n","date":"2018-10-05 20:25:43","endLine":243,"groupId":"2314","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyQuorumMembers","params":"(QuorumPeerTestBase.MainThreadmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/65/ec469eea8b3c69a4ec29b88344a6de4f224eab.src","preCode":"    private void verifyQuorumMembers(QuorumPeerTestBase.MainThread mt) {\n        Set<String> expectedConfigs = new HashSet<>();\n        for (String config : serverAddress.values()) {\n            expectedConfigs.add(config.substring(config.indexOf('=') + 1));\n        }\n        verifyQuorumMembers(mt, expectedConfigs);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ReconfigRollingRestartCompatibilityTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"N"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2018-10-05 20:25:43","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testRollingRestartWithoutMembershipChange() throws Exception {\n        int serverCount = 3;\n        String config = generateNewQuorumConfig(serverCount);\n        List<String> joiningServers = new ArrayList<>();\n        QuorumPeerTestBase.MainThread[] mt = new QuorumPeerTestBase.MainThread[serverCount];\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);\n            mt[i].start();\n            joiningServers.add(serverAddress.get(i));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPorts.get(i), CONNECTION_TIMEOUT), \"waiting for server \" + i + \" being up\");\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i].shutdown();\n            mt[i].start();\n            verifyQuorumConfig(i, joiningServers, null);\n            verifyQuorumMembers(mt[i]);\n        }\n\n        for (int i = 0; i < serverCount; i++) {\n            mt[i].shutdown();\n        }\n    }\n","date":"2020-08-04 21:01:52","endLine":152,"groupId":"12235","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testRollingRestartWithoutMembershipChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/62/db39b413fdff692eb02fb1a0c17a4c7dc08ed9.src","preCode":"    public void testRollingRestartWithoutMembershipChange() throws Exception {\n        int serverCount = 3;\n        String config = generateNewQuorumConfig(serverCount);\n        List<String> joiningServers = new ArrayList<>();\n        QuorumPeerTestBase.MainThread[] mt = new QuorumPeerTestBase.MainThread[serverCount];\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);\n            mt[i].start();\n            joiningServers.add(serverAddress.get(i));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            assertTrue(\"waiting for server \" + i + \" being up\", ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPorts.get(i), CONNECTION_TIMEOUT));\n        }\n\n        for (int i = 0; i < serverCount; ++i) {\n            mt[i].shutdown();\n            mt[i].start();\n            verifyQuorumConfig(i, joiningServers, null);\n            verifyQuorumMembers(mt[i]);\n        }\n\n        for (int i = 0; i < serverCount; i++) {\n            mt[i].shutdown();\n        }\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ReconfigRollingRestartCompatibilityTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"},{"authorDate":"2018-10-05 20:25:43","commitOrder":3,"curCode":"    private void verifyQuorumMembers(QuorumPeerTestBase.MainThread mt) {\n        Set<String> expectedConfigs = new HashSet<>();\n        for (String config : serverAddress.values()) {\n            expectedConfigs.add(config.substring(config.indexOf('=') + 1));\n        }\n        verifyQuorumMembers(mt, expectedConfigs);\n    }\n","date":"2018-10-05 20:25:43","endLine":243,"groupId":"12235","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyQuorumMembers","params":"(QuorumPeerTestBase.MainThreadmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/65/ec469eea8b3c69a4ec29b88344a6de4f224eab.src","preCode":"    private void verifyQuorumMembers(QuorumPeerTestBase.MainThread mt) {\n        Set<String> expectedConfigs = new HashSet<>();\n        for (String config : serverAddress.values()) {\n            expectedConfigs.add(config.substring(config.indexOf('=') + 1));\n        }\n        verifyQuorumMembers(mt, expectedConfigs);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ReconfigRollingRestartCompatibilityTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"N"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
