[{"authorTime":"2019-08-01 13:31:29","codes":[{"authorDate":"2019-08-01 13:31:29","commitOrder":1,"curCode":"    public void testCreateFail() throws Exception {\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.create(CHILD_PATH, DATA, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        }\n        catch (KeeperException.NoAuthException e) {}\n\n        Assert.assertEquals(\"OutstandingRequests not decremented\",\n                            0,\n                            connectedServer.getInProcess());\n\n        assertTransactionState(\"Transaction state on Leader after failed create\", lastxid);\n    }\n","date":"2019-08-01 13:31:29","endLine":165,"groupId":"898","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/0c/869a234d8ae6b8fa6ee5aae04c8b79c00ab8a1.src","preCode":"    public void testCreateFail() throws Exception {\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.create(CHILD_PATH, DATA, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        }\n        catch (KeeperException.NoAuthException e) {}\n\n        Assert.assertEquals(\"OutstandingRequests not decremented\",\n                            0,\n                            connectedServer.getInProcess());\n\n        assertTransactionState(\"Transaction state on Leader after failed create\", lastxid);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/EagerACLFilterTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"},{"authorDate":"2019-08-01 13:31:29","commitOrder":1,"curCode":"    public void testDeleteFail() throws Exception {\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        zkClient.create(CHILD_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.delete(CHILD_PATH, -1);\n        }\n        catch (KeeperException.NoAuthException e) {}\n\n        Assert.assertEquals(\"OutstandingRequests not decremented\",\n                            0,\n                            connectedServer.getInProcess());\n\n        assertTransactionState(\"Transaction state on Leader after failed delete\", lastxid);\n    }\n","date":"2019-08-01 13:31:29","endLine":208,"groupId":"4609","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/0c/869a234d8ae6b8fa6ee5aae04c8b79c00ab8a1.src","preCode":"    public void testDeleteFail() throws Exception {\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        zkClient.create(CHILD_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.delete(CHILD_PATH, -1);\n        }\n        catch (KeeperException.NoAuthException e) {}\n\n        Assert.assertEquals(\"OutstandingRequests not decremented\",\n                            0,\n                            connectedServer.getInProcess());\n\n        assertTransactionState(\"Transaction state on Leader after failed delete\", lastxid);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/EagerACLFilterTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"}],"commitId":"b2f5548bd5757edbf1887838a487a90523ed2b52","commitMessage":"@@@ZOOKEEPER-3418: Improve quorum throughput through eager ACL checks of requests on local servers.\n\nServing write requests that change the state of the system requires quorum operations.  and in some cases.  the quorum operations can be avoided if the requests are doomed to fail. ACL check failure is such a case. To optimize for this case.  we elevate the ACL check logic and perform eager ACL check on local server (where the requests are received).  and fail fast.  before sending the requests to leader.\n\nAs with any features.  there is a feature flag that can control this feature on.  or off (default). This feature is also forward compatible in that for new any new Op code (and some existing Op code we did not explicit check against).  they will pass the check and (potentially) fail on leader side.  instead of being prematurely filtered out on local server.\n\nThe end result is better throughput and stability of the quorum for certain workloads.\n\nAuthor: Michael Han <lhan@twitter.com>\n\nReviewers: Andor Molnar <andor@apache.org>.  Enrico Olivelli <eolivelli@apache.org>\n\nCloses #971 from hanm/twitter/5c6bbfac811d29228fd97a4621fd6ba547fed178\n","date":"2019-08-01 13:31:29","modifiedFileCount":"9","status":"B","submitter":"Michael Han"},{"authorTime":"2019-08-17 23:13:15","codes":[{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testCreateFail() throws Exception {\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.create(CHILD_PATH, DATA, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        } catch (KeeperException.NoAuthException e) {\n        }\n\n        assertEquals(\"OutstandingRequests not decremented\", 0, connectedServer.getInProcess());\n\n        assertTransactionState(\"Transaction state on Leader after failed create\", lastxid);\n    }\n","date":"2019-08-17 23:13:15","endLine":148,"groupId":"898","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/fa/18bf0e213bb48eea70c9413da5be41a1d9ea2a.src","preCode":"    public void testCreateFail() throws Exception {\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.create(CHILD_PATH, DATA, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        }\n        catch (KeeperException.NoAuthException e) {}\n\n        Assert.assertEquals(\"OutstandingRequests not decremented\",\n                            0,\n                            connectedServer.getInProcess());\n\n        assertTransactionState(\"Transaction state on Leader after failed create\", lastxid);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/EagerACLFilterTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"},{"authorDate":"2019-08-17 23:13:15","commitOrder":2,"curCode":"    public void testDeleteFail() throws Exception {\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        zkClient.create(CHILD_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.delete(CHILD_PATH, -1);\n        } catch (KeeperException.NoAuthException e) {\n        }\n\n        assertEquals(\"OutstandingRequests not decremented\", 0, connectedServer.getInProcess());\n\n        assertTransactionState(\"Transaction state on Leader after failed delete\", lastxid);\n    }\n","date":"2019-08-17 23:13:15","endLine":185,"groupId":"4609","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/fa/18bf0e213bb48eea70c9413da5be41a1d9ea2a.src","preCode":"    public void testDeleteFail() throws Exception {\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        zkClient.create(CHILD_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.delete(CHILD_PATH, -1);\n        }\n        catch (KeeperException.NoAuthException e) {}\n\n        Assert.assertEquals(\"OutstandingRequests not decremented\",\n                            0,\n                            connectedServer.getInProcess());\n\n        assertTransactionState(\"Transaction state on Leader after failed delete\", lastxid);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/EagerACLFilterTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"fe940cdd8fb23ba09684cefb73233d570f4a20fa","commitMessage":"@@@ZOOKEEPER-3475: Enable Checkstyle configuration on zookeeper-server\n\n- [x] org/apache/zookeeper\n- [x] org/apache/zookeeper/admin\n- [x] org/apache/zookeeper/cli\n- [x] org/apache/zookeeper/client\n- [x] org/apache/zookeeper/common\n- [x] org/apache/zookeeper/jmx\n- [x] org/apache/zookeeper/metrics\n- [x] org/apache/zookeeper/metrics/impl\n- [x] org/apache/zookeeper/server\n- [x] org/apache/zookeeper/server/admin\n- [x] org/apache/zookeeper/server/auth\n- [x] org/apache/zookeeper/server/command\n- [x] org/apache/zookeeper/server/metric\n- [x] org/apache/zookeeper/server/persistence\n- [x] org/apache/zookeeper/server/quorum\n- [x] org/apache/zookeeper/server/quorum/auth\n- [x] org/apache/zookeeper/server/quorum/flexible\n- [x] org/apache/zookeeper/server/util\n- [x] org/apache/zookeeper/server/watch\n- [x] org/apache/zookeeper/test\n- [x] org/apache/zookeeper/util\n- [x] org/apache/zookeeper/version/util\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Brian Nixon <nixon@fb.com>.  Enrico Olivelli <eolivelli@gmail.com>.  Michael Han <hanm@apache.org>\n\nCloses #1049 from TisonKun/ZOOKEEPER-3475\n","date":"2019-08-17 23:13:15","modifiedFileCount":"631","status":"M","submitter":"tison"},{"authorTime":"2020-08-04 21:01:52","codes":[{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testCreateFail(ServerState serverState, boolean checkEnabled) throws Exception {\n        setUp(serverState, checkEnabled);\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.create(CHILD_PATH, DATA, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        } catch (KeeperException.NoAuthException e) {\n        }\n\n        assertEquals(0, connectedServer.getInProcess(), \"OutstandingRequests not decremented\");\n\n        assertTransactionState(\"Transaction state on Leader after failed create\", lastxid, serverState, checkEnabled);\n    }\n","date":"2020-08-04 21:01:52","endLine":156,"groupId":"10171","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateFail","params":"(ServerStateserverState@booleancheckEnabled)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d3/7516bd3bfe8ff149b1d1501087a60f70b27614.src","preCode":"    public void testCreateFail() throws Exception {\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.create(CHILD_PATH, DATA, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n        } catch (KeeperException.NoAuthException e) {\n        }\n\n        assertEquals(\"OutstandingRequests not decremented\", 0, connectedServer.getInProcess());\n\n        assertTransactionState(\"Transaction state on Leader after failed create\", lastxid);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/EagerACLFilterTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2020-08-04 21:01:52","commitOrder":3,"curCode":"    public void testDeleteFail(ServerState serverState, boolean checkEnabled) throws Exception {\n        setUp(serverState, checkEnabled);\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        zkClient.create(CHILD_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.delete(CHILD_PATH, -1);\n        } catch (KeeperException.NoAuthException e) {\n        }\n\n        assertEquals(0, connectedServer.getInProcess(), \"OutstandingRequests not decremented\");\n\n        assertTransactionState(\"Transaction state on Leader after failed delete\", lastxid, serverState, checkEnabled);\n    }\n","date":"2020-08-04 21:01:52","endLine":199,"groupId":"10171","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteFail","params":"(ServerStateserverState@booleancheckEnabled)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zookeeper-10-0.7/blobInfo/CC_OUT/blobs/d3/7516bd3bfe8ff149b1d1501087a60f70b27614.src","preCode":"    public void testDeleteFail() throws Exception {\n        zkClient.create(PARENT_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        zkClient.create(CHILD_PATH, DATA, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT, null);\n        long lastxid = zkLeader.getLastLoggedZxid();\n        try {\n            zkClientB.delete(CHILD_PATH, -1);\n        } catch (KeeperException.NoAuthException e) {\n        }\n\n        assertEquals(\"OutstandingRequests not decremented\", 0, connectedServer.getInProcess());\n\n        assertTransactionState(\"Transaction state on Leader after failed delete\", lastxid);\n    }\n","realPath":"zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/EagerACLFilterTest.java","repoName":"zookeeper","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"c42c8c94085ed1d94a22158fbdfe2945118a82bc","commitMessage":"@@@ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server\n\nSub-task of ZOOKEEPER-3732.  updating jUnit to 5.6.2 in zookeeper-server sub-component.\n\nChange-Id: I1fc2a7f860eae0f1d285cb278f6eca7a3b947695\n\nAuthor: Tamas Penzes <tamaas@cloudera.com>\n\nReviewers: Mate Szalay-Beko <symat@apache.org>.  Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1417 from tamaashu/ZOOKEEPER-3872\n","date":"2020-08-04 21:01:52","modifiedFileCount":"303","status":"M","submitter":"Tamas Penzes"}]
