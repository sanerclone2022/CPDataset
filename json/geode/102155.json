[{"authorTime":"2018-10-24 07:17:24","codes":[{"authorDate":"2018-10-24 07:17:24","commitOrder":1,"curCode":"  public void virtualPutDoesNotReleaseLockIfKeysAndPrimaryNotLocked() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doThrow(regionDestroyedException).when(bucketRegion).lockKeysAndPrimary(event);\n\n    bucketRegion.virtualPut(event, false, true, null, false, 1, true);\n\n    verify(bucketRegion, never()).releaseLockForKeysAndPrimary(eq(event));\n  }\n","date":"2018-10-24 07:17:24","endLine":157,"groupId":"5150","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"virtualPutDoesNotReleaseLockIfKeysAndPrimaryNotLocked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b4/08256669aaa0968c3e6e0e38b575c0d2af328a.src","preCode":"  public void virtualPutDoesNotReleaseLockIfKeysAndPrimaryNotLocked() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doThrow(regionDestroyedException).when(bucketRegion).lockKeysAndPrimary(event);\n\n    bucketRegion.virtualPut(event, false, true, null, false, 1, true);\n\n    verify(bucketRegion, never()).releaseLockForKeysAndPrimary(eq(event));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"},{"authorDate":"2018-10-24 07:17:24","commitOrder":1,"curCode":"  public void basicDestroyDoesNotReleaseLockIfKeysAndPrimaryNotLocked() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doThrow(regionDestroyedException).when(bucketRegion).lockKeysAndPrimary(event);\n\n    bucketRegion.basicDestroy(event, false, null);\n\n    verify(bucketRegion, never()).releaseLockForKeysAndPrimary(eq(event));\n  }\n","date":"2018-10-24 07:17:24","endLine":182,"groupId":"5150","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"basicDestroyDoesNotReleaseLockIfKeysAndPrimaryNotLocked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b4/08256669aaa0968c3e6e0e38b575c0d2af328a.src","preCode":"  public void basicDestroyDoesNotReleaseLockIfKeysAndPrimaryNotLocked() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doThrow(regionDestroyedException).when(bucketRegion).lockKeysAndPrimary(event);\n\n    bucketRegion.basicDestroy(event, false, null);\n\n    verify(bucketRegion, never()).releaseLockForKeysAndPrimary(eq(event));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"B"}],"commitId":"0f7769a729d8a5895d2f1e1a9ce34d5101eedf49","commitMessage":"@@@GEODE-5888: Only the thread locked objects can release/remove them (#2645)\n\n * A bulk opertion could remove lockObject due to RegionDestroyedException.\n * Now only the thread locked objects can release them.\n * Rename activeWriteLock to be primaryMoveReadLock as it is a readLock.\n","date":"2018-10-24 07:17:24","modifiedFileCount":"10","status":"B","submitter":"pivotal-eshu"},{"authorTime":"2019-08-09 00:33:26","codes":[{"authorDate":"2019-08-09 00:33:26","commitOrder":2,"curCode":"  public void virtualPutDoesNotReleaseLockIfKeysAndPrimaryNotLocked() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doThrow(regionDestroyedException).when(bucketRegion).lockKeysAndPrimary(event);\n\n    bucketRegion.virtualPut(event, false, true, null, false, 1, true);\n\n    verify(bucketRegion, never()).releaseLockForKeysAndPrimary(eq(event));\n  }\n","date":"2019-08-09 00:33:26","endLine":173,"groupId":"102155","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"virtualPutDoesNotReleaseLockIfKeysAndPrimaryNotLocked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/e392d94a06da690cb7c91620ad7e3660b9a4d6.src","preCode":"  public void virtualPutDoesNotReleaseLockIfKeysAndPrimaryNotLocked() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doThrow(regionDestroyedException).when(bucketRegion).lockKeysAndPrimary(event);\n\n    bucketRegion.virtualPut(event, false, true, null, false, 1, true);\n\n    verify(bucketRegion, never()).releaseLockForKeysAndPrimary(eq(event));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"},{"authorDate":"2019-08-09 00:33:26","commitOrder":2,"curCode":"  public void basicDestroyDoesNotReleaseLockIfKeysAndPrimaryNotLocked() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doThrow(regionDestroyedException).when(bucketRegion).lockKeysAndPrimary(event);\n\n    bucketRegion.basicDestroy(event, false, null);\n\n    verify(bucketRegion, never()).releaseLockForKeysAndPrimary(eq(event));\n  }\n","date":"2019-08-09 00:33:26","endLine":198,"groupId":"102155","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"basicDestroyDoesNotReleaseLockIfKeysAndPrimaryNotLocked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/e392d94a06da690cb7c91620ad7e3660b9a4d6.src","preCode":"  public void basicDestroyDoesNotReleaseLockIfKeysAndPrimaryNotLocked() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doThrow(regionDestroyedException).when(bucketRegion).lockKeysAndPrimary(event);\n\n    bucketRegion.basicDestroy(event, false, null);\n\n    verify(bucketRegion, never()).releaseLockForKeysAndPrimary(eq(event));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"}],"commitId":"b49279477a4c79b90220fb34239d12c2d9e50782","commitMessage":"@@@GEODE-7010: Replace static globals in CachePerfStats with StatisticsClock (#3859)\n\n* Replace CachePerfStats.getStatTime with Cache owned StatisticsClock\n* Inject StatisticsClock dependency via constructor\n","date":"2019-08-09 00:33:26","modifiedFileCount":"134","status":"M","submitter":"Kirk Lund"}]
