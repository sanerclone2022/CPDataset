[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void messageLongerThanMaxIntIsRejected() throws Exception {\n    Part[] parts = new Part[2];\n    Part mockPart1 = mock(Part.class);\n    when(mockPart1.getLength()).thenReturn(Integer.MAX_VALUE/2);\n    parts[0] = mockPart1;\n    parts[1] = mockPart1;\n    message.setParts(parts);\n    try {\n      message.send();\n      fail(\"expected an exception but none was thrown\");\n    } catch (MessageTooLargeException e) {\n      assertTrue(e.getMessage().contains(\"exceeds maximum integer value\"));\n    }\n  }\n","date":"2016-09-15 02:08:18","endLine":87,"groupId":"6643","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"messageLongerThanMaxIntIsRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2f/cfe39204f673bb8f586eaf490f12b3e4a94861.src","preCode":"  public void messageLongerThanMaxIntIsRejected() throws Exception {\n    Part[] parts = new Part[2];\n    Part mockPart1 = mock(Part.class);\n    when(mockPart1.getLength()).thenReturn(Integer.MAX_VALUE/2);\n    parts[0] = mockPart1;\n    parts[1] = mockPart1;\n    message.setParts(parts);\n    try {\n      message.send();\n      fail(\"expected an exception but none was thrown\");\n    } catch (MessageTooLargeException e) {\n      assertTrue(e.getMessage().contains(\"exceeds maximum integer value\"));\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/MessageJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void maxMessageSizeIsRespected() throws Exception {\n    Part[] parts = new Part[2];\n    Part mockPart1 = mock(Part.class);\n    when(mockPart1.getLength()).thenReturn(Message.MAX_MESSAGE_SIZE/2);\n    parts[0] = mockPart1;\n    parts[1] = mockPart1;\n    message.setParts(parts);\n    try {\n      message.send();\n      fail(\"expected an exception but none was thrown\");\n    } catch (MessageTooLargeException e) {\n      assertFalse(e.getMessage().contains(\"exceeds maximum integer value\"));\n    }\n  }\n","date":"2016-09-15 02:08:18","endLine":103,"groupId":"6644","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"maxMessageSizeIsRespected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2f/cfe39204f673bb8f586eaf490f12b3e4a94861.src","preCode":"  public void maxMessageSizeIsRespected() throws Exception {\n    Part[] parts = new Part[2];\n    Part mockPart1 = mock(Part.class);\n    when(mockPart1.getLength()).thenReturn(Message.MAX_MESSAGE_SIZE/2);\n    parts[0] = mockPart1;\n    parts[1] = mockPart1;\n    message.setParts(parts);\n    try {\n      message.send();\n      fail(\"expected an exception but none was thrown\");\n    } catch (MessageTooLargeException e) {\n      assertFalse(e.getMessage().contains(\"exceeds maximum integer value\"));\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/MessageJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2017-05-19 04:28:38","codes":[{"authorDate":"2017-05-19 04:28:38","commitOrder":2,"curCode":"  public void messageLongerThanMaxIntIsRejected() throws Exception {\n    Part mockPart1 = mock(Part.class);\n    when(mockPart1.getLength()).thenReturn(Integer.MAX_VALUE / 2);\n    Part[] parts = new Part[2];\n    parts[0] = mockPart1;\n    parts[1] = mockPart1;\n    this.message.setParts(parts);\n    try {\n      this.message.send();\n      fail(\"expected an exception but none was thrown\");\n    } catch (MessageTooLargeException e) {\n      assertTrue(e.getMessage().contains(\"exceeds maximum integer value\"));\n    }\n  }\n","date":"2017-06-01 07:11:34","endLine":82,"groupId":"101071","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"messageLongerThanMaxIntIsRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b2/d903c7944aa405e9581937e3be2ac8cc02a056.src","preCode":"  public void messageLongerThanMaxIntIsRejected() throws Exception {\n    Part[] parts = new Part[2];\n    Part mockPart1 = mock(Part.class);\n    when(mockPart1.getLength()).thenReturn(Integer.MAX_VALUE / 2);\n    parts[0] = mockPart1;\n    parts[1] = mockPart1;\n    message.setParts(parts);\n    try {\n      message.send();\n      fail(\"expected an exception but none was thrown\");\n    } catch (MessageTooLargeException e) {\n      assertTrue(e.getMessage().contains(\"exceeds maximum integer value\"));\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/MessageJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2017-05-19 04:28:38","commitOrder":2,"curCode":"  public void maxMessageSizeIsRespected() throws Exception {\n    Part mockPart1 = mock(Part.class);\n    when(mockPart1.getLength()).thenReturn(Message.DEFAULT_MAX_MESSAGE_SIZE / 2);\n    Part[] parts = new Part[2];\n    parts[0] = mockPart1;\n    parts[1] = mockPart1;\n    this.message.setParts(parts);\n    try {\n      this.message.send();\n      fail(\"expected an exception but none was thrown\");\n    } catch (MessageTooLargeException e) {\n      assertFalse(e.getMessage().contains(\"exceeds maximum integer value\"));\n    }\n  }\n","date":"2017-06-01 07:11:34","endLine":98,"groupId":"101071","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"maxMessageSizeIsRespected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b2/d903c7944aa405e9581937e3be2ac8cc02a056.src","preCode":"  public void maxMessageSizeIsRespected() throws Exception {\n    Part[] parts = new Part[2];\n    Part mockPart1 = mock(Part.class);\n    when(mockPart1.getLength()).thenReturn(Message.MAX_MESSAGE_SIZE / 2);\n    parts[0] = mockPart1;\n    parts[1] = mockPart1;\n    message.setParts(parts);\n    try {\n      message.send();\n      fail(\"expected an exception but none was thrown\");\n    } catch (MessageTooLargeException e) {\n      assertFalse(e.getMessage().contains(\"exceeds maximum integer value\"));\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/MessageJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"d1ec508ee628f75d1f26dbfd6db5a237745623b5","commitMessage":"@@@GEODE-2632: refactoring preparations for SecurityService and BaseCommand changes\n","date":"2017-06-01 07:11:34","modifiedFileCount":"110","status":"M","submitter":"Kirk Lund"}]
