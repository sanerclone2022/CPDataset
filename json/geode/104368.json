[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void statusWithPidReturnsOnlineWithDetails() throws Exception {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(getServerPid()).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(getServerPid());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","date":"2018-07-18 03:54:18","endLine":199,"groupId":"3842","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"statusWithPidReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/07/0e762e98569d3fac6154d2ade5508939e7c1f6.src","preCode":"  public void statusWithPidReturnsOnlineWithDetails() throws Exception {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(getServerPid()).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(getServerPid());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningServer();\n\n    ServerState serverState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","date":"2018-07-18 03:54:18","endLine":219,"groupId":"3842","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"statusWithWorkingDirectoryReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/07/0e762e98569d3fac6154d2ade5508939e7c1f6.src","preCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningServer();\n\n    ServerState serverState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-07-25 05:44:46","codes":[{"authorDate":"2018-07-25 05:44:46","commitOrder":2,"curCode":"  public void statusWithPidReturnsOnlineWithDetails() throws IOException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(getServerPid()).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(getServerPid());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","date":"2018-07-25 05:44:46","endLine":202,"groupId":"3842","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"statusWithPidReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/aa/ea0f5110c4f01a001123f828d2a27f5c15853c.src","preCode":"  public void statusWithPidReturnsOnlineWithDetails() throws Exception {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(getServerPid()).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(getServerPid());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"},{"authorDate":"2018-07-25 05:44:46","commitOrder":2,"curCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws IOException {\n    givenRunningServer();\n\n    ServerState serverState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","date":"2018-07-25 05:44:46","endLine":222,"groupId":"3842","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"statusWithWorkingDirectoryReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/aa/ea0f5110c4f01a001123f828d2a27f5c15853c.src","preCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningServer();\n\n    ServerState serverState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"M"}],"commitId":"667fbb4176c2f9bf8e399809b1c46f744486c3cd","commitMessage":"@@@GEODE-5256: Parameters Precedence in Start Server (#2013)\n\n* GEODE-5256: Parameters Precedence in Start Server\n\nConfiguration options set as part of the `start server` command now\ntake precedence over those configured in the `cache.xml` file.  the\n`cluster-configuration-service` and defaults.\n\n- Rebased against latest develop branch.\n- Removed unused `throws` clauses from tests.\n- Renamed `ServerLauncherIntegrationTest` to\n  `ServerLauncherBuilderIntegrationTest`.\n- Added tests for `ServerLauncher` and `CacheCreation`.\n- Added acceptance tests for `gfsh start server` command.\n- Fixed `ServerLauncher.parseArguments` method.  it was wrongly calling\n  `setMaxConnections` for other unrelated parameters (maxMessageCount. \n  messageTimeToLive and sockerBufferSize).\n- The `ServerLauncher` class now sets all the relevent startup\n  parameters during initialization within the static `parameters` field\n  on `CacheServerLauncher` class. The `CacheCreation` class.  in turn. \n  reconfigures the `Server` attributes using\n  `CacheServerLauncher.parameters` before starting the `AcceptorImpl`.\n\n* GEODE-5256: Changes requested by reviewers\n\n- Rebased against latest develop branch.\n- Replaced `Wait` references for `Awaitility` in related tests.\n- Class `CacheServerLauncher.Parameters` is now a top level class.\n- Added `@Deprecated` annotation and docs for `CacheServerLauncher`.\n- `StartServerCommandAcceptanceTest` now uses `FileUtils` instead of\n  manually opening and reading the log file.\n","date":"2018-07-25 05:44:46","modifiedFileCount":"17","status":"M","submitter":"Juan Jos? Ramos"},{"authorTime":"2019-05-31 04:03:09","codes":[{"authorDate":"2019-05-31 04:03:09","commitOrder":3,"curCode":"  public void statusWithPidReturnsOnlineWithDetails() throws IOException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder()\n        .setPid(getServerPid())\n        .build()\n        .status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(getServerPid());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","date":"2019-06-14 01:22:26","endLine":207,"groupId":"104368","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"statusWithPidReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8e/f565a35eb3552370a7bd7ab5c9cbaece4018bb.src","preCode":"  public void statusWithPidReturnsOnlineWithDetails() throws IOException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(getServerPid()).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(getServerPid());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"},{"authorDate":"2019-05-31 04:03:09","commitOrder":3,"curCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws IOException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder()\n        .setWorkingDirectory(getWorkingDirectoryPath())\n        .build()\n        .status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","date":"2019-06-14 01:22:26","endLine":229,"groupId":"104368","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"statusWithWorkingDirectoryReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8e/f565a35eb3552370a7bd7ab5c9cbaece4018bb.src","preCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws IOException {\n    givenRunningServer();\n\n    ServerState serverState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"}],"commitId":"de19a41571476ecb179c2e561d1f5d6bc8b1c1b5","commitMessage":"@@@GEODE-6183: Cleanup Launcher integration tests\n\n* Fixup IDE warnings\n* Reformat test code\n* Use SocketCreator.getLocalHost\n","date":"2019-06-14 01:22:26","modifiedFileCount":"23","status":"M","submitter":"Kirk Lund"}]
