[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      SerializableIntWrapper other = (SerializableIntWrapper) obj;\n      if (data != other.data)\n        return false;\n      return true;\n    }\n","date":"2016-09-15 02:08:18","endLine":3303,"groupId":"20104","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/75461e4dc621b2a51d03b8d0734e38d304cc3e.src","preCode":"    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      SerializableIntWrapper other = (SerializableIntWrapper) obj;\n      if (data != other.data)\n        return false;\n      return true;\n    }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":3292,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    AutoSerializableManager other = (AutoSerializableManager) obj;\n    if (checkPortability != other.checkPortability)\n      return false;\n    if (classPatterns == null) {\n      if (other.classPatterns != null)\n        return false;\n    } else if (!classPatterns.equals(other.classPatterns))\n      return false;\n    if (excludePatterns == null) {\n      if (other.excludePatterns != null)\n        return false;\n    } else if (!excludePatterns.equals(other.excludePatterns))\n      return false;\n    if (identityPatterns == null) {\n      if (other.identityPatterns != null)\n        return false;\n    } else if (!identityPatterns.equals(other.identityPatterns))\n      return false;\n    return true;\n  }\n","date":"2016-09-15 02:08:18","endLine":2286,"groupId":"32682","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/3b/3fb52f2577f3d6e73b8648a39dbcf87d2d74c6.src","preCode":"  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    AutoSerializableManager other = (AutoSerializableManager) obj;\n    if (checkPortability != other.checkPortability)\n      return false;\n    if (classPatterns == null) {\n      if (other.classPatterns != null)\n        return false;\n    } else if (!classPatterns.equals(other.classPatterns))\n      return false;\n    if (excludePatterns == null) {\n      if (other.excludePatterns != null)\n        return false;\n    } else if (!excludePatterns.equals(other.excludePatterns))\n      return false;\n    if (identityPatterns == null) {\n      if (other.identityPatterns != null)\n        return false;\n    } else if (!identityPatterns.equals(other.identityPatterns))\n      return false;\n    return true;\n  }\n","realPath":"geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":2260,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2020-04-07 06:16:55","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":2,"curCode":"    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      SerializableIntWrapper other = (SerializableIntWrapper) obj;\n      if (data != other.data)\n        return false;\n      return true;\n    }\n","date":"2016-09-15 02:08:18","endLine":3303,"groupId":"20104","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/75461e4dc621b2a51d03b8d0734e38d304cc3e.src","preCode":"    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      SerializableIntWrapper other = (SerializableIntWrapper) obj;\n      if (data != other.data)\n        return false;\n      return true;\n    }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":3292,"status":"N"},{"authorDate":"2020-04-07 06:16:55","commitOrder":2,"curCode":"  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    AutoSerializableManager other = (AutoSerializableManager) obj;\n    if (checkPortability != other.checkPortability)\n      return false;\n    if (!classPatterns.equals(other.classPatterns))\n      return false;\n    if (!excludePatterns.equals(other.excludePatterns))\n      return false;\n    if (!identityPatterns.equals(other.identityPatterns))\n      return false;\n    return true;\n  }\n","date":"2020-04-07 06:16:55","endLine":2444,"groupId":"32682","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/3a/3edaa3ec92715297a6a9fef2035c7df28de475.src","preCode":"  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    AutoSerializableManager other = (AutoSerializableManager) obj;\n    if (checkPortability != other.checkPortability)\n      return false;\n    if (classPatterns == null) {\n      if (other.classPatterns != null)\n        return false;\n    } else if (!classPatterns.equals(other.classPatterns))\n      return false;\n    if (excludePatterns == null) {\n      if (other.excludePatterns != null)\n        return false;\n    } else if (!excludePatterns.equals(other.excludePatterns))\n      return false;\n    if (identityPatterns == null) {\n      if (other.identityPatterns != null)\n        return false;\n    } else if (!identityPatterns.equals(other.identityPatterns))\n      return false;\n    return true;\n  }\n","realPath":"geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":2427,"status":"M"}],"commitId":"d663864e720f354c374139bbdcbcc1f9fdd5eb83","commitMessage":"@@@GEODE-7864: Remove null checks that are not required Part-2. (#4881)\n\n","date":"2020-04-07 06:16:55","modifiedFileCount":"5","status":"M","submitter":"Nabarun Nag"},{"authorTime":"2021-06-04 00:32:09","codes":[{"authorDate":"2021-06-04 00:32:09","commitOrder":3,"curCode":"    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n      SerializableIntWrapper other = (SerializableIntWrapper) obj;\n      if (data != other.data) {\n        return false;\n      }\n      return true;\n    }\n","date":"2021-06-04 00:32:09","endLine":3313,"groupId":"20104","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4b/94922ef4cc517293108cd2dc0049d83cd931c9.src","preCode":"    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      SerializableIntWrapper other = (SerializableIntWrapper) obj;\n      if (data != other.data)\n        return false;\n      return true;\n    }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":3298,"status":"M"},{"authorDate":"2021-06-04 00:32:09","commitOrder":3,"curCode":"  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    AutoSerializableManager other = (AutoSerializableManager) obj;\n    if (checkPortability != other.checkPortability) {\n      return false;\n    }\n    if (!classPatterns.equals(other.classPatterns)) {\n      return false;\n    }\n    if (!excludePatterns.equals(other.excludePatterns)) {\n      return false;\n    }\n    if (!identityPatterns.equals(other.identityPatterns)) {\n      return false;\n    }\n    return true;\n  }\n","date":"2021-06-04 00:32:09","endLine":2453,"groupId":"32682","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/33/43622fa8b8028ee2061c1c0efd6aacc9eea019.src","preCode":"  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    AutoSerializableManager other = (AutoSerializableManager) obj;\n    if (checkPortability != other.checkPortability)\n      return false;\n    if (!classPatterns.equals(other.classPatterns))\n      return false;\n    if (!excludePatterns.equals(other.excludePatterns))\n      return false;\n    if (!identityPatterns.equals(other.identityPatterns))\n      return false;\n    return true;\n  }\n","realPath":"geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":2429,"status":"M"}],"commitId":"2879573ffb04e9e029e14ca37d8a064268cc8f44","commitMessage":"@@@GEODE-7864: Always use curly braces for control flow statements (#6523)\n\nAuthored-by: Donal Evans <doevans@vmware.com>","date":"2021-06-04 00:32:09","modifiedFileCount":"640","status":"M","submitter":"Donal Evans"},{"authorTime":"2021-06-04 00:32:09","codes":[{"authorDate":"2021-05-19 13:32:42","commitOrder":4,"curCode":"    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n      SerializableIntWrapper other = (SerializableIntWrapper) obj;\n      return data == other.data;\n    }\n","date":"2021-06-30 01:58:48","endLine":3303,"groupId":"122722","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e9/722f7b9d627c7bfd09d36a5a25ec55cb733e67.src","preCode":"    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n      SerializableIntWrapper other = (SerializableIntWrapper) obj;\n      if (data != other.data) {\n        return false;\n      }\n      return true;\n    }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":3291,"status":"M"},{"authorDate":"2021-06-04 00:32:09","commitOrder":4,"curCode":"  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    AutoSerializableManager other = (AutoSerializableManager) obj;\n    if (checkPortability != other.checkPortability) {\n      return false;\n    }\n    if (!classPatterns.equals(other.classPatterns)) {\n      return false;\n    }\n    if (!excludePatterns.equals(other.excludePatterns)) {\n      return false;\n    }\n    if (!identityPatterns.equals(other.identityPatterns)) {\n      return false;\n    }\n    return true;\n  }\n","date":"2021-06-04 00:32:09","endLine":2453,"groupId":"122722","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"equals","params":"(Objectobj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/33/43622fa8b8028ee2061c1c0efd6aacc9eea019.src","preCode":"  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    AutoSerializableManager other = (AutoSerializableManager) obj;\n    if (checkPortability != other.checkPortability) {\n      return false;\n    }\n    if (!classPatterns.equals(other.classPatterns)) {\n      return false;\n    }\n    if (!excludePatterns.equals(other.excludePatterns)) {\n      return false;\n    }\n    if (!identityPatterns.equals(other.identityPatterns)) {\n      return false;\n    }\n    return true;\n  }\n","realPath":"geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":2429,"status":"N"}],"commitId":"cc6f2c307d66eb37b44bc33ac2f8a7f1f517ce13","commitMessage":"@@@GEODE-6588: Cleanup DataSerializableJUnitTest\n","date":"2021-06-30 01:58:48","modifiedFileCount":"1","status":"M","submitter":"Jacob Barrett"}]
