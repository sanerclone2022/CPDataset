[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void customEntryTimeToLiveCanBeShortened() throws Exception {\n    RegionFactory<String, String> rf = cache.createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryTimeToLive(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(regionName);\n\n    region.put(KEY, \"longExpire\");\n    region.put(KEY, \"quickExpire\");\n    assertThat(region.get(KEY)).isEqualTo(\"quickExpire\");\n\n    await().atMost(1, MINUTES).until(() -> !region.containsValueForKey(KEY));\n  }\n","date":"2018-07-18 03:54:18","endLine":103,"groupId":"34258","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"customEntryTimeToLiveCanBeShortened","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6b/e212f0c5da6f74301409f03f16a78316444ef9.src","preCode":"  public void customEntryTimeToLiveCanBeShortened() throws Exception {\n    RegionFactory<String, String> rf = cache.createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryTimeToLive(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(regionName);\n\n    region.put(KEY, \"longExpire\");\n    region.put(KEY, \"quickExpire\");\n    assertThat(region.get(KEY)).isEqualTo(\"quickExpire\");\n\n    await().atMost(1, MINUTES).until(() -> !region.containsValueForKey(KEY));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache30/ShorteningExpirationTimeRegressionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void customEntryIdleTimeoutCanBeShortened() throws Exception {\n    RegionFactory<String, String> rf = cache.createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryIdleTimeout(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(regionName);\n\n    region.put(KEY, \"longExpire\");\n    assertThat(region.get(KEY)).isEqualTo(\"longExpire\");\n\n    await().atMost(1, MINUTES).until(() -> !region.containsValueForKey(KEY));\n  }\n","date":"2018-07-18 03:54:18","endLine":117,"groupId":"34256","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"customEntryIdleTimeoutCanBeShortened","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6b/e212f0c5da6f74301409f03f16a78316444ef9.src","preCode":"  public void customEntryIdleTimeoutCanBeShortened() throws Exception {\n    RegionFactory<String, String> rf = cache.createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryIdleTimeout(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(regionName);\n\n    region.put(KEY, \"longExpire\");\n    assertThat(region.get(KEY)).isEqualTo(\"longExpire\");\n\n    await().atMost(1, MINUTES).until(() -> !region.containsValueForKey(KEY));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache30/ShorteningExpirationTimeRegressionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-08-17 23:46:34","codes":[{"authorDate":"2018-08-17 23:46:34","commitOrder":2,"curCode":"  public void customEntryTimeToLiveCanBeShortened() {\n    RegionFactory<String, String> rf = server.getCache().createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryTimeToLive(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(testName.getMethodName());\n\n    \r\n    region.put(KEY, \"longExpire\");\n    \r\n    region.put(KEY, \"quickExpire\");\n\n    \r\n    await().atMost(LONG_WAIT_MS / 2, MILLISECONDS).until(() -> !region.containsValueForKey(KEY));\n  }\n","date":"2018-08-17 23:46:34","endLine":81,"groupId":"45764","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"customEntryTimeToLiveCanBeShortened","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8d/cdf8cad55374def8a3d871152f74415bf89359.src","preCode":"  public void customEntryTimeToLiveCanBeShortened() throws Exception {\n    RegionFactory<String, String> rf = cache.createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryTimeToLive(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(regionName);\n\n    region.put(KEY, \"longExpire\");\n    region.put(KEY, \"quickExpire\");\n    assertThat(region.get(KEY)).isEqualTo(\"quickExpire\");\n\n    await().atMost(1, MINUTES).until(() -> !region.containsValueForKey(KEY));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache30/ShorteningExpirationTimeRegressionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2018-08-17 23:46:34","commitOrder":2,"curCode":"  public void customEntryIdleTimeoutCanBeShortened() throws Exception {\n    RegionFactory<String, String> rf = server.getCache().createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryIdleTimeout(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(testName.getMethodName());\n\n    \r\n    region.put(KEY, \"longExpire\");\n    \r\n    region.get(KEY);\n\n    \r\n    await().atMost(LONG_WAIT_MS / 2, MILLISECONDS).until(() -> !region.containsValueForKey(KEY));\n  }\n","date":"2018-08-17 23:46:34","endLine":98,"groupId":"45764","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"customEntryIdleTimeoutCanBeShortened","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8d/cdf8cad55374def8a3d871152f74415bf89359.src","preCode":"  public void customEntryIdleTimeoutCanBeShortened() throws Exception {\n    RegionFactory<String, String> rf = cache.createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryIdleTimeout(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(regionName);\n\n    region.put(KEY, \"longExpire\");\n    assertThat(region.get(KEY)).isEqualTo(\"longExpire\");\n\n    await().atMost(1, MINUTES).until(() -> !region.containsValueForKey(KEY));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache30/ShorteningExpirationTimeRegressionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"2be72bdf0af50b0b79bc4428b3bdf962dca56509","commitMessage":"@@@GEODE-5257: remove unnecessary assertion that introduced the flakiness. (#2265)\n\n* add withNoCacheServer() to the ServerStarterRule\n","date":"2018-08-17 23:46:34","modifiedFileCount":"2","status":"M","submitter":"jinmeiliao"},{"authorTime":"2018-10-05 06:38:58","codes":[{"authorDate":"2018-10-05 06:38:58","commitOrder":3,"curCode":"  public void customEntryTimeToLiveCanBeShortened() {\n    RegionFactory<String, String> rf = server.getCache().createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryTimeToLive(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(testName.getMethodName());\n\n    \r\n    region.put(KEY, \"longExpire\");\n    \r\n    region.put(KEY, \"quickExpire\");\n\n    \r\n    await().until(() -> !region.containsValueForKey(KEY));\n  }\n","date":"2018-10-19 08:01:02","endLine":80,"groupId":"103378","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"customEntryTimeToLiveCanBeShortened","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/eb/ce06c3a4a59e8a862110f3ba6cdd1b0171070b.src","preCode":"  public void customEntryTimeToLiveCanBeShortened() {\n    RegionFactory<String, String> rf = server.getCache().createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryTimeToLive(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(testName.getMethodName());\n\n    \r\n    region.put(KEY, \"longExpire\");\n    \r\n    region.put(KEY, \"quickExpire\");\n\n    \r\n    await().atMost(LONG_WAIT_MS / 2, MILLISECONDS).until(() -> !region.containsValueForKey(KEY));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache30/ShorteningExpirationTimeRegressionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2018-10-05 06:38:58","commitOrder":3,"curCode":"  public void customEntryIdleTimeoutCanBeShortened() throws Exception {\n    RegionFactory<String, String> rf = server.getCache().createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryIdleTimeout(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(testName.getMethodName());\n\n    \r\n    region.put(KEY, \"longExpire\");\n    \r\n    region.get(KEY);\n\n    \r\n    await().until(() -> !region.containsValueForKey(KEY));\n  }\n","date":"2018-10-19 08:01:02","endLine":97,"groupId":"103378","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"customEntryIdleTimeoutCanBeShortened","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/eb/ce06c3a4a59e8a862110f3ba6cdd1b0171070b.src","preCode":"  public void customEntryIdleTimeoutCanBeShortened() throws Exception {\n    RegionFactory<String, String> rf = server.getCache().createRegionFactory(RegionShortcut.LOCAL);\n    rf.setCustomEntryIdleTimeout(new CustomExpiryTestClass<>());\n    rf.setStatisticsEnabled(true);\n\n    Region<String, String> region = rf.create(testName.getMethodName());\n\n    \r\n    region.put(KEY, \"longExpire\");\n    \r\n    region.get(KEY);\n\n    \r\n    await().atMost(LONG_WAIT_MS / 2, MILLISECONDS).until(() -> !region.containsValueForKey(KEY));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache30/ShorteningExpirationTimeRegressionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"239c532f8338c9d8e9bb8062fab9fadd3376ec73","commitMessage":"@@@GEODE-5424: Changing all awaitility calls to use consistent timings\n\nWe have a lot of Awaitility calls in our tests. Each test was picking\nits own timeout. That lead to some tests picking too small of a timeout\nand failing spuriously.\n\nWith this change.  all tests will use a new factory. \nGeodeAwaility.await().  rather than Awaitility.await(). This new factory\nsets a default timeout of 5 minutes. It also sets a sensible pollDelay\nand pollInterval.\n\nThe custom timeouts used in all tests have been removed.  in favor of\nthis new factory.  except for a couple of tests that had waits greater\nthan 5 minutes.\n","date":"2018-10-19 08:01:02","modifiedFileCount":"334","status":"M","submitter":"Dan Smith"}]
