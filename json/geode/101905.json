[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void bucketWrapperShouldDelegateMoveBucketToEnclosedOperator() {    \n    doReturn(true).when(delegate).moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n\n    wrapper.moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n    \n    \r\n    verify(delegate, times(1)).moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n    \n    \r\n    verify(stats, times(1)).startBucketTransfer(anyInt());\n    verify(stats, times(1)).endBucketTransfer(anyInt(), anyBoolean(), anyLong(), anyLong());\n  }\n","date":"2016-09-15 02:08:18","endLine":193,"groupId":"45766","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bucketWrapperShouldDelegateMoveBucketToEnclosedOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d6/f7b8994f9ae226197cb1543fcf38e5efe0295e.src","preCode":"  public void bucketWrapperShouldDelegateMoveBucketToEnclosedOperator() {    \n    doReturn(true).when(delegate).moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n\n    wrapper.moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n    \n    \r\n    verify(delegate, times(1)).moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n    \n    \r\n    verify(stats, times(1)).startBucketTransfer(anyInt());\n    verify(stats, times(1)).endBucketTransfer(anyInt(), anyBoolean(), anyLong(), anyLong());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorWrapperTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void bucketWrapperShouldRecordPrimaryTransfersPerRegionAfterMovePrimaryIsSuccessful() {    \n    doReturn(true).when(delegate).movePrimary(sourceMember, targetMember, bucketId);\n\n    wrapper.movePrimary(sourceMember, targetMember, bucketId);\n    \n    \r\n    for( PartitionRebalanceDetailsImpl details : rebalanceDetails) {\n      if(details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME))\n        verify(details, times(1)).incPrimaryTransfers(anyLong());\n      else if(details.getRegionPath().equals(PR_COLOCATED_REGION_NAME))\n        verify(details, times(1)).incPrimaryTransfers(0); \r\n    }\n    \n    \r\n    verify(stats, times(1)).startPrimaryTransfer(anyInt());\n    verify(stats, times(1)).endPrimaryTransfer(anyInt(), anyBoolean(), anyLong());\n  }\n","date":"2016-09-15 02:08:18","endLine":306,"groupId":"8471","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bucketWrapperShouldRecordPrimaryTransfersPerRegionAfterMovePrimaryIsSuccessful","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d6/f7b8994f9ae226197cb1543fcf38e5efe0295e.src","preCode":"  public void bucketWrapperShouldRecordPrimaryTransfersPerRegionAfterMovePrimaryIsSuccessful() {    \n    doReturn(true).when(delegate).movePrimary(sourceMember, targetMember, bucketId);\n\n    wrapper.movePrimary(sourceMember, targetMember, bucketId);\n    \n    \r\n    for( PartitionRebalanceDetailsImpl details : rebalanceDetails) {\n      if(details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME))\n        verify(details, times(1)).incPrimaryTransfers(anyLong());\n      else if(details.getRegionPath().equals(PR_COLOCATED_REGION_NAME))\n        verify(details, times(1)).incPrimaryTransfers(0); \r\n    }\n    \n    \r\n    verify(stats, times(1)).startPrimaryTransfer(anyInt());\n    verify(stats, times(1)).endPrimaryTransfer(anyInt(), anyBoolean(), anyLong());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorWrapperTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2021-06-04 00:32:09","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":2,"curCode":"  public void bucketWrapperShouldDelegateMoveBucketToEnclosedOperator() {    \n    doReturn(true).when(delegate).moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n\n    wrapper.moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n    \n    \r\n    verify(delegate, times(1)).moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n    \n    \r\n    verify(stats, times(1)).startBucketTransfer(anyInt());\n    verify(stats, times(1)).endBucketTransfer(anyInt(), anyBoolean(), anyLong(), anyLong());\n  }\n","date":"2016-09-15 02:08:18","endLine":193,"groupId":"101905","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bucketWrapperShouldDelegateMoveBucketToEnclosedOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d6/f7b8994f9ae226197cb1543fcf38e5efe0295e.src","preCode":"  public void bucketWrapperShouldDelegateMoveBucketToEnclosedOperator() {    \n    doReturn(true).when(delegate).moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n\n    wrapper.moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n    \n    \r\n    verify(delegate, times(1)).moveBucket(sourceMember, targetMember, bucketId, colocatedRegionBytes);\n    \n    \r\n    verify(stats, times(1)).startBucketTransfer(anyInt());\n    verify(stats, times(1)).endBucketTransfer(anyInt(), anyBoolean(), anyLong(), anyLong());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorWrapperTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"N"},{"authorDate":"2021-06-04 00:32:09","commitOrder":2,"curCode":"  public void bucketWrapperShouldRecordPrimaryTransfersPerRegionAfterMovePrimaryIsSuccessful() {\n    doReturn(true).when(delegate).movePrimary(sourceMember, targetMember, bucketId);\n\n    wrapper.movePrimary(sourceMember, targetMember, bucketId);\n\n    \r\n    for (PartitionRebalanceDetailsImpl details : rebalanceDetails) {\n      if (details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME)) {\n        verify(details, times(1)).incPrimaryTransfers(anyLong());\n      } else if (details.getRegionPath().equals(PR_COLOCATED_REGION_NAME)) {\n        verify(details, times(1)).incPrimaryTransfers(0); \r\n      }\n    }\n\n    \r\n    verify(stats, times(1)).startPrimaryTransfer(anyInt());\n    verify(stats, times(1)).endPrimaryTransfer(anyInt(), anyBoolean(), anyLong());\n  }\n","date":"2021-06-04 00:32:09","endLine":335,"groupId":"101905","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"bucketWrapperShouldRecordPrimaryTransfersPerRegionAfterMovePrimaryIsSuccessful","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9c/78a6b58709168854053f14a1247a190fb2a3cc.src","preCode":"  public void bucketWrapperShouldRecordPrimaryTransfersPerRegionAfterMovePrimaryIsSuccessful() {\n    doReturn(true).when(delegate).movePrimary(sourceMember, targetMember, bucketId);\n\n    wrapper.movePrimary(sourceMember, targetMember, bucketId);\n\n    \r\n    for (PartitionRebalanceDetailsImpl details : rebalanceDetails) {\n      if (details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME))\n        verify(details, times(1)).incPrimaryTransfers(anyLong());\n      else if (details.getRegionPath().equals(PR_COLOCATED_REGION_NAME))\n        verify(details, times(1)).incPrimaryTransfers(0); \r\n    }\n\n    \r\n    verify(stats, times(1)).startPrimaryTransfer(anyInt());\n    verify(stats, times(1)).endPrimaryTransfer(anyInt(), anyBoolean(), anyLong());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorWrapperTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"M"}],"commitId":"2879573ffb04e9e029e14ca37d8a064268cc8f44","commitMessage":"@@@GEODE-7864: Always use curly braces for control flow statements (#6523)\n\nAuthored-by: Donal Evans <doevans@vmware.com>","date":"2021-06-04 00:32:09","modifiedFileCount":"640","status":"M","submitter":"Donal Evans"}]
