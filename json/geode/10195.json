[{"authorTime":"2019-10-25 18:05:12","codes":[{"authorDate":"2019-10-25 18:05:12","commitOrder":1,"curCode":"  private void executeCqWithInitialResultsAndAssertThatOnErrorIsInvokedOnNextMatchingEvent(\n      String query) {\n    specificUserClient.invoke(() -> {\n      CqQuery cq = createCq(query);\n      cq.executeWithInitialResults();\n    });\n\n    Object[] keys = {\"key-0\"};\n    Object[] values = {new QueryTestObject(1, \"Mary\")};\n    putIntoRegion(superUserClient, keys, values, regionName);\n    specificUserClient.invoke(\n        () -> await().untilAsserted(() -> assertThat(cqListener.getNumErrors()).isEqualTo(1)));\n  }\n","date":"2019-10-25 18:05:12","endLine":135,"groupId":"18224","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"executeCqWithInitialResultsAndAssertThatOnErrorIsInvokedOnNextMatchingEvent","params":"(Stringquery)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/75/cc143f9dfba26d66ce7727b3f1d87bfcbc97c6.src","preCode":"  private void executeCqWithInitialResultsAndAssertThatOnErrorIsInvokedOnNextMatchingEvent(\n      String query) {\n    specificUserClient.invoke(() -> {\n      CqQuery cq = createCq(query);\n      cq.executeWithInitialResults();\n    });\n\n    Object[] keys = {\"key-0\"};\n    Object[] values = {new QueryTestObject(1, \"Mary\")};\n    putIntoRegion(superUserClient, keys, values, regionName);\n    specificUserClient.invoke(\n        () -> await().untilAsserted(() -> assertThat(cqListener.getNumErrors()).isEqualTo(1)));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/security/query/CqSecurityAllowedUsersDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"B"},{"authorDate":"2019-10-25 18:05:12","commitOrder":1,"curCode":"  public void cqQueryWithPublicFieldOnNonEmptyRegionShouldNotThrowException() {\n    putIntoRegion(superUserClient, keys, values, regionName);\n    String query = \"SELECT * FROM /\" + regionName + \" r WHERE r.id = 0\";\n\n    specificUserClient.invoke(() -> {\n      CqQuery cq = createCq(query);\n      cq.execute();\n    });\n\n    Object[] newValues = new Object[] {new QueryTestObject(0, \"Bethany\")};\n    putIntoRegion(superUserClient, keys, newValues, regionName);\n    specificUserClient.invoke(\n        () -> await().untilAsserted(() -> assertThat(cqListener.getNumEvents()).isEqualTo(1)));\n  }\n","date":"2019-10-25 18:05:12","endLine":151,"groupId":"18225","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cqQueryWithPublicFieldOnNonEmptyRegionShouldNotThrowException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/75/cc143f9dfba26d66ce7727b3f1d87bfcbc97c6.src","preCode":"  public void cqQueryWithPublicFieldOnNonEmptyRegionShouldNotThrowException() {\n    putIntoRegion(superUserClient, keys, values, regionName);\n    String query = \"SELECT * FROM /\" + regionName + \" r WHERE r.id = 0\";\n\n    specificUserClient.invoke(() -> {\n      CqQuery cq = createCq(query);\n      cq.execute();\n    });\n\n    Object[] newValues = new Object[] {new QueryTestObject(0, \"Bethany\")};\n    putIntoRegion(superUserClient, keys, newValues, regionName);\n    specificUserClient.invoke(\n        () -> await().untilAsserted(() -> assertThat(cqListener.getNumEvents()).isEqualTo(1)));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/security/query/CqSecurityAllowedUsersDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"}],"commitId":"480cdeaefc311aac7728cb12852127df6421273c","commitMessage":"@@@GEODE-7313: Refactor Query Security Tests (#4218)\n\n- Fixed warnings.\n- Replaced usages of 'junit.Assert' by 'assertj'.\n- Refactored the tests to use new rules instead of deprecated code.\n- Added extra tests to verify method invocation authorization in OQL.","date":"2019-10-25 18:05:12","modifiedFileCount":"0","status":"B","submitter":"Juan Jos? Ramos"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2019-10-25 18:05:12","commitOrder":2,"curCode":"  private void executeCqWithInitialResultsAndAssertThatOnErrorIsInvokedOnNextMatchingEvent(\n      String query) {\n    specificUserClient.invoke(() -> {\n      CqQuery cq = createCq(query);\n      cq.executeWithInitialResults();\n    });\n\n    Object[] keys = {\"key-0\"};\n    Object[] values = {new QueryTestObject(1, \"Mary\")};\n    putIntoRegion(superUserClient, keys, values, regionName);\n    specificUserClient.invoke(\n        () -> await().untilAsserted(() -> assertThat(cqListener.getNumErrors()).isEqualTo(1)));\n  }\n","date":"2019-10-25 18:05:12","endLine":135,"groupId":"10195","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"executeCqWithInitialResultsAndAssertThatOnErrorIsInvokedOnNextMatchingEvent","params":"(Stringquery)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/75/cc143f9dfba26d66ce7727b3f1d87bfcbc97c6.src","preCode":"  private void executeCqWithInitialResultsAndAssertThatOnErrorIsInvokedOnNextMatchingEvent(\n      String query) {\n    specificUserClient.invoke(() -> {\n      CqQuery cq = createCq(query);\n      cq.executeWithInitialResults();\n    });\n\n    Object[] keys = {\"key-0\"};\n    Object[] values = {new QueryTestObject(1, \"Mary\")};\n    putIntoRegion(superUserClient, keys, values, regionName);\n    specificUserClient.invoke(\n        () -> await().untilAsserted(() -> assertThat(cqListener.getNumErrors()).isEqualTo(1)));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/security/query/CqSecurityAllowedUsersDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"N"},{"authorDate":"2020-05-29 00:37:39","commitOrder":2,"curCode":"  public void cqQueryWithPublicFieldOnNonEmptyRegionShouldNotThrowException() {\n    putIntoRegion(superUserClient, keys, values, regionName);\n    String query = \"SELECT * FROM \" + SEPARATOR + regionName + \" r WHERE r.id = 0\";\n\n    specificUserClient.invoke(() -> {\n      CqQuery cq = createCq(query);\n      cq.execute();\n    });\n\n    Object[] newValues = new Object[] {new QueryTestObject(0, \"Bethany\")};\n    putIntoRegion(superUserClient, keys, newValues, regionName);\n    specificUserClient.invoke(\n        () -> await().untilAsserted(() -> assertThat(cqListener.getNumEvents()).isEqualTo(1)));\n  }\n","date":"2020-05-29 00:37:39","endLine":152,"groupId":"10195","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"cqQueryWithPublicFieldOnNonEmptyRegionShouldNotThrowException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9f/894f080e09dd58dcecad03f364e0db16f6e095.src","preCode":"  public void cqQueryWithPublicFieldOnNonEmptyRegionShouldNotThrowException() {\n    putIntoRegion(superUserClient, keys, values, regionName);\n    String query = \"SELECT * FROM /\" + regionName + \" r WHERE r.id = 0\";\n\n    specificUserClient.invoke(() -> {\n      CqQuery cq = createCq(query);\n      cq.execute();\n    });\n\n    Object[] newValues = new Object[] {new QueryTestObject(0, \"Bethany\")};\n    putIntoRegion(superUserClient, keys, newValues, regionName);\n    specificUserClient.invoke(\n        () -> await().untilAsserted(() -> assertThat(cqListener.getNumEvents()).isEqualTo(1)));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/security/query/CqSecurityAllowedUsersDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"}]
