[{"authorTime":"2019-07-16 07:30:01","codes":[{"authorDate":"2019-07-16 07:30:01","commitOrder":1,"curCode":"  public void testSingletonHasClientProxiesFalseNoProxy() {\n    InternalCache internalCache = Fakes.cache();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache, mock(CacheServerStats.class), 10,\n            10, mock(ConnectionListener.class), null, true);\n\n    assertFalse(CacheClientNotifier.singletonHasClientProxies());\n    ccn.shutdown(111);\n\n  }\n","date":"2019-07-16 07:30:01","endLine":197,"groupId":"1360","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingletonHasClientProxiesFalseNoProxy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/31/f059bb3cc4e000034df026f00f218b859d352f.src","preCode":"  public void testSingletonHasClientProxiesFalseNoProxy() {\n    InternalCache internalCache = Fakes.cache();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache, mock(CacheServerStats.class), 10,\n            10, mock(ConnectionListener.class), null, true);\n\n    assertFalse(CacheClientNotifier.singletonHasClientProxies());\n    ccn.shutdown(111);\n\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/CacheClientNotifierTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"B"},{"authorDate":"2019-07-16 07:30:01","commitOrder":1,"curCode":"  public void testNotifyClientsOfTombstoneGC() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n\n    Map regionGCVersions = new HashMap();\n    Set keysRemoved = new HashSet();\n    EventID eventID = new EventID();\n    FilterRoutingInfo.FilterInfo routing = null;\n    doReturn(mock(SystemTimer.class)).when(cache).getCCPTimer();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache, mock(CacheServerStats.class), 10,\n            10, mock(ConnectionListener.class), null, true);\n\n    doReturn(mock(ClientProxyMembershipID.class)).when(proxy).getProxyID();\n    ccn.addClientProxyToMap(proxy);\n    doReturn(null).when(bucketRegion).getFilterProfile();\n\n    bucketRegion.notifyClientsOfTombstoneGC(regionGCVersions, keysRemoved, eventID, routing);\n\n    doReturn(Collections.emptyList()).when(cache).getCacheServers();\n    doReturn(Long.valueOf(111)).when(proxy).getAcceptorId();\n\n    ccn.shutdown(111);\n  }\n","date":"2019-07-16 07:30:01","endLine":381,"groupId":"5151","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNotifyClientsOfTombstoneGC","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/bf/ec0d6b9880da984b6b21d9d5833cb13444e8db.src","preCode":"  public void testNotifyClientsOfTombstoneGC() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n\n    Map regionGCVersions = new HashMap();\n    Set keysRemoved = new HashSet();\n    EventID eventID = new EventID();\n    FilterRoutingInfo.FilterInfo routing = null;\n    doReturn(mock(SystemTimer.class)).when(cache).getCCPTimer();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache, mock(CacheServerStats.class), 10,\n            10, mock(ConnectionListener.class), null, true);\n\n    doReturn(mock(ClientProxyMembershipID.class)).when(proxy).getProxyID();\n    ccn.addClientProxyToMap(proxy);\n    doReturn(null).when(bucketRegion).getFilterProfile();\n\n    bucketRegion.notifyClientsOfTombstoneGC(regionGCVersions, keysRemoved, eventID, routing);\n\n    doReturn(Collections.emptyList()).when(cache).getCacheServers();\n    doReturn(Long.valueOf(111)).when(proxy).getAcceptorId();\n\n    ccn.shutdown(111);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"B"}],"commitId":"70b001c9f4c3760a2476e6b56d933fc83eb18a57","commitMessage":"@@@GEODE-6762: Checks added for client proxies (#3761)\n\n* Clients are notified only if proxies are present.\n\n","date":"2019-07-16 07:30:01","modifiedFileCount":"7","status":"B","submitter":"mivanac"},{"authorTime":"2019-08-09 00:33:26","codes":[{"authorDate":"2019-08-09 00:33:26","commitOrder":2,"curCode":"  public void testSingletonHasClientProxiesFalseNoProxy() {\n    InternalCache internalCache = Fakes.cache();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache, mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    assertFalse(CacheClientNotifier.singletonHasClientProxies());\n    ccn.shutdown(111);\n\n  }\n","date":"2019-08-09 00:33:26","endLine":200,"groupId":"1360","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingletonHasClientProxiesFalseNoProxy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2c/1c57c8719f0fe6788c2b1d40f509af9abff77d.src","preCode":"  public void testSingletonHasClientProxiesFalseNoProxy() {\n    InternalCache internalCache = Fakes.cache();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache, mock(CacheServerStats.class), 10,\n            10, mock(ConnectionListener.class), null, true);\n\n    assertFalse(CacheClientNotifier.singletonHasClientProxies());\n    ccn.shutdown(111);\n\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/CacheClientNotifierTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"},{"authorDate":"2019-08-09 00:33:26","commitOrder":2,"curCode":"  public void testNotifyClientsOfTombstoneGC() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n\n    Map regionGCVersions = new HashMap();\n    Set keysRemoved = new HashSet();\n    EventID eventID = new EventID();\n    FilterRoutingInfo.FilterInfo routing = null;\n    doReturn(mock(SystemTimer.class)).when(cache).getCCPTimer();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache, mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    doReturn(mock(ClientProxyMembershipID.class)).when(proxy).getProxyID();\n    ccn.addClientProxyToMap(proxy);\n    doReturn(null).when(bucketRegion).getFilterProfile();\n\n    bucketRegion.notifyClientsOfTombstoneGC(regionGCVersions, keysRemoved, eventID, routing);\n\n    doReturn(Collections.emptyList()).when(cache).getCacheServers();\n    doReturn(Long.valueOf(111)).when(proxy).getAcceptorId();\n\n    ccn.shutdown(111);\n  }\n","date":"2019-08-09 00:33:26","endLine":383,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNotifyClientsOfTombstoneGC","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/e392d94a06da690cb7c91620ad7e3660b9a4d6.src","preCode":"  public void testNotifyClientsOfTombstoneGC() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n\n    Map regionGCVersions = new HashMap();\n    Set keysRemoved = new HashSet();\n    EventID eventID = new EventID();\n    FilterRoutingInfo.FilterInfo routing = null;\n    doReturn(mock(SystemTimer.class)).when(cache).getCCPTimer();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache, mock(CacheServerStats.class), 10,\n            10, mock(ConnectionListener.class), null, true);\n\n    doReturn(mock(ClientProxyMembershipID.class)).when(proxy).getProxyID();\n    ccn.addClientProxyToMap(proxy);\n    doReturn(null).when(bucketRegion).getFilterProfile();\n\n    bucketRegion.notifyClientsOfTombstoneGC(regionGCVersions, keysRemoved, eventID, routing);\n\n    doReturn(Collections.emptyList()).when(cache).getCacheServers();\n    doReturn(Long.valueOf(111)).when(proxy).getAcceptorId();\n\n    ccn.shutdown(111);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"}],"commitId":"b49279477a4c79b90220fb34239d12c2d9e50782","commitMessage":"@@@GEODE-7010: Replace static globals in CachePerfStats with StatisticsClock (#3859)\n\n* Replace CachePerfStats.getStatTime with Cache owned StatisticsClock\n* Inject StatisticsClock dependency via constructor\n","date":"2019-08-09 00:33:26","modifiedFileCount":"134","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-08-21 06:52:35","codes":[{"authorDate":"2019-08-21 06:52:35","commitOrder":3,"curCode":"  public void testSingletonHasClientProxiesFalseNoProxy() {\n    InternalCache internalCache = Fakes.cache();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache,\n            mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    assertFalse(CacheClientNotifier.singletonHasClientProxies());\n    ccn.shutdown(111);\n\n  }\n","date":"2019-08-21 06:52:35","endLine":250,"groupId":"1360","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingletonHasClientProxiesFalseNoProxy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/b828e190d79d132d7a8ae2a4cf4f75a660da04.src","preCode":"  public void testSingletonHasClientProxiesFalseNoProxy() {\n    InternalCache internalCache = Fakes.cache();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache, mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    assertFalse(CacheClientNotifier.singletonHasClientProxies());\n    ccn.shutdown(111);\n\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/CacheClientNotifierTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2019-08-21 06:52:35","commitOrder":3,"curCode":"  public void testNotifyClientsOfTombstoneGC() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n\n    Map regionGCVersions = new HashMap();\n    Set keysRemoved = new HashSet();\n    EventID eventID = new EventID();\n    FilterRoutingInfo.FilterInfo routing = null;\n    doReturn(mock(SystemTimer.class)).when(cache).getCCPTimer();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache, mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    doReturn(mock(ClientProxyMembershipID.class)).when(proxy).getProxyID();\n    ccn.addClientProxyToMap(proxy);\n    doReturn(null).when(bucketRegion).getFilterProfile();\n\n    bucketRegion.notifyClientsOfTombstoneGC(regionGCVersions, keysRemoved, eventID, routing);\n\n    doReturn(Collections.emptyList()).when(cache).getCacheServers();\n    doReturn(Long.valueOf(111)).when(proxy).getAcceptorId();\n\n    ccn.shutdown(111);\n  }\n","date":"2019-08-21 06:52:35","endLine":386,"groupId":"46696","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNotifyClientsOfTombstoneGC","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/20/425571909986435052a53f194a38f2b8eed73b.src","preCode":"  public void testNotifyClientsOfTombstoneGC() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n\n    Map regionGCVersions = new HashMap();\n    Set keysRemoved = new HashSet();\n    EventID eventID = new EventID();\n    FilterRoutingInfo.FilterInfo routing = null;\n    doReturn(mock(SystemTimer.class)).when(cache).getCCPTimer();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache, mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    doReturn(mock(ClientProxyMembershipID.class)).when(proxy).getProxyID();\n    ccn.addClientProxyToMap(proxy);\n    doReturn(null).when(bucketRegion).getFilterProfile();\n\n    bucketRegion.notifyClientsOfTombstoneGC(regionGCVersions, keysRemoved, eventID, routing);\n\n    doReturn(Collections.emptyList()).when(cache).getCacheServers();\n    doReturn(Long.valueOf(111)).when(proxy).getAcceptorId();\n\n    ccn.shutdown(111);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":360,"status":"M"}],"commitId":"5d0153ad4adb1612a1083673f98b1982819a6589","commitMessage":"@@@GEODE-7089: Each client registration thread uses its own queue\n\nCo-authored-by: Ryan McMahon <rmcmahon@pivotal.io>\nCo-authored-by: Donal Evans <doevans@pivotal.io>","date":"2019-08-21 06:52:35","modifiedFileCount":"11","status":"M","submitter":"Ryan McMahon"},{"authorTime":"2019-08-21 06:52:35","codes":[{"authorDate":"2021-01-27 05:38:01","commitOrder":4,"curCode":"  public void testSingletonHasClientProxiesFalseNoProxy() {\n    when(internalCache.getCCPTimer())\n        .thenReturn(mock(SystemTimer.class));\n\n    cacheClientNotifier = CacheClientNotifier.getInstance(internalCache,\n        mock(ClientRegistrationEventQueueManager.class), mock(StatisticsClock.class),\n        mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    assertThat(CacheClientNotifier.singletonHasClientProxies()).isFalse();\n  }\n","date":"2021-01-27 05:38:01","endLine":285,"groupId":"102171","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingletonHasClientProxiesFalseNoProxy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b9/bb56ebbdb8f635733f221e6922d193b4726971.src","preCode":"  public void testSingletonHasClientProxiesFalseNoProxy() {\n    InternalCache internalCache = Fakes.cache();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache,\n            mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    assertFalse(CacheClientNotifier.singletonHasClientProxies());\n    ccn.shutdown(111);\n\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/CacheClientNotifierTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"M"},{"authorDate":"2019-08-21 06:52:35","commitOrder":4,"curCode":"  public void testNotifyClientsOfTombstoneGC() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n\n    Map regionGCVersions = new HashMap();\n    Set keysRemoved = new HashSet();\n    EventID eventID = new EventID();\n    FilterRoutingInfo.FilterInfo routing = null;\n    doReturn(mock(SystemTimer.class)).when(cache).getCCPTimer();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache, mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    doReturn(mock(ClientProxyMembershipID.class)).when(proxy).getProxyID();\n    ccn.addClientProxyToMap(proxy);\n    doReturn(null).when(bucketRegion).getFilterProfile();\n\n    bucketRegion.notifyClientsOfTombstoneGC(regionGCVersions, keysRemoved, eventID, routing);\n\n    doReturn(Collections.emptyList()).when(cache).getCacheServers();\n    doReturn(Long.valueOf(111)).when(proxy).getAcceptorId();\n\n    ccn.shutdown(111);\n  }\n","date":"2019-08-21 06:52:35","endLine":386,"groupId":"102171","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNotifyClientsOfTombstoneGC","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/20/425571909986435052a53f194a38f2b8eed73b.src","preCode":"  public void testNotifyClientsOfTombstoneGC() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n\n    Map regionGCVersions = new HashMap();\n    Set keysRemoved = new HashSet();\n    EventID eventID = new EventID();\n    FilterRoutingInfo.FilterInfo routing = null;\n    doReturn(mock(SystemTimer.class)).when(cache).getCCPTimer();\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache, mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    doReturn(mock(ClientProxyMembershipID.class)).when(proxy).getProxyID();\n    ccn.addClientProxyToMap(proxy);\n    doReturn(null).when(bucketRegion).getFilterProfile();\n\n    bucketRegion.notifyClientsOfTombstoneGC(regionGCVersions, keysRemoved, eventID, routing);\n\n    doReturn(Collections.emptyList()).when(cache).getCacheServers();\n    doReturn(Long.valueOf(111)).when(proxy).getAcceptorId();\n\n    ccn.shutdown(111);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":360,"status":"N"}],"commitId":"f8987edd090558ba17f715e7e5fdb00e898e72eb","commitMessage":"@@@GEODE-8811: Fix new value in events for failing client (#5953)\n\n* Declare parameters as interfaces instead of implementations.\n* Improve unit testing of CacheClientNotifier.\n* Use MockitoRule with STRICT_STUBS.","date":"2021-01-27 05:38:01","modifiedFileCount":"9","status":"M","submitter":"Kirk Lund"}]
