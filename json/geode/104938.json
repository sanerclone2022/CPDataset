[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testQueriesOnReplicatedRegionWithIndex() {\n    Cache cache = CacheUtils.getCache();\n\n    createReplicatedRegion();\n    assertNotNull(cache.getRegion(regionName));\n    assertEquals(numElem * 2, cache.getRegion(regionName).size());\n\n    QueryService queryService = cache.getQueryService();\n    Query query1 = null;\n    try {\n      queryService.createIndex(\"idIndex\", \"p.ID\", \"/\" + regionName + \" p\");\n      for (String queryStr : queries) {\n        query1 = queryService.newQuery(queryStr);\n\n        SelectResults result1 = (SelectResults) query1.execute();\n\n        assertEquals(queryStr, numElem * 2, result1.size());\n        verifyDistinctResults(result1);\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\"Query \" + query1 + \" Execution Failed!\");\n    }\n\n    \r\n    cache.getRegion(regionName).destroyRegion();\n  }\n","date":"2018-07-18 03:54:18","endLine":350,"groupId":"49427","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueriesOnReplicatedRegionWithIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/95/6f7ea47475b507b17cb87f69d4e8213b27203b.src","preCode":"  public void testQueriesOnReplicatedRegionWithIndex() {\n    Cache cache = CacheUtils.getCache();\n\n    createReplicatedRegion();\n    assertNotNull(cache.getRegion(regionName));\n    assertEquals(numElem * 2, cache.getRegion(regionName).size());\n\n    QueryService queryService = cache.getQueryService();\n    Query query1 = null;\n    try {\n      queryService.createIndex(\"idIndex\", \"p.ID\", \"/\" + regionName + \" p\");\n      for (String queryStr : queries) {\n        query1 = queryService.newQuery(queryStr);\n\n        SelectResults result1 = (SelectResults) query1.execute();\n\n        assertEquals(queryStr, numElem * 2, result1.size());\n        verifyDistinctResults(result1);\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\"Query \" + query1 + \" Execution Failed!\");\n    }\n\n    \r\n    cache.getRegion(regionName).destroyRegion();\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/DistinctResultsWithDupValuesInRegionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":324,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testQueriesOnReplicatedRegionWithSameProjAttr() throws Exception {\n    Cache cache = CacheUtils.getCache();\n    createReplicatedRegion();\n    assertNotNull(cache.getRegion(regionName));\n    assertEquals(numElem * 2, cache.getRegion(regionName).size());\n    executeQueryTest(cache, projectionQueries, toDateExpectedResults);\n  }\n","date":"2018-07-18 03:54:18","endLine":171,"groupId":"25002","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueriesOnReplicatedRegionWithSameProjAttr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/27/4ffdd261d6b6eb00468f92e3d15224b92f9c4f.src","preCode":"  public void testQueriesOnReplicatedRegionWithSameProjAttr() throws Exception {\n    Cache cache = CacheUtils.getCache();\n    createReplicatedRegion();\n    assertNotNull(cache.getRegion(regionName));\n    assertEquals(numElem * 2, cache.getRegion(regionName).size());\n    executeQueryTest(cache, projectionQueries, toDateExpectedResults);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/SelectToDateJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2020-05-09 09:44:08","commitOrder":2,"curCode":"  public void testQueriesOnReplicatedRegionWithIndex() {\n    Cache cache = CacheUtils.getCache();\n\n    createReplicatedRegion();\n    assertNotNull(cache.getRegion(regionName));\n    assertEquals(numElem * 2, cache.getRegion(regionName).size());\n\n    QueryService queryService = cache.getQueryService();\n    Query query1 = null;\n    try {\n      queryService.createIndex(\"idIndex\", \"p.ID\", SEPARATOR + regionName + \" p\");\n      for (String queryStr : queries) {\n        query1 = queryService.newQuery(queryStr);\n\n        SelectResults result1 = (SelectResults) query1.execute();\n\n        assertEquals(queryStr, numElem * 2, result1.size());\n        verifyDistinctResults(result1);\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\"Query \" + query1 + \" Execution Failed!\");\n    }\n\n    \r\n    cache.getRegion(regionName).destroyRegion();\n  }\n","date":"2020-05-09 09:44:08","endLine":351,"groupId":"104938","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueriesOnReplicatedRegionWithIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e1/1045827a59afb0bec06b66f233126feab786d1.src","preCode":"  public void testQueriesOnReplicatedRegionWithIndex() {\n    Cache cache = CacheUtils.getCache();\n\n    createReplicatedRegion();\n    assertNotNull(cache.getRegion(regionName));\n    assertEquals(numElem * 2, cache.getRegion(regionName).size());\n\n    QueryService queryService = cache.getQueryService();\n    Query query1 = null;\n    try {\n      queryService.createIndex(\"idIndex\", \"p.ID\", \"/\" + regionName + \" p\");\n      for (String queryStr : queries) {\n        query1 = queryService.newQuery(queryStr);\n\n        SelectResults result1 = (SelectResults) query1.execute();\n\n        assertEquals(queryStr, numElem * 2, result1.size());\n        verifyDistinctResults(result1);\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\"Query \" + query1 + \" Execution Failed!\");\n    }\n\n    \r\n    cache.getRegion(regionName).destroyRegion();\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/DistinctResultsWithDupValuesInRegionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"M"},{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  public void testQueriesOnReplicatedRegionWithSameProjAttr() throws Exception {\n    Cache cache = CacheUtils.getCache();\n    createReplicatedRegion();\n    assertNotNull(cache.getRegion(regionName));\n    assertEquals(numElem * 2, cache.getRegion(regionName).size());\n    executeQueryTest(cache, projectionQueries, toDateExpectedResults);\n  }\n","date":"2018-07-18 03:54:18","endLine":171,"groupId":"104938","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueriesOnReplicatedRegionWithSameProjAttr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/27/4ffdd261d6b6eb00468f92e3d15224b92f9c4f.src","preCode":"  public void testQueriesOnReplicatedRegionWithSameProjAttr() throws Exception {\n    Cache cache = CacheUtils.getCache();\n    createReplicatedRegion();\n    assertNotNull(cache.getRegion(regionName));\n    assertEquals(numElem * 2, cache.getRegion(regionName).size());\n    executeQueryTest(cache, projectionQueries, toDateExpectedResults);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/SelectToDateJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"N"}],"commitId":"8f0650e83e22d4c22d9bf9b15beffff0fcb451d2","commitMessage":"@@@GEODE-7864: Replace uses of hardcoded \"/\" with Region.SEPARATOR (#5049)\n\n* GEODE-7864: Replace uses of hardcoded \"/\" with Region.SEPARATOR\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-09 09:44:08","modifiedFileCount":"149","status":"M","submitter":"Donal Evans"}]
