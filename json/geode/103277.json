[{"authorTime":"2020-02-26 08:26:12","codes":[{"authorDate":"2020-02-26 08:26:12","commitOrder":3,"curCode":"  public void sendAlertSendsMessageIfMemberIsRemote() {\n    DistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    ClusterAlertMessaging clusterAlertMessaging =\n        spyClusterAlertMessaging(distributionManager, currentThreadExecutorService());\n\n    clusterAlertMessaging.sendAlert(remoteMember, AlertLevel.WARNING, Instant.now(), \"threadName\",\n        Thread.currentThread().getId(), \"formattedMessage\", \"stackTrace\");\n\n    verify(distributionManager).putOutgoing(eq(alertListenerMessage));\n  }\n","date":"2020-02-26 08:26:12","endLine":108,"groupId":"5847","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sendAlertSendsMessageIfMemberIsRemote","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/44/71ed37e4e2641ac97d4fbdb25a707b70b34061.src","preCode":"  public void sendAlertSendsMessageIfMemberIsRemote() {\n    DistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    ClusterAlertMessaging clusterAlertMessaging =\n        spyClusterAlertMessaging(distributionManager, currentThreadExecutorService());\n\n    clusterAlertMessaging.sendAlert(remoteMember, AlertLevel.WARNING, Instant.now(), \"threadName\",\n        Thread.currentThread().getId(), \"formattedMessage\", \"stackTrace\");\n\n    verify(distributionManager).putOutgoing(eq(alertListenerMessage));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/alerting/internal/ClusterAlertMessagingTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"MB"},{"authorDate":"2020-02-26 08:26:12","commitOrder":3,"curCode":"  public void sendAlertDoesNotSend_ifAlertingIOExceptionIsCaught() {\n    ExecutorService executor = currentThreadExecutorService();\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    ClusterAlertMessaging clusterAlertMessaging =\n        spyClusterAlertMessaging(distributionManager, executor);\n    when(distributionManager.putOutgoing(any()))\n        .thenAnswer(invocation -> {\n          assertThat(AlertingAction.isThreadAlerting()).isTrue();\n          return null;\n        });\n\n    clusterAlertMessaging.sendAlert(remoteMember, AlertLevel.WARNING, Instant.now(), \"threadName\",\n        Thread.currentThread().getId(), \"formattedMessage\", \"stackTrace\");\n\n    verifyZeroInteractions(distributionManager);\n  }\n","date":"2020-02-26 08:26:12","endLine":196,"groupId":"5848","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAlertDoesNotSend_ifAlertingIOExceptionIsCaught","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/44/71ed37e4e2641ac97d4fbdb25a707b70b34061.src","preCode":"  public void sendAlertDoesNotSend_ifAlertingIOExceptionIsCaught() {\n    ExecutorService executor = currentThreadExecutorService();\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    ClusterAlertMessaging clusterAlertMessaging =\n        spyClusterAlertMessaging(distributionManager, executor);\n    when(distributionManager.putOutgoing(any()))\n        .thenAnswer(invocation -> {\n          assertThat(AlertingAction.isThreadAlerting()).isTrue();\n          return null;\n        });\n\n    clusterAlertMessaging.sendAlert(remoteMember, AlertLevel.WARNING, Instant.now(), \"threadName\",\n        Thread.currentThread().getId(), \"formattedMessage\", \"stackTrace\");\n\n    verifyZeroInteractions(distributionManager);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/alerting/internal/ClusterAlertMessagingTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"B"}],"commitId":"387848f10c0362569b453ca3ed583990547bac84","commitMessage":"@@@GEODE-7810: Change alert listener connection warning from fatal (#4728)\n\nAdd AlertingIOException to excludedClasses.txt for geode-core\nAnalyzeSerializablesJUnitTest.\n","date":"2020-02-26 08:26:12","modifiedFileCount":"3","status":"M","submitter":"Kirk Lund"},{"authorTime":"2020-04-25 00:20:21","codes":[{"authorDate":"2020-02-26 08:26:12","commitOrder":4,"curCode":"  public void sendAlertSendsMessageIfMemberIsRemote() {\n    DistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    ClusterAlertMessaging clusterAlertMessaging =\n        spyClusterAlertMessaging(distributionManager, currentThreadExecutorService());\n\n    clusterAlertMessaging.sendAlert(remoteMember, AlertLevel.WARNING, Instant.now(), \"threadName\",\n        Thread.currentThread().getId(), \"formattedMessage\", \"stackTrace\");\n\n    verify(distributionManager).putOutgoing(eq(alertListenerMessage));\n  }\n","date":"2020-02-26 08:26:12","endLine":108,"groupId":"103277","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sendAlertSendsMessageIfMemberIsRemote","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/44/71ed37e4e2641ac97d4fbdb25a707b70b34061.src","preCode":"  public void sendAlertSendsMessageIfMemberIsRemote() {\n    DistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    ClusterAlertMessaging clusterAlertMessaging =\n        spyClusterAlertMessaging(distributionManager, currentThreadExecutorService());\n\n    clusterAlertMessaging.sendAlert(remoteMember, AlertLevel.WARNING, Instant.now(), \"threadName\",\n        Thread.currentThread().getId(), \"formattedMessage\", \"stackTrace\");\n\n    verify(distributionManager).putOutgoing(eq(alertListenerMessage));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/alerting/internal/ClusterAlertMessagingTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"},{"authorDate":"2020-04-25 00:20:21","commitOrder":4,"curCode":"  public void sendAlertDoesNotSend_ifAlertingIOExceptionIsCaught() {\n    ExecutorService executor = currentThreadExecutorService();\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    ClusterAlertMessaging clusterAlertMessaging =\n        spyClusterAlertMessaging(distributionManager, executor);\n    when(distributionManager.putOutgoing(any()))\n        .thenAnswer(invocation -> {\n          assertThat(AlertingAction.isThreadAlerting()).isTrue();\n          return null;\n        });\n\n    clusterAlertMessaging.sendAlert(remoteMember, AlertLevel.WARNING, Instant.now(), \"threadName\",\n        Thread.currentThread().getId(), \"formattedMessage\", \"stackTrace\");\n\n    verifyNoMoreInteractions(distributionManager);\n  }\n","date":"2020-04-25 00:20:21","endLine":196,"groupId":"103277","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAlertDoesNotSend_ifAlertingIOExceptionIsCaught","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f7/bc8d84098b995077443941b0eec4d7733eef30.src","preCode":"  public void sendAlertDoesNotSend_ifAlertingIOExceptionIsCaught() {\n    ExecutorService executor = currentThreadExecutorService();\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    ClusterAlertMessaging clusterAlertMessaging =\n        spyClusterAlertMessaging(distributionManager, executor);\n    when(distributionManager.putOutgoing(any()))\n        .thenAnswer(invocation -> {\n          assertThat(AlertingAction.isThreadAlerting()).isTrue();\n          return null;\n        });\n\n    clusterAlertMessaging.sendAlert(remoteMember, AlertLevel.WARNING, Instant.now(), \"threadName\",\n        Thread.currentThread().getId(), \"formattedMessage\", \"stackTrace\");\n\n    verifyZeroInteractions(distributionManager);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/alerting/internal/ClusterAlertMessagingTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"0a1701e92dc09bcd6b79edd3b52f20ee9e9a867c","commitMessage":"@@@GEODE-7964: Upgrade Mockito to 3.3.3 (#4924)\n\n","date":"2020-04-25 00:20:21","modifiedFileCount":"34","status":"M","submitter":"Kirk Lund"}]
