[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void testCharacter() throws Exception {\n    char c = (char) ('A' + getRandom().nextInt('Z' - 'A'));\n    Character value = new Character(c);\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeCharacter(value, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    Character value2 = DataSerializer.readCharacter(in);\n    assertEquals(value, value2);\n  }\n","date":"2016-09-15 02:08:18","endLine":557,"groupId":"42986","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCharacter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/75461e4dc621b2a51d03b8d0734e38d304cc3e.src","preCode":"  public void testCharacter() throws Exception {\n    char c = (char) ('A' + getRandom().nextInt('Z' - 'A'));\n    Character value = new Character(c);\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeCharacter(value, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    Character value2 = DataSerializer.readCharacter(in);\n    assertEquals(value, value2);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":546,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void testInteger() throws Exception {\n    Integer value = new Integer(getRandom().nextInt());\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeInteger(value, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    Integer value2 = DataSerializer.readInteger(in);\n    assertEquals(value, value2);\n  }\n","date":"2016-09-15 02:08:18","endLine":659,"groupId":"42986","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/75461e4dc621b2a51d03b8d0734e38d304cc3e.src","preCode":"  public void testInteger() throws Exception {\n    Integer value = new Integer(getRandom().nextInt());\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeInteger(value, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    Integer value2 = DataSerializer.readInteger(in);\n    assertEquals(value, value2);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":649,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2021-05-19 13:32:42","codes":[{"authorDate":"2021-05-19 13:32:42","commitOrder":2,"curCode":"  public void testCharacter() throws Exception {\n    Character value = (char) ('A' + getRandom().nextInt('Z' - 'A'));\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeCharacter(value, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    Character value2 = DataSerializer.readCharacter(in);\n    assertEquals(value, value2);\n  }\n","date":"2021-06-30 01:58:48","endLine":556,"groupId":"102630","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testCharacter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e9/722f7b9d627c7bfd09d36a5a25ec55cb733e67.src","preCode":"  public void testCharacter() throws Exception {\n    char c = (char) ('A' + getRandom().nextInt('Z' - 'A'));\n    Character value = new Character(c);\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeCharacter(value, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    Character value2 = DataSerializer.readCharacter(in);\n    assertEquals(value, value2);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":546,"status":"M"},{"authorDate":"2021-05-19 13:32:42","commitOrder":2,"curCode":"  public void testInteger() throws Exception {\n    Integer value = getRandom().nextInt();\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeInteger(value, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    Integer value2 = DataSerializer.readInteger(in);\n    assertEquals(value, value2);\n  }\n","date":"2021-06-30 01:58:48","endLine":653,"groupId":"102630","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e9/722f7b9d627c7bfd09d36a5a25ec55cb733e67.src","preCode":"  public void testInteger() throws Exception {\n    Integer value = new Integer(getRandom().nextInt());\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeInteger(value, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    Integer value2 = DataSerializer.readInteger(in);\n    assertEquals(value, value2);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":643,"status":"M"}],"commitId":"cc6f2c307d66eb37b44bc33ac2f8a7f1f517ce13","commitMessage":"@@@GEODE-6588: Cleanup DataSerializableJUnitTest\n","date":"2021-06-30 01:58:48","modifiedFileCount":"1","status":"M","submitter":"Jacob Barrett"}]
