[{"authorTime":"2019-03-06 03:06:27","codes":[{"authorDate":"2019-03-06 03:06:27","commitOrder":1,"curCode":"  public void createWithSystem_setsConstructedCache_onGivenSystem_ifSystemCacheIsClosed() {\n    InternalDistributedSystem givenSystem = givenSystemWithCache(CLOSED);\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(),\n        THROWING_SYSTEM_SUPPLIER, THROWING_SYSTEM_CONSTRUCTOR,\n        THROWING_CACHE_SUPPLIER, constructorOf(constructedCache));\n\n    internalCacheBuilder\n        .create(givenSystem);\n\n    verify(givenSystem).setCache(same(constructedCache));\n  }\n","date":"2019-03-06 03:06:27","endLine":262,"groupId":"6109","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createWithSystem_setsConstructedCache_onGivenSystem_ifSystemCacheIsClosed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ba/ba4529ee3003f11f5d94a7360a7708e9b55904.src","preCode":"  public void createWithSystem_setsConstructedCache_onGivenSystem_ifSystemCacheIsClosed() {\n    InternalDistributedSystem givenSystem = givenSystemWithCache(CLOSED);\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(),\n        THROWING_SYSTEM_SUPPLIER, THROWING_SYSTEM_CONSTRUCTOR,\n        THROWING_CACHE_SUPPLIER, constructorOf(constructedCache));\n\n    internalCacheBuilder\n        .create(givenSystem);\n\n    verify(givenSystem).setCache(same(constructedCache));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/InternalCacheBuilderAllowsMultipleSystemsTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"B"},{"authorDate":"2019-03-06 03:06:27","commitOrder":1,"curCode":"  public void createWithSystem_returnsConstructedCache_ifSingletonCacheIsClosed() {\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(),\n        THROWING_SYSTEM_SUPPLIER, THROWING_SYSTEM_CONSTRUCTOR,\n        supplierOf(singletonCache(CLOSED)), constructorOf(constructedCache));\n\n    InternalCache result = internalCacheBuilder\n        .create(givenSystem());\n\n    assertThat(result).isSameAs(constructedCache);\n  }\n","date":"2019-03-06 03:06:27","endLine":403,"groupId":"6100","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createWithSystem_returnsConstructedCache_ifSingletonCacheIsClosed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/28/14376db67ff5d1cee716aff89dc48a07141bc2.src","preCode":"  public void createWithSystem_returnsConstructedCache_ifSingletonCacheIsClosed() {\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(),\n        THROWING_SYSTEM_SUPPLIER, THROWING_SYSTEM_CONSTRUCTOR,\n        supplierOf(singletonCache(CLOSED)), constructorOf(constructedCache));\n\n    InternalCache result = internalCacheBuilder\n        .create(givenSystem());\n\n    assertThat(result).isSameAs(constructedCache);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/InternalCacheBuilderTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":391,"status":"B"}],"commitId":"483efb041c6ecbe13f3643ed7602ee69720f1645","commitMessage":"@@@GEODE-6295: Use InternalCacheBuilder for constructing GemFireCacheImpl (#3260)\n\nAll code (product and tests) now use InternalCacheBuilder to construct\ninstances of GemFireCacheImpl.\n","date":"2019-03-06 03:06:27","modifiedFileCount":"11","status":"B","submitter":"Kirk Lund"},{"authorTime":"2019-03-14 05:16:34","codes":[{"authorDate":"2019-03-14 05:16:34","commitOrder":2,"curCode":"  public void createWithSystem_setsConstructedCache_onGivenSystem_ifSystemCacheIsClosed() {\n    InternalDistributedSystem givenSystem = givenSystemWithCache(CLOSED);\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(),\n        compositeMeterRegistryFactory, metricsSessionInitializer,\n        THROWING_SYSTEM_SUPPLIER, THROWING_SYSTEM_CONSTRUCTOR,\n        THROWING_CACHE_SUPPLIER, constructorOf(constructedCache));\n\n    internalCacheBuilder\n        .create(givenSystem);\n\n    verify(givenSystem).setCache(same(constructedCache));\n  }\n","date":"2019-03-14 05:16:34","endLine":289,"groupId":"36937","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createWithSystem_setsConstructedCache_onGivenSystem_ifSystemCacheIsClosed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ed/0ac665bdf7bd7481615914b907b87d3ecf7d66.src","preCode":"  public void createWithSystem_setsConstructedCache_onGivenSystem_ifSystemCacheIsClosed() {\n    InternalDistributedSystem givenSystem = givenSystemWithCache(CLOSED);\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(),\n        THROWING_SYSTEM_SUPPLIER, THROWING_SYSTEM_CONSTRUCTOR,\n        THROWING_CACHE_SUPPLIER, constructorOf(constructedCache));\n\n    internalCacheBuilder\n        .create(givenSystem);\n\n    verify(givenSystem).setCache(same(constructedCache));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/InternalCacheBuilderAllowsMultipleSystemsTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":275,"status":"M"},{"authorDate":"2019-03-14 05:16:34","commitOrder":2,"curCode":"  public void createWithSystem_returnsConstructedCache_ifSingletonCacheIsClosed() {\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(),\n        compositeMeterRegistryFactory, metricsSessionInitializer,\n        THROWING_SYSTEM_SUPPLIER, THROWING_SYSTEM_CONSTRUCTOR,\n        supplierOf(singletonCache(CLOSED)), constructorOf(constructedCache));\n\n    InternalCache result = internalCacheBuilder\n        .create(givenSystem());\n\n    assertThat(result).isSameAs(constructedCache);\n  }\n","date":"2019-03-14 05:16:34","endLine":485,"groupId":"36937","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createWithSystem_returnsConstructedCache_ifSingletonCacheIsClosed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e3/0a1a76062967a04e60bf1088da1039149b6a2f.src","preCode":"  public void createWithSystem_returnsConstructedCache_ifSingletonCacheIsClosed() {\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(),\n        THROWING_SYSTEM_SUPPLIER, THROWING_SYSTEM_CONSTRUCTOR,\n        supplierOf(singletonCache(CLOSED)), constructorOf(constructedCache));\n\n    InternalCache result = internalCacheBuilder\n        .create(givenSystem());\n\n    assertThat(result).isSameAs(constructedCache);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/InternalCacheBuilderTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":472,"status":"M"}],"commitId":"8ee587c0d2e301775dae6a1eecba4f9a9a258ca6","commitMessage":"@@@GEODE-6295: Add Micrometer-based metrics system (#3277)\n\n- Add MetricsSession interface that represents the lifecycle of a meter\n  registry.  and allows connecting \"downstream\" registries.\n- Add MetricsPublishingService interface that defines a service that\n  can be implemented to interact with MetricsSessions by connecting\n  \"downstream\" registries to publish metrics to external monitoring\n  systems.\n- Add CompositeMeterRegistryFactory whichs handles creating the\n  composite meter registry for the cache and defining its common tags.\n- Add CacheLifecycleMetricsSession class that loads implementations of\n  MetricsPublishingService and manages the cache meter registry based\n  on the cache lifecycle.\n- InternalCacheBuilder uses CompositeMeterRegistryFactory to create the\n  cache meter registry and starts a CacheLifecycleMetricsSession. The\n  cache meter registry is passed to GemFireCacheImpl and exposed to\n  internal Geode code by InternalCache.getMeterRegistry().\n\nCo-Authored-By: Dale Emery <demery@pivotal.io>\nCo-Authored-By: Michael Oleske <moleske@pivotal.io>\nCo-Authored-By: Mark Hanson <mhanson@pivotal.io>\nCo-Authored-By: Kirk Lund <klund@apache.org>","date":"2019-03-14 05:16:34","modifiedFileCount":"9","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-10-26 00:25:37","codes":[{"authorDate":"2019-10-26 00:25:37","commitOrder":3,"curCode":"  public void createWithSystem_setsConstructedCache_onGivenSystem_ifSystemCacheIsClosed() {\n    InternalCache closedCache = cache(CLOSED);\n    InternalDistributedSystem givenSystem = systemWith(closedCache);\n\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(), metricsSessionBuilder, THROWING_SYSTEM_SUPPLIER,\n        THROWING_SYSTEM_CONSTRUCTOR, THROWING_CACHE_SUPPLIER, constructorOf(constructedCache));\n\n    internalCacheBuilder\n        .create(givenSystem);\n\n    verify(givenSystem).setCache(same(constructedCache));\n  }\n","date":"2019-10-26 00:25:37","endLine":253,"groupId":"101722","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"createWithSystem_setsConstructedCache_onGivenSystem_ifSystemCacheIsClosed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a9/c0edb44b1e07e3a8aa4b60f32c1a404302ca0c.src","preCode":"  public void createWithSystem_setsConstructedCache_onGivenSystem_ifSystemCacheIsClosed() {\n    InternalDistributedSystem givenSystem = givenSystemWithCache(CLOSED);\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(),\n        compositeMeterRegistryFactory, metricsSessionInitializer,\n        THROWING_SYSTEM_SUPPLIER, THROWING_SYSTEM_CONSTRUCTOR,\n        THROWING_CACHE_SUPPLIER, constructorOf(constructedCache));\n\n    internalCacheBuilder\n        .create(givenSystem);\n\n    verify(givenSystem).setCache(same(constructedCache));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/InternalCacheBuilderAllowsMultipleSystemsTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"},{"authorDate":"2019-10-26 00:25:37","commitOrder":3,"curCode":"  public void createWithSystem_returnsConstructedCache_ifSingletonCacheIsClosed() {\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(), metricsServiceBuilder, THROWING_SYSTEM_SUPPLIER,\n        THROWING_SYSTEM_CONSTRUCTOR,\n        supplierOf(cache(\"singleton\", CLOSED)), constructorOf(constructedCache));\n\n    InternalCache result = internalCacheBuilder\n        .create(systemWithNoCache());\n\n    assertThat(result).isSameAs(constructedCache);\n  }\n","date":"2019-10-26 00:25:37","endLine":464,"groupId":"101722","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createWithSystem_returnsConstructedCache_ifSingletonCacheIsClosed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ab/e34d3ff38229ad89abc86ad41af1927baa9eeb.src","preCode":"  public void createWithSystem_returnsConstructedCache_ifSingletonCacheIsClosed() {\n    InternalCache constructedCache = constructedCache();\n\n    InternalCacheBuilder internalCacheBuilder = new InternalCacheBuilder(\n        new Properties(), new CacheConfig(),\n        compositeMeterRegistryFactory, metricsSessionInitializer,\n        THROWING_SYSTEM_SUPPLIER, THROWING_SYSTEM_CONSTRUCTOR,\n        supplierOf(singletonCache(CLOSED)), constructorOf(constructedCache));\n\n    InternalCache result = internalCacheBuilder\n        .create(givenSystem());\n\n    assertThat(result).isSameAs(constructedCache);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/InternalCacheBuilderTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"M"}],"commitId":"95745912c14762cedb397ae97fd7d8e0f63a385f","commitMessage":"@@@GEODE-7171: Encapsulate metrics session (#4203)\n\nMetrics session responsibilities are starting to appear in too many\nparts of Geode. This change encapsulates those responsibilities into a\nsingle class.\n\nChanges to core Geode classes:\n\n- GemFireCacheImpl no longer holds a meter registry or the set of \"user\"\n  registries added by the cache builder.\n\n- InternalCacheBuilder no longer constructs objects on behalf of the\n  metrics session.  Instead.  it gathers meter registries and other\n  details into a MetricsService.Builder.  which it passes to the\n  InternalDistributedSystem.Builder.\n\n- InternalDistributedSystem no longer knows about client meter\n  registries. Instead.  it holds a MetricsService.  which remembers its\n  builder.  During reconnect.  the InternalDistributedSystem retrieves\n  the builder from its metrics service.  and uses the builder to build\n  a similar metrics service in the reconnected system.\n\nNew classes and interfaces (org.apache.geode.metrics.internal):\n\n- StandardMeterBinder\n  - Binds standard meter binders to the meter registry.\n  - close() closes the closeable binders.  freeing their resources.\n\n- MetricsService interface\n  - Extends MetricsSession.\n  - Adds methods to start and stop the service.  and to access the\n    service's meter registry.\n  - Adds a method that returns the builder that built the metrics\n    service.  so that reconnect can use the same builder to build the\n    metrics service for the reconnected system.\n\n- InternalDistributedSystemMetricsService\n  - Implements MetricsService.\n  - Creates and retains a composite meter registry to manage meters.\n  - Configures the composite composite registry:\n    - Adds common tags that describe the system\n    - Adds client meter registries to the composite.\n    - Applies a StandardMeterBinder to add standard meters to the\n      registry.\n  - Discovers.  starts.  and stops metrics publishing services.\n  - Adds and removes sub-registries as instructed by publishing\n    services.\n  - When stopped.  stops each publishing service.  closes all closeable\n    meter binders.  removes all sub-registries.  and closes its composite\n    meter registry.\n\n- MetricsService.Builder interface\n\n- InternalDistriburtedSystemMetricsService.Builder\n  - Implements MetricsService.Builder\n  - Accumulates and retains constructor parameters for the eventual\n    InternalDistributedSystemMetricsService.\n  - In particular.  maintains a collection of meter registries added by\n    the cache builder. It calls these 'persistent' registries.  because\n    they will persist across reconnects.\n\nOther changes:\n\n- Added MetricsSession parameter to MetricsPublishingService.stop().\n\nAuthored-by: Dale Emery <demery@pivotal.io>","date":"2019-10-26 00:25:37","modifiedFileCount":"22","status":"M","submitter":"Dale Emery"}]
