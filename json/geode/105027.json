[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testJSONUndefinedValueWithHashIndexPR() throws Exception {\n    Region region =\n        CacheUtils.getCache().createRegionFactory(RegionShortcut.PARTITION).create(regionName);\n    createJSONData(region);\n    CacheUtils.getQueryService().createHashIndex(\"ageIndex\", \"age\", \"/test\");\n    executeQueryTest(CacheUtils.getCache(), queries, expectedResults);\n  }\n","date":"2018-07-18 03:54:18","endLine":116,"groupId":"2899","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testJSONUndefinedValueWithHashIndexPR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/30/4d5e9b0341bccc91eb874b65b73af24b4b890f.src","preCode":"  public void testJSONUndefinedValueWithHashIndexPR() throws Exception {\n    Region region =\n        CacheUtils.getCache().createRegionFactory(RegionShortcut.PARTITION).create(regionName);\n    createJSONData(region);\n    CacheUtils.getQueryService().createHashIndex(\"ageIndex\", \"age\", \"/test\");\n    executeQueryTest(CacheUtils.getCache(), queries, expectedResults);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/QueryUndefinedJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testObjectUndefinedValueWithHashIndexPR() throws Exception {\n    Region region =\n        CacheUtils.getCache().createRegionFactory(RegionShortcut.PARTITION).create(regionName);\n    createObjectData(region);\n    CacheUtils.getQueryService().createHashIndex(\"ageIndex\", \"age\", \"/test\");\n    executeQueryTest(CacheUtils.getCache(), queries, expectedResults);\n  }\n","date":"2018-07-18 03:54:18","endLine":168,"groupId":"2899","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testObjectUndefinedValueWithHashIndexPR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/30/4d5e9b0341bccc91eb874b65b73af24b4b890f.src","preCode":"  public void testObjectUndefinedValueWithHashIndexPR() throws Exception {\n    Region region =\n        CacheUtils.getCache().createRegionFactory(RegionShortcut.PARTITION).create(regionName);\n    createObjectData(region);\n    CacheUtils.getQueryService().createHashIndex(\"ageIndex\", \"age\", \"/test\");\n    executeQueryTest(CacheUtils.getCache(), queries, expectedResults);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/QueryUndefinedJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2020-05-29 00:37:39","commitOrder":2,"curCode":"  public void testJSONUndefinedValueWithHashIndexPR() throws Exception {\n    Region region =\n        CacheUtils.getCache().createRegionFactory(RegionShortcut.PARTITION).create(regionName);\n    createJSONData(region);\n    CacheUtils.getQueryService().createHashIndex(\"ageIndex\", \"age\", SEPARATOR + \"test\");\n    executeQueryTest(CacheUtils.getCache(), queries, expectedResults);\n  }\n","date":"2020-05-29 00:37:39","endLine":122,"groupId":"105027","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testJSONUndefinedValueWithHashIndexPR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/36/48fe5baa8ddcb5cf310c7014a4adad543f91f3.src","preCode":"  public void testJSONUndefinedValueWithHashIndexPR() throws Exception {\n    Region region =\n        CacheUtils.getCache().createRegionFactory(RegionShortcut.PARTITION).create(regionName);\n    createJSONData(region);\n    CacheUtils.getQueryService().createHashIndex(\"ageIndex\", \"age\", \"/test\");\n    executeQueryTest(CacheUtils.getCache(), queries, expectedResults);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/QueryUndefinedJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2020-05-29 00:37:39","commitOrder":2,"curCode":"  public void testObjectUndefinedValueWithHashIndexPR() throws Exception {\n    Region region =\n        CacheUtils.getCache().createRegionFactory(RegionShortcut.PARTITION).create(regionName);\n    createObjectData(region);\n    CacheUtils.getQueryService().createHashIndex(\"ageIndex\", \"age\", SEPARATOR + \"test\");\n    executeQueryTest(CacheUtils.getCache(), queries, expectedResults);\n  }\n","date":"2020-05-29 00:37:39","endLine":174,"groupId":"105027","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testObjectUndefinedValueWithHashIndexPR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/36/48fe5baa8ddcb5cf310c7014a4adad543f91f3.src","preCode":"  public void testObjectUndefinedValueWithHashIndexPR() throws Exception {\n    Region region =\n        CacheUtils.getCache().createRegionFactory(RegionShortcut.PARTITION).create(regionName);\n    createObjectData(region);\n    CacheUtils.getQueryService().createHashIndex(\"ageIndex\", \"age\", \"/test\");\n    executeQueryTest(CacheUtils.getCache(), queries, expectedResults);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/QueryUndefinedJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"}]
