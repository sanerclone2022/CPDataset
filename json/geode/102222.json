[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void verifyExportNewValueWithSerializedStoredObjectAndUnretainedNewReferenceOk() {\n    LocalRegion region = mock(LocalRegion.class);\n    StoredObject newValue = mock(StoredObject.class);\n    when(newValue.isSerialized()).thenReturn(true);\n    Object newValueDeserialized = \"newValueDeserialized\";\n    when(newValue.getValueAsDeserializedHeapObject()).thenReturn(newValueDeserialized);\n    NewValueImporter nvImporter = mock(NewValueImporter.class);\n    when(nvImporter.isUnretainedNewReferenceOk()).thenReturn(true);\n    EntryEventImpl e = createEntryEvent(region, newValue);\n    \n    e.exportNewValue(nvImporter);\n    \n    verify(nvImporter).importNewObject(newValue, true);\n  }\n","date":"2016-09-15 02:08:18","endLine":219,"groupId":"5479","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyExportNewValueWithSerializedStoredObjectAndUnretainedNewReferenceOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/97/3787c76a980b78468c4bfb95a77e38d874b167.src","preCode":"  public void verifyExportNewValueWithSerializedStoredObjectAndUnretainedNewReferenceOk() {\n    LocalRegion region = mock(LocalRegion.class);\n    StoredObject newValue = mock(StoredObject.class);\n    when(newValue.isSerialized()).thenReturn(true);\n    Object newValueDeserialized = \"newValueDeserialized\";\n    when(newValue.getValueAsDeserializedHeapObject()).thenReturn(newValueDeserialized);\n    NewValueImporter nvImporter = mock(NewValueImporter.class);\n    when(nvImporter.isUnretainedNewReferenceOk()).thenReturn(true);\n    EntryEventImpl e = createEntryEvent(region, newValue);\n    \n    e.exportNewValue(nvImporter);\n    \n    verify(nvImporter).importNewObject(newValue, true);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/EntryEventImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void verifyExportOldValueWithSerializedStoredObject() {\n    LocalRegion region = mock(LocalRegion.class);\n    StoredObject oldValue = mock(StoredObject.class);\n    when(oldValue.isSerialized()).thenReturn(true);\n    Object oldValueDeserialized = \"newValueDeserialized\";\n    when(oldValue.getValueAsDeserializedHeapObject()).thenReturn(oldValueDeserialized);\n    OldValueImporter ovImporter = mock(OldValueImporter.class);\n    EntryEventImpl e = createEntryEvent(region, null);\n    e.setOldValue(oldValue);\n    \n    e.exportOldValue(ovImporter);\n    \n    verify(ovImporter).importOldObject(oldValueDeserialized, true);\n  }\n","date":"2016-09-15 02:08:18","endLine":356,"groupId":"5479","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyExportOldValueWithSerializedStoredObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/97/3787c76a980b78468c4bfb95a77e38d874b167.src","preCode":"  public void verifyExportOldValueWithSerializedStoredObject() {\n    LocalRegion region = mock(LocalRegion.class);\n    StoredObject oldValue = mock(StoredObject.class);\n    when(oldValue.isSerialized()).thenReturn(true);\n    Object oldValueDeserialized = \"newValueDeserialized\";\n    when(oldValue.getValueAsDeserializedHeapObject()).thenReturn(oldValueDeserialized);\n    OldValueImporter ovImporter = mock(OldValueImporter.class);\n    EntryEventImpl e = createEntryEvent(region, null);\n    e.setOldValue(oldValue);\n    \n    e.exportOldValue(ovImporter);\n    \n    verify(ovImporter).importOldObject(oldValueDeserialized, true);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/EntryEventImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":343,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2016-09-20 03:59:12","codes":[{"authorDate":"2016-09-20 03:59:12","commitOrder":2,"curCode":"  public void verifyExportNewValueWithSerializedStoredObjectAndUnretainedNewReferenceOk() {\n    LocalRegion region = mock(LocalRegion.class);\n    when(region.getOffHeap()).thenReturn(true);\n    StoredObject newValue = mock(StoredObject.class);\n    when(newValue.isSerialized()).thenReturn(true);\n    Object newValueDeserialized = \"newValueDeserialized\";\n    when(newValue.getValueAsDeserializedHeapObject()).thenReturn(newValueDeserialized);\n    NewValueImporter nvImporter = mock(NewValueImporter.class);\n    when(nvImporter.isUnretainedNewReferenceOk()).thenReturn(true);\n    EntryEventImpl e = createEntryEvent(region, newValue);\n    \n    e.exportNewValue(nvImporter);\n    \n    verify(nvImporter).importNewObject(newValue, true);\n  }\n","date":"2016-09-20 03:59:12","endLine":223,"groupId":"5479","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyExportNewValueWithSerializedStoredObjectAndUnretainedNewReferenceOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e2/b47d5f203a89e813fc080aa7b59fe96e52b992.src","preCode":"  public void verifyExportNewValueWithSerializedStoredObjectAndUnretainedNewReferenceOk() {\n    LocalRegion region = mock(LocalRegion.class);\n    StoredObject newValue = mock(StoredObject.class);\n    when(newValue.isSerialized()).thenReturn(true);\n    Object newValueDeserialized = \"newValueDeserialized\";\n    when(newValue.getValueAsDeserializedHeapObject()).thenReturn(newValueDeserialized);\n    NewValueImporter nvImporter = mock(NewValueImporter.class);\n    when(nvImporter.isUnretainedNewReferenceOk()).thenReturn(true);\n    EntryEventImpl e = createEntryEvent(region, newValue);\n    \n    e.exportNewValue(nvImporter);\n    \n    verify(nvImporter).importNewObject(newValue, true);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/EntryEventImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"},{"authorDate":"2016-09-20 03:59:12","commitOrder":2,"curCode":"  public void verifyExportOldValueWithSerializedStoredObject() {\n    LocalRegion region = mock(LocalRegion.class);\n    when(region.getOffHeap()).thenReturn(true);\n    StoredObject oldValue = mock(StoredObject.class);\n    when(oldValue.isSerialized()).thenReturn(true);\n    Object oldValueDeserialized = \"newValueDeserialized\";\n    when(oldValue.getValueAsDeserializedHeapObject()).thenReturn(oldValueDeserialized);\n    OldValueImporter ovImporter = mock(OldValueImporter.class);\n    EntryEventImpl e = createEntryEvent(region, null);\n    e.setOldValue(oldValue);\n    \n    e.exportOldValue(ovImporter);\n    \n    verify(ovImporter).importOldObject(oldValueDeserialized, true);\n  }\n","date":"2016-09-20 03:59:12","endLine":363,"groupId":"5479","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyExportOldValueWithSerializedStoredObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e2/b47d5f203a89e813fc080aa7b59fe96e52b992.src","preCode":"  public void verifyExportOldValueWithSerializedStoredObject() {\n    LocalRegion region = mock(LocalRegion.class);\n    StoredObject oldValue = mock(StoredObject.class);\n    when(oldValue.isSerialized()).thenReturn(true);\n    Object oldValueDeserialized = \"newValueDeserialized\";\n    when(oldValue.getValueAsDeserializedHeapObject()).thenReturn(oldValueDeserialized);\n    OldValueImporter ovImporter = mock(OldValueImporter.class);\n    EntryEventImpl e = createEntryEvent(region, null);\n    e.setOldValue(oldValue);\n    \n    e.exportOldValue(ovImporter);\n    \n    verify(ovImporter).importOldObject(oldValueDeserialized, true);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/EntryEventImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":349,"status":"M"}],"commitId":"efd011750538ac2400cef8381765b8e0ddc921a1","commitMessage":"@@@Merge branch 'develop' of https://git-wip-us.apache.org/repos/asf/incubator-geode into develop\n","date":"2016-09-20 03:59:12","modifiedFileCount":"43","status":"M","submitter":"Udo Kohlmeyer"},{"authorTime":"2019-05-31 05:47:34","codes":[{"authorDate":"2019-05-31 05:47:34","commitOrder":3,"curCode":"  public void verifyExportNewValueWithSerializedStoredObjectAndUnretainedNewReferenceOk() {\n    LocalRegion region = mock(LocalRegion.class);\n    when(region.getOffHeap()).thenReturn(true);\n\n    InternalCache cache = mock(InternalCache.class);\n    InternalDistributedSystem ids = mock(InternalDistributedSystem.class);\n    MemoryAllocator mem = mock(MemoryAllocator.class);\n    when(region.getCache()).thenReturn(cache);\n    when(cache.getDistributedSystem()).thenReturn(ids);\n    when(ids.getOffHeapStore()).thenReturn(mem);\n\n    StoredObject newValue = mock(StoredObject.class);\n    when(newValue.isSerialized()).thenReturn(true);\n    Object newValueDeserialized = \"newValueDeserialized\";\n    when(newValue.getValueAsDeserializedHeapObject()).thenReturn(newValueDeserialized);\n    NewValueImporter nvImporter = mock(NewValueImporter.class);\n    when(nvImporter.isUnretainedNewReferenceOk()).thenReturn(true);\n    EntryEventImpl e = createEntryEvent(region, newValue);\n\n    e.exportNewValue(nvImporter);\n\n    verify(nvImporter).importNewObject(newValue, true);\n  }\n","date":"2019-05-31 05:47:34","endLine":312,"groupId":"102222","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyExportNewValueWithSerializedStoredObjectAndUnretainedNewReferenceOk","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/78/1df783ed3e542057f33a229a851e8f4dc6aba4.src","preCode":"  public void verifyExportNewValueWithSerializedStoredObjectAndUnretainedNewReferenceOk() {\n    LocalRegion region = mock(LocalRegion.class);\n    when(region.getOffHeap()).thenReturn(true);\n    StoredObject newValue = mock(StoredObject.class);\n    when(newValue.isSerialized()).thenReturn(true);\n    Object newValueDeserialized = \"newValueDeserialized\";\n    when(newValue.getValueAsDeserializedHeapObject()).thenReturn(newValueDeserialized);\n    NewValueImporter nvImporter = mock(NewValueImporter.class);\n    when(nvImporter.isUnretainedNewReferenceOk()).thenReturn(true);\n    EntryEventImpl e = createEntryEvent(region, newValue);\n\n    e.exportNewValue(nvImporter);\n\n    verify(nvImporter).importNewObject(newValue, true);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/EntryEventImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"},{"authorDate":"2019-05-31 05:47:34","commitOrder":3,"curCode":"  public void verifyExportOldValueWithSerializedStoredObject() {\n    LocalRegion region = mock(LocalRegion.class);\n    when(region.getOffHeap()).thenReturn(true);\n\n    InternalCache cache = mock(InternalCache.class);\n    InternalDistributedSystem ids = mock(InternalDistributedSystem.class);\n    MemoryAllocator mem = mock(MemoryAllocator.class);\n    when(region.getCache()).thenReturn(cache);\n    when(cache.getDistributedSystem()).thenReturn(ids);\n    when(ids.getOffHeapStore()).thenReturn(mem);\n\n    StoredObject oldValue = mock(StoredObject.class);\n    when(oldValue.isSerialized()).thenReturn(true);\n    Object oldValueDeserialized = \"newValueDeserialized\";\n    when(oldValue.getValueAsDeserializedHeapObject()).thenReturn(oldValueDeserialized);\n    OldValueImporter ovImporter = mock(OldValueImporter.class);\n    EntryEventImpl e = createEntryEvent(region, null);\n    e.setOldValue(oldValue);\n\n    e.exportOldValue(ovImporter);\n\n    verify(ovImporter).importOldObject(oldValueDeserialized, true);\n  }\n","date":"2019-05-31 05:47:34","endLine":518,"groupId":"102222","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyExportOldValueWithSerializedStoredObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/78/1df783ed3e542057f33a229a851e8f4dc6aba4.src","preCode":"  public void verifyExportOldValueWithSerializedStoredObject() {\n    LocalRegion region = mock(LocalRegion.class);\n    when(region.getOffHeap()).thenReturn(true);\n    StoredObject oldValue = mock(StoredObject.class);\n    when(oldValue.isSerialized()).thenReturn(true);\n    Object oldValueDeserialized = \"newValueDeserialized\";\n    when(oldValue.getValueAsDeserializedHeapObject()).thenReturn(oldValueDeserialized);\n    OldValueImporter ovImporter = mock(OldValueImporter.class);\n    EntryEventImpl e = createEntryEvent(region, null);\n    e.setOldValue(oldValue);\n\n    e.exportOldValue(ovImporter);\n\n    verify(ovImporter).importOldObject(oldValueDeserialized, true);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/EntryEventImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"M"}],"commitId":"327feec1946a0b6e28dd552d175e7833dc8d8dd2","commitMessage":"@@@GEODE-6696: EntryEvenImpl.offHeapLock created only if off-heap in use (#3581)\n\n","date":"2019-05-31 05:47:34","modifiedFileCount":"11","status":"M","submitter":"mivanac"}]
