[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendTo(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 2];\n    expected[0] = DSCODE.BYTE_ARRAY;\n    expected[1] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 2, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","date":"2016-09-15 02:08:18","endLine":568,"groupId":"21295","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7d/62ddd0d511ea35572c26c8dbe66e015d039d10.src","preCode":"  public void sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendTo(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 2];\n    expected[0] = DSCODE.BYTE_ARRAY;\n    expected[1] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 2, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/OffHeapStoredObjectJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":548,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void sendAsByteArrayShouldWriteValueToDataOutput() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendAsByteArray(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 1];\n    expected[0] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 1, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","date":"2016-09-15 02:08:18","endLine":590,"groupId":"21295","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAsByteArrayShouldWriteValueToDataOutput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7d/62ddd0d511ea35572c26c8dbe66e015d039d10.src","preCode":"  public void sendAsByteArrayShouldWriteValueToDataOutput() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendAsByteArray(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 1];\n    expected[0] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 1, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/OffHeapStoredObjectJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":571,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2018-04-07 02:52:09","commitOrder":2,"curCode":"  public void sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized()\n      throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendTo(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 2];\n    expected[0] = DSCODE.BYTE_ARRAY.toByte();\n    expected[1] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 2, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","date":"2018-04-07 02:52:09","endLine":583,"groupId":"27074","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/15/54300062c6c889ecada386f2a5d9bbe497c6a9.src","preCode":"  public void sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized()\n      throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendTo(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 2];\n    expected[0] = DSCODE.BYTE_ARRAY;\n    expected[1] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 2, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/OffHeapStoredObjectJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":562,"status":"M"},{"authorDate":"2016-09-15 02:08:18","commitOrder":2,"curCode":"  public void sendAsByteArrayShouldWriteValueToDataOutput() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendAsByteArray(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 1];\n    expected[0] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 1, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","date":"2016-09-15 02:08:18","endLine":590,"groupId":"21295","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAsByteArrayShouldWriteValueToDataOutput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7d/62ddd0d511ea35572c26c8dbe66e015d039d10.src","preCode":"  public void sendAsByteArrayShouldWriteValueToDataOutput() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendAsByteArray(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 1];\n    expected[0] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 1, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/OffHeapStoredObjectJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":571,"status":"N"}],"commitId":"804c053fdfbce4b7f1f810b1019f778c02f50020","commitMessage":"@@@GEODE-4518: Replace DSCODE with an enumeration. (#1738)\n\n* GEODE-4518: Replace DSCODE with an enumeration.\n- Deprecate DSCODE interface.\n- Introduce HeaderByte enum.\n- Replace explicit references to DSCODE with\n  explicit references to HeaderByte.\n\n* GEODE-4518: Update analysis files.\n\n* GEODE-4518: Add unit test for value uniqueness.\n\n* GEODE-4518: Convert DSCODE into enum that replaces HeaderByte.\n","date":"2018-04-07 02:52:09","modifiedFileCount":"30","status":"M","submitter":"Michael \"Sarge\" Dodge"},{"authorTime":"2020-07-09 04:07:43","codes":[{"authorDate":"2020-07-09 04:07:43","commitOrder":3,"curCode":"  public void sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized()\n      throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(KnownVersion.CURRENT);\n\n    chunk.sendTo(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 2];\n    expected[0] = DSCODE.BYTE_ARRAY.toByte();\n    expected[1] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 2, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","date":"2020-07-18 08:04:53","endLine":589,"groupId":"27074","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b2/f99d91038254ef4c4656827f6c57f88254d902.src","preCode":"  public void sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized()\n      throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendTo(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 2];\n    expected[0] = DSCODE.BYTE_ARRAY.toByte();\n    expected[1] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 2, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/OffHeapStoredObjectJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":568,"status":"M"},{"authorDate":"2020-07-09 04:07:43","commitOrder":3,"curCode":"  public void sendAsByteArrayShouldWriteValueToDataOutput() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(KnownVersion.CURRENT);\n\n    chunk.sendAsByteArray(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 1];\n    expected[0] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 1, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","date":"2020-07-18 08:04:53","endLine":611,"groupId":"21295","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAsByteArrayShouldWriteValueToDataOutput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b2/f99d91038254ef4c4656827f6c57f88254d902.src","preCode":"  public void sendAsByteArrayShouldWriteValueToDataOutput() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendAsByteArray(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 1];\n    expected[0] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 1, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/OffHeapStoredObjectJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":592,"status":"M"}],"commitId":"17d6679125942f5f33ded4670dc9e0ca643e03da","commitMessage":"@@@GEODE-8337: git mv Version.java->KnownVersion.java\n","date":"2020-07-18 08:04:53","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"},{"authorTime":"2020-07-23 01:09:22","codes":[{"authorDate":"2020-07-23 01:09:22","commitOrder":4,"curCode":"  public void sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized()\n      throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendTo(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 2];\n    expected[0] = DSCODE.BYTE_ARRAY.toByte();\n    expected[1] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 2, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","date":"2020-07-23 04:07:08","endLine":589,"groupId":"27074","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e6/634f028039f9c7d4a7a2d2d5eeb9b1c1ae0c61.src","preCode":"  public void sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized()\n      throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(KnownVersion.CURRENT);\n\n    chunk.sendTo(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 2];\n    expected[0] = DSCODE.BYTE_ARRAY.toByte();\n    expected[1] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 2, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/OffHeapStoredObjectJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":568,"status":"M"},{"authorDate":"2020-07-23 01:09:22","commitOrder":4,"curCode":"  public void sendAsByteArrayShouldWriteValueToDataOutput() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendAsByteArray(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 1];\n    expected[0] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 1, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","date":"2020-07-23 04:07:08","endLine":611,"groupId":"21295","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAsByteArrayShouldWriteValueToDataOutput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e6/634f028039f9c7d4a7a2d2d5eeb9b1c1ae0c61.src","preCode":"  public void sendAsByteArrayShouldWriteValueToDataOutput() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(KnownVersion.CURRENT);\n\n    chunk.sendAsByteArray(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 1];\n    expected[0] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 1, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/OffHeapStoredObjectJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":592,"status":"M"}],"commitId":"76a034b795ea4c30ec081816b47cd2a00daa29c3","commitMessage":"@@@Revert \"GEODE-8337: git mv Version.java->KnownVersion.java\"\n\nThis reverts commit 17d66791\n","date":"2020-07-23 04:07:08","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"},{"authorTime":"2020-07-09 04:07:43","codes":[{"authorDate":"2020-07-09 04:07:43","commitOrder":5,"curCode":"  public void sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized()\n      throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(KnownVersion.CURRENT);\n\n    chunk.sendTo(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 2];\n    expected[0] = DSCODE.BYTE_ARRAY.toByte();\n    expected[1] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 2, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","date":"2020-08-13 07:45:32","endLine":589,"groupId":"102436","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b2/f99d91038254ef4c4656827f6c57f88254d902.src","preCode":"  public void sendToShouldWriteUnserializedValueToDataOutputIfValueIsUnserialized()\n      throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendTo(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 2];\n    expected[0] = DSCODE.BYTE_ARRAY.toByte();\n    expected[1] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 2, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/OffHeapStoredObjectJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":568,"status":"M"},{"authorDate":"2020-07-09 04:07:43","commitOrder":5,"curCode":"  public void sendAsByteArrayShouldWriteValueToDataOutput() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(KnownVersion.CURRENT);\n\n    chunk.sendAsByteArray(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 1];\n    expected[0] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 1, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","date":"2020-08-13 07:45:32","endLine":611,"groupId":"102436","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAsByteArrayShouldWriteValueToDataOutput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b2/f99d91038254ef4c4656827f6c57f88254d902.src","preCode":"  public void sendAsByteArrayShouldWriteValueToDataOutput() throws IOException {\n    byte[] regionEntryValue = getValueAsByteArray();\n    OffHeapStoredObject chunk = createValueAsUnserializedStoredObject(regionEntryValue);\n\n    \r\n    HeapDataOutputStream dataOutput = new HeapDataOutputStream(Version.CURRENT);\n\n    chunk.sendAsByteArray(dataOutput);\n\n    byte[] actual = dataOutput.toByteArray();\n\n    byte[] expected = new byte[regionEntryValue.length + 1];\n    expected[0] = (byte) regionEntryValue.length;\n    System.arraycopy(regionEntryValue, 0, expected, 1, regionEntryValue.length);\n\n    assertNotNull(dataOutput);\n    assertThat(actual).isEqualTo(expected);\n\n    chunk.release();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/OffHeapStoredObjectJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":592,"status":"M"}],"commitId":"068a467dee63db91cb8869fe70ea435c95a6526c","commitMessage":"@@@GEODE-8337: git mv Version.java->KnownVersion.java\n\n(cherry picked from commit 17d6679125942f5f33ded4670dc9e0ca643e03da)\n","date":"2020-08-13 07:45:32","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"}]
