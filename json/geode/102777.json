[{"authorTime":"2019-11-01 07:27:31","codes":[{"authorDate":"2019-11-01 07:27:31","commitOrder":2,"curCode":"  public void equalsReturnsFalseIfUniqueTagsDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    GMSMemberData netMember1 = mock(GMSMemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    GMSMemberData netMember2 = mock(GMSMemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setUniqueTag(\"tag1\");\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setUniqueTag(\"tag2\");\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","date":"2019-11-01 07:27:31","endLine":136,"groupId":"35339","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equalsReturnsFalseIfUniqueTagsDiffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0f/2afa89b2d2d34ff3652a5963ca41809f86596c.src","preCode":"  public void equalsReturnsFalseIfUniqueTagsDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    GMSMemberData netMember1 = mock(GMSMemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    GMSMemberData netMember2 = mock(GMSMemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setUniqueTag(\"tag1\");\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setUniqueTag(\"tag2\");\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/internal/membership/InternalDistributedMemberTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"MB"},{"authorDate":"2019-11-01 07:27:31","commitOrder":2,"curCode":"  public void equalsReturnsFalseIfNotPartialAndNamesDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    GMSMemberData netMember1 = mock(GMSMemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    when(netMember1.getName()).thenReturn(\"name1\");\n    GMSMemberData netMember2 = mock(GMSMemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    when(netMember2.getName()).thenReturn(\"name2\");\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setIsPartial(false);\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setIsPartial(false);\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","date":"2019-11-01 07:27:31","endLine":155,"groupId":"32303","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equalsReturnsFalseIfNotPartialAndNamesDiffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0f/2afa89b2d2d34ff3652a5963ca41809f86596c.src","preCode":"  public void equalsReturnsFalseIfNotPartialAndNamesDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    GMSMemberData netMember1 = mock(GMSMemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    when(netMember1.getName()).thenReturn(\"name1\");\n    GMSMemberData netMember2 = mock(GMSMemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    when(netMember2.getName()).thenReturn(\"name2\");\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setIsPartial(false);\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setIsPartial(false);\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/internal/membership/InternalDistributedMemberTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"MB"}],"commitId":"77103d0db68c9dd5087b98d47697dd05f2dc90f5","commitMessage":"@@@GEODE-7358: Membership code should use InternalDistributedMember as the membership identifier (#4230)\n\n* GEODE-7358: Membership code should use InternalDistributedMember as the membership identifier\n\nInitial refactor: removal of NetMember.  MemberAttributes and other classes that subordinated GMS\nidentifiers.  Repurposing GMSMember as a data packet to hold information required in a membership\nidentifer.\n\n* fixing failing tests\n\n* fixing failing unit tests\n\n* picking up a change that IntelliJ didn't auto-save & fixing serializables test\n\n* fixing problems with durable client ids\n\nthese identifiers morph after the client's membership identifier has been formed\nso the member ID needs to be updated before serializing it\n\n* fixing merge error\n\n* updating sanctionedDataSerializables\n\n* fixing lgtm complaint\n\n* removing unnecessary serialization/deserialization methods in GMSUtil\n\n* remove methods no longer needed for serializing an object with a different DSFID\n\n* fixing serializables test\n","date":"2019-11-01 07:27:31","modifiedFileCount":"91","status":"M","submitter":"Bruce Schuchardt"},{"authorTime":"2020-01-01 11:13:13","codes":[{"authorDate":"2020-01-01 11:13:13","commitOrder":3,"curCode":"  public void equalsReturnsFalseIfUniqueTagsDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    MemberData netMember1 = mock(MemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    MemberData netMember2 = mock(MemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setUniqueTag(\"tag1\");\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setUniqueTag(\"tag2\");\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","date":"2020-01-01 11:13:13","endLine":136,"groupId":"35339","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equalsReturnsFalseIfUniqueTagsDiffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/dd12d57059b7cbfc70bf8024ab4f9ec8c611e4.src","preCode":"  public void equalsReturnsFalseIfUniqueTagsDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    GMSMemberData netMember1 = mock(GMSMemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    GMSMemberData netMember2 = mock(GMSMemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setUniqueTag(\"tag1\");\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setUniqueTag(\"tag2\");\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/internal/membership/InternalDistributedMemberTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"},{"authorDate":"2020-01-01 11:13:13","commitOrder":3,"curCode":"  public void equalsReturnsFalseIfNotPartialAndNamesDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    MemberData netMember1 = mock(MemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    when(netMember1.getName()).thenReturn(\"name1\");\n    MemberData netMember2 = mock(MemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    when(netMember2.getName()).thenReturn(\"name2\");\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setIsPartial(false);\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setIsPartial(false);\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","date":"2020-01-01 11:13:13","endLine":155,"groupId":"32303","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equalsReturnsFalseIfNotPartialAndNamesDiffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/dd12d57059b7cbfc70bf8024ab4f9ec8c611e4.src","preCode":"  public void equalsReturnsFalseIfNotPartialAndNamesDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    GMSMemberData netMember1 = mock(GMSMemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    when(netMember1.getName()).thenReturn(\"name1\");\n    GMSMemberData netMember2 = mock(GMSMemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    when(netMember2.getName()).thenReturn(\"name2\");\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setIsPartial(false);\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setIsPartial(false);\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/internal/membership/InternalDistributedMemberTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"263b3e22fbd3f205c2a0348d7e068e6a48a4b32c","commitMessage":"@@@GEODE-7634: create an ArchUnitTest that asserts that geode-core only ? (#4549)\n\n* GEODE-7634: create an ArchUnitTest that asserts that geode-core only uses the membership API\n\ncreating a new test to enforce use of membership APIs.  There are a few\nexceptions in test code.  plus others that aren't in the \"integration\ntest\" source set.\n\n* removing test dependencies and fixing crashDistributedSystem method\n\n* moved membership API classes to membership.api package and fixed OOME\n\n* move address verification class to tcp-server module and subclass in membership\n\n* rebasing on Ernie's GeodeGlossary stuff\n","date":"2020-01-01 11:13:13","modifiedFileCount":"132","status":"M","submitter":"Bruce Schuchardt"},{"authorTime":"2020-01-01 11:13:13","codes":[{"authorDate":"2020-02-01 03:26:58","commitOrder":4,"curCode":"  public void equalsReturnsFalseIfUniqueTagsDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    MemberData netMember1 = mock(MemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    when(netMember1.getUniqueTag()).thenReturn(\"tag1\");\n    MemberData netMember2 = mock(MemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    when(netMember2.getUniqueTag()).thenReturn(\"tag2\");\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setUniqueTag(\"tag1\");\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setUniqueTag(\"tag2\");\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","date":"2020-02-01 03:26:58","endLine":138,"groupId":"102777","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"equalsReturnsFalseIfUniqueTagsDiffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/66/f03678ed6294ca624f0c870521b466a0aa9fa8.src","preCode":"  public void equalsReturnsFalseIfUniqueTagsDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    MemberData netMember1 = mock(MemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    MemberData netMember2 = mock(MemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setUniqueTag(\"tag1\");\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setUniqueTag(\"tag2\");\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/internal/membership/InternalDistributedMemberTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"},{"authorDate":"2020-01-01 11:13:13","commitOrder":4,"curCode":"  public void equalsReturnsFalseIfNotPartialAndNamesDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    MemberData netMember1 = mock(MemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    when(netMember1.getName()).thenReturn(\"name1\");\n    MemberData netMember2 = mock(MemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    when(netMember2.getName()).thenReturn(\"name2\");\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setIsPartial(false);\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setIsPartial(false);\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","date":"2020-01-01 11:13:13","endLine":155,"groupId":"102777","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"equalsReturnsFalseIfNotPartialAndNamesDiffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/dd12d57059b7cbfc70bf8024ab4f9ec8c611e4.src","preCode":"  public void equalsReturnsFalseIfNotPartialAndNamesDiffer() throws UnknownHostException {\n    InetAddress host1 = InetAddress.getByAddress(new byte[] {127, 0, 0, 1});\n    MemberData netMember1 = mock(MemberData.class);\n    when(netMember1.getInetAddress()).thenReturn(host1);\n    when(netMember1.getName()).thenReturn(\"name1\");\n    MemberData netMember2 = mock(MemberData.class);\n    when(netMember2.getInetAddress()).thenReturn(host1);\n    when(netMember2.getName()).thenReturn(\"name2\");\n    InternalDistributedMember member = new InternalDistributedMember(netMember1);\n    member.setIsPartial(false);\n    InternalDistributedMember other = new InternalDistributedMember(netMember2);\n    other.setIsPartial(false);\n\n    boolean result = member.equals(other);\n\n    assertThat(result).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/internal/membership/InternalDistributedMemberTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"N"}],"commitId":"40d6b47ffce96df1e1bc0da88dff661b57939d7e","commitMessage":"@@@GEODE-7704: Replacing inheritance of MemberIdentifierImpl with delagation (#4636)\n\n* Deduplicate fields betweeen MemberIdentifierImpl and GMSMemberData\n\nMoving all state down into GMSMemberData and removing duplicate fields\nisPartial and versionObject. GMSMemberData now has all of the state of a\nmember.\n\n* Delegate rather than inherit InternalDistributedMember\n\nDelegating to MemberIdentifierImpl.  rather than inheriting from it.\n\n* Delegate to MemberIdentifier.  rather than MemberIdentifierImpl\n\nHaving InternalDistributedMember delegate to MemberIdentifier.  rather than\nMemberIdentifierImpl.  so that we are not relying on the concrete class and all\nrequired methods are part of the interface. As a result.  adding a number of\nadditional methods to the MemberIdentifier interface.\n\n* Removing uses of getMemberData\n\nRemoving uses of getMemberData and adding methods to MemberIdentifier that\ndelegate to memberData.\n\n* Hiding MemberIdentiferImpl\n\nUsing MemberIdentifier everywhere insteand of MemberIdentiferImpl. Still need to\nmove MemberIdentiferImpl to an internal package.\n\n* Making PMD happy\n\nMarking the MemberIdentifierFactory as immutable.\n\n* Fixing NPE in getGroups\n\nThe MemberIdentifierImpl.getGroups needs to check for a null array. Places that\nused to call getMemberData.getGroups were throwing an NPE.\n\n* Fixing a test that used MemberIdentifierFactoryImpl\n\nThis factory is not going to play well with other parts of the test that are\ngenerating InternalDistributedMembers.\n\n* Fixing AnalyzeSerializablesJUnitTest\n\nInternalDistributedMember now has new serialization methods that delegate to\nthe methods that it previously was just inheriting.\n\n* Fixing a unit test failure due to mocking MemberData\n\nInternalDistributedMemberTest was mocking the underlying MemberData and\nchanging state on the InternalDistributedMember. Now that all state is\ndelegated to the MemberData.  this test was failing because the mock was not\nreflecting the state changes.\n\nCo-authored-by: Ernie Burghardt <eburghardt@pivotal.io>\n","date":"2020-02-01 03:26:58","modifiedFileCount":"29","status":"M","submitter":"Dan Smith"}]
