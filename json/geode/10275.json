[{"authorTime":"2019-09-20 04:02:00","codes":[{"authorDate":"2019-09-20 04:02:00","commitOrder":2,"curCode":"  public void addMemberArtifactsCreatesMonitoringRegion() throws Exception {\n    InternalDistributedMember member = member(1, 20);\n    FederatingManager federatingManager = new FederatingManager(jmxAdapter, repo, system, service,\n        cache, statisticsFactory, statisticsClock);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member);\n\n    verify(cacheForClientAccess).createInternalRegion(eq(\"_monitoringRegion_null<v1>20\"), any(),\n        any());\n  }\n","date":"2019-09-21 01:40:01","endLine":89,"groupId":"1963","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addMemberArtifactsCreatesMonitoringRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b7/0c5f9b2873c3ce7ad6c536d0af734051f3560c.src","preCode":"  public void addMemberArtifactsCreatesMonitoringRegion() throws Exception {\n    InternalDistributedMember member = member(1, 20);\n    FederatingManager federatingManager = new FederatingManager(jmxAdapter, repo, system, service,\n        cache, statisticsFactory, statisticsClock);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member);\n\n    verify(cacheForClientAccess).createInternalRegion(eq(\"_monitoringRegion_null<v1>20\"), any(),\n        any());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/FederatingManagerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"MB"},{"authorDate":"2019-09-20 04:02:00","commitOrder":2,"curCode":"  public void addMemberArtifactsCreatesNotificationRegionWithHasOwnStats() throws Exception {\n    InternalDistributedMember member = member(4, 80);\n    FederatingManager federatingManager = new FederatingManager(jmxAdapter, repo, system, service,\n        cache, statisticsFactory, statisticsClock);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member);\n\n    ArgumentCaptor<InternalRegionArguments> captor =\n        ArgumentCaptor.forClass(InternalRegionArguments.class);\n    verify(cacheForClientAccess).createInternalRegion(eq(\"_notificationRegion_null<v4>80\"), any(),\n        captor.capture());\n\n    InternalRegionArguments internalRegionArguments = captor.getValue();\n    HasCachePerfStats hasCachePerfStats = internalRegionArguments.getCachePerfStatsHolder();\n    assertThat(hasCachePerfStats.hasOwnStats()).isTrue();\n  }\n","date":"2019-09-21 01:40:01","endLine":140,"groupId":"1960","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addMemberArtifactsCreatesNotificationRegionWithHasOwnStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b7/0c5f9b2873c3ce7ad6c536d0af734051f3560c.src","preCode":"  public void addMemberArtifactsCreatesNotificationRegionWithHasOwnStats() throws Exception {\n    InternalDistributedMember member = member(4, 80);\n    FederatingManager federatingManager = new FederatingManager(jmxAdapter, repo, system, service,\n        cache, statisticsFactory, statisticsClock);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member);\n\n    ArgumentCaptor<InternalRegionArguments> captor =\n        ArgumentCaptor.forClass(InternalRegionArguments.class);\n    verify(cacheForClientAccess).createInternalRegion(eq(\"_notificationRegion_null<v4>80\"), any(),\n        captor.capture());\n\n    InternalRegionArguments internalRegionArguments = captor.getValue();\n    HasCachePerfStats hasCachePerfStats = internalRegionArguments.getCachePerfStatsHolder();\n    assertThat(hasCachePerfStats.hasOwnStats()).isTrue();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/FederatingManagerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"6d3dd7b37cf4b7f64b383b9e8087fbf21c0303f6","commitMessage":"@@@GEODE-7221: Set hasOwnStats true for management regions\n\nEnsure that managements regions close CachePerfStats by setting\nhasOwnStats to true from FederatingManager and LocalManager.\n","date":"2019-09-21 01:40:01","modifiedFileCount":"7","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-10-24 00:42:00","codes":[{"authorDate":"2019-10-24 00:42:00","commitOrder":3,"curCode":"  public void addMemberArtifactsCreatesMonitoringRegion() throws Exception {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock,\n        new MBeanProxyFactory(jmxAdapter, service),\n        new MemberMessenger(jmxAdapter, system),\n        LoggingExecutors.newFixedThreadPool(\"FederatingManager\", true,\n            Runtime.getRuntime().availableProcessors()));\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(1, 20));\n\n    verify(cacheForClientAccess)\n        .createInternalRegion(eq(\"_monitoringRegion_null<v1>20\"), any(), any());\n  }\n","date":"2019-10-24 00:42:00","endLine":98,"groupId":"37740","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addMemberArtifactsCreatesMonitoringRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c2/3393538052a12de0505b9edec55a56f4844760.src","preCode":"  public void addMemberArtifactsCreatesMonitoringRegion() throws Exception {\n    InternalDistributedMember member = member(1, 20);\n    FederatingManager federatingManager = new FederatingManager(jmxAdapter, repo, system, service,\n        cache, statisticsFactory, statisticsClock);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member);\n\n    verify(cacheForClientAccess).createInternalRegion(eq(\"_monitoringRegion_null<v1>20\"), any(),\n        any());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/FederatingManagerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2019-10-24 00:42:00","commitOrder":3,"curCode":"  public void addMemberArtifactsCreatesNotificationRegionWithHasOwnStats() throws Exception {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock,\n        new MBeanProxyFactory(jmxAdapter, service),\n        new MemberMessenger(jmxAdapter, system),\n        LoggingExecutors.newFixedThreadPool(\"FederatingManager\", true,\n            Runtime.getRuntime().availableProcessors()));\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(4, 80));\n\n    ArgumentCaptor<InternalRegionArguments> captor =\n        ArgumentCaptor.forClass(InternalRegionArguments.class);\n    verify(cacheForClientAccess)\n        .createInternalRegion(eq(\"_notificationRegion_null<v4>80\"), any(), captor.capture());\n\n    InternalRegionArguments internalRegionArguments = captor.getValue();\n    assertThat(internalRegionArguments.getCachePerfStatsHolder().hasOwnStats())\n        .isTrue();\n  }\n","date":"2019-10-24 00:42:00","endLine":157,"groupId":"37740","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addMemberArtifactsCreatesNotificationRegionWithHasOwnStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c2/3393538052a12de0505b9edec55a56f4844760.src","preCode":"  public void addMemberArtifactsCreatesNotificationRegionWithHasOwnStats() throws Exception {\n    InternalDistributedMember member = member(4, 80);\n    FederatingManager federatingManager = new FederatingManager(jmxAdapter, repo, system, service,\n        cache, statisticsFactory, statisticsClock);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member);\n\n    ArgumentCaptor<InternalRegionArguments> captor =\n        ArgumentCaptor.forClass(InternalRegionArguments.class);\n    verify(cacheForClientAccess).createInternalRegion(eq(\"_notificationRegion_null<v4>80\"), any(),\n        captor.capture());\n\n    InternalRegionArguments internalRegionArguments = captor.getValue();\n    HasCachePerfStats hasCachePerfStats = internalRegionArguments.getCachePerfStatsHolder();\n    assertThat(hasCachePerfStats.hasOwnStats()).isTrue();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/FederatingManagerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"}],"commitId":"f0c96db73263bb1b3cb04558f2a720d70f43421f","commitMessage":"@@@GEODE-7330: Prevent RegionDestroyedException in FederatingManager (#4193)\n\n* GEODE-7330: Prevent RegionDestroyedException in FederatingManager\n\nCleanup management classes:\n* Reduce method and field visibility as much as possible\n* Remove unnecessary uses of this\n* Reorder fields and methods based on visibility and other modifiers\n* Use @VisibleForTesting annotation\n* Fixup formatting and variable names\n\nMake all FederatingManager fields final:\n* Remove field setters for tests\n* Introduce FederatingManagerFactory\n* Add FederatingManagerFactory system property for tests to\n  SystemManagementService\n* Inject all FederatingManager fields via constructor\n* Use Geode APIs in MBeanFederationErrorPathDUnitTest\n\nRename MBeanFederationErrorHandlingDistributedTest:\n* Rename MBeanFederationErrorPathDUnitTest as\n  MBeanFederationErrorHandlingDistributedTest","date":"2019-10-24 00:42:00","modifiedFileCount":"7","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-10-25 00:45:51","codes":[{"authorDate":"2019-10-25 00:45:51","commitOrder":4,"curCode":"  public void addMemberArtifactsCreatesMonitoringRegion() throws Exception {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock, proxyFactory, messenger, executorService);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(1, 20));\n\n    verify(cacheForClientAccess)\n        .createInternalRegion(eq(\"_monitoringRegion_null<v1>20\"), any(), any());\n  }\n","date":"2019-10-25 00:45:51","endLine":102,"groupId":"37738","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addMemberArtifactsCreatesMonitoringRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2e/d7d430e1a93429b4a24f8523d97f9ac358fdc4.src","preCode":"  public void addMemberArtifactsCreatesMonitoringRegion() throws Exception {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock,\n        new MBeanProxyFactory(jmxAdapter, service),\n        new MemberMessenger(jmxAdapter, system),\n        LoggingExecutors.newFixedThreadPool(\"FederatingManager\", true,\n            Runtime.getRuntime().availableProcessors()));\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(1, 20));\n\n    verify(cacheForClientAccess)\n        .createInternalRegion(eq(\"_monitoringRegion_null<v1>20\"), any(), any());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/FederatingManagerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2019-10-25 00:45:51","commitOrder":4,"curCode":"  public void addMemberArtifactsCreatesNotificationRegionWithHasOwnStats() throws Exception {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock, proxyFactory, messenger, executorService);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(4, 80));\n\n    ArgumentCaptor<InternalRegionArguments> captor =\n        ArgumentCaptor.forClass(InternalRegionArguments.class);\n    verify(cacheForClientAccess)\n        .createInternalRegion(eq(\"_notificationRegion_null<v4>80\"), any(), captor.capture());\n\n    InternalRegionArguments internalRegionArguments = captor.getValue();\n    assertThat(internalRegionArguments.getCachePerfStatsHolder().hasOwnStats())\n        .isTrue();\n  }\n","date":"2019-10-25 00:45:51","endLine":149,"groupId":"37740","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addMemberArtifactsCreatesNotificationRegionWithHasOwnStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2e/d7d430e1a93429b4a24f8523d97f9ac358fdc4.src","preCode":"  public void addMemberArtifactsCreatesNotificationRegionWithHasOwnStats() throws Exception {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock,\n        new MBeanProxyFactory(jmxAdapter, service),\n        new MemberMessenger(jmxAdapter, system),\n        LoggingExecutors.newFixedThreadPool(\"FederatingManager\", true,\n            Runtime.getRuntime().availableProcessors()));\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(4, 80));\n\n    ArgumentCaptor<InternalRegionArguments> captor =\n        ArgumentCaptor.forClass(InternalRegionArguments.class);\n    verify(cacheForClientAccess)\n        .createInternalRegion(eq(\"_notificationRegion_null<v4>80\"), any(), captor.capture());\n\n    InternalRegionArguments internalRegionArguments = captor.getValue();\n    assertThat(internalRegionArguments.getCachePerfStatsHolder().hasOwnStats())\n        .isTrue();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/FederatingManagerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"6ae3f0bc431d681062bec3ad2883d1ef0203a88c","commitMessage":"@@@GEODE-7084: Handle CancelException in FederatingManager (#4206)\n\n* Catch and ignore CancelException in removeMemberArtifacts\n* Add try-catch around call to memberDeparted\n* Handle both CancelException and RegionDestroyedException\n* Fix unfinished test in FederatingManagerTest\n* Add more test cases to FederatingManagerTest","date":"2019-10-25 00:45:51","modifiedFileCount":"2","status":"M","submitter":"Kirk Lund"},{"authorTime":"2020-02-25 07:40:15","codes":[{"authorDate":"2020-02-25 07:40:15","commitOrder":5,"curCode":"  public void addMemberArtifactsCreatesMonitoringRegion() throws Exception {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock, proxyFactory, messenger, executorService);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(1, 20));\n\n    verify(regionFactory1).create(eq(\"_monitoringRegion_null<v1>20\"));\n  }\n","date":"2020-02-25 07:40:15","endLine":111,"groupId":"37738","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"addMemberArtifactsCreatesMonitoringRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1b/89f7922c7bc19f661fbe5f75ae60043289e699.src","preCode":"  public void addMemberArtifactsCreatesMonitoringRegion() throws Exception {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock, proxyFactory, messenger, executorService);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(1, 20));\n\n    verify(cacheForClientAccess)\n        .createInternalRegion(eq(\"_monitoringRegion_null<v1>20\"), any(), any());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/FederatingManagerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2020-02-25 07:40:15","commitOrder":5,"curCode":"  public void addMemberArtifactsCreatesNotificationRegionWithHasOwnStats() {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock, proxyFactory, messenger, executorService);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(4, 80));\n\n    ArgumentCaptor<HasCachePerfStats> captor =\n        ArgumentCaptor.forClass(HasCachePerfStats.class);\n    verify(regionFactory2).setCachePerfStatsHolder(captor.capture());\n    assertThat(captor.getValue().hasOwnStats()).isTrue();\n  }\n","date":"2020-02-25 07:40:15","endLine":150,"groupId":"15531","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"addMemberArtifactsCreatesNotificationRegionWithHasOwnStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1b/89f7922c7bc19f661fbe5f75ae60043289e699.src","preCode":"  public void addMemberArtifactsCreatesNotificationRegionWithHasOwnStats() throws Exception {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock, proxyFactory, messenger, executorService);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(4, 80));\n\n    ArgumentCaptor<InternalRegionArguments> captor =\n        ArgumentCaptor.forClass(InternalRegionArguments.class);\n    verify(cacheForClientAccess)\n        .createInternalRegion(eq(\"_notificationRegion_null<v4>80\"), any(), captor.capture());\n\n    InternalRegionArguments internalRegionArguments = captor.getValue();\n    assertThat(internalRegionArguments.getCachePerfStatsHolder().hasOwnStats())\n        .isTrue();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/FederatingManagerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"b082c0352b0a96c3dc1cf07caaf1f7f2e4fb8177","commitMessage":"@@@GEODE-7803: provide undeprecated internal region create (#4722)\n\nYou can now use InternalRegionFactory to create a region configured with InternalRegionArguments. No need to use the deprecated AttributesFactory.\nInternalRegionFactory used to be named RegionFactoryImpl.\n","date":"2020-02-25 07:40:15","modifiedFileCount":"38","status":"M","submitter":"Darrel Schneider"},{"authorTime":"2021-01-09 05:25:28","codes":[{"authorDate":"2021-01-09 05:25:28","commitOrder":6,"curCode":"  public void addMemberArtifactsCreatesMonitoringRegion() {\n    FederatingManager federatingManager =\n        new FederatingManager(repo, system, service, cache, statisticsFactory, statisticsClock,\n            proxyFactory, messenger, executorService);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(1, 20));\n\n    verify(regionFactory1).create(eq(\"_monitoringRegion_null<v1>20\"));\n  }\n","date":"2021-01-09 05:25:28","endLine":134,"groupId":"10275","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"addMemberArtifactsCreatesMonitoringRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/3f/da78280a4cb256d5cbcd95282aee238eeafec4.src","preCode":"  public void addMemberArtifactsCreatesMonitoringRegion() throws Exception {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock, proxyFactory, messenger, executorService);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(1, 20));\n\n    verify(regionFactory1).create(eq(\"_monitoringRegion_null<v1>20\"));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/FederatingManagerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2021-01-09 05:25:28","commitOrder":6,"curCode":"  public void addMemberArtifactsCreatesNotificationRegionWithHasOwnStats() {\n    FederatingManager federatingManager =\n        new FederatingManager(repo, system, service, cache, statisticsFactory, statisticsClock,\n            proxyFactory, messenger, executorService);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(4, 80));\n\n    ArgumentCaptor<HasCachePerfStats> captor = forClass(HasCachePerfStats.class);\n    verify(regionFactory2).setCachePerfStatsHolder(captor.capture());\n    assertThat(captor.getValue().hasOwnStats()).isTrue();\n  }\n","date":"2021-01-09 05:25:28","endLine":174,"groupId":"10275","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"addMemberArtifactsCreatesNotificationRegionWithHasOwnStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/3f/da78280a4cb256d5cbcd95282aee238eeafec4.src","preCode":"  public void addMemberArtifactsCreatesNotificationRegionWithHasOwnStats() {\n    FederatingManager federatingManager = new FederatingManager(repo, system, service, cache,\n        statisticsFactory, statisticsClock, proxyFactory, messenger, executorService);\n    federatingManager.startManager();\n\n    federatingManager.addMemberArtifacts(member(4, 80));\n\n    ArgumentCaptor<HasCachePerfStats> captor =\n        ArgumentCaptor.forClass(HasCachePerfStats.class);\n    verify(regionFactory2).setCachePerfStatsHolder(captor.capture());\n    assertThat(captor.getValue().hasOwnStats()).isTrue();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/FederatingManagerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"42726bd99c9ebb57ec5d3e987d47ecae9f4ea3a7","commitMessage":"@@@GEODE-8696: Fix synchronization in FederatingManager (#5728)\n\nPrevent hang while protecting against removal of member artifacts\nduring startup of manager.\n","date":"2021-01-09 05:25:28","modifiedFileCount":"10","status":"M","submitter":"Kirk Lund"}]
