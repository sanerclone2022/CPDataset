[{"authorTime":"2018-12-08 03:43:23","codes":[{"authorDate":"2018-12-08 03:43:23","commitOrder":1,"curCode":"  private void invokeListeners(String cqName, ClientCQImpl cQuery, CqEventImpl cqEvent,\n      Object[] fullValue) {\n    if (!cQuery.isRunning() || cQuery.getCqAttributes() == null) {\n      return;\n    }\n    \r\n    CqListener[] cqListeners = cQuery.getCqAttributes().getCqListeners();\n\n    final boolean isDebugEnabled = logger.isDebugEnabled();\n    if (isDebugEnabled) {\n      logger.debug(\"Invoking CQ listeners for {}, number of listeners : {} cqEvent : {}\", cqName,\n          cqListeners.length, cqEvent);\n    }\n\n    for (int lCnt = 0; lCnt < cqListeners.length; lCnt++) {\n      try {\n        \r\n        \r\n        if (cqListeners[lCnt] != null) {\n          cQuery.getVsdStats().incNumCqListenerInvocations();\n          try {\n            if (cqEvent.getThrowable() != null) {\n              cqListeners[lCnt].onError(cqEvent);\n            } else {\n              cqListeners[lCnt].onEvent(cqEvent);\n            }\n          } catch (InvalidDeltaException ide) {\n            if (isDebugEnabled) {\n              logger.debug(\"CqService.dispatchCqListeners(): Requesting full value...\");\n            }\n            Part result = (Part) GetEventValueOp\n                .executeOnPrimary(cqEvent.getQueueManager().getPool(), cqEvent.getEventID(), null);\n            Object newVal = result.getObject();\n            if (result == null || newVal == null) {\n              if (!cache.getCancelCriterion().isCancelInProgress()) {\n                Exception ex =\n                    new Exception(\"Failed to retrieve full value from server for eventID \"\n                        + cqEvent.getEventID());\n                logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n                    new Object[] {cqName, ex.getMessage()});\n                if (isDebugEnabled) {\n                  logger.debug(ex.getMessage(), ex);\n                }\n              }\n            } else {\n              this.cache.getCachePerfStats().incDeltaFullValuesRequested();\n              cqEvent = new CqEventImpl(cQuery, cqEvent.getBaseOperation(),\n                  cqEvent.getQueryOperation(), cqEvent.getKey(), newVal, cqEvent.getDeltaValue(),\n                  cqEvent.getQueueManager(), cqEvent.getEventID());\n              if (cqEvent.getThrowable() != null) {\n                cqListeners[lCnt].onError(cqEvent);\n              } else {\n                cqListeners[lCnt].onEvent(cqEvent);\n              }\n              if (fullValue != null) {\n                fullValue[0] = newVal;\n              }\n            }\n          }\n        }\n        \r\n      } catch (Exception ex) {\n        if (!cache.getCancelCriterion().isCancelInProgress()) {\n          logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n              new Object[] {cqName, ex.getMessage()});\n          if (isDebugEnabled) {\n            logger.debug(ex.getMessage(), ex);\n          }\n        }\n      } catch (VirtualMachineError err) {\n        SystemFailure.initiateFailure(err);\n        \r\n        \r\n        throw err;\n      } catch (Throwable t) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        SystemFailure.checkFailure();\n        logger.warn(\"Runtime Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n            new Object[] {cqName, t.getLocalizedMessage()});\n        if (isDebugEnabled) {\n          logger.debug(t.getMessage(), t);\n        }\n      }\n    }\n  }\n","date":"2018-12-08 03:43:23","endLine":1093,"groupId":"18657","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeListeners","params":"(StringcqName@ClientCQImplcQuery@CqEventImplcqEvent@Object[]fullValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/72/27eae203abfa33c273e8b3d4269a43fbdaf8cb.src","preCode":"  private void invokeListeners(String cqName, ClientCQImpl cQuery, CqEventImpl cqEvent,\n      Object[] fullValue) {\n    if (!cQuery.isRunning() || cQuery.getCqAttributes() == null) {\n      return;\n    }\n    \r\n    CqListener[] cqListeners = cQuery.getCqAttributes().getCqListeners();\n\n    final boolean isDebugEnabled = logger.isDebugEnabled();\n    if (isDebugEnabled) {\n      logger.debug(\"Invoking CQ listeners for {}, number of listeners : {} cqEvent : {}\", cqName,\n          cqListeners.length, cqEvent);\n    }\n\n    for (int lCnt = 0; lCnt < cqListeners.length; lCnt++) {\n      try {\n        \r\n        \r\n        if (cqListeners[lCnt] != null) {\n          cQuery.getVsdStats().incNumCqListenerInvocations();\n          try {\n            if (cqEvent.getThrowable() != null) {\n              cqListeners[lCnt].onError(cqEvent);\n            } else {\n              cqListeners[lCnt].onEvent(cqEvent);\n            }\n          } catch (InvalidDeltaException ide) {\n            if (isDebugEnabled) {\n              logger.debug(\"CqService.dispatchCqListeners(): Requesting full value...\");\n            }\n            Part result = (Part) GetEventValueOp\n                .executeOnPrimary(cqEvent.getQueueManager().getPool(), cqEvent.getEventID(), null);\n            Object newVal = result.getObject();\n            if (result == null || newVal == null) {\n              if (!cache.getCancelCriterion().isCancelInProgress()) {\n                Exception ex =\n                    new Exception(\"Failed to retrieve full value from server for eventID \"\n                        + cqEvent.getEventID());\n                logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n                    new Object[] {cqName, ex.getMessage()});\n                if (isDebugEnabled) {\n                  logger.debug(ex.getMessage(), ex);\n                }\n              }\n            } else {\n              this.cache.getCachePerfStats().incDeltaFullValuesRequested();\n              cqEvent = new CqEventImpl(cQuery, cqEvent.getBaseOperation(),\n                  cqEvent.getQueryOperation(), cqEvent.getKey(), newVal, cqEvent.getDeltaValue(),\n                  cqEvent.getQueueManager(), cqEvent.getEventID());\n              if (cqEvent.getThrowable() != null) {\n                cqListeners[lCnt].onError(cqEvent);\n              } else {\n                cqListeners[lCnt].onEvent(cqEvent);\n              }\n              if (fullValue != null) {\n                fullValue[0] = newVal;\n              }\n            }\n          }\n        }\n        \r\n      } catch (Exception ex) {\n        if (!cache.getCancelCriterion().isCancelInProgress()) {\n          logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n              new Object[] {cqName, ex.getMessage()});\n          if (isDebugEnabled) {\n            logger.debug(ex.getMessage(), ex);\n          }\n        }\n      } catch (VirtualMachineError err) {\n        SystemFailure.initiateFailure(err);\n        \r\n        \r\n        throw err;\n      } catch (Throwable t) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        SystemFailure.checkFailure();\n        logger.warn(\"Runtime Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n            new Object[] {cqName, t.getLocalizedMessage()});\n        if (isDebugEnabled) {\n          logger.debug(t.getMessage(), t);\n        }\n      }\n    }\n  }\n","realPath":"geode-cq/src/main/java/org/apache/geode/cache/query/cq/internal/CqServiceImpl.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1005,"status":"B"},{"authorDate":"2018-12-08 03:43:23","commitOrder":1,"curCode":"  private void invokeCqConnectedListeners(String cqName, ClientCQImpl cQuery, boolean connected) {\n    if (!cQuery.isRunning() || cQuery.getCqAttributes() == null) {\n      return;\n    }\n    cQuery.setConnected(connected);\n    \r\n    CqListener[] cqListeners = cQuery.getCqAttributes().getCqListeners();\n\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Invoking CQ status listeners for {}, number of listeners : {}\", cqName,\n          cqListeners.length);\n    }\n\n    for (int lCnt = 0; lCnt < cqListeners.length; lCnt++) {\n      try {\n        if (cqListeners[lCnt] != null) {\n          if (cqListeners[lCnt] instanceof CqStatusListener) {\n            CqStatusListener listener = (CqStatusListener) cqListeners[lCnt];\n            if (connected) {\n              listener.onCqConnected();\n            } else {\n              listener.onCqDisconnected();\n            }\n          }\n        }\n        \r\n      } catch (Exception ex) {\n        if (!cache.getCancelCriterion().isCancelInProgress()) {\n          logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n              new Object[] {cqName, ex.getMessage()});\n          if (logger.isDebugEnabled()) {\n            logger.debug(ex.getMessage(), ex);\n          }\n        }\n      } catch (VirtualMachineError err) {\n        SystemFailure.initiateFailure(err);\n        \r\n        \r\n        throw err;\n      } catch (Throwable t) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        SystemFailure.checkFailure();\n        logger.warn(\"Runtime Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n            new Object[] {cqName, t.getLocalizedMessage()});\n        if (logger.isDebugEnabled()) {\n          logger.debug(t.getMessage(), t);\n        }\n      }\n    }\n  }\n","date":"2018-12-08 03:43:23","endLine":1148,"groupId":"4332","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeCqConnectedListeners","params":"(StringcqName@ClientCQImplcQuery@booleanconnected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/72/27eae203abfa33c273e8b3d4269a43fbdaf8cb.src","preCode":"  private void invokeCqConnectedListeners(String cqName, ClientCQImpl cQuery, boolean connected) {\n    if (!cQuery.isRunning() || cQuery.getCqAttributes() == null) {\n      return;\n    }\n    cQuery.setConnected(connected);\n    \r\n    CqListener[] cqListeners = cQuery.getCqAttributes().getCqListeners();\n\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Invoking CQ status listeners for {}, number of listeners : {}\", cqName,\n          cqListeners.length);\n    }\n\n    for (int lCnt = 0; lCnt < cqListeners.length; lCnt++) {\n      try {\n        if (cqListeners[lCnt] != null) {\n          if (cqListeners[lCnt] instanceof CqStatusListener) {\n            CqStatusListener listener = (CqStatusListener) cqListeners[lCnt];\n            if (connected) {\n              listener.onCqConnected();\n            } else {\n              listener.onCqDisconnected();\n            }\n          }\n        }\n        \r\n      } catch (Exception ex) {\n        if (!cache.getCancelCriterion().isCancelInProgress()) {\n          logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n              new Object[] {cqName, ex.getMessage()});\n          if (logger.isDebugEnabled()) {\n            logger.debug(ex.getMessage(), ex);\n          }\n        }\n      } catch (VirtualMachineError err) {\n        SystemFailure.initiateFailure(err);\n        \r\n        \r\n        throw err;\n      } catch (Throwable t) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        SystemFailure.checkFailure();\n        logger.warn(\"Runtime Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n            new Object[] {cqName, t.getLocalizedMessage()});\n        if (logger.isDebugEnabled()) {\n          logger.debug(t.getMessage(), t);\n        }\n      }\n    }\n  }\n","realPath":"geode-cq/src/main/java/org/apache/geode/cache/query/cq/internal/CqServiceImpl.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1095,"status":"B"}],"commitId":"22a5017745acd4ca22cbcb08b70cc3cedbb4b5fd","commitMessage":"@@@GEODE-6117: Makes modules out of geode-core and geode-cq (#2915)\n\n* Moves all o.a.g.internal.cq(ish) classes to o.a.g.cache.querycq.internal.\n* Use Spring BOM plugin.\n* Adds geode-client BOM.\n\nCo-authored-by: Jacob Barrett <jbarrett@pivotal.io>\nCo-authored-by: Owen Nichols <onichols@pivotal.io>\n","date":"2018-12-08 03:43:23","modifiedFileCount":"33","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2020-01-25 04:40:08","codes":[{"authorDate":"2020-01-25 04:40:08","commitOrder":2,"curCode":"  private void invokeListeners(String cqName, ClientCQImpl cQuery, CqEventImpl cqEvent,\n      Object[] fullValue) {\n    if (!cQuery.isRunning() || cQuery.getCqAttributes() == null) {\n      return;\n    }\n    \r\n    CqListener[] cqListeners = cQuery.getCqAttributes().getCqListeners();\n\n    final boolean isDebugEnabled = logger.isDebugEnabled();\n    if (isDebugEnabled) {\n      logger.debug(\"Invoking CQ listeners for {}, number of listeners : {} cqEvent : {}\", cqName,\n          cqListeners.length, cqEvent);\n    }\n\n    for (CqListener cqListener : cqListeners) {\n      try {\n        \r\n        \r\n        if (cqListener != null) {\n          cQuery.getVsdStats().incNumCqListenerInvocations();\n          try {\n            if (cqEvent.getThrowable() != null) {\n              cqListener.onError(cqEvent);\n            } else {\n              cqListener.onEvent(cqEvent);\n            }\n          } catch (InvalidDeltaException ide) {\n            if (isDebugEnabled) {\n              logger.debug(\"CqService.dispatchCqListeners(): Requesting full value...\");\n            }\n            Part result = (Part) GetEventValueOp\n                .executeOnPrimary(cqEvent.getQueueManager().getPool(), cqEvent.getEventID(), null);\n            Object newVal = result.getObject();\n            if (result == null || newVal == null) {\n              if (!cache.getCancelCriterion().isCancelInProgress()) {\n                Exception ex =\n                    new Exception(\"Failed to retrieve full value from server for eventID \"\n                        + cqEvent.getEventID());\n                logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n                    new Object[] {cqName, ex.getMessage()});\n                if (isDebugEnabled) {\n                  logger.debug(ex.getMessage(), ex);\n                }\n              }\n            } else {\n              this.cache.getCachePerfStats().incDeltaFullValuesRequested();\n              cqEvent = new CqEventImpl(cQuery, cqEvent.getBaseOperation(),\n                  cqEvent.getQueryOperation(), cqEvent.getKey(), newVal, cqEvent.getDeltaValue(),\n                  cqEvent.getQueueManager(), cqEvent.getEventID());\n              if (cqEvent.getThrowable() != null) {\n                cqListener.onError(cqEvent);\n              } else {\n                cqListener.onEvent(cqEvent);\n              }\n              if (fullValue != null) {\n                fullValue[0] = newVal;\n              }\n            }\n          }\n        }\n        \r\n      } catch (Exception ex) {\n        if (!cache.getCancelCriterion().isCancelInProgress()) {\n          logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n              new Object[] {cqName, ex.getMessage()});\n          if (isDebugEnabled) {\n            logger.debug(ex.getMessage(), ex);\n          }\n        }\n      } catch (VirtualMachineError err) {\n        SystemFailure.initiateFailure(err);\n        \r\n        \r\n        throw err;\n      } catch (Throwable t) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        SystemFailure.checkFailure();\n        logger.warn(\"Runtime Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n            new Object[] {cqName, t.getLocalizedMessage()});\n        if (isDebugEnabled) {\n          logger.debug(t.getMessage(), t);\n        }\n      }\n    }\n  }\n","date":"2020-01-25 04:40:08","endLine":1094,"groupId":"10901","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeListeners","params":"(StringcqName@ClientCQImplcQuery@CqEventImplcqEvent@Object[]fullValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cb/54c995ee9cc6286caac1a6a8eb3d97806b0341.src","preCode":"  private void invokeListeners(String cqName, ClientCQImpl cQuery, CqEventImpl cqEvent,\n      Object[] fullValue) {\n    if (!cQuery.isRunning() || cQuery.getCqAttributes() == null) {\n      return;\n    }\n    \r\n    CqListener[] cqListeners = cQuery.getCqAttributes().getCqListeners();\n\n    final boolean isDebugEnabled = logger.isDebugEnabled();\n    if (isDebugEnabled) {\n      logger.debug(\"Invoking CQ listeners for {}, number of listeners : {} cqEvent : {}\", cqName,\n          cqListeners.length, cqEvent);\n    }\n\n    for (int lCnt = 0; lCnt < cqListeners.length; lCnt++) {\n      try {\n        \r\n        \r\n        if (cqListeners[lCnt] != null) {\n          cQuery.getVsdStats().incNumCqListenerInvocations();\n          try {\n            if (cqEvent.getThrowable() != null) {\n              cqListeners[lCnt].onError(cqEvent);\n            } else {\n              cqListeners[lCnt].onEvent(cqEvent);\n            }\n          } catch (InvalidDeltaException ide) {\n            if (isDebugEnabled) {\n              logger.debug(\"CqService.dispatchCqListeners(): Requesting full value...\");\n            }\n            Part result = (Part) GetEventValueOp\n                .executeOnPrimary(cqEvent.getQueueManager().getPool(), cqEvent.getEventID(), null);\n            Object newVal = result.getObject();\n            if (result == null || newVal == null) {\n              if (!cache.getCancelCriterion().isCancelInProgress()) {\n                Exception ex =\n                    new Exception(\"Failed to retrieve full value from server for eventID \"\n                        + cqEvent.getEventID());\n                logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n                    new Object[] {cqName, ex.getMessage()});\n                if (isDebugEnabled) {\n                  logger.debug(ex.getMessage(), ex);\n                }\n              }\n            } else {\n              this.cache.getCachePerfStats().incDeltaFullValuesRequested();\n              cqEvent = new CqEventImpl(cQuery, cqEvent.getBaseOperation(),\n                  cqEvent.getQueryOperation(), cqEvent.getKey(), newVal, cqEvent.getDeltaValue(),\n                  cqEvent.getQueueManager(), cqEvent.getEventID());\n              if (cqEvent.getThrowable() != null) {\n                cqListeners[lCnt].onError(cqEvent);\n              } else {\n                cqListeners[lCnt].onEvent(cqEvent);\n              }\n              if (fullValue != null) {\n                fullValue[0] = newVal;\n              }\n            }\n          }\n        }\n        \r\n      } catch (Exception ex) {\n        if (!cache.getCancelCriterion().isCancelInProgress()) {\n          logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n              new Object[] {cqName, ex.getMessage()});\n          if (isDebugEnabled) {\n            logger.debug(ex.getMessage(), ex);\n          }\n        }\n      } catch (VirtualMachineError err) {\n        SystemFailure.initiateFailure(err);\n        \r\n        \r\n        throw err;\n      } catch (Throwable t) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        SystemFailure.checkFailure();\n        logger.warn(\"Runtime Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n            new Object[] {cqName, t.getLocalizedMessage()});\n        if (isDebugEnabled) {\n          logger.debug(t.getMessage(), t);\n        }\n      }\n    }\n  }\n","realPath":"geode-cq/src/main/java/org/apache/geode/cache/query/cq/internal/CqServiceImpl.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1006,"status":"M"},{"authorDate":"2020-01-25 04:40:08","commitOrder":2,"curCode":"  private void invokeCqConnectedListeners(String cqName, ClientCQImpl cQuery, boolean connected) {\n    if (!cQuery.isRunning() || cQuery.getCqAttributes() == null) {\n      return;\n    }\n    cQuery.setConnected(connected);\n    \r\n    CqListener[] cqListeners = cQuery.getCqAttributes().getCqListeners();\n\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Invoking CQ status listeners for {}, number of listeners : {}\", cqName,\n          cqListeners.length);\n    }\n\n    for (CqListener cqListener : cqListeners) {\n      try {\n        if (cqListener != null) {\n          if (cqListener instanceof CqStatusListener) {\n            CqStatusListener listener = (CqStatusListener) cqListener;\n            if (connected) {\n              listener.onCqConnected();\n            } else {\n              listener.onCqDisconnected();\n            }\n          }\n        }\n        \r\n      } catch (Exception ex) {\n        if (!cache.getCancelCriterion().isCancelInProgress()) {\n          logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n              new Object[] {cqName, ex.getMessage()});\n          if (logger.isDebugEnabled()) {\n            logger.debug(ex.getMessage(), ex);\n          }\n        }\n      } catch (VirtualMachineError err) {\n        SystemFailure.initiateFailure(err);\n        \r\n        \r\n        throw err;\n      } catch (Throwable t) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        SystemFailure.checkFailure();\n        logger.warn(\"Runtime Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n            new Object[] {cqName, t.getLocalizedMessage()});\n        if (logger.isDebugEnabled()) {\n          logger.debug(t.getMessage(), t);\n        }\n      }\n    }\n  }\n","date":"2020-01-25 04:40:08","endLine":1149,"groupId":"10901","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeCqConnectedListeners","params":"(StringcqName@ClientCQImplcQuery@booleanconnected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cb/54c995ee9cc6286caac1a6a8eb3d97806b0341.src","preCode":"  private void invokeCqConnectedListeners(String cqName, ClientCQImpl cQuery, boolean connected) {\n    if (!cQuery.isRunning() || cQuery.getCqAttributes() == null) {\n      return;\n    }\n    cQuery.setConnected(connected);\n    \r\n    CqListener[] cqListeners = cQuery.getCqAttributes().getCqListeners();\n\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Invoking CQ status listeners for {}, number of listeners : {}\", cqName,\n          cqListeners.length);\n    }\n\n    for (int lCnt = 0; lCnt < cqListeners.length; lCnt++) {\n      try {\n        if (cqListeners[lCnt] != null) {\n          if (cqListeners[lCnt] instanceof CqStatusListener) {\n            CqStatusListener listener = (CqStatusListener) cqListeners[lCnt];\n            if (connected) {\n              listener.onCqConnected();\n            } else {\n              listener.onCqDisconnected();\n            }\n          }\n        }\n        \r\n      } catch (Exception ex) {\n        if (!cache.getCancelCriterion().isCancelInProgress()) {\n          logger.warn(\"Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n              new Object[] {cqName, ex.getMessage()});\n          if (logger.isDebugEnabled()) {\n            logger.debug(ex.getMessage(), ex);\n          }\n        }\n      } catch (VirtualMachineError err) {\n        SystemFailure.initiateFailure(err);\n        \r\n        \r\n        throw err;\n      } catch (Throwable t) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        SystemFailure.checkFailure();\n        logger.warn(\"Runtime Exception in the CqListener of the CQ, CqName: {} Error : {}\",\n            new Object[] {cqName, t.getLocalizedMessage()});\n        if (logger.isDebugEnabled()) {\n          logger.debug(t.getMessage(), t);\n        }\n      }\n    }\n  }\n","realPath":"geode-cq/src/main/java/org/apache/geode/cache/query/cq/internal/CqServiceImpl.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1096,"status":"M"}],"commitId":"4f078de38a38de31e7558b99b7f0fff979ce87c5","commitMessage":"@@@GEODE-7660: Code cleanup for cqs (#4540)\n\n* Assign to string instead of Object\n* Migration to post Java 5 and Java 7 'features'","date":"2020-01-25 04:40:08","modifiedFileCount":"6","status":"M","submitter":"Jason Huynh"}]
