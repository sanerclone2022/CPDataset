[{"authorTime":"2018-07-07 04:29:08","codes":[{"authorDate":"2018-07-07 04:29:08","commitOrder":1,"curCode":"  public void flushPrepareFinishOrdering() {\n    backupOperation.backupAllMembers(targetDirPath, baselineDirPath);\n\n    InOrder inOrder = inOrder(flushToDiskFactory, prepareBackupFactory, finishBackupFactory);\n    inOrder.verify(flushToDiskFactory).createFlushToDiskStep(any(), any(), any(), any(), any());\n    inOrder.verify(prepareBackupFactory).createPrepareBackupStep(any(), any(), any(), any(), any(),\n        any());\n    inOrder.verify(finishBackupFactory).createFinishBackupStep(any(), any(), any(), any(), any());\n  }\n","date":"2018-07-10 01:40:24","endLine":97,"groupId":"19922","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"flushPrepareFinishOrdering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6a/db998dfac2c824c068e1115d1eba38893c0a1e.src","preCode":"  public void flushPrepareFinishOrdering() {\n    backupOperation.backupAllMembers(targetDirPath, baselineDirPath);\n\n    InOrder inOrder = inOrder(flushToDiskFactory, prepareBackupFactory, finishBackupFactory);\n    inOrder.verify(flushToDiskFactory).createFlushToDiskStep(any(), any(), any(), any(), any());\n    inOrder.verify(prepareBackupFactory).createPrepareBackupStep(any(), any(), any(), any(), any(),\n        any());\n    inOrder.verify(finishBackupFactory).createFinishBackupStep(any(), any(), any(), any(), any());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/BackupOperationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"},{"authorDate":"2018-07-07 04:29:08","commitOrder":1,"curCode":"  public void abortIfPrepareFails() {\n    PrepareBackupStep prepareBackupStep = mock(PrepareBackupStep.class);\n    RuntimeException thrownBySend = new RuntimeException(\"thrownBySend\");\n\n    when(prepareBackupFactory.createPrepareBackupStep(any(), any(), any(), any(), any(), any()))\n        .thenReturn(prepareBackupStep);\n    when(prepareBackupStep.send()).thenThrow(thrownBySend);\n\n    assertThatThrownBy(() -> backupOperation.backupAllMembers(targetDirPath, baselineDirPath))\n        .isSameAs(thrownBySend);\n\n    InOrder inOrder = inOrder(flushToDiskFactory, prepareBackupFactory, abortBackupFactory);\n    inOrder.verify(flushToDiskFactory).createFlushToDiskStep(any(), any(), any(), any(), any());\n    inOrder.verify(prepareBackupFactory).createPrepareBackupStep(any(), any(), any(), any(), any(),\n        any());\n    inOrder.verify(abortBackupFactory).createAbortBackupStep(any(), any(), any(), any(), any());\n\n    verifyZeroInteractions(finishBackupFactory);\n  }\n","date":"2018-07-10 01:40:24","endLine":118,"groupId":"19922","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"abortIfPrepareFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6a/db998dfac2c824c068e1115d1eba38893c0a1e.src","preCode":"  public void abortIfPrepareFails() {\n    PrepareBackupStep prepareBackupStep = mock(PrepareBackupStep.class);\n    RuntimeException thrownBySend = new RuntimeException(\"thrownBySend\");\n\n    when(prepareBackupFactory.createPrepareBackupStep(any(), any(), any(), any(), any(), any()))\n        .thenReturn(prepareBackupStep);\n    when(prepareBackupStep.send()).thenThrow(thrownBySend);\n\n    assertThatThrownBy(() -> backupOperation.backupAllMembers(targetDirPath, baselineDirPath))\n        .isSameAs(thrownBySend);\n\n    InOrder inOrder = inOrder(flushToDiskFactory, prepareBackupFactory, abortBackupFactory);\n    inOrder.verify(flushToDiskFactory).createFlushToDiskStep(any(), any(), any(), any(), any());\n    inOrder.verify(prepareBackupFactory).createPrepareBackupStep(any(), any(), any(), any(), any(),\n        any());\n    inOrder.verify(abortBackupFactory).createAbortBackupStep(any(), any(), any(), any(), any());\n\n    verifyZeroInteractions(finishBackupFactory);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/BackupOperationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"1eb027597291a39acfce4ab68a02c941b71d33a5","commitMessage":"@@@GEODE-5398: Add BackupOperationTest and BackupStatusImplTest\n\nRefactor BackupOperation to make it easier to unit test.\n","date":"2018-07-10 01:40:24","modifiedFileCount":"13","status":"B","submitter":"Kirk Lund"},{"authorTime":"2020-04-25 00:20:21","codes":[{"authorDate":"2018-07-07 04:29:08","commitOrder":2,"curCode":"  public void flushPrepareFinishOrdering() {\n    backupOperation.backupAllMembers(targetDirPath, baselineDirPath);\n\n    InOrder inOrder = inOrder(flushToDiskFactory, prepareBackupFactory, finishBackupFactory);\n    inOrder.verify(flushToDiskFactory).createFlushToDiskStep(any(), any(), any(), any(), any());\n    inOrder.verify(prepareBackupFactory).createPrepareBackupStep(any(), any(), any(), any(), any(),\n        any());\n    inOrder.verify(finishBackupFactory).createFinishBackupStep(any(), any(), any(), any(), any());\n  }\n","date":"2018-07-10 01:40:24","endLine":97,"groupId":"101274","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"flushPrepareFinishOrdering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6a/db998dfac2c824c068e1115d1eba38893c0a1e.src","preCode":"  public void flushPrepareFinishOrdering() {\n    backupOperation.backupAllMembers(targetDirPath, baselineDirPath);\n\n    InOrder inOrder = inOrder(flushToDiskFactory, prepareBackupFactory, finishBackupFactory);\n    inOrder.verify(flushToDiskFactory).createFlushToDiskStep(any(), any(), any(), any(), any());\n    inOrder.verify(prepareBackupFactory).createPrepareBackupStep(any(), any(), any(), any(), any(),\n        any());\n    inOrder.verify(finishBackupFactory).createFinishBackupStep(any(), any(), any(), any(), any());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/BackupOperationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"N"},{"authorDate":"2020-04-25 00:20:21","commitOrder":2,"curCode":"  public void abortIfPrepareFails() {\n    PrepareBackupStep prepareBackupStep = mock(PrepareBackupStep.class);\n    RuntimeException thrownBySend = new RuntimeException(\"thrownBySend\");\n\n    when(prepareBackupFactory.createPrepareBackupStep(any(), any(), any(), any(), any(), any()))\n        .thenReturn(prepareBackupStep);\n    when(prepareBackupStep.send()).thenThrow(thrownBySend);\n\n    assertThatThrownBy(() -> backupOperation.backupAllMembers(targetDirPath, baselineDirPath))\n        .isSameAs(thrownBySend);\n\n    InOrder inOrder = inOrder(flushToDiskFactory, prepareBackupFactory, abortBackupFactory);\n    inOrder.verify(flushToDiskFactory).createFlushToDiskStep(any(), any(), any(), any(), any());\n    inOrder.verify(prepareBackupFactory).createPrepareBackupStep(any(), any(), any(), any(), any(),\n        any());\n    inOrder.verify(abortBackupFactory).createAbortBackupStep(any(), any(), any(), any(), any());\n\n    verifyNoMoreInteractions(finishBackupFactory);\n  }\n","date":"2020-04-25 00:20:21","endLine":115,"groupId":"101274","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"abortIfPrepareFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0d/4416bd8e3cd0f2d97fa924ebb3278d80449381.src","preCode":"  public void abortIfPrepareFails() {\n    PrepareBackupStep prepareBackupStep = mock(PrepareBackupStep.class);\n    RuntimeException thrownBySend = new RuntimeException(\"thrownBySend\");\n\n    when(prepareBackupFactory.createPrepareBackupStep(any(), any(), any(), any(), any(), any()))\n        .thenReturn(prepareBackupStep);\n    when(prepareBackupStep.send()).thenThrow(thrownBySend);\n\n    assertThatThrownBy(() -> backupOperation.backupAllMembers(targetDirPath, baselineDirPath))\n        .isSameAs(thrownBySend);\n\n    InOrder inOrder = inOrder(flushToDiskFactory, prepareBackupFactory, abortBackupFactory);\n    inOrder.verify(flushToDiskFactory).createFlushToDiskStep(any(), any(), any(), any(), any());\n    inOrder.verify(prepareBackupFactory).createPrepareBackupStep(any(), any(), any(), any(), any(),\n        any());\n    inOrder.verify(abortBackupFactory).createAbortBackupStep(any(), any(), any(), any(), any());\n\n    verifyZeroInteractions(finishBackupFactory);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/BackupOperationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"0a1701e92dc09bcd6b79edd3b52f20ee9e9a867c","commitMessage":"@@@GEODE-7964: Upgrade Mockito to 3.3.3 (#4924)\n\n","date":"2020-04-25 00:20:21","modifiedFileCount":"34","status":"M","submitter":"Kirk Lund"}]
