[{"authorTime":"2019-06-18 01:01:57","codes":[{"authorDate":"2019-06-18 01:01:57","commitOrder":1,"curCode":"  private void executeFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool, REGION_NAME, FUNCTION_NAME,\n                executor, resultCollector, FUNCTION_HAS_RESULT, retryAttempts,\n                testSupport.toBoolean(haStatus),\n                OPTIMIZE_FOR_WRITE_SETTING));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool, REGION_NAME, function,\n                executor, resultCollector, FUNCTION_HAS_RESULT, retryAttempts));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","date":"2019-06-18 01:01:57","endLine":363,"groupId":"5071","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"executeFunctionMultiHopAndValidate","params":"(finalHAStatushaStatus@finalFunctionIdentifierTypefunctionIdentifierType@finalintretryAttempts@finalPoolImplexecutablePool@finalFunction<Integer>function@finalServerRegionFunctionExecutorexecutor@finalResultCollector<Integer@Collection<Integer>>resultCollector@finalintexpectTries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/bf/8e6e0cb9052b5fc4d80e089d8176dc5cfdcbbb.src","preCode":"  private void executeFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool, REGION_NAME, FUNCTION_NAME,\n                executor, resultCollector, FUNCTION_HAS_RESULT, retryAttempts,\n                testSupport.toBoolean(haStatus),\n                OPTIMIZE_FOR_WRITE_SETTING));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool, REGION_NAME, function,\n                executor, resultCollector, FUNCTION_HAS_RESULT, retryAttempts));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ExecuteRegionFunctionOpRetryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":335,"status":"B"},{"authorDate":"2019-06-18 01:01:57","commitOrder":1,"curCode":"  private void reExecuteFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.reexecute(executablePool, REGION_NAME, FUNCTION_NAME,\n                executor, resultCollector, FUNCTION_HAS_RESULT, new HashSet<>(),\n                retryAttempts, testSupport.toBoolean(haStatus),\n                OPTIMIZE_FOR_WRITE_SETTING));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.reexecute(executablePool, REGION_NAME, function,\n                executor, resultCollector, FUNCTION_HAS_RESULT, new HashSet<>(), retryAttempts));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","date":"2019-06-18 01:01:57","endLine":393,"groupId":"5071","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"reExecuteFunctionMultiHopAndValidate","params":"(finalHAStatushaStatus@finalFunctionIdentifierTypefunctionIdentifierType@finalintretryAttempts@finalPoolImplexecutablePool@finalFunction<Integer>function@finalServerRegionFunctionExecutorexecutor@finalResultCollector<Integer@Collection<Integer>>resultCollector@finalintexpectTries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/bf/8e6e0cb9052b5fc4d80e089d8176dc5cfdcbbb.src","preCode":"  private void reExecuteFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.reexecute(executablePool, REGION_NAME, FUNCTION_NAME,\n                executor, resultCollector, FUNCTION_HAS_RESULT, new HashSet<>(),\n                retryAttempts, testSupport.toBoolean(haStatus),\n                OPTIMIZE_FOR_WRITE_SETTING));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.reexecute(executablePool, REGION_NAME, function,\n                executor, resultCollector, FUNCTION_HAS_RESULT, new HashSet<>(), retryAttempts));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ExecuteRegionFunctionOpRetryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":365,"status":"B"}],"commitId":"5b6bcbfd27b9db8ea87be19c4b39de679bf350c2","commitMessage":"@@@GEODE-6677: Eliminate Infinite Function Retry (#3690)\n\n* Fix for retry with onRegion\n* Fix retry with onRegion singlehop\n* Fix for onServer\n* DUnitTest for onRegion (singleHop.  multihop).  onServer\n* Unit test for onRegion (singleHop.  multihop).  onServer\n","date":"2019-06-18 01:01:57","modifiedFileCount":"8","status":"B","submitter":"Bill Burcham"},{"authorTime":"2019-06-12 12:55:02","codes":[{"authorDate":"2019-06-12 12:55:02","commitOrder":2,"curCode":"  private void executeFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool, REGION_NAME, FUNCTION_NAME,\n                executor, resultCollector, FUNCTION_HAS_RESULT, retryAttempts,\n                testSupport.toBoolean(haStatus),\n                OPTIMIZE_FOR_WRITE_SETTING, DEFAULT_CLIENT_FUNCTION_TIMEOUT));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool, REGION_NAME, function,\n                executor, resultCollector, FUNCTION_HAS_RESULT, retryAttempts,\n                DEFAULT_CLIENT_FUNCTION_TIMEOUT));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","date":"2019-06-19 22:21:22","endLine":365,"groupId":"5071","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"executeFunctionMultiHopAndValidate","params":"(finalHAStatushaStatus@finalFunctionIdentifierTypefunctionIdentifierType@finalintretryAttempts@finalPoolImplexecutablePool@finalFunction<Integer>function@finalServerRegionFunctionExecutorexecutor@finalResultCollector<Integer@Collection<Integer>>resultCollector@finalintexpectTries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e7/ce2ca77ffde5609c8ed9696ee2a14caa34e14b.src","preCode":"  private void executeFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool, REGION_NAME, FUNCTION_NAME,\n                executor, resultCollector, FUNCTION_HAS_RESULT, retryAttempts,\n                testSupport.toBoolean(haStatus),\n                OPTIMIZE_FOR_WRITE_SETTING));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool, REGION_NAME, function,\n                executor, resultCollector, FUNCTION_HAS_RESULT, retryAttempts));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ExecuteRegionFunctionOpRetryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"M"},{"authorDate":"2019-06-12 12:55:02","commitOrder":2,"curCode":"  private void reExecuteFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.reexecute(executablePool, REGION_NAME, FUNCTION_NAME,\n                executor, resultCollector, FUNCTION_HAS_RESULT, new HashSet<>(),\n                retryAttempts, testSupport.toBoolean(haStatus),\n                OPTIMIZE_FOR_WRITE_SETTING, DEFAULT_CLIENT_FUNCTION_TIMEOUT));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.reexecute(executablePool, REGION_NAME, function,\n                executor, resultCollector, FUNCTION_HAS_RESULT, new HashSet<>(), retryAttempts,\n                DEFAULT_CLIENT_FUNCTION_TIMEOUT));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","date":"2019-06-19 22:21:22","endLine":396,"groupId":"5071","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"reExecuteFunctionMultiHopAndValidate","params":"(finalHAStatushaStatus@finalFunctionIdentifierTypefunctionIdentifierType@finalintretryAttempts@finalPoolImplexecutablePool@finalFunction<Integer>function@finalServerRegionFunctionExecutorexecutor@finalResultCollector<Integer@Collection<Integer>>resultCollector@finalintexpectTries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e7/ce2ca77ffde5609c8ed9696ee2a14caa34e14b.src","preCode":"  private void reExecuteFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.reexecute(executablePool, REGION_NAME, FUNCTION_NAME,\n                executor, resultCollector, FUNCTION_HAS_RESULT, new HashSet<>(),\n                retryAttempts, testSupport.toBoolean(haStatus),\n                OPTIMIZE_FOR_WRITE_SETTING));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.reexecute(executablePool, REGION_NAME, function,\n                executor, resultCollector, FUNCTION_HAS_RESULT, new HashSet<>(), retryAttempts));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ExecuteRegionFunctionOpRetryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":367,"status":"M"}],"commitId":"8939f6435d55f1c48b5c57e00a4422a407fd0d86","commitMessage":"@@@GEODE-6857: Moves function timeout to function operations.\n\n* Extracts out an abstract function operation that manages setting\n  and restoring timeout.\n\n* Move timeout property read to AbstractExecution constructor.\n","date":"2019-06-19 22:21:22","modifiedFileCount":"15","status":"M","submitter":"Jacob Barrett"},{"authorTime":"2019-07-04 08:27:56","codes":[{"authorDate":"2019-07-04 08:27:56","commitOrder":3,"curCode":"  private void executeFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool,\n                resultCollector, retryAttempts,\n                testSupport.toBoolean(haStatus),\n                new ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl(REGION_NAME, FUNCTION_NAME,\n                    executor, resultCollector, FUNCTION_HAS_RESULT, testSupport.toBoolean(haStatus),\n                    OPTIMIZE_FOR_WRITE_SETTING,\n                    true, DEFAULT_CLIENT_FUNCTION_TIMEOUT),\n                false, Collections.EMPTY_SET));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool,\n                resultCollector, retryAttempts,\n                function.isHA(),\n                new ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl(REGION_NAME, function,\n                    executor, resultCollector, DEFAULT_CLIENT_FUNCTION_TIMEOUT),\n                false, Collections.EMPTY_SET));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","date":"2019-07-04 08:27:56","endLine":372,"groupId":"102874","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"executeFunctionMultiHopAndValidate","params":"(finalHAStatushaStatus@finalFunctionIdentifierTypefunctionIdentifierType@finalintretryAttempts@finalPoolImplexecutablePool@finalFunction<Integer>function@finalServerRegionFunctionExecutorexecutor@finalResultCollector<Integer@Collection<Integer>>resultCollector@finalintexpectTries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/74/f6748566b0d9c20da20187c1277810e8c3f5a5.src","preCode":"  private void executeFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool, REGION_NAME, FUNCTION_NAME,\n                executor, resultCollector, FUNCTION_HAS_RESULT, retryAttempts,\n                testSupport.toBoolean(haStatus),\n                OPTIMIZE_FOR_WRITE_SETTING, DEFAULT_CLIENT_FUNCTION_TIMEOUT));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool, REGION_NAME, function,\n                executor, resultCollector, FUNCTION_HAS_RESULT, retryAttempts,\n                DEFAULT_CLIENT_FUNCTION_TIMEOUT));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ExecuteRegionFunctionOpRetryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"M"},{"authorDate":"2019-07-04 08:27:56","commitOrder":3,"curCode":"  private void reExecuteFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool,\n                resultCollector,\n                retryAttempts, testSupport.toBoolean(haStatus),\n                new ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl(REGION_NAME, FUNCTION_NAME,\n                    executor, resultCollector, FUNCTION_HAS_RESULT, testSupport.toBoolean(haStatus),\n                    OPTIMIZE_FOR_WRITE_SETTING, true, DEFAULT_CLIENT_FUNCTION_TIMEOUT),\n                true, Collections.EMPTY_SET));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.execute(executablePool,\n                resultCollector,\n                retryAttempts,\n                function.isHA(),\n                new ExecuteRegionFunctionOp.ExecuteRegionFunctionOpImpl(REGION_NAME, function,\n                    executor, resultCollector, DEFAULT_CLIENT_FUNCTION_TIMEOUT),\n                true, Collections.EMPTY_SET));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","date":"2019-07-04 08:27:56","endLine":410,"groupId":"102874","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"reExecuteFunctionMultiHopAndValidate","params":"(finalHAStatushaStatus@finalFunctionIdentifierTypefunctionIdentifierType@finalintretryAttempts@finalPoolImplexecutablePool@finalFunction<Integer>function@finalServerRegionFunctionExecutorexecutor@finalResultCollector<Integer@Collection<Integer>>resultCollector@finalintexpectTries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/74/f6748566b0d9c20da20187c1277810e8c3f5a5.src","preCode":"  private void reExecuteFunctionMultiHopAndValidate(final HAStatus haStatus,\n      final FunctionIdentifierType functionIdentifierType,\n      final int retryAttempts,\n      final PoolImpl executablePool,\n      final Function<Integer> function,\n      final ServerRegionFunctionExecutor executor,\n      final ResultCollector<Integer, Collection<Integer>> resultCollector,\n      final int expectTries) {\n    switch (functionIdentifierType) {\n      case STRING:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.reexecute(executablePool, REGION_NAME, FUNCTION_NAME,\n                executor, resultCollector, FUNCTION_HAS_RESULT, new HashSet<>(),\n                retryAttempts, testSupport.toBoolean(haStatus),\n                OPTIMIZE_FOR_WRITE_SETTING, DEFAULT_CLIENT_FUNCTION_TIMEOUT));\n        break;\n      case OBJECT_REFERENCE:\n        ignoreServerConnectivityException(\n            () -> ExecuteRegionFunctionOp.reexecute(executablePool, REGION_NAME, function,\n                executor, resultCollector, FUNCTION_HAS_RESULT, new HashSet<>(), retryAttempts,\n                DEFAULT_CLIENT_FUNCTION_TIMEOUT));\n        break;\n      default:\n        throw new AssertionError(\"unknown FunctionIdentifierType type: \" + functionIdentifierType);\n    }\n\n    verify(testSupport.getExecutablePool(), times(expectTries)).execute(\n        ArgumentMatchers.<AbstractOp>any(),\n        ArgumentMatchers.anyInt());\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ExecuteRegionFunctionOpRetryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":374,"status":"M"}],"commitId":"0b2f2c248c38b54c59df638315b37ad9ffc604af","commitMessage":"@@@GEODE-6798: Refactor client function execution (#3745)\n\nGEODE-6798: Refactoring of client function execution logic\n","date":"2019-07-04 08:27:56","modifiedFileCount":"10","status":"M","submitter":"agingade"}]
