[{"authorTime":"2018-06-22 00:04:41","codes":[{"authorDate":"2018-06-22 00:04:41","commitOrder":1,"curCode":"  public void failedConnectionIsDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, cancelCriterion, false,\n            null, socketCreator, handshake));\n    doReturn(connection).when(spyConnector).getConnection(ds, cancelCriterion);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    when(connection.connect(any(), any(), any(), anyInt(), anyInt(), anyInt(), any(), any(), any()))\n        .thenThrow(new GemFireSecurityException(\"Expected exception\"));\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector).destroyConnection(any());\n    }\n  }\n","date":"2018-06-22 00:04:41","endLine":97,"groupId":"27571","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"failedConnectionIsDestroyed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fb/2ed90961ec8b9a38d51cc86a8327ab52d75ceb.src","preCode":"  public void failedConnectionIsDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, cancelCriterion, false,\n            null, socketCreator, handshake));\n    doReturn(connection).when(spyConnector).getConnection(ds, cancelCriterion);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    when(connection.connect(any(), any(), any(), anyInt(), anyInt(), anyInt(), any(), any(), any()))\n        .thenThrow(new GemFireSecurityException(\"Expected exception\"));\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector).destroyConnection(any());\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ConnectionConnectorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"},{"authorDate":"2018-06-22 00:04:41","commitOrder":1,"curCode":"  public void successfulConnectionIsNotDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, cancelCriterion, false,\n            null, socketCreator, handshake));\n    doReturn(connection).when(spyConnector).getConnection(ds, cancelCriterion);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector, times(0)).destroyConnection(any());\n    }\n  }\n","date":"2018-06-22 00:04:41","endLine":113,"groupId":"27574","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"successfulConnectionIsNotDestroyed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fb/2ed90961ec8b9a38d51cc86a8327ab52d75ceb.src","preCode":"  public void successfulConnectionIsNotDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, cancelCriterion, false,\n            null, socketCreator, handshake));\n    doReturn(connection).when(spyConnector).getConnection(ds, cancelCriterion);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector, times(0)).destroyConnection(any());\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ConnectionConnectorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"13087e2a23983ea43f5406512e9eef1fae1876c0","commitMessage":"@@@GEODE-5333: Destroy failed connection in ConnectionConnector (#2072)\n\nAdded unit test for new functionality in ConnectionConnector\n\nRefactored ConnectionFactoryImpl.  ConnectionConnector.  and\nClientSideHandshakeImpl improve testability of ConnectionConnector","date":"2018-06-22 00:04:41","modifiedFileCount":"2","status":"B","submitter":"Kenneth Howe"},{"authorTime":"2019-06-12 11:35:32","codes":[{"authorDate":"2019-06-12 11:35:32","commitOrder":2,"curCode":"  public void failedConnectionIsDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, false,\n            null, socketCreator, handshake));\n    doReturn(connection).when(spyConnector).getConnection(ds);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    when(connection.connect(any(), any(), any(), anyInt(), anyInt(), anyInt(), any(), any(), any()))\n        .thenThrow(new GemFireSecurityException(\"Expected exception\"));\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector).destroyConnection(any());\n    }\n  }\n","date":"2019-06-19 22:21:22","endLine":73,"groupId":"5717","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"failedConnectionIsDestroyed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/bf/ea4265eb9f56a6b6a7a2485e05ceda94a2e855.src","preCode":"  public void failedConnectionIsDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, cancelCriterion, false,\n            null, socketCreator, handshake));\n    doReturn(connection).when(spyConnector).getConnection(ds, cancelCriterion);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    when(connection.connect(any(), any(), any(), anyInt(), anyInt(), anyInt(), any(), any(), any()))\n        .thenThrow(new GemFireSecurityException(\"Expected exception\"));\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector).destroyConnection(any());\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ConnectionConnectorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2019-06-12 11:35:32","commitOrder":2,"curCode":"  public void successfulConnectionIsNotDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, false,\n            null, socketCreator, handshake));\n    doReturn(connection).when(spyConnector).getConnection(ds);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector, times(0)).destroyConnection(any());\n    }\n  }\n","date":"2019-06-19 22:21:22","endLine":89,"groupId":"5718","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"successfulConnectionIsNotDestroyed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/bf/ea4265eb9f56a6b6a7a2485e05ceda94a2e855.src","preCode":"  public void successfulConnectionIsNotDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, cancelCriterion, false,\n            null, socketCreator, handshake));\n    doReturn(connection).when(spyConnector).getConnection(ds, cancelCriterion);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector, times(0)).destroyConnection(any());\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ConnectionConnectorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"f8026d52fa698b11917f8e209a22ae3725b86484","commitMessage":"@@@GEODE-6588: Cleanup generics and static analyzer warnings.\n","date":"2019-06-19 22:21:22","modifiedFileCount":"12","status":"M","submitter":"Jacob Barrett"},{"authorTime":"2020-03-21 04:40:24","codes":[{"authorDate":"2020-03-21 04:40:24","commitOrder":3,"curCode":"  public void failedConnectionIsDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, false,\n            null, socketCreator, handshake, null));\n    doReturn(connection).when(spyConnector).getConnection(ds);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    when(connection.connect(any(), any(), any(), anyInt(), anyInt(), anyInt(), any(), any(), any(),\n        any()))\n            .thenThrow(new GemFireSecurityException(\"Expected exception\"));\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector).destroyConnection(any());\n    }\n  }\n","date":"2020-03-21 04:40:24","endLine":74,"groupId":"102888","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"failedConnectionIsDestroyed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ed/1612f7176224500db8bb2123eb68c06eb99461.src","preCode":"  public void failedConnectionIsDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, false,\n            null, socketCreator, handshake));\n    doReturn(connection).when(spyConnector).getConnection(ds);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    when(connection.connect(any(), any(), any(), anyInt(), anyInt(), anyInt(), any(), any(), any()))\n        .thenThrow(new GemFireSecurityException(\"Expected exception\"));\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector).destroyConnection(any());\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ConnectionConnectorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2020-03-21 04:40:24","commitOrder":3,"curCode":"  public void successfulConnectionIsNotDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, false,\n            null, socketCreator, handshake, null));\n    doReturn(connection).when(spyConnector).getConnection(ds);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector, times(0)).destroyConnection(any());\n    }\n  }\n","date":"2020-03-21 04:40:24","endLine":90,"groupId":"102888","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"successfulConnectionIsNotDestroyed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ed/1612f7176224500db8bb2123eb68c06eb99461.src","preCode":"  public void successfulConnectionIsNotDestroyed() throws IOException {\n\n    ConnectionConnector spyConnector =\n        spy(new ConnectionConnector(endpointManager, ds, 0, 0, 0, false,\n            null, socketCreator, handshake));\n    doReturn(connection).when(spyConnector).getConnection(ds);\n    doReturn(handshake).when(spyConnector).getClientSideHandshake(handshake);\n\n    try {\n      spyConnector.connectClientToServer(mock(ServerLocation.class), false);\n    } finally {\n      verify(spyConnector, times(0)).destroyConnection(any());\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/client/internal/ConnectionConnectorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"53f1e1a81c3b58989a835d37f94466eb3dfc752f","commitMessage":"@@@GEODE-7852: Adding a SocketFactory configuration for client Pools (#4830)\n\nAdding the ability to provide a SocketFactory to a client pool for use in\ncreating sockets. Adding an implementation of this SocketFactory that\nconfigures the pool to use an SNI proxy.\n\nAdding an automated test of the SniSocketFactory that uses docker compose\nto use a real SNI proxy and geode servers that are not reachable without\ngoing through the proxy.\n\nCo-authored-by: Bill Burcham <bburcham@pivotal.io>","date":"2020-03-21 04:40:24","modifiedFileCount":"51","status":"M","submitter":"Dan Smith"}]
