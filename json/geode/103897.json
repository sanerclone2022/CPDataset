[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  void putBeforeFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void goingToFlush() {\n        if (!alreadyComeHere) {\n          \r\n          region.put(\"Key\", \"Value2\");\n        }\n        alreadyComeHere = true;\n      }\n    });\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    region.put(\"Key\", \"Value1\");\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      assertEquals(\"Value2\", region.get(\"Key\"));\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":66,"groupId":"39752","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"putBeforeFlush","params":"(finalRegionregion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f2/30f9f9b80e8470dfded92174e34410779a6c49.src","preCode":"  void putBeforeFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void goingToFlush() {\n        if (!alreadyComeHere) {\n          \r\n          region.put(\"Key\", \"Value2\");\n        }\n        alreadyComeHere = true;\n      }\n    });\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    region.put(\"Key\", \"Value1\");\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      assertEquals(\"Value2\", region.get(\"Key\"));\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ConcurrentFlushingAndRegionOperationsJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  void putAfterFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void afterWritingBytes() {\n        if (!alreadyComeHere) {\n          DiskEntry de = (DiskEntry) ((LocalRegion) region).basicGetEntry(\"Key\");\n          if (de == null)\n            return; \r\n          DiskId id = de.getDiskId();\n          long oldOplogId = id.getOplogId();\n          long oldOplogOffset = id.getOffsetInOplog();\n          ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n          \r\n          region.put(\"Key\", \"Value2\");\n          id = ((DiskEntry) (((LocalRegion) region).basicGetEntry(\"Key\"))).getDiskId();\n          long newOplogId = id.getOplogId();\n          long newOplogOffset = id.getOffsetInOplog();\n          id.setOplogId(oldOplogId);\n          id.setOffsetInOplog(oldOplogOffset);\n          assertEquals(\"Value1\", ((LocalRegion) region).getDiskRegion().getNoBuffer(id));\n          id.setOplogId(newOplogId);\n          id.setOffsetInOplog(newOplogOffset);\n        }\n        alreadyComeHere = true;\n      }\n    });\n    \r\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    \r\n    region.put(\"Key\", \"Value1\");\n    \r\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      \r\n      assertEquals(\"Value2\", region.get(\"Key\"));\n    } catch (Exception e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n\n    try {\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n  }\n","date":"2018-07-18 03:54:18","endLine":301,"groupId":"9506","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"putAfterFlush","params":"(finalRegionregion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f2/30f9f9b80e8470dfded92174e34410779a6c49.src","preCode":"  void putAfterFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void afterWritingBytes() {\n        if (!alreadyComeHere) {\n          DiskEntry de = (DiskEntry) ((LocalRegion) region).basicGetEntry(\"Key\");\n          if (de == null)\n            return; \r\n          DiskId id = de.getDiskId();\n          long oldOplogId = id.getOplogId();\n          long oldOplogOffset = id.getOffsetInOplog();\n          ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n          \r\n          region.put(\"Key\", \"Value2\");\n          id = ((DiskEntry) (((LocalRegion) region).basicGetEntry(\"Key\"))).getDiskId();\n          long newOplogId = id.getOplogId();\n          long newOplogOffset = id.getOffsetInOplog();\n          id.setOplogId(oldOplogId);\n          id.setOffsetInOplog(oldOplogOffset);\n          assertEquals(\"Value1\", ((LocalRegion) region).getDiskRegion().getNoBuffer(id));\n          id.setOplogId(newOplogId);\n          id.setOffsetInOplog(newOplogOffset);\n        }\n        alreadyComeHere = true;\n      }\n    });\n    \r\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    \r\n    region.put(\"Key\", \"Value1\");\n    \r\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      \r\n      assertEquals(\"Value2\", region.get(\"Key\"));\n    } catch (Exception e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n\n    try {\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ConcurrentFlushingAndRegionOperationsJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":251,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2019-01-12 07:53:54","codes":[{"authorDate":"2019-01-12 07:53:54","commitOrder":2,"curCode":"  void putBeforeFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      @Override\n      public void goingToFlush() {\n        if (!alreadyComeHere) {\n          \r\n          region.put(\"Key\", \"Value2\");\n        }\n        alreadyComeHere = true;\n      }\n    });\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    region.put(\"Key\", \"Value1\");\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      assertEquals(\"Value2\", region.get(\"Key\"));\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n  }\n","date":"2019-01-12 07:53:54","endLine":67,"groupId":"39752","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"putBeforeFlush","params":"(finalRegionregion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/31576575e4a71d325fbe370c7392c99f6455f1.src","preCode":"  void putBeforeFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void goingToFlush() {\n        if (!alreadyComeHere) {\n          \r\n          region.put(\"Key\", \"Value2\");\n        }\n        alreadyComeHere = true;\n      }\n    });\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    region.put(\"Key\", \"Value1\");\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      assertEquals(\"Value2\", region.get(\"Key\"));\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ConcurrentFlushingAndRegionOperationsJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2019-01-12 07:53:54","commitOrder":2,"curCode":"  void putAfterFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      @Override\n      public void afterWritingBytes() {\n        if (!alreadyComeHere) {\n          DiskEntry de = (DiskEntry) ((LocalRegion) region).basicGetEntry(\"Key\");\n          if (de == null)\n            return; \r\n          DiskId id = de.getDiskId();\n          long oldOplogId = id.getOplogId();\n          long oldOplogOffset = id.getOffsetInOplog();\n          ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n          \r\n          region.put(\"Key\", \"Value2\");\n          id = ((DiskEntry) (((LocalRegion) region).basicGetEntry(\"Key\"))).getDiskId();\n          long newOplogId = id.getOplogId();\n          long newOplogOffset = id.getOffsetInOplog();\n          id.setOplogId(oldOplogId);\n          id.setOffsetInOplog(oldOplogOffset);\n          assertEquals(\"Value1\", ((LocalRegion) region).getDiskRegion().getNoBuffer(id));\n          id.setOplogId(newOplogId);\n          id.setOffsetInOplog(newOplogOffset);\n        }\n        alreadyComeHere = true;\n      }\n    });\n    \r\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    \r\n    region.put(\"Key\", \"Value1\");\n    \r\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      \r\n      assertEquals(\"Value2\", region.get(\"Key\"));\n    } catch (Exception e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n\n    try {\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n  }\n","date":"2019-01-12 07:53:54","endLine":307,"groupId":"9506","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"putAfterFlush","params":"(finalRegionregion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/31576575e4a71d325fbe370c7392c99f6455f1.src","preCode":"  void putAfterFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void afterWritingBytes() {\n        if (!alreadyComeHere) {\n          DiskEntry de = (DiskEntry) ((LocalRegion) region).basicGetEntry(\"Key\");\n          if (de == null)\n            return; \r\n          DiskId id = de.getDiskId();\n          long oldOplogId = id.getOplogId();\n          long oldOplogOffset = id.getOffsetInOplog();\n          ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n          \r\n          region.put(\"Key\", \"Value2\");\n          id = ((DiskEntry) (((LocalRegion) region).basicGetEntry(\"Key\"))).getDiskId();\n          long newOplogId = id.getOplogId();\n          long newOplogOffset = id.getOffsetInOplog();\n          id.setOplogId(oldOplogId);\n          id.setOffsetInOplog(oldOplogOffset);\n          assertEquals(\"Value1\", ((LocalRegion) region).getDiskRegion().getNoBuffer(id));\n          id.setOplogId(newOplogId);\n          id.setOffsetInOplog(newOplogOffset);\n        }\n        alreadyComeHere = true;\n      }\n    });\n    \r\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    \r\n    region.put(\"Key\", \"Value1\");\n    \r\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      \r\n      assertEquals(\"Value2\", region.get(\"Key\"));\n    } catch (Exception e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n\n    try {\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ConcurrentFlushingAndRegionOperationsJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"9d737c9e95a77cb4db05a258f318908e7899bd6c","commitMessage":"@@@GEODE-4391: Add `@Override` where missing. (#3069)\n\n* GEODE-4391: Add `@Override` where missing.\n\n* Restart Concourse.  I think that was flaky.\n","date":"2019-01-12 07:53:54","modifiedFileCount":"1582","status":"M","submitter":"Galen O'Sullivan"},{"authorTime":"2021-06-04 00:32:09","codes":[{"authorDate":"2019-01-12 07:53:54","commitOrder":3,"curCode":"  void putBeforeFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      @Override\n      public void goingToFlush() {\n        if (!alreadyComeHere) {\n          \r\n          region.put(\"Key\", \"Value2\");\n        }\n        alreadyComeHere = true;\n      }\n    });\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    region.put(\"Key\", \"Value1\");\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      assertEquals(\"Value2\", region.get(\"Key\"));\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n  }\n","date":"2019-01-12 07:53:54","endLine":67,"groupId":"103897","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"putBeforeFlush","params":"(finalRegionregion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/31576575e4a71d325fbe370c7392c99f6455f1.src","preCode":"  void putBeforeFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      @Override\n      public void goingToFlush() {\n        if (!alreadyComeHere) {\n          \r\n          region.put(\"Key\", \"Value2\");\n        }\n        alreadyComeHere = true;\n      }\n    });\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    region.put(\"Key\", \"Value1\");\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      assertEquals(\"Value2\", region.get(\"Key\"));\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ConcurrentFlushingAndRegionOperationsJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2021-06-04 00:32:09","commitOrder":3,"curCode":"  void putAfterFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      @Override\n      public void afterWritingBytes() {\n        if (!alreadyComeHere) {\n          DiskEntry de = (DiskEntry) ((LocalRegion) region).basicGetEntry(\"Key\");\n          if (de == null) {\n            return; \r\n          }\n          DiskId id = de.getDiskId();\n          long oldOplogId = id.getOplogId();\n          long oldOplogOffset = id.getOffsetInOplog();\n          ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n          \r\n          region.put(\"Key\", \"Value2\");\n          id = ((DiskEntry) (((LocalRegion) region).basicGetEntry(\"Key\"))).getDiskId();\n          long newOplogId = id.getOplogId();\n          long newOplogOffset = id.getOffsetInOplog();\n          id.setOplogId(oldOplogId);\n          id.setOffsetInOplog(oldOplogOffset);\n          assertEquals(\"Value1\", ((LocalRegion) region).getDiskRegion().getNoBuffer(id));\n          id.setOplogId(newOplogId);\n          id.setOffsetInOplog(newOplogOffset);\n        }\n        alreadyComeHere = true;\n      }\n    });\n    \r\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    \r\n    region.put(\"Key\", \"Value1\");\n    \r\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      \r\n      assertEquals(\"Value2\", region.get(\"Key\"));\n    } catch (Exception e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n\n    try {\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n  }\n","date":"2021-06-04 00:32:09","endLine":308,"groupId":"103897","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"putAfterFlush","params":"(finalRegionregion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a0/e3279ea096319fd18ffc800fa51d11762cf852.src","preCode":"  void putAfterFlush(final Region region) {\n    alreadyComeHere = false;\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      @Override\n      public void afterWritingBytes() {\n        if (!alreadyComeHere) {\n          DiskEntry de = (DiskEntry) ((LocalRegion) region).basicGetEntry(\"Key\");\n          if (de == null)\n            return; \r\n          DiskId id = de.getDiskId();\n          long oldOplogId = id.getOplogId();\n          long oldOplogOffset = id.getOffsetInOplog();\n          ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n          \r\n          region.put(\"Key\", \"Value2\");\n          id = ((DiskEntry) (((LocalRegion) region).basicGetEntry(\"Key\"))).getDiskId();\n          long newOplogId = id.getOplogId();\n          long newOplogOffset = id.getOffsetInOplog();\n          id.setOplogId(oldOplogId);\n          id.setOffsetInOplog(oldOplogOffset);\n          assertEquals(\"Value1\", ((LocalRegion) region).getDiskRegion().getNoBuffer(id));\n          id.setOplogId(newOplogId);\n          id.setOffsetInOplog(newOplogOffset);\n        }\n        alreadyComeHere = true;\n      }\n    });\n    \r\n    ((LocalRegion) region).getDiskRegion().pauseFlusherForTesting();\n    \r\n    region.put(\"Key\", \"Value1\");\n    \r\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n    try {\n      \r\n      assertEquals(\"Value2\", region.get(\"Key\"));\n    } catch (Exception e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n    ((LocalRegion) region).getDiskRegion().flushForTesting();\n\n    try {\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      fail(\"Entry not found although was supposed to be there\");\n    }\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ConcurrentFlushingAndRegionOperationsJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"2879573ffb04e9e029e14ca37d8a064268cc8f44","commitMessage":"@@@GEODE-7864: Always use curly braces for control flow statements (#6523)\n\nAuthored-by: Donal Evans <doevans@vmware.com>","date":"2021-06-04 00:32:09","modifiedFileCount":"640","status":"M","submitter":"Donal Evans"}]
