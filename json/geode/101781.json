[{"authorTime":"2018-11-13 08:50:47","codes":[{"authorDate":"2018-11-13 08:50:47","commitOrder":1,"curCode":"  public void isRvvGcDominatedByRequesterRvvReturnsFalseIfRequesterRvvDominatesProvider()\n      throws Exception {\n    final String local = getIPLiteral();\n    InternalDistributedMember provider = new InternalDistributedMember(local, 101);\n    InternalDistributedMember requester = new InternalDistributedMember(local, 102);\n\n    RegionVersionVector providerRvv = new VMRegionVersionVector(provider, null,\n        1, null, 1, false, null);\n\n    ConcurrentHashMap<InternalDistributedMember, RegionVersionHolder<InternalDistributedMember>> memberToRegionVersionHolder =\n        new ConcurrentHashMap<>();\n    RegionVersionHolder regionVersionHolder = new RegionVersionHolder(provider);\n    regionVersionHolder.setVersion(0);\n    memberToRegionVersionHolder.put(provider, regionVersionHolder);\n    RegionVersionVector requesterRvv =\n        new VMRegionVersionVector(requester, memberToRegionVersionHolder,\n            0, null, 0, false, null);\n\n    assertThat(providerRvv.isRVVGCDominatedBy(requesterRvv)).isFalse();\n  }\n","date":"2018-11-13 08:50:47","endLine":728,"groupId":"28292","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isRvvGcDominatedByRequesterRvvReturnsFalseIfRequesterRvvDominatesProvider","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a0/18aaff6fa9928c8bd1617772bbb014ed367900.src","preCode":"  public void isRvvGcDominatedByRequesterRvvReturnsFalseIfRequesterRvvDominatesProvider()\n      throws Exception {\n    final String local = getIPLiteral();\n    InternalDistributedMember provider = new InternalDistributedMember(local, 101);\n    InternalDistributedMember requester = new InternalDistributedMember(local, 102);\n\n    RegionVersionVector providerRvv = new VMRegionVersionVector(provider, null,\n        1, null, 1, false, null);\n\n    ConcurrentHashMap<InternalDistributedMember, RegionVersionHolder<InternalDistributedMember>> memberToRegionVersionHolder =\n        new ConcurrentHashMap<>();\n    RegionVersionHolder regionVersionHolder = new RegionVersionHolder(provider);\n    regionVersionHolder.setVersion(0);\n    memberToRegionVersionHolder.put(provider, regionVersionHolder);\n    RegionVersionVector requesterRvv =\n        new VMRegionVersionVector(requester, memberToRegionVersionHolder,\n            0, null, 0, false, null);\n\n    assertThat(providerRvv.isRVVGCDominatedBy(requesterRvv)).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/versions/RegionVersionVectorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":709,"status":"B"},{"authorDate":"2018-11-13 08:50:47","commitOrder":1,"curCode":"  public void isRvvGcDominatedByRequesterRvvReturnsTrueIfRequesterRvvDominates() throws Exception {\n    final String local = getIPLiteral();\n    InternalDistributedMember provider = new InternalDistributedMember(local, 101);\n    InternalDistributedMember requester = new InternalDistributedMember(local, 102);\n    ConcurrentHashMap<InternalDistributedMember, Long> memberToGcVersion =\n        new ConcurrentHashMap<>();\n    memberToGcVersion.put(requester, new Long(1));\n    RegionVersionVector providerRvv = new VMRegionVersionVector(provider, null,\n        1, memberToGcVersion, 1, false, null);\n\n    ConcurrentHashMap<InternalDistributedMember, RegionVersionHolder<InternalDistributedMember>> memberToRegionVersionHolder =\n        new ConcurrentHashMap<>();\n    RegionVersionHolder regionVersionHolder = new RegionVersionHolder(provider);\n    regionVersionHolder.setVersion(2);\n    memberToRegionVersionHolder.put(provider, regionVersionHolder);\n    RegionVersionVector requesterRvv =\n        new VMRegionVersionVector(requester, memberToRegionVersionHolder,\n            2, null, 0, false, regionVersionHolder);\n\n    assertThat(providerRvv.isRVVGCDominatedBy(requesterRvv)).isTrue();\n  }\n","date":"2018-11-13 08:50:47","endLine":775,"groupId":"9142","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isRvvGcDominatedByRequesterRvvReturnsTrueIfRequesterRvvDominates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a0/18aaff6fa9928c8bd1617772bbb014ed367900.src","preCode":"  public void isRvvGcDominatedByRequesterRvvReturnsTrueIfRequesterRvvDominates() throws Exception {\n    final String local = getIPLiteral();\n    InternalDistributedMember provider = new InternalDistributedMember(local, 101);\n    InternalDistributedMember requester = new InternalDistributedMember(local, 102);\n    ConcurrentHashMap<InternalDistributedMember, Long> memberToGcVersion =\n        new ConcurrentHashMap<>();\n    memberToGcVersion.put(requester, new Long(1));\n    RegionVersionVector providerRvv = new VMRegionVersionVector(provider, null,\n        1, memberToGcVersion, 1, false, null);\n\n    ConcurrentHashMap<InternalDistributedMember, RegionVersionHolder<InternalDistributedMember>> memberToRegionVersionHolder =\n        new ConcurrentHashMap<>();\n    RegionVersionHolder regionVersionHolder = new RegionVersionHolder(provider);\n    regionVersionHolder.setVersion(2);\n    memberToRegionVersionHolder.put(provider, regionVersionHolder);\n    RegionVersionVector requesterRvv =\n        new VMRegionVersionVector(requester, memberToRegionVersionHolder,\n            2, null, 0, false, regionVersionHolder);\n\n    assertThat(providerRvv.isRVVGCDominatedBy(requesterRvv)).isTrue();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/versions/RegionVersionVectorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":755,"status":"B"}],"commitId":"b4befb99626e85045379e5b6fb8804b9db2a3eb9","commitMessage":"@@@GEODE-6013: Made changes to use the expected initial image requester's rvv information (#2819)\n\n* GEODE-6013: Made changes to use the expected initial image requester's rvv information instead of the image provider's local rvv while determining full or delta GII.\n\nThere was logical error where it was using provider's local exception(rvv) instead of using requester's local exception(rvv). This could result in performing Delta GII instead of Full GII.\n\n","date":"2018-11-13 08:50:47","modifiedFileCount":"4","status":"B","submitter":"agingade"},{"authorTime":"2019-08-16 01:05:29","codes":[{"authorDate":"2019-08-16 01:05:29","commitOrder":2,"curCode":"  public void isRvvGcDominatedByRequesterRvvReturnsFalseIfRequesterRvvDominatesProvider()\n      throws Exception {\n    final String local = getIPLiteral();\n    InternalDistributedMember provider = new InternalDistributedMember(local, 101);\n    InternalDistributedMember requester = new InternalDistributedMember(local, 102);\n\n    RegionVersionVector providerRvv = new VMRegionVersionVector(provider, null,\n        1, null, 1, false, null);\n\n    ConcurrentHashMap<InternalDistributedMember, RegionVersionHolder<InternalDistributedMember>> memberToRegionVersionHolder =\n        new ConcurrentHashMap<>();\n    RegionVersionHolder regionVersionHolder = new RegionVersionHolder(provider);\n    memberToRegionVersionHolder.put(provider, regionVersionHolder);\n    RegionVersionVector requesterRvv =\n        new VMRegionVersionVector(requester, memberToRegionVersionHolder,\n            0, null, 0, false, null);\n\n    assertThat(providerRvv.isRVVGCDominatedBy(requesterRvv)).isFalse();\n  }\n","date":"2019-08-16 01:05:29","endLine":934,"groupId":"101781","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"isRvvGcDominatedByRequesterRvvReturnsFalseIfRequesterRvvDominatesProvider","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/51/411226fa6ae79fcba544195419168e1f6211a2.src","preCode":"  public void isRvvGcDominatedByRequesterRvvReturnsFalseIfRequesterRvvDominatesProvider()\n      throws Exception {\n    final String local = getIPLiteral();\n    InternalDistributedMember provider = new InternalDistributedMember(local, 101);\n    InternalDistributedMember requester = new InternalDistributedMember(local, 102);\n\n    RegionVersionVector providerRvv = new VMRegionVersionVector(provider, null,\n        1, null, 1, false, null);\n\n    ConcurrentHashMap<InternalDistributedMember, RegionVersionHolder<InternalDistributedMember>> memberToRegionVersionHolder =\n        new ConcurrentHashMap<>();\n    RegionVersionHolder regionVersionHolder = new RegionVersionHolder(provider);\n    regionVersionHolder.setVersion(0);\n    memberToRegionVersionHolder.put(provider, regionVersionHolder);\n    RegionVersionVector requesterRvv =\n        new VMRegionVersionVector(requester, memberToRegionVersionHolder,\n            0, null, 0, false, null);\n\n    assertThat(providerRvv.isRVVGCDominatedBy(requesterRvv)).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/versions/RegionVersionVectorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":916,"status":"M"},{"authorDate":"2019-08-16 01:05:29","commitOrder":2,"curCode":"  public void isRvvGcDominatedByRequesterRvvReturnsTrueIfRequesterRvvDominates() throws Exception {\n    final String local = getIPLiteral();\n    InternalDistributedMember provider = new InternalDistributedMember(local, 101);\n    InternalDistributedMember requester = new InternalDistributedMember(local, 102);\n    ConcurrentHashMap<InternalDistributedMember, Long> memberToGcVersion =\n        new ConcurrentHashMap<>();\n    memberToGcVersion.put(requester, new Long(1));\n    RegionVersionVector providerRvv = new VMRegionVersionVector(provider, null,\n        1, memberToGcVersion, 1, false, null);\n\n    ConcurrentHashMap<InternalDistributedMember, RegionVersionHolder<InternalDistributedMember>> memberToRegionVersionHolder =\n        new ConcurrentHashMap<>();\n    RegionVersionHolder regionVersionHolder = new RegionVersionHolder(provider);\n    regionVersionHolder.recordVersion(1);\n    regionVersionHolder.recordVersion(2);\n    memberToRegionVersionHolder.put(provider, regionVersionHolder);\n    RegionVersionVector requesterRvv =\n        new VMRegionVersionVector(requester, memberToRegionVersionHolder,\n            2, null, 0, false, regionVersionHolder);\n\n    assertThat(providerRvv.isRVVGCDominatedBy(requesterRvv)).isTrue();\n  }\n","date":"2019-08-16 01:05:29","endLine":983,"groupId":"101781","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"isRvvGcDominatedByRequesterRvvReturnsTrueIfRequesterRvvDominates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/51/411226fa6ae79fcba544195419168e1f6211a2.src","preCode":"  public void isRvvGcDominatedByRequesterRvvReturnsTrueIfRequesterRvvDominates() throws Exception {\n    final String local = getIPLiteral();\n    InternalDistributedMember provider = new InternalDistributedMember(local, 101);\n    InternalDistributedMember requester = new InternalDistributedMember(local, 102);\n    ConcurrentHashMap<InternalDistributedMember, Long> memberToGcVersion =\n        new ConcurrentHashMap<>();\n    memberToGcVersion.put(requester, new Long(1));\n    RegionVersionVector providerRvv = new VMRegionVersionVector(provider, null,\n        1, memberToGcVersion, 1, false, null);\n\n    ConcurrentHashMap<InternalDistributedMember, RegionVersionHolder<InternalDistributedMember>> memberToRegionVersionHolder =\n        new ConcurrentHashMap<>();\n    RegionVersionHolder regionVersionHolder = new RegionVersionHolder(provider);\n    regionVersionHolder.setVersion(2);\n    memberToRegionVersionHolder.put(provider, regionVersionHolder);\n    RegionVersionVector requesterRvv =\n        new VMRegionVersionVector(requester, memberToRegionVersionHolder,\n            2, null, 0, false, regionVersionHolder);\n\n    assertThat(providerRvv.isRVVGCDominatedBy(requesterRvv)).isTrue();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/versions/RegionVersionVectorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":962,"status":"M"}],"commitId":"f58710116db1cd8c509b59a43ffa050a073234d7","commitMessage":"@@@ GEODE-7085: Ensuring the bitset stays within BIT_SET_WIDTH (#3922)\n\nEnsuring that when we call recordVersion on a RegionVersionHolder. \nwe appropriately move the bitSet to match the new version we are\nrecording.  rather than trying to expand it. In particular.  if new\nversion is greater than Integer.MAX_VALUE.  we can't record than in out\ninteger indexed bit set.\n\nThis change rewrites addBitSetExceptions. The logic is now broken into a\nBitSetExceptionIterator.  which converts some or all of the bit set into\nRVVException objects.  and the logic to slide the bit set forward to a\nnew bitSetVersion.\n\nAdding unit tests that show that large versions cause an\nIndexOutOfBounds exception from recordGCVersion. Adding more unit tests\nfor the internal state of the bitset.","date":"2019-08-16 01:05:29","modifiedFileCount":"4","status":"M","submitter":"Dan Smith"}]
