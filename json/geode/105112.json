[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testIS_DEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\"SELECT DISTINCT * FROM /Portfolios where IS_DEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() == null)\n          fail(query.getQueryString());\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.TRUE}, {new Integer(0), Boolean.TRUE},\n        {QueryService.UNDEFINED, Boolean.FALSE}, {null, Boolean.TRUE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_DEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1]))\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":121,"groupId":"6936","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIS_DEFINED","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/36/e35b30bc06703ef51f7736dd4d9dee6ade15ec.src","preCode":"  public void testIS_DEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\"SELECT DISTINCT * FROM /Portfolios where IS_DEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() == null)\n          fail(query.getQueryString());\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.TRUE}, {new Integer(0), Boolean.TRUE},\n        {QueryService.UNDEFINED, Boolean.FALSE}, {null, Boolean.TRUE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_DEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1]))\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/FunctionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testIS_UNDEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\"SELECT DISTINCT * FROM /Portfolios where IS_UNDEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() != null)\n          fail(query.getQueryString());\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.FALSE}, {new Integer(0), Boolean.FALSE},\n        {QueryService.UNDEFINED, Boolean.TRUE}, {null, Boolean.FALSE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_UNDEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1]))\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":145,"groupId":"6936","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIS_UNDEFINED","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/36/e35b30bc06703ef51f7736dd4d9dee6ade15ec.src","preCode":"  public void testIS_UNDEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\"SELECT DISTINCT * FROM /Portfolios where IS_UNDEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() != null)\n          fail(query.getQueryString());\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.FALSE}, {new Integer(0), Boolean.FALSE},\n        {QueryService.UNDEFINED, Boolean.TRUE}, {null, Boolean.FALSE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_UNDEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1]))\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/FunctionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2020-05-29 00:37:39","commitOrder":2,"curCode":"  public void testIS_DEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\"SELECT DISTINCT * FROM \" + SEPARATOR + \"Portfolios where IS_DEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() == null)\n          fail(query.getQueryString());\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.TRUE}, {new Integer(0), Boolean.TRUE},\n        {QueryService.UNDEFINED, Boolean.FALSE}, {null, Boolean.TRUE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_DEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1]))\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n    }\n  }\n","date":"2020-05-29 00:37:39","endLine":122,"groupId":"6936","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIS_DEFINED","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9d/0a462614ec4d4cab621e30dc14e6273927a371.src","preCode":"  public void testIS_DEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\"SELECT DISTINCT * FROM /Portfolios where IS_DEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() == null)\n          fail(query.getQueryString());\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.TRUE}, {new Integer(0), Boolean.TRUE},\n        {QueryService.UNDEFINED, Boolean.FALSE}, {null, Boolean.TRUE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_DEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1]))\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/FunctionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2020-05-29 00:37:39","commitOrder":2,"curCode":"  public void testIS_UNDEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\n            \"SELECT DISTINCT * FROM \" + SEPARATOR + \"Portfolios where IS_UNDEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() != null)\n          fail(query.getQueryString());\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.FALSE}, {new Integer(0), Boolean.FALSE},\n        {QueryService.UNDEFINED, Boolean.TRUE}, {null, Boolean.FALSE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_UNDEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1]))\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n    }\n  }\n","date":"2020-05-29 00:37:39","endLine":147,"groupId":"6936","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIS_UNDEFINED","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9d/0a462614ec4d4cab621e30dc14e6273927a371.src","preCode":"  public void testIS_UNDEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\"SELECT DISTINCT * FROM /Portfolios where IS_UNDEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() != null)\n          fail(query.getQueryString());\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.FALSE}, {new Integer(0), Boolean.FALSE},\n        {QueryService.UNDEFINED, Boolean.TRUE}, {null, Boolean.FALSE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_UNDEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1]))\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/FunctionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"},{"authorTime":"2021-06-04 00:32:09","codes":[{"authorDate":"2021-06-04 00:32:09","commitOrder":3,"curCode":"  public void testIS_DEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\"SELECT DISTINCT * FROM \" + SEPARATOR + \"Portfolios where IS_DEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() == null) {\n          fail(query.getQueryString());\n        }\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.TRUE}, {new Integer(0), Boolean.TRUE},\n        {QueryService.UNDEFINED, Boolean.FALSE}, {null, Boolean.TRUE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_DEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1])) {\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n      }\n    }\n  }\n","date":"2021-06-04 00:32:09","endLine":124,"groupId":"105112","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testIS_DEFINED","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/77/7ff39e288b53c741e281bc79a29f93e644537c.src","preCode":"  public void testIS_DEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\"SELECT DISTINCT * FROM \" + SEPARATOR + \"Portfolios where IS_DEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() == null)\n          fail(query.getQueryString());\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.TRUE}, {new Integer(0), Boolean.TRUE},\n        {QueryService.UNDEFINED, Boolean.FALSE}, {null, Boolean.TRUE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_DEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1]))\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/FunctionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2021-06-04 00:32:09","commitOrder":3,"curCode":"  public void testIS_UNDEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\n            \"SELECT DISTINCT * FROM \" + SEPARATOR + \"Portfolios where IS_UNDEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() != null) {\n          fail(query.getQueryString());\n        }\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.FALSE}, {new Integer(0), Boolean.FALSE},\n        {QueryService.UNDEFINED, Boolean.TRUE}, {null, Boolean.FALSE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_UNDEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1])) {\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n      }\n    }\n  }\n","date":"2021-06-04 00:32:09","endLine":151,"groupId":"105112","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testIS_UNDEFINED","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/77/7ff39e288b53c741e281bc79a29f93e644537c.src","preCode":"  public void testIS_UNDEFINED() throws Exception {\n    Query query = CacheUtils.getQueryService()\n        .newQuery(\n            \"SELECT DISTINCT * FROM \" + SEPARATOR + \"Portfolios where IS_UNDEFINED(P2.secId)\");\n    Object result = query.execute();\n    if (result instanceof Collection) {\n      Iterator iter = ((Collection) result).iterator();\n      while (iter.hasNext()) {\n        Portfolio p = (Portfolio) iter.next();\n        if (p.getP2() != null)\n          fail(query.getQueryString());\n      }\n    }\n    Object testData[][] = {{\"string\", Boolean.FALSE}, {new Integer(0), Boolean.FALSE},\n        {QueryService.UNDEFINED, Boolean.TRUE}, {null, Boolean.FALSE}};\n\n    for (int i = 0; i < testData.length; i++) {\n      query = CacheUtils.getQueryService().newQuery(\"IS_UNDEFINED($1)\");\n      result = query.execute(testData[i]);\n      if (!result.equals(testData[i][1]))\n        fail(query.getQueryString() + \" for \" + testData[i][0]);\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/FunctionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"2879573ffb04e9e029e14ca37d8a064268cc8f44","commitMessage":"@@@GEODE-7864: Always use curly braces for control flow statements (#6523)\n\nAuthored-by: Donal Evans <doevans@vmware.com>","date":"2021-06-04 00:32:09","modifiedFileCount":"640","status":"M","submitter":"Donal Evans"}]
