[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testRegionEvents() throws Exception {\n\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    cqDUnitTest.createClient(client, port, host0);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n\n  }\n","date":"2018-07-18 03:54:18","endLine":819,"groupId":"4084","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRegionEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f4/3276ee163242416cc04af89b2ca00088c4b47a.src","preCode":"  public void testRegionEvents() throws Exception {\n\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    cqDUnitTest.createClient(client, port, host0);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqDataDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":749,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testRegionEvents() throws Exception {\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryUsingPoolDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    String poolName = \"testRegionEvents\";\n    cqDUnitTest.createPool(client, poolName, host0, port);\n\n    \r\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n  }\n","date":"2018-07-18 03:54:18","endLine":692,"groupId":"18274","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRegionEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/44/e63605008e737dd7ba7324cb2c06266dd9d013.src","preCode":"  public void testRegionEvents() throws Exception {\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryUsingPoolDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    String poolName = \"testRegionEvents\";\n    cqDUnitTest.createPool(client, poolName, host0, port);\n\n    \r\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqDataUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":619,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-08-31 08:10:50","commitOrder":2,"curCode":"  public void testRegionEvents() throws Exception {\n\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    cqDUnitTest.createClient(client, port, host0);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        logger.info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        logger.info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        logger.info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n\n  }\n","date":"2018-08-31 08:10:50","endLine":820,"groupId":"44176","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRegionEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0a/ac70bcd8e7d80c9e99e2e37205bab44741c234.src","preCode":"  public void testRegionEvents() throws Exception {\n\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    cqDUnitTest.createClient(client, port, host0);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqDataDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":750,"status":"M"},{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  public void testRegionEvents() throws Exception {\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryUsingPoolDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    String poolName = \"testRegionEvents\";\n    cqDUnitTest.createPool(client, poolName, host0, port);\n\n    \r\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n  }\n","date":"2018-07-18 03:54:18","endLine":692,"groupId":"18274","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRegionEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/44/e63605008e737dd7ba7324cb2c06266dd9d013.src","preCode":"  public void testRegionEvents() throws Exception {\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryUsingPoolDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    String poolName = \"testRegionEvents\";\n    cqDUnitTest.createPool(client, poolName, host0, port);\n\n    \r\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqDataUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":619,"status":"N"}],"commitId":"46b78978d894e8851daf86d929ae5efbd9093097","commitMessage":"@@@GEODE-5411: Adding awaitility fixing timing issue in CqPerfDUnitTest\n\n- Fixing timing issue by waiting for cq set to reach the right size\n- Code modernization and cleanup","date":"2018-08-31 08:10:50","modifiedFileCount":"3","status":"M","submitter":"mhansonp"},{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2019-01-12 07:53:54","commitOrder":3,"curCode":"  public void testRegionEvents() throws Exception {\n\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    cqDUnitTest.createClient(client, port, host0);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        logger.info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        logger.info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        logger.info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n\n  }\n","date":"2019-01-12 07:53:54","endLine":834,"groupId":"15837","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRegionEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f5/b9f0166626aa1d97623ee84b1431b9cbc5068b.src","preCode":"  public void testRegionEvents() throws Exception {\n\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    cqDUnitTest.createClient(client, port, host0);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        logger.info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        logger.info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      public void run2() throws CacheException {\n        logger.info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqDataDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":761,"status":"M"},{"authorDate":"2018-07-18 03:54:18","commitOrder":3,"curCode":"  public void testRegionEvents() throws Exception {\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryUsingPoolDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    String poolName = \"testRegionEvents\";\n    cqDUnitTest.createPool(client, poolName, host0, port);\n\n    \r\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n  }\n","date":"2018-07-18 03:54:18","endLine":692,"groupId":"18274","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRegionEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/44/e63605008e737dd7ba7324cb2c06266dd9d013.src","preCode":"  public void testRegionEvents() throws Exception {\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryUsingPoolDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    String poolName = \"testRegionEvents\";\n    cqDUnitTest.createPool(client, poolName, host0, port);\n\n    \r\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqDataUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":619,"status":"N"}],"commitId":"9d737c9e95a77cb4db05a258f318908e7899bd6c","commitMessage":"@@@GEODE-4391: Add `@Override` where missing. (#3069)\n\n* GEODE-4391: Add `@Override` where missing.\n\n* Restart Concourse.  I think that was flaky.\n","date":"2019-01-12 07:53:54","modifiedFileCount":"1582","status":"M","submitter":"Galen O'Sullivan"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2020-05-29 00:37:39","commitOrder":4,"curCode":"  public void testRegionEvents() throws Exception {\n\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    cqDUnitTest.createClient(client, port, host0);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        logger.info(\"### Clearing the region on the server ###\");\n        Region region =\n            getCache().getRegion(SEPARATOR + \"root\" + SEPARATOR + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        logger.info(\"### Invalidate the region on the server ###\");\n        Region region =\n            getCache().getRegion(SEPARATOR + \"root\" + SEPARATOR + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        logger.info(\"### Destroying the region on the server ###\");\n        Region region =\n            getCache().getRegion(SEPARATOR + \"root\" + SEPARATOR + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n\n  }\n","date":"2020-05-29 00:37:39","endLine":839,"groupId":"10646","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testRegionEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/02/3ed283244cf7e81ebaa53df877b684b01bc642.src","preCode":"  public void testRegionEvents() throws Exception {\n\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    cqDUnitTest.createClient(client, port, host0);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        logger.info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        logger.info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        logger.info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqDataDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":763,"status":"M"},{"authorDate":"2020-05-29 00:37:39","commitOrder":4,"curCode":"  public void testRegionEvents() throws Exception {\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryUsingPoolDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    String poolName = \"testRegionEvents\";\n    cqDUnitTest.createPool(client, poolName, host0, port);\n\n    \r\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region =\n            getCache().getRegion(SEPARATOR + \"root\" + SEPARATOR + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region =\n            getCache().getRegion(SEPARATOR + \"root\" + SEPARATOR + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region =\n            getCache().getRegion(SEPARATOR + \"root\" + SEPARATOR + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n  }\n","date":"2020-05-29 00:37:39","endLine":699,"groupId":"10646","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testRegionEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f2/1e4714029bec9005d8d0ed6db3eff2055d5ae3.src","preCode":"  public void testRegionEvents() throws Exception {\n    final Host host = Host.getHost(0);\n    VM server = host.getVM(0);\n    VM client = host.getVM(1);\n\n    cqDUnitTest.createServer(server);\n    final int port = server.invoke(() -> CqQueryUsingPoolDUnitTest.getCacheServerPort());\n    final String host0 = NetworkUtils.getServerHostName(server.getHost());\n\n    String poolName = \"testRegionEvents\";\n    cqDUnitTest.createPool(client, poolName, host0, port);\n\n    \r\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_0\", cqDUnitTest.cqs[0]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_0\", false, null);\n\n    \r\n    cqDUnitTest.createCQ(client, poolName, \"testRegionEvents_1\", cqDUnitTest.cqs[2]);\n    cqDUnitTest.executeCQ(client, \"testRegionEvents_1\", false, null);\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.clear();\n      }\n    });\n\n    cqDUnitTest.waitForRegionClear(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[0]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        region.invalidateRegion();\n      }\n    });\n\n    cqDUnitTest.waitForRegionInvalidate(client, \"testRegionEvents_0\");\n\n    \r\n    server.invoke(new CacheSerializableRunnable(\"testRegionEvents\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\");\n        Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions[1]);\n        for (int i = 1; i <= 5; i++) {\n          region.put(CqQueryUsingPoolDUnitTest.KEY + i, new Portfolio(i));\n        }\n        \r\n        region.destroyRegion();\n      }\n    });\n\n    Wait.pause(1000); \r\n    \r\n    cqDUnitTest.validateCQCount(client, 1);\n\n    \r\n    cqDUnitTest.closeClient(client);\n    cqDUnitTest.closeServer(server);\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqDataUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":623,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"}]
