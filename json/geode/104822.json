[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void setUp() throws java.lang.Exception {\n    CacheUtils.startCache();\n    Set add1 = new HashSet();\n    Set add2 = new HashSet();\n    add1.add(new Address(\"Hp3 9yf\", \"Apsley\"));\n    add1.add(new Address(\"Hp4 9yf\", \"Apsleyss\"));\n    add2.add(new Address(\"Hp3 8DZ\", \"Hemel\"));\n    add2.add(new Address(\"Hp4 8DZ\", \"Hemel\"));\n    Region region = CacheUtils.createRegion(\"employees\", Employee.class);\n    region.put(\"1\", new Manager(\"aaa\", 27, 270, \"QA\", 1800, add1, 2701));\n    region.put(\"2\", new Manager(\"bbb\", 28, 280, \"QA\", 1900, add2, 2801));\n  }\n","date":"2018-07-18 03:54:18","endLine":55,"groupId":"2788","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/62/65f2409b5db03acfb437d91310e4ba74c93688.src","preCode":"  public void setUp() throws java.lang.Exception {\n    CacheUtils.startCache();\n    Set add1 = new HashSet();\n    Set add2 = new HashSet();\n    add1.add(new Address(\"Hp3 9yf\", \"Apsley\"));\n    add1.add(new Address(\"Hp4 9yf\", \"Apsleyss\"));\n    add2.add(new Address(\"Hp3 8DZ\", \"Hemel\"));\n    add2.add(new Address(\"Hp4 8DZ\", \"Hemel\"));\n    Region region = CacheUtils.createRegion(\"employees\", Employee.class);\n    region.put(\"1\", new Manager(\"aaa\", 27, 270, \"QA\", 1800, add1, 2701));\n    region.put(\"2\", new Manager(\"bbb\", 28, 280, \"QA\", 1900, add2, 2801));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/IteratorTypeDefEmpJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void _BUGtestSubClassQuery() throws Exception {\n    Set add1 = new HashSet();\n    Set add2 = new HashSet();\n    add1.add(new Address(\"Hp3 9yf\", \"Apsley\"));\n    add1.add(new Address(\"Hp4 9yf\", \"Apsleyss\"));\n    add2.add(new Address(\"Hp3 8DZ\", \"Hemel\"));\n    add2.add(new Address(\"Hp4 8DZ\", \"Hemel\"));\n    Region region = CacheUtils.createRegion(\"employees\", Employee.class);\n    region.put(\"1\", new Manager(\"aaa\", 27, 270, \"QA\", 1800, add1, 2701));\n    region.put(\"2\", new Manager(\"bbb\", 28, 280, \"QA\", 1900, add2, 2801));\n    String queries[] = {\"SELECT DISTINCT e.manager_id FROM /employees e\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = CacheUtils.getQueryService().newQuery(queries[i]);\n      Object r = q.execute();\n      String className =\n          (((SelectResults) r).getCollectionType()).getElementType().getSimpleClassName();\n      if (!className.equals(\"Employee\")) {\n        fail(\n            \"StructMemberAccessTest::testSubClassQuery:failed .Expected class name Employee. Actualy obtained=\"\n                + className);\n      }\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":198,"groupId":"2788","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"_BUGtestSubClassQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/60/46a165bb3ba6f4997880c329ec649ccbbc6039.src","preCode":"  public void _BUGtestSubClassQuery() throws Exception {\n    Set add1 = new HashSet();\n    Set add2 = new HashSet();\n    add1.add(new Address(\"Hp3 9yf\", \"Apsley\"));\n    add1.add(new Address(\"Hp4 9yf\", \"Apsleyss\"));\n    add2.add(new Address(\"Hp3 8DZ\", \"Hemel\"));\n    add2.add(new Address(\"Hp4 8DZ\", \"Hemel\"));\n    Region region = CacheUtils.createRegion(\"employees\", Employee.class);\n    region.put(\"1\", new Manager(\"aaa\", 27, 270, \"QA\", 1800, add1, 2701));\n    region.put(\"2\", new Manager(\"bbb\", 28, 280, \"QA\", 1900, add2, 2801));\n    String queries[] = {\"SELECT DISTINCT e.manager_id FROM /employees e\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = CacheUtils.getQueryService().newQuery(queries[i]);\n      Object r = q.execute();\n      String className =\n          (((SelectResults) r).getCollectionType()).getElementType().getSimpleClassName();\n      if (!className.equals(\"Employee\")) {\n        fail(\n            \"StructMemberAccessTest::testSubClassQuery:failed .Expected class name Employee. Actualy obtained=\"\n                + className);\n      }\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/StructMemberAccessJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  public void setUp() throws java.lang.Exception {\n    CacheUtils.startCache();\n    Set add1 = new HashSet();\n    Set add2 = new HashSet();\n    add1.add(new Address(\"Hp3 9yf\", \"Apsley\"));\n    add1.add(new Address(\"Hp4 9yf\", \"Apsleyss\"));\n    add2.add(new Address(\"Hp3 8DZ\", \"Hemel\"));\n    add2.add(new Address(\"Hp4 8DZ\", \"Hemel\"));\n    Region region = CacheUtils.createRegion(\"employees\", Employee.class);\n    region.put(\"1\", new Manager(\"aaa\", 27, 270, \"QA\", 1800, add1, 2701));\n    region.put(\"2\", new Manager(\"bbb\", 28, 280, \"QA\", 1900, add2, 2801));\n  }\n","date":"2018-07-18 03:54:18","endLine":55,"groupId":"104822","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/62/65f2409b5db03acfb437d91310e4ba74c93688.src","preCode":"  public void setUp() throws java.lang.Exception {\n    CacheUtils.startCache();\n    Set add1 = new HashSet();\n    Set add2 = new HashSet();\n    add1.add(new Address(\"Hp3 9yf\", \"Apsley\"));\n    add1.add(new Address(\"Hp4 9yf\", \"Apsleyss\"));\n    add2.add(new Address(\"Hp3 8DZ\", \"Hemel\"));\n    add2.add(new Address(\"Hp4 8DZ\", \"Hemel\"));\n    Region region = CacheUtils.createRegion(\"employees\", Employee.class);\n    region.put(\"1\", new Manager(\"aaa\", 27, 270, \"QA\", 1800, add1, 2701));\n    region.put(\"2\", new Manager(\"bbb\", 28, 280, \"QA\", 1900, add2, 2801));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/IteratorTypeDefEmpJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2020-05-29 00:37:39","commitOrder":2,"curCode":"  public void _BUGtestSubClassQuery() throws Exception {\n    Set add1 = new HashSet();\n    Set add2 = new HashSet();\n    add1.add(new Address(\"Hp3 9yf\", \"Apsley\"));\n    add1.add(new Address(\"Hp4 9yf\", \"Apsleyss\"));\n    add2.add(new Address(\"Hp3 8DZ\", \"Hemel\"));\n    add2.add(new Address(\"Hp4 8DZ\", \"Hemel\"));\n    Region region = CacheUtils.createRegion(\"employees\", Employee.class);\n    region.put(\"1\", new Manager(\"aaa\", 27, 270, \"QA\", 1800, add1, 2701));\n    region.put(\"2\", new Manager(\"bbb\", 28, 280, \"QA\", 1900, add2, 2801));\n    String queries[] = {\"SELECT DISTINCT e.manager_id FROM \" + SEPARATOR + \"employees e\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = CacheUtils.getQueryService().newQuery(queries[i]);\n      Object r = q.execute();\n      String className =\n          (((SelectResults) r).getCollectionType()).getElementType().getSimpleClassName();\n      if (!className.equals(\"Employee\")) {\n        fail(\n            \"StructMemberAccessTest::testSubClassQuery:failed .Expected class name Employee. Actualy obtained=\"\n                + className);\n      }\n    }\n  }\n","date":"2020-05-29 00:37:39","endLine":212,"groupId":"104822","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"_BUGtestSubClassQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/86/c3f97aa7d6708012d602f715b82aeec28d6ff7.src","preCode":"  public void _BUGtestSubClassQuery() throws Exception {\n    Set add1 = new HashSet();\n    Set add2 = new HashSet();\n    add1.add(new Address(\"Hp3 9yf\", \"Apsley\"));\n    add1.add(new Address(\"Hp4 9yf\", \"Apsleyss\"));\n    add2.add(new Address(\"Hp3 8DZ\", \"Hemel\"));\n    add2.add(new Address(\"Hp4 8DZ\", \"Hemel\"));\n    Region region = CacheUtils.createRegion(\"employees\", Employee.class);\n    region.put(\"1\", new Manager(\"aaa\", 27, 270, \"QA\", 1800, add1, 2701));\n    region.put(\"2\", new Manager(\"bbb\", 28, 280, \"QA\", 1900, add2, 2801));\n    String queries[] = {\"SELECT DISTINCT e.manager_id FROM /employees e\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = CacheUtils.getQueryService().newQuery(queries[i]);\n      Object r = q.execute();\n      String className =\n          (((SelectResults) r).getCollectionType()).getElementType().getSimpleClassName();\n      if (!className.equals(\"Employee\")) {\n        fail(\n            \"StructMemberAccessTest::testSubClassQuery:failed .Expected class name Employee. Actualy obtained=\"\n                + className);\n      }\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/StructMemberAccessJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"}]
