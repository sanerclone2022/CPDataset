[{"authorTime":"2021-04-01 03:46:48","codes":[{"authorDate":"2020-05-21 16:33:05","commitOrder":2,"curCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    statsFactory = mock(StatisticsFactory.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.isParallel = true;\n    attrs.id = \"AsyncEventQueue_\";\n\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    asyncEventQueue = new ParallelAsyncEventQueueImpl(cache, statsFactory, statisticsClock, attrs);\n  }\n","date":"2020-05-21 16:33:05","endLine":81,"groupId":"29224","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cf/529a6c6f437e892c70b632f387c6f1f79ee7b2.src","preCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    statsFactory = mock(StatisticsFactory.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.isParallel = true;\n    attrs.id = \"AsyncEventQueue_\";\n\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    asyncEventQueue = new ParallelAsyncEventQueueImpl(cache, statsFactory, statisticsClock, attrs);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/asyncqueue/internal/ParallelAsyncEventQueueImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"NB"},{"authorDate":"2021-04-01 03:46:48","commitOrder":2,"curCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.isParallel = true;\n    attrs.id = \"sender\";\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    CancelCriterion cancelCriterion = mock(CancelCriterion.class);\n    Statistics stats = mock(Statistics.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    when(cache.getCancelCriterion()).thenReturn(cancelCriterion);\n    when(cancelCriterion.isCancelInProgress()).thenReturn(false);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(system.createAtomicStatistics(any(), any())).thenReturn(stats);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    gatewaysender = new ParallelGatewaySenderImpl(cache, statisticsClock, attrs);\n  }\n","date":"2021-04-01 03:46:48","endLine":84,"groupId":"29224","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/05/6eac1e27f72da18f10caf8811bb442e603d727.src","preCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.isParallel = true;\n    attrs.id = \"sender\";\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    CancelCriterion cancelCriterion = mock(CancelCriterion.class);\n    Statistics stats = mock(Statistics.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    when(cache.getCancelCriterion()).thenReturn(cancelCriterion);\n    when(cancelCriterion.isCancelInProgress()).thenReturn(false);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(system.createAtomicStatistics(any(), any())).thenReturn(stats);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    gatewaysender = new ParallelGatewaySenderImpl(cache, statisticsClock, attrs);\n  }\n","realPath":"geode-wan/src/test/java/org/apache/geode/cache/wan/internal/parallel/ParallelGatewaySenderImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"}],"commitId":"f584970906c22fd6cb3b416a52bf3e355f993e9a","commitMessage":"@@@GEODE-9100:  Resolve package splitting for geode-wan (#6222)\n\n* GEODE-9100:  Resolve package splitting for geode-wan\n\nCo-authored-by: Udo Kohlmeyer <udo@vmware.com>\nCo-authored-by: Patrick Johnson <jpatrick@vmware.com>","date":"2021-04-01 03:46:48","modifiedFileCount":"8","status":"M","submitter":"Udo Kohlmeyer"},{"authorTime":"2021-04-08 16:45:31","codes":[{"authorDate":"2021-04-08 16:45:31","commitOrder":3,"curCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    statsFactory = mock(StatisticsFactory.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.setParallel(true);\n    attrs.setId(\"AsyncEventQueue_\");\n\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    asyncEventQueue = new ParallelAsyncEventQueueImpl(cache, statsFactory, statisticsClock, attrs);\n  }\n","date":"2021-04-08 16:45:31","endLine":81,"groupId":"29224","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/5149c6af63a44da45b459a50aec50b83c33f72.src","preCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    statsFactory = mock(StatisticsFactory.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.isParallel = true;\n    attrs.id = \"AsyncEventQueue_\";\n\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    asyncEventQueue = new ParallelAsyncEventQueueImpl(cache, statsFactory, statisticsClock, attrs);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/asyncqueue/internal/ParallelAsyncEventQueueImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2021-04-08 16:45:31","commitOrder":3,"curCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.setParallel(true);\n    attrs.setId(\"sender\");\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    CancelCriterion cancelCriterion = mock(CancelCriterion.class);\n    Statistics stats = mock(Statistics.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    when(cache.getCancelCriterion()).thenReturn(cancelCriterion);\n    when(cancelCriterion.isCancelInProgress()).thenReturn(false);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(system.createAtomicStatistics(any(), any())).thenReturn(stats);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    gatewaysender = new ParallelGatewaySenderImpl(cache, statisticsClock, attrs);\n  }\n","date":"2021-04-08 16:45:31","endLine":84,"groupId":"29224","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/84/f2261439e3187949518413e22f9880f40d49ed.src","preCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.isParallel = true;\n    attrs.id = \"sender\";\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    CancelCriterion cancelCriterion = mock(CancelCriterion.class);\n    Statistics stats = mock(Statistics.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    when(cache.getCancelCriterion()).thenReturn(cancelCriterion);\n    when(cancelCriterion.isCancelInProgress()).thenReturn(false);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(system.createAtomicStatistics(any(), any())).thenReturn(stats);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    gatewaysender = new ParallelGatewaySenderImpl(cache, statisticsClock, attrs);\n  }\n","realPath":"geode-wan/src/test/java/org/apache/geode/cache/wan/internal/parallel/ParallelGatewaySenderImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"7aa03824cc552433f034c8b27f4241d96bdb6383","commitMessage":"@@@GEODE-8605: Alter Gateway Sender command (#5630)\n\n* GEODE-8605: Alter Gateway Sender command\n\n* GEODE-8605: fix for failing integration test\n\n* GEODE-8605: added distributed test\n\n* GEODE-8605: update stability of distributed tests\n\n* GEODE-8605: added documentation impacts\n\n* GEODE-8605: added test for new function\n\n* GEODE-8605: added filter test\n\n* GEODE-8605: update after comments\n\n* GEODE-8605: update solution\n\n* GEODE-8605: add test for parallel gw sender\n\n* GEODE-8605: added setters instead of update\n\n* GEODE-8605: added ParallelGatewaySender tests\n\n* GEODE-8605: added test for SerialGatewaySender\n\n* GEODE-8605: update solution\n\n* GEODE-8605: add option to remove gateway-event-filters\n\n* GEODE-8605: update of remove filters solution\n\n* GEODE-8605: rebase solution\n\n* GEODE-8605: added serialVersionUID to GatewaySender\n\n* GEODE-8605: added test case\n\n* GEODE-8605: remove changes in CacheConfig.GatewaySender\n\n* GEODE-8605: add setters to GatewaySenderAttributes\n\n* GEODE-8605: small update\n\n* GEODE-8605: update after rebase\n\n* GEODE-8605: update after comments\n\n* GEODE-8605: update after comments without atomic change","date":"2021-04-08 16:45:31","modifiedFileCount":"16","status":"M","submitter":"Mario Ivanac"},{"authorTime":"2021-06-23 14:44:39","codes":[{"authorDate":"2021-04-08 16:45:31","commitOrder":4,"curCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    statsFactory = mock(StatisticsFactory.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.setParallel(true);\n    attrs.setId(\"AsyncEventQueue_\");\n\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    asyncEventQueue = new ParallelAsyncEventQueueImpl(cache, statsFactory, statisticsClock, attrs);\n  }\n","date":"2021-04-08 16:45:31","endLine":81,"groupId":"29224","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/5149c6af63a44da45b459a50aec50b83c33f72.src","preCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    statsFactory = mock(StatisticsFactory.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.setParallel(true);\n    attrs.setId(\"AsyncEventQueue_\");\n\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    asyncEventQueue = new ParallelAsyncEventQueueImpl(cache, statsFactory, statisticsClock, attrs);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/asyncqueue/internal/ParallelAsyncEventQueueImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2021-06-23 14:44:39","commitOrder":4,"curCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.setParallel(true);\n    attrs.setId(\"sender\");\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    gatewaysender = new ParallelGatewaySenderImpl(cache, statisticsClock, attrs);\n  }\n","date":"2021-06-23 14:44:39","endLine":76,"groupId":"29224","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/56/c5b72a2eaf18c04727dcec007a7134e5ea9bfa.src","preCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.setParallel(true);\n    attrs.setId(\"sender\");\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    CancelCriterion cancelCriterion = mock(CancelCriterion.class);\n    Statistics stats = mock(Statistics.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    when(cache.getCancelCriterion()).thenReturn(cancelCriterion);\n    when(cancelCriterion.isCancelInProgress()).thenReturn(false);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(system.createAtomicStatistics(any(), any())).thenReturn(stats);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    gatewaysender = new ParallelGatewaySenderImpl(cache, statisticsClock, attrs);\n  }\n","realPath":"geode-wan/src/test/java/org/apache/geode/cache/wan/internal/parallel/ParallelGatewaySenderImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"86a8b1ea4c26b515ca96b1230c993c8ca1d7ed8a","commitMessage":"@@@Revert \"GEODE-8971: Add grace period when stopping gateway sender with group-? (#6052)\" (#6634)\n\nThis reverts commit 841fa06c7b34916c09df920b7029974a78255cd0.\n\nThe reason is that this commit creates problems with ongoing\nput operations during the grace period (very long response\ntimes) and also.  if operations rate is high.  it could prevent\nthat the gateway sender is stopped.\n\nPut operations can be very slow during the grace period\nbecause they need to traverse the gateway sender queue\nto find events with the same transactionId. If the queue\nsize is big and events are evicted to disk.  the time to\nprocess a request can be unacceptably long.\nAt the same time.  this can provoke that the gateway sender\nis never stopped because it is blocked trying to get\na write lock and the lock is held by ongoing operations\nfor a long time.","date":"2021-06-23 14:44:39","modifiedFileCount":"19","status":"M","submitter":"Alberto Gomez"},{"authorTime":"2021-07-12 14:18:10","codes":[{"authorDate":"2021-07-12 14:18:10","commitOrder":5,"curCode":"  public void setUp() {\n    cache = mock(InternalCache.class, RETURNS_DEEP_STUBS);\n    statisticsClock = mock(StatisticsClock.class);\n    statsFactory = mock(StatisticsFactory.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.setParallel(true);\n    attrs.setId(\"AsyncEventQueue_\");\n\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    when(cache.getCancelCriterion().isCancelInProgress()).thenReturn(false);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    asyncEventQueue = new ParallelAsyncEventQueueImpl(cache, statsFactory, statisticsClock, attrs);\n  }\n","date":"2021-07-12 14:18:10","endLine":83,"groupId":"103199","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/15/879f35b9208823697b71634a872bdadd3fee35.src","preCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    statsFactory = mock(StatisticsFactory.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.setParallel(true);\n    attrs.setId(\"AsyncEventQueue_\");\n\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    asyncEventQueue = new ParallelAsyncEventQueueImpl(cache, statsFactory, statisticsClock, attrs);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/cache/asyncqueue/internal/ParallelAsyncEventQueueImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2021-07-12 14:18:10","commitOrder":5,"curCode":"  public void setUp() {\n    cache = mock(InternalCache.class, RETURNS_DEEP_STUBS);\n    statisticsClock = mock(StatisticsClock.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.setParallel(true);\n    attrs.setId(\"sender\");\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    when(cache.getCancelCriterion().isCancelInProgress()).thenReturn(false);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    gatewaysender = new ParallelGatewaySenderImpl(cache, statisticsClock, attrs);\n  }\n","date":"2021-07-12 14:18:10","endLine":78,"groupId":"103199","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ae/f02f1352218bec2d3aa5f9aa8e8622ac7600bf.src","preCode":"  public void setUp() {\n    cache = mock(InternalCache.class);\n    statisticsClock = mock(StatisticsClock.class);\n    attrs = new GatewaySenderAttributes();\n    attrs.setParallel(true);\n    attrs.setId(\"sender\");\n    InternalDistributedSystem system = mock(InternalDistributedSystem.class);\n    when(cache.getInternalDistributedSystem()).thenReturn(system);\n    when(cache.getDistributedSystem()).thenReturn(system);\n    ClusterDistributionManager distributionManager = mock(ClusterDistributionManager.class);\n    when(system.getDistributionManager()).thenReturn(distributionManager);\n    when(distributionManager.getDistributedSystemId()).thenReturn(-1);\n\n    DistributedLockService distributedLockService = mock(DistributedLockService.class);\n    when(distributedLockService.lock(any(), anyLong(), anyLong())).thenReturn(true);\n\n    when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService);\n\n    LocalRegion region = mock(LocalRegion.class);\n    when(cache.getRegion(any())).thenReturn(region);\n    when(region.containsKey(any())).thenReturn(true);\n    when(region.get(any())).thenReturn(1);\n\n    TypeRegistry pdxRegistryMock = mock(TypeRegistry.class);\n    when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock);\n\n    gatewaysender = new ParallelGatewaySenderImpl(cache, statisticsClock, attrs);\n  }\n","realPath":"geode-wan/src/test/java/org/apache/geode/cache/wan/internal/parallel/ParallelGatewaySenderImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"d361a99806df0bda6da886bd142bd71ff4ad504b","commitMessage":"@@@GEODE-9421: Remove BatchRemoval NPE logs from JUnit tests (#6683)\n\nParallelAsyncEventQueueImplTest and ParallelGatewaySenderImplTest classes were mocking InternalRegion\nbut were not providing an implementation for cache.getCancelCriterion().\nThis led to a null pointer exception in the BatchRemoval thread code that. \neven though it did not affect the tests.  provoked that a log message with\na null pointer exception was printed.\n\nThe solution consists of adding a response in the mock using when() for the cache.getCancelCriterion() method.","date":"2021-07-12 14:18:10","modifiedFileCount":"2","status":"M","submitter":"Alberto Gomez"}]
