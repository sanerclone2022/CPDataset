[{"authorTime":"2019-09-12 04:47:10","codes":[{"authorDate":"2019-09-12 04:47:10","commitOrder":1,"curCode":"  public void pdxPersistenceIsSetWithUserDefinedDiskStore() throws NoSuchFieldException {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(peerTypeRegistration).getAttributesFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    FieldSetter.setField(config, config.getClass().getField(\"pdxDiskStoreUserSet\"), true);\n    final String diskStoreName = \"userDiskStore\";\n    when(internalCache.getPdxDiskStore()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","date":"2019-09-12 04:47:10","endLine":125,"groupId":"26254","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"pdxPersistenceIsSetWithUserDefinedDiskStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b5/8b7adeec960bf339fc7ba110cd486da0a528de.src","preCode":"  public void pdxPersistenceIsSetWithUserDefinedDiskStore() throws NoSuchFieldException {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(peerTypeRegistration).getAttributesFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    FieldSetter.setField(config, config.getClass().getField(\"pdxDiskStoreUserSet\"), true);\n    final String diskStoreName = \"userDiskStore\";\n    when(internalCache.getPdxDiskStore()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/pdx/internal/PeerTypeRegistrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"B"},{"authorDate":"2019-09-12 04:47:10","commitOrder":1,"curCode":"  public void pdxPersistenceIsSetWithDefaultDiskStore() {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(peerTypeRegistration).getAttributesFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    DiskStoreImpl defaultDiskStore = mock(DiskStoreImpl.class);\n    when(internalCache.getOrCreateDefaultDiskStore()).thenReturn(defaultDiskStore);\n    final String diskStoreName = \"defaultDiskStoreName\";\n    when(defaultDiskStore.getName()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","date":"2019-09-12 04:47:10","endLine":144,"groupId":"41160","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"pdxPersistenceIsSetWithDefaultDiskStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b5/8b7adeec960bf339fc7ba110cd486da0a528de.src","preCode":"  public void pdxPersistenceIsSetWithDefaultDiskStore() {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(peerTypeRegistration).getAttributesFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    DiskStoreImpl defaultDiskStore = mock(DiskStoreImpl.class);\n    when(internalCache.getOrCreateDefaultDiskStore()).thenReturn(defaultDiskStore);\n    final String diskStoreName = \"defaultDiskStoreName\";\n    when(defaultDiskStore.getName()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/pdx/internal/PeerTypeRegistrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"}],"commitId":"0e906310c55f70d3a9728c2effdab9bb5f204b2e","commitMessage":"@@@GEODE-7035 - adding a new enumInfo will check from local map only.  same as adding a new pdxtype (#4044)\n\n* GEODE-7035 - adding a new enumInfo will check from local map only.  same as adding a new pdxtype\n","date":"2019-09-12 04:47:10","modifiedFileCount":"3","status":"B","submitter":"Xiaojian Zhou"},{"authorTime":"2020-02-25 07:40:15","codes":[{"authorDate":"2020-02-25 07:40:15","commitOrder":2,"curCode":"  public void pdxPersistenceIsSetWithUserDefinedDiskStore() throws NoSuchFieldException {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(internalCache).createRegionFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    FieldSetter.setField(config, config.getClass().getField(\"pdxDiskStoreUserSet\"), true);\n    final String diskStoreName = \"userDiskStore\";\n    when(internalCache.getPdxDiskStore()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","date":"2020-02-25 07:40:15","endLine":140,"groupId":"26254","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"pdxPersistenceIsSetWithUserDefinedDiskStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/59d08c97ca16466fafb028e403ae549551db4a.src","preCode":"  public void pdxPersistenceIsSetWithUserDefinedDiskStore() throws NoSuchFieldException {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(peerTypeRegistration).getAttributesFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    FieldSetter.setField(config, config.getClass().getField(\"pdxDiskStoreUserSet\"), true);\n    final String diskStoreName = \"userDiskStore\";\n    when(internalCache.getPdxDiskStore()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/pdx/internal/PeerTypeRegistrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2020-02-25 07:40:15","commitOrder":2,"curCode":"  public void pdxPersistenceIsSetWithDefaultDiskStore() {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(internalCache).createRegionFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    DiskStoreImpl defaultDiskStore = mock(DiskStoreImpl.class);\n    when(internalCache.getOrCreateDefaultDiskStore()).thenReturn(defaultDiskStore);\n    final String diskStoreName = \"defaultDiskStoreName\";\n    when(defaultDiskStore.getName()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","date":"2020-02-25 07:40:15","endLine":159,"groupId":"41160","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"pdxPersistenceIsSetWithDefaultDiskStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/59d08c97ca16466fafb028e403ae549551db4a.src","preCode":"  public void pdxPersistenceIsSetWithDefaultDiskStore() {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(peerTypeRegistration).getAttributesFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    DiskStoreImpl defaultDiskStore = mock(DiskStoreImpl.class);\n    when(internalCache.getOrCreateDefaultDiskStore()).thenReturn(defaultDiskStore);\n    final String diskStoreName = \"defaultDiskStoreName\";\n    when(defaultDiskStore.getName()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/pdx/internal/PeerTypeRegistrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"}],"commitId":"b082c0352b0a96c3dc1cf07caaf1f7f2e4fb8177","commitMessage":"@@@GEODE-7803: provide undeprecated internal region create (#4722)\n\nYou can now use InternalRegionFactory to create a region configured with InternalRegionArguments. No need to use the deprecated AttributesFactory.\nInternalRegionFactory used to be named RegionFactoryImpl.\n","date":"2020-02-25 07:40:15","modifiedFileCount":"38","status":"M","submitter":"Darrel Schneider"},{"authorTime":"2020-02-25 07:40:15","codes":[{"authorDate":"2020-09-24 06:00:09","commitOrder":3,"curCode":"  public void pdxPersistenceIsSetWithUserDefinedDiskStore()\n      throws NoSuchFieldException, IllegalAccessException {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(internalCache).createRegionFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    Field field = config.getClass().getField(\"pdxDiskStoreUserSet\");\n    field.setBoolean(config, Boolean.TRUE);\n    final String diskStoreName = \"userDiskStore\";\n    when(internalCache.getPdxDiskStore()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","date":"2020-09-24 06:00:09","endLine":142,"groupId":"103299","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"pdxPersistenceIsSetWithUserDefinedDiskStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/3a/a99810b9700b37a7840c249d7826bf782378b0.src","preCode":"  public void pdxPersistenceIsSetWithUserDefinedDiskStore() throws NoSuchFieldException {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(internalCache).createRegionFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    FieldSetter.setField(config, config.getClass().getField(\"pdxDiskStoreUserSet\"), true);\n    final String diskStoreName = \"userDiskStore\";\n    when(internalCache.getPdxDiskStore()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/pdx/internal/PeerTypeRegistrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2020-02-25 07:40:15","commitOrder":3,"curCode":"  public void pdxPersistenceIsSetWithDefaultDiskStore() {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(internalCache).createRegionFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    DiskStoreImpl defaultDiskStore = mock(DiskStoreImpl.class);\n    when(internalCache.getOrCreateDefaultDiskStore()).thenReturn(defaultDiskStore);\n    final String diskStoreName = \"defaultDiskStoreName\";\n    when(defaultDiskStore.getName()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","date":"2020-02-25 07:40:15","endLine":159,"groupId":"103299","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"pdxPersistenceIsSetWithDefaultDiskStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/59d08c97ca16466fafb028e403ae549551db4a.src","preCode":"  public void pdxPersistenceIsSetWithDefaultDiskStore() {\n    PeerTypeRegistration peerTypeRegistration = spy(new PeerTypeRegistration(internalCache));\n    doReturn(factory).when(internalCache).createRegionFactory();\n    when(internalCache.getPdxPersistent()).thenReturn(true);\n    CacheConfig config = mock(CacheConfig.class);\n    when(internalCache.getCacheConfig()).thenReturn(config);\n\n    DiskStoreImpl defaultDiskStore = mock(DiskStoreImpl.class);\n    when(internalCache.getOrCreateDefaultDiskStore()).thenReturn(defaultDiskStore);\n    final String diskStoreName = \"defaultDiskStoreName\";\n    when(defaultDiskStore.getName()).thenReturn(diskStoreName);\n\n    peerTypeRegistration.initialize();\n\n    verify(factory).setDiskStoreName(diskStoreName);\n    verify(factory).setDataPolicy(DataPolicy.PERSISTENT_REPLICATE);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/pdx/internal/PeerTypeRegistrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"N"}],"commitId":"a355764db9209f9eee68e293f0187971c3dedd5e","commitMessage":"@@@GEODE-8496: Bump mockito from 3.3.3 to 3.5.11 (#5540)\n\n* Bump mockito from 3.3.3 to 3.5.11\n* replace deprecated calls to initMocks()\n* fix field setting on a test to not use Mockito static function\n\nCo-authored-by: Hale Bales <hbales@pivotal.io>","date":"2020-09-24 06:00:09","modifiedFileCount":"3","status":"M","submitter":"Owen Nichols"}]
