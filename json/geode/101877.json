[{"authorTime":"2019-12-04 05:14:00","codes":[{"authorDate":"2019-12-04 05:14:00","commitOrder":1,"curCode":"  public void logsMissingChildRegionUntilCompletion() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    String missingChild = \"/childRegion\";\n    when(allColocationRegionsProvider.apply(eq(region)))\n        .thenReturn(singleton(missingChild));\n    colocationLogger.addMissingChildRegion(missingChild);\n\n    verify(logger,\n        timeout(TIMEOUT_MILLIS).atLeastOnce())\n            .accept(anyString());\n\n    colocationLogger.updateAndGetMissingChildRegions();\n\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    verifyNoMoreInteractions(logger);\n  }\n","date":"2019-12-05 02:22:40","endLine":181,"groupId":"29244","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"logsMissingChildRegionUntilCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ae/1bb44c3d0db96333e550cf52d6963c0c523007.src","preCode":"  public void logsMissingChildRegionUntilCompletion() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    String missingChild = \"/childRegion\";\n    when(allColocationRegionsProvider.apply(eq(region)))\n        .thenReturn(singleton(missingChild));\n    colocationLogger.addMissingChildRegion(missingChild);\n\n    verify(logger,\n        timeout(TIMEOUT_MILLIS).atLeastOnce())\n            .accept(anyString());\n\n    colocationLogger.updateAndGetMissingChildRegions();\n\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    verifyNoMoreInteractions(logger);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/colocation/SingleThreadColocationLoggerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"B"},{"authorDate":"2019-12-04 05:14:00","commitOrder":1,"curCode":"  public void addMissingChildRegionAfterCompletionDoesNotLog() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    colocationLogger.addMissingChildRegion(\"/childRegion\");\n\n    verifyZeroInteractions(logger);\n  }\n","date":"2019-12-05 02:22:40","endLine":195,"groupId":"29243","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addMissingChildRegionAfterCompletionDoesNotLog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ae/1bb44c3d0db96333e550cf52d6963c0c523007.src","preCode":"  public void addMissingChildRegionAfterCompletionDoesNotLog() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    colocationLogger.addMissingChildRegion(\"/childRegion\");\n\n    verifyZeroInteractions(logger);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/colocation/SingleThreadColocationLoggerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"}],"commitId":"b48dc324b1f85688e333194d2d7e1636fa367dd7","commitMessage":"@@@GEODE-7513: Fix PersistentColocatedPartitionedRegionDistributedTest\n\nMove flaky test coverage from distributed test to unit test.\n\nAdd more unit tests to SingleThreadColocationLoggerTest.\n","date":"2019-12-05 02:22:40","modifiedFileCount":"3","status":"B","submitter":"Kirk Lund"},{"authorTime":"2020-04-25 00:20:21","codes":[{"authorDate":"2019-12-04 05:14:00","commitOrder":2,"curCode":"  public void logsMissingChildRegionUntilCompletion() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    String missingChild = \"/childRegion\";\n    when(allColocationRegionsProvider.apply(eq(region)))\n        .thenReturn(singleton(missingChild));\n    colocationLogger.addMissingChildRegion(missingChild);\n\n    verify(logger,\n        timeout(TIMEOUT_MILLIS).atLeastOnce())\n            .accept(anyString());\n\n    colocationLogger.updateAndGetMissingChildRegions();\n\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    verifyNoMoreInteractions(logger);\n  }\n","date":"2019-12-05 02:22:40","endLine":181,"groupId":"29244","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"logsMissingChildRegionUntilCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ae/1bb44c3d0db96333e550cf52d6963c0c523007.src","preCode":"  public void logsMissingChildRegionUntilCompletion() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    String missingChild = \"/childRegion\";\n    when(allColocationRegionsProvider.apply(eq(region)))\n        .thenReturn(singleton(missingChild));\n    colocationLogger.addMissingChildRegion(missingChild);\n\n    verify(logger,\n        timeout(TIMEOUT_MILLIS).atLeastOnce())\n            .accept(anyString());\n\n    colocationLogger.updateAndGetMissingChildRegions();\n\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    verifyNoMoreInteractions(logger);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/colocation/SingleThreadColocationLoggerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"N"},{"authorDate":"2020-04-25 00:20:21","commitOrder":2,"curCode":"  public void addMissingChildRegionAfterCompletionDoesNotLog() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    colocationLogger.addMissingChildRegion(\"/childRegion\");\n\n    verifyNoMoreInteractions(logger);\n  }\n","date":"2020-04-25 00:20:21","endLine":194,"groupId":"29243","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addMissingChildRegionAfterCompletionDoesNotLog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ef/909ca5e58d22e31c2b15aa549c9cea59176bf9.src","preCode":"  public void addMissingChildRegionAfterCompletionDoesNotLog() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    colocationLogger.addMissingChildRegion(\"/childRegion\");\n\n    verifyZeroInteractions(logger);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/colocation/SingleThreadColocationLoggerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"0a1701e92dc09bcd6b79edd3b52f20ee9e9a867c","commitMessage":"@@@GEODE-7964: Upgrade Mockito to 3.3.3 (#4924)\n\n","date":"2020-04-25 00:20:21","modifiedFileCount":"34","status":"M","submitter":"Kirk Lund"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2020-05-29 00:37:39","commitOrder":3,"curCode":"  public void logsMissingChildRegionUntilCompletion() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    String missingChild = SEPARATOR + \"childRegion\";\n    when(allColocationRegionsProvider.apply(eq(region)))\n        .thenReturn(singleton(missingChild));\n    colocationLogger.addMissingChildRegion(missingChild);\n\n    verify(logger,\n        timeout(TIMEOUT_MILLIS).atLeastOnce())\n            .accept(anyString());\n\n    colocationLogger.updateAndGetMissingChildRegions();\n\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    verifyNoMoreInteractions(logger);\n  }\n","date":"2020-05-29 00:37:39","endLine":180,"groupId":"101877","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"logsMissingChildRegionUntilCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/d043ce44a7f8e603c487d80793472e4bb68a36.src","preCode":"  public void logsMissingChildRegionUntilCompletion() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    String missingChild = \"/childRegion\";\n    when(allColocationRegionsProvider.apply(eq(region)))\n        .thenReturn(singleton(missingChild));\n    colocationLogger.addMissingChildRegion(missingChild);\n\n    verify(logger,\n        timeout(TIMEOUT_MILLIS).atLeastOnce())\n            .accept(anyString());\n\n    colocationLogger.updateAndGetMissingChildRegions();\n\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    verifyNoMoreInteractions(logger);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/colocation/SingleThreadColocationLoggerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"},{"authorDate":"2020-05-29 00:37:39","commitOrder":3,"curCode":"  public void addMissingChildRegionAfterCompletionDoesNotLog() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    colocationLogger.addMissingChildRegion(SEPARATOR + \"childRegion\");\n\n    verifyNoMoreInteractions(logger);\n  }\n","date":"2020-05-29 00:37:39","endLine":194,"groupId":"101877","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addMissingChildRegionAfterCompletionDoesNotLog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/d043ce44a7f8e603c487d80793472e4bb68a36.src","preCode":"  public void addMissingChildRegionAfterCompletionDoesNotLog() throws Exception {\n    SingleThreadColocationLogger colocationLogger =\n        new SingleThreadColocationLogger(region, 100, 200, logger,\n            allColocationRegionsProvider, executorService);\n    colocationLogger.start();\n    Future<?> completed = colocationLogger.getFuture();\n    completed.get(TIMEOUT_MILLIS, MILLISECONDS);\n\n    colocationLogger.addMissingChildRegion(\"/childRegion\");\n\n    verifyNoMoreInteractions(logger);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/colocation/SingleThreadColocationLoggerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"}]
