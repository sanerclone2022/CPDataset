[{"authorTime":"2019-01-16 02:15:23","codes":[{"authorDate":"2019-01-16 02:15:23","commitOrder":1,"curCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setRefid(\"PARTITION\");\n\n    RegionConfigRealizer subject = new RegionConfigRealizer();\n    subject.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    ArgumentCaptor<PartitionAttributes> partitionAttributesArgumentCaptor =\n        ArgumentCaptor.forClass(PartitionAttributes.class);\n    verify(regionFactory).setPartitionAttributes(partitionAttributesArgumentCaptor.capture());\n\n    PartitionAttributes partitionAttributes = partitionAttributesArgumentCaptor.getValue();\n    assertThat(partitionAttributes).isNotNull();\n    assertThat(partitionAttributes.getRedundantCopies()).isEqualTo(1);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-01-16 02:15:23","endLine":67,"groupId":"6994","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createsPartitionedInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/79/72f5b2130fb74d557deb30fdd095d92e2c412a.src","preCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setRefid(\"PARTITION\");\n\n    RegionConfigRealizer subject = new RegionConfigRealizer();\n    subject.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    ArgumentCaptor<PartitionAttributes> partitionAttributesArgumentCaptor =\n        ArgumentCaptor.forClass(PartitionAttributes.class);\n    verify(regionFactory).setPartitionAttributes(partitionAttributesArgumentCaptor.capture());\n\n    PartitionAttributes partitionAttributes = partitionAttributesArgumentCaptor.getValue();\n    assertThat(partitionAttributes).isNotNull();\n    assertThat(partitionAttributes.getRedundantCopies()).isEqualTo(1);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2019-01-16 02:15:23","commitOrder":1,"curCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setRefid(\"REPLICATE\");\n\n    RegionConfigRealizer subject = new RegionConfigRealizer();\n    subject.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-01-16 02:15:23","endLine":83,"groupId":"27528","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createsReplicateInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/79/72f5b2130fb74d557deb30fdd095d92e2c412a.src","preCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setRefid(\"REPLICATE\");\n\n    RegionConfigRealizer subject = new RegionConfigRealizer();\n    subject.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"87e65ea366df87f35f7817aacf11381e2aa3c9ae","commitMessage":"@@@GEODE-6184 Added internal implementation of ClusterManagementService Java API to create a region (#3059)\n\nSigned-off-by: Jinmei Liao <jiliao@pivotal.io>\nSigned-off-by: Aditya Anchuri <aanchuri@pivotal.io>\nSigned-off-by: Jens Deppe <jdeppe@pivotal.io>\nSigned-off-by: Peter Tran <ptran@pivotal.io>\nSigned-off-by: Kenneth Howe <khowe@pivotal.io>\n\n* Define ClusterManagementService interface\n* created ClusterManagementService's implementation on the locator\n* implemented RegionConfig's realizer and mutator so that the ClusterManagementService can use that to create the region and persist the configuration.\n\n","date":"2019-01-16 02:15:23","modifiedFileCount":"35","status":"B","submitter":"Aditya Anchuri"},{"authorTime":"2019-01-16 02:15:23","codes":[{"authorDate":"2019-01-26 02:11:55","commitOrder":2,"curCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setRefid(\"PARTITION\");\n\n    RegionConfigRealizer realizer = new RegionConfigRealizer();\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-01-26 02:11:55","endLine":58,"groupId":"6994","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createsPartitionedInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/55/b127ce401e20bbc0408cf2529ef408096808d9.src","preCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setRefid(\"PARTITION\");\n\n    RegionConfigRealizer subject = new RegionConfigRealizer();\n    subject.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    ArgumentCaptor<PartitionAttributes> partitionAttributesArgumentCaptor =\n        ArgumentCaptor.forClass(PartitionAttributes.class);\n    verify(regionFactory).setPartitionAttributes(partitionAttributesArgumentCaptor.capture());\n\n    PartitionAttributes partitionAttributes = partitionAttributesArgumentCaptor.getValue();\n    assertThat(partitionAttributes).isNotNull();\n    assertThat(partitionAttributes.getRedundantCopies()).isEqualTo(1);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2019-01-16 02:15:23","commitOrder":2,"curCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setRefid(\"REPLICATE\");\n\n    RegionConfigRealizer subject = new RegionConfigRealizer();\n    subject.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-01-16 02:15:23","endLine":83,"groupId":"27528","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createsReplicateInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/79/72f5b2130fb74d557deb30fdd095d92e2c412a.src","preCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setRefid(\"REPLICATE\");\n\n    RegionConfigRealizer subject = new RegionConfigRealizer();\n    subject.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"N"}],"commitId":"c877ef8720dc8f5a1a9735a3678060f337441673","commitMessage":"@@@GEODE-6306: extend the RegionConfigRealizer to honor all region attributes configurations\n\nCo-authored-by: Jens Deppe <jdeppe@pivotal.io>\n","date":"2019-01-26 02:11:55","modifiedFileCount":"21","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-01-30 02:33:01","codes":[{"authorDate":"2019-01-30 02:33:01","commitOrder":3,"curCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(\"PARTITION\");\n\n    RegionConfigRealizer realizer = new RegionConfigRealizer();\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-01-30 02:33:01","endLine":58,"groupId":"6994","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createsPartitionedInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/dc/b3ade055189e72e42ef057b786f6d59e4e3977.src","preCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setRefid(\"PARTITION\");\n\n    RegionConfigRealizer realizer = new RegionConfigRealizer();\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2019-01-30 02:33:01","commitOrder":3,"curCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(\"REPLICATE\");\n\n    RegionConfigRealizer subject = new RegionConfigRealizer();\n    subject.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-01-30 02:33:01","endLine":74,"groupId":"27528","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createsReplicateInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/dc/b3ade055189e72e42ef057b786f6d59e4e3977.src","preCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setRefid(\"REPLICATE\");\n\n    RegionConfigRealizer subject = new RegionConfigRealizer();\n    subject.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"c97edf9ae9ccf8964e10bf4f9b22cd853fae6d1f","commitMessage":"@@@GEODE-6174: change refid to type and make the default type to be PARTITION (#3130)\n\nCo-authored-by: Peter Tran <ptran@pivotal.io>\n\n* change refid to type for better UX\n* add a common config validator interface and use that to validate RegionConfig","date":"2019-01-30 02:33:01","modifiedFileCount":"18","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-02-15 10:46:40","codes":[{"authorDate":"2019-02-15 10:46:40","commitOrder":4,"curCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(\"PARTITION\");\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-02-15 10:46:40","endLine":59,"groupId":"6994","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createsPartitionedInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/97/06de4ff29bb7792138ad1fffa56add0b8a5e97.src","preCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(\"PARTITION\");\n\n    RegionConfigRealizer realizer = new RegionConfigRealizer();\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2019-02-15 10:46:40","commitOrder":4,"curCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(\"REPLICATE\");\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-02-15 10:46:40","endLine":74,"groupId":"27528","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createsReplicateInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/97/06de4ff29bb7792138ad1fffa56add0b8a5e97.src","preCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(\"REPLICATE\");\n\n    RegionConfigRealizer subject = new RegionConfigRealizer();\n    subject.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"189d6fb94f3a7e0a0eb8f5c3bca52d613b6e5760","commitMessage":"@@@GEODE-6322: refactor createRegionCommand to use RegionConfig only (#3156)\n\n* get rid of usages of xxxArgs and RegionConfigFactory\n* the resulting cluster configuration xml for region does not have excessive default values\n","date":"2019-02-15 10:46:40","modifiedFileCount":"19","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-03-14 22:27:12","codes":[{"authorDate":"2019-03-14 22:27:12","commitOrder":5,"curCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.PARTITION);\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-03-14 22:27:12","endLine":60,"groupId":"6994","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createsPartitionedInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/bb/7a4aeb8829de1df28cbfbd616c3cf2abe067a0.src","preCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(\"PARTITION\");\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2019-03-14 22:27:12","commitOrder":5,"curCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.REPLICATE);\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-03-14 22:27:12","endLine":75,"groupId":"27528","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createsReplicateInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/bb/7a4aeb8829de1df28cbfbd616c3cf2abe067a0.src","preCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(\"REPLICATE\");\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"957574d7fdb4b6ab8fb6a1aead4d7ca1476bdbc9","commitMessage":"@@@GEODE-6505: Use Enum instead of String for RegionConfig type (#3287)\n\nCo-authored-by: Jinmei Liao <jiliao@pivotal.io>\nCo-authored-by: Peter Tran <ptran@pivotal.io>\nCo-authored-by: Owen Nichols <onichols@pivotal.io>","date":"2019-03-14 22:27:12","modifiedFileCount":"22","status":"M","submitter":"Peter Tran"},{"authorTime":"2019-04-06 01:47:50","codes":[{"authorDate":"2019-04-06 01:47:50","commitOrder":6,"curCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.PARTITION.name());\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-04-06 01:47:50","endLine":60,"groupId":"6994","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createsPartitionedInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/34/51d895f4c1bb07eda71d3b82f72a35fbc34148.src","preCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.PARTITION);\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2019-04-06 01:47:50","commitOrder":6,"curCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.REPLICATE.name());\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-04-06 01:47:50","endLine":75,"groupId":"27528","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createsReplicateInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/34/51d895f4c1bb07eda71d3b82f72a35fbc34148.src","preCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.REPLICATE);\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"50c37478f52aaeb5ccc45d595d604dffe87a16ec","commitMessage":"@@@GEODE-6505: move RegionShortcut and ExpirationAction back to core (#3407)\n\n* use a different enum in geode-management module for recommended types\n* move ExpirationAction back to core\n* use string for expiration action in geode-management module and add validation","date":"2019-04-06 01:47:50","modifiedFileCount":"25","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-05-12 01:42:15","codes":[{"authorDate":"2019-05-12 01:42:15","commitOrder":7,"curCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.PARTITION.name());\n    validator.validate(config);\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-05-12 01:42:15","endLine":63,"groupId":"6994","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createsPartitionedInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0e/71b10e01772c47c5f2980feccf2b6120abd6b0.src","preCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.PARTITION.name());\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2019-05-12 01:42:15","commitOrder":7,"curCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.REPLICATE.name());\n    validator.validate(config);\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-05-12 01:42:15","endLine":78,"groupId":"27528","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createsReplicateInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0e/71b10e01772c47c5f2980feccf2b6120abd6b0.src","preCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.REPLICATE.name());\n\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"1f458c9516d476f0889708210e76e892985f41c7","commitMessage":"@@@GEODE-6756: rework type and regionAttributes setter/getter (#3578)\n\nCo-authored-by: Jens Deppe <jdeppe@pivotal.io>\n\n* make type a required attribute for RegionConfig\n* Do the type to attributes mapping in the RegionConfigValidator for the ultimate attributes validation.","date":"2019-05-12 01:42:15","modifiedFileCount":"15","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-05-29 19:16:36","codes":[{"authorDate":"2019-05-29 19:16:36","commitOrder":8,"curCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.PARTITION.name());\n    validator.validate(CacheElementOperation.CREATE, config);\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-05-29 19:16:36","endLine":64,"groupId":"6994","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createsPartitionedInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/54/6d7f6c5f93e14f9125e8e1d5a57d42358a0076.src","preCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.PARTITION.name());\n    validator.validate(config);\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2019-05-29 19:16:36","commitOrder":8,"curCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.REPLICATE.name());\n    validator.validate(CacheElementOperation.CREATE, config);\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-05-29 19:16:36","endLine":79,"groupId":"27528","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"createsReplicateInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/54/6d7f6c5f93e14f9125e8e1d5a57d42358a0076.src","preCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.REPLICATE.name());\n    validator.validate(config);\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"ce10ede1dd8a8a085d332bde0389473f7a57ba9d","commitMessage":"@@@GEODE-6786: Provide ability to delete a region using V2 REST API (#3610)\n\n","date":"2019-05-29 19:16:36","modifiedFileCount":"20","status":"M","submitter":"Jens Deppe"},{"authorTime":"2019-08-16 05:45:33","codes":[{"authorDate":"2019-08-16 05:45:33","commitOrder":9,"curCode":"  public void createsPartitionedInCache() {\n    config.setName(\"regionName\");\n    config.setType(RegionType.PARTITION);\n    validator.validate(CacheElementOperation.CREATE, config);\n    realizer.create(config, cache);\n    verify(cache).createRegionFactory(\"PARTITION\");\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-08-16 05:45:33","endLine":61,"groupId":"5424","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createsPartitionedInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c4/1f97855bb5a6cf9425b557c4ac065e28211ebc.src","preCode":"  public void createsPartitionedInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.PARTITION.name());\n    validator.validate(CacheElementOperation.CREATE, config);\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2019-08-16 05:45:33","commitOrder":9,"curCode":"  public void createsReplicateInCache() {\n    config.setName(\"regionName\");\n    config.setType(RegionType.REPLICATE);\n    validator.validate(CacheElementOperation.CREATE, config);\n    realizer.create(config, cache);\n    verify(cache).createRegionFactory(\"REPLICATE\");\n    verify(regionFactory).create(\"regionName\");\n  }\n","date":"2019-08-16 05:45:33","endLine":71,"groupId":"5424","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"createsReplicateInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c4/1f97855bb5a6cf9425b557c4ac065e28211ebc.src","preCode":"  public void createsReplicateInCache() {\n    RegionConfig config = new RegionConfig();\n    config.setName(\"regionName\");\n    config.setType(RegionShortcut.REPLICATE.name());\n    validator.validate(CacheElementOperation.CREATE, config);\n    realizer.create(config, cache);\n\n    ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass(DataPolicy.class);\n    verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture());\n    assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE);\n\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"550e19e9c9bfd147a387c56019f00dbf162a2b26","commitMessage":"@@@GEODE-6945:geode-managment should create its own set of configuration? (#3928)\n\nCo-authored-by: Darrel Schneider <dschneider@pivotal.io>\n\n* do not use xml domain object for region configuration\n* add RegionType.UNSUPPORTED\n","date":"2019-08-16 05:45:33","modifiedFileCount":"40","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-08-27 10:01:56","codes":[{"authorDate":"2019-08-27 10:01:56","commitOrder":10,"curCode":"  public void createsPartitionedInCache() {\n    config.setType(RegionType.PARTITION);\n    validator.validate(CacheElementOperation.CREATE, config);\n    realizer.create(config, cache);\n    verify(regionFactory).create(\"test\");\n    verify(regionFactory).setDataPolicy(DataPolicy.PARTITION);\n  }\n","date":"2019-08-27 10:01:56","endLine":64,"groupId":"10299","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"createsPartitionedInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/19/8f25be6fbbb2b16e1bdfc0c74d68798ffec2eb.src","preCode":"  public void createsPartitionedInCache() {\n    config.setName(\"regionName\");\n    config.setType(RegionType.PARTITION);\n    validator.validate(CacheElementOperation.CREATE, config);\n    realizer.create(config, cache);\n    verify(cache).createRegionFactory(\"PARTITION\");\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2019-08-27 10:01:56","commitOrder":10,"curCode":"  public void createsReplicateInCache() {\n    config.setType(RegionType.REPLICATE);\n    validator.validate(CacheElementOperation.CREATE, config);\n    realizer.create(config, cache);\n    verify(regionFactory).create(\"test\");\n    verify(regionFactory).setDataPolicy(DataPolicy.REPLICATE);\n  }\n","date":"2019-08-27 10:01:56","endLine":73,"groupId":"10299","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"createsReplicateInCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/19/8f25be6fbbb2b16e1bdfc0c74d68798ffec2eb.src","preCode":"  public void createsReplicateInCache() {\n    config.setName(\"regionName\");\n    config.setType(RegionType.REPLICATE);\n    validator.validate(CacheElementOperation.CREATE, config);\n    realizer.create(config, cache);\n    verify(cache).createRegionFactory(\"REPLICATE\");\n    verify(regionFactory).create(\"regionName\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/configuration/realizers/RegionConfigRealizerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"f286ec451684b5d9047c661087a506281c587043","commitMessage":"@@@GEODE-6944: add support for *REDUNDANT* regionType (#3957)\n\nCo-authored-by: Darrel Schneider <dschneider@pivotal.io>\n\n","date":"2019-08-27 10:01:56","modifiedFileCount":"10","status":"M","submitter":"Jinmei Liao"}]
