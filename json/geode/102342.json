[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void getDataTypeShouldReturnUserDataSeriazliable() throws IOException {\n    Instantiator mockInstantiator = PowerMockito.mock(Instantiator.class);\n    doReturn(CustId.class).when(mockInstantiator).getInstantiatedClass();\n    mockInstantiator.getInstantiatedClass();\n\n    int someClassId = 1;\n\n    PowerMockito.mockStatic(InternalInstantiator.class);\n    when(InternalInstantiator.getClassId(mockInstantiator.getClass())).thenReturn(someClassId);\n    when(InternalInstantiator.getInstantiator(someClassId)).thenReturn(mockInstantiator);\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE);\n    out.writeByte(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","date":"2016-09-15 02:08:18","endLine":733,"groupId":"36535","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getDataTypeShouldReturnUserDataSeriazliable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1f/9a8aa6636d70bf71b57a9f7345a82cebf44558.src","preCode":"  public void getDataTypeShouldReturnUserDataSeriazliable() throws IOException {\n    Instantiator mockInstantiator = PowerMockito.mock(Instantiator.class);\n    doReturn(CustId.class).when(mockInstantiator).getInstantiatedClass();\n    mockInstantiator.getInstantiatedClass();\n\n    int someClassId = 1;\n\n    PowerMockito.mockStatic(InternalInstantiator.class);\n    when(InternalInstantiator.getClassId(mockInstantiator.getClass())).thenReturn(someClassId);\n    when(InternalInstantiator.getInstantiator(someClassId)).thenReturn(mockInstantiator);\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE);\n    out.writeByte(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":713,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void getDataTypeShouldReturnUserDataSeriazliable4() throws IOException {\n    Instantiator mockInstantiator = PowerMockito.mock(Instantiator.class);\n    doReturn(CustId.class).when(mockInstantiator).getInstantiatedClass();\n    mockInstantiator.getInstantiatedClass();\n\n    int someClassId = 1;\n\n    PowerMockito.mockStatic(InternalInstantiator.class);\n    when(InternalInstantiator.getClassId(mockInstantiator.getClass())).thenReturn(someClassId);\n    when(InternalInstantiator.getInstantiator(someClassId)).thenReturn(mockInstantiator);\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE_4);\n    out.writeInt(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","date":"2016-09-15 02:08:18","endLine":779,"groupId":"36535","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDataTypeShouldReturnUserDataSeriazliable4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1f/9a8aa6636d70bf71b57a9f7345a82cebf44558.src","preCode":"  public void getDataTypeShouldReturnUserDataSeriazliable4() throws IOException {\n    Instantiator mockInstantiator = PowerMockito.mock(Instantiator.class);\n    doReturn(CustId.class).when(mockInstantiator).getInstantiatedClass();\n    mockInstantiator.getInstantiatedClass();\n\n    int someClassId = 1;\n\n    PowerMockito.mockStatic(InternalInstantiator.class);\n    when(InternalInstantiator.getClassId(mockInstantiator.getClass())).thenReturn(someClassId);\n    when(InternalInstantiator.getInstantiator(someClassId)).thenReturn(mockInstantiator);\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE_4);\n    out.writeInt(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":759,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2018-04-07 02:52:09","codes":[{"authorDate":"2018-04-07 02:52:09","commitOrder":2,"curCode":"  public void getDataTypeShouldReturnUserDataSeriazliable() throws IOException {\n    Instantiator mockInstantiator = PowerMockito.mock(Instantiator.class);\n    doReturn(CustId.class).when(mockInstantiator).getInstantiatedClass();\n    mockInstantiator.getInstantiatedClass();\n\n    int someClassId = 1;\n\n    PowerMockito.mockStatic(InternalInstantiator.class);\n    when(InternalInstantiator.getClassId(mockInstantiator.getClass())).thenReturn(someClassId);\n    when(InternalInstantiator.getInstantiator(someClassId)).thenReturn(mockInstantiator);\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE.toByte());\n    out.writeByte(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\n        \"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","date":"2018-04-07 02:52:09","endLine":735,"groupId":"36535","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getDataTypeShouldReturnUserDataSeriazliable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f5/e8fe7fae0e744a1075502eb3081f440a4d4b24.src","preCode":"  public void getDataTypeShouldReturnUserDataSeriazliable() throws IOException {\n    Instantiator mockInstantiator = PowerMockito.mock(Instantiator.class);\n    doReturn(CustId.class).when(mockInstantiator).getInstantiatedClass();\n    mockInstantiator.getInstantiatedClass();\n\n    int someClassId = 1;\n\n    PowerMockito.mockStatic(InternalInstantiator.class);\n    when(InternalInstantiator.getClassId(mockInstantiator.getClass())).thenReturn(someClassId);\n    when(InternalInstantiator.getInstantiator(someClassId)).thenReturn(mockInstantiator);\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE);\n    out.writeByte(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\n        \"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":714,"status":"M"},{"authorDate":"2018-04-07 02:52:09","commitOrder":2,"curCode":"  public void getDataTypeShouldReturnUserDataSeriazliable4() throws IOException {\n    Instantiator mockInstantiator = PowerMockito.mock(Instantiator.class);\n    doReturn(CustId.class).when(mockInstantiator).getInstantiatedClass();\n    mockInstantiator.getInstantiatedClass();\n\n    int someClassId = 1;\n\n    PowerMockito.mockStatic(InternalInstantiator.class);\n    when(InternalInstantiator.getClassId(mockInstantiator.getClass())).thenReturn(someClassId);\n    when(InternalInstantiator.getInstantiator(someClassId)).thenReturn(mockInstantiator);\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE_4.toByte());\n    out.writeInt(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\n        \"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","date":"2018-04-07 02:52:09","endLine":783,"groupId":"36535","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getDataTypeShouldReturnUserDataSeriazliable4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f5/e8fe7fae0e744a1075502eb3081f440a4d4b24.src","preCode":"  public void getDataTypeShouldReturnUserDataSeriazliable4() throws IOException {\n    Instantiator mockInstantiator = PowerMockito.mock(Instantiator.class);\n    doReturn(CustId.class).when(mockInstantiator).getInstantiatedClass();\n    mockInstantiator.getInstantiatedClass();\n\n    int someClassId = 1;\n\n    PowerMockito.mockStatic(InternalInstantiator.class);\n    when(InternalInstantiator.getClassId(mockInstantiator.getClass())).thenReturn(someClassId);\n    when(InternalInstantiator.getInstantiator(someClassId)).thenReturn(mockInstantiator);\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE_4);\n    out.writeInt(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\n        \"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":762,"status":"M"}],"commitId":"804c053fdfbce4b7f1f810b1019f778c02f50020","commitMessage":"@@@GEODE-4518: Replace DSCODE with an enumeration. (#1738)\n\n* GEODE-4518: Replace DSCODE with an enumeration.\n- Deprecate DSCODE interface.\n- Introduce HeaderByte enum.\n- Replace explicit references to DSCODE with\n  explicit references to HeaderByte.\n\n* GEODE-4518: Update analysis files.\n\n* GEODE-4518: Add unit test for value uniqueness.\n\n* GEODE-4518: Convert DSCODE into enum that replaces HeaderByte.\n","date":"2018-04-07 02:52:09","modifiedFileCount":"30","status":"M","submitter":"Michael \"Sarge\" Dodge"},{"authorTime":"2018-12-18 09:38:10","codes":[{"authorDate":"2018-12-18 09:38:10","commitOrder":3,"curCode":"  public void getDataTypeShouldReturnUserDataSeriazliable() throws IOException {\n    int someClassId = 1;\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE.toByte());\n    out.writeByte(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\n        \"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","date":"2018-12-18 09:38:10","endLine":746,"groupId":"102342","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getDataTypeShouldReturnUserDataSeriazliable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fc/127a1abac668820b001962dedd2d669bb58871.src","preCode":"  public void getDataTypeShouldReturnUserDataSeriazliable() throws IOException {\n    Instantiator mockInstantiator = PowerMockito.mock(Instantiator.class);\n    doReturn(CustId.class).when(mockInstantiator).getInstantiatedClass();\n    mockInstantiator.getInstantiatedClass();\n\n    int someClassId = 1;\n\n    PowerMockito.mockStatic(InternalInstantiator.class);\n    when(InternalInstantiator.getClassId(mockInstantiator.getClass())).thenReturn(someClassId);\n    when(InternalInstantiator.getInstantiator(someClassId)).thenReturn(mockInstantiator);\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE.toByte());\n    out.writeByte(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\n        \"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":733,"status":"M"},{"authorDate":"2018-12-18 09:38:10","commitOrder":3,"curCode":"  public void getDataTypeShouldReturnUserDataSeriazliable4() throws IOException {\n    int someClassId = 1;\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE_4.toByte());\n    out.writeInt(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\n        \"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","date":"2018-12-18 09:38:10","endLine":778,"groupId":"102342","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getDataTypeShouldReturnUserDataSeriazliable4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fc/127a1abac668820b001962dedd2d669bb58871.src","preCode":"  public void getDataTypeShouldReturnUserDataSeriazliable4() throws IOException {\n    Instantiator mockInstantiator = PowerMockito.mock(Instantiator.class);\n    doReturn(CustId.class).when(mockInstantiator).getInstantiatedClass();\n    mockInstantiator.getInstantiatedClass();\n\n    int someClassId = 1;\n\n    PowerMockito.mockStatic(InternalInstantiator.class);\n    when(InternalInstantiator.getClassId(mockInstantiator.getClass())).thenReturn(someClassId);\n    when(InternalInstantiator.getInstantiator(someClassId)).thenReturn(mockInstantiator);\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_DATA_SERIALIZABLE_4.toByte());\n    out.writeInt(someClassId);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\n        \"org.apache.geode.Instantiator:org.apache.geode.internal.cache.execute.data.CustId\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":765,"status":"M"}],"commitId":"b2492bdc93b0a04e657c36454874226bf0c1da40","commitMessage":"@@@Merge pull request #2990 from apache/feature/GEODE-6143-5\n\nGEODE-6143: remove PowerMock from DataTypeJUnitTest","date":"2018-12-18 09:38:10","modifiedFileCount":"1","status":"M","submitter":"Xiaojian Zhou"}]
