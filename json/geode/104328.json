[{"authorTime":"2019-11-19 02:55:04","codes":[{"authorDate":"2019-11-19 02:55:04","commitOrder":7,"curCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(\n        asTcpSocketCreator(\n            SocketCreatorFactory\n                .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(InetAddress.getByName(hostName),\n                locatorPort,\n                request,\n                10000, replyExpected);\n  }\n","date":"2019-11-19 02:55:04","endLine":191,"groupId":"23353","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"issueRequest","params":"(finalStringhostName@finalintlocatorPort@finalObjectrequest@finalbooleanreplyExpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0d/f2e765f60718736982c8f255dad4435f15f5b1.src","preCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(\n        asTcpSocketCreator(\n            SocketCreatorFactory\n                .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(InetAddress.getByName(hostName),\n                locatorPort,\n                request,\n                10000, replyExpected);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/cache/client/internal/LocatorLoadBalancingDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"B"},{"authorDate":"2019-11-19 02:55:04","commitOrder":7,"curCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(\n          asTcpSocketCreator(\n              SocketCreatorFactory\n                  .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(bindAddress, port);\n      } else {\n        info = client.getInfo(toInetAddress(host), port);\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","date":"2019-11-19 02:55:04","endLine":105,"groupId":"40905","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createConfigFor","params":"(Stringhost@intport@InetAddressbindAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1c/f5f84cc99aab0ccd4d415f116b8f14d9b9afa6.src","preCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(\n          asTcpSocketCreator(\n              SocketCreatorFactory\n                  .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(bindAddress, port);\n      } else {\n        info = client.getInfo(toInetAddress(host), port);\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","realPath":"geode-core/src/main/java/org/apache/geode/admin/internal/DistributionLocatorConfigImpl.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"MB"}],"commitId":"4c87d2e5c4afde9faa63e4d60998e549d254d34b","commitMessage":"@@@GEODE-7344: break dependencies on DataSerializer (#4339)\n\n\n","date":"2019-11-19 02:55:04","modifiedFileCount":"29","status":"M","submitter":"Bill Burcham"},{"authorTime":"2020-01-30 07:37:54","codes":[{"authorDate":"2020-01-30 07:37:54","commitOrder":8,"curCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(SocketCreatorFactory\n        .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(InetAddress.getByName(hostName),\n                locatorPort,\n                request,\n                10000, replyExpected);\n  }\n","date":"2020-01-30 07:37:54","endLine":188,"groupId":"23353","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"issueRequest","params":"(finalStringhostName@finalintlocatorPort@finalObjectrequest@finalbooleanreplyExpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/54/f552f133c3afa840e1a8eeac3b4d5c371968b5.src","preCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(\n        asTcpSocketCreator(\n            SocketCreatorFactory\n                .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(InetAddress.getByName(hostName),\n                locatorPort,\n                request,\n                10000, replyExpected);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/cache/client/internal/LocatorLoadBalancingDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2020-01-30 07:37:54","commitOrder":8,"curCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(SocketCreatorFactory\n          .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(bindAddress, port);\n      } else {\n        info = client.getInfo(toInetAddress(host), port);\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","date":"2020-01-30 07:37:54","endLine":102,"groupId":"40905","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createConfigFor","params":"(Stringhost@intport@InetAddressbindAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/60/dacb160a58e1199ade41638459229c6a2a0797.src","preCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(\n          asTcpSocketCreator(\n              SocketCreatorFactory\n                  .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(bindAddress, port);\n      } else {\n        info = client.getInfo(toInetAddress(host), port);\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","realPath":"geode-core/src/main/java/org/apache/geode/admin/internal/DistributionLocatorConfigImpl.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"434b5b0923a54d5042acd074863d3254358f2617","commitMessage":"@@@GEODE-7597: Factor out code needed in Membership from SocketCreator (#4637)\n\n* GEODE-7597: Factor out code needed in Membership from SocketCreator\n\nImplemented a new TcpSocketCreatorImpl.  Due to GeodeHttpClientRule\ndependencies this and associated interfaces are in geode-common.  I'd\nrather have them in geode-tcp-server.\n\nSocketCreator now subclasses TcpSocketCreatorImpl and I've removed the\nadapter class.  which is no longer needed.\n\n* added missing files\n\n* fixing dunit failure and moving TcpSocketCreator back to the tcp-server project\n\n* fixing bind address and inheritance problems in socket creators\n\n* fixes for unit test failures\n\n* spotless\n\n* relax assertion in test that fails stress-testing\n","date":"2020-01-30 07:37:54","modifiedFileCount":"31","status":"M","submitter":"Bruce Schuchardt"},{"authorTime":"2020-03-03 05:09:07","codes":[{"authorDate":"2020-03-03 05:09:07","commitOrder":9,"curCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(SocketCreatorFactory\n        .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(new HostAndPort(hostName,\n                locatorPort),\n                request,\n                10000, replyExpected);\n  }\n","date":"2020-03-03 05:09:07","endLine":188,"groupId":"23353","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"issueRequest","params":"(finalStringhostName@finalintlocatorPort@finalObjectrequest@finalbooleanreplyExpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/8ba3ca848bbbf298cdb6384112875471479d6c.src","preCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(SocketCreatorFactory\n        .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(InetAddress.getByName(hostName),\n                locatorPort,\n                request,\n                10000, replyExpected);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/cache/client/internal/LocatorLoadBalancingDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2020-03-03 05:09:07","commitOrder":9,"curCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(SocketCreatorFactory\n          .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(new HostAndPort(bindAddress.getHostAddress(), port));\n      } else {\n        info = client.getInfo(new HostAndPort(host, port));\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","date":"2020-03-03 05:09:07","endLine":100,"groupId":"42507","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createConfigFor","params":"(Stringhost@intport@InetAddressbindAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b7/35ca658d19f2355f269abbff71b845239ba92b.src","preCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(SocketCreatorFactory\n          .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(bindAddress, port);\n      } else {\n        info = client.getInfo(toInetAddress(host), port);\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","realPath":"geode-core/src/main/java/org/apache/geode/admin/internal/DistributionLocatorConfigImpl.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"0af626462642c6352840cd6e81a5265c74045c7f","commitMessage":"@@@GEODE-7808: standardize on use of HostAndPort to form client-side connections (#4743)\n\n* Squashed merge of feature/GEODE-7808\n\nremoved HostAddress\nrenamed LocatorAddress to HostAndPort\nmodified TcpClient methods to take a HostAndPort argument instead of\nInetAddress\nmodified SocketCreator to take a HostAndPort argument instead of\nInetAddress\n\n* GEODE-7808 - standardize on use of HostAndPort for connection formation\n\nThis continues a previous PR that passed and was approved for merge.\nThis commit raises up several methods from SocketCreator into the\nTcpSocketCreator interface.  This is an intermediate commit.  A\nsubsequent commit will refactor TcpSocketCreator to separate the client\nand server methods for creating server-sockets and client connections to\nserver-sockets.\n\n* refactored socket-creators to separate concerns\n\nServerSocketCreator holds methods for non-client comms\nClientSocketCreator holds methods that clients should use for comms\nAdvancedSocketCreator holds methods for people who need to get around\nthe limitations of the other two interfaces\n\n* adding missing interface\n\n* move code out of inner-classes into first-class classes\n\n* renaming interfaces and methods to be less confusing\n","date":"2020-03-03 05:09:07","modifiedFileCount":"78","status":"M","submitter":"Bruce Schuchardt"},{"authorTime":"2020-03-04 03:17:00","codes":[{"authorDate":"2020-03-04 03:17:00","commitOrder":10,"curCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(SocketCreatorFactory\n        .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(InetAddress.getByName(hostName),\n                locatorPort,\n                request,\n                10000, replyExpected);\n  }\n","date":"2020-03-04 03:17:00","endLine":188,"groupId":"23353","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"issueRequest","params":"(finalStringhostName@finalintlocatorPort@finalObjectrequest@finalbooleanreplyExpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/54/f552f133c3afa840e1a8eeac3b4d5c371968b5.src","preCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(SocketCreatorFactory\n        .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(new HostAndPort(hostName,\n                locatorPort),\n                request,\n                10000, replyExpected);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/cache/client/internal/LocatorLoadBalancingDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2020-03-04 03:17:00","commitOrder":10,"curCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(SocketCreatorFactory\n          .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(bindAddress, port);\n      } else {\n        info = client.getInfo(toInetAddress(host), port);\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","date":"2020-03-04 03:17:00","endLine":102,"groupId":"40905","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createConfigFor","params":"(Stringhost@intport@InetAddressbindAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/60/dacb160a58e1199ade41638459229c6a2a0797.src","preCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(SocketCreatorFactory\n          .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(new HostAndPort(bindAddress.getHostAddress(), port));\n      } else {\n        info = client.getInfo(new HostAndPort(host, port));\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","realPath":"geode-core/src/main/java/org/apache/geode/admin/internal/DistributionLocatorConfigImpl.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"4b06a7ae04e3eb3e32d8a6a96c7eb5e5d3269df0","commitMessage":"@@@Revert \"GEODE-7808: standardize on use of HostAndPort to form client-side connections (#4743)\" (#4761)\n\nThis reverts commit 0af626462642c6352840cd6e81a5265c74045c7f.\nThat commit seems to have caused a severe performance drop in several\nBenchmark tests:\n\norg.apache.geode.benchmark.tests.PartitionedGetBenchmark\n              average ops/second  Baseline:    981794.46  Test:     41239.82  Difference:  -95.8%\norg.apache.geode.benchmark.tests.ReplicatedGetBenchmark\n              average ops/second  Baseline:    972769.18  Test:     41299.96  Difference:  -95.8%\norg.apache.geode.benchmark.tests.PartitionedNonIndexedQueryBenchmark\n              average ops/second  Baseline:        90.05  Test:        70.52  Difference:  -21.7%","date":"2020-03-04 03:17:00","modifiedFileCount":"78","status":"M","submitter":"Bruce Schuchardt"},{"authorTime":"2020-03-05 05:06:54","codes":[{"authorDate":"2020-03-05 05:06:54","commitOrder":11,"curCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(SocketCreatorFactory\n        .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(new HostAndPort(hostName,\n                locatorPort),\n                request,\n                10000, replyExpected);\n  }\n","date":"2020-03-05 05:06:54","endLine":188,"groupId":"23353","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"issueRequest","params":"(finalStringhostName@finalintlocatorPort@finalObjectrequest@finalbooleanreplyExpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/8ba3ca848bbbf298cdb6384112875471479d6c.src","preCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(SocketCreatorFactory\n        .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(InetAddress.getByName(hostName),\n                locatorPort,\n                request,\n                10000, replyExpected);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/cache/client/internal/LocatorLoadBalancingDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2020-03-05 05:06:54","commitOrder":11,"curCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(SocketCreatorFactory\n          .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(new HostAndPort(bindAddress.getHostAddress(), port));\n      } else {\n        info = client.getInfo(new HostAndPort(host, port));\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","date":"2020-03-05 05:06:54","endLine":100,"groupId":"42507","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createConfigFor","params":"(Stringhost@intport@InetAddressbindAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b7/35ca658d19f2355f269abbff71b845239ba92b.src","preCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(SocketCreatorFactory\n          .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(bindAddress, port);\n      } else {\n        info = client.getInfo(toInetAddress(host), port);\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","realPath":"geode-core/src/main/java/org/apache/geode/admin/internal/DistributionLocatorConfigImpl.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"5c2b959e98a6330ecaeddb4d26e11ea29f7a2d7f","commitMessage":"@@@GEODE-7808: standardize on use of HostAndPort for creating connections (#4765)\n\n* Squashed merge of feature/GEODE-7808\n\nremoved HostAddress\nrenamed LocatorAddress to HostAndPort\nmodified TcpClient methods to take a HostAndPort argument instead of\nInetAddress\nmodified SocketCreator to take a HostAndPort argument instead of\nInetAddress\n\n* GEODE-7808 - standardize on use of HostAndPort for connection formation\n\nThis continues a previous PR that passed and was approved for merge.\nThis commit raises up several methods from SocketCreator into the\nTcpSocketCreator interface.  This is an intermediate commit.  A\nsubsequent commit will refactor TcpSocketCreator to separate the client\nand server methods for creating server-sockets and client connections to\nserver-sockets.\n\n* refactored socket-creators to separate concerns\n\nServerSocketCreator holds methods for non-client comms\nClientSocketCreator holds methods that clients should use for comms\nAdvancedSocketCreator holds methods for people who need to get around\nthe limitations of the other two interfaces\n\n* adding missing interface\n\n* move code out of inner-classes into first-class classes\n\n* renaming interfaces and methods to be less confusing\n\n* reinstate SocketCreator ip to hostname cache for performance\n\n* changes from review comments\n","date":"2020-03-05 05:06:54","modifiedFileCount":"80","status":"M","submitter":"Bruce Schuchardt"},{"authorTime":"2020-03-21 04:40:24","codes":[{"authorDate":"2020-03-21 04:40:24","commitOrder":12,"curCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(SocketCreatorFactory\n        .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer(),\n        TcpSocketFactory.DEFAULT)\n            .requestToServer(new HostAndPort(hostName,\n                locatorPort),\n                request,\n                10000, replyExpected);\n  }\n","date":"2020-03-21 04:40:24","endLine":190,"groupId":"104328","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"issueRequest","params":"(finalStringhostName@finalintlocatorPort@finalObjectrequest@finalbooleanreplyExpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c3/6f38544eafc165ff2237096286c66727e59080.src","preCode":"  private Object issueRequest(final String hostName, final int locatorPort,\n      final Object request, final boolean replyExpected)\n      throws IOException, ClassNotFoundException {\n    return new TcpClient(SocketCreatorFactory\n        .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n        InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n        InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())\n            .requestToServer(new HostAndPort(hostName,\n                locatorPort),\n                request,\n                10000, replyExpected);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/cache/client/internal/LocatorLoadBalancingDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"},{"authorDate":"2020-03-21 04:40:24","commitOrder":12,"curCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(SocketCreatorFactory\n          .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer(),\n          TcpSocketFactory.DEFAULT);\n      if (bindAddress != null) {\n        info = client.getInfo(new HostAndPort(bindAddress.getHostAddress(), port));\n      } else {\n        info = client.getInfo(new HostAndPort(host, port));\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","date":"2020-03-21 04:40:24","endLine":102,"groupId":"104328","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"createConfigFor","params":"(Stringhost@intport@InetAddressbindAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ce/8a24547d63608f5d5881ba17c74fea70d1f207.src","preCode":"  static DistributionLocatorConfig createConfigFor(String host, int port, InetAddress bindAddress) {\n    String[] info = new String[] {\"unknown\", \"unknown\"};\n\n    try {\n      TcpClient client = new TcpClient(SocketCreatorFactory\n          .getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),\n          InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),\n          InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer());\n      if (bindAddress != null) {\n        info = client.getInfo(new HostAndPort(bindAddress.getHostAddress(), port));\n      } else {\n        info = client.getInfo(new HostAndPort(host, port));\n      }\n      if (info == null) {\n        return null;\n      }\n    } catch (GemFireConfigException e) {\n      \r\n    }\n\n    DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl();\n    config.setHost(host);\n    config.setPort(port);\n    if (bindAddress != null) {\n      config.setBindAddress(bindAddress.getHostAddress());\n    }\n    config.setWorkingDirectory(info[0]);\n    config.setProductDirectory(info[1]);\n\n    return config;\n  }\n","realPath":"geode-core/src/main/java/org/apache/geode/admin/internal/DistributionLocatorConfigImpl.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"53f1e1a81c3b58989a835d37f94466eb3dfc752f","commitMessage":"@@@GEODE-7852: Adding a SocketFactory configuration for client Pools (#4830)\n\nAdding the ability to provide a SocketFactory to a client pool for use in\ncreating sockets. Adding an implementation of this SocketFactory that\nconfigures the pool to use an SNI proxy.\n\nAdding an automated test of the SniSocketFactory that uses docker compose\nto use a real SNI proxy and geode servers that are not reachable without\ngoing through the proxy.\n\nCo-authored-by: Bill Burcham <bburcham@pivotal.io>","date":"2020-03-21 04:40:24","modifiedFileCount":"51","status":"M","submitter":"Dan Smith"}]
