[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void startWithServerPortOverridesPortInCacheXml() throws Exception {\n    int[] freePorts = getRandomAvailableTCPPorts(2);\n    int cacheXmlPort = freePorts[0];\n    int startPort = freePorts[1];\n    givenCacheXmlFileWithServerPort(cacheXmlPort);\n\n    launcher = startServer(new Builder().setServerPort(startPort));\n\n    \r\n    assertThatServerPortIsInUse(startPort);\n    assertThatServerPortIsFree(cacheXmlPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(startPort);\n  }\n","date":"2018-07-18 03:54:18","endLine":174,"groupId":"31478","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startWithServerPortOverridesPortInCacheXml","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ec/0352d5efa35b11bc561894593a9282ec396a47.src","preCode":"  public void startWithServerPortOverridesPortInCacheXml() throws Exception {\n    int[] freePorts = getRandomAvailableTCPPorts(2);\n    int cacheXmlPort = freePorts[0];\n    int startPort = freePorts[1];\n    givenCacheXmlFileWithServerPort(cacheXmlPort);\n\n    launcher = startServer(new Builder().setServerPort(startPort));\n\n    \r\n    assertThatServerPortIsInUse(startPort);\n    assertThatServerPortIsFree(cacheXmlPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(startPort);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void startWithServerPortOverridesDefaultWithCacheXml() throws Exception {\n    givenCacheXmlFile();\n\n    launcher = awaitStart(new Builder().setMemberName(getUniqueName()).setRedirectOutput(true)\n        .setServerPort(defaultServerPort).setWorkingDirectory(getWorkingDirectoryPath())\n        .set(LOG_LEVEL, \"config\").set(MCAST_PORT, \"0\"));\n\n    \r\n    assertThatServerPortIsInUse(defaultServerPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(defaultServerPort);\n  }\n","date":"2018-07-18 03:54:18","endLine":187,"groupId":"31476","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"startWithServerPortOverridesDefaultWithCacheXml","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ec/0352d5efa35b11bc561894593a9282ec396a47.src","preCode":"  public void startWithServerPortOverridesDefaultWithCacheXml() throws Exception {\n    givenCacheXmlFile();\n\n    launcher = awaitStart(new Builder().setMemberName(getUniqueName()).setRedirectOutput(true)\n        .setServerPort(defaultServerPort).setWorkingDirectory(getWorkingDirectoryPath())\n        .set(LOG_LEVEL, \"config\").set(MCAST_PORT, \"0\"));\n\n    \r\n    assertThatServerPortIsInUse(defaultServerPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(defaultServerPort);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-07-25 05:44:46","codes":[{"authorDate":"2018-07-25 05:44:46","commitOrder":2,"curCode":"  public void startWithServerPortOverridesPortInCacheXml() {\n    int[] freePorts = getRandomAvailableTCPPorts(2);\n    int cacheXmlPort = freePorts[0];\n    int startPort = freePorts[1];\n    givenCacheXmlFileWithServerPort(cacheXmlPort);\n\n    launcher = startServer(new Builder().setServerPort(startPort));\n\n    \r\n    assertThatServerPortIsInUse(startPort);\n    assertThatServerPortIsFree(cacheXmlPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(startPort);\n  }\n","date":"2018-07-25 05:44:46","endLine":177,"groupId":"31478","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startWithServerPortOverridesPortInCacheXml","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/b3c07753f3f39024d3f88b600bb43509164504.src","preCode":"  public void startWithServerPortOverridesPortInCacheXml() throws Exception {\n    int[] freePorts = getRandomAvailableTCPPorts(2);\n    int cacheXmlPort = freePorts[0];\n    int startPort = freePorts[1];\n    givenCacheXmlFileWithServerPort(cacheXmlPort);\n\n    launcher = startServer(new Builder().setServerPort(startPort));\n\n    \r\n    assertThatServerPortIsInUse(startPort);\n    assertThatServerPortIsFree(cacheXmlPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(startPort);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2018-07-25 05:44:46","commitOrder":2,"curCode":"  public void startWithServerPortOverridesDefaultWithCacheXml() {\n    givenCacheXmlFile();\n\n    launcher = awaitStart(new Builder().setMemberName(getUniqueName()).setRedirectOutput(true)\n        .setServerPort(defaultServerPort).setWorkingDirectory(getWorkingDirectoryPath())\n        .set(LOG_LEVEL, \"config\").set(MCAST_PORT, \"0\"));\n\n    \r\n    assertThatServerPortIsInUse(defaultServerPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(defaultServerPort);\n  }\n","date":"2018-07-25 05:44:46","endLine":190,"groupId":"31476","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"startWithServerPortOverridesDefaultWithCacheXml","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/b3c07753f3f39024d3f88b600bb43509164504.src","preCode":"  public void startWithServerPortOverridesDefaultWithCacheXml() throws Exception {\n    givenCacheXmlFile();\n\n    launcher = awaitStart(new Builder().setMemberName(getUniqueName()).setRedirectOutput(true)\n        .setServerPort(defaultServerPort).setWorkingDirectory(getWorkingDirectoryPath())\n        .set(LOG_LEVEL, \"config\").set(MCAST_PORT, \"0\"));\n\n    \r\n    assertThatServerPortIsInUse(defaultServerPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(defaultServerPort);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"}],"commitId":"667fbb4176c2f9bf8e399809b1c46f744486c3cd","commitMessage":"@@@GEODE-5256: Parameters Precedence in Start Server (#2013)\n\n* GEODE-5256: Parameters Precedence in Start Server\n\nConfiguration options set as part of the `start server` command now\ntake precedence over those configured in the `cache.xml` file.  the\n`cluster-configuration-service` and defaults.\n\n- Rebased against latest develop branch.\n- Removed unused `throws` clauses from tests.\n- Renamed `ServerLauncherIntegrationTest` to\n  `ServerLauncherBuilderIntegrationTest`.\n- Added tests for `ServerLauncher` and `CacheCreation`.\n- Added acceptance tests for `gfsh start server` command.\n- Fixed `ServerLauncher.parseArguments` method.  it was wrongly calling\n  `setMaxConnections` for other unrelated parameters (maxMessageCount. \n  messageTimeToLive and sockerBufferSize).\n- The `ServerLauncher` class now sets all the relevent startup\n  parameters during initialization within the static `parameters` field\n  on `CacheServerLauncher` class. The `CacheCreation` class.  in turn. \n  reconfigures the `Server` attributes using\n  `CacheServerLauncher.parameters` before starting the `AcceptorImpl`.\n\n* GEODE-5256: Changes requested by reviewers\n\n- Rebased against latest develop branch.\n- Replaced `Wait` references for `Awaitility` in related tests.\n- Class `CacheServerLauncher.Parameters` is now a top level class.\n- Added `@Deprecated` annotation and docs for `CacheServerLauncher`.\n- `StartServerCommandAcceptanceTest` now uses `FileUtils` instead of\n  manually opening and reading the log file.\n","date":"2018-07-25 05:44:46","modifiedFileCount":"17","status":"M","submitter":"Juan Jos? Ramos"},{"authorTime":"2019-09-10 03:51:20","codes":[{"authorDate":"2019-09-10 03:51:20","commitOrder":3,"curCode":"  public void startWithServerPortOverridesPortInCacheXml() {\n    int[] freePorts = getRandomAvailableTCPPorts(2);\n    int cacheXmlPort = freePorts[0];\n    int startPort = freePorts[1];\n    givenCacheXmlFileWithServerPort(cacheXmlPort);\n\n    launcher = startServer(newBuilder()\n        .setDisableDefaultServer(DEFAULT_SERVER_IS_NEEDED)\n        .setServerPort(startPort));\n\n    \r\n    assertThatServerPortIsInUse(startPort);\n    assertThatServerPortIsFree(cacheXmlPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(startPort);\n  }\n","date":"2019-09-20 00:42:10","endLine":182,"groupId":"104299","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"startWithServerPortOverridesPortInCacheXml","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/21/586306f90069ef323a2752605c34a682fd12e2.src","preCode":"  public void startWithServerPortOverridesPortInCacheXml() {\n    int[] freePorts = getRandomAvailableTCPPorts(2);\n    int cacheXmlPort = freePorts[0];\n    int startPort = freePorts[1];\n    givenCacheXmlFileWithServerPort(cacheXmlPort);\n\n    launcher = startServer(newBuilder()\n        .setServerPort(startPort));\n\n    \r\n    assertThatServerPortIsInUse(startPort);\n    assertThatServerPortIsFree(cacheXmlPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(startPort);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"},{"authorDate":"2019-09-10 03:51:20","commitOrder":3,"curCode":"  public void startWithServerPortOverridesDefaultWithCacheXml() {\n    givenCacheXmlFile();\n\n    launcher = awaitStart(newBuilder()\n        .setDisableDefaultServer(DEFAULT_SERVER_IS_NEEDED)\n        .setServerPort(defaultServerPort));\n\n    \r\n    assertThatServerPortIsInUse(defaultServerPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(defaultServerPort);\n  }\n","date":"2019-09-20 00:42:10","endLine":195,"groupId":"104299","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"startWithServerPortOverridesDefaultWithCacheXml","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/21/586306f90069ef323a2752605c34a682fd12e2.src","preCode":"  public void startWithServerPortOverridesDefaultWithCacheXml() {\n    givenCacheXmlFile();\n\n    launcher = awaitStart(new Builder().setMemberName(getUniqueName()).setRedirectOutput(true)\n        .setServerPort(defaultServerPort).setWorkingDirectory(getWorkingDirectoryPath())\n        .set(LOG_LEVEL, \"config\").set(MCAST_PORT, \"0\"));\n\n    \r\n    assertThatServerPortIsInUse(defaultServerPort);\n    assertThat(Integer.valueOf(launcher.status().getPort())).isEqualTo(defaultServerPort);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"}],"commitId":"6bae15ae0de35d0b39ffddfca609631d35d85ac7","commitMessage":"@@@GEODE-5940: Disable server port in many ServerLauncher tests\n\nDisable default server in all launcher tests that do not require it.\n\nThis will decrease the number of failures to launch the server caused\nby an underlying BindException because a port is already in use.\n","date":"2019-09-20 00:42:10","modifiedFileCount":"3","status":"M","submitter":"Kirk Lund"}]
