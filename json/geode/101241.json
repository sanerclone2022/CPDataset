[{"authorTime":"2020-04-15 00:45:11","codes":[{"authorDate":"2020-04-15 00:45:11","commitOrder":2,"curCode":"  public static void beforeClass() throws IOException, InterruptedException {\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter-2.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n  }\n","date":"2020-04-15 00:45:11","endLine":94,"groupId":"11747","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/64/0d92a2bef12d0c3af709042243df71c69bdfa7.src","preCode":"  public static void beforeClass() throws IOException, InterruptedException {\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter-2.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/DualServerSNIAcceptanceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"MB"},{"authorDate":"2020-04-15 00:45:11","commitOrder":2,"curCode":"  public static void beforeClass() throws IOException, InterruptedException {\n    \r\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    \r\n    Properties clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n    cache = getClientCache(clientCacheProperties);\n\n    \r\n    region = cache.<String, String>createClientRegionFactory(ClientRegionShortcut.PROXY)\n        .create(\"jellyfish\");\n    bulkData = getBulkDataMap();\n    region.putAll(bulkData);\n  }\n","date":"2020-04-15 00:45:11","endLine":102,"groupId":"8661","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/ca1c7c6ecfbb528bd4a3be823e0ef687e2082f.src","preCode":"  public static void beforeClass() throws IOException, InterruptedException {\n    \r\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    \r\n    Properties clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n    cache = getClientCache(clientCacheProperties);\n\n    \r\n    region = cache.<String, String>createClientRegionFactory(ClientRegionShortcut.PROXY)\n        .create(\"jellyfish\");\n    bulkData = getBulkDataMap();\n    region.putAll(bulkData);\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/SingleServerSNIAcceptanceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"9ce6b18e9225c79aa2d81e4b6f20e060e3a29df6","commitMessage":"@@@GEODE-7852: test SNI against a 2-node Dockerizded cluster (#4951)\n\n","date":"2020-04-15 00:45:11","modifiedFileCount":"1","status":"M","submitter":"Bill Burcham"},{"authorTime":"2020-04-15 00:45:11","codes":[{"authorDate":"2020-05-26 22:51:18","commitOrder":3,"curCode":"  public static void beforeClass() throws Exception {\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter-2.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n  }\n","date":"2020-05-26 22:51:18","endLine":93,"groupId":"11747","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7b/08be2b0429e7df2b21451514d41bb58751787e.src","preCode":"  public static void beforeClass() throws IOException, InterruptedException {\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter-2.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/DualServerSNIAcceptanceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2020-04-15 00:45:11","commitOrder":3,"curCode":"  public static void beforeClass() throws IOException, InterruptedException {\n    \r\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    \r\n    Properties clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n    cache = getClientCache(clientCacheProperties);\n\n    \r\n    region = cache.<String, String>createClientRegionFactory(ClientRegionShortcut.PROXY)\n        .create(\"jellyfish\");\n    bulkData = getBulkDataMap();\n    region.putAll(bulkData);\n  }\n","date":"2020-04-15 00:45:11","endLine":102,"groupId":"8661","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/ca1c7c6ecfbb528bd4a3be823e0ef687e2082f.src","preCode":"  public static void beforeClass() throws IOException, InterruptedException {\n    \r\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    \r\n    Properties clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n    cache = getClientCache(clientCacheProperties);\n\n    \r\n    region = cache.<String, String>createClientRegionFactory(ClientRegionShortcut.PROXY)\n        .create(\"jellyfish\");\n    bulkData = getBulkDataMap();\n    region.putAll(bulkData);\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/SingleServerSNIAcceptanceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"b22df8cf0f11b73237dd88dc1de9217f5f7cc8c3","commitMessage":"@@@GEODE-8144: endpoint identification in servers is not working (#5131)\n\n* GEODE-8144: endpoint identification in servers is not working\n\nSet the SNI server-name field in SSL parameters for p2p communications. \nallowing endpoint identification to work properly.\n\nI modified one of the SNI haproxy tests to have keystores with the\nproper subject-alternative-names for p2p communications in the docker\ncontainers and for client/server off-platform communications.  I used\nSai's keystore/truststore construction CertificateMaterial/CertStores\nclasses to generate the stores...\n\n      .sanDnsName(\"geode\") // for inside the docker container\n      .sanDnsName(\"localhost\") // for inside the docker container\n      .sanIpAddress(InetAddress.getByName(\"0.0.0.0\")) // for inside the docker container\n      .sanDnsName(certName) // for client endpoint validation (locator-maeve for instance)\n\n* modified SocketCreator to look for a hostname if one is not present and endpoint verification is enabled\n\nThis fixes some problems when running in docker containers\n\n* removed test shell script\n\n* sanction used of getCanonicalHostName() in SocketCreator","date":"2020-05-26 22:51:18","modifiedFileCount":"4","status":"M","submitter":"Bruce Schuchardt"},{"authorTime":"2020-04-15 00:45:11","codes":[{"authorDate":"2021-04-28 04:54:36","commitOrder":4,"curCode":"  public static void beforeClass() throws Exception {\n    docker.get().exec(options(\"-T\"), \"locator-maeve\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/locator-maeve.gfsh\"));\n\n    docker.get().exec(options(\"-T\"), \"server-dolores\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/server-dolores.gfsh\"));\n\n    docker.get().exec(options(\"-T\"), \"server-clementine\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/server-clementine.gfsh\"));\n\n    docker.get().exec(options(\"-T\"), \"locator-maeve\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/create-regions.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n  }\n","date":"2021-04-28 04:54:36","endLine":103,"groupId":"11747","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/74/23b9573906819e889e5dc1dc56c8679405aa18.src","preCode":"  public static void beforeClass() throws Exception {\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter-2.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/DualServerSNIAcceptanceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2020-04-15 00:45:11","commitOrder":4,"curCode":"  public static void beforeClass() throws IOException, InterruptedException {\n    \r\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    \r\n    Properties clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n    cache = getClientCache(clientCacheProperties);\n\n    \r\n    region = cache.<String, String>createClientRegionFactory(ClientRegionShortcut.PROXY)\n        .create(\"jellyfish\");\n    bulkData = getBulkDataMap();\n    region.putAll(bulkData);\n  }\n","date":"2020-04-15 00:45:11","endLine":102,"groupId":"8661","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/ca1c7c6ecfbb528bd4a3be823e0ef687e2082f.src","preCode":"  public static void beforeClass() throws IOException, InterruptedException {\n    \r\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    \r\n    Properties clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n    cache = getClientCache(clientCacheProperties);\n\n    \r\n    region = cache.<String, String>createClientRegionFactory(ClientRegionShortcut.PROXY)\n        .create(\"jellyfish\");\n    bulkData = getBulkDataMap();\n    region.putAll(bulkData);\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/SingleServerSNIAcceptanceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"55921a4d7b66a51279e71d1a665dc797fcc8ca6f","commitMessage":"@@@GEODE-9139 SSLException in starting up a Locator (#6308)\n\n* GEODE-9139 SSLException in starting up a Locator\n\nPreserve the bind-address string specified by the user for cluster communications\n\nAlso enable use of host names in member identifiers if endpoint\nvalidation is enabled.\n\n* retain the bind address string or bind address InetAddress in a HostAddress\n\nHostAndPort could not be used because there will be a port set but there\nmay not be a bindAddress set.  That class requires a host name.\n\n* fixed NPE\n\n* fixing a few problems with HostAddress\n\n* spA\n\n* fixed lgtm issue\n\n* more lgtm issues fixed\n\n* addressing Kamilla's comments\n\n* typo\n\n* simplify HostAndPort & HostAddress by creating a common superclass to hold\ntheir InetSocketAddress.\nCache the result of attempting to resolve the host name.  as suggested by\nBill.\n\n* retain the string passed in as the hostname to avoid things like 127.0.0.1 being converted to localhost\n\n* added comments about retention of the hostName parameter","date":"2021-04-28 04:54:36","modifiedFileCount":"30","status":"M","submitter":"Bruce Schuchardt"},{"authorTime":"2021-05-01 05:10:20","codes":[{"authorDate":"2021-05-01 05:10:20","commitOrder":5,"curCode":"  public static void beforeClass() {\n    docker.setContainerName(\"locator-maeve\", \"locator-maeve\");\n    docker.setContainerName(\"server-dolores\", \"server-dolores\");\n    docker.setContainerName(\"server-clementine\", \"server-clementine\");\n\n    docker.loggingExecForService(\"locator-maeve\",\n        \"gfsh\", \"run\", \"--file=/geode/scripts/locator-maeve.gfsh\");\n\n    docker.loggingExecForService(\"server-dolores\",\n        \"gfsh\", \"run\", \"--file=/geode/scripts/server-dolores.gfsh\");\n\n    docker.loggingExecForService(\"server-clementine\",\n        \"gfsh\", \"run\", \"--file=/geode/scripts/server-clementine.gfsh\");\n\n    docker.loggingExecForService(\"locator-maeve\",\n        \"gfsh\", \"run\", \"--file=/geode/scripts/create-regions.gfsh\");\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n  }\n","date":"2021-05-01 05:10:20","endLine":104,"groupId":"101241","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/60/6f95486ef64c5da6e482ba65873559014327c0.src","preCode":"  public static void beforeClass() throws Exception {\n    docker.get().exec(options(\"-T\"), \"locator-maeve\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/locator-maeve.gfsh\"));\n\n    docker.get().exec(options(\"-T\"), \"server-dolores\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/server-dolores.gfsh\"));\n\n    docker.get().exec(options(\"-T\"), \"server-clementine\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/server-clementine.gfsh\"));\n\n    docker.get().exec(options(\"-T\"), \"locator-maeve\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/create-regions.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/DualServerSNIAcceptanceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2021-05-01 05:10:20","commitOrder":5,"curCode":"  public static void beforeClass() {\n    \r\n    docker.execForService(\"geode\", \"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter.gfsh\");\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    \r\n    Properties clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n    cache = getClientCache(clientCacheProperties);\n\n    \r\n    region = cache.<String, String>createClientRegionFactory(ClientRegionShortcut.PROXY)\n        .create(\"jellyfish\");\n    bulkData = getBulkDataMap();\n    region.putAll(bulkData);\n  }\n","date":"2021-05-01 05:10:20","endLine":98,"groupId":"101241","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5c/78ea214fa3c063063313c2e52a11c05b196b79.src","preCode":"  public static void beforeClass() throws IOException, InterruptedException {\n    \r\n    docker.get().exec(options(\"-T\"), \"geode\",\n        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter.gfsh\"));\n\n    final String trustStorePath =\n        createTempFileFromResource(SingleServerSNIAcceptanceTest.class,\n            \"geode-config/truststore.jks\")\n                .getAbsolutePath();\n\n    \r\n    Properties clientCacheProperties = new Properties();\n    clientCacheProperties.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n    clientCacheProperties.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n    clientCacheProperties.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE, trustStorePath);\n    clientCacheProperties.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n    clientCacheProperties.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n    cache = getClientCache(clientCacheProperties);\n\n    \r\n    region = cache.<String, String>createClientRegionFactory(ClientRegionShortcut.PROXY)\n        .create(\"jellyfish\");\n    bulkData = getBulkDataMap();\n    region.putAll(bulkData);\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/SingleServerSNIAcceptanceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"473af500ce43a4d35e08d4d750f3b5ed9186cc99","commitMessage":"@@@GEODE-9156: Replace docker-compose-rule with testcontainers in geode-assembly (#6385)\n\nSomething to note when doing SSL testing: testcontainers does not let\nyou set the container name (using `container_name` in your compose.yml).\nThis ultimately means that reverse IP lookups produce hostnames that\nlook something like `project_service_index`. The problem is that these\nnames are not RFC compliant as they contain underscores. This can break\nsome aspects of SSL validation. I've had to work around this by renaming\ncontainers in various test classes.\n","date":"2021-05-01 05:10:20","modifiedFileCount":"5","status":"M","submitter":"Jens Deppe"}]
