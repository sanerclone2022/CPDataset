[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void cqUsingModShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID % 2 = 1\", cqa).execute();\n\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    Awaitility.await().atMost(10, TimeUnit.SECONDS)\n        .until(() -> assertEquals(2, testListener.onEventCalls));\n  }\n","date":"2018-07-18 03:54:18","endLine":92,"groupId":"37129","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cqUsingModShouldFireEventsWhenFilterCriteriaIsMet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/29/51f3ca7d7a16da14eca34f04ba215cc551d125.src","preCode":"  public void cqUsingModShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID % 2 = 1\", cqa).execute();\n\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    Awaitility.await().atMost(10, TimeUnit.SECONDS)\n        .until(() -> assertEquals(2, testListener.onEventCalls));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID + 3 > 4\", cqa).execute();\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    Awaitility.await().atMost(10, TimeUnit.SECONDS)\n        .until(() -> assertEquals(3, testListener.onEventCalls));\n  }\n","date":"2018-07-18 03:54:18","endLine":108,"groupId":"37129","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/29/51f3ca7d7a16da14eca34f04ba215cc551d125.src","preCode":"  public void cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID + 3 > 4\", cqa).execute();\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    Awaitility.await().atMost(10, TimeUnit.SECONDS)\n        .until(() -> assertEquals(3, testListener.onEventCalls));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-08-17 08:13:57","codes":[{"authorDate":"2018-08-17 08:13:57","commitOrder":2,"curCode":"  public void cqUsingModShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID % 2 = 1\", cqa).execute();\n\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    Awaitility.await().atMost(10, TimeUnit.SECONDS)\n        .untilAsserted(() -> assertEquals(2, testListener.onEventCalls));\n  }\n","date":"2018-08-18 01:08:42","endLine":92,"groupId":"37129","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cqUsingModShouldFireEventsWhenFilterCriteriaIsMet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fd/33d27c30e7c72d7b2e1a8da0c8439848adbb32.src","preCode":"  public void cqUsingModShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID % 2 = 1\", cqa).execute();\n\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    Awaitility.await().atMost(10, TimeUnit.SECONDS)\n        .until(() -> assertEquals(2, testListener.onEventCalls));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2018-08-17 08:13:57","commitOrder":2,"curCode":"  public void cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID + 3 > 4\", cqa).execute();\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    Awaitility.await().atMost(10, TimeUnit.SECONDS)\n        .untilAsserted(() -> assertEquals(3, testListener.onEventCalls));\n  }\n","date":"2018-08-18 01:08:42","endLine":108,"groupId":"37129","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fd/33d27c30e7c72d7b2e1a8da0c8439848adbb32.src","preCode":"  public void cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID + 3 > 4\", cqa).execute();\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    Awaitility.await().atMost(10, TimeUnit.SECONDS)\n        .until(() -> assertEquals(3, testListener.onEventCalls));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"f3f255a234eac78b63dc4932e1d725c20fe75706","commitMessage":"@@@GEODE-5593 Update test dependencies\n\nUpdated the following dependencies:\n\nassertj \t3.8.0 => 3.10.0\nawaitility \t2.0.0 => 3.1.1\nbcel\t\t6.0 => 6.2\ncglib\t\t3.2.4 => 3.2.7\nderby\t\t10.13.1.1 => 10.14.2.0\nhttpclient\t4.5.3 => 4.5.6\nbcel\t\t6.0 => 6.2\ncglib\t\t3.2.4 => 3.2.7\nderby\t\t10.13.1.1 => 10.14.2.0\nhttpclient\t4.5.3 => 4.5.6\nhttpcore\t4.4.6 => 4.4.10\njavax.mail\t1.4.6 => 1.6.1\njavax.persistence 2.1.1 => 2.2.0\njmock\t\t2.8.2 => 2.8.4\njson-path\t2.2.0 => 2.4.0\njunit-quickcheck 0.7 => 0.8.1\nmockito\t\t2.8.9 => 2.19.1\npowermock\t1.7.1 => 2.0.0-beta.5\nselenimum\t3.9.1 => 3.13.0\nsystem-rules\t1.17.1 => 1.18.0\nxerces\t\t2.11.0 => 2.12.0\n\nUpdated some tests due to API changes. Typically this meant\nconverting from until() to untilAsserted().  In other cases\nyou aren't allowed to throw undeclared check exceptions.\n\nUpdated and corrected powermock usage in a few places.\n\nDid not update junit-params since too many places in our\ntests use the test method name for region name (and the\ntest method name would not have been a legal region\nname).  This is an opportunity for future refactoring.\n","date":"2018-08-18 01:08:42","modifiedFileCount":"182","status":"M","submitter":"Anthony Baker"},{"authorTime":"2018-10-05 06:38:58","codes":[{"authorDate":"2018-10-05 06:38:58","commitOrder":3,"curCode":"  public void cqUsingModShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID % 2 = 1\", cqa).execute();\n\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    await()\n        .untilAsserted(() -> assertEquals(2, testListener.onEventCalls));\n  }\n","date":"2018-10-19 08:01:02","endLine":92,"groupId":"37129","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"cqUsingModShouldFireEventsWhenFilterCriteriaIsMet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/01/c195407583c6513dadbe764faae153c68391ad.src","preCode":"  public void cqUsingModShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID % 2 = 1\", cqa).execute();\n\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    Awaitility.await().atMost(10, TimeUnit.SECONDS)\n        .untilAsserted(() -> assertEquals(2, testListener.onEventCalls));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2018-10-05 06:38:58","commitOrder":3,"curCode":"  public void cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID + 3 > 4\", cqa).execute();\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    await()\n        .untilAsserted(() -> assertEquals(3, testListener.onEventCalls));\n  }\n","date":"2018-10-19 08:01:02","endLine":108,"groupId":"37129","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/01/c195407583c6513dadbe764faae153c68391ad.src","preCode":"  public void cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID + 3 > 4\", cqa).execute();\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    Awaitility.await().atMost(10, TimeUnit.SECONDS)\n        .untilAsserted(() -> assertEquals(3, testListener.onEventCalls));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"239c532f8338c9d8e9bb8062fab9fadd3376ec73","commitMessage":"@@@GEODE-5424: Changing all awaitility calls to use consistent timings\n\nWe have a lot of Awaitility calls in our tests. Each test was picking\nits own timeout. That lead to some tests picking too small of a timeout\nand failing spuriously.\n\nWith this change.  all tests will use a new factory. \nGeodeAwaility.await().  rather than Awaitility.await(). This new factory\nsets a default timeout of 5 minutes. It also sets a sensible pollDelay\nand pollInterval.\n\nThe custom timeouts used in all tests have been removed.  in favor of\nthis new factory.  except for a couple of tests that had waits greater\nthan 5 minutes.\n","date":"2018-10-19 08:01:02","modifiedFileCount":"334","status":"M","submitter":"Dan Smith"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2020-05-29 00:37:39","commitOrder":4,"curCode":"  public void cqUsingModShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from \" + SEPARATOR + \"region r where r.ID % 2 = 1\", cqa).execute();\n\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    await()\n        .untilAsserted(() -> assertEquals(2, testListener.onEventCalls));\n  }\n","date":"2020-05-29 00:37:39","endLine":93,"groupId":"10857","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"cqUsingModShouldFireEventsWhenFilterCriteriaIsMet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/41/56a3fbe5f4616648975bb566fd45b1fbe72901.src","preCode":"  public void cqUsingModShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID % 2 = 1\", cqa).execute();\n\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    await()\n        .untilAsserted(() -> assertEquals(2, testListener.onEventCalls));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-05-29 00:37:39","commitOrder":4,"curCode":"  public void cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from \" + SEPARATOR + \"region r where r.ID + 3 > 4\", cqa).execute();\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    await()\n        .untilAsserted(() -> assertEquals(3, testListener.onEventCalls));\n  }\n","date":"2020-05-29 00:37:39","endLine":109,"groupId":"10857","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/41/56a3fbe5f4616648975bb566fd45b1fbe72901.src","preCode":"  public void cqUsingPlusShouldFireEventsWhenFilterCriteriaIsMet() throws Exception {\n    qs.newCq(\"Select * from /region r where r.ID + 3 > 4\", cqa).execute();\n    server.invoke(() -> {\n      Region regionOnServer = ClusterStartupRule.getCache().getRegion(\"region\");\n      regionOnServer.put(0, new Portfolio(0));\n      regionOnServer.put(1, new Portfolio(1));\n      regionOnServer.put(2, new Portfolio(2));\n      regionOnServer.put(3, new Portfolio(3));\n      regionOnServer.put(4, new Portfolio(4));\n    });\n\n    await()\n        .untilAsserted(() -> assertEquals(3, testListener.onEventCalls));\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"}]
