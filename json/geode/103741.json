[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n\n    dsf.setAutoCompact(false);\n    DirectoryHolder.SET_DIRECTORY_SIZE_IN_BYTES_FOR_TESTING_PURPOSES = true;\n    try {\n      factory.setDiskStoreName(dsf.create(regionName).getName());\n    } finally {\n      DirectoryHolder.SET_DIRECTORY_SIZE_IN_BYTES_FOR_TESTING_PURPOSES = false;\n    }\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributes.createLIFOMemoryAttributes(maximumMegabytes,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(Region.SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","date":"2018-07-18 03:54:18","endLine":158,"groupId":"49818","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"initializeVM","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ff/c927b628391323ea5e3788ca25527e5f51bd4b.src","preCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n\n    dsf.setAutoCompact(false);\n    DirectoryHolder.SET_DIRECTORY_SIZE_IN_BYTES_FOR_TESTING_PURPOSES = true;\n    try {\n      factory.setDiskStoreName(dsf.create(regionName).getName());\n    } finally {\n      DirectoryHolder.SET_DIRECTORY_SIZE_IN_BYTES_FOR_TESTING_PURPOSES = false;\n    }\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributes.createLIFOMemoryAttributes(maximumMegabytes,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(Region.SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/LIFOEvictionAlgoMemoryEnabledRegionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n\n    dsf.setAutoCompact(false);\n    DiskStore ds = dsf.create(regionName);\n    factory.setDiskStoreName(ds.getName());\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributesImpl.createLIFOEntryAttributes(capacity,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(Region.SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","date":"2018-07-18 03:54:18","endLine":128,"groupId":"35110","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initializeVM","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b4/a804df0aab291e79f7754cc7a054ccbd4c3240.src","preCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n\n    dsf.setAutoCompact(false);\n    DiskStore ds = dsf.create(regionName);\n    factory.setDiskStoreName(ds.getName());\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributesImpl.createLIFOEntryAttributes(capacity,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(Region.SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/LIFOEvictionAlgoEnabledRegionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2019-07-20 00:58:45","commitOrder":2,"curCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n    dsf.setAutoCompact(false);\n    ((DiskStoreFactoryImpl) dsf).setDiskDirSizesUnit(DiskDirSizesUnit.BYTES);\n\n    factory.setDiskStoreName(dsf.create(regionName).getName());\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributes.createLIFOMemoryAttributes(maximumMegabytes,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(Region.SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","date":"2019-07-20 00:58:45","endLine":154,"groupId":"18659","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"initializeVM","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7f/a5f8d40a78bc5edb76fbf9dc87426800cac728.src","preCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n\n    dsf.setAutoCompact(false);\n    DirectoryHolder.SET_DIRECTORY_SIZE_IN_BYTES_FOR_TESTING_PURPOSES = true;\n    try {\n      factory.setDiskStoreName(dsf.create(regionName).getName());\n    } finally {\n      DirectoryHolder.SET_DIRECTORY_SIZE_IN_BYTES_FOR_TESTING_PURPOSES = false;\n    }\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributes.createLIFOMemoryAttributes(maximumMegabytes,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(Region.SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/LIFOEvictionAlgoMemoryEnabledRegionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n\n    dsf.setAutoCompact(false);\n    DiskStore ds = dsf.create(regionName);\n    factory.setDiskStoreName(ds.getName());\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributesImpl.createLIFOEntryAttributes(capacity,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(Region.SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","date":"2018-07-18 03:54:18","endLine":128,"groupId":"35110","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initializeVM","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b4/a804df0aab291e79f7754cc7a054ccbd4c3240.src","preCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n\n    dsf.setAutoCompact(false);\n    DiskStore ds = dsf.create(regionName);\n    factory.setDiskStoreName(ds.getName());\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributesImpl.createLIFOEntryAttributes(capacity,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(Region.SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/LIFOEvictionAlgoEnabledRegionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"N"}],"commitId":"1f8060f4c8cc0a27d1024708fe3da98d6a60f854","commitMessage":"@@@GEODE-6920: Remove test flag in DirectoryHolder (#3766)\n\n","date":"2019-07-20 00:58:45","modifiedFileCount":"12","status":"M","submitter":"Alberto Bustamante Reyes"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2020-05-29 00:37:39","commitOrder":3,"curCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n    dsf.setAutoCompact(false);\n    ((DiskStoreFactoryImpl) dsf).setDiskDirSizesUnit(DiskDirSizesUnit.BYTES);\n\n    factory.setDiskStoreName(dsf.create(regionName).getName());\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributes.createLIFOMemoryAttributes(maximumMegabytes,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","date":"2020-05-29 00:37:39","endLine":155,"groupId":"103741","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"initializeVM","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6d/ead05a8d047e0b0703741a4bc44a958c596ad8.src","preCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n    dsf.setAutoCompact(false);\n    ((DiskStoreFactoryImpl) dsf).setDiskDirSizesUnit(DiskDirSizesUnit.BYTES);\n\n    factory.setDiskStoreName(dsf.create(regionName).getName());\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributes.createLIFOMemoryAttributes(maximumMegabytes,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(Region.SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/LIFOEvictionAlgoMemoryEnabledRegionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2020-05-29 00:37:39","commitOrder":3,"curCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n\n    dsf.setAutoCompact(false);\n    DiskStore ds = dsf.create(regionName);\n    factory.setDiskStoreName(ds.getName());\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributesImpl.createLIFOEntryAttributes(capacity,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","date":"2020-05-29 00:37:39","endLine":129,"groupId":"103741","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"initializeVM","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/10/af766f58ed29997830091a0d63799bf6cab818.src","preCode":"  private static void initializeVM() throws Exception {\n    Properties props = new Properties();\n    props.setProperty(MCAST_PORT, \"0\");\n    props.setProperty(LOCATORS, \"\");\n    props.setProperty(LOG_LEVEL, \"info\"); \r\n    distributedSystem = DistributedSystem.connect(props);\n    cache = CacheFactory.create(distributedSystem);\n    assertNotNull(cache);\n    DiskStoreFactory dsf = cache.createDiskStoreFactory();\n    AttributesFactory factory = new AttributesFactory();\n    factory.setScope(Scope.LOCAL);\n\n    File dir = new File(\"testingDirectoryDefault\");\n    dir.mkdir();\n    dir.deleteOnExit();\n    File[] dirs = {dir};\n    dsf.setDiskDirsAndSizes(dirs, new int[] {Integer.MAX_VALUE});\n\n    dsf.setAutoCompact(false);\n    DiskStore ds = dsf.create(regionName);\n    factory.setDiskStoreName(ds.getName());\n    factory.setDiskSynchronous(true);\n    factory.setDataPolicy(DataPolicy.NORMAL);\n\n    \n\n    factory.setEvictionAttributes(EvictionAttributesImpl.createLIFOEntryAttributes(capacity,\n        EvictionAction.OVERFLOW_TO_DISK));\n    RegionAttributes attr = factory.create();\n\n    ((GemFireCacheImpl) cache).createRegion(regionName, attr);\n    lifoClockHand =\n        ((VMLRURegionMap) ((LocalRegion) cache.getRegion(Region.SEPARATOR + regionName)).entries)\n            .getEvictionList();\n\n    \n    lifoStats = lifoClockHand.getStatistics();\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/LIFOEvictionAlgoEnabledRegionJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"}]
