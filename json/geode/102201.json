[{"authorTime":"2019-04-13 06:47:18","codes":[{"authorDate":"2019-04-13 06:47:18","commitOrder":1,"curCode":"  public void forGatewayReceiverUnsetsSendResourceEvents() {\n    GatewayReceiver gatewayReceiver = mock(GatewayReceiver.class);\n    when(gatewayReceiver.getGatewayTransportFilters())\n        .thenReturn(singletonList(mock(GatewayTransportFilter.class)));\n    ServerBuilder builder = new ServerBuilder(cache, securityService);\n\n    builder.forGatewayReceiver(gatewayReceiver);\n\n    assertThat(builder.isSendResourceEvents()).isFalse();\n  }\n","date":"2019-05-02 00:23:16","endLine":88,"groupId":"15750","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"forGatewayReceiverUnsetsSendResourceEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/09/6dfe9cc53b9570229e886e5172d7dad61abf31.src","preCode":"  public void forGatewayReceiverUnsetsSendResourceEvents() {\n    GatewayReceiver gatewayReceiver = mock(GatewayReceiver.class);\n    when(gatewayReceiver.getGatewayTransportFilters())\n        .thenReturn(singletonList(mock(GatewayTransportFilter.class)));\n    ServerBuilder builder = new ServerBuilder(cache, securityService);\n\n    builder.forGatewayReceiver(gatewayReceiver);\n\n    assertThat(builder.isSendResourceEvents()).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/ServerBuilderTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"},{"authorDate":"2019-04-13 06:47:18","commitOrder":1,"curCode":"  public void forGatewayReceiverUnsetsIncludeMemberGroups() {\n    GatewayReceiver gatewayReceiver = mock(GatewayReceiver.class);\n    when(gatewayReceiver.getGatewayTransportFilters())\n        .thenReturn(singletonList(mock(GatewayTransportFilter.class)));\n    ServerBuilder builder = new ServerBuilder(cache, securityService);\n\n    builder.forGatewayReceiver(gatewayReceiver);\n\n    assertThat(builder.isIncludeMemberGroups()).isFalse();\n  }\n","date":"2019-05-02 00:23:16","endLine":100,"groupId":"15750","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"forGatewayReceiverUnsetsIncludeMemberGroups","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/09/6dfe9cc53b9570229e886e5172d7dad61abf31.src","preCode":"  public void forGatewayReceiverUnsetsIncludeMemberGroups() {\n    GatewayReceiver gatewayReceiver = mock(GatewayReceiver.class);\n    when(gatewayReceiver.getGatewayTransportFilters())\n        .thenReturn(singletonList(mock(GatewayTransportFilter.class)));\n    ServerBuilder builder = new ServerBuilder(cache, securityService);\n\n    builder.forGatewayReceiver(gatewayReceiver);\n\n    assertThat(builder.isIncludeMemberGroups()).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/ServerBuilderTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"1603ea0cde0fbbbf2ffdbd69a3d3c7d2cc7efd97","commitMessage":"@@@GEODE-6626: Separate CacheServer and GatewayReceiver\n\nIntroduce new interfaces and then have GatewayReceiverServer extend\nCacheServerImpl to override behavior.\n","date":"2019-05-02 00:23:16","modifiedFileCount":"48","status":"B","submitter":"Kirk Lund"},{"authorTime":"2019-08-09 00:33:26","codes":[{"authorDate":"2019-08-09 00:33:26","commitOrder":2,"curCode":"  public void forGatewayReceiverUnsetsSendResourceEvents() {\n    GatewayReceiver gatewayReceiver = mock(GatewayReceiver.class);\n    when(gatewayReceiver.getGatewayTransportFilters())\n        .thenReturn(singletonList(mock(GatewayTransportFilter.class)));\n    ServerBuilder builder = new ServerBuilder(cache, securityService, statisticsClock);\n\n    builder.forGatewayReceiver(gatewayReceiver);\n\n    assertThat(builder.isSendResourceEvents()).isFalse();\n  }\n","date":"2019-08-09 00:33:26","endLine":91,"groupId":"102201","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"forGatewayReceiverUnsetsSendResourceEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/eb/0bbdfa653ae9b6ab703e9166f7db94a9e7e073.src","preCode":"  public void forGatewayReceiverUnsetsSendResourceEvents() {\n    GatewayReceiver gatewayReceiver = mock(GatewayReceiver.class);\n    when(gatewayReceiver.getGatewayTransportFilters())\n        .thenReturn(singletonList(mock(GatewayTransportFilter.class)));\n    ServerBuilder builder = new ServerBuilder(cache, securityService);\n\n    builder.forGatewayReceiver(gatewayReceiver);\n\n    assertThat(builder.isSendResourceEvents()).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/ServerBuilderTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2019-08-09 00:33:26","commitOrder":2,"curCode":"  public void forGatewayReceiverUnsetsIncludeMemberGroups() {\n    GatewayReceiver gatewayReceiver = mock(GatewayReceiver.class);\n    when(gatewayReceiver.getGatewayTransportFilters())\n        .thenReturn(singletonList(mock(GatewayTransportFilter.class)));\n    ServerBuilder builder = new ServerBuilder(cache, securityService, statisticsClock);\n\n    builder.forGatewayReceiver(gatewayReceiver);\n\n    assertThat(builder.isIncludeMemberGroups()).isFalse();\n  }\n","date":"2019-08-09 00:33:26","endLine":103,"groupId":"102201","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"forGatewayReceiverUnsetsIncludeMemberGroups","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/eb/0bbdfa653ae9b6ab703e9166f7db94a9e7e073.src","preCode":"  public void forGatewayReceiverUnsetsIncludeMemberGroups() {\n    GatewayReceiver gatewayReceiver = mock(GatewayReceiver.class);\n    when(gatewayReceiver.getGatewayTransportFilters())\n        .thenReturn(singletonList(mock(GatewayTransportFilter.class)));\n    ServerBuilder builder = new ServerBuilder(cache, securityService);\n\n    builder.forGatewayReceiver(gatewayReceiver);\n\n    assertThat(builder.isIncludeMemberGroups()).isFalse();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/ServerBuilderTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"b49279477a4c79b90220fb34239d12c2d9e50782","commitMessage":"@@@GEODE-7010: Replace static globals in CachePerfStats with StatisticsClock (#3859)\n\n* Replace CachePerfStats.getStatTime with Cache owned StatisticsClock\n* Inject StatisticsClock dependency via constructor\n","date":"2019-08-09 00:33:26","modifiedFileCount":"134","status":"M","submitter":"Kirk Lund"}]
