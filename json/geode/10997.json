[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-31 05:13:36","commitOrder":2,"curCode":"  protected void doPutAndGetSessionOnAllClients() throws IOException, URISyntaxException {\n    \r\n    manager.startAllInactiveContainers();\n\n    String key = \"value_testSessionPersists\";\n    String value = \"Foo\";\n\n    client.setPort(Integer.parseInt(manager.getContainerPort(0)));\n    Client.Response resp = client.set(key, value);\n    String cookie = resp.getSessionCookie();\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      System.out.println(\"Checking get for container:\" + i);\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.get(key);\n\n      assertEquals(\"Sessions are not replicating properly\", cookie, resp.getSessionCookie());\n      assertEquals(\"Session data is not replicating properly\", value, resp.getResponse());\n    }\n  }\n","date":"2018-07-31 05:13:36","endLine":197,"groupId":"11878","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doPutAndGetSessionOnAllClients","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2d/26c30b3246e1baa29f5ec04b3c9bb9e8de2783.src","preCode":"  protected void doPutAndGetSessionOnAllClients() throws IOException, URISyntaxException {\n    \r\n    manager.startAllInactiveContainers();\n\n    String key = \"value_testSessionPersists\";\n    String value = \"Foo\";\n\n    client.setPort(Integer.parseInt(manager.getContainerPort(0)));\n    Client.Response resp = client.set(key, value);\n    String cookie = resp.getSessionCookie();\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      System.out.println(\"Checking get for container:\" + i);\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.get(key);\n\n      assertEquals(\"Sessions are not replicating properly\", cookie, resp.getSessionCookie());\n      assertEquals(\"Session data is not replicating properly\", value, resp.getResponse());\n    }\n  }\n","realPath":"geode-assembly/src/upgradeTest/java/org/apache/geode/session/tests/TomcatSessionBackwardsCompatibilityTestBase.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  public void shouldNotLeaveNativeSessionInContainer()\n      throws IOException, URISyntaxException, InterruptedException {\n    manager.startAllInactiveContainers();\n\n    String key = \"value_testSessionExpiration\";\n    String value = \"Foo\";\n\n    client.setPort(Integer.parseInt(manager.getContainerPort(0)));\n    Client.Response resp = client.set(key, value);\n    String cookie = resp.getSessionCookie();\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.get(key);\n\n      assertEquals(\"Sessions are not replicating properly\", cookie, resp.getSessionCookie());\n      assertEquals(value, resp.getResponse());\n    }\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.executionFunction(GetSessionCount.class);\n      assertEquals(\"Should have 0 native sessions\", \"0\", resp.getResponse());\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":91,"groupId":"13418","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldNotLeaveNativeSessionInContainer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a6/be1eddd29e852a8a99ee2d9bd5317c6da4e0c2.src","preCode":"  public void shouldNotLeaveNativeSessionInContainer()\n      throws IOException, URISyntaxException, InterruptedException {\n    manager.startAllInactiveContainers();\n\n    String key = \"value_testSessionExpiration\";\n    String value = \"Foo\";\n\n    client.setPort(Integer.parseInt(manager.getContainerPort(0)));\n    Client.Response resp = client.set(key, value);\n    String cookie = resp.getSessionCookie();\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.get(key);\n\n      assertEquals(\"Sessions are not replicating properly\", cookie, resp.getSessionCookie());\n      assertEquals(value, resp.getResponse());\n    }\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.executionFunction(GetSessionCount.class);\n      assertEquals(\"Should have 0 native sessions\", \"0\", resp.getResponse());\n    }\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/session/tests/GenericAppServerClientServerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"NB"}],"commitId":"ee29dc62d15f6cdba452026dc41a3b71e02e2b97","commitMessage":"@@@GEODE-5490: Moves backwards compatibility tests in to upgradeTest. (#2221)\n\n* Split up TomcatSessionBackwardsCompatibilityTest\n* Split up TxCommitMessageBackwardsCompatibilityDUnitTest\n","date":"2018-07-31 05:13:36","modifiedFileCount":"0","status":"M","submitter":"Jacob Barrett"},{"authorTime":"2018-11-02 04:37:00","codes":[{"authorDate":"2018-07-31 05:13:36","commitOrder":3,"curCode":"  protected void doPutAndGetSessionOnAllClients() throws IOException, URISyntaxException {\n    \r\n    manager.startAllInactiveContainers();\n\n    String key = \"value_testSessionPersists\";\n    String value = \"Foo\";\n\n    client.setPort(Integer.parseInt(manager.getContainerPort(0)));\n    Client.Response resp = client.set(key, value);\n    String cookie = resp.getSessionCookie();\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      System.out.println(\"Checking get for container:\" + i);\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.get(key);\n\n      assertEquals(\"Sessions are not replicating properly\", cookie, resp.getSessionCookie());\n      assertEquals(\"Session data is not replicating properly\", value, resp.getResponse());\n    }\n  }\n","date":"2018-07-31 05:13:36","endLine":197,"groupId":"10997","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doPutAndGetSessionOnAllClients","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2d/26c30b3246e1baa29f5ec04b3c9bb9e8de2783.src","preCode":"  protected void doPutAndGetSessionOnAllClients() throws IOException, URISyntaxException {\n    \r\n    manager.startAllInactiveContainers();\n\n    String key = \"value_testSessionPersists\";\n    String value = \"Foo\";\n\n    client.setPort(Integer.parseInt(manager.getContainerPort(0)));\n    Client.Response resp = client.set(key, value);\n    String cookie = resp.getSessionCookie();\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      System.out.println(\"Checking get for container:\" + i);\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.get(key);\n\n      assertEquals(\"Sessions are not replicating properly\", cookie, resp.getSessionCookie());\n      assertEquals(\"Session data is not replicating properly\", value, resp.getResponse());\n    }\n  }\n","realPath":"geode-assembly/src/upgradeTest/java/org/apache/geode/session/tests/TomcatSessionBackwardsCompatibilityTestBase.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"N"},{"authorDate":"2018-11-02 04:37:00","commitOrder":3,"curCode":"  public void shouldNotLeaveNativeSessionInContainer()\n      throws Exception {\n    manager.startAllInactiveContainers();\n\n    String key = \"value_testSessionExpiration\";\n    String value = \"Foo\";\n\n    client.setPort(Integer.parseInt(manager.getContainerPort(0)));\n    Client.Response resp = client.set(key, value);\n    String cookie = resp.getSessionCookie();\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.get(key);\n\n      assertEquals(\"Sessions are not replicating properly\", cookie, resp.getSessionCookie());\n      assertEquals(value, resp.getResponse());\n    }\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.executionFunction(GetSessionCount.class);\n      assertEquals(\"Should have 0 native sessions\", \"0\", resp.getResponse());\n    }\n  }\n","date":"2018-12-18 02:58:30","endLine":75,"groupId":"10997","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"shouldNotLeaveNativeSessionInContainer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b3/2a8c9a5069d0e56a6a8e207189f978cbce041e.src","preCode":"  public void shouldNotLeaveNativeSessionInContainer()\n      throws IOException, URISyntaxException, InterruptedException {\n    manager.startAllInactiveContainers();\n\n    String key = \"value_testSessionExpiration\";\n    String value = \"Foo\";\n\n    client.setPort(Integer.parseInt(manager.getContainerPort(0)));\n    Client.Response resp = client.set(key, value);\n    String cookie = resp.getSessionCookie();\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.get(key);\n\n      assertEquals(\"Sessions are not replicating properly\", cookie, resp.getSessionCookie());\n      assertEquals(value, resp.getResponse());\n    }\n\n    for (int i = 0; i < manager.numContainers(); i++) {\n      client.setPort(Integer.parseInt(manager.getContainerPort(i)));\n      resp = client.executionFunction(GetSessionCount.class);\n      assertEquals(\"Should have 0 native sessions\", \"0\", resp.getResponse());\n    }\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/session/tests/GenericAppServerClientServerTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"f98547f4b52fe6b70b46de3823bf4bd3b1c9dd7b","commitMessage":"@@@GEODE-3613: Allocate unique ports to containers\n\nServerContainer sometimes assigned the same port to multiple containers.\n\nServerContainer used AvailablePortHelper to allocate available ports.\nDue to an inherent design flaw.  AvailablePortHelper sometimes delivers\nthe same port number on multiple calls.  which results in the same port\nbeing used for multiple purposes.\n\nServerContainer now allocates ports using a single UniquePortSupplier\ncreated by the test.\n\nAdditionally:\n\n- Convert Cargo-based tests from DUnit base class to rule-based\n- Start a new locator for each test\n- Add cargo version to dependency-versions.properties\n- Give each test class its own temp directory\n- Fix bad check for container state validity\n- Fix modify_war script to detect missing jar command and abort\n- General test cleanup and de-duplication\n- Announce start and end of each test to stdout\n\nCo-Authored-By: Galen O'Sullivan <gosullivan@pivotal.io>\nCo-Authored-By: Dale Emery <demery@pivotal.io>\n","date":"2018-12-18 02:58:30","modifiedFileCount":"21","status":"M","submitter":"Dale Emery"}]
