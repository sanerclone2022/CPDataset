[{"authorTime":"2019-03-09 04:53:11","codes":[{"authorDate":"2019-03-09 04:53:11","commitOrder":1,"curCode":"  public void createRegion_NoUser() throws Exception {\n    cmsClient = ClusterManagementServiceProvider.getService(\"localhost\", locator.getHttpPort(),\n        sslContext, hostnameVerifier, null, null);\n\n    ClusterManagementResult result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n  }\n","date":"2019-03-09 04:53:11","endLine":137,"groupId":"18513","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6e/f47cfca7c39df69c8118a0a20f515f99cd3f86.src","preCode":"  public void createRegion_NoUser() throws Exception {\n    cmsClient = ClusterManagementServiceProvider.getService(\"localhost\", locator.getHttpPort(),\n        sslContext, hostnameVerifier, null, null);\n\n    ClusterManagementResult result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"},{"authorDate":"2019-03-09 04:53:11","commitOrder":1,"curCode":"  public void createRegion_NoPrivilege() throws Exception {\n    cmsClient = ClusterManagementServiceProvider.getService(\"localhost\", locator.getHttpPort(),\n        sslContext, hostnameVerifier, \"dataRead\", \"dataRead\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n  }\n","date":"2019-03-09 04:53:11","endLine":158,"groupId":"10861","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6e/f47cfca7c39df69c8118a0a20f515f99cd3f86.src","preCode":"  public void createRegion_NoPrivilege() throws Exception {\n    cmsClient = ClusterManagementServiceProvider.getService(\"localhost\", locator.getHttpPort(),\n        sslContext, hostnameVerifier, \"dataRead\", \"dataRead\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"}],"commitId":"79dbd01d57ae7e9df32976aa993394bf5767df03","commitMessage":"@@@GEODE-6450: ClientClusterManagementService supports ssl connection (#3276)\n\nCo-authored-by: Jens Deppe <jdeppe@pivotal.io>\n\n* provide capability for the client to configure ssl connection when getting the cluster management service.\n* from the server side.  create the SSLContext from the ssl configuration specified on the server\n* refactor ssl code\n","date":"2019-03-09 04:53:11","modifiedFileCount":"18","status":"B","submitter":"jinmeiliao"},{"authorTime":"2019-05-03 22:53:16","codes":[{"authorDate":"2019-05-03 22:53:16","commitOrder":2,"curCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementServiceConfig config = JavaClientClusterManagementServiceConfig.builder()\n          .setHost(\"localhost\")\n          .setPort(httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n      ClusterManagementService cmsClient = new ClientClusterManagementService(config);\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","date":"2019-05-03 22:53:16","endLine":189,"groupId":"33210","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/56/76b123a80f0239c475e2dc6241b1a8f166157f.src","preCode":"  public void createRegion_NoUser() throws Exception {\n    cmsClient = ClusterManagementServiceProvider.getService(\"localhost\", locator.getHttpPort(),\n        sslContext, hostnameVerifier, null, null);\n\n    ClusterManagementResult result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2019-05-03 22:53:16","commitOrder":2,"curCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementServiceConfig config = JavaClientClusterManagementServiceConfig.builder()\n          .setHost(\"localhost\")\n          .setPort(httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setUsername(\"dataRead\")\n          .setPassword(\"dataRead\")\n          .build();\n      ClusterManagementService cmsClient = new ClientClusterManagementService(config);\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","date":"2019-05-03 22:53:16","endLine":241,"groupId":"33209","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/56/76b123a80f0239c475e2dc6241b1a8f166157f.src","preCode":"  public void createRegion_NoPrivilege() throws Exception {\n    cmsClient = ClusterManagementServiceProvider.getService(\"localhost\", locator.getHttpPort(),\n        sslContext, hostnameVerifier, \"dataRead\", \"dataRead\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"}],"commitId":"a39ab8e362451979ac883be62e836a421752c2cd","commitMessage":"@@@GEODE-6678: Remove singleton cache reference from ClusterManagementServiceProvider (#3496)\n\n","date":"2019-05-03 22:53:16","modifiedFileCount":"18","status":"M","submitter":"Jens Deppe"},{"authorTime":"2019-05-12 01:42:15","codes":[{"authorDate":"2019-05-12 01:42:15","commitOrder":3,"curCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementServiceConfig config = JavaClientClusterManagementServiceConfig.builder()\n          .setHost(\"localhost\")\n          .setPort(httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n      ClusterManagementService cmsClient = new ClientClusterManagementService(config);\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","date":"2019-05-12 01:42:15","endLine":194,"groupId":"33210","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/68/8bd853fff33a7decb78f78193e16d6c384897b.src","preCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementServiceConfig config = JavaClientClusterManagementServiceConfig.builder()\n          .setHost(\"localhost\")\n          .setPort(httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n      ClusterManagementService cmsClient = new ClientClusterManagementService(config);\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2019-05-12 01:42:15","commitOrder":3,"curCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementServiceConfig config = JavaClientClusterManagementServiceConfig.builder()\n          .setHost(\"localhost\")\n          .setPort(httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setUsername(\"dataRead\")\n          .setPassword(\"dataRead\")\n          .build();\n      ClusterManagementService cmsClient = new ClientClusterManagementService(config);\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","date":"2019-05-12 01:42:15","endLine":248,"groupId":"33209","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/68/8bd853fff33a7decb78f78193e16d6c384897b.src","preCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementServiceConfig config = JavaClientClusterManagementServiceConfig.builder()\n          .setHost(\"localhost\")\n          .setPort(httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setUsername(\"dataRead\")\n          .setPassword(\"dataRead\")\n          .build();\n      ClusterManagementService cmsClient = new ClientClusterManagementService(config);\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"}],"commitId":"1f458c9516d476f0889708210e76e892985f41c7","commitMessage":"@@@GEODE-6756: rework type and regionAttributes setter/getter (#3578)\n\nCo-authored-by: Jens Deppe <jdeppe@pivotal.io>\n\n* make type a required attribute for RegionConfig\n* Do the type to attributes mapping in the RegionConfigValidator for the ultimate attributes validation.","date":"2019-05-12 01:42:15","modifiedFileCount":"15","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-05-21 04:51:07","codes":[{"authorDate":"2019-05-21 04:51:07","commitOrder":4,"curCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","date":"2019-05-21 04:51:07","endLine":176,"groupId":"10861","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6b/aaead832b1ab5e00b02eb6b63d0f56ec511182.src","preCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementServiceConfig config = JavaClientClusterManagementServiceConfig.builder()\n          .setHost(\"localhost\")\n          .setPort(httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n      ClusterManagementService cmsClient = new ClientClusterManagementService(config);\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2019-05-21 04:51:07","commitOrder":4,"curCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","date":"2019-05-21 04:51:07","endLine":221,"groupId":"16188","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6b/aaead832b1ab5e00b02eb6b63d0f56ec511182.src","preCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementServiceConfig config = JavaClientClusterManagementServiceConfig.builder()\n          .setHost(\"localhost\")\n          .setPort(httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setUsername(\"dataRead\")\n          .setPassword(\"dataRead\")\n          .build();\n      ClusterManagementService cmsClient = new ClientClusterManagementService(config);\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"0de72a97bc487b497204ef835540482fe31bf8cb","commitMessage":"@@@GEODE-6678: use builder to build ClusterManagementService (#3554)\n\n\n","date":"2019-05-21 04:51:07","modifiedFileCount":"18","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-06-19 06:26:48","codes":[{"authorDate":"2019-06-19 06:26:48","commitOrder":5,"curCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","date":"2019-06-19 06:26:48","endLine":176,"groupId":"10861","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cd/2eebdd39de592f5ec3e5e5910106aa4ada439a.src","preCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2019-06-19 06:26:48","commitOrder":5,"curCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","date":"2019-06-19 06:26:48","endLine":221,"groupId":"10861","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cd/2eebdd39de592f5ec3e5e5910106aa4ada439a.src","preCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"a60ade270e3dc1901fe900e2521351bdc93ecced","commitMessage":"@@@GEODE-6861: Generify ClusterManagementService (#3708)\n\n* GEODE-6861: Generify ClusterManagementService","date":"2019-06-19 06:26:48","modifiedFileCount":"50","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-06-28 00:27:11","codes":[{"authorDate":"2019-06-28 00:27:11","commitOrder":6,"curCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      SimpleClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","date":"2019-06-28 00:27:11","endLine":179,"groupId":"10861","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2e/2be146f8a08253b218b20a080f08b7f80ebf45.src","preCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2019-06-28 00:27:11","commitOrder":6,"curCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      SimpleClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","date":"2019-06-28 00:27:11","endLine":224,"groupId":"16188","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2e/2be146f8a08253b218b20a080f08b7f80ebf45.src","preCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"M"}],"commitId":"b3157c94cd9738be618b59b3f0ab064a9356a589","commitMessage":"@@@* GEODE-6861: have create/delete/update return SimpleClusterManagementResult which does not need generics.\n\nCo-authored-by: Joris Melchior <joris.melchior@gmail.com>\n\n\n","date":"2019-06-28 00:27:11","modifiedFileCount":"25","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-06-28 01:35:06","codes":[{"authorDate":"2019-06-28 01:35:06","commitOrder":7,"curCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","date":"2019-06-28 01:35:06","endLine":178,"groupId":"10861","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/66/98d525ed7c721c9237552dc2e6e77a5dd9c9b3.src","preCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      SimpleClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2019-06-28 01:35:06","commitOrder":7,"curCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","date":"2019-06-28 01:35:06","endLine":223,"groupId":"10861","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/66/98d525ed7c721c9237552dc2e6e77a5dd9c9b3.src","preCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      SimpleClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"24fc3195e214cdbcacc6688c5045747e32c62bc1","commitMessage":"@@@Revert \"* GEODE-6861: have create/delete/update return SimpleClusterManagementResult which does not need generics.\"\n\nThis reverts commit b3157c94\n","date":"2019-06-28 01:35:06","modifiedFileCount":"25","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-06-29 02:10:02","codes":[{"authorDate":"2019-06-29 02:10:02","commitOrder":8,"curCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      ClusterManagementResult<?, ?> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","date":"2019-06-29 02:10:02","endLine":178,"groupId":"10861","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5d/196147e5793ba50e9f15195713e3962ae62dc6.src","preCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2019-06-29 02:10:02","commitOrder":8,"curCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      ClusterManagementResult<?, ?> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","date":"2019-06-29 02:10:02","endLine":223,"groupId":"10861","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5d/196147e5793ba50e9f15195713e3962ae62dc6.src","preCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"2c39f92dc5fa129058144a9ec16606092dc3d51e","commitMessage":"@@@GEODE-6861: separate static config object from runtime info in the Cl? (#3754)\n\nCo-authored-by: Joris Melchior <joris.melchior@gmail.com>\n\n* use ConfigRealizer to retrieve the runtime information for configuration on each member\n* list result would return a List of Response object which has a configuration object and a list runtime objects\n* use existing object for runtime member info and move them to geode-management module.\n","date":"2019-06-29 02:10:02","modifiedFileCount":"61","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-07-12 06:08:46","codes":[{"authorDate":"2019-07-12 06:08:46","commitOrder":9,"curCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","date":"2019-07-12 06:08:46","endLine":178,"groupId":"10861","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/3f/e8906aa7f355cf721516cc056def17a23fad6c.src","preCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      ClusterManagementResult<?, ?> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2019-07-12 06:08:46","commitOrder":9,"curCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","date":"2019-07-12 06:08:46","endLine":223,"groupId":"16188","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/3f/e8906aa7f355cf721516cc056def17a23fad6c.src","preCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      ClusterManagementResult<?, ?> result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"592875c12cf723be42d62747efcc71a97887cfd4","commitMessage":"@@@GEODE-6897: refactor ClusterManagementResult into subclasses (#3793)\n\n* GEODE-6897: refactoring of ClusterManagementResult into subclasses","date":"2019-07-12 06:08:46","modifiedFileCount":"30","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-08-01 12:10:06","codes":[{"authorDate":"2019-08-01 12:10:06","commitOrder":10,"curCode":"  public void createRegion_NoUser() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHENTICATED\");\n    });\n  }\n","date":"2019-08-01 12:10:06","endLine":173,"groupId":"10861","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/75/8f1c99199fdf99d322364788222a6b7a1d959b.src","preCode":"  public void createRegion_NoUser() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode())\n          .isEqualTo(ClusterManagementResult.StatusCode.UNAUTHENTICATED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2019-08-01 12:10:06","commitOrder":10,"curCode":"  public void createRegion_NoPrivilege() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHORIZED\");\n    });\n  }\n","date":"2019-08-01 12:10:06","endLine":213,"groupId":"10861","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/75/8f1c99199fdf99d322364788222a6b7a1d959b.src","preCode":"  public void createRegion_NoPrivilege() throws Exception {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      ClusterManagementResult result = cmsClient.create(region);\n      assertThat(result.isSuccessful()).isFalse();\n      assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.UNAUTHORIZED);\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"e2855b4d2359c8a7f402f8dbd011292645b94b5a","commitMessage":"@@@GEODE-7024: raise a Java exception on non-success response from REST API (#3861)\n\n* GEODE-7024: raise a Java exception on non-success response from REST call","date":"2019-08-01 12:10:06","modifiedFileCount":"17","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-08-16 05:45:33","codes":[{"authorDate":"2019-08-16 05:45:33","commitOrder":11,"curCode":"  public void createRegion_NoUser() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHENTICATED\");\n    });\n  }\n","date":"2019-08-16 05:45:33","endLine":173,"groupId":"10861","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/28/bc3d76688598fbb329e21c1c2260e3e1eaab2c.src","preCode":"  public void createRegion_NoUser() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHENTICATED\");\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2019-08-16 05:45:33","commitOrder":11,"curCode":"  public void createRegion_NoPrivilege() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHORIZED\");\n    });\n  }\n","date":"2019-08-16 05:45:33","endLine":213,"groupId":"10861","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/28/bc3d76688598fbb329e21c1c2260e3e1eaab2c.src","preCode":"  public void createRegion_NoPrivilege() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHORIZED\");\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"550e19e9c9bfd147a387c56019f00dbf162a2b26","commitMessage":"@@@GEODE-6945:geode-managment should create its own set of configuration? (#3928)\n\nCo-authored-by: Darrel Schneider <dschneider@pivotal.io>\n\n* do not use xml domain object for region configuration\n* add RegionType.UNSUPPORTED\n","date":"2019-08-16 05:45:33","modifiedFileCount":"40","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2020-01-22 07:31:35","codes":[{"authorDate":"2020-01-22 07:31:35","commitOrder":12,"curCode":"  public void createRegion_NoUser() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient =\n          new ClusterManagementServiceBuilder().setConnectionConfig(\n              new BaseConnectionConfig(\"localhost\", httpPort)\n                  .setSslContext(sslContext).setHostnameVerifier(hostnameVerifier))\n              .build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHENTICATED\");\n    });\n  }\n","date":"2020-01-22 07:31:35","endLine":178,"groupId":"14637","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ec/67fb00de25c7e808e94bb7a18fdb90499b42f2.src","preCode":"  public void createRegion_NoUser() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHENTICATED\");\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"},{"authorDate":"2020-01-22 07:31:35","commitOrder":12,"curCode":"  public void createRegion_NoPrivilege() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient =\n          new ClusterManagementServiceBuilder().setConnectionConfig(\n              new BaseConnectionConfig(\"localhost\", httpPort)\n                  .setSslContext(sslContext).setUsername(\"dataRead\").setPassword(\"dataRead\")\n                  .setHostnameVerifier(hostnameVerifier))\n              .build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHORIZED\");\n    });\n  }\n","date":"2020-01-22 07:31:35","endLine":220,"groupId":"14637","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ec/67fb00de25c7e808e94bb7a18fdb90499b42f2.src","preCode":"  public void createRegion_NoPrivilege() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient = buildWithHostAddress()\n          .setHostAddress(\"localhost\", httpPort)\n          .setSslContext(sslContext)\n          .setHostnameVerifier(hostnameVerifier)\n          .setCredentials(\"dataRead\", \"dataRead\").build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHORIZED\");\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"efe5f70cf7641e42a9892cf9a949e46f9a989a5e","commitMessage":"@@@GEODE-7715: Introduce Transport and Config interfaces to ClusterManagementServiceBuilder (#4601)\n\nThis introduces several new interfaces to the `ClusterManagementService`. These are:\n\n- `ClusterManagmentServiceTransport` which represents the message exchange between client and endpoint.\n- `ClusterManagementServiceConnectionConfig` which is a data object and represents various properties required to establish a connection.\n","date":"2020-01-22 07:31:35","modifiedFileCount":"33","status":"M","submitter":"Patrick Johnson"},{"authorTime":"2020-02-06 05:47:39","codes":[{"authorDate":"2020-02-06 05:47:39","commitOrder":13,"curCode":"  public void createRegion_NoUser() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient =\n          new ClusterManagementServiceBuilder()\n              .setPort(httpPort)\n              .setSslContext(sslContext)\n              .setHostnameVerifier(hostnameVerifier)\n              .build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHENTICATED\");\n    });\n  }\n","date":"2020-02-06 05:47:39","endLine":184,"groupId":"101513","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion_NoUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/59/9b3e722ab959b1731db8f9445a145fab62380d.src","preCode":"  public void createRegion_NoUser() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n\n      ClusterManagementService cmsClient =\n          new ClusterManagementServiceBuilder().setConnectionConfig(\n              new BaseConnectionConfig(\"localhost\", httpPort)\n                  .setSslContext(sslContext).setHostnameVerifier(hostnameVerifier))\n              .build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHENTICATED\");\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2020-02-06 05:47:39","commitOrder":13,"curCode":"  public void createRegion_NoPrivilege() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient =\n          new ClusterManagementServiceBuilder()\n              .setPort(httpPort)\n              .setSslContext(sslContext)\n              .setUsername(\"dataRead\")\n              .setPassword(\"dataRead\")\n              .setHostnameVerifier(hostnameVerifier)\n              .build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHORIZED\");\n    });\n  }\n","date":"2020-02-06 05:47:39","endLine":230,"groupId":"101513","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegion_NoPrivilege","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/59/9b3e722ab959b1731db8f9445a145fab62380d.src","preCode":"  public void createRegion_NoPrivilege() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n    int httpPort = locator.getHttpPort();\n\n    client.invoke(() -> {\n      SSLContext sslContext = SSLContext.getDefault();\n      HostnameVerifier hostnameVerifier = new NoopHostnameVerifier();\n      ClusterManagementService cmsClient =\n          new ClusterManagementServiceBuilder().setConnectionConfig(\n              new BaseConnectionConfig(\"localhost\", httpPort)\n                  .setSslContext(sslContext).setUsername(\"dataRead\").setPassword(\"dataRead\")\n                  .setHostnameVerifier(hostnameVerifier))\n              .build();\n\n      assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"UNAUTHORIZED\");\n    });\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementSSLTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"}],"commitId":"7028f601680fee3f57cbdff63951128d7180ca13","commitMessage":"@@@GEODE-7752: Removed the current optionality on the ClusterManagementServiceBuilder. (#4650)\n\nThe Transport is not responsible to set the ConnectionConfig.","date":"2020-02-06 05:47:39","modifiedFileCount":"29","status":"M","submitter":"Udo Kohlmeyer"}]
