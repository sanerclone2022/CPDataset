[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testHintMultiIndexWithCompiledIn() throws Exception {\n    createRegion();\n    populateData(1000);\n    \r\n    createIndex(\"IDIndex\", \"p.ID\", \"/Portfolios p\");\n    createIndex(\"SecIndex\", \"p.status\", \"/Portfolios p\");\n    createIndex(\"DescriptionIndex\", \"p.description\", \"/Portfolios p\");\n    \r\n    QueryObserverImpl observer = new QueryObserverImpl();\n    QueryObserverHolder.setInstance(observer);\n    \r\n    SelectResults[][] results = new SelectResults[1][2];\n    QueryService qs = CacheUtils.getQueryService();\n    Query query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'IDIndex', 'SecIndex', 'DescriptionIndex'>select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][0] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"IDIndex\"));\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    observer.reset();\n\n    query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    assertFalse(observer.wasIndexUsed(\"DescriptionIndex\"));\n    \r\n    observer.reset();\n\n    \r\n    StructSetOrResultsSet ssOrrs = new StructSetOrResultsSet();\n    assertEquals(95, results[0][1].size());\n    \r\n    \r\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n\n    query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'DescriptionIndex'>select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"DescriptionIndex\"));\n    assertFalse(observer.wasIndexUsed(\"SecIndex\"));\n    \r\n\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n  }\n","date":"2018-07-18 03:54:18","endLine":466,"groupId":"20624","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testHintMultiIndexWithCompiledIn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/62/629c5e0680b870f025b915e90b85b300427cc6.src","preCode":"  public void testHintMultiIndexWithCompiledIn() throws Exception {\n    createRegion();\n    populateData(1000);\n    \r\n    createIndex(\"IDIndex\", \"p.ID\", \"/Portfolios p\");\n    createIndex(\"SecIndex\", \"p.status\", \"/Portfolios p\");\n    createIndex(\"DescriptionIndex\", \"p.description\", \"/Portfolios p\");\n    \r\n    QueryObserverImpl observer = new QueryObserverImpl();\n    QueryObserverHolder.setInstance(observer);\n    \r\n    SelectResults[][] results = new SelectResults[1][2];\n    QueryService qs = CacheUtils.getQueryService();\n    Query query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'IDIndex', 'SecIndex', 'DescriptionIndex'>select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][0] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"IDIndex\"));\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    observer.reset();\n\n    query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    assertFalse(observer.wasIndexUsed(\"DescriptionIndex\"));\n    \r\n    observer.reset();\n\n    \r\n    StructSetOrResultsSet ssOrrs = new StructSetOrResultsSet();\n    assertEquals(95, results[0][1].size());\n    \r\n    \r\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n\n    query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'DescriptionIndex'>select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"DescriptionIndex\"));\n    assertFalse(observer.wasIndexUsed(\"SecIndex\"));\n    \r\n\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/IndexHintJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":416,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testHintNestedCompiledIn() throws Exception {\n    createRegion();\n    populateData(1000);\n    \r\n    createIndex(\"IDIndex\", \"p.ID\", \"/Portfolios p\");\n    createIndex(\"SecIndex\", \"p.status\", \"/Portfolios p\");\n    createIndex(\"DescriptionIndex\", \"p.description\", \"/Portfolios p\");\n    \r\n    QueryObserverImpl observer = new QueryObserverImpl();\n    QueryObserverHolder.setInstance(observer);\n    \r\n    SelectResults[][] results = new SelectResults[1][2];\n    QueryService qs = CacheUtils.getQueryService();\n    Query query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'IDIndex', 'SecIndex', 'DescriptionIndex'>select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][0] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"IDIndex\"));\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    \r\n    assertFalse(observer.wasIndexUsed(\"DescriptionIndex\"));\n    observer.reset();\n\n    \r\n    query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    observer.reset();\n\n    \r\n    StructSetOrResultsSet ssOrrs = new StructSetOrResultsSet();\n    assertEquals(95, results[0][1].size());\n    \r\n    \r\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n  }\n","date":"2018-07-18 03:54:18","endLine":509,"groupId":"34442","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testHintNestedCompiledIn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/62/629c5e0680b870f025b915e90b85b300427cc6.src","preCode":"  public void testHintNestedCompiledIn() throws Exception {\n    createRegion();\n    populateData(1000);\n    \r\n    createIndex(\"IDIndex\", \"p.ID\", \"/Portfolios p\");\n    createIndex(\"SecIndex\", \"p.status\", \"/Portfolios p\");\n    createIndex(\"DescriptionIndex\", \"p.description\", \"/Portfolios p\");\n    \r\n    QueryObserverImpl observer = new QueryObserverImpl();\n    QueryObserverHolder.setInstance(observer);\n    \r\n    SelectResults[][] results = new SelectResults[1][2];\n    QueryService qs = CacheUtils.getQueryService();\n    Query query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'IDIndex', 'SecIndex', 'DescriptionIndex'>select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][0] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"IDIndex\"));\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    \r\n    assertFalse(observer.wasIndexUsed(\"DescriptionIndex\"));\n    observer.reset();\n\n    \r\n    query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    observer.reset();\n\n    \r\n    StructSetOrResultsSet ssOrrs = new StructSetOrResultsSet();\n    assertEquals(95, results[0][1].size());\n    \r\n    \r\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/IndexHintJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":472,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2020-05-29 00:37:39","commitOrder":2,"curCode":"  public void testHintMultiIndexWithCompiledIn() throws Exception {\n    createRegion();\n    populateData(1000);\n    \r\n    createIndex(\"IDIndex\", \"p.ID\", SEPARATOR + \"Portfolios p\");\n    createIndex(\"SecIndex\", \"p.status\", SEPARATOR + \"Portfolios p\");\n    createIndex(\"DescriptionIndex\", \"p.description\", SEPARATOR + \"Portfolios p\");\n    \r\n    QueryObserverImpl observer = new QueryObserverImpl();\n    QueryObserverHolder.setInstance(observer);\n    \r\n    SelectResults[][] results = new SelectResults[1][2];\n    QueryService qs = CacheUtils.getQueryService();\n    Query query = qs.newQuery(\n        \"select * from \" + SEPARATOR\n            + \"Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'IDIndex', 'SecIndex', 'DescriptionIndex'>select p.description from \"\n            + SEPARATOR + \"Portfolios p where p.ID > 10)\");\n    results[0][0] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"IDIndex\"));\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    observer.reset();\n\n    query = qs.newQuery(\n        \"select * from \" + SEPARATOR\n            + \"Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (select p.description from \"\n            + SEPARATOR + \"Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    assertFalse(observer.wasIndexUsed(\"DescriptionIndex\"));\n    \r\n    observer.reset();\n\n    \r\n    StructSetOrResultsSet ssOrrs = new StructSetOrResultsSet();\n    assertEquals(95, results[0][1].size());\n    \r\n    \r\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n\n    query = qs.newQuery(\n        \"select * from \" + SEPARATOR\n            + \"Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'DescriptionIndex'>select p.description from \"\n            + SEPARATOR + \"Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"DescriptionIndex\"));\n    assertFalse(observer.wasIndexUsed(\"SecIndex\"));\n    \r\n\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n  }\n","date":"2020-05-29 00:37:39","endLine":493,"groupId":"104594","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testHintMultiIndexWithCompiledIn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0d/d264ca0bc34c166ab4c09879a2e4468fcf8bee.src","preCode":"  public void testHintMultiIndexWithCompiledIn() throws Exception {\n    createRegion();\n    populateData(1000);\n    \r\n    createIndex(\"IDIndex\", \"p.ID\", \"/Portfolios p\");\n    createIndex(\"SecIndex\", \"p.status\", \"/Portfolios p\");\n    createIndex(\"DescriptionIndex\", \"p.description\", \"/Portfolios p\");\n    \r\n    QueryObserverImpl observer = new QueryObserverImpl();\n    QueryObserverHolder.setInstance(observer);\n    \r\n    SelectResults[][] results = new SelectResults[1][2];\n    QueryService qs = CacheUtils.getQueryService();\n    Query query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'IDIndex', 'SecIndex', 'DescriptionIndex'>select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][0] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"IDIndex\"));\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    observer.reset();\n\n    query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    assertFalse(observer.wasIndexUsed(\"DescriptionIndex\"));\n    \r\n    observer.reset();\n\n    \r\n    StructSetOrResultsSet ssOrrs = new StructSetOrResultsSet();\n    assertEquals(95, results[0][1].size());\n    \r\n    \r\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n\n    query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'DescriptionIndex'>select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"DescriptionIndex\"));\n    assertFalse(observer.wasIndexUsed(\"SecIndex\"));\n    \r\n\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/IndexHintJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"M"},{"authorDate":"2020-05-29 00:37:39","commitOrder":2,"curCode":"  public void testHintNestedCompiledIn() throws Exception {\n    createRegion();\n    populateData(1000);\n    \r\n    createIndex(\"IDIndex\", \"p.ID\", SEPARATOR + \"Portfolios p\");\n    createIndex(\"SecIndex\", \"p.status\", SEPARATOR + \"Portfolios p\");\n    createIndex(\"DescriptionIndex\", \"p.description\", SEPARATOR + \"Portfolios p\");\n    \r\n    QueryObserverImpl observer = new QueryObserverImpl();\n    QueryObserverHolder.setInstance(observer);\n    \r\n    SelectResults[][] results = new SelectResults[1][2];\n    QueryService qs = CacheUtils.getQueryService();\n    Query query = qs.newQuery(\n        \"select * from \" + SEPARATOR\n            + \"Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'IDIndex', 'SecIndex', 'DescriptionIndex'>select p.description from \"\n            + SEPARATOR + \"Portfolios p where p.ID > 10)\");\n    results[0][0] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"IDIndex\"));\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    \r\n    assertFalse(observer.wasIndexUsed(\"DescriptionIndex\"));\n    observer.reset();\n\n    \r\n    query = qs.newQuery(\n        \"select * from \" + SEPARATOR\n            + \"Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (select p.description from \"\n            + SEPARATOR + \"Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    observer.reset();\n\n    \r\n    StructSetOrResultsSet ssOrrs = new StructSetOrResultsSet();\n    assertEquals(95, results[0][1].size());\n    \r\n    \r\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n  }\n","date":"2020-05-29 00:37:39","endLine":540,"groupId":"104594","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testHintNestedCompiledIn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0d/d264ca0bc34c166ab4c09879a2e4468fcf8bee.src","preCode":"  public void testHintNestedCompiledIn() throws Exception {\n    createRegion();\n    populateData(1000);\n    \r\n    createIndex(\"IDIndex\", \"p.ID\", \"/Portfolios p\");\n    createIndex(\"SecIndex\", \"p.status\", \"/Portfolios p\");\n    createIndex(\"DescriptionIndex\", \"p.description\", \"/Portfolios p\");\n    \r\n    QueryObserverImpl observer = new QueryObserverImpl();\n    QueryObserverHolder.setInstance(observer);\n    \r\n    SelectResults[][] results = new SelectResults[1][2];\n    QueryService qs = CacheUtils.getQueryService();\n    Query query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (<hint 'IDIndex', 'SecIndex', 'DescriptionIndex'>select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][0] = (SelectResults) query.execute();\n    \r\n    assertTrue(observer.wasIndexUsed(\"IDIndex\"));\n    assertTrue(observer.wasIndexUsed(\"SecIndex\"));\n    \r\n    assertFalse(observer.wasIndexUsed(\"DescriptionIndex\"));\n    observer.reset();\n\n    \r\n    query = qs.newQuery(\n        \"select * from /Portfolios p where p.ID > 10 and p.ID < 200 and p.status = 'inactive' and p.description IN (select p.description from /Portfolios p where p.ID > 10)\");\n    results[0][1] = (SelectResults) query.execute();\n    observer.reset();\n\n    \r\n    StructSetOrResultsSet ssOrrs = new StructSetOrResultsSet();\n    assertEquals(95, results[0][1].size());\n    \r\n    \r\n    \r\n    ssOrrs.CompareQueryResultsWithoutAndWithIndexes(results, 1,\n        new String[] {\"<query with hints>\"});\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/IndexHintJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":499,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"}]
