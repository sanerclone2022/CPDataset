[{"authorTime":"2019-06-12 00:18:57","codes":[{"authorDate":"2019-06-12 00:18:57","commitOrder":3,"curCode":"  public void create_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","date":"2019-06-12 00:18:57","endLine":127,"groupId":"48141","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"create_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/eb/59389fae57ef0f7bd7e1a706b63d655b09a3de.src","preCode":"  public void create_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"MB"},{"authorDate":"2019-06-12 00:18:57","commitOrder":3,"curCode":"  public void delete_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(regionConfig,\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig, regionManager);\n    verify(memberValidator).findMembers(\"cluster\");\n  }\n","date":"2019-06-12 00:18:57","endLine":140,"groupId":"1347","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"delete_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/eb/59389fae57ef0f7bd7e1a706b63d655b09a3de.src","preCode":"  public void delete_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(regionConfig,\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig, regionManager);\n    verify(memberValidator).findMembers(\"cluster\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"B"}],"commitId":"7b4870a624fcf57e151ee55bea9c958652d35a0b","commitMessage":"@@@GEODE-6811: be able to create GWR in management api. (#3687)\n\n* add createGWR methods in the gateway controllers\n* add GatewaReceiverConfigValidator\n* add MemberValidator to validate same element can't exists in multiple groups which have common member\n* add ConfigurationManager.get method to replace ConfigurationValidator.exists method for more conflict validation","date":"2019-06-12 00:18:57","modifiedFileCount":"23","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-06-14 00:53:55","codes":[{"authorDate":"2019-06-12 00:18:57","commitOrder":4,"curCode":"  public void create_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","date":"2019-06-12 00:18:57","endLine":127,"groupId":"48141","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"create_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/eb/59389fae57ef0f7bd7e1a706b63d655b09a3de.src","preCode":"  public void create_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"N"},{"authorDate":"2019-06-14 00:53:55","commitOrder":4,"curCode":"  public void delete_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig.getId(),\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig.getId(), regionManager);\n    verify(memberValidator).findMembers(\"cluster\");\n  }\n","date":"2019-06-14 00:53:55","endLine":141,"groupId":"1347","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"delete_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/48/d4a165fb759fd7493ec0fa7cb1d057edc9193e.src","preCode":"  public void delete_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(regionConfig,\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig, regionManager);\n    verify(memberValidator).findMembers(\"cluster\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"992790176950586341999d4a720239f57d070b72","commitMessage":"@@@ GEODE-6306: add capability to check cache element compatibility (#3695)\n\n\n","date":"2019-06-14 00:53:55","modifiedFileCount":"9","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-06-29 02:10:02","codes":[{"authorDate":"2019-06-29 02:10:02","commitOrder":5,"curCode":"  public void create_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","date":"2019-06-29 02:10:02","endLine":124,"groupId":"48141","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"create_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/07/8a68695a67644ed121bb209118b694ab9f1b5b.src","preCode":"  public void create_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2019-06-29 02:10:02","commitOrder":5,"curCode":"  public void delete_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig.getId(),\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig.getId(), regionManager);\n    verify(memberValidator).findServers(\"cluster\");\n  }\n","date":"2019-06-29 02:10:02","endLine":138,"groupId":"1347","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"delete_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/07/8a68695a67644ed121bb209118b694ab9f1b5b.src","preCode":"  public void delete_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig.getId(),\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig.getId(), regionManager);\n    verify(memberValidator).findMembers(\"cluster\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"2c39f92dc5fa129058144a9ec16606092dc3d51e","commitMessage":"@@@GEODE-6861: separate static config object from runtime info in the Cl? (#3754)\n\nCo-authored-by: Joris Melchior <joris.melchior@gmail.com>\n\n* use ConfigRealizer to retrieve the runtime information for configuration on each member\n* list result would return a List of Response object which has a configuration object and a list runtime objects\n* use existing object for runtime member info and move them to geode-management module.\n","date":"2019-06-29 02:10:02","modifiedFileCount":"61","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-08-01 12:10:06","codes":[{"authorDate":"2019-08-01 12:10:06","commitOrder":6,"curCode":"  public void create_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","date":"2019-08-01 12:10:06","endLine":136,"groupId":"48141","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"create_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a8/bf6f8b6768ad0dc8d9b25e4c061567ed188362.src","preCode":"  public void create_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"},{"authorDate":"2019-08-01 12:10:06","commitOrder":6,"curCode":"  public void delete_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig.getId(),\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig.getId(), regionManager);\n    verify(memberValidator).findServers(\"cluster\");\n  }\n","date":"2019-08-01 12:10:06","endLine":150,"groupId":"1347","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"delete_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a8/bf6f8b6768ad0dc8d9b25e4c061567ed188362.src","preCode":"  public void delete_validatorIsCalledCorrectly() throws Exception {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig.getId(),\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig.getId(), regionManager);\n    verify(memberValidator).findServers(\"cluster\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"e2855b4d2359c8a7f402f8dbd011292645b94b5a","commitMessage":"@@@GEODE-7024: raise a Java exception on non-success response from REST API (#3861)\n\n* GEODE-7024: raise a Java exception on non-success response from REST call","date":"2019-08-01 12:10:06","modifiedFileCount":"17","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-12-13 22:59:24","codes":[{"authorDate":"2019-08-01 12:10:06","commitOrder":7,"curCode":"  public void create_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","date":"2019-08-01 12:10:06","endLine":136,"groupId":"48141","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"create_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a8/bf6f8b6768ad0dc8d9b25e4c061567ed188362.src","preCode":"  public void create_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"N"},{"authorDate":"2019-12-13 22:59:24","commitOrder":7,"curCode":"  public void delete_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig,\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig, regionManager);\n    verify(memberValidator).findServers(\"cluster\");\n  }\n","date":"2019-12-13 22:59:24","endLine":155,"groupId":"1347","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"delete_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d3/71e2606f10764eaca4c3cf4a91a2a509154e53.src","preCode":"  public void delete_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig.getId(),\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig.getId(), regionManager);\n    verify(memberValidator).findServers(\"cluster\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"c4fc29027ef1d32bc3a0f4c9a90f4acb370deed9","commitMessage":"@@@Geode 7424 create index (#4458)\n\nco-authored-by: Jinmei Liao <jliao@pivotal.io>\n","date":"2019-12-13 22:59:24","modifiedFileCount":"28","status":"M","submitter":"Joris Melchior"},{"authorTime":"2020-01-08 07:58:15","codes":[{"authorDate":"2020-01-08 07:58:15","commitOrder":8,"curCode":"  public void create_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(eq(false), anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","date":"2020-01-08 07:58:15","endLine":141,"groupId":"48141","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"create_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2a/6f9ee5c0f40eba7bf23e6e8ebcb88ffe135df3.src","preCode":"  public void create_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"},{"authorDate":"2020-01-08 07:58:15","commitOrder":8,"curCode":"  public void delete_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig,\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig, regionManager);\n    verify(memberValidator);\n    memberValidator.findServers(\"cluster\");\n  }\n","date":"2020-01-08 07:58:15","endLine":156,"groupId":"1347","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"delete_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2a/6f9ee5c0f40eba7bf23e6e8ebcb88ffe135df3.src","preCode":"  public void delete_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig,\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig, regionManager);\n    verify(memberValidator).findServers(\"cluster\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"f1e5d8f9a06eb5fb08a38d580e12fa3b89ee32ef","commitMessage":"@@@GEODE-7579: introduce RegionAware (#4546)\n\n* GEODE-7579: Make Index configuration RegionAware\n\n* Index configuration is ReqionAware.  but not groupable\n* index's group depends on what region it's defined with\n* display member status in the exception","date":"2020-01-08 07:58:15","modifiedFileCount":"14","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2020-02-21 01:39:39","codes":[{"authorDate":"2020-01-08 07:58:15","commitOrder":9,"curCode":"  public void create_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(eq(false), anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","date":"2020-01-08 07:58:15","endLine":141,"groupId":"10209","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"create_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2a/6f9ee5c0f40eba7bf23e6e8ebcb88ffe135df3.src","preCode":"  public void create_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findMembers(eq(false), anyString());\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.create(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.CREATE, regionConfig);\n    verify(memberValidator).validateCreate(regionConfig, regionManager);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"N"},{"authorDate":"2020-02-21 01:39:39","commitOrder":9,"curCode":"  public void delete_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig,\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig, regionManager);\n    memberValidator.findServers(\"cluster\");\n  }\n","date":"2020-02-21 01:39:39","endLine":169,"groupId":"10209","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"delete_validatorIsCalledCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/68/d76e68703ec8ef8e5cc0500a0715e05540e1c7.src","preCode":"  public void delete_validatorIsCalledCorrectly() {\n    doReturn(Collections.emptySet()).when(memberValidator).findServers(anyString());\n    doReturn(new String[] {\"cluster\"}).when(memberValidator).findGroupsWithThisElement(\n        regionConfig,\n        regionManager);\n    doNothing().when(persistenceService).updateCacheConfig(any(), any());\n    service.delete(regionConfig);\n    verify(cacheElementValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(regionValidator).validate(CacheElementOperation.DELETE, regionConfig);\n    verify(memberValidator).findGroupsWithThisElement(regionConfig, regionManager);\n    verify(memberValidator);\n    memberValidator.findServers(\"cluster\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"}],"commitId":"22403e00c2196ab9239569b82ed34a71af7a7b26","commitMessage":"@@@GEODE-7799: Distribute rebalance status to other locators (#4692)\n\nCo-authored-by: Joris Melchior <joris.melchior@gmail.com>\nCo-authored-by: Darrel Schneider <dschneider@pivotal.io>\nCo-authored-by: Dale Emery <demery@pivotal.io>\n","date":"2020-02-21 01:39:39","modifiedFileCount":"28","status":"M","submitter":"Darrel Schneider"}]
