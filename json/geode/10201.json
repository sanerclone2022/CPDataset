[{"authorTime":"2018-01-19 00:17:51","codes":[{"authorDate":"2018-01-19 00:17:51","commitOrder":4,"curCode":"  public void testConstructor() {\n    ResourcePermission permission = new ResourcePermission();\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission();\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.DATA, null);\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, null);\n    assertThat(Resource.CLUSTER).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(null, Operation.MANAGE, \"REGIONA\");\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(\"REGIONA\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.DATA, Operation.MANAGE, \"REGIONA\");\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(\"REGIONA\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, Operation.MANAGE);\n    assertThat(Resource.CLUSTER).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    \r\n    permission = new ResourcePermission(Resource.DATA, Operation.READ, \"ALL\");\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.READ).isEqualTo(permission.getOperation());\n    assertThat(\"ALL\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, Operation.READ, Target.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission((String) null, (String) null);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission((Resource) null, (Operation) null);\n    assertThat(permission.getResource()).isEqualTo(Resource.NULL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.NULL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"*\", \"*\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.ALL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"ALL\", \"ALL\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.ALL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"NULL\", \"NULL\");\n    assertThat(permission.getResource()).isEqualTo(Resource.NULL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.NULL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"*\", \"READ\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.READ);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(\"READ\");\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.toString()).isEqualTo(\"*:READ\");\n  }\n","date":"2018-01-19 00:17:51","endLine":140,"groupId":"27955","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4b/15407ffecd433af705c508d8f1b83cdaa6ec85.src","preCode":"  public void testConstructor() {\n    ResourcePermission permission = new ResourcePermission();\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission();\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.DATA, null);\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, null);\n    assertThat(Resource.CLUSTER).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(null, Operation.MANAGE, \"REGIONA\");\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(\"REGIONA\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.DATA, Operation.MANAGE, \"REGIONA\");\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(\"REGIONA\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, Operation.MANAGE);\n    assertThat(Resource.CLUSTER).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    \r\n    permission = new ResourcePermission(Resource.DATA, Operation.READ, \"ALL\");\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.READ).isEqualTo(permission.getOperation());\n    assertThat(\"ALL\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, Operation.READ, Target.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission((String) null, (String) null);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission((Resource) null, (Operation) null);\n    assertThat(permission.getResource()).isEqualTo(Resource.NULL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.NULL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"*\", \"*\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.ALL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"ALL\", \"ALL\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.ALL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"NULL\", \"NULL\");\n    assertThat(permission.getResource()).isEqualTo(Resource.NULL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.NULL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"*\", \"READ\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.READ);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(\"READ\");\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.toString()).isEqualTo(\"*:READ\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/security/ResourcePermissionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"MB"},{"authorDate":"2018-01-19 00:17:51","commitOrder":4,"curCode":"  public void regionNameIsStripped() {\n    ResourcePermission permission = new ResourcePermission(\"DATA\", \"READ\", \"/regionA\");\n    assertThat(permission.getResource()).isEqualTo(Resource.DATA);\n    assertThat(permission.getOperation()).isEqualTo(Operation.READ);\n    assertThat(permission.getTarget()).isEqualTo(\"regionA\");\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n  }\n","date":"2018-01-19 00:17:51","endLine":155,"groupId":"27954","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"regionNameIsStripped","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4b/15407ffecd433af705c508d8f1b83cdaa6ec85.src","preCode":"  public void regionNameIsStripped() {\n    ResourcePermission permission = new ResourcePermission(\"DATA\", \"READ\", \"/regionA\");\n    assertThat(permission.getResource()).isEqualTo(Resource.DATA);\n    assertThat(permission.getOperation()).isEqualTo(Operation.READ);\n    assertThat(permission.getTarget()).isEqualTo(\"regionA\");\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/security/ResourcePermissionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"B"}],"commitId":"fccdd15d767db103c9ae8a0b66afe28ca3f3d439","commitMessage":"@@@GEODE-4310: allow ResourcePermission to take Strings as arguments for Resource and Operation. (#1300)\n\n* still checks validity of the resource/operation except wildcards.\n* update tests","date":"2018-01-19 00:17:51","modifiedFileCount":"3","status":"M","submitter":"jinmeiliao"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2018-01-19 00:17:51","commitOrder":5,"curCode":"  public void testConstructor() {\n    ResourcePermission permission = new ResourcePermission();\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission();\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.DATA, null);\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, null);\n    assertThat(Resource.CLUSTER).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(null, Operation.MANAGE, \"REGIONA\");\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(\"REGIONA\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.DATA, Operation.MANAGE, \"REGIONA\");\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(\"REGIONA\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, Operation.MANAGE);\n    assertThat(Resource.CLUSTER).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    \r\n    permission = new ResourcePermission(Resource.DATA, Operation.READ, \"ALL\");\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.READ).isEqualTo(permission.getOperation());\n    assertThat(\"ALL\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, Operation.READ, Target.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission((String) null, (String) null);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission((Resource) null, (Operation) null);\n    assertThat(permission.getResource()).isEqualTo(Resource.NULL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.NULL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"*\", \"*\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.ALL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"ALL\", \"ALL\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.ALL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"NULL\", \"NULL\");\n    assertThat(permission.getResource()).isEqualTo(Resource.NULL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.NULL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"*\", \"READ\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.READ);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(\"READ\");\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.toString()).isEqualTo(\"*:READ\");\n  }\n","date":"2018-01-19 00:17:51","endLine":140,"groupId":"10201","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4b/15407ffecd433af705c508d8f1b83cdaa6ec85.src","preCode":"  public void testConstructor() {\n    ResourcePermission permission = new ResourcePermission();\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission();\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.DATA, null);\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, null);\n    assertThat(Resource.CLUSTER).isEqualTo(permission.getResource());\n    assertThat(Operation.NULL).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(null, Operation.MANAGE, \"REGIONA\");\n    assertThat(Resource.NULL).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(\"REGIONA\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.DATA, Operation.MANAGE, \"REGIONA\");\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(\"REGIONA\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, Operation.MANAGE);\n    assertThat(Resource.CLUSTER).isEqualTo(permission.getResource());\n    assertThat(Operation.MANAGE).isEqualTo(permission.getOperation());\n    assertThat(ResourcePermission.ALL).isEqualTo(permission.getTarget());\n\n    \r\n    permission = new ResourcePermission(Resource.DATA, Operation.READ, \"ALL\");\n    assertThat(Resource.DATA).isEqualTo(permission.getResource());\n    assertThat(Operation.READ).isEqualTo(permission.getOperation());\n    assertThat(\"ALL\").isEqualTo(permission.getTarget());\n\n    permission = new ResourcePermission(Resource.CLUSTER, Operation.READ, Target.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission((String) null, (String) null);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission((Resource) null, (Operation) null);\n    assertThat(permission.getResource()).isEqualTo(Resource.NULL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.NULL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"*\", \"*\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.ALL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"ALL\", \"ALL\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.ALL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"NULL\", \"NULL\");\n    assertThat(permission.getResource()).isEqualTo(Resource.NULL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.NULL);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getOperationString()).isEqualTo(ResourcePermission.NULL);\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n\n    permission = new ResourcePermission(\"*\", \"READ\");\n    assertThat(permission.getResource()).isEqualTo(Resource.ALL);\n    assertThat(permission.getOperation()).isEqualTo(Operation.READ);\n    assertThat(permission.getResourceString()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getOperationString()).isEqualTo(\"READ\");\n    assertThat(permission.getTarget()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n    assertThat(permission.toString()).isEqualTo(\"*:READ\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/security/ResourcePermissionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2020-05-29 00:37:39","commitOrder":5,"curCode":"  public void regionNameIsStripped() {\n    ResourcePermission permission = new ResourcePermission(\"DATA\", \"READ\", SEPARATOR + \"regionA\");\n    assertThat(permission.getResource()).isEqualTo(Resource.DATA);\n    assertThat(permission.getOperation()).isEqualTo(Operation.READ);\n    assertThat(permission.getTarget()).isEqualTo(\"regionA\");\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n  }\n","date":"2020-05-29 00:37:39","endLine":155,"groupId":"10201","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"regionNameIsStripped","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d5/b9bc0ce04d3742974e870a9c587d7d404c4db1.src","preCode":"  public void regionNameIsStripped() {\n    ResourcePermission permission = new ResourcePermission(\"DATA\", \"READ\", \"/regionA\");\n    assertThat(permission.getResource()).isEqualTo(Resource.DATA);\n    assertThat(permission.getOperation()).isEqualTo(Operation.READ);\n    assertThat(permission.getTarget()).isEqualTo(\"regionA\");\n    assertThat(permission.getKey()).isEqualTo(ResourcePermission.ALL);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/security/ResourcePermissionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"}]
