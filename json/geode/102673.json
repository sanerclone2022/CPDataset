[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void testByteArray() throws Exception {\n    byte[] array = new byte[] { (byte) 4, (byte) 5, (byte) 6 };\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeByteArray(array, out);\n    DataSerializer.writeObject(array, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    for (int idx=0; idx < 2; idx++) {\n      byte[] array2 = (idx==0)\n        ? DataSerializer.readByteArray(in)\n        : (byte[])DataSerializer.readObject(in);\n      assertEquals(array.length, array2.length);\n      for (int i = 0; i < array.length; i++) {\n        assertEquals(array[i], array2[i]);\n      }\n    }\n  }\n","date":"2016-09-15 02:08:18","endLine":799,"groupId":"26222","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testByteArray","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/75461e4dc621b2a51d03b8d0734e38d304cc3e.src","preCode":"  public void testByteArray() throws Exception {\n    byte[] array = new byte[] { (byte) 4, (byte) 5, (byte) 6 };\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeByteArray(array, out);\n    DataSerializer.writeObject(array, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    for (int idx=0; idx < 2; idx++) {\n      byte[] array2 = (idx==0)\n        ? DataSerializer.readByteArray(in)\n        : (byte[])DataSerializer.readObject(in);\n      assertEquals(array.length, array2.length);\n      for (int i = 0; i < array.length; i++) {\n        assertEquals(array[i], array2[i]);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":781,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void testLongArrayObject() throws Exception {\n    long[] array = new long[] { 4, 5, 6 };\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeObject(array, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    long[] array2 = (long[]) DataSerializer.readObject(in);\n\n    assertEquals(array.length, array2.length);\n    for (int i = 0; i < array.length; i++) {\n      assertEquals(array[i], array2[i]);\n    }\n  }\n","date":"2016-09-15 02:08:18","endLine":1020,"groupId":"26222","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLongArrayObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/75461e4dc621b2a51d03b8d0734e38d304cc3e.src","preCode":"  public void testLongArrayObject() throws Exception {\n    long[] array = new long[] { 4, 5, 6 };\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeObject(array, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    long[] array2 = (long[]) DataSerializer.readObject(in);\n\n    assertEquals(array.length, array2.length);\n    for (int i = 0; i < array.length; i++) {\n      assertEquals(array[i], array2[i]);\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1006,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2021-05-19 13:32:42","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":2,"curCode":"  public void testByteArray() throws Exception {\n    byte[] array = new byte[] { (byte) 4, (byte) 5, (byte) 6 };\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeByteArray(array, out);\n    DataSerializer.writeObject(array, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    for (int idx=0; idx < 2; idx++) {\n      byte[] array2 = (idx==0)\n        ? DataSerializer.readByteArray(in)\n        : (byte[])DataSerializer.readObject(in);\n      assertEquals(array.length, array2.length);\n      for (int i = 0; i < array.length; i++) {\n        assertEquals(array[i], array2[i]);\n      }\n    }\n  }\n","date":"2016-09-15 02:08:18","endLine":799,"groupId":"102673","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testByteArray","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/75461e4dc621b2a51d03b8d0734e38d304cc3e.src","preCode":"  public void testByteArray() throws Exception {\n    byte[] array = new byte[] { (byte) 4, (byte) 5, (byte) 6 };\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeByteArray(array, out);\n    DataSerializer.writeObject(array, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    for (int idx=0; idx < 2; idx++) {\n      byte[] array2 = (idx==0)\n        ? DataSerializer.readByteArray(in)\n        : (byte[])DataSerializer.readObject(in);\n      assertEquals(array.length, array2.length);\n      for (int i = 0; i < array.length; i++) {\n        assertEquals(array[i], array2[i]);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":781,"status":"N"},{"authorDate":"2021-05-19 13:32:42","commitOrder":2,"curCode":"  public void testLongArrayObject() throws Exception {\n    long[] array = new long[] {4, 5, 6};\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeObject(array, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    long[] array2 = DataSerializer.readObject(in);\n\n    assertEquals(array.length, array2.length);\n    for (int i = 0; i < array.length; i++) {\n      assertEquals(array[i], array2[i]);\n    }\n  }\n","date":"2021-06-30 01:58:48","endLine":998,"groupId":"102673","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testLongArrayObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e9/722f7b9d627c7bfd09d36a5a25ec55cb733e67.src","preCode":"  public void testLongArrayObject() throws Exception {\n    long[] array = new long[] {4, 5, 6};\n\n    DataOutputStream out = getDataOutput();\n    DataSerializer.writeObject(array, out);\n    out.flush();\n\n    DataInput in = getDataInput();\n    long[] array2 = (long[]) DataSerializer.readObject(in);\n\n    assertEquals(array.length, array2.length);\n    for (int i = 0; i < array.length; i++) {\n      assertEquals(array[i], array2[i]);\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":984,"status":"M"}],"commitId":"cc6f2c307d66eb37b44bc33ac2f8a7f1f517ce13","commitMessage":"@@@GEODE-6588: Cleanup DataSerializableJUnitTest\n","date":"2021-06-30 01:58:48","modifiedFileCount":"1","status":"M","submitter":"Jacob Barrett"}]
