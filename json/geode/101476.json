[{"authorTime":"2019-04-13 01:49:40","codes":[{"authorDate":"2019-04-13 01:49:40","commitOrder":1,"curCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<CacheElement> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getConfigGroup()).isEqualTo(\"cluster\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-04-13 01:49:40","endLine":99,"groupId":"8751","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"listClusterLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/91/1c31921a39f9a6294dbf97253e0532ba6815bd.src","preCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<CacheElement> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getConfigGroup()).isEqualTo(\"cluster\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2019-04-13 01:49:40","commitOrder":1,"curCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<CacheElement> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getConfigGroup()).isEqualTo(\"cluster\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-04-13 01:49:40","endLine":139,"groupId":"8751","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"listRegionByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/91/1c31921a39f9a6294dbf97253e0532ba6815bd.src","preCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<CacheElement> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getConfigGroup()).isEqualTo(\"cluster\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"}],"commitId":"ae8ecb7737c2c099f509fb2ce3b9f1101b84a0ec","commitMessage":"@@@GEODE-6612: list regions in Management v2 api (#3445)\n\nCo-authored-by: Peter Tran <ptran@pivotal.io>\n","date":"2019-04-13 01:49:40","modifiedFileCount":"13","status":"B","submitter":"jinmeiliao"},{"authorTime":"2019-04-19 02:15:04","codes":[{"authorDate":"2019-04-19 02:15:04","commitOrder":2,"curCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<RuntimeCacheElement> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-04-19 02:15:04","endLine":131,"groupId":"8751","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"listClusterLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b0/bca71aced0e851a8affbf2179c1d8a78b4dd1c.src","preCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<CacheElement> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getConfigGroup()).isEqualTo(\"cluster\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2019-04-19 02:15:04","commitOrder":2,"curCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<RuntimeCacheElement> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-04-19 02:15:04","endLine":204,"groupId":"8751","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"listRegionByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b0/bca71aced0e851a8affbf2179c1d8a78b4dd1c.src","preCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<CacheElement> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getConfigGroup()).isEqualTo(\"cluster\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"6a177ecfebc443affda84bea33f3c6cfa26f7c00","commitMessage":"@@@GEODE-6612: add entry count for list Region and rework filtering by groups (#3465)\n\nCo-authored-by: Owen Nichols <onichols@pivotal.io>\nCo-authored-by: Jens Deppe jdeppe@pivotal.io\n\n* Create a RuntimeCacheElement interface to hold multiple groups\n* Using RegionConfig can only set/get one group","date":"2019-04-19 02:15:04","modifiedFileCount":"16","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-05-03 00:34:02","codes":[{"authorDate":"2019-05-03 00:34:02","commitOrder":3,"curCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<RuntimeRegionConfig> regions = client.list(filter).getResult(RuntimeRegionConfig.class);\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-05-03 00:34:02","endLine":130,"groupId":"8751","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"listClusterLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/ab0502fe927c3d79fae8790f12b7bbd5c203ab.src","preCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<RuntimeCacheElement> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2019-05-03 00:34:02","commitOrder":3,"curCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<RuntimeRegionConfig> regions = client.list(filter).getResult(RuntimeRegionConfig.class);\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-05-03 00:34:02","endLine":202,"groupId":"8751","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"listRegionByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/ab0502fe927c3d79fae8790f12b7bbd5c203ab.src","preCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<RuntimeCacheElement> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"22659ee5c0c14f2e963047c2cab73a6910620ac5","commitMessage":"@@@GEODE-6728: have getResult return specified type (#3532)\n\n\n","date":"2019-05-03 00:34:02","modifiedFileCount":"7","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-06-19 06:26:48","codes":[{"authorDate":"2019-06-19 06:26:48","commitOrder":4,"curCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<RuntimeRegionConfig> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-06-19 06:26:48","endLine":137,"groupId":"8751","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"listClusterLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/77/2f53165c519150d06299f5c1c124c3096171f7.src","preCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<RuntimeRegionConfig> regions = client.list(filter).getResult(RuntimeRegionConfig.class);\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"},{"authorDate":"2019-06-19 06:26:48","commitOrder":4,"curCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<RuntimeRegionConfig> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-06-19 06:26:48","endLine":209,"groupId":"8751","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"listRegionByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/77/2f53165c519150d06299f5c1c124c3096171f7.src","preCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<RuntimeRegionConfig> regions = client.list(filter).getResult(RuntimeRegionConfig.class);\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"}],"commitId":"a60ade270e3dc1901fe900e2521351bdc93ecced","commitMessage":"@@@GEODE-6861: Generify ClusterManagementService (#3708)\n\n* GEODE-6861: Generify ClusterManagementService","date":"2019-06-19 06:26:48","modifiedFileCount":"50","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-06-29 02:10:02","codes":[{"authorDate":"2019-06-29 02:10:02","commitOrder":5,"curCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<RegionConfig> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-06-29 02:10:02","endLine":138,"groupId":"8751","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"listClusterLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e5/d7de992b72a606523716652c0d00ad397e92b6.src","preCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<RuntimeRegionConfig> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2019-06-29 02:10:02","commitOrder":5,"curCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<RegionConfig> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-06-29 02:10:02","endLine":213,"groupId":"8751","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"listRegionByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e5/d7de992b72a606523716652c0d00ad397e92b6.src","preCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<RuntimeRegionConfig> regions = client.list(filter).getResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"2c39f92dc5fa129058144a9ec16606092dc3d51e","commitMessage":"@@@GEODE-6861: separate static config object from runtime info in the Cl? (#3754)\n\nCo-authored-by: Joris Melchior <joris.melchior@gmail.com>\n\n* use ConfigRealizer to retrieve the runtime information for configuration on each member\n* list result would return a List of Response object which has a configuration object and a list runtime objects\n* use existing object for runtime member info and move them to geode-management module.\n","date":"2019-06-29 02:10:02","modifiedFileCount":"61","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-07-12 06:08:46","codes":[{"authorDate":"2019-07-12 06:08:46","commitOrder":6,"curCode":"  public void listClusterLevel() {\n    \r\n    filter.setGroup(\"cluster\");\n    List<RegionConfig> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-07-12 06:08:46","endLine":138,"groupId":"8751","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"listClusterLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/aa/56f9e7cae094f0f844cf61e6ecb3292dcceb69.src","preCode":"  public void listClusterLevel() throws Exception {\n    \r\n    filter.setGroup(\"cluster\");\n    List<RegionConfig> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2019-07-12 06:08:46","commitOrder":6,"curCode":"  public void listRegionByName() {\n    filter.setName(\"customers\");\n    List<RegionConfig> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-07-12 06:08:46","endLine":213,"groupId":"8751","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"listRegionByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/aa/56f9e7cae094f0f844cf61e6ecb3292dcceb69.src","preCode":"  public void listRegionByName() throws Exception {\n    filter.setName(\"customers\");\n    List<RegionConfig> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"592875c12cf723be42d62747efcc71a97887cfd4","commitMessage":"@@@GEODE-6897: refactor ClusterManagementResult into subclasses (#3793)\n\n* GEODE-6897: refactoring of ClusterManagementResult into subclasses","date":"2019-07-12 06:08:46","modifiedFileCount":"30","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-08-16 05:45:33","codes":[{"authorDate":"2019-08-16 05:45:33","commitOrder":7,"curCode":"  public void listClusterLevel() {\n    \r\n    filter.setGroup(\"cluster\");\n    List<Region> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-08-16 05:45:33","endLine":137,"groupId":"8751","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"listClusterLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4a/1bfbc3fc310b6791760a88d29050d16c7102ae.src","preCode":"  public void listClusterLevel() {\n    \r\n    filter.setGroup(\"cluster\");\n    List<RegionConfig> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"},{"authorDate":"2019-08-16 05:45:33","commitOrder":7,"curCode":"  public void listRegionByName() {\n    filter.setName(\"customers\");\n    List<Region> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2019-08-16 05:45:33","endLine":213,"groupId":"8751","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"listRegionByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4a/1bfbc3fc310b6791760a88d29050d16c7102ae.src","preCode":"  public void listRegionByName() {\n    filter.setName(\"customers\");\n    List<RegionConfig> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"550e19e9c9bfd147a387c56019f00dbf162a2b26","commitMessage":"@@@GEODE-6945:geode-managment should create its own set of configuration? (#3928)\n\nCo-authored-by: Darrel Schneider <dschneider@pivotal.io>\n\n* do not use xml domain object for region configuration\n* add RegionType.UNSUPPORTED\n","date":"2019-08-16 05:45:33","modifiedFileCount":"40","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2020-01-17 06:16:28","codes":[{"authorDate":"2020-01-17 06:16:28","commitOrder":8,"curCode":"  public void listClusterLevel() {\n    \r\n    filter.setGroup(\"cluster\");\n    List<Region> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(REGION_IN_CLUSTER);\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2020-01-17 06:16:28","endLine":170,"groupId":"101476","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"listClusterLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/34/4f0746316ecf94239f50f6723d63b037ef17e3.src","preCode":"  public void listClusterLevel() {\n    \r\n    filter.setGroup(\"cluster\");\n    List<Region> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2020-01-17 06:16:28","commitOrder":8,"curCode":"  public void listRegionByName() {\n    filter.setName(REGION_IN_CLUSTER);\n    List<Region> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(REGION_IN_CLUSTER);\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","date":"2020-01-17 06:16:28","endLine":246,"groupId":"101476","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"listRegionByName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/34/4f0746316ecf94239f50f6723d63b037ef17e3.src","preCode":"  public void listRegionByName() {\n    filter.setName(\"customers\");\n    List<Region> regions = client.list(filter).getConfigResult();\n    assertThat(regions).hasSize(1);\n    assertThat(regions.get(0).getId()).isEqualTo(\"customers\");\n    assertThat(regions.get(0).getGroup()).isNull();\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ListRegionManagementDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"}],"commitId":"f8620b91b72d8a83e65d8c2f7eb34dcbea39d096","commitMessage":"@@@GEODE-7699: use ConfigurationInfo to wrap the get result (#4596)\n\n* GEODE-7699: use ConfigurationInfo to wrap the get result\n\nCo-authored-by: Dale Emery <demery@pivotal.io>\n","date":"2020-01-17 06:16:28","modifiedFileCount":"24","status":"M","submitter":"Jinmei Liao"}]
