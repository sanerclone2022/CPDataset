[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testIteratorDefLong() throws Exception {\n    long lg1 = 111;\n    long lg2 = 222;\n    HashSet C1 = new HashSet();\n    C1.add(new Long(lg1));\n    C1.add(new Long(lg2));\n    Object params[] = new Object[1];\n    params[0] = C1;\n    String queries[] = {\"SELECT DISTINCT longValue from (set<long>) $1\",\n        \"SELECT DISTINCT longValue from $1 TYPE long\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = null;\n      try {\n        q = CacheUtils.getQueryService().newQuery(queries[i]);\n        SelectResults rs = (SelectResults) q.execute(params);\n        if (rs.size() < 1)\n          fail(\"testIteratorDefLong: Query fetched zero results \");\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail(q.getQueryString());\n      }\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":233,"groupId":"18378","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIteratorDefLong","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/84/6286b2dde973c3890c1d51b9e48dc1d8c9c94f.src","preCode":"  public void testIteratorDefLong() throws Exception {\n    long lg1 = 111;\n    long lg2 = 222;\n    HashSet C1 = new HashSet();\n    C1.add(new Long(lg1));\n    C1.add(new Long(lg2));\n    Object params[] = new Object[1];\n    params[0] = C1;\n    String queries[] = {\"SELECT DISTINCT longValue from (set<long>) $1\",\n        \"SELECT DISTINCT longValue from $1 TYPE long\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = null;\n      try {\n        q = CacheUtils.getQueryService().newQuery(queries[i]);\n        SelectResults rs = (SelectResults) q.execute(params);\n        if (rs.size() < 1)\n          fail(\"testIteratorDefLong: Query fetched zero results \");\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail(q.getQueryString());\n      }\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/IteratorTypeDefaultTypesJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testIteratorDefDouble() throws Exception {\n    double d1 = 1.11;\n    double d2 = 2.22;\n    HashSet C1 = new HashSet();\n    C1.add(new Double(d1));\n    C1.add(new Double(d2));\n    Object params[] = new Object[1];\n    params[0] = C1;\n    String queries[] = {\"SELECT DISTINCT doubleValue from (set<double>) $1\",\n        \"SELECT DISTINCT doubleValue from $1 TYPE double\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = null;\n      try {\n        q = CacheUtils.getQueryService().newQuery(queries[i]);\n        SelectResults rs = (SelectResults) q.execute(params);\n        if (rs.size() < 1)\n          fail(\"testIteratorDefDouble: Query fetched zero results \");\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail(q.getQueryString());\n      }\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":258,"groupId":"18380","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIteratorDefDouble","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/84/6286b2dde973c3890c1d51b9e48dc1d8c9c94f.src","preCode":"  public void testIteratorDefDouble() throws Exception {\n    double d1 = 1.11;\n    double d2 = 2.22;\n    HashSet C1 = new HashSet();\n    C1.add(new Double(d1));\n    C1.add(new Double(d2));\n    Object params[] = new Object[1];\n    params[0] = C1;\n    String queries[] = {\"SELECT DISTINCT doubleValue from (set<double>) $1\",\n        \"SELECT DISTINCT doubleValue from $1 TYPE double\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = null;\n      try {\n        q = CacheUtils.getQueryService().newQuery(queries[i]);\n        SelectResults rs = (SelectResults) q.execute(params);\n        if (rs.size() < 1)\n          fail(\"testIteratorDefDouble: Query fetched zero results \");\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail(q.getQueryString());\n      }\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/IteratorTypeDefaultTypesJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2021-06-04 00:32:09","codes":[{"authorDate":"2021-06-04 00:32:09","commitOrder":2,"curCode":"  public void testIteratorDefLong() throws Exception {\n    long lg1 = 111;\n    long lg2 = 222;\n    HashSet C1 = new HashSet();\n    C1.add(new Long(lg1));\n    C1.add(new Long(lg2));\n    Object params[] = new Object[1];\n    params[0] = C1;\n    String queries[] = {\"SELECT DISTINCT longValue from (set<long>) $1\",\n        \"SELECT DISTINCT longValue from $1 TYPE long\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = null;\n      try {\n        q = CacheUtils.getQueryService().newQuery(queries[i]);\n        SelectResults rs = (SelectResults) q.execute(params);\n        if (rs.size() < 1) {\n          fail(\"testIteratorDefLong: Query fetched zero results \");\n        }\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail(q.getQueryString());\n      }\n    }\n  }\n","date":"2021-06-04 00:32:09","endLine":240,"groupId":"104862","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testIteratorDefLong","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9f/2a662163974e826024610eaba027d20ce7a214.src","preCode":"  public void testIteratorDefLong() throws Exception {\n    long lg1 = 111;\n    long lg2 = 222;\n    HashSet C1 = new HashSet();\n    C1.add(new Long(lg1));\n    C1.add(new Long(lg2));\n    Object params[] = new Object[1];\n    params[0] = C1;\n    String queries[] = {\"SELECT DISTINCT longValue from (set<long>) $1\",\n        \"SELECT DISTINCT longValue from $1 TYPE long\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = null;\n      try {\n        q = CacheUtils.getQueryService().newQuery(queries[i]);\n        SelectResults rs = (SelectResults) q.execute(params);\n        if (rs.size() < 1)\n          fail(\"testIteratorDefLong: Query fetched zero results \");\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail(q.getQueryString());\n      }\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/IteratorTypeDefaultTypesJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"},{"authorDate":"2021-06-04 00:32:09","commitOrder":2,"curCode":"  public void testIteratorDefDouble() throws Exception {\n    double d1 = 1.11;\n    double d2 = 2.22;\n    HashSet C1 = new HashSet();\n    C1.add(new Double(d1));\n    C1.add(new Double(d2));\n    Object params[] = new Object[1];\n    params[0] = C1;\n    String queries[] = {\"SELECT DISTINCT doubleValue from (set<double>) $1\",\n        \"SELECT DISTINCT doubleValue from $1 TYPE double\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = null;\n      try {\n        q = CacheUtils.getQueryService().newQuery(queries[i]);\n        SelectResults rs = (SelectResults) q.execute(params);\n        if (rs.size() < 1) {\n          fail(\"testIteratorDefDouble: Query fetched zero results \");\n        }\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail(q.getQueryString());\n      }\n    }\n  }\n","date":"2021-06-04 00:32:09","endLine":266,"groupId":"104862","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testIteratorDefDouble","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9f/2a662163974e826024610eaba027d20ce7a214.src","preCode":"  public void testIteratorDefDouble() throws Exception {\n    double d1 = 1.11;\n    double d2 = 2.22;\n    HashSet C1 = new HashSet();\n    C1.add(new Double(d1));\n    C1.add(new Double(d2));\n    Object params[] = new Object[1];\n    params[0] = C1;\n    String queries[] = {\"SELECT DISTINCT doubleValue from (set<double>) $1\",\n        \"SELECT DISTINCT doubleValue from $1 TYPE double\"};\n    for (int i = 0; i < queries.length; i++) {\n      Query q = null;\n      try {\n        q = CacheUtils.getQueryService().newQuery(queries[i]);\n        SelectResults rs = (SelectResults) q.execute(params);\n        if (rs.size() < 1)\n          fail(\"testIteratorDefDouble: Query fetched zero results \");\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail(q.getQueryString());\n      }\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/functional/IteratorTypeDefaultTypesJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"M"}],"commitId":"2879573ffb04e9e029e14ca37d8a064268cc8f44","commitMessage":"@@@GEODE-7864: Always use curly braces for control flow statements (#6523)\n\nAuthored-by: Donal Evans <doevans@vmware.com>","date":"2021-06-04 00:32:09","modifiedFileCount":"640","status":"M","submitter":"Donal Evans"}]
