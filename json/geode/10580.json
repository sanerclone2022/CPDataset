[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void invokeIntSuppliersShouldUpdateStats() {\n    IntSupplier supplier1 = mock(IntSupplier.class);\n    when(supplier1.getAsInt()).thenReturn(23);\n    stats.setIntSupplier(4, supplier1);\n    assertEquals(0, stats.invokeSuppliers());\n\n    verify(supplier1).getAsInt();\n    assertEquals(23, stats.getInt(4));\n  }\n","date":"2016-09-15 02:08:18","endLine":69,"groupId":"30499","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeIntSuppliersShouldUpdateStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d5/fdccafa75a58fe24b0866e382a0405e0408f6f.src","preCode":"  public void invokeIntSuppliersShouldUpdateStats() {\n    IntSupplier supplier1 = mock(IntSupplier.class);\n    when(supplier1.getAsInt()).thenReturn(23);\n    stats.setIntSupplier(4, supplier1);\n    assertEquals(0, stats.invokeSuppliers());\n\n    verify(supplier1).getAsInt();\n    assertEquals(23, stats.getInt(4));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/statistics/StatisticsImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void invokeSuppliersShouldCatchSupplierErrorsAndReturnCount() {\n    IntSupplier supplier1 = mock(IntSupplier.class);\n    when(supplier1.getAsInt()).thenThrow(NullPointerException.class);\n    stats.setIntSupplier(4, supplier1);\n    assertEquals(1, stats.invokeSuppliers());\n\n    verify(supplier1).getAsInt();\n  }\n","date":"2016-09-15 02:08:18","endLine":108,"groupId":"34463","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeSuppliersShouldCatchSupplierErrorsAndReturnCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d5/fdccafa75a58fe24b0866e382a0405e0408f6f.src","preCode":"  public void invokeSuppliersShouldCatchSupplierErrorsAndReturnCount() {\n    IntSupplier supplier1 = mock(IntSupplier.class);\n    when(supplier1.getAsInt()).thenThrow(NullPointerException.class);\n    stats.setIntSupplier(4, supplier1);\n    assertEquals(1, stats.invokeSuppliers());\n\n    verify(supplier1).getAsInt();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/statistics/StatisticsImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2019-03-05 05:49:32","codes":[{"authorDate":"2019-03-05 05:49:32","commitOrder":2,"curCode":"  public void invokeIntSuppliersShouldUpdateStats() {\n    IntSupplier intSupplier = mock(IntSupplier.class);\n    when(intSupplier.getAsInt()).thenReturn(23);\n    statistics.setIntSupplier(4, intSupplier);\n    assertThat(statistics.invokeSuppliers()).isEqualTo(0);\n\n    verify(intSupplier).getAsInt();\n    assertThat(statistics.getInt(4)).isEqualTo(23);\n  }\n","date":"2019-03-06 05:05:59","endLine":75,"groupId":"1812","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeIntSuppliersShouldUpdateStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4d/270957573dd4e4ba953d9f358248cb7569f1ac.src","preCode":"  public void invokeIntSuppliersShouldUpdateStats() {\n    IntSupplier supplier1 = mock(IntSupplier.class);\n    when(supplier1.getAsInt()).thenReturn(23);\n    stats.setIntSupplier(4, supplier1);\n    assertEquals(0, stats.invokeSuppliers());\n\n    verify(supplier1).getAsInt();\n    assertEquals(23, stats.getInt(4));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/statistics/StatisticsImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2019-03-05 05:49:32","commitOrder":2,"curCode":"  public void invokeSuppliersShouldCatchSupplierErrorsAndReturnCount() {\n    IntSupplier throwingSupplier = mock(IntSupplier.class);\n    when(throwingSupplier.getAsInt()).thenThrow(NullPointerException.class);\n    statistics.setIntSupplier(4, throwingSupplier);\n    assertThat(statistics.invokeSuppliers()).isEqualTo(1);\n\n    verify(throwingSupplier).getAsInt();\n  }\n","date":"2019-03-06 05:05:59","endLine":114,"groupId":"1817","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeSuppliersShouldCatchSupplierErrorsAndReturnCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4d/270957573dd4e4ba953d9f358248cb7569f1ac.src","preCode":"  public void invokeSuppliersShouldCatchSupplierErrorsAndReturnCount() {\n    IntSupplier supplier1 = mock(IntSupplier.class);\n    when(supplier1.getAsInt()).thenThrow(NullPointerException.class);\n    stats.setIntSupplier(4, supplier1);\n    assertEquals(1, stats.invokeSuppliers());\n\n    verify(supplier1).getAsInt();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/statistics/StatisticsImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"83e3b8dca1505ad9d41a97ac7875705042cb0d0f","commitMessage":"@@@GEODE-6442: Fixup StatisticsImpl and StatisticsImplTest\n\nFixup StatisticsImpl:\n* Fix IDE warnings in StatisticsImpl\n* Make closed volatile\n* Fixup field and method ordering\n\nFixup StatisticsImplTest:\n* Replace mutable static logger with testable interface\n* Use AssertJ in test\n* Use simple implementation of StatisticsImpl instead of\nLocalStatisticsImpl\n","date":"2019-03-06 05:05:59","modifiedFileCount":"2","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-08-01 00:29:52","codes":[{"authorDate":"2019-08-01 00:29:52","commitOrder":3,"curCode":"  public void invokeIntSuppliersShouldUpdateStats() {\n    IntSupplier intSupplier = mock(IntSupplier.class);\n    when(intSupplier.getAsInt()).thenReturn(23);\n    statistics.setIntSupplier(4, intSupplier);\n    assertThat(statistics.updateSuppliedValues()).isEqualTo(0);\n\n    verify(intSupplier).getAsInt();\n    assertThat(statistics.getInt(4)).isEqualTo(23);\n  }\n","date":"2019-08-01 00:29:52","endLine":76,"groupId":"10580","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"invokeIntSuppliersShouldUpdateStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0d/3f9c32f0336b3f6bfe84de709b62ac7157684c.src","preCode":"  public void invokeIntSuppliersShouldUpdateStats() {\n    IntSupplier intSupplier = mock(IntSupplier.class);\n    when(intSupplier.getAsInt()).thenReturn(23);\n    statistics.setIntSupplier(4, intSupplier);\n    assertThat(statistics.invokeSuppliers()).isEqualTo(0);\n\n    verify(intSupplier).getAsInt();\n    assertThat(statistics.getInt(4)).isEqualTo(23);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/statistics/StatisticsImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2019-08-01 00:29:52","commitOrder":3,"curCode":"  public void invokeSuppliersShouldCatchSupplierErrorsAndReturnCount() {\n    IntSupplier throwingSupplier = mock(IntSupplier.class);\n    when(throwingSupplier.getAsInt()).thenThrow(NullPointerException.class);\n    statistics.setIntSupplier(4, throwingSupplier);\n    assertThat(statistics.updateSuppliedValues()).isEqualTo(1);\n\n    verify(throwingSupplier).getAsInt();\n  }\n","date":"2019-08-01 00:29:52","endLine":115,"groupId":"10580","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"invokeSuppliersShouldCatchSupplierErrorsAndReturnCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0d/3f9c32f0336b3f6bfe84de709b62ac7157684c.src","preCode":"  public void invokeSuppliersShouldCatchSupplierErrorsAndReturnCount() {\n    IntSupplier throwingSupplier = mock(IntSupplier.class);\n    when(throwingSupplier.getAsInt()).thenThrow(NullPointerException.class);\n    statistics.setIntSupplier(4, throwingSupplier);\n    assertThat(statistics.invokeSuppliers()).isEqualTo(1);\n\n    verify(throwingSupplier).getAsInt();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/statistics/StatisticsImplTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"279fa0eb007adb789e1fa1a90e310299bc19e0a7","commitMessage":"@@@GEODE-7001: Add region entry count gauge (#3850)\n\n* GEODE-7001: Add region entry count gauge\n\nAdd 'member.region.entries' gauge in RegionPerfStats\n- Add region.name and data.policy tags\n- Add an AtomicLong to track the entry count\n- Configure the member.region.entries gauge to fetch from new\n  getLocalSize() method (see below).\n- Configure the 'entryCount' stat to be supplied by new getLocalSize()\n  method.\n\nAdd getLocalSize() method to InternalRegion.  and implement it in\nLocalRegion and PartitionedRegion\n- In LocalRegion.  the method returns the region map size minus the\n  number of tombstones.\n- In PartitionedRegion.  the method sums the local sizes of all local\n  bucket regions.\n\nAlso refactored the following:\n- Reorganize CachePerfStats/RegionPerfStats constructors\n- Remove CachePerfStats.getEntries()\n- Remove use of CachePerfStats.getEntries() from\n  PartitionedRegionStatus.\n- Add @Override to ValidatingStatisticsType methods in StatisticsTypeImpl\n- Extracted invokeSuppliers() to new SuppliableStatistics interface and\n  rename as updateSuppliedValues()\n- Move responsibility to prepend 'RegionStats-' onto region statistics\n  textID into the classes that create RegionPerfStats and\n  CachePerfStats.\n\nCo-authored-by: Michael Oleske <moleske@pivotal.io>\nCo-authored-by: Kirk Lund <klund@apache.org>\nCo-Authored-By: Mark Hanson <mhanson@pivotal.io>\nCo-Authored-By: Aaron Lindsey <alindsey@pivotal.io>\n\n* empty commit to trigger precheckin\n\n* Remove leftover atMost\n\n* Spotless found unused import\n","date":"2019-08-01 00:29:52","modifiedFileCount":"26","status":"M","submitter":"Dale Emery"}]
