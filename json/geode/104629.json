[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testAsynchronousIndexCreatedOnRoot_PortfoliosRegion() {\n    Region root = cache.getRegion(\"/root/portfolios\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(!ra.getIndexMaintenanceSynchronous());\n    } else\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n  }\n","date":"2018-07-18 03:54:18","endLine":83,"groupId":"6313","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsynchronousIndexCreatedOnRoot_PortfoliosRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/94/7766db43fab72fbcd64863f6014d543e7b68ee.src","preCode":"  public void testAsynchronousIndexCreatedOnRoot_PortfoliosRegion() {\n    Region root = cache.getRegion(\"/root/portfolios\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(!ra.getIndexMaintenanceSynchronous());\n    } else\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/DeclarativeIndexCreationJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testSynchronousIndexCreatedOnRootRegion() {\n    Region root = cache.getRegion(\"/root\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(ra.getIndexMaintenanceSynchronous());\n    } else\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n  }\n","date":"2018-07-18 03:54:18","endLine":118,"groupId":"6313","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSynchronousIndexCreatedOnRootRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/94/7766db43fab72fbcd64863f6014d543e7b68ee.src","preCode":"  public void testSynchronousIndexCreatedOnRootRegion() {\n    Region root = cache.getRegion(\"/root\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(ra.getIndexMaintenanceSynchronous());\n    } else\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/DeclarativeIndexCreationJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2020-05-29 00:37:39","commitOrder":2,"curCode":"  public void testAsynchronousIndexCreatedOnRoot_PortfoliosRegion() {\n    Region root = cache.getRegion(SEPARATOR + \"root\" + SEPARATOR + \"portfolios\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(!ra.getIndexMaintenanceSynchronous());\n    } else\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n  }\n","date":"2020-05-29 00:37:39","endLine":86,"groupId":"6313","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAsynchronousIndexCreatedOnRoot_PortfoliosRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c3/9d30e7c52dfe4dcd6cdd5e13d3b7ca61fb92c6.src","preCode":"  public void testAsynchronousIndexCreatedOnRoot_PortfoliosRegion() {\n    Region root = cache.getRegion(\"/root/portfolios\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(!ra.getIndexMaintenanceSynchronous());\n    } else\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/DeclarativeIndexCreationJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2020-05-29 00:37:39","commitOrder":2,"curCode":"  public void testSynchronousIndexCreatedOnRootRegion() {\n    Region root = cache.getRegion(SEPARATOR + \"root\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(ra.getIndexMaintenanceSynchronous());\n    } else\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n  }\n","date":"2020-05-29 00:37:39","endLine":121,"groupId":"6313","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSynchronousIndexCreatedOnRootRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c3/9d30e7c52dfe4dcd6cdd5e13d3b7ca61fb92c6.src","preCode":"  public void testSynchronousIndexCreatedOnRootRegion() {\n    Region root = cache.getRegion(\"/root\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(ra.getIndexMaintenanceSynchronous());\n    } else\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/DeclarativeIndexCreationJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"},{"authorTime":"2021-06-04 00:32:09","codes":[{"authorDate":"2021-06-04 00:32:09","commitOrder":3,"curCode":"  public void testAsynchronousIndexCreatedOnRoot_PortfoliosRegion() {\n    Region root = cache.getRegion(SEPARATOR + \"root\" + SEPARATOR + \"portfolios\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(!ra.getIndexMaintenanceSynchronous());\n    } else {\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n    }\n  }\n","date":"2021-06-04 00:32:09","endLine":87,"groupId":"104629","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testAsynchronousIndexCreatedOnRoot_PortfoliosRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c6/766a150f1f4b3ebc11bbae6a52654ddfcd0d1a.src","preCode":"  public void testAsynchronousIndexCreatedOnRoot_PortfoliosRegion() {\n    Region root = cache.getRegion(SEPARATOR + \"root\" + SEPARATOR + \"portfolios\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(!ra.getIndexMaintenanceSynchronous());\n    } else\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/DeclarativeIndexCreationJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2021-06-04 00:32:09","commitOrder":3,"curCode":"  public void testSynchronousIndexCreatedOnRootRegion() {\n    Region root = cache.getRegion(SEPARATOR + \"root\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(ra.getIndexMaintenanceSynchronous());\n    } else {\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n    }\n  }\n","date":"2021-06-04 00:32:09","endLine":125,"groupId":"104629","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testSynchronousIndexCreatedOnRootRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c6/766a150f1f4b3ebc11bbae6a52654ddfcd0d1a.src","preCode":"  public void testSynchronousIndexCreatedOnRootRegion() {\n    Region root = cache.getRegion(SEPARATOR + \"root\");\n    IndexManager im = IndexUtils.getIndexManager((InternalCache) cache, root, true);\n    Collection coll = im.getIndexes();\n    if (coll.size() > 0) {\n      assertTrue(true);\n      CacheUtils.log(\"List of indexes= \" + im.toString());\n      RegionAttributes ra = root.getAttributes();\n      assertTrue(ra.getIndexMaintenanceSynchronous());\n    } else\n      fail(\n          \"DeclarativeIndexCreationJUnitTest::testAsynchronousIndexCreatedOnRoot_PortfoliosRegion:No index found in the root region\");\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/DeclarativeIndexCreationJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"2879573ffb04e9e029e14ca37d8a064268cc8f44","commitMessage":"@@@GEODE-7864: Always use curly braces for control flow statements (#6523)\n\nAuthored-by: Donal Evans <doevans@vmware.com>","date":"2021-06-04 00:32:09","modifiedFileCount":"640","status":"M","submitter":"Donal Evans"}]
