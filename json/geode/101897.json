[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds() {\n    doAnswer(new Answer<Object>() {\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId), eq(colocatedRegionBytes), any(Completion.class));\n    \n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes, completionSentToWrapper);\n    \n    \r\n    for( PartitionRebalanceDetailsImpl details : rebalanceDetails) {\n      if(details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME))\n        verify(details, times(1)).incCreates(eq(colocatedRegionBytes.get(PR_LEADER_REGION_NAME)), anyLong());\n      else if(details.getRegionPath().equals(PR_COLOCATED_REGION_NAME))\n        verify(details, times(1)).incTransfers(colocatedRegionBytes.get(PR_COLOCATED_REGION_NAME), 0); \r\n    }\n  }\n","date":"2016-09-15 02:08:18","endLine":127,"groupId":"8467","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d6/f7b8994f9ae226197cb1543fcf38e5efe0295e.src","preCode":"  public void bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds() {\n    doAnswer(new Answer<Object>() {\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId), eq(colocatedRegionBytes), any(Completion.class));\n    \n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes, completionSentToWrapper);\n    \n    \r\n    for( PartitionRebalanceDetailsImpl details : rebalanceDetails) {\n      if(details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME))\n        verify(details, times(1)).incCreates(eq(colocatedRegionBytes.get(PR_LEADER_REGION_NAME)), anyLong());\n      else if(details.getRegionPath().equals(PR_COLOCATED_REGION_NAME))\n        verify(details, times(1)).incTransfers(colocatedRegionBytes.get(PR_COLOCATED_REGION_NAME), 0); \r\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorWrapperTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void bucketWrapperShouldInvokeOnSuccessWhenCreateBucketSucceeds() {       \n    doAnswer(new Answer<Object>() {\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId), eq(colocatedRegionBytes), any(Completion.class));\n    \n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes, completionSentToWrapper);\n    \n    verify(completionSentToWrapper, times(1)).onSuccess();\n  }\n","date":"2016-09-15 02:08:18","endLine":179,"groupId":"8467","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bucketWrapperShouldInvokeOnSuccessWhenCreateBucketSucceeds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d6/f7b8994f9ae226197cb1543fcf38e5efe0295e.src","preCode":"  public void bucketWrapperShouldInvokeOnSuccessWhenCreateBucketSucceeds() {       \n    doAnswer(new Answer<Object>() {\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId), eq(colocatedRegionBytes), any(Completion.class));\n    \n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes, completionSentToWrapper);\n    \n    verify(completionSentToWrapper, times(1)).onSuccess();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorWrapperTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2019-01-12 07:53:54","codes":[{"authorDate":"2019-01-12 07:53:54","commitOrder":2,"curCode":"  public void bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds() {\n    doAnswer(new Answer<Object>() {\n      @Override\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId),\n        eq(colocatedRegionBytes), any(Completion.class));\n\n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes,\n        completionSentToWrapper);\n\n    \r\n    for (PartitionRebalanceDetailsImpl details : rebalanceDetails) {\n      if (details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME))\n        verify(details, times(1)).incCreates(eq(colocatedRegionBytes.get(PR_LEADER_REGION_NAME)),\n            anyLong());\n      else if (details.getRegionPath().equals(PR_COLOCATED_REGION_NAME))\n        verify(details, times(1)).incTransfers(colocatedRegionBytes.get(PR_COLOCATED_REGION_NAME),\n            0); \r\n    }\n  }\n","date":"2019-01-12 07:53:54","endLine":130,"groupId":"8467","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ce/da46a867a1ae2f6c71a9a8b1ea3a489bb10579.src","preCode":"  public void bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds() {\n    doAnswer(new Answer<Object>() {\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId),\n        eq(colocatedRegionBytes), any(Completion.class));\n\n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes,\n        completionSentToWrapper);\n\n    \r\n    for (PartitionRebalanceDetailsImpl details : rebalanceDetails) {\n      if (details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME))\n        verify(details, times(1)).incCreates(eq(colocatedRegionBytes.get(PR_LEADER_REGION_NAME)),\n            anyLong());\n      else if (details.getRegionPath().equals(PR_COLOCATED_REGION_NAME))\n        verify(details, times(1)).incTransfers(colocatedRegionBytes.get(PR_COLOCATED_REGION_NAME),\n            0); \r\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorWrapperTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2019-01-12 07:53:54","commitOrder":2,"curCode":"  public void bucketWrapperShouldInvokeOnSuccessWhenCreateBucketSucceeds() {\n    doAnswer(new Answer<Object>() {\n      @Override\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId),\n        eq(colocatedRegionBytes), any(Completion.class));\n\n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes,\n        completionSentToWrapper);\n\n    verify(completionSentToWrapper, times(1)).onSuccess();\n  }\n","date":"2019-01-12 07:53:54","endLine":191,"groupId":"8467","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bucketWrapperShouldInvokeOnSuccessWhenCreateBucketSucceeds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ce/da46a867a1ae2f6c71a9a8b1ea3a489bb10579.src","preCode":"  public void bucketWrapperShouldInvokeOnSuccessWhenCreateBucketSucceeds() {\n    doAnswer(new Answer<Object>() {\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId),\n        eq(colocatedRegionBytes), any(Completion.class));\n\n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes,\n        completionSentToWrapper);\n\n    verify(completionSentToWrapper, times(1)).onSuccess();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorWrapperTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"}],"commitId":"9d737c9e95a77cb4db05a258f318908e7899bd6c","commitMessage":"@@@GEODE-4391: Add `@Override` where missing. (#3069)\n\n* GEODE-4391: Add `@Override` where missing.\n\n* Restart Concourse.  I think that was flaky.\n","date":"2019-01-12 07:53:54","modifiedFileCount":"1582","status":"M","submitter":"Galen O'Sullivan"},{"authorTime":"2019-01-12 07:53:54","codes":[{"authorDate":"2021-06-04 00:32:09","commitOrder":3,"curCode":"  public void bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds() {\n    doAnswer(new Answer<Object>() {\n      @Override\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId),\n        eq(colocatedRegionBytes), any(Completion.class));\n\n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes,\n        completionSentToWrapper);\n\n    \r\n    for (PartitionRebalanceDetailsImpl details : rebalanceDetails) {\n      if (details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME)) {\n        verify(details, times(1)).incCreates(eq(colocatedRegionBytes.get(PR_LEADER_REGION_NAME)),\n            anyLong());\n      } else if (details.getRegionPath().equals(PR_COLOCATED_REGION_NAME)) {\n        verify(details, times(1)).incTransfers(colocatedRegionBytes.get(PR_COLOCATED_REGION_NAME),\n            0); \r\n      }\n    }\n  }\n","date":"2021-06-04 00:32:09","endLine":131,"groupId":"101897","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9c/78a6b58709168854053f14a1247a190fb2a3cc.src","preCode":"  public void bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds() {\n    doAnswer(new Answer<Object>() {\n      @Override\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId),\n        eq(colocatedRegionBytes), any(Completion.class));\n\n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes,\n        completionSentToWrapper);\n\n    \r\n    for (PartitionRebalanceDetailsImpl details : rebalanceDetails) {\n      if (details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME))\n        verify(details, times(1)).incCreates(eq(colocatedRegionBytes.get(PR_LEADER_REGION_NAME)),\n            anyLong());\n      else if (details.getRegionPath().equals(PR_COLOCATED_REGION_NAME))\n        verify(details, times(1)).incTransfers(colocatedRegionBytes.get(PR_COLOCATED_REGION_NAME),\n            0); \r\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorWrapperTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2019-01-12 07:53:54","commitOrder":3,"curCode":"  public void bucketWrapperShouldInvokeOnSuccessWhenCreateBucketSucceeds() {\n    doAnswer(new Answer<Object>() {\n      @Override\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId),\n        eq(colocatedRegionBytes), any(Completion.class));\n\n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes,\n        completionSentToWrapper);\n\n    verify(completionSentToWrapper, times(1)).onSuccess();\n  }\n","date":"2019-01-12 07:53:54","endLine":191,"groupId":"101897","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"bucketWrapperShouldInvokeOnSuccessWhenCreateBucketSucceeds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ce/da46a867a1ae2f6c71a9a8b1ea3a489bb10579.src","preCode":"  public void bucketWrapperShouldInvokeOnSuccessWhenCreateBucketSucceeds() {\n    doAnswer(new Answer<Object>() {\n      @Override\n      public Object answer(InvocationOnMock invocation) {\n        \r\n        ((Completion) invocation.getArguments()[3]).onSuccess();\n        return null;\n      }\n    }).when(delegate).createRedundantBucket(eq(targetMember), eq(bucketId),\n        eq(colocatedRegionBytes), any(Completion.class));\n\n    Completion completionSentToWrapper = mock(Completion.class);\n    wrapper.createRedundantBucket(targetMember, bucketId, colocatedRegionBytes,\n        completionSentToWrapper);\n\n    verify(completionSentToWrapper, times(1)).onSuccess();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorWrapperTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"N"}],"commitId":"2879573ffb04e9e029e14ca37d8a064268cc8f44","commitMessage":"@@@GEODE-7864: Always use curly braces for control flow statements (#6523)\n\nAuthored-by: Donal Evans <doevans@vmware.com>","date":"2021-06-04 00:32:09","modifiedFileCount":"640","status":"M","submitter":"Donal Evans"}]
