[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void integratedSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(true);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for(Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n    for (Object key : KEYS) {\n      verify(this.securityService).authorizeRegionRead(eq(REGION_NAME), eq(key.toString()));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(this.serverConnection);\n  }\n","date":"2016-09-15 02:08:18","endLine":140,"groupId":"48546","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"integratedSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d8/040daaa7dbdfdbca68cde2e12ed2759b798414.src","preCode":"  public void integratedSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(true);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for(Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n    for (Object key : KEYS) {\n      verify(this.securityService).authorizeRegionRead(eq(REGION_NAME), eq(key.toString()));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(this.serverConnection);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/GetAll70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for(Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n\n    for (Object key: KEYS) {\n      verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(key.toString()), eq(null));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(eq(this.serverConnection));\n  }\n","date":"2016-09-15 02:08:18","endLine":188,"groupId":"48547","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"oldSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d8/040daaa7dbdfdbca68cde2e12ed2759b798414.src","preCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for(Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n\n    for (Object key: KEYS) {\n      verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(key.toString()), eq(null));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(eq(this.serverConnection));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/GetAll70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2017-06-01 07:13:20","codes":[{"authorDate":"2017-06-01 07:13:20","commitOrder":2,"curCode":"  public void integratedSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(true);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for (Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n    for (Object key : KEYS) {\n      verify(this.securityService).authorizeRegionRead(eq(REGION_NAME), eq(key.toString()));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(this.serverConnection);\n  }\n","date":"2017-06-10 01:17:12","endLine":140,"groupId":"48546","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"integratedSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/95/e95f5cc27b3b42474b55c2577b54edfc0d6d9c.src","preCode":"  public void integratedSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(true);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for (Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n    for (Object key : KEYS) {\n      verify(this.securityService).authorizeRegionRead(eq(REGION_NAME), eq(key.toString()));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(this.serverConnection);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/GetAll70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"},{"authorDate":"2017-06-01 07:13:20","commitOrder":2,"curCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for (Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n\n    for (Object key : KEYS) {\n      verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(key.toString()), eq(null));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(eq(this.serverConnection));\n  }\n","date":"2017-06-10 01:17:12","endLine":189,"groupId":"48547","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"oldSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/95/e95f5cc27b3b42474b55c2577b54edfc0d6d9c.src","preCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for (Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n\n    for (Object key : KEYS) {\n      verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(key.toString()), eq(null));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(eq(this.serverConnection));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/GetAll70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"0211029baf497bbcca2670dbabe610d84bc626a5","commitMessage":"@@@GEODE-2632: use immutable SecurityService impls to improve performance\n\n* misc code clean up in classes touched by changes\n* new unit tests for SecurityService\n","date":"2017-06-10 01:17:12","modifiedFileCount":"198","status":"M","submitter":"Kirk Lund"},{"authorTime":"2017-06-01 07:13:20","codes":[{"authorDate":"2017-09-08 01:57:33","commitOrder":3,"curCode":"  public void integratedSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(true);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for (Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n    for (Object key : KEYS) {\n      verify(this.securityService).authorize(Resource.DATA, Operation.READ, REGION_NAME,\n          key.toString());\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(this.serverConnection);\n  }\n","date":"2017-09-12 03:52:49","endLine":146,"groupId":"10909","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"integratedSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8d/49b8798fe085e7f6ce8e6ea938410a973e94d7.src","preCode":"  public void integratedSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(true);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for (Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n    for (Object key : KEYS) {\n      verify(this.securityService).authorizeRegionRead(eq(REGION_NAME), eq(key.toString()));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(this.serverConnection);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/GetAll70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"},{"authorDate":"2017-06-01 07:13:20","commitOrder":3,"curCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for (Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n\n    for (Object key : KEYS) {\n      verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(key.toString()), eq(null));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(eq(this.serverConnection));\n  }\n","date":"2017-06-10 01:17:12","endLine":189,"groupId":"10909","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"oldSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/95/e95f5cc27b3b42474b55c2577b54edfc0d6d9c.src","preCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.getAll70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    ArgumentCaptor<ObjectPartList> argument = ArgumentCaptor.forClass(ObjectPartList.class);\n    verify(this.chunkedResponseMessage).addObjPartNoCopying(argument.capture());\n\n    assertThat(argument.getValue().getObjects()).hasSize(KEYS.length);\n    for (Object key : argument.getValue().getKeys()) {\n      assertThat(key).isIn(KEYS);\n    }\n\n    for (Object key : KEYS) {\n      verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(key.toString()), eq(null));\n    }\n\n    verify(this.chunkedResponseMessage).sendChunk(eq(this.serverConnection));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/GetAll70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"N"}],"commitId":"e00673b254a118851fa5c6aa17a741ace52223b2","commitMessage":"@@@GEODE-2817: consolidate authorize(*) methods\n","date":"2017-09-12 03:52:49","modifiedFileCount":"82","status":"M","submitter":"Jinmei Liao"}]
