[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void createValuesWithTime(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.createTime = System.currentTimeMillis();\n          region1.put(KEY + i, portfolio);\n        }\n        LogWriterUtils.getLogWriter()\n            .info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","date":"2018-07-18 03:54:18","endLine":484,"groupId":"6846","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createValuesWithTime","params":"(VMvm@finalStringregionName@finalintsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1f/72f987b8bfe0450ffa77a55fdf0efa1c66c36f.src","preCode":"  public void createValuesWithTime(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.createTime = System.currentTimeMillis();\n          region1.put(KEY + i, portfolio);\n        }\n        LogWriterUtils.getLogWriter()\n            .info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqQueryDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":471,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void createValuesWithShort(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.shortID = new Short(\"\" + i);\n          region1.put(KEY + i, portfolio);\n        }\n        LogWriterUtils.getLogWriter()\n            .info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","date":"2018-07-18 03:54:18","endLine":499,"groupId":"5256","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createValuesWithShort","params":"(VMvm@finalStringregionName@finalintsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1f/72f987b8bfe0450ffa77a55fdf0efa1c66c36f.src","preCode":"  public void createValuesWithShort(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.shortID = new Short(\"\" + i);\n          region1.put(KEY + i, portfolio);\n        }\n        LogWriterUtils.getLogWriter()\n            .info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqQueryDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-08-31 08:10:50","codes":[{"authorDate":"2018-08-31 08:10:50","commitOrder":2,"curCode":"  public void createValuesWithTime(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.createTime = System.currentTimeMillis();\n          region1.put(KEY + i, portfolio);\n        }\n        logger.info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","date":"2018-08-31 08:10:50","endLine":443,"groupId":"6846","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createValuesWithTime","params":"(VMvm@finalStringregionName@finalintsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7e/66814e44a3bcce352a36d519d0565a40bf5630.src","preCode":"  public void createValuesWithTime(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.createTime = System.currentTimeMillis();\n          region1.put(KEY + i, portfolio);\n        }\n        LogWriterUtils.getLogWriter()\n            .info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqQueryDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":431,"status":"M"},{"authorDate":"2018-08-31 08:10:50","commitOrder":2,"curCode":"  private void createValuesWithShort(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.shortID = new Short(\"\" + i);\n          region1.put(KEY + i, portfolio);\n        }\n        logger.info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","date":"2018-08-31 08:10:50","endLine":457,"groupId":"5256","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createValuesWithShort","params":"(VMvm@finalStringregionName@finalintsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7e/66814e44a3bcce352a36d519d0565a40bf5630.src","preCode":"  public void createValuesWithShort(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.shortID = new Short(\"\" + i);\n          region1.put(KEY + i, portfolio);\n        }\n        LogWriterUtils.getLogWriter()\n            .info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqQueryDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":445,"status":"M"}],"commitId":"46b78978d894e8851daf86d929ae5efbd9093097","commitMessage":"@@@GEODE-5411: Adding awaitility fixing timing issue in CqPerfDUnitTest\n\n- Fixing timing issue by waiting for cq set to reach the right size\n- Code modernization and cleanup","date":"2018-08-31 08:10:50","modifiedFileCount":"3","status":"M","submitter":"mhansonp"},{"authorTime":"2019-01-12 07:53:54","codes":[{"authorDate":"2019-01-12 07:53:54","commitOrder":3,"curCode":"  public void createValuesWithTime(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      @Override\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.createTime = System.currentTimeMillis();\n          region1.put(KEY + i, portfolio);\n        }\n        logger.info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","date":"2019-01-12 07:53:54","endLine":451,"groupId":"10465","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createValuesWithTime","params":"(VMvm@finalStringregionName@finalintsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/12/01d65d4e254284a3b2774d91deec45ce8f0fa0.src","preCode":"  public void createValuesWithTime(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.createTime = System.currentTimeMillis();\n          region1.put(KEY + i, portfolio);\n        }\n        logger.info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqQueryDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":438,"status":"M"},{"authorDate":"2019-01-12 07:53:54","commitOrder":3,"curCode":"  private void createValuesWithShort(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      @Override\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.shortID = new Short(\"\" + i);\n          region1.put(KEY + i, portfolio);\n        }\n        logger.info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","date":"2019-01-12 07:53:54","endLine":466,"groupId":"10465","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createValuesWithShort","params":"(VMvm@finalStringregionName@finalintsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/12/01d65d4e254284a3b2774d91deec45ce8f0fa0.src","preCode":"  private void createValuesWithShort(VM vm, final String regionName, final int size) {\n    vm.invoke(new CacheSerializableRunnable(\"Create values\") {\n      public void run2() throws CacheException {\n        Region region1 = getRootRegion().getSubregion(regionName);\n        for (int i = 1; i <= size; i++) {\n          Portfolio portfolio = new Portfolio(i);\n          portfolio.shortID = new Short(\"\" + i);\n          region1.put(KEY + i, portfolio);\n        }\n        logger.info(\"### Number of Entries in Region :\" + region1.keySet().size());\n      }\n    });\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqQueryDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":453,"status":"M"}],"commitId":"9d737c9e95a77cb4db05a258f318908e7899bd6c","commitMessage":"@@@GEODE-4391: Add `@Override` where missing. (#3069)\n\n* GEODE-4391: Add `@Override` where missing.\n\n* Restart Concourse.  I think that was flaky.\n","date":"2019-01-12 07:53:54","modifiedFileCount":"1582","status":"M","submitter":"Galen O'Sullivan"}]
