[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  void putBeforeRoll(final Region region) {\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void beforeGoingToCompact() {\n        region.put(\"Key\", \"Value2\");\n      }\n\n      public void afterHavingCompacted() {\n        synchronized (region) {\n          region.notify();\n          hasBeenNotified = true;\n        }\n      }\n    });\n    region.put(\"Key\", \"Value1\");\n    switchOplog(region);\n    synchronized (region) {\n      if (!hasBeenNotified) {\n        try {\n          region.wait(10000);\n          assertTrue(hasBeenNotified);\n        } catch (InterruptedException e) {\n          throw new AssertionError(\"exception not expected here\", e);\n        }\n      }\n    }\n    try {\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      throw new AssertionError(\"Entry not found although was supposed to be there\", e);\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":86,"groupId":"5533","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"putBeforeRoll","params":"(finalRegionregion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/01/4ec96aba049f8ca2258b24c544bf8c13cef694.src","preCode":"  void putBeforeRoll(final Region region) {\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void beforeGoingToCompact() {\n        region.put(\"Key\", \"Value2\");\n      }\n\n      public void afterHavingCompacted() {\n        synchronized (region) {\n          region.notify();\n          hasBeenNotified = true;\n        }\n      }\n    });\n    region.put(\"Key\", \"Value1\");\n    switchOplog(region);\n    synchronized (region) {\n      if (!hasBeenNotified) {\n        try {\n          region.wait(10000);\n          assertTrue(hasBeenNotified);\n        } catch (InterruptedException e) {\n          throw new AssertionError(\"exception not expected here\", e);\n        }\n      }\n    }\n    try {\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      throw new AssertionError(\"Entry not found although was supposed to be there\", e);\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ConcurrentRollingAndRegionOperationsJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  void getAfterRoll(final Region region) {\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void afterHavingCompacted() {\n        synchronized (region) {\n          region.notify();\n          hasBeenNotified = true;\n        }\n      }\n    });\n    region.put(\"Key\", \"Value1\");\n    switchOplog(region);\n    synchronized (region) {\n      if (!hasBeenNotified) {\n        try {\n          region.wait(10000);\n          assertTrue(hasBeenNotified);\n        } catch (InterruptedException e) {\n          throw new AssertionError(\"exception not expected here\", e);\n        }\n      }\n    }\n    region.get(\"Key\");\n    try {\n      assertEquals(\"Value1\", getValueOnDisk(region));\n      assertEquals(\"Value1\", getValueInHTree(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      throw new AssertionError(\"Entry not found although was supposed to be there\", e);\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":278,"groupId":"5533","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getAfterRoll","params":"(finalRegionregion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/01/4ec96aba049f8ca2258b24c544bf8c13cef694.src","preCode":"  void getAfterRoll(final Region region) {\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void afterHavingCompacted() {\n        synchronized (region) {\n          region.notify();\n          hasBeenNotified = true;\n        }\n      }\n    });\n    region.put(\"Key\", \"Value1\");\n    switchOplog(region);\n    synchronized (region) {\n      if (!hasBeenNotified) {\n        try {\n          region.wait(10000);\n          assertTrue(hasBeenNotified);\n        } catch (InterruptedException e) {\n          throw new AssertionError(\"exception not expected here\", e);\n        }\n      }\n    }\n    region.get(\"Key\");\n    try {\n      assertEquals(\"Value1\", getValueOnDisk(region));\n      assertEquals(\"Value1\", getValueInHTree(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      throw new AssertionError(\"Entry not found although was supposed to be there\", e);\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ConcurrentRollingAndRegionOperationsJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2019-01-12 07:53:54","codes":[{"authorDate":"2019-01-12 07:53:54","commitOrder":2,"curCode":"  void putBeforeRoll(final Region region) {\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      @Override\n      public void beforeGoingToCompact() {\n        region.put(\"Key\", \"Value2\");\n      }\n\n      @Override\n      public void afterHavingCompacted() {\n        synchronized (region) {\n          region.notify();\n          hasBeenNotified = true;\n        }\n      }\n    });\n    region.put(\"Key\", \"Value1\");\n    switchOplog(region);\n    synchronized (region) {\n      if (!hasBeenNotified) {\n        try {\n          region.wait(10000);\n          assertTrue(hasBeenNotified);\n        } catch (InterruptedException e) {\n          throw new AssertionError(\"exception not expected here\", e);\n        }\n      }\n    }\n    try {\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      throw new AssertionError(\"Entry not found although was supposed to be there\", e);\n    }\n  }\n","date":"2019-01-12 07:53:54","endLine":88,"groupId":"104102","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"putBeforeRoll","params":"(finalRegionregion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9b/76fdfbb79c62d268b84f4a448bb4c7f4080739.src","preCode":"  void putBeforeRoll(final Region region) {\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void beforeGoingToCompact() {\n        region.put(\"Key\", \"Value2\");\n      }\n\n      public void afterHavingCompacted() {\n        synchronized (region) {\n          region.notify();\n          hasBeenNotified = true;\n        }\n      }\n    });\n    region.put(\"Key\", \"Value1\");\n    switchOplog(region);\n    synchronized (region) {\n      if (!hasBeenNotified) {\n        try {\n          region.wait(10000);\n          assertTrue(hasBeenNotified);\n        } catch (InterruptedException e) {\n          throw new AssertionError(\"exception not expected here\", e);\n        }\n      }\n    }\n    try {\n      assertEquals(\"Value2\", getValueOnDisk(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      throw new AssertionError(\"Entry not found although was supposed to be there\", e);\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ConcurrentRollingAndRegionOperationsJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2019-01-12 07:53:54","commitOrder":2,"curCode":"  void getAfterRoll(final Region region) {\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      @Override\n      public void afterHavingCompacted() {\n        synchronized (region) {\n          region.notify();\n          hasBeenNotified = true;\n        }\n      }\n    });\n    region.put(\"Key\", \"Value1\");\n    switchOplog(region);\n    synchronized (region) {\n      if (!hasBeenNotified) {\n        try {\n          region.wait(10000);\n          assertTrue(hasBeenNotified);\n        } catch (InterruptedException e) {\n          throw new AssertionError(\"exception not expected here\", e);\n        }\n      }\n    }\n    region.get(\"Key\");\n    try {\n      assertEquals(\"Value1\", getValueOnDisk(region));\n      assertEquals(\"Value1\", getValueInHTree(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      throw new AssertionError(\"Entry not found although was supposed to be there\", e);\n    }\n  }\n","date":"2019-01-12 07:53:54","endLine":287,"groupId":"104102","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getAfterRoll","params":"(finalRegionregion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9b/76fdfbb79c62d268b84f4a448bb4c7f4080739.src","preCode":"  void getAfterRoll(final Region region) {\n    CacheObserverHolder.setInstance(new CacheObserverAdapter() {\n\n      public void afterHavingCompacted() {\n        synchronized (region) {\n          region.notify();\n          hasBeenNotified = true;\n        }\n      }\n    });\n    region.put(\"Key\", \"Value1\");\n    switchOplog(region);\n    synchronized (region) {\n      if (!hasBeenNotified) {\n        try {\n          region.wait(10000);\n          assertTrue(hasBeenNotified);\n        } catch (InterruptedException e) {\n          throw new AssertionError(\"exception not expected here\", e);\n        }\n      }\n    }\n    region.get(\"Key\");\n    try {\n      assertEquals(\"Value1\", getValueOnDisk(region));\n      assertEquals(\"Value1\", getValueInHTree(region));\n    } catch (EntryNotFoundException e) {\n      logWriter.error(\"Exception occurred\", e);\n      throw new AssertionError(\"Entry not found although was supposed to be there\", e);\n    }\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ConcurrentRollingAndRegionOperationsJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"9d737c9e95a77cb4db05a258f318908e7899bd6c","commitMessage":"@@@GEODE-4391: Add `@Override` where missing. (#3069)\n\n* GEODE-4391: Add `@Override` where missing.\n\n* Restart Concourse.  I think that was flaky.\n","date":"2019-01-12 07:53:54","modifiedFileCount":"1582","status":"M","submitter":"Galen O'Sullivan"}]
