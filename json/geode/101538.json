[{"authorTime":"2019-04-05 11:38:24","codes":[{"authorDate":"2019-04-05 11:38:24","commitOrder":2,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n\n    ClusterManagementResult result = cmsClient.create(region, \"\");\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region, \"\");\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-04-05 11:38:24","endLine":68,"groupId":"36145","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e8/eb0d5f9a56625628f60b0a536ca9baa9c323cd.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n\n    ClusterManagementResult result = cmsClient.create(region, \"\");\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region, \"\");\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"MB"},{"authorDate":"2019-04-05 11:38:24","commitOrder":2,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n\n    ClusterManagementResult result = cmsClient.create(region, null);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","date":"2019-04-05 11:38:24","endLine":80,"groupId":"36145","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e8/eb0d5f9a56625628f60b0a536ca9baa9c323cd.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n\n    ClusterManagementResult result = cmsClient.create(region, null);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"}],"commitId":"0d31a859219f118e671f3bdbf040d5657725725a","commitMessage":"@@@GEODE-6560 - Geode Management REST supports creating regions by group (#3400)\n\nCo-authored-by: Owen Nichols <onichols@pivotal.io>","date":"2019-04-05 11:38:24","modifiedFileCount":"7","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-04-10 03:10:24","codes":[{"authorDate":"2019-04-10 03:10:24","commitOrder":3,"curCode":"  public void createRegion() {\n    BasicRegionConfig region = new BasicRegionConfig();\n    region.setName(\"customer\");\n\n    ClusterManagementResult result = cmsClient.create(region, \"\");\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region, \"\");\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-04-10 03:10:24","endLine":68,"groupId":"36145","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/aaad248bd8d86c317945001c74bd9d2389b062.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n\n    ClusterManagementResult result = cmsClient.create(region, \"\");\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region, \"\");\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-04-10 03:10:24","commitOrder":3,"curCode":"  public void createRegionWithNullGroup() {\n    BasicRegionConfig region = new BasicRegionConfig();\n    region.setName(\"orders\");\n\n    ClusterManagementResult result = cmsClient.create(region, null);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","date":"2019-04-10 03:10:24","endLine":80,"groupId":"36145","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/aaad248bd8d86c317945001c74bd9d2389b062.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n\n    ClusterManagementResult result = cmsClient.create(region, null);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"2402cac0e2c5e50b72e0ded3e8dc17d111265b2f","commitMessage":"@@@GEODE-6612: move attributes that can not be configured in v2 api out of RegionConfig (#3425)\n\n\n","date":"2019-04-10 03:10:24","modifiedFileCount":"26","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-04-10 08:24:33","codes":[{"authorDate":"2019-04-10 08:24:33","commitOrder":4,"curCode":"  public void createRegion() {\n    BasicRegionConfig region = new BasicRegionConfig();\n    region.setName(\"customer\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-04-10 08:24:33","endLine":68,"groupId":"36145","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f5/cfcdec6032cab50619e08dfe53de6d867c3f67.src","preCode":"  public void createRegion() {\n    BasicRegionConfig region = new BasicRegionConfig();\n    region.setName(\"customer\");\n\n    ClusterManagementResult result = cmsClient.create(region, \"\");\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region, \"\");\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-04-10 08:24:33","commitOrder":4,"curCode":"  public void createRegionWithNullGroup() {\n    BasicRegionConfig region = new BasicRegionConfig();\n    region.setName(\"orders\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","date":"2019-04-10 08:24:33","endLine":80,"groupId":"36145","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f5/cfcdec6032cab50619e08dfe53de6d867c3f67.src","preCode":"  public void createRegionWithNullGroup() {\n    BasicRegionConfig region = new BasicRegionConfig();\n    region.setName(\"orders\");\n\n    ClusterManagementResult result = cmsClient.create(region, null);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"c5e52ef4f738b2f197c83deb290a3ad86ee0fbf3","commitMessage":"@@@GEODE-6612: make group an attribute in CacheElement (#3437)\n\n\n","date":"2019-04-10 08:24:33","modifiedFileCount":"18","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-04-16 00:55:36","codes":[{"authorDate":"2019-04-16 00:55:36","commitOrder":5,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-04-16 00:55:36","endLine":68,"groupId":"36145","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4b/4da9aa42c6a5e93289a404cb8aa8f1c006a104.src","preCode":"  public void createRegion() {\n    BasicRegionConfig region = new BasicRegionConfig();\n    region.setName(\"customer\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-04-16 00:55:36","commitOrder":5,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","date":"2019-04-16 00:55:36","endLine":80,"groupId":"36145","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4b/4da9aa42c6a5e93289a404cb8aa8f1c006a104.src","preCode":"  public void createRegionWithNullGroup() {\n    BasicRegionConfig region = new BasicRegionConfig();\n    region.setName(\"orders\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"e1658a39e343edee8dd51405ec80606171e38c7b","commitMessage":"@@@Revert \"GEODE-6612: move attributes that can not be configured in v2 ? (#3461)\n\nThis reverts commit 2402cac0\n\n* document what's supported in management v2 api.\n","date":"2019-04-16 00:55:36","modifiedFileCount":"29","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-05-12 01:42:15","codes":[{"authorDate":"2019-05-12 01:42:15","commitOrder":6,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-05-12 01:42:15","endLine":78,"groupId":"36145","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/bb/2b3ba1b0c703ae2fb3ea39c2ce009ab1073f6b.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2019-05-12 01:42:15","commitOrder":6,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","date":"2019-05-12 01:42:15","endLine":91,"groupId":"36145","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/bb/2b3ba1b0c703ae2fb3ea39c2ce009ab1073f6b.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"1f458c9516d476f0889708210e76e892985f41c7","commitMessage":"@@@GEODE-6756: rework type and regionAttributes setter/getter (#3578)\n\nCo-authored-by: Jens Deppe <jdeppe@pivotal.io>\n\n* make type a required attribute for RegionConfig\n* Do the type to attributes mapping in the RegionConfigValidator for the ultimate attributes validation.","date":"2019-05-12 01:42:15","modifiedFileCount":"15","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-06-19 06:26:48","codes":[{"authorDate":"2019-06-19 06:26:48","commitOrder":7,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-06-19 06:26:48","endLine":72,"groupId":"36145","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b6/d920b037c30d5fbd24af92b7fc520cb75357d8.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2019-06-19 06:26:48","commitOrder":7,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","date":"2019-06-19 06:26:48","endLine":85,"groupId":"36145","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b6/d920b037c30d5fbd24af92b7fc520cb75357d8.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"a60ade270e3dc1901fe900e2521351bdc93ecced","commitMessage":"@@@GEODE-6861: Generify ClusterManagementService (#3708)\n\n* GEODE-6861: Generify ClusterManagementService","date":"2019-06-19 06:26:48","modifiedFileCount":"50","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-06-20 06:30:55","codes":[{"authorDate":"2019-06-20 06:30:55","commitOrder":8,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-06-20 06:30:55","endLine":74,"groupId":"36145","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2e/b11fd204eb7e6d42ce7bac32a5101cd5a1cdf9.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2019-06-20 06:30:55","commitOrder":8,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","date":"2019-06-20 06:30:55","endLine":88,"groupId":"36145","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2e/b11fd204eb7e6d42ce7bac32a5101cd5a1cdf9.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).containsOnlyKeys(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"94cd789a18181ac4640b715bab5428d537103cd0","commitMessage":"@@@GEODE-6811: refactor MemberStatus in ClusterManagementResult (#3709)\n\n* change memberStatus in ClusterManagementResult to use RealizationResult","date":"2019-06-20 06:30:55","modifiedFileCount":"17","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-06-28 00:27:11","codes":[{"authorDate":"2019-06-28 00:27:11","commitOrder":9,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    SimpleClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-06-28 00:27:11","endLine":75,"groupId":"36145","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2f/c8f3121a0bd2dccb55776b132a11d738a5e333.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2019-06-28 00:27:11","commitOrder":9,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    SimpleClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","date":"2019-06-28 00:27:11","endLine":89,"groupId":"36145","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2f/c8f3121a0bd2dccb55776b132a11d738a5e333.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"b3157c94cd9738be618b59b3f0ab064a9356a589","commitMessage":"@@@* GEODE-6861: have create/delete/update return SimpleClusterManagementResult which does not need generics.\n\nCo-authored-by: Joris Melchior <joris.melchior@gmail.com>\n\n\n","date":"2019-06-28 00:27:11","modifiedFileCount":"25","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-06-28 01:35:06","codes":[{"authorDate":"2019-06-28 01:35:06","commitOrder":10,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-06-28 01:35:06","endLine":74,"groupId":"36145","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2e/b11fd204eb7e6d42ce7bac32a5101cd5a1cdf9.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    SimpleClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2019-06-28 01:35:06","commitOrder":10,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","date":"2019-06-28 01:35:06","endLine":88,"groupId":"36145","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2e/b11fd204eb7e6d42ce7bac32a5101cd5a1cdf9.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    SimpleClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"24fc3195e214cdbcacc6688c5045747e32c62bc1","commitMessage":"@@@Revert \"* GEODE-6861: have create/delete/update return SimpleClusterManagementResult which does not need generics.\"\n\nThis reverts commit b3157c94\n","date":"2019-06-28 01:35:06","modifiedFileCount":"25","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-06-29 02:10:02","codes":[{"authorDate":"2019-06-29 02:10:02","commitOrder":11,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<?, ?> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-06-29 02:10:02","endLine":74,"groupId":"36145","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/94/61395839ac303ff0993a18101fd0c19d07d241.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2019-06-29 02:10:02","commitOrder":11,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<?, ?> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","date":"2019-06-29 02:10:02","endLine":88,"groupId":"36145","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/94/61395839ac303ff0993a18101fd0c19d07d241.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<RegionConfig> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"2c39f92dc5fa129058144a9ec16606092dc3d51e","commitMessage":"@@@GEODE-6861: separate static config object from runtime info in the Cl? (#3754)\n\nCo-authored-by: Joris Melchior <joris.melchior@gmail.com>\n\n* use ConfigRealizer to retrieve the runtime information for configuration on each member\n* list result would return a List of Response object which has a configuration object and a list runtime objects\n* use existing object for runtime member info and move them to geode-management module.\n","date":"2019-06-29 02:10:02","modifiedFileCount":"61","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-07-12 06:08:46","codes":[{"authorDate":"2019-07-12 06:08:46","commitOrder":12,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-07-12 06:08:46","endLine":74,"groupId":"36145","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7f/ee43a0d28c8066d7958018adc97d3df7252d14.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<?, ?> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2019-07-12 06:08:46","commitOrder":12,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","date":"2019-07-12 06:08:46","endLine":88,"groupId":"36145","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7f/ee43a0d28c8066d7958018adc97d3df7252d14.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult<?, ?> result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"592875c12cf723be42d62747efcc71a97887cfd4","commitMessage":"@@@GEODE-6897: refactor ClusterManagementResult into subclasses (#3793)\n\n* GEODE-6897: refactoring of ClusterManagementResult into subclasses","date":"2019-07-12 06:08:46","modifiedFileCount":"30","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-07-26 05:12:21","codes":[{"authorDate":"2019-07-26 05:12:21","commitOrder":13,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementRealizationResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","date":"2019-07-26 05:12:21","endLine":75,"groupId":"36145","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/05/1b542b73935e2b98ac7cea5f1413d76e0fd6c8.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2019-07-26 05:12:21","commitOrder":13,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementRealizationResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","date":"2019-07-26 05:12:21","endLine":89,"groupId":"36145","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/05/1b542b73935e2b98ac7cea5f1413d76e0fd6c8.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"dc6890107a2651d8ba1450e8db8a1c39d712fdc7","commitMessage":"@@@GEODE-6897: implement CMS rebalance operation (#3820)\n\n","date":"2019-07-26 05:12:21","modifiedFileCount":"53","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-07-26 05:12:21","codes":[{"authorDate":"2019-08-01 12:10:06","commitOrder":14,"curCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementRealizationResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"ENTITY_EXISTS\");\n  }\n","date":"2019-08-01 12:10:06","endLine":73,"groupId":"36145","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5f/1abaf4b4bb006212c839f7130b922a3409d630.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementRealizationResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    result = cmsClient.create(region);\n    assertThat(result.isSuccessful()).isFalse();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.ENTITY_EXISTS);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2019-07-26 05:12:21","commitOrder":14,"curCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementRealizationResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","date":"2019-07-26 05:12:21","endLine":89,"groupId":"36145","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/05/1b542b73935e2b98ac7cea5f1413d76e0fd6c8.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementRealizationResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"N"}],"commitId":"e2855b4d2359c8a7f402f8dbd011292645b94b5a","commitMessage":"@@@GEODE-7024: raise a Java exception on non-success response from REST API (#3861)\n\n* GEODE-7024: raise a Java exception on non-success response from REST call","date":"2019-08-01 12:10:06","modifiedFileCount":"17","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-08-16 05:45:33","codes":[{"authorDate":"2019-08-16 05:45:33","commitOrder":15,"curCode":"  public void createRegion() {\n    Region region = new Region();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementRealizationResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"ENTITY_EXISTS\");\n  }\n","date":"2019-08-16 05:45:33","endLine":73,"groupId":"101538","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"createRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ce/6c1a24ab4f0ece21bb5d02adb7b9a738754efa.src","preCode":"  public void createRegion() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"customer\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementRealizationResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n\n    assertThatThrownBy(() -> cmsClient.create(region)).hasMessageContaining(\"ENTITY_EXISTS\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2019-08-16 05:45:33","commitOrder":15,"curCode":"  public void createRegionWithNullGroup() {\n    Region region = new Region();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementRealizationResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","date":"2019-08-16 05:45:33","endLine":87,"groupId":"101538","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"createRegionWithNullGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ce/6c1a24ab4f0ece21bb5d02adb7b9a738754efa.src","preCode":"  public void createRegionWithNullGroup() {\n    RegionConfig region = new RegionConfig();\n    region.setName(\"orders\");\n    region.setType(RegionType.PARTITION);\n\n    ClusterManagementRealizationResult result = cmsClient.create(region);\n\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getMemberStatuses()).extracting(RealizationResult::getMemberName)\n        .containsExactlyInAnyOrder(\"server-1\", \"server-2\");\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/ClientClusterManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"550e19e9c9bfd147a387c56019f00dbf162a2b26","commitMessage":"@@@GEODE-6945:geode-managment should create its own set of configuration? (#3928)\n\nCo-authored-by: Darrel Schneider <dschneider@pivotal.io>\n\n* do not use xml domain object for region configuration\n* add RegionType.UNSUPPORTED\n","date":"2019-08-16 05:45:33","modifiedFileCount":"40","status":"M","submitter":"Jinmei Liao"}]
