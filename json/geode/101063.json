[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testPostQuery() throws Exception {\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"wrongPswd\", \"\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"user\", \"\"))\n        .hasStatusCode(403);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(500);\n  }\n","date":"2018-07-18 03:54:18","endLine":107,"groupId":"43984","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPostQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/4a42f43b58449361fb1de65c5296626b86b167.src","preCode":"  public void testPostQuery() throws Exception {\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"wrongPswd\", \"\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"user\", \"\"))\n        .hasStatusCode(403);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(500);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void connectToServer1() throws Exception {\n    client = new GeodeDevRestClient(\"localhost\", server1.getHttpPort());\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(403);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataManage\", \"dataManage\", \"\"))\n        .hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-2\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-1\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(200);\n  }\n","date":"2018-07-18 03:54:18","endLine":103,"groupId":"43984","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"connectToServer1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f4/68ecdccfd7682fcc42117547211524868a93f9.src","preCode":"  public void connectToServer1() throws Exception {\n    client = new GeodeDevRestClient(\"localhost\", server1.getHttpPort());\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(403);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataManage\", \"dataManage\", \"\"))\n        .hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-2\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-1\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(200);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/rest/internal/web/RestFunctionExecuteDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2019-05-07 02:52:16","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  public void testPostQuery() throws Exception {\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"wrongPswd\", \"\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"user\", \"\"))\n        .hasStatusCode(403);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(500);\n  }\n","date":"2018-07-18 03:54:18","endLine":107,"groupId":"43984","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPostQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/4a42f43b58449361fb1de65c5296626b86b167.src","preCode":"  public void testPostQuery() throws Exception {\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"wrongPswd\", \"\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"user\", \"\"))\n        .hasStatusCode(403);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(500);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"},{"authorDate":"2019-05-07 02:52:16","commitOrder":2,"curCode":"  public void connectToServer1() {\n    client = new GeodeDevRestClient(\"localhost\", server1.getHttpPort());\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(403);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataManage\", \"dataManage\", \"\"))\n        .hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-2\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-1\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(200);\n  }\n","date":"2019-05-08 00:21:55","endLine":101,"groupId":"43984","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"connectToServer1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/dd/6373849660ccd47f399ebd2029f1e960f2dc3b.src","preCode":"  public void connectToServer1() throws Exception {\n    client = new GeodeDevRestClient(\"localhost\", server1.getHttpPort());\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(403);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataManage\", \"dataManage\", \"\"))\n        .hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-2\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-1\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(200);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/rest/internal/web/RestFunctionExecuteDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"49a3eaad3c492bbe96a58da8c48461f34026c3cf","commitMessage":"@@@GEODE-6731: Cleanup tests using ResourceUtils\n","date":"2019-05-08 00:21:55","modifiedFileCount":"23","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-05-07 02:52:16","codes":[{"authorDate":"2020-03-14 12:04:39","commitOrder":3,"curCode":"  public void testPostQuery() {\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"wrongPswd\", \"\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"user\", \"\"))\n        .hasStatusCode(403);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(500);\n  }\n","date":"2020-03-17 01:31:43","endLine":109,"groupId":"101063","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPostQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b0/9f2ad9ab84985f93c0b8107eb4f7e5a4462029.src","preCode":"  public void testPostQuery() throws Exception {\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"wrongPswd\", \"\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"user\", \"user\", \"\"))\n        .hasStatusCode(403);\n    assertResponse(restClient.doPost(\"/queries?id=0&q=\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(500);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2019-05-07 02:52:16","commitOrder":3,"curCode":"  public void connectToServer1() {\n    client = new GeodeDevRestClient(\"localhost\", server1.getHttpPort());\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(403);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataManage\", \"dataManage\", \"\"))\n        .hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-2\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-1\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(200);\n  }\n","date":"2019-05-08 00:21:55","endLine":101,"groupId":"101063","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"connectToServer1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/dd/6373849660ccd47f399ebd2029f1e960f2dc3b.src","preCode":"  public void connectToServer1() {\n    client = new GeodeDevRestClient(\"localhost\", server1.getHttpPort());\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataRead\", \"dataRead\", \"\"))\n        .hasStatusCode(403);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction\", \"dataManage\", \"dataManage\", \"\"))\n        .hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-2\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(500);\n\n    \r\n    assertResponse(client.doPost(\"/functions/myTestFunction?onMembers=server-1\", \"dataManage\",\n        \"dataManage\", \"\")).hasStatusCode(200);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/rest/internal/web/RestFunctionExecuteDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"}],"commitId":"9d1e682f0697609c5e4dad48fa4fd13bd521d723","commitMessage":"@@@GEODE-7869: Cleanup warnings in geode-web-api\n","date":"2020-03-17 01:31:43","modifiedFileCount":"19","status":"M","submitter":"Jacob Barrett"}]
