[{"authorTime":"2017-11-17 05:02:51","codes":[{"authorDate":"2017-11-17 05:02:51","commitOrder":1,"curCode":"  public void setUp() throws Exception {\n    dm = mock(DM.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    flushToDiskFactory = new FlushToDiskFactory();\n  }\n","date":"2017-11-17 05:02:51","endLine":60,"groupId":"525","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cf/b62ab8cf6ef178b22108b9b814846e6d4fa89c.src","preCode":"  public void setUp() throws Exception {\n    dm = mock(DM.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    flushToDiskFactory = new FlushToDiskFactory();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/FlushToDiskFactoryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2017-11-17 05:02:51","commitOrder":1,"curCode":"  public void setUp() throws Exception {\n    resultCollector = mock(BackupResultCollector.class);\n    dm = mock(DM.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    prepareBackupFactory = new PrepareBackupFactory();\n  }\n","date":"2017-11-17 05:02:51","endLine":60,"groupId":"525","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/41/431a35b2e29c2c943ed69bb58fceecea9f6743.src","preCode":"  public void setUp() throws Exception {\n    resultCollector = mock(BackupResultCollector.class);\n    dm = mock(DM.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    prepareBackupFactory = new PrepareBackupFactory();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/PrepareBackupFactoryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"d59c73030b0d5123158829e8a32acfe28f6b1a9d","commitMessage":"@@@Merge pull request #1053 from apache/feature/GEODE-3940\n\nFeature/geode 3940","date":"2017-11-17 05:02:51","modifiedFileCount":"111","status":"B","submitter":"Darrel Schneider"},{"authorTime":"2018-01-05 03:58:16","codes":[{"authorDate":"2018-01-05 03:58:16","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    dm = mock(DistributionManager.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    flushToDiskFactory = new FlushToDiskFactory();\n  }\n","date":"2018-01-06 05:02:50","endLine":59,"groupId":"525","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f3/842d046d2005b6ab2c21196d101ca4848d0a65.src","preCode":"  public void setUp() throws Exception {\n    dm = mock(DM.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    flushToDiskFactory = new FlushToDiskFactory();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/FlushToDiskFactoryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2018-01-05 03:58:16","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    resultCollector = mock(BackupResultCollector.class);\n    dm = mock(DistributionManager.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    prepareBackupFactory = new PrepareBackupFactory();\n  }\n","date":"2018-01-06 05:02:50","endLine":61,"groupId":"525","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e1/625e03ba886fe93111861b4bddbe5487e753f5.src","preCode":"  public void setUp() throws Exception {\n    resultCollector = mock(BackupResultCollector.class);\n    dm = mock(DM.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    prepareBackupFactory = new PrepareBackupFactory();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/PrepareBackupFactoryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"75c04138a42bed3edda1f6391b71c45280fe3ef7","commitMessage":"@@@GEODE-3965: rename DistributionManager classes\n\n* DistributionManager -> ClusterDistributionManager\n* DM -> DistributionManager\n* LonerDistributionManager remains LonerDistributionManager\n","date":"2018-01-06 05:02:50","modifiedFileCount":"492","status":"M","submitter":"Kirk Lund"},{"authorTime":"2018-02-03 01:20:18","codes":[{"authorDate":"2018-01-05 03:58:16","commitOrder":3,"curCode":"  public void setUp() throws Exception {\n    dm = mock(DistributionManager.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    flushToDiskFactory = new FlushToDiskFactory();\n  }\n","date":"2018-01-06 05:02:50","endLine":59,"groupId":"525","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f3/842d046d2005b6ab2c21196d101ca4848d0a65.src","preCode":"  public void setUp() throws Exception {\n    dm = mock(DistributionManager.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    flushToDiskFactory = new FlushToDiskFactory();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/FlushToDiskFactoryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2018-02-03 01:20:18","commitOrder":3,"curCode":"  public void setUp() throws Exception {\n    resultCollector = mock(BackupResultCollector.class);\n    dm = mock(DistributionManager.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n    targetDir = mock(File.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    prepareBackupFactory = new PrepareBackupFactory();\n  }\n","date":"2018-02-03 01:20:18","endLine":64,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7f/2f95be2819a36f184bde86a44acd28dd8cea54.src","preCode":"  public void setUp() throws Exception {\n    resultCollector = mock(BackupResultCollector.class);\n    dm = mock(DistributionManager.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    prepareBackupFactory = new PrepareBackupFactory();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/PrepareBackupFactoryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"94049aa1b3046b6143cb155c219a18e628a6282a","commitMessage":"@@@GEODE-4405: Move backup target and base line dirs to prepare backup message (#1377)\n\n","date":"2018-02-03 01:20:18","modifiedFileCount":"22","status":"M","submitter":"Nick Reich"},{"authorTime":"2018-03-01 01:06:46","codes":[{"authorDate":"2018-01-05 03:58:16","commitOrder":4,"curCode":"  public void setUp() throws Exception {\n    dm = mock(DistributionManager.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    flushToDiskFactory = new FlushToDiskFactory();\n  }\n","date":"2018-01-06 05:02:50","endLine":59,"groupId":"101244","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f3/842d046d2005b6ab2c21196d101ca4848d0a65.src","preCode":"  public void setUp() throws Exception {\n    dm = mock(DistributionManager.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    flushToDiskFactory = new FlushToDiskFactory();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/FlushToDiskFactoryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2018-03-01 01:06:46","commitOrder":4,"curCode":"  public void setUp() throws Exception {\n    resultCollector = mock(BackupResultCollector.class);\n    dm = mock(DistributionManager.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    prepareBackupFactory = new PrepareBackupFactory();\n  }\n","date":"2018-03-01 01:06:46","endLine":61,"groupId":"101244","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/73/1deadb9730797e40db9badbab4f163ae19efbf.src","preCode":"  public void setUp() throws Exception {\n    resultCollector = mock(BackupResultCollector.class);\n    dm = mock(DistributionManager.class);\n    sender = mock(InternalDistributedMember.class);\n    member = mock(InternalDistributedMember.class);\n    cache = mock(InternalCache.class);\n    targetDir = mock(File.class);\n\n    recipients = new HashSet<>();\n\n    when(dm.getSystem()).thenReturn(mock(InternalDistributedSystem.class));\n    when(dm.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    prepareBackupFactory = new PrepareBackupFactory();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/backup/PrepareBackupFactoryTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"f4433fcc6ce2d28568b7bf08b9b936ad08d3d1bf","commitMessage":"@@@GEODE-4404: Move BackupWriter creation (#1521)\n\n  * to facilitate future creation of backup plugins.  the BackupWriter is created\n    using generic information passed from gfsh\n","date":"2018-03-01 01:06:46","modifiedFileCount":"25","status":"M","submitter":"Nick Reich"}]
