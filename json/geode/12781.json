[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void createCQ(VM vm, final String poolName, final String cqName, final String queryStr) {\n    vm.invoke(new CacheSerializableRunnable(\"Create CQ :\" + cqName) {\n      public void run2() throws CacheException {\n        \r\n        \r\n        \r\n\n        LogWriterUtils.getLogWriter().info(\"### Create CQ. ###\" + cqName);\n        \r\n        QueryService cqService = null;\n        try {\n          cqService = (PoolManager.find(poolName)).getQueryService();\n        } catch (Exception cqe) {\n          cqe.printStackTrace();\n          Assert.fail(\"Failed to getCQService.\", cqe);\n        }\n        \r\n        CqAttributesFactory cqf = new CqAttributesFactory();\n        CqListener[] cqListeners = {new CqQueryTestListener(LogWriterUtils.getLogWriter())};\n        ((CqQueryTestListener) cqListeners[0]).cqName = cqName;\n\n        cqf.initCqListeners(cqListeners);\n        CqAttributes cqa = cqf.create();\n\n        \r\n        try {\n          CqQuery cq1 = cqService.newCq(cqName, queryStr, cqa);\n          assertTrue(\"newCq() state mismatch\", cq1.getState().isStopped());\n          LogWriterUtils.getLogWriter().info(\"Created a new CqQuery : \" + cq1);\n        } catch (Exception ex) {\n          LogWriterUtils.getLogWriter().info(\"CqService is :\" + cqService, ex);\n          throw new AssertionError(\"Failed to create CQ \" + cqName + \" . \", ex);\n        }\n      }\n    });\n  }\n","date":"2018-07-18 03:54:18","endLine":1808,"groupId":"30836","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createCQ","params":"(VMvm@finalStringpoolName@finalStringcqName@finalStringqueryStr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fc/7d640c734bf636b80f7ad66a98bc6d9813004c.src","preCode":"  public void createCQ(VM vm, final String poolName, final String cqName, final String queryStr) {\n    vm.invoke(new CacheSerializableRunnable(\"Create CQ :\" + cqName) {\n      public void run2() throws CacheException {\n        \r\n        \r\n        \r\n\n        LogWriterUtils.getLogWriter().info(\"### Create CQ. ###\" + cqName);\n        \r\n        QueryService cqService = null;\n        try {\n          cqService = (PoolManager.find(poolName)).getQueryService();\n        } catch (Exception cqe) {\n          cqe.printStackTrace();\n          Assert.fail(\"Failed to getCQService.\", cqe);\n        }\n        \r\n        CqAttributesFactory cqf = new CqAttributesFactory();\n        CqListener[] cqListeners = {new CqQueryTestListener(LogWriterUtils.getLogWriter())};\n        ((CqQueryTestListener) cqListeners[0]).cqName = cqName;\n\n        cqf.initCqListeners(cqListeners);\n        CqAttributes cqa = cqf.create();\n\n        \r\n        try {\n          CqQuery cq1 = cqService.newCq(cqName, queryStr, cqa);\n          assertTrue(\"newCq() state mismatch\", cq1.getState().isStopped());\n          LogWriterUtils.getLogWriter().info(\"Created a new CqQuery : \" + cq1);\n        } catch (Exception ex) {\n          LogWriterUtils.getLogWriter().info(\"CqService is :\" + cqService, ex);\n          throw new AssertionError(\"Failed to create CQ \" + cqName + \" . \", ex);\n        }\n      }\n    });\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/PrCqUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1773,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void createCQ(VM vm, final String poolName, final String cqName, final String queryStr) {\n    vm.invoke(new CacheSerializableRunnable(\"Create CQ :\" + cqName) {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create CQ. ###\" + cqName);\n        \r\n        QueryService qService = null;\n        try {\n          qService = (PoolManager.find(poolName)).getQueryService();\n        } catch (Exception cqe) {\n          Assert.fail(\"Failed to getCQService.\", cqe);\n        }\n        \r\n        CqAttributesFactory cqf = new CqAttributesFactory();\n        CqListener[] cqListeners = {new CqQueryTestListener(LogWriterUtils.getLogWriter())};\n        ((CqQueryTestListener) cqListeners[0]).cqName = cqName;\n\n        cqf.initCqListeners(cqListeners);\n        CqAttributes cqa = cqf.create();\n\n        \r\n        try {\n          CqQuery cq1 = qService.newCq(cqName, queryStr, cqa);\n          assertTrue(\"newCq() state mismatch\", cq1.getState().isStopped());\n        } catch (Exception ex) {\n          LogWriterUtils.getLogWriter().info(\"QueryService is :\" + qService, ex);\n          Assert.fail(\"Failed to create CQ \" + cqName + \" . \", ex);\n        }\n      }\n    });\n  }\n","date":"2018-07-18 03:54:18","endLine":511,"groupId":"30836","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createCQ","params":"(VMvm@finalStringpoolName@finalStringcqName@finalStringqueryStr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/87/5172d12d02b90c1af7e602c4eef42915b15293.src","preCode":"  public void createCQ(VM vm, final String poolName, final String cqName, final String queryStr) {\n    vm.invoke(new CacheSerializableRunnable(\"Create CQ :\" + cqName) {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create CQ. ###\" + cqName);\n        \r\n        QueryService qService = null;\n        try {\n          qService = (PoolManager.find(poolName)).getQueryService();\n        } catch (Exception cqe) {\n          Assert.fail(\"Failed to getCQService.\", cqe);\n        }\n        \r\n        CqAttributesFactory cqf = new CqAttributesFactory();\n        CqListener[] cqListeners = {new CqQueryTestListener(LogWriterUtils.getLogWriter())};\n        ((CqQueryTestListener) cqListeners[0]).cqName = cqName;\n\n        cqf.initCqListeners(cqListeners);\n        CqAttributes cqa = cqf.create();\n\n        \r\n        try {\n          CqQuery cq1 = qService.newCq(cqName, queryStr, cqa);\n          assertTrue(\"newCq() state mismatch\", cq1.getState().isStopped());\n        } catch (Exception ex) {\n          LogWriterUtils.getLogWriter().info(\"QueryService is :\" + qService, ex);\n          Assert.fail(\"Failed to create CQ \" + cqName + \" . \", ex);\n        }\n      }\n    });\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqQueryUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":481,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2019-01-12 07:53:54","commitOrder":2,"curCode":"  public void createCQ(VM vm, final String poolName, final String cqName, final String queryStr) {\n    vm.invoke(new CacheSerializableRunnable(\"Create CQ :\" + cqName) {\n      @Override\n      public void run2() throws CacheException {\n        \r\n        \r\n        \r\n\n        LogWriterUtils.getLogWriter().info(\"### Create CQ. ###\" + cqName);\n        \r\n        QueryService cqService = null;\n        try {\n          cqService = (PoolManager.find(poolName)).getQueryService();\n        } catch (Exception cqe) {\n          cqe.printStackTrace();\n          Assert.fail(\"Failed to getCQService.\", cqe);\n        }\n        \r\n        CqAttributesFactory cqf = new CqAttributesFactory();\n        CqListener[] cqListeners = {new CqQueryTestListener(LogWriterUtils.getLogWriter())};\n        ((CqQueryTestListener) cqListeners[0]).cqName = cqName;\n\n        cqf.initCqListeners(cqListeners);\n        CqAttributes cqa = cqf.create();\n\n        \r\n        try {\n          CqQuery cq1 = cqService.newCq(cqName, queryStr, cqa);\n          assertTrue(\"newCq() state mismatch\", cq1.getState().isStopped());\n          LogWriterUtils.getLogWriter().info(\"Created a new CqQuery : \" + cq1);\n        } catch (Exception ex) {\n          LogWriterUtils.getLogWriter().info(\"CqService is :\" + cqService, ex);\n          throw new AssertionError(\"Failed to create CQ \" + cqName + \" . \", ex);\n        }\n      }\n    });\n  }\n","date":"2019-01-12 07:53:54","endLine":1823,"groupId":"12781","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createCQ","params":"(VMvm@finalStringpoolName@finalStringcqName@finalStringqueryStr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fa/e5b8c36a608cd3e96150429dfbecbabbd9d764.src","preCode":"  public void createCQ(VM vm, final String poolName, final String cqName, final String queryStr) {\n    vm.invoke(new CacheSerializableRunnable(\"Create CQ :\" + cqName) {\n      public void run2() throws CacheException {\n        \r\n        \r\n        \r\n\n        LogWriterUtils.getLogWriter().info(\"### Create CQ. ###\" + cqName);\n        \r\n        QueryService cqService = null;\n        try {\n          cqService = (PoolManager.find(poolName)).getQueryService();\n        } catch (Exception cqe) {\n          cqe.printStackTrace();\n          Assert.fail(\"Failed to getCQService.\", cqe);\n        }\n        \r\n        CqAttributesFactory cqf = new CqAttributesFactory();\n        CqListener[] cqListeners = {new CqQueryTestListener(LogWriterUtils.getLogWriter())};\n        ((CqQueryTestListener) cqListeners[0]).cqName = cqName;\n\n        cqf.initCqListeners(cqListeners);\n        CqAttributes cqa = cqf.create();\n\n        \r\n        try {\n          CqQuery cq1 = cqService.newCq(cqName, queryStr, cqa);\n          assertTrue(\"newCq() state mismatch\", cq1.getState().isStopped());\n          LogWriterUtils.getLogWriter().info(\"Created a new CqQuery : \" + cq1);\n        } catch (Exception ex) {\n          LogWriterUtils.getLogWriter().info(\"CqService is :\" + cqService, ex);\n          throw new AssertionError(\"Failed to create CQ \" + cqName + \" . \", ex);\n        }\n      }\n    });\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/PrCqUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1787,"status":"M"},{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  public void createCQ(VM vm, final String poolName, final String cqName, final String queryStr) {\n    vm.invoke(new CacheSerializableRunnable(\"Create CQ :\" + cqName) {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create CQ. ###\" + cqName);\n        \r\n        QueryService qService = null;\n        try {\n          qService = (PoolManager.find(poolName)).getQueryService();\n        } catch (Exception cqe) {\n          Assert.fail(\"Failed to getCQService.\", cqe);\n        }\n        \r\n        CqAttributesFactory cqf = new CqAttributesFactory();\n        CqListener[] cqListeners = {new CqQueryTestListener(LogWriterUtils.getLogWriter())};\n        ((CqQueryTestListener) cqListeners[0]).cqName = cqName;\n\n        cqf.initCqListeners(cqListeners);\n        CqAttributes cqa = cqf.create();\n\n        \r\n        try {\n          CqQuery cq1 = qService.newCq(cqName, queryStr, cqa);\n          assertTrue(\"newCq() state mismatch\", cq1.getState().isStopped());\n        } catch (Exception ex) {\n          LogWriterUtils.getLogWriter().info(\"QueryService is :\" + qService, ex);\n          Assert.fail(\"Failed to create CQ \" + cqName + \" . \", ex);\n        }\n      }\n    });\n  }\n","date":"2018-07-18 03:54:18","endLine":511,"groupId":"12781","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createCQ","params":"(VMvm@finalStringpoolName@finalStringcqName@finalStringqueryStr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/87/5172d12d02b90c1af7e602c4eef42915b15293.src","preCode":"  public void createCQ(VM vm, final String poolName, final String cqName, final String queryStr) {\n    vm.invoke(new CacheSerializableRunnable(\"Create CQ :\" + cqName) {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create CQ. ###\" + cqName);\n        \r\n        QueryService qService = null;\n        try {\n          qService = (PoolManager.find(poolName)).getQueryService();\n        } catch (Exception cqe) {\n          Assert.fail(\"Failed to getCQService.\", cqe);\n        }\n        \r\n        CqAttributesFactory cqf = new CqAttributesFactory();\n        CqListener[] cqListeners = {new CqQueryTestListener(LogWriterUtils.getLogWriter())};\n        ((CqQueryTestListener) cqListeners[0]).cqName = cqName;\n\n        cqf.initCqListeners(cqListeners);\n        CqAttributes cqa = cqf.create();\n\n        \r\n        try {\n          CqQuery cq1 = qService.newCq(cqName, queryStr, cqa);\n          assertTrue(\"newCq() state mismatch\", cq1.getState().isStopped());\n        } catch (Exception ex) {\n          LogWriterUtils.getLogWriter().info(\"QueryService is :\" + qService, ex);\n          Assert.fail(\"Failed to create CQ \" + cqName + \" . \", ex);\n        }\n      }\n    });\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqQueryUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":481,"status":"N"}],"commitId":"9d737c9e95a77cb4db05a258f318908e7899bd6c","commitMessage":"@@@GEODE-4391: Add `@Override` where missing. (#3069)\n\n* GEODE-4391: Add `@Override` where missing.\n\n* Restart Concourse.  I think that was flaky.\n","date":"2019-01-12 07:53:54","modifiedFileCount":"1582","status":"M","submitter":"Galen O'Sullivan"}]
