[{"authorTime":"2019-04-02 23:36:14","codes":[{"authorDate":"2019-04-02 23:36:14","commitOrder":1,"curCode":"  public void noMatchWithJavaAPI() throws Exception {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(0);\n  }\n","date":"2019-04-02 23:36:14","endLine":113,"groupId":"5246","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"noMatchWithJavaAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a0/cd8f76fef3599374d8b2f086c9fdef1e4571b9.src","preCode":"  public void noMatchWithJavaAPI() throws Exception {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(0);\n  }\n","realPath":"geode-web-management/src/distributedTest/java/org/apache/geode/management/client/MemberManagementServiceDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"},{"authorDate":"2019-04-02 23:36:14","commitOrder":1,"curCode":"  public void listOneMember() throws Exception {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n\n    MemberConfig memberConfig = (MemberConfig) result.getResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPorts().get(0)).isEqualTo(locator.getPort());\n  }\n","date":"2019-04-02 23:36:14","endLine":76,"groupId":"5246","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"listOneMember","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d6/a9f346cff1fde16639e8ef10d59600982e3250.src","preCode":"  public void listOneMember() throws Exception {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n\n    MemberConfig memberConfig = (MemberConfig) result.getResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPorts().get(0)).isEqualTo(locator.getPort());\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/MemberManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"1ff5f2efadf63f5b220e56d6d8a8a6b3d503b263","commitMessage":"@@@GEODE-6574: be able to list member information using cluster management service (#3380)\n\nCo-authored-by: Jens Deppe <jdeppe@pivotal.io>\n\n* create a MemberConfig object to hold all the essential member information.\n* added list(CacheElement elem) interface to cms.\n* added a result object in ClusterManagementResult\n* excluded jackson libraries in geode-web-management module so that jackson serialization would honor the annotations.","date":"2019-04-02 23:36:14","modifiedFileCount":"19","status":"B","submitter":"jinmeiliao"},{"authorTime":"2019-05-03 11:32:07","codes":[{"authorDate":"2019-05-03 11:32:07","commitOrder":2,"curCode":"  public void noMatchWithJavaAPI() throws Exception {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(RuntimeCacheElement.class).size()).isEqualTo(0);\n  }\n","date":"2019-05-03 11:32:07","endLine":104,"groupId":"5246","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"noMatchWithJavaAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/09/ce187688c9b3686337c9f0612922ee97a444da.src","preCode":"  public void noMatchWithJavaAPI() throws Exception {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(0);\n  }\n","realPath":"geode-web-management/src/distributedTest/java/org/apache/geode/management/client/MemberManagementServiceDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2019-05-03 11:32:07","commitOrder":2,"curCode":"  public void listOneMember() throws Exception {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(RuntimeCacheElement.class).size()).isEqualTo(1);\n\n    MemberConfig memberConfig = (MemberConfig) result.getResult(RuntimeCacheElement.class).get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPorts().get(0)).isEqualTo(locator.getPort());\n  }\n","date":"2019-05-03 11:32:07","endLine":78,"groupId":"39942","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"listOneMember","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/c90a5860de19c86a1ba92a9418c39c30b85272.src","preCode":"  public void listOneMember() throws Exception {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n\n    MemberConfig memberConfig = (MemberConfig) result.getResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPorts().get(0)).isEqualTo(locator.getPort());\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/MemberManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"7537e156d526a71bb0c4415fd6ae658aab5f2e25","commitMessage":"@@@GEODE-6728: remove extra getResult() method (#3540)\n\n\n","date":"2019-05-03 11:32:07","modifiedFileCount":"7","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-05-08 23:44:53","codes":[{"authorDate":"2019-05-03 11:32:07","commitOrder":3,"curCode":"  public void noMatchWithJavaAPI() throws Exception {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(RuntimeCacheElement.class).size()).isEqualTo(0);\n  }\n","date":"2019-05-03 11:32:07","endLine":104,"groupId":"5246","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"noMatchWithJavaAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/09/ce187688c9b3686337c9f0612922ee97a444da.src","preCode":"  public void noMatchWithJavaAPI() throws Exception {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(RuntimeCacheElement.class).size()).isEqualTo(0);\n  }\n","realPath":"geode-web-management/src/distributedTest/java/org/apache/geode/management/client/MemberManagementServiceDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"N"},{"authorDate":"2019-05-08 23:44:53","commitOrder":3,"curCode":"  public void listOneMember() throws Exception {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(RuntimeCacheElement.class).size()).isEqualTo(1);\n\n    MemberConfig memberConfig = (MemberConfig) result.getResult(RuntimeCacheElement.class).get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPort()).isEqualTo(locator.getPort());\n  }\n","date":"2019-05-08 23:44:53","endLine":84,"groupId":"39942","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"listOneMember","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/56/3cbd36b48060cd3f731a9a0064f45fa39a6439.src","preCode":"  public void listOneMember() throws Exception {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(RuntimeCacheElement.class).size()).isEqualTo(1);\n\n    MemberConfig memberConfig = (MemberConfig) result.getResult(RuntimeCacheElement.class).get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPorts().get(0)).isEqualTo(locator.getPort());\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/MemberManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"ab6de191b74fd916a0bbc0053bf4e2f6f8540090","commitMessage":"@@@GEODE-6745: Add status to list members output for REST v2 (#3558)\n\n","date":"2019-05-08 23:44:53","modifiedFileCount":"13","status":"M","submitter":"Jens Deppe"},{"authorTime":"2019-05-31 02:22:12","codes":[{"authorDate":"2019-05-31 02:22:12","commitOrder":4,"curCode":"  public void noMatchWithJavaAPI() throws Exception {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(MemberConfig.class).size()).isEqualTo(0);\n  }\n","date":"2019-05-31 02:22:12","endLine":144,"groupId":"5246","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"noMatchWithJavaAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1e/db853c5ebb9fa3607e3c8cc12d7da996b04c80.src","preCode":"  public void noMatchWithJavaAPI() throws Exception {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(RuntimeCacheElement.class).size()).isEqualTo(0);\n  }\n","realPath":"geode-web-management/src/distributedTest/java/org/apache/geode/management/client/MemberManagementServiceDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"},{"authorDate":"2019-05-31 02:22:12","commitOrder":4,"curCode":"  public void listOneMember() throws Exception {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(CacheElement.class).size()).isEqualTo(1);\n\n    RuntimeMemberConfig memberConfig = result.getResult(RuntimeMemberConfig.class).get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPort()).isEqualTo(locator.getPort());\n  }\n","date":"2019-05-31 02:22:12","endLine":81,"groupId":"0","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"listOneMember","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d2/697af593c4e1b185fa7d488605bb34cbb99731.src","preCode":"  public void listOneMember() throws Exception {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(RuntimeCacheElement.class).size()).isEqualTo(1);\n\n    MemberConfig memberConfig = (MemberConfig) result.getResult(RuntimeCacheElement.class).get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPort()).isEqualTo(locator.getPort());\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/MemberManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"c411f6475ffd2ec6e5814246da019cefc6a58368","commitMessage":"@@@GEODE-6803: be able to configure pdx using management rest api (#3638)\n\n* Add PdxManagementController and PdxManager\n* add RestEndPoint.getUri for single config object uri for HATOS.  make it part of the json response\n* rename RuntimeCacheElement to MultiGroupCacheElement since the only usage of it is to support multi group.\n* make MultiGroupCacheElement a suplimental interface and list does not have to return MultiGroupCacheElement\n* do not require servers to be present in order to create a cache element\n* when realizer is not present.  assuming the servers needs to be bounced in order for the config change to take effect","date":"2019-05-31 02:22:12","modifiedFileCount":"25","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-06-19 06:26:48","codes":[{"authorDate":"2019-06-19 06:26:48","commitOrder":5,"curCode":"  public void noMatchWithJavaAPI() {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult<RuntimeMemberConfig> result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(0);\n  }\n","date":"2019-06-19 06:26:48","endLine":144,"groupId":"5246","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"noMatchWithJavaAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6c/ad8cd4da24f205db3efce2ac595c66ebbd4ec8.src","preCode":"  public void noMatchWithJavaAPI() throws Exception {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(MemberConfig.class).size()).isEqualTo(0);\n  }\n","realPath":"geode-web-management/src/distributedTest/java/org/apache/geode/management/client/MemberManagementServiceDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"},{"authorDate":"2019-06-19 06:26:48","commitOrder":5,"curCode":"  public void listOneMember() {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult<RuntimeMemberConfig> result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n\n    RuntimeMemberConfig memberConfig = result.getResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPort()).isEqualTo(locator.getPort());\n  }\n","date":"2019-06-19 06:26:48","endLine":82,"groupId":"0","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"listOneMember","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c1/eace5af929eb76bc76995f4656cf617ba6dde7.src","preCode":"  public void listOneMember() throws Exception {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult(CacheElement.class).size()).isEqualTo(1);\n\n    RuntimeMemberConfig memberConfig = result.getResult(RuntimeMemberConfig.class).get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPort()).isEqualTo(locator.getPort());\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/MemberManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"a60ade270e3dc1901fe900e2521351bdc93ecced","commitMessage":"@@@GEODE-6861: Generify ClusterManagementService (#3708)\n\n* GEODE-6861: Generify ClusterManagementService","date":"2019-06-19 06:26:48","modifiedFileCount":"50","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-06-29 02:10:02","codes":[{"authorDate":"2019-06-29 02:10:02","commitOrder":6,"curCode":"  public void noMatchWithJavaAPI() {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult<MemberConfig, MemberInformation> result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(0);\n  }\n","date":"2019-06-29 02:10:02","endLine":148,"groupId":"5246","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"noMatchWithJavaAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/40/e3e4eb7312a7ddc238dc75dca8d2cb96a303ce.src","preCode":"  public void noMatchWithJavaAPI() {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult<RuntimeMemberConfig> result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(0);\n  }\n","realPath":"geode-web-management/src/distributedTest/java/org/apache/geode/management/client/MemberManagementServiceDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"},{"authorDate":"2019-06-29 02:10:02","commitOrder":6,"curCode":"  public void listOneMember() {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult<MemberConfig, MemberInformation> result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(1);\n\n    MemberInformation memberConfig = result.getRuntimeResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isServer()).isFalse();\n    assertThat(memberConfig.getLocatorPort()).isEqualTo(locator.getPort());\n  }\n","date":"2019-06-29 02:10:02","endLine":80,"groupId":"5246","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"listOneMember","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4e/ba148332d5326abc566861dfbc17456bb26960.src","preCode":"  public void listOneMember() {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult<RuntimeMemberConfig> result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n\n    RuntimeMemberConfig memberConfig = result.getResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isLocator()).isTrue();\n    assertThat(memberConfig.getPort()).isEqualTo(locator.getPort());\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/MemberManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"2c39f92dc5fa129058144a9ec16606092dc3d51e","commitMessage":"@@@GEODE-6861: separate static config object from runtime info in the Cl? (#3754)\n\nCo-authored-by: Joris Melchior <joris.melchior@gmail.com>\n\n* use ConfigRealizer to retrieve the runtime information for configuration on each member\n* list result would return a List of Response object which has a configuration object and a list runtime objects\n* use existing object for runtime member info and move them to geode-management module.\n","date":"2019-06-29 02:10:02","modifiedFileCount":"61","status":"M","submitter":"Jinmei Liao"},{"authorTime":"2019-07-12 06:08:46","codes":[{"authorDate":"2019-07-12 06:08:46","commitOrder":7,"curCode":"  public void noMatchWithJavaAPI() {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementListResult<MemberConfig, MemberInformation> result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(0);\n  }\n","date":"2019-07-12 06:08:46","endLine":149,"groupId":"5246","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"noMatchWithJavaAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/31/d3aaab095d9563d4ce16ab0f42c31ea493224d.src","preCode":"  public void noMatchWithJavaAPI() {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementResult<MemberConfig, MemberInformation> result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(0);\n  }\n","realPath":"geode-web-management/src/distributedTest/java/org/apache/geode/management/client/MemberManagementServiceDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2019-07-12 06:08:46","commitOrder":7,"curCode":"  public void listOneMember() {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementListResult<MemberConfig, MemberInformation> result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(1);\n\n    MemberInformation memberConfig = result.getRuntimeResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isServer()).isFalse();\n    assertThat(memberConfig.getLocatorPort()).isEqualTo(locator.getPort());\n  }\n","date":"2019-07-12 06:08:46","endLine":81,"groupId":"5246","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"listOneMember","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/47/848493f586eec9664ef560dd6a4e37d26ea0a0.src","preCode":"  public void listOneMember() {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementResult<MemberConfig, MemberInformation> result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(1);\n\n    MemberInformation memberConfig = result.getRuntimeResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isServer()).isFalse();\n    assertThat(memberConfig.getLocatorPort()).isEqualTo(locator.getPort());\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/MemberManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"592875c12cf723be42d62747efcc71a97887cfd4","commitMessage":"@@@GEODE-6897: refactor ClusterManagementResult into subclasses (#3793)\n\n* GEODE-6897: refactoring of ClusterManagementResult into subclasses","date":"2019-07-12 06:08:46","modifiedFileCount":"30","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-09-13 20:21:02","codes":[{"authorDate":"2019-09-13 20:21:02","commitOrder":8,"curCode":"  public void noMatchWithJavaAPI() {\n    Member config = new Member();\n    \r\n    config.setId(\"server\");\n    ClusterManagementListResult<Member, MemberInformation> result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(0);\n  }\n","date":"2019-09-13 20:21:02","endLine":149,"groupId":"5246","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"noMatchWithJavaAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c8/4d317e56129b993438a31b89913b9639ad37cb.src","preCode":"  public void noMatchWithJavaAPI() {\n    MemberConfig config = new MemberConfig();\n    \r\n    config.setId(\"server\");\n    ClusterManagementListResult<MemberConfig, MemberInformation> result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(0);\n  }\n","realPath":"geode-web-management/src/distributedTest/java/org/apache/geode/management/client/MemberManagementServiceDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2019-09-13 20:21:02","commitOrder":8,"curCode":"  public void listOneMember() {\n    Member config = new Member();\n    config.setId(\"locator-0\");\n\n    ClusterManagementListResult<Member, MemberInformation> result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(1);\n\n    MemberInformation memberConfig = result.getRuntimeResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isServer()).isFalse();\n    assertThat(memberConfig.getLocatorPort()).isEqualTo(locator.getPort());\n  }\n","date":"2019-09-13 20:21:02","endLine":83,"groupId":"5246","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"listOneMember","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/86/3526b61e0f80995ae718ffaea1b66147628f41.src","preCode":"  public void listOneMember() {\n    MemberConfig config = new MemberConfig();\n    config.setId(\"locator-0\");\n\n    ClusterManagementListResult<MemberConfig, MemberInformation> result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(1);\n\n    MemberInformation memberConfig = result.getRuntimeResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isServer()).isFalse();\n    assertThat(memberConfig.getLocatorPort()).isEqualTo(locator.getPort());\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/MemberManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"343a7d226f12e6a6b690ba98168665b88c16e97c","commitMessage":"@@@GEODE-7194: simplify CMS 'get' return type (#4047)\n\n","date":"2019-09-13 20:21:02","modifiedFileCount":"20","status":"M","submitter":"Owen Nichols"},{"authorTime":"2019-09-13 20:21:02","codes":[{"authorDate":"2020-02-08 00:26:15","commitOrder":9,"curCode":"  public void noMatchWithJavaAPI() {\n    Member config = new Member();\n    \r\n    config.setId(\"server\");\n    ClusterManagementListResult<Member, MemberInformation> result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(0);\n  }\n","date":"2020-02-08 00:26:15","endLine":154,"groupId":"101493","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"noMatchWithJavaAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/bf/4b4edb7fc69fbb21afef96dcdae290d5e58388.src","preCode":"  public void noMatchWithJavaAPI() {\n    Member config = new Member();\n    \r\n    config.setId(\"server\");\n    ClusterManagementListResult<Member, MemberInformation> result = client.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode())\n        .isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getResult().size()).isEqualTo(1);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(0);\n  }\n","realPath":"geode-web-management/src/distributedTest/java/org/apache/geode/management/client/MemberManagementServiceDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2019-09-13 20:21:02","commitOrder":9,"curCode":"  public void listOneMember() {\n    Member config = new Member();\n    config.setId(\"locator-0\");\n\n    ClusterManagementListResult<Member, MemberInformation> result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(1);\n\n    MemberInformation memberConfig = result.getRuntimeResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isServer()).isFalse();\n    assertThat(memberConfig.getLocatorPort()).isEqualTo(locator.getPort());\n  }\n","date":"2019-09-13 20:21:02","endLine":83,"groupId":"101493","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"listOneMember","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/86/3526b61e0f80995ae718ffaea1b66147628f41.src","preCode":"  public void listOneMember() {\n    Member config = new Member();\n    config.setId(\"locator-0\");\n\n    ClusterManagementListResult<Member, MemberInformation> result = cmsClient.list(config);\n    assertThat(result.isSuccessful()).isTrue();\n    assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK);\n    assertThat(result.getRuntimeResult().size()).isEqualTo(1);\n\n    MemberInformation memberConfig = result.getRuntimeResult().get(0);\n    assertThat(memberConfig.isCoordinator()).isTrue();\n    assertThat(memberConfig.isServer()).isFalse();\n    assertThat(memberConfig.getLocatorPort()).isEqualTo(locator.getPort());\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/MemberManagementServiceDunitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"N"}],"commitId":"bda6bdf50c0a6a3e7cc39fb3ff654a0c26c86d94","commitMessage":"@@@GEODE-7717: ClusterManagementListResult should show a list of EntityInfo (#4673)\n\n* only show links in the EntityInfo level\n* rework list member responses\n","date":"2020-02-08 00:26:15","modifiedFileCount":"17","status":"M","submitter":"Jinmei Liao"}]
