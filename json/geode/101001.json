[{"authorTime":"2018-01-12 08:04:37","codes":[{"authorDate":"2018-01-12 08:04:37","commitOrder":1,"curCode":"  public void testCreateStartLocatorCommandLineWithAllOptions() throws Exception {\n    LocatorLauncher locatorLauncher =\n        new LocatorLauncher.Builder().setCommand(LocatorLauncher.Command.START)\n            .setDebug(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE).setForce(Boolean.TRUE)\n            .setHostnameForClients(\"localhost\").setMemberName(\"customLocator\").setPort(10101)\n            .setRedirectOutput(Boolean.TRUE).build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = locatorCommands.createStartLocatorCommandLine(locatorLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"-Xms\".concat(heapSize));\n    expectedCommandLineElements.add(\"-Xmx\".concat(heapSize));\n    expectedCommandLineElements.add(\"-XX:+UseConcMarkSweepGC\");\n    expectedCommandLineElements.add(\"-XX:CMSInitiatingOccupancyFraction=\"\n        .concat(String.valueOf(StartMemberUtils.CMS_INITIAL_OCCUPANCY_FRACTION)));\n    expectedCommandLineElements.add(\"-Dgemfire.launcher.registerSignalHandlers=true\");\n    expectedCommandLineElements.add(\"-Djava.awt.headless=true\");\n    expectedCommandLineElements.add(\"-Dsun.rmi.dgc.server.gcInterval=9223372036854775806\");\n    expectedCommandLineElements.add(\"-Dgemfire.OSProcess.DISABLE_REDIRECTION_CONFIGURATION=true\");\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.LocatorLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"customLocator\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n    expectedCommandLineElements.add(\"--port=10101\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n    assertEquals(commandLineElements.length, expectedCommandLineElements.size());\n\n    for (String commandLineElement : commandLineElements) {\n      expectedCommandLineElements.remove(commandLineElement);\n    }\n\n    assertTrue(String.format(\"Expected ([]); but was (%1$s)\", expectedCommandLineElements),\n        expectedCommandLineElements.isEmpty());\n  }\n","date":"2018-01-12 08:04:37","endLine":257,"groupId":"2616","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateStartLocatorCommandLineWithAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4d/15368b46cdaa8dc04b91b90692174e800fc5c8.src","preCode":"  public void testCreateStartLocatorCommandLineWithAllOptions() throws Exception {\n    LocatorLauncher locatorLauncher =\n        new LocatorLauncher.Builder().setCommand(LocatorLauncher.Command.START)\n            .setDebug(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE).setForce(Boolean.TRUE)\n            .setHostnameForClients(\"localhost\").setMemberName(\"customLocator\").setPort(10101)\n            .setRedirectOutput(Boolean.TRUE).build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = locatorCommands.createStartLocatorCommandLine(locatorLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"-Xms\".concat(heapSize));\n    expectedCommandLineElements.add(\"-Xmx\".concat(heapSize));\n    expectedCommandLineElements.add(\"-XX:+UseConcMarkSweepGC\");\n    expectedCommandLineElements.add(\"-XX:CMSInitiatingOccupancyFraction=\"\n        .concat(String.valueOf(StartMemberUtils.CMS_INITIAL_OCCUPANCY_FRACTION)));\n    expectedCommandLineElements.add(\"-Dgemfire.launcher.registerSignalHandlers=true\");\n    expectedCommandLineElements.add(\"-Djava.awt.headless=true\");\n    expectedCommandLineElements.add(\"-Dsun.rmi.dgc.server.gcInterval=9223372036854775806\");\n    expectedCommandLineElements.add(\"-Dgemfire.OSProcess.DISABLE_REDIRECTION_CONFIGURATION=true\");\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.LocatorLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"customLocator\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n    expectedCommandLineElements.add(\"--port=10101\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n    assertEquals(commandLineElements.length, expectedCommandLineElements.size());\n\n    for (String commandLineElement : commandLineElements) {\n      expectedCommandLineElements.remove(commandLineElement);\n    }\n\n    assertTrue(String.format(\"Expected ([]); but was (%1$s)\", expectedCommandLineElements),\n        expectedCommandLineElements.isEmpty());\n  }\n","realPath":"geode-assembly/src/test/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"B"},{"authorDate":"2018-01-12 08:04:37","commitOrder":1,"curCode":"  public void testCreateStartServerCommandLineWithAllOptions() throws Exception {\n    ServerLauncher serverLauncher = new ServerLauncher.Builder().setAssignBuckets(Boolean.TRUE)\n        .setCommand(ServerLauncher.Command.START).setCriticalHeapPercentage(95.5f)\n        .setCriticalOffHeapPercentage(95.5f).setDebug(Boolean.TRUE)\n        .setDisableDefaultServer(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE)\n        .setEvictionHeapPercentage(85.0f).setEvictionOffHeapPercentage(85.0f).setForce(Boolean.TRUE)\n        .setHostNameForClients(\"localhost\").setMaxConnections(800).setMaxMessageCount(500)\n        .setMaxThreads(100).setMemberName(\"fullServer\").setMessageTimeToLive(93)\n        .setPdxDiskStore(\"pdxDiskStore\").setPdxIgnoreUnreadFields(Boolean.TRUE)\n        .setPdxPersistent(Boolean.TRUE).setPdxReadSerialized(Boolean.TRUE)\n        .setPdxSerializer(mock(PdxSerializer.class)).setRebalance(Boolean.TRUE)\n        .setRedirectOutput(Boolean.TRUE).setRebalance(true).setServerPort(41214)\n        .setSocketBufferSize(1024 * 1024).setSpringXmlLocation(\"/config/spring-server.xml\").build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = serverCommands.createStartServerCommandLine(serverLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, Boolean.FALSE, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"-XX:OnOutOfMemoryError=kill -KILL %p\");\n    expectedCommandLineElements.add(\"-Xms\".concat(heapSize));\n    expectedCommandLineElements.add(\"-Xmx\".concat(heapSize));\n    expectedCommandLineElements.add(\"-XX:+UseConcMarkSweepGC\");\n    expectedCommandLineElements.add(\"-XX:CMSInitiatingOccupancyFraction=\"\n        .concat(String.valueOf(StartMemberUtils.CMS_INITIAL_OCCUPANCY_FRACTION)));\n    expectedCommandLineElements.add(\"-Dgemfire.launcher.registerSignalHandlers=true\");\n    expectedCommandLineElements.add(\"-Djava.awt.headless=true\");\n    expectedCommandLineElements.add(\"-Dsun.rmi.dgc.server.gcInterval=9223372036854775806\");\n    expectedCommandLineElements.add(\"-Dgemfire.OSProcess.DISABLE_REDIRECTION_CONFIGURATION=true\");\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.ServerLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"fullServer\");\n    expectedCommandLineElements.add(\"--assign-buckets\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--disable-default-server\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--rebalance\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n    expectedCommandLineElements.add(\"--server-port=41214\");\n    expectedCommandLineElements.add(\"--spring-xml-location=/config/spring-server.xml\");\n    expectedCommandLineElements.add(\"--critical-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--critical-off-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-off-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--max-connections=800\");\n    expectedCommandLineElements.add(\"--max-message-count=500\");\n    expectedCommandLineElements.add(\"--max-threads=100\");\n    expectedCommandLineElements.add(\"--message-time-to-live=93\");\n    expectedCommandLineElements.add(\"--socket-buffer-size=1048576\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n    assertEquals(commandLineElements.length, expectedCommandLineElements.size());\n\n    for (String commandLineElement : commandLineElements) {\n      expectedCommandLineElements.remove(commandLineElement);\n    }\n\n    assertTrue(String.format(\"Expected ([]); but was (%1$s)\", expectedCommandLineElements),\n        expectedCommandLineElements.isEmpty());\n  }\n","date":"2018-01-12 08:04:37","endLine":242,"groupId":"38780","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateStartServerCommandLineWithAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/50/08ed35bfed0426c3b84bbb28fd69a6ec94f02c.src","preCode":"  public void testCreateStartServerCommandLineWithAllOptions() throws Exception {\n    ServerLauncher serverLauncher = new ServerLauncher.Builder().setAssignBuckets(Boolean.TRUE)\n        .setCommand(ServerLauncher.Command.START).setCriticalHeapPercentage(95.5f)\n        .setCriticalOffHeapPercentage(95.5f).setDebug(Boolean.TRUE)\n        .setDisableDefaultServer(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE)\n        .setEvictionHeapPercentage(85.0f).setEvictionOffHeapPercentage(85.0f).setForce(Boolean.TRUE)\n        .setHostNameForClients(\"localhost\").setMaxConnections(800).setMaxMessageCount(500)\n        .setMaxThreads(100).setMemberName(\"fullServer\").setMessageTimeToLive(93)\n        .setPdxDiskStore(\"pdxDiskStore\").setPdxIgnoreUnreadFields(Boolean.TRUE)\n        .setPdxPersistent(Boolean.TRUE).setPdxReadSerialized(Boolean.TRUE)\n        .setPdxSerializer(mock(PdxSerializer.class)).setRebalance(Boolean.TRUE)\n        .setRedirectOutput(Boolean.TRUE).setRebalance(true).setServerPort(41214)\n        .setSocketBufferSize(1024 * 1024).setSpringXmlLocation(\"/config/spring-server.xml\").build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = serverCommands.createStartServerCommandLine(serverLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, Boolean.FALSE, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"-XX:OnOutOfMemoryError=kill -KILL %p\");\n    expectedCommandLineElements.add(\"-Xms\".concat(heapSize));\n    expectedCommandLineElements.add(\"-Xmx\".concat(heapSize));\n    expectedCommandLineElements.add(\"-XX:+UseConcMarkSweepGC\");\n    expectedCommandLineElements.add(\"-XX:CMSInitiatingOccupancyFraction=\"\n        .concat(String.valueOf(StartMemberUtils.CMS_INITIAL_OCCUPANCY_FRACTION)));\n    expectedCommandLineElements.add(\"-Dgemfire.launcher.registerSignalHandlers=true\");\n    expectedCommandLineElements.add(\"-Djava.awt.headless=true\");\n    expectedCommandLineElements.add(\"-Dsun.rmi.dgc.server.gcInterval=9223372036854775806\");\n    expectedCommandLineElements.add(\"-Dgemfire.OSProcess.DISABLE_REDIRECTION_CONFIGURATION=true\");\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.ServerLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"fullServer\");\n    expectedCommandLineElements.add(\"--assign-buckets\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--disable-default-server\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--rebalance\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n    expectedCommandLineElements.add(\"--server-port=41214\");\n    expectedCommandLineElements.add(\"--spring-xml-location=/config/spring-server.xml\");\n    expectedCommandLineElements.add(\"--critical-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--critical-off-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-off-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--max-connections=800\");\n    expectedCommandLineElements.add(\"--max-message-count=500\");\n    expectedCommandLineElements.add(\"--max-threads=100\");\n    expectedCommandLineElements.add(\"--message-time-to-live=93\");\n    expectedCommandLineElements.add(\"--socket-buffer-size=1048576\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n    assertEquals(commandLineElements.length, expectedCommandLineElements.size());\n\n    for (String commandLineElement : commandLineElements) {\n      expectedCommandLineElements.remove(commandLineElement);\n    }\n\n    assertTrue(String.format(\"Expected ([]); but was (%1$s)\", expectedCommandLineElements),\n        expectedCommandLineElements.isEmpty());\n  }\n","realPath":"geode-assembly/src/test/java/org/apache/geode/management/internal/cli/commands/StartServerCommandTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"}],"commitId":"5c1d8ef106d468dcc584d1ff0393dbcb6c5a4c81","commitMessage":"@@@GEODE-4101: Add --redirect-output flag to GFSH (#1203)\n\n* GEODE-4101: Add --redirect-output flag to GFSH.\n\nTo avoid major code changes the start commands check the new flag and\nset as `true` a new system property.  `DISABLE_REDIRECTION_CONFIGURATION`. \nwhich disables the other two (now deprecated) properties. In the next\nmajor release.  the properties and the related logic should be deleted.\nThe integration between log4j2 and geode-pulse was also incomplete.\nWhen ran in embedded mode.  some messages were totally swallowed and the\nactual logging was split between the member's log and pulse.log file.\n\n- Added flag `--redirect-ouput` to `StartServerCommand`.\n- Added flag `--redirect-ouput` to `StartLocatorCommand`.\n- Added tests to verify the behavior of the commands/builders.\n- Added `OSProcess.DISABLE_REDIRECTION_CONFIGURATION` internal property.\n- Property `OSProcess.ENABLE_OUTPUT_REDIRECTION` marked as deprecated.\n- Property `OSProcess.DISABLE_OUTPUT_REDIRECTION` marked as deprecated.\n- Added `log4j-jcl` as a dependency of `geode-pulse`. By adding this\n  dependency no logging is lost and nothing is split: everything goes\n  to the pulse.log file (or whatever is configured in `log4j2.xml`).\n\n* GEODE-4101: Add --redirect-output flag to GFSH.\n\n- Changes requested by reviewers.\n- Added `commons-logging.jar` as an exclusion from `geode-web-api.war`\n  to avoid unformatted output on the member's log when the\n  `dev-rest-api` is enabled.\n","date":"2018-01-12 08:04:37","modifiedFileCount":"9","status":"B","submitter":"Juan Jos? Ramos"},{"authorTime":"2018-01-13 00:43:27","codes":[{"authorDate":"2018-01-13 00:43:27","commitOrder":2,"curCode":"  public void testCreateStartLocatorCommandLineWithAllOptions() throws Exception {\n    LocatorLauncher locatorLauncher =\n        new LocatorLauncher.Builder().setCommand(LocatorLauncher.Command.START)\n            .setDebug(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE).setForce(Boolean.TRUE)\n            .setHostnameForClients(\"localhost\").setMemberName(\"customLocator\").setPort(10101)\n            .setRedirectOutput(Boolean.TRUE).build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = locatorCommands.createStartLocatorCommandLine(locatorLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"-Xms\".concat(heapSize));\n    expectedCommandLineElements.add(\"-Xmx\".concat(heapSize));\n    expectedCommandLineElements.add(\"-XX:+UseConcMarkSweepGC\");\n    expectedCommandLineElements.add(\"-XX:CMSInitiatingOccupancyFraction=\"\n        .concat(String.valueOf(StartMemberUtils.CMS_INITIAL_OCCUPANCY_FRACTION)));\n    expectedCommandLineElements.add(\"-Dgemfire.launcher.registerSignalHandlers=true\");\n    expectedCommandLineElements.add(\"-Djava.awt.headless=true\");\n    expectedCommandLineElements.add(\"-Dsun.rmi.dgc.server.gcInterval=9223372036854775806\");\n    expectedCommandLineElements.add(\"-Dgemfire.OSProcess.DISABLE_REDIRECTION_CONFIGURATION=true\");\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.LocatorLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"customLocator\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n    expectedCommandLineElements.add(\"--port=10101\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n\n    for (String commandLineElement : commandLineElements) {\n      expectedCommandLineElements.remove(commandLineElement);\n    }\n\n    assertTrue(String.format(\"Expected ([]); but was (%1$s)\", expectedCommandLineElements),\n        expectedCommandLineElements.isEmpty());\n  }\n","date":"2018-01-13 00:43:27","endLine":256,"groupId":"2616","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateStartLocatorCommandLineWithAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/49/1334d776e60900c193d69a0268ca6d15333cab.src","preCode":"  public void testCreateStartLocatorCommandLineWithAllOptions() throws Exception {\n    LocatorLauncher locatorLauncher =\n        new LocatorLauncher.Builder().setCommand(LocatorLauncher.Command.START)\n            .setDebug(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE).setForce(Boolean.TRUE)\n            .setHostnameForClients(\"localhost\").setMemberName(\"customLocator\").setPort(10101)\n            .setRedirectOutput(Boolean.TRUE).build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = locatorCommands.createStartLocatorCommandLine(locatorLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"-Xms\".concat(heapSize));\n    expectedCommandLineElements.add(\"-Xmx\".concat(heapSize));\n    expectedCommandLineElements.add(\"-XX:+UseConcMarkSweepGC\");\n    expectedCommandLineElements.add(\"-XX:CMSInitiatingOccupancyFraction=\"\n        .concat(String.valueOf(StartMemberUtils.CMS_INITIAL_OCCUPANCY_FRACTION)));\n    expectedCommandLineElements.add(\"-Dgemfire.launcher.registerSignalHandlers=true\");\n    expectedCommandLineElements.add(\"-Djava.awt.headless=true\");\n    expectedCommandLineElements.add(\"-Dsun.rmi.dgc.server.gcInterval=9223372036854775806\");\n    expectedCommandLineElements.add(\"-Dgemfire.OSProcess.DISABLE_REDIRECTION_CONFIGURATION=true\");\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.LocatorLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"customLocator\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n    expectedCommandLineElements.add(\"--port=10101\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n    assertEquals(commandLineElements.length, expectedCommandLineElements.size());\n\n    for (String commandLineElement : commandLineElements) {\n      expectedCommandLineElements.remove(commandLineElement);\n    }\n\n    assertTrue(String.format(\"Expected ([]); but was (%1$s)\", expectedCommandLineElements),\n        expectedCommandLineElements.isEmpty());\n  }\n","realPath":"geode-assembly/src/test/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"},{"authorDate":"2018-01-13 00:43:27","commitOrder":2,"curCode":"  public void testCreateStartServerCommandLineWithAllOptions() throws Exception {\n    ServerLauncher serverLauncher = new ServerLauncher.Builder().setAssignBuckets(Boolean.TRUE)\n        .setCommand(ServerLauncher.Command.START).setCriticalHeapPercentage(95.5f)\n        .setCriticalOffHeapPercentage(95.5f).setDebug(Boolean.TRUE)\n        .setDisableDefaultServer(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE)\n        .setEvictionHeapPercentage(85.0f).setEvictionOffHeapPercentage(85.0f).setForce(Boolean.TRUE)\n        .setHostNameForClients(\"localhost\").setMaxConnections(800).setMaxMessageCount(500)\n        .setMaxThreads(100).setMemberName(\"fullServer\").setMessageTimeToLive(93)\n        .setPdxDiskStore(\"pdxDiskStore\").setPdxIgnoreUnreadFields(Boolean.TRUE)\n        .setPdxPersistent(Boolean.TRUE).setPdxReadSerialized(Boolean.TRUE)\n        .setPdxSerializer(mock(PdxSerializer.class)).setRebalance(Boolean.TRUE)\n        .setRedirectOutput(Boolean.TRUE).setRebalance(true).setServerPort(41214)\n        .setSocketBufferSize(1024 * 1024).setSpringXmlLocation(\"/config/spring-server.xml\").build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = serverCommands.createStartServerCommandLine(serverLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, Boolean.FALSE, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"-XX:OnOutOfMemoryError=kill -KILL %p\");\n    expectedCommandLineElements.add(\"-Xms\".concat(heapSize));\n    expectedCommandLineElements.add(\"-Xmx\".concat(heapSize));\n    expectedCommandLineElements.add(\"-XX:+UseConcMarkSweepGC\");\n    expectedCommandLineElements.add(\"-XX:CMSInitiatingOccupancyFraction=\"\n        .concat(String.valueOf(StartMemberUtils.CMS_INITIAL_OCCUPANCY_FRACTION)));\n    expectedCommandLineElements.add(\"-Dgemfire.launcher.registerSignalHandlers=true\");\n    expectedCommandLineElements.add(\"-Djava.awt.headless=true\");\n    expectedCommandLineElements.add(\"-Dsun.rmi.dgc.server.gcInterval=9223372036854775806\");\n    expectedCommandLineElements.add(\"-Dgemfire.OSProcess.DISABLE_REDIRECTION_CONFIGURATION=true\");\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.ServerLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"fullServer\");\n    expectedCommandLineElements.add(\"--assign-buckets\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--disable-default-server\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--rebalance\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n    expectedCommandLineElements.add(\"--server-port=41214\");\n    expectedCommandLineElements.add(\"--spring-xml-location=/config/spring-server.xml\");\n    expectedCommandLineElements.add(\"--critical-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--critical-off-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-off-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--max-connections=800\");\n    expectedCommandLineElements.add(\"--max-message-count=500\");\n    expectedCommandLineElements.add(\"--max-threads=100\");\n    expectedCommandLineElements.add(\"--message-time-to-live=93\");\n    expectedCommandLineElements.add(\"--socket-buffer-size=1048576\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n\n    for (String commandLineElement : commandLineElements) {\n      expectedCommandLineElements.remove(commandLineElement);\n    }\n\n    assertTrue(String.format(\"Expected ([]); but was (%1$s)\", expectedCommandLineElements),\n        expectedCommandLineElements.isEmpty());\n  }\n","date":"2018-01-13 00:43:27","endLine":241,"groupId":"38780","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateStartServerCommandLineWithAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b9/96a13814998ee04e187135cf9975f266e904ad.src","preCode":"  public void testCreateStartServerCommandLineWithAllOptions() throws Exception {\n    ServerLauncher serverLauncher = new ServerLauncher.Builder().setAssignBuckets(Boolean.TRUE)\n        .setCommand(ServerLauncher.Command.START).setCriticalHeapPercentage(95.5f)\n        .setCriticalOffHeapPercentage(95.5f).setDebug(Boolean.TRUE)\n        .setDisableDefaultServer(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE)\n        .setEvictionHeapPercentage(85.0f).setEvictionOffHeapPercentage(85.0f).setForce(Boolean.TRUE)\n        .setHostNameForClients(\"localhost\").setMaxConnections(800).setMaxMessageCount(500)\n        .setMaxThreads(100).setMemberName(\"fullServer\").setMessageTimeToLive(93)\n        .setPdxDiskStore(\"pdxDiskStore\").setPdxIgnoreUnreadFields(Boolean.TRUE)\n        .setPdxPersistent(Boolean.TRUE).setPdxReadSerialized(Boolean.TRUE)\n        .setPdxSerializer(mock(PdxSerializer.class)).setRebalance(Boolean.TRUE)\n        .setRedirectOutput(Boolean.TRUE).setRebalance(true).setServerPort(41214)\n        .setSocketBufferSize(1024 * 1024).setSpringXmlLocation(\"/config/spring-server.xml\").build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = serverCommands.createStartServerCommandLine(serverLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, Boolean.FALSE, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"-XX:OnOutOfMemoryError=kill -KILL %p\");\n    expectedCommandLineElements.add(\"-Xms\".concat(heapSize));\n    expectedCommandLineElements.add(\"-Xmx\".concat(heapSize));\n    expectedCommandLineElements.add(\"-XX:+UseConcMarkSweepGC\");\n    expectedCommandLineElements.add(\"-XX:CMSInitiatingOccupancyFraction=\"\n        .concat(String.valueOf(StartMemberUtils.CMS_INITIAL_OCCUPANCY_FRACTION)));\n    expectedCommandLineElements.add(\"-Dgemfire.launcher.registerSignalHandlers=true\");\n    expectedCommandLineElements.add(\"-Djava.awt.headless=true\");\n    expectedCommandLineElements.add(\"-Dsun.rmi.dgc.server.gcInterval=9223372036854775806\");\n    expectedCommandLineElements.add(\"-Dgemfire.OSProcess.DISABLE_REDIRECTION_CONFIGURATION=true\");\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.ServerLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"fullServer\");\n    expectedCommandLineElements.add(\"--assign-buckets\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--disable-default-server\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--rebalance\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n    expectedCommandLineElements.add(\"--server-port=41214\");\n    expectedCommandLineElements.add(\"--spring-xml-location=/config/spring-server.xml\");\n    expectedCommandLineElements.add(\"--critical-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--critical-off-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-off-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--max-connections=800\");\n    expectedCommandLineElements.add(\"--max-message-count=500\");\n    expectedCommandLineElements.add(\"--max-threads=100\");\n    expectedCommandLineElements.add(\"--message-time-to-live=93\");\n    expectedCommandLineElements.add(\"--socket-buffer-size=1048576\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n    assertEquals(commandLineElements.length, expectedCommandLineElements.size());\n\n    for (String commandLineElement : commandLineElements) {\n      expectedCommandLineElements.remove(commandLineElement);\n    }\n\n    assertTrue(String.format(\"Expected ([]); but was (%1$s)\", expectedCommandLineElements),\n        expectedCommandLineElements.isEmpty());\n  }\n","realPath":"geode-assembly/src/test/java/org/apache/geode/management/internal/cli/commands/StartServerCommandTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"}],"commitId":"bed35d3dc72fc7ae5fac95ce9155d5e4a708a6c2","commitMessage":"@@@GEODE-4101: Remove test assertions that mask failure information (#1276)\n\nStartServerCommandTest failed in CI build.  but the assertion caused an\nearly failure. By removing this assertion the comparison of expected and\nactual command line elements can proceed show where the problem is.","date":"2018-01-13 00:43:27","modifiedFileCount":"2","status":"M","submitter":"Kenneth Howe"},{"authorTime":"2018-01-13 07:24:57","codes":[{"authorDate":"2018-01-13 07:24:57","commitOrder":3,"curCode":"  public void testCreateStartLocatorCommandLineWithAllOptions() throws Exception {\n    LocatorLauncher locatorLauncher =\n        new LocatorLauncher.Builder().setCommand(LocatorLauncher.Command.START)\n            .setDebug(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE).setForce(Boolean.TRUE)\n            .setHostnameForClients(\"localhost\").setMemberName(\"customLocator\").setPort(10101)\n            .setRedirectOutput(Boolean.TRUE).build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = locatorCommands.createStartLocatorCommandLine(locatorLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.LocatorLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"customLocator\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n    expectedCommandLineElements.add(\"--port=10101\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n\n    assertThat(commandLineElements).containsAll(expectedCommandLineElements);\n  }\n","date":"2018-01-13 07:24:57","endLine":243,"groupId":"2616","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateStartLocatorCommandLineWithAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/42/ce6a6caca904956f9ac64b4af31f7e16ff4bd6.src","preCode":"  public void testCreateStartLocatorCommandLineWithAllOptions() throws Exception {\n    LocatorLauncher locatorLauncher =\n        new LocatorLauncher.Builder().setCommand(LocatorLauncher.Command.START)\n            .setDebug(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE).setForce(Boolean.TRUE)\n            .setHostnameForClients(\"localhost\").setMemberName(\"customLocator\").setPort(10101)\n            .setRedirectOutput(Boolean.TRUE).build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = locatorCommands.createStartLocatorCommandLine(locatorLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"-Xms\".concat(heapSize));\n    expectedCommandLineElements.add(\"-Xmx\".concat(heapSize));\n    expectedCommandLineElements.add(\"-XX:+UseConcMarkSweepGC\");\n    expectedCommandLineElements.add(\"-XX:CMSInitiatingOccupancyFraction=\"\n        .concat(String.valueOf(StartMemberUtils.CMS_INITIAL_OCCUPANCY_FRACTION)));\n    expectedCommandLineElements.add(\"-Dgemfire.launcher.registerSignalHandlers=true\");\n    expectedCommandLineElements.add(\"-Djava.awt.headless=true\");\n    expectedCommandLineElements.add(\"-Dsun.rmi.dgc.server.gcInterval=9223372036854775806\");\n    expectedCommandLineElements.add(\"-Dgemfire.OSProcess.DISABLE_REDIRECTION_CONFIGURATION=true\");\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.LocatorLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"customLocator\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n    expectedCommandLineElements.add(\"--port=10101\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n\n    for (String commandLineElement : commandLineElements) {\n      expectedCommandLineElements.remove(commandLineElement);\n    }\n\n    assertTrue(String.format(\"Expected ([]); but was (%1$s)\", expectedCommandLineElements),\n        expectedCommandLineElements.isEmpty());\n  }\n","realPath":"geode-assembly/src/test/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"},{"authorDate":"2018-01-13 07:24:57","commitOrder":3,"curCode":"  public void testCreateStartServerCommandLineWithAllOptions() throws Exception {\n    ServerLauncher serverLauncher = new ServerLauncher.Builder().setAssignBuckets(Boolean.TRUE)\n        .setCommand(ServerLauncher.Command.START).setCriticalHeapPercentage(95.5f)\n        .setCriticalOffHeapPercentage(95.5f).setDebug(Boolean.TRUE)\n        .setDisableDefaultServer(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE)\n        .setEvictionHeapPercentage(85.0f).setEvictionOffHeapPercentage(85.0f).setForce(Boolean.TRUE)\n        .setHostNameForClients(\"localhost\").setMaxConnections(800).setMaxMessageCount(500)\n        .setMaxThreads(100).setMemberName(\"fullServer\").setMessageTimeToLive(93)\n        .setPdxDiskStore(\"pdxDiskStore\").setPdxIgnoreUnreadFields(Boolean.TRUE)\n        .setPdxPersistent(Boolean.TRUE).setPdxReadSerialized(Boolean.TRUE)\n        .setPdxSerializer(mock(PdxSerializer.class)).setRebalance(Boolean.TRUE)\n        .setRedirectOutput(Boolean.TRUE).setRebalance(true).setServerPort(41214)\n        .setSocketBufferSize(1024 * 1024).setSpringXmlLocation(\"/config/spring-server.xml\").build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = serverCommands.createStartServerCommandLine(serverLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, Boolean.FALSE, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.ServerLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"fullServer\");\n    expectedCommandLineElements.add(\"--assign-buckets\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--disable-default-server\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--rebalance\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n    expectedCommandLineElements.add(\"--server-port=41214\");\n    expectedCommandLineElements.add(\"--spring-xml-location=/config/spring-server.xml\");\n    expectedCommandLineElements.add(\"--critical-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--critical-off-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-off-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--max-connections=800\");\n    expectedCommandLineElements.add(\"--max-message-count=500\");\n    expectedCommandLineElements.add(\"--max-threads=100\");\n    expectedCommandLineElements.add(\"--message-time-to-live=93\");\n    expectedCommandLineElements.add(\"--socket-buffer-size=1048576\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n\n    assertThat(commandLineElements).containsAll(expectedCommandLineElements);\n  }\n","date":"2018-01-13 07:24:57","endLine":227,"groupId":"38780","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateStartServerCommandLineWithAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a7/b06499c73421372f67762a327427b760d5b8ed.src","preCode":"  public void testCreateStartServerCommandLineWithAllOptions() throws Exception {\n    ServerLauncher serverLauncher = new ServerLauncher.Builder().setAssignBuckets(Boolean.TRUE)\n        .setCommand(ServerLauncher.Command.START).setCriticalHeapPercentage(95.5f)\n        .setCriticalOffHeapPercentage(95.5f).setDebug(Boolean.TRUE)\n        .setDisableDefaultServer(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE)\n        .setEvictionHeapPercentage(85.0f).setEvictionOffHeapPercentage(85.0f).setForce(Boolean.TRUE)\n        .setHostNameForClients(\"localhost\").setMaxConnections(800).setMaxMessageCount(500)\n        .setMaxThreads(100).setMemberName(\"fullServer\").setMessageTimeToLive(93)\n        .setPdxDiskStore(\"pdxDiskStore\").setPdxIgnoreUnreadFields(Boolean.TRUE)\n        .setPdxPersistent(Boolean.TRUE).setPdxReadSerialized(Boolean.TRUE)\n        .setPdxSerializer(mock(PdxSerializer.class)).setRebalance(Boolean.TRUE)\n        .setRedirectOutput(Boolean.TRUE).setRebalance(true).setServerPort(41214)\n        .setSocketBufferSize(1024 * 1024).setSpringXmlLocation(\"/config/spring-server.xml\").build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = serverCommands.createStartServerCommandLine(serverLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, Boolean.FALSE, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"-XX:OnOutOfMemoryError=kill -KILL %p\");\n    expectedCommandLineElements.add(\"-Xms\".concat(heapSize));\n    expectedCommandLineElements.add(\"-Xmx\".concat(heapSize));\n    expectedCommandLineElements.add(\"-XX:+UseConcMarkSweepGC\");\n    expectedCommandLineElements.add(\"-XX:CMSInitiatingOccupancyFraction=\"\n        .concat(String.valueOf(StartMemberUtils.CMS_INITIAL_OCCUPANCY_FRACTION)));\n    expectedCommandLineElements.add(\"-Dgemfire.launcher.registerSignalHandlers=true\");\n    expectedCommandLineElements.add(\"-Djava.awt.headless=true\");\n    expectedCommandLineElements.add(\"-Dsun.rmi.dgc.server.gcInterval=9223372036854775806\");\n    expectedCommandLineElements.add(\"-Dgemfire.OSProcess.DISABLE_REDIRECTION_CONFIGURATION=true\");\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.ServerLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"fullServer\");\n    expectedCommandLineElements.add(\"--assign-buckets\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--disable-default-server\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--rebalance\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n    expectedCommandLineElements.add(\"--server-port=41214\");\n    expectedCommandLineElements.add(\"--spring-xml-location=/config/spring-server.xml\");\n    expectedCommandLineElements.add(\"--critical-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--critical-off-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-off-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--max-connections=800\");\n    expectedCommandLineElements.add(\"--max-message-count=500\");\n    expectedCommandLineElements.add(\"--max-threads=100\");\n    expectedCommandLineElements.add(\"--message-time-to-live=93\");\n    expectedCommandLineElements.add(\"--socket-buffer-size=1048576\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n\n    for (String commandLineElement : commandLineElements) {\n      expectedCommandLineElements.remove(commandLineElement);\n    }\n\n    assertTrue(String.format(\"Expected ([]); but was (%1$s)\", expectedCommandLineElements),\n        expectedCommandLineElements.isEmpty());\n  }\n","realPath":"geode-assembly/src/test/java/org/apache/geode/management/internal/cli/commands/StartServerCommandTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"}],"commitId":"522e70e6fb3663e3d2775da58ad246a41be640bb","commitMessage":"@@@GEODE-4101: Only check for specific command line arguments (#1278)\n\nStartServerCommandTest failed in CI build.  but the assertion that failed\ndidn't provide any useful debugging information\n\nChange the assertion to use assertj so more information will be lgged\nregarding mismatches between expected and actual command arguments.\n\nAlso changed expectedCommandLineElements to only contain the command args that\nwe really care about - those that are specific to the command. Other arguments\nmaythat are dependant on the test environment may vary and ignored in\nthese tests.","date":"2018-01-13 07:24:57","modifiedFileCount":"2","status":"M","submitter":"Kenneth Howe"},{"authorTime":"2018-01-13 07:24:57","codes":[{"authorDate":"2018-10-12 07:11:27","commitOrder":4,"curCode":"  public void testCreateStartLocatorCommandLineWithAllOptions() throws Exception {\n    LocatorLauncher locatorLauncher =\n        new LocatorLauncher.Builder().setCommand(LocatorLauncher.Command.START)\n            .setDebug(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE).setForce(Boolean.TRUE)\n            .setHostnameForClients(\"localhost\").setMemberName(\"customLocator\").setPort(10101)\n            .setRedirectOutput(Boolean.TRUE).build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements =\n        startLocatorCommand.createStartLocatorCommandLine(locatorLauncher,\n            gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties,\n            customClasspath,\n            Boolean.FALSE, jvmArguments, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.LocatorLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"customLocator\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n    expectedCommandLineElements.add(\"--port=10101\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n\n    assertThat(commandLineElements).containsAll(expectedCommandLineElements);\n  }\n","date":"2018-10-12 07:11:27","endLine":194,"groupId":"101001","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateStartLocatorCommandLineWithAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/be/c92f15e4ca7985ca1bc1768b6888d72b875906.src","preCode":"  public void testCreateStartLocatorCommandLineWithAllOptions() throws Exception {\n    LocatorLauncher locatorLauncher =\n        new LocatorLauncher.Builder().setCommand(LocatorLauncher.Command.START)\n            .setDebug(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE).setForce(Boolean.TRUE)\n            .setHostnameForClients(\"localhost\").setMemberName(\"customLocator\").setPort(10101)\n            .setRedirectOutput(Boolean.TRUE).build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = locatorCommands.createStartLocatorCommandLine(locatorLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.LocatorLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"customLocator\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n    expectedCommandLineElements.add(\"--port=10101\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n\n    assertThat(commandLineElements).containsAll(expectedCommandLineElements);\n  }\n","realPath":"geode-assembly/src/test/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"},{"authorDate":"2018-01-13 07:24:57","commitOrder":4,"curCode":"  public void testCreateStartServerCommandLineWithAllOptions() throws Exception {\n    ServerLauncher serverLauncher = new ServerLauncher.Builder().setAssignBuckets(Boolean.TRUE)\n        .setCommand(ServerLauncher.Command.START).setCriticalHeapPercentage(95.5f)\n        .setCriticalOffHeapPercentage(95.5f).setDebug(Boolean.TRUE)\n        .setDisableDefaultServer(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE)\n        .setEvictionHeapPercentage(85.0f).setEvictionOffHeapPercentage(85.0f).setForce(Boolean.TRUE)\n        .setHostNameForClients(\"localhost\").setMaxConnections(800).setMaxMessageCount(500)\n        .setMaxThreads(100).setMemberName(\"fullServer\").setMessageTimeToLive(93)\n        .setPdxDiskStore(\"pdxDiskStore\").setPdxIgnoreUnreadFields(Boolean.TRUE)\n        .setPdxPersistent(Boolean.TRUE).setPdxReadSerialized(Boolean.TRUE)\n        .setPdxSerializer(mock(PdxSerializer.class)).setRebalance(Boolean.TRUE)\n        .setRedirectOutput(Boolean.TRUE).setRebalance(true).setServerPort(41214)\n        .setSocketBufferSize(1024 * 1024).setSpringXmlLocation(\"/config/spring-server.xml\").build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = serverCommands.createStartServerCommandLine(serverLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, Boolean.FALSE, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.ServerLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"fullServer\");\n    expectedCommandLineElements.add(\"--assign-buckets\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--disable-default-server\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--rebalance\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n    expectedCommandLineElements.add(\"--server-port=41214\");\n    expectedCommandLineElements.add(\"--spring-xml-location=/config/spring-server.xml\");\n    expectedCommandLineElements.add(\"--critical-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--critical-off-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-off-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--max-connections=800\");\n    expectedCommandLineElements.add(\"--max-message-count=500\");\n    expectedCommandLineElements.add(\"--max-threads=100\");\n    expectedCommandLineElements.add(\"--message-time-to-live=93\");\n    expectedCommandLineElements.add(\"--socket-buffer-size=1048576\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n\n    assertThat(commandLineElements).containsAll(expectedCommandLineElements);\n  }\n","date":"2018-01-13 07:24:57","endLine":227,"groupId":"101001","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateStartServerCommandLineWithAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a7/b06499c73421372f67762a327427b760d5b8ed.src","preCode":"  public void testCreateStartServerCommandLineWithAllOptions() throws Exception {\n    ServerLauncher serverLauncher = new ServerLauncher.Builder().setAssignBuckets(Boolean.TRUE)\n        .setCommand(ServerLauncher.Command.START).setCriticalHeapPercentage(95.5f)\n        .setCriticalOffHeapPercentage(95.5f).setDebug(Boolean.TRUE)\n        .setDisableDefaultServer(Boolean.TRUE).setDeletePidFileOnStop(Boolean.TRUE)\n        .setEvictionHeapPercentage(85.0f).setEvictionOffHeapPercentage(85.0f).setForce(Boolean.TRUE)\n        .setHostNameForClients(\"localhost\").setMaxConnections(800).setMaxMessageCount(500)\n        .setMaxThreads(100).setMemberName(\"fullServer\").setMessageTimeToLive(93)\n        .setPdxDiskStore(\"pdxDiskStore\").setPdxIgnoreUnreadFields(Boolean.TRUE)\n        .setPdxPersistent(Boolean.TRUE).setPdxReadSerialized(Boolean.TRUE)\n        .setPdxSerializer(mock(PdxSerializer.class)).setRebalance(Boolean.TRUE)\n        .setRedirectOutput(Boolean.TRUE).setRebalance(true).setServerPort(41214)\n        .setSocketBufferSize(1024 * 1024).setSpringXmlLocation(\"/config/spring-server.xml\").build();\n\n    File gemfirePropertiesFile = spy(mock(File.class));\n    when(gemfirePropertiesFile.getAbsolutePath()).thenReturn(\"/config/customGemfire.properties\");\n\n    File gemfireSecurityPropertiesFile = spy(mock(File.class));\n    when(gemfireSecurityPropertiesFile.getAbsolutePath())\n        .thenReturn(\"/config/customGemfireSecurity.properties\");\n\n    Properties gemfireProperties = new Properties();\n    gemfireProperties.setProperty(ConfigurationProperties.STATISTIC_SAMPLE_RATE, \"1500\");\n    gemfireProperties.setProperty(ConfigurationProperties.DISABLE_AUTO_RECONNECT, \"true\");\n\n    String heapSize = \"1024m\";\n    String customClasspath = \"/temp/domain-1.0.0.jar\";\n    String[] jvmArguments = new String[] {\"-verbose:gc\", \"-Xloggc:member-gc.log\",\n        \"-XX:+PrintGCDateStamps\", \"-XX:+PrintGCDetails\"};\n\n    String[] commandLineElements = serverCommands.createStartServerCommandLine(serverLauncher,\n        gemfirePropertiesFile, gemfireSecurityPropertiesFile, gemfireProperties, customClasspath,\n        Boolean.FALSE, jvmArguments, Boolean.FALSE, heapSize, heapSize);\n\n    Set<String> expectedCommandLineElements = new HashSet<>();\n    expectedCommandLineElements.add(StartMemberUtils.getJavaPath());\n    expectedCommandLineElements.add(\"-server\");\n    expectedCommandLineElements.add(\"-classpath\");\n    expectedCommandLineElements\n        .add(StartMemberUtils.getGemFireJarPath().concat(File.pathSeparator).concat(customClasspath)\n            .concat(File.pathSeparator).concat(StartMemberUtils.CORE_DEPENDENCIES_JAR_PATHNAME));\n    expectedCommandLineElements\n        .add(\"-DgemfirePropertyFile=\".concat(gemfirePropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\n        \"-DgemfireSecurityPropertyFile=\".concat(gemfireSecurityPropertiesFile.getAbsolutePath()));\n    expectedCommandLineElements.add(\"-Dgemfire.statistic-sample-rate=1500\");\n    expectedCommandLineElements.add(\"-Dgemfire.disable-auto-reconnect=true\");\n    expectedCommandLineElements.addAll(Arrays.asList(jvmArguments));\n    expectedCommandLineElements.add(\"org.apache.geode.distributed.ServerLauncher\");\n    expectedCommandLineElements.add(\"start\");\n    expectedCommandLineElements.add(\"fullServer\");\n    expectedCommandLineElements.add(\"--assign-buckets\");\n    expectedCommandLineElements.add(\"--debug\");\n    expectedCommandLineElements.add(\"--disable-default-server\");\n    expectedCommandLineElements.add(\"--force\");\n    expectedCommandLineElements.add(\"--rebalance\");\n    expectedCommandLineElements.add(\"--redirect-output\");\n    expectedCommandLineElements.add(\"--server-port=41214\");\n    expectedCommandLineElements.add(\"--spring-xml-location=/config/spring-server.xml\");\n    expectedCommandLineElements.add(\"--critical-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--critical-off-heap-percentage=95.5\");\n    expectedCommandLineElements.add(\"--eviction-off-heap-percentage=85.0\");\n    expectedCommandLineElements.add(\"--max-connections=800\");\n    expectedCommandLineElements.add(\"--max-message-count=500\");\n    expectedCommandLineElements.add(\"--max-threads=100\");\n    expectedCommandLineElements.add(\"--message-time-to-live=93\");\n    expectedCommandLineElements.add(\"--socket-buffer-size=1048576\");\n    expectedCommandLineElements.add(\"--hostname-for-clients=localhost\");\n\n    assertNotNull(commandLineElements);\n    assertTrue(commandLineElements.length > 0);\n\n    assertThat(commandLineElements).containsAll(expectedCommandLineElements);\n  }\n","realPath":"geode-assembly/src/test/java/org/apache/geode/management/internal/cli/commands/StartServerCommandTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"N"}],"commitId":"a9023e06d835d660e9c9f5b2f6a1017866977088","commitMessage":"@@@GEODE-5212: fix failing StartLocator and Server command DUnit tests (#2580)\n\n   * Added unit tests to cover different working directory cases\n   * Removed acceptance tests related to working directory as they\n     seem to be fragile as paths are environment specific\n\nSigned-off-by: Kirk Lund <klund@apache.org>","date":"2018-10-12 07:11:27","modifiedFileCount":"7","status":"M","submitter":"Sai Boorlagadda"}]
