[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testConfigWithIdentity1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\", \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*\");\n    serializer.initialize(this.c, props);\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    assertEquals(99L, pdxIn.getField(\"long_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","date":"2018-07-18 03:54:18","endLine":1125,"groupId":"11008","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testConfigWithIdentity1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/2ce56937f854d821cafc8aa8f3392acf9e7930.src","preCode":"  public void testConfigWithIdentity1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\", \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*\");\n    serializer.initialize(this.c, props);\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    assertEquals(99L, pdxIn.getField(\"long_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1107,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testConfigWithIdentityAndExclude1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\",\n        \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*#exclude=string.*\");\n    serializer.initialize(this.c, props);\n\n    assertEquals(27, manager.getFields(DomainObjectPdxAuto.class).size());\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    \r\n    assertNull(pdxIn.getField(\"string_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","date":"2018-07-18 03:54:18","endLine":1153,"groupId":"43503","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigWithIdentityAndExclude1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/2ce56937f854d821cafc8aa8f3392acf9e7930.src","preCode":"  public void testConfigWithIdentityAndExclude1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\",\n        \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*#exclude=string.*\");\n    serializer.initialize(this.c, props);\n\n    assertEquals(27, manager.getFields(DomainObjectPdxAuto.class).size());\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    \r\n    assertNull(pdxIn.getField(\"string_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1131,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2020-07-09 04:07:43","codes":[{"authorDate":"2020-07-09 04:07:43","commitOrder":2,"curCode":"  public void testConfigWithIdentity1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\", \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*\");\n    serializer.initialize(this.c, props);\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    assertEquals(99L, pdxIn.getField(\"long_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","date":"2020-07-18 08:04:53","endLine":1128,"groupId":"11008","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testConfigWithIdentity1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7b/de4798baf03392ab2054bd9622a7e6d4be01d0.src","preCode":"  public void testConfigWithIdentity1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\", \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*\");\n    serializer.initialize(this.c, props);\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    assertEquals(99L, pdxIn.getField(\"long_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1110,"status":"M"},{"authorDate":"2020-07-09 04:07:43","commitOrder":2,"curCode":"  public void testConfigWithIdentityAndExclude1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\",\n        \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*#exclude=string.*\");\n    serializer.initialize(this.c, props);\n\n    assertEquals(27, manager.getFields(DomainObjectPdxAuto.class).size());\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    \r\n    assertNull(pdxIn.getField(\"string_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","date":"2020-07-18 08:04:53","endLine":1156,"groupId":"43503","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigWithIdentityAndExclude1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7b/de4798baf03392ab2054bd9622a7e6d4be01d0.src","preCode":"  public void testConfigWithIdentityAndExclude1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\",\n        \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*#exclude=string.*\");\n    serializer.initialize(this.c, props);\n\n    assertEquals(27, manager.getFields(DomainObjectPdxAuto.class).size());\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    \r\n    assertNull(pdxIn.getField(\"string_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1134,"status":"M"}],"commitId":"17d6679125942f5f33ded4670dc9e0ca643e03da","commitMessage":"@@@GEODE-8337: git mv Version.java->KnownVersion.java\n","date":"2020-07-18 08:04:53","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"},{"authorTime":"2020-07-23 01:09:22","codes":[{"authorDate":"2020-07-23 01:09:22","commitOrder":3,"curCode":"  public void testConfigWithIdentity1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\", \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*\");\n    serializer.initialize(this.c, props);\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    assertEquals(99L, pdxIn.getField(\"long_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","date":"2020-07-23 04:07:08","endLine":1128,"groupId":"11008","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testConfigWithIdentity1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cb/8bfc24e1c2b42be6ec20cb6c3ba285776cb2aa.src","preCode":"  public void testConfigWithIdentity1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\", \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*\");\n    serializer.initialize(this.c, props);\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    assertEquals(99L, pdxIn.getField(\"long_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1110,"status":"M"},{"authorDate":"2020-07-23 01:09:22","commitOrder":3,"curCode":"  public void testConfigWithIdentityAndExclude1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\",\n        \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*#exclude=string.*\");\n    serializer.initialize(this.c, props);\n\n    assertEquals(27, manager.getFields(DomainObjectPdxAuto.class).size());\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    \r\n    assertNull(pdxIn.getField(\"string_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","date":"2020-07-23 04:07:08","endLine":1156,"groupId":"43503","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigWithIdentityAndExclude1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cb/8bfc24e1c2b42be6ec20cb6c3ba285776cb2aa.src","preCode":"  public void testConfigWithIdentityAndExclude1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\",\n        \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*#exclude=string.*\");\n    serializer.initialize(this.c, props);\n\n    assertEquals(27, manager.getFields(DomainObjectPdxAuto.class).size());\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    \r\n    assertNull(pdxIn.getField(\"string_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1134,"status":"M"}],"commitId":"76a034b795ea4c30ec081816b47cd2a00daa29c3","commitMessage":"@@@Revert \"GEODE-8337: git mv Version.java->KnownVersion.java\"\n\nThis reverts commit 17d66791\n","date":"2020-07-23 04:07:08","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"},{"authorTime":"2020-07-09 04:07:43","codes":[{"authorDate":"2020-07-09 04:07:43","commitOrder":4,"curCode":"  public void testConfigWithIdentity1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\", \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*\");\n    serializer.initialize(this.c, props);\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    assertEquals(99L, pdxIn.getField(\"long_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","date":"2020-08-13 07:45:32","endLine":1128,"groupId":"105296","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testConfigWithIdentity1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7b/de4798baf03392ab2054bd9622a7e6d4be01d0.src","preCode":"  public void testConfigWithIdentity1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\", \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*\");\n    serializer.initialize(this.c, props);\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    assertEquals(99L, pdxIn.getField(\"long_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1110,"status":"M"},{"authorDate":"2020-07-09 04:07:43","commitOrder":4,"curCode":"  public void testConfigWithIdentityAndExclude1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\",\n        \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*#exclude=string.*\");\n    serializer.initialize(this.c, props);\n\n    assertEquals(27, manager.getFields(DomainObjectPdxAuto.class).size());\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    \r\n    assertNull(pdxIn.getField(\"string_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","date":"2020-08-13 07:45:32","endLine":1156,"groupId":"105296","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigWithIdentityAndExclude1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7b/de4798baf03392ab2054bd9622a7e6d4be01d0.src","preCode":"  public void testConfigWithIdentityAndExclude1() throws Exception {\n    setupSerializer();\n    Properties props = new Properties();\n    props.put(\"classes\",\n        \"org.apache.geode.pdx.DomainObjectPdxAuto#identity=long.*#exclude=string.*\");\n    serializer.initialize(this.c, props);\n\n    assertEquals(27, manager.getFields(DomainObjectPdxAuto.class).size());\n\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    objOut.set(\"string_0\", \"test string value\");\n    objOut.set(\"long_0\", 99L);\n\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pdxIn =\n        DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n\n    \r\n    assertNull(pdxIn.getField(\"string_0\"));\n    assertTrue(pdxIn.isIdentityField(\"long_0\"));\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1134,"status":"M"}],"commitId":"068a467dee63db91cb8869fe70ea435c95a6526c","commitMessage":"@@@GEODE-8337: git mv Version.java->KnownVersion.java\n\n(cherry picked from commit 17d6679125942f5f33ded4670dc9e0ca643e03da)\n","date":"2020-08-13 07:45:32","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"}]
