[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void configureEvictionByEntryCount() throws Exception {\n\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-entry-count=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=LOCAL\")\n        .execute(gfsh);\n\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"ERROR: An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n  }\n","date":"2018-07-18 03:54:18","endLine":92,"groupId":"41323","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"configureEvictionByEntryCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e4/0ec3a5d1685f91fb8363d0ec4da534a62af2f2.src","preCode":"  public void configureEvictionByEntryCount() throws Exception {\n\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-entry-count=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=LOCAL\")\n        .execute(gfsh);\n\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"ERROR: An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/ConfigureEvictionThroughGfsh.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void configureEvictionByMaxMemory() throws Exception {\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-max-memory=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=LOCAL\")\n        .execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"ERROR: An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n  }\n","date":"2018-07-18 03:54:18","endLine":146,"groupId":"41323","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"configureEvictionByMaxMemory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e4/0ec3a5d1685f91fb8363d0ec4da534a62af2f2.src","preCode":"  public void configureEvictionByMaxMemory() throws Exception {\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-max-memory=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=LOCAL\")\n        .execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"ERROR: An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/ConfigureEvictionThroughGfsh.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-11-27 04:10:12","codes":[{"authorDate":"2018-11-27 04:10:12","commitOrder":2,"curCode":"  public void configureEvictionByEntryCount() throws Exception {\n\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server --server-port=0\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-entry-count=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=LOCAL\")\n        .execute(gfsh);\n\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"ERROR: An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n  }\n","date":"2018-11-27 04:10:12","endLine":92,"groupId":"41323","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"configureEvictionByEntryCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/12/5d32739fe59ead65c0f99f8d06624cfaf7576a.src","preCode":"  public void configureEvictionByEntryCount() throws Exception {\n\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-entry-count=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=LOCAL\")\n        .execute(gfsh);\n\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"ERROR: An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/ConfigureEvictionThroughGfsh.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2018-11-27 04:10:12","commitOrder":2,"curCode":"  public void configureEvictionByMaxMemory() throws Exception {\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server --server-port=0\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-max-memory=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=LOCAL\")\n        .execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"ERROR: An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n  }\n","date":"2018-11-27 04:10:12","endLine":146,"groupId":"41323","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"configureEvictionByMaxMemory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/12/5d32739fe59ead65c0f99f8d06624cfaf7576a.src","preCode":"  public void configureEvictionByMaxMemory() throws Exception {\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-max-memory=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=LOCAL\")\n        .execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"ERROR: An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/ConfigureEvictionThroughGfsh.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"8e5397edbcdd6f089d7267304b3f8b5fbbe2ac7c","commitMessage":"@@@GEODE-6062: Use random server port for ConfigureEvictionThroughGfsh (#2862)\n\nThis should help reduce the frequency of random CI failures for this\ntest. It's still a bit worrisome that servers were using the same port\nin the first place.  but that's not really what we're testing here.\n\nCo-authored-by: Galen O'Sullivan <gosullivan@pivotal.io>\nCo-authored-by: Jianxia Chen <jchen@pivotal.io>","date":"2018-11-27 04:10:12","modifiedFileCount":"1","status":"M","submitter":"Jianxia Chen"},{"authorTime":"2018-11-09 02:06:36","codes":[{"authorDate":"2018-11-09 02:06:36","commitOrder":3,"curCode":"  public void configureEvictionByEntryCount() throws Exception {\n\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server --server-port=0\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-entry-count=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=LOCAL\")\n        .execute(gfsh);\n\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n  }\n","date":"2018-12-07 03:13:23","endLine":92,"groupId":"41323","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"configureEvictionByEntryCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/29/ea9a5eb8c9c46f6278fbf3f2f4d59d2d6802a6.src","preCode":"  public void configureEvictionByEntryCount() throws Exception {\n\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server --server-port=0\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-entry-count=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=LOCAL\")\n        .execute(gfsh);\n\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"ERROR: An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/ConfigureEvictionThroughGfsh.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2018-11-09 02:06:36","commitOrder":3,"curCode":"  public void configureEvictionByMaxMemory() throws Exception {\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server --server-port=0\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-max-memory=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=LOCAL\")\n        .execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n  }\n","date":"2018-12-07 03:13:23","endLine":146,"groupId":"41323","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"configureEvictionByMaxMemory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/29/ea9a5eb8c9c46f6278fbf3f2f4d59d2d6802a6.src","preCode":"  public void configureEvictionByMaxMemory() throws Exception {\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server --server-port=0\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-max-memory=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=LOCAL\")\n        .execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"ERROR: An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/ConfigureEvictionThroughGfsh.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"e9f5cd35b64ffa63ca6ebddee8aba3ef91a76d4b","commitMessage":"@@@GEODE-5971: Refactor CreateRegionCommand to extend SingleGfshCommand\n\n- Store config via generating a RegionConfig object rather than an XML\nentity\n\nSigned-off-by: Peter Tran <ptran@pivotal.io>\nSigned-off-by: Aditya Anchuri <aanchuri@pivotal.io>\nSigned-off-by: Jens Deppe <jdeppe@pivotal.io>\n","date":"2018-12-07 03:13:23","modifiedFileCount":"23","status":"M","submitter":"Aditya Anchuri"},{"authorTime":"2020-05-29 00:37:39","codes":[{"authorDate":"2020-05-29 00:37:39","commitOrder":4,"curCode":"  public void configureEvictionByEntryCount() throws Exception {\n\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server --server-port=0\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-entry-count=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=LOCAL\")\n        .execute(gfsh);\n\n    assertThat(execution.getOutputText())\n        .contains(\"Region \\\"\" + SEPARATOR + \"region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText())\n        .contains(\"Region \\\"\" + SEPARATOR + \"region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText())\n        .contains(\"Region \\\"\" + SEPARATOR + \"region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText())\n        .contains(\"Region \\\"\" + SEPARATOR + \"region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText())\n        .contains(\"Region \\\"\" + SEPARATOR + \"region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n  }\n","date":"2020-05-29 00:37:39","endLine":98,"groupId":"101121","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"configureEvictionByEntryCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1c/7b476563922bc8d05f485971c5ccfaf1fc98bc.src","preCode":"  public void configureEvictionByEntryCount() throws Exception {\n\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server --server-port=0\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-entry-count=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=LOCAL\")\n        .execute(gfsh);\n\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-maximum-value\\\\s+ | 1000\");\n\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/ConfigureEvictionThroughGfsh.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2020-05-29 00:37:39","commitOrder":4,"curCode":"  public void configureEvictionByMaxMemory() throws Exception {\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server --server-port=0\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-max-memory=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=LOCAL\")\n        .execute(gfsh);\n    assertThat(execution.getOutputText())\n        .contains(\"Region \\\"\" + SEPARATOR + \"region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText())\n        .contains(\"Region \\\"\" + SEPARATOR + \"region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText())\n        .contains(\"Region \\\"\" + SEPARATOR + \"region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText())\n        .contains(\"Region \\\"\" + SEPARATOR + \"region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText())\n        .contains(\"Region \\\"\" + SEPARATOR + \"region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n  }\n","date":"2020-05-29 00:37:39","endLine":157,"groupId":"101121","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"configureEvictionByMaxMemory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1c/7b476563922bc8d05f485971c5ccfaf1fc98bc.src","preCode":"  public void configureEvictionByMaxMemory() throws Exception {\n    GfshExecution execution = GfshScript\n        .of(\"start locator --name=locator\", \"start server --name=server --server-port=0\",\n            \"create region --name=region1 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region2 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE\",\n            \"create region --name=region3 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\",\n            \"create region --name=region4 --eviction-action=local-destroy --eviction-max-memory=1000 --type=LOCAL\",\n            \"create region --name=region5 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=LOCAL\")\n        .execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region1\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region2\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region3\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region4\\\" created on \\\"server\\\"\");\n    assertThat(execution.getOutputText()).contains(\"Region \\\"/region5\\\" created on \\\"server\\\"\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\",\n            \"create region --name=region6 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\")\n        .expectFailure().execute(gfsh);\n    assertThat(execution.getOutputText()).contains(\n        \"An Eviction Controller with local destroy eviction action is incompatible with\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region1\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region1\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region2\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region2\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region3\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region3\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region4\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region4\")\n        .containsPattern(\"eviction-action\\\\s+| local-destroy\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n\n    execution = GfshScript\n        .of(\"connect --locator=localhost[10334]\", \"describe region --name=region5\").execute(gfsh);\n    assertThat(execution.getOutputText()).containsPattern(\"region5\")\n        .containsPattern(\"eviction-action\\\\s+| overflow-to-disk\")\n        .containsPattern(\"eviction-max-memory\\\\s+ | 1000\");\n  }\n","realPath":"geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/ConfigureEvictionThroughGfsh.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"0fd56e418752c14ed8ebebe5a370164034aafc39","commitMessage":"@@@GEODE-7846: Replace all uses of hardcoded / with Region.SEPARATOR (#5157)\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-29 00:37:39","modifiedFileCount":"489","status":"M","submitter":"Donal Evans"}]
