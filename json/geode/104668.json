[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testCopyOnReadFalseWithHashIndexWithLocalRegion() throws Exception {\n    utils.getCache().setCopyOnRead(false);\n    utils.createLocalRegion(regionName);\n    utils.createHashIndex(indexName, \"p.indexKey\", \"/\" + regionName + \" p\");\n    helpExecuteQueriesCopyOnReadFalse(queries, expectedResults, numObjects,\n        objectsAndResultsMultiplier, true, false);\n  }\n","date":"2018-07-18 03:54:18","endLine":202,"groupId":"39514","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyOnReadFalseWithHashIndexWithLocalRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ac/ee51e8512b18c4d32ac60096025eedae68ce0c.src","preCode":"  public void testCopyOnReadFalseWithHashIndexWithLocalRegion() throws Exception {\n    utils.getCache().setCopyOnRead(false);\n    utils.createLocalRegion(regionName);\n    utils.createHashIndex(indexName, \"p.indexKey\", \"/\" + regionName + \" p\");\n    helpExecuteQueriesCopyOnReadFalse(queries, expectedResults, numObjects,\n        objectsAndResultsMultiplier, true, false);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/CopyOnReadIndexJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testCopyOnReadFalseWithCompactRangeIndexWithLocalRegion() throws Exception {\n    utils.getCache().setCopyOnRead(false);\n    utils.createLocalRegion(regionName);\n    utils.createIndex(indexName, \"p.indexKey\", \"/\" + regionName + \" p\");\n    helpExecuteQueriesCopyOnReadFalse(queries, expectedResults, numObjects,\n        objectsAndResultsMultiplier, true, false);\n  }\n","date":"2018-07-18 03:54:18","endLine":170,"groupId":"39514","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCopyOnReadFalseWithCompactRangeIndexWithLocalRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/82/37130af707079f481db1eb6d33edd28b586b9d.src","preCode":"  public void testCopyOnReadFalseWithCompactRangeIndexWithLocalRegion() throws Exception {\n    utils.getCache().setCopyOnRead(false);\n    utils.createLocalRegion(regionName);\n    utils.createIndex(indexName, \"p.indexKey\", \"/\" + regionName + \" p\");\n    helpExecuteQueriesCopyOnReadFalse(queries, expectedResults, numObjects,\n        objectsAndResultsMultiplier, true, false);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/CopyOnReadQueryJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2020-05-09 09:44:08","codes":[{"authorDate":"2020-05-09 09:44:08","commitOrder":2,"curCode":"  public void testCopyOnReadFalseWithHashIndexWithLocalRegion() throws Exception {\n    utils.getCache().setCopyOnRead(false);\n    utils.createLocalRegion(regionName);\n    utils.createHashIndex(indexName, \"p.indexKey\", SEPARATOR + regionName + \" p\");\n    helpExecuteQueriesCopyOnReadFalse(queries, expectedResults, numObjects,\n        objectsAndResultsMultiplier, true, false);\n  }\n","date":"2020-05-09 09:44:08","endLine":205,"groupId":"104668","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testCopyOnReadFalseWithHashIndexWithLocalRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/36/357fbe8ebbd768b2173fa11fb197869d1622a0.src","preCode":"  public void testCopyOnReadFalseWithHashIndexWithLocalRegion() throws Exception {\n    utils.getCache().setCopyOnRead(false);\n    utils.createLocalRegion(regionName);\n    utils.createHashIndex(indexName, \"p.indexKey\", \"/\" + regionName + \" p\");\n    helpExecuteQueriesCopyOnReadFalse(queries, expectedResults, numObjects,\n        objectsAndResultsMultiplier, true, false);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/index/CopyOnReadIndexJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"},{"authorDate":"2020-05-09 09:44:08","commitOrder":2,"curCode":"  public void testCopyOnReadFalseWithCompactRangeIndexWithLocalRegion() throws Exception {\n    utils.getCache().setCopyOnRead(false);\n    utils.createLocalRegion(regionName);\n    utils.createIndex(indexName, \"p.indexKey\", SEPARATOR + regionName + \" p\");\n    helpExecuteQueriesCopyOnReadFalse(queries, expectedResults, numObjects,\n        objectsAndResultsMultiplier, true, false);\n  }\n","date":"2020-05-09 09:44:08","endLine":171,"groupId":"104668","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCopyOnReadFalseWithCompactRangeIndexWithLocalRegion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/91b422c8e0f4641119e2009b5e6a34aa785abf.src","preCode":"  public void testCopyOnReadFalseWithCompactRangeIndexWithLocalRegion() throws Exception {\n    utils.getCache().setCopyOnRead(false);\n    utils.createLocalRegion(regionName);\n    utils.createIndex(indexName, \"p.indexKey\", \"/\" + regionName + \" p\");\n    helpExecuteQueriesCopyOnReadFalse(queries, expectedResults, numObjects,\n        objectsAndResultsMultiplier, true, false);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/internal/CopyOnReadQueryJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"8f0650e83e22d4c22d9bf9b15beffff0fcb451d2","commitMessage":"@@@GEODE-7864: Replace uses of hardcoded \"/\" with Region.SEPARATOR (#5049)\n\n* GEODE-7864: Replace uses of hardcoded \"/\" with Region.SEPARATOR\n\nAuthored-by: Donal Evans <doevans@pivotal.io>","date":"2020-05-09 09:44:08","modifiedFileCount":"149","status":"M","submitter":"Donal Evans"}]
