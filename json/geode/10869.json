[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0))).thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n    PowerMockito.mockStatic(CacheClientNotifier.class, Mockito.CALLS_REAL_METHODS);\n    PowerMockito.when(CacheClientNotifier.getInstance()).thenReturn(ccn);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","date":"2016-09-15 02:08:18","endLine":144,"groupId":"8808","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2d/a6f19a2708b839264c14b9c27e3ff6702a2b52.src","preCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0))).thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n    PowerMockito.mockStatic(CacheClientNotifier.class, Mockito.CALLS_REAL_METHODS);\n    PowerMockito.when(CacheClientNotifier.getInstance()).thenReturn(ccn);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/UnregisterInterestTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","date":"2016-09-15 02:08:18","endLine":99,"groupId":"12063","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/67/28a377816e521a9419e8dd7576397f8548c14e.src","preCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/ContainsKey66Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2016-09-29 07:27:52","codes":[{"authorDate":"2016-09-29 07:27:52","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0))).thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n    PowerMockito.mockStatic(CacheClientNotifier.class, Mockito.CALLS_REAL_METHODS);\n    PowerMockito.when(CacheClientNotifier.getInstance()).thenReturn(ccn);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","date":"2016-09-29 07:27:52","endLine":146,"groupId":"8808","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5c/e8cf43447fc123089a7982233d7f4b27ac084d.src","preCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0))).thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n    PowerMockito.mockStatic(CacheClientNotifier.class, Mockito.CALLS_REAL_METHODS);\n    PowerMockito.when(CacheClientNotifier.getInstance()).thenReturn(ccn);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/UnregisterInterestTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2016-09-29 07:27:52","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","date":"2016-09-29 07:27:52","endLine":101,"groupId":"42806","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c9/3d5f4332b7df23edc48a427e4133435f251e8c.src","preCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/ContainsKey66Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"f686e9e1e5c9c6c543ec70aba94d387e02820643","commitMessage":"@@@Merge branch 'develop' into feature/GEODE-1801\n","date":"2016-09-29 07:27:52","modifiedFileCount":"47","status":"M","submitter":"Udo Kohlmeyer"},{"authorTime":"2016-09-29 07:27:52","codes":[{"authorDate":"2018-12-12 08:38:00","commitOrder":3,"curCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0)))\n        .thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","date":"2018-12-12 08:38:00","endLine":141,"groupId":"8808","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/02/ac0785c3415737af3c8b7082c7f4d7fb32ddf4.src","preCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0)))\n        .thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n    PowerMockito.mockStatic(CacheClientNotifier.class, Mockito.CALLS_REAL_METHODS);\n    PowerMockito.when(CacheClientNotifier.getInstance()).thenReturn(ccn);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/UnregisterInterestTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2016-09-29 07:27:52","commitOrder":3,"curCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","date":"2016-09-29 07:27:52","endLine":101,"groupId":"42806","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c9/3d5f4332b7df23edc48a427e4133435f251e8c.src","preCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/ContainsKey66Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"N"}],"commitId":"0b74d425f466137c3adbaac4678aadb1df731c72","commitMessage":"@@@Merge pull request #2985 from apache/feature/GEODE-6143-4\n\nGEODE-6143: remove PowerMock from UnregisterInterestTest","date":"2018-12-12 08:38:00","modifiedFileCount":"1","status":"M","submitter":"Xiaojian Zhou"},{"authorTime":"2019-05-04 05:55:42","codes":[{"authorDate":"2019-05-04 05:55:42","commitOrder":4,"curCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0)))\n        .thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","date":"2019-05-04 05:55:42","endLine":141,"groupId":"8808","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9e/2fdc6e059db3de5cb65a7c500ae9645ec38034.src","preCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0)))\n        .thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/UnregisterInterestTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2019-05-04 05:55:42","commitOrder":4,"curCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","date":"2019-05-04 05:55:42","endLine":101,"groupId":"42806","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/14/daf84497c7a0c9a137462f39aeec6d268aaa6e.src","preCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.regionNamePart.getString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/ContainsKey66Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"45376d1c357fe6eb117eb51752f9b93f9ba6fe40","commitMessage":"@@@GEODE-6698: optimize region name deserialization in client/server messaging (#3535)\n\nAdded getCachedString to Part that will check a cache\nso that frequently used strings (like region names)\nonly need to be deserialized once. Subsequent times\nwill check the cache using a ByteArrayKey wrapping the\nserialized bytes.\n","date":"2019-05-04 05:55:42","modifiedFileCount":"71","status":"M","submitter":"Darrel Schneider"},{"authorTime":"2020-07-09 04:07:43","codes":[{"authorDate":"2020-07-09 04:07:43","commitOrder":5,"curCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0)))\n        .thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(KnownVersion.CURRENT);\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","date":"2020-07-18 08:04:53","endLine":141,"groupId":"8808","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/75/b97075ee18533094cfab56570356b3d8db6059.src","preCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0)))\n        .thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/UnregisterInterestTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2020-07-09 04:07:43","commitOrder":5,"curCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(KnownVersion.CURRENT);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","date":"2020-07-18 08:04:53","endLine":101,"groupId":"42806","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a0/dd813baed5db33513e9096f69b4001988c4f64.src","preCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/ContainsKey66Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"17d6679125942f5f33ded4670dc9e0ca643e03da","commitMessage":"@@@GEODE-8337: git mv Version.java->KnownVersion.java\n","date":"2020-07-18 08:04:53","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"},{"authorTime":"2020-07-23 01:09:22","codes":[{"authorDate":"2020-07-23 01:09:22","commitOrder":6,"curCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0)))\n        .thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","date":"2020-07-23 04:07:08","endLine":141,"groupId":"8808","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/89/12e054a12bce615cff159a7400f111d6c569ac.src","preCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0)))\n        .thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(KnownVersion.CURRENT);\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/UnregisterInterestTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2020-07-23 01:09:22","commitOrder":6,"curCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","date":"2020-07-23 04:07:08","endLine":101,"groupId":"42806","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ea/a86840fa4673470e9844751cd9cc79dceda616.src","preCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(KnownVersion.CURRENT);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/ContainsKey66Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"76a034b795ea4c30ec081816b47cd2a00daa29c3","commitMessage":"@@@Revert \"GEODE-8337: git mv Version.java->KnownVersion.java\"\n\nThis reverts commit 17d66791\n","date":"2020-07-23 04:07:08","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"},{"authorTime":"2020-07-09 04:07:43","codes":[{"authorDate":"2020-07-09 04:07:43","commitOrder":7,"curCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0)))\n        .thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(KnownVersion.CURRENT);\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","date":"2020-08-13 07:45:32","endLine":141,"groupId":"10869","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/75/b97075ee18533094cfab56570356b3d8db6059.src","preCode":"  public void setUp() throws Exception {\n    this.unregisterInterest = new UnregisterInterest();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.authzRequest.unregisterInterestAuthorize(eq(REGION_NAME), eq(KEY), eq(0)))\n        .thenReturn(this.unregisterInterestOperationContext);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n    when(this.cache.getCancelCriterion()).thenReturn(mock(CancelCriterion.class));\n\n    when(this.interestTypePart.getInt()).thenReturn(0);\n\n    when(this.isClosingPart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n\n    when(this.keepAlivePart.getObject()).thenReturn(BYTE_ARRAY);\n\n    when(this.message.getNumberOfParts()).thenReturn(5);\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.interestTypePart);\n    when(this.message.getPart(eq(2))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(3))).thenReturn(this.isClosingPart);\n    when(this.message.getPart(eq(4))).thenReturn(this.keepAlivePart);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getReplyMessage()).thenReturn(this.replyMessage);\n    when(this.serverConnection.getCachedRegionHelper()).thenReturn(mock(CachedRegionHelper.class));\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getAcceptor()).thenReturn(this.acceptor);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.valuePart.getObject()).thenReturn(CALLBACK_ARG);\n\n    when(this.unregisterInterestOperationContext.getKey()).thenReturn(KEY);\n\n    CacheClientNotifier ccn = mock(CacheClientNotifier.class);\n\n    when(this.acceptor.getCacheClientNotifier()).thenReturn(ccn);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/UnregisterInterestTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2020-07-09 04:07:43","commitOrder":7,"curCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(KnownVersion.CURRENT);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","date":"2020-08-13 07:45:32","endLine":101,"groupId":"10869","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a0/dd813baed5db33513e9096f69b4001988c4f64.src","preCode":"  public void setUp() throws Exception {\n    this.containsKey66 = new ContainsKey66();\n    MockitoAnnotations.initMocks(this);\n\n    when(this.region.containsKey(eq(REGION_NAME))).thenReturn(true);\n\n    when(this.cache.getRegion(isA(String.class))).thenReturn(this.region);\n\n    when(this.serverConnection.getCache()).thenReturn(this.cache);\n    when(this.serverConnection.getCacheServerStats()).thenReturn(this.cacheServerStats);\n    when(this.serverConnection.getErrorResponseMessage()).thenReturn(this.errorResponseMessage);\n    when(this.serverConnection.getResponseMessage()).thenReturn(this.responseMessage);\n    when(this.serverConnection.getAuthzRequest()).thenReturn(this.authzRequest);\n    when(this.serverConnection.getClientVersion()).thenReturn(Version.CURRENT);\n\n    when(this.regionNamePart.getCachedString()).thenReturn(REGION_NAME);\n\n    when(this.keyPart.getStringOrObject()).thenReturn(KEY);\n    when(this.modePart.getInt()).thenReturn(0);\n\n    when(this.message.getPart(eq(0))).thenReturn(this.regionNamePart);\n    when(this.message.getPart(eq(1))).thenReturn(this.keyPart);\n    when(this.message.getPart(eq(2))).thenReturn(this.modePart);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/ContainsKey66Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"068a467dee63db91cb8869fe70ea435c95a6526c","commitMessage":"@@@GEODE-8337: git mv Version.java->KnownVersion.java\n\n(cherry picked from commit 17d6679125942f5f33ded4670dc9e0ca643e03da)\n","date":"2020-08-13 07:45:32","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"}]
