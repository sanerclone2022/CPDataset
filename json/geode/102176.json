[{"authorTime":"2019-08-21 06:52:35","codes":[{"authorDate":"2019-08-21 06:52:35","commitOrder":3,"curCode":"  public void testSingletonHasClientProxiesTrue() {\n    InternalCache internalCache = Fakes.cache();\n    CacheClientProxy proxy = mock(CacheClientProxy.class);\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache,\n            mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    when(proxy.getProxyID()).thenReturn(mock(ClientProxyMembershipID.class));\n    ccn.addClientProxy(proxy);\n\n    \r\n    assertTrue(CacheClientNotifier.singletonHasClientProxies());\n\n    when(proxy.getAcceptorId()).thenReturn(Long.valueOf(111));\n    ccn.shutdown(111);\n  }\n","date":"2019-08-21 06:52:35","endLine":271,"groupId":"1360","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingletonHasClientProxiesTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/b828e190d79d132d7a8ae2a4cf4f75a660da04.src","preCode":"  public void testSingletonHasClientProxiesTrue() {\n    InternalCache internalCache = Fakes.cache();\n    CacheClientProxy proxy = mock(CacheClientProxy.class);\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache,\n            mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    when(proxy.getProxyID()).thenReturn(mock(ClientProxyMembershipID.class));\n    ccn.addClientProxy(proxy);\n\n    \r\n    assertTrue(CacheClientNotifier.singletonHasClientProxies());\n\n    when(proxy.getAcceptorId()).thenReturn(Long.valueOf(111));\n    ccn.shutdown(111);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/CacheClientNotifierTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"MB"},{"authorDate":"2019-08-21 06:52:35","commitOrder":3,"curCode":"  private CacheClientNotifier createCacheClientNotifier() {\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance((InternalCache) cache,\n            mock(ClientRegistrationEventQueueManager.class), mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 100000, 100000, mock(ConnectionListener.class), null,\n            false);\n    return ccn;\n  }\n","date":"2019-08-21 06:52:35","endLine":128,"groupId":"46696","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createCacheClientNotifier","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cc/9daa4a661fe68173b97e1770703ecb12afaf4d.src","preCode":"  private CacheClientNotifier createCacheClientNotifier() {\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance((InternalCache) cache,\n            mock(ClientRegistrationEventQueueManager.class), mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 100000, 100000, mock(ConnectionListener.class), null,\n            false);\n    return ccn;\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ha/HARegionQueueIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"}],"commitId":"5d0153ad4adb1612a1083673f98b1982819a6589","commitMessage":"@@@GEODE-7089: Each client registration thread uses its own queue\n\nCo-authored-by: Ryan McMahon <rmcmahon@pivotal.io>\nCo-authored-by: Donal Evans <doevans@pivotal.io>","date":"2019-08-21 06:52:35","modifiedFileCount":"11","status":"M","submitter":"Ryan McMahon"},{"authorTime":"2020-04-25 00:20:21","codes":[{"authorDate":"2019-08-21 06:52:35","commitOrder":4,"curCode":"  public void testSingletonHasClientProxiesTrue() {\n    InternalCache internalCache = Fakes.cache();\n    CacheClientProxy proxy = mock(CacheClientProxy.class);\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache,\n            mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    when(proxy.getProxyID()).thenReturn(mock(ClientProxyMembershipID.class));\n    ccn.addClientProxy(proxy);\n\n    \r\n    assertTrue(CacheClientNotifier.singletonHasClientProxies());\n\n    when(proxy.getAcceptorId()).thenReturn(Long.valueOf(111));\n    ccn.shutdown(111);\n  }\n","date":"2019-08-21 06:52:35","endLine":271,"groupId":"1360","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingletonHasClientProxiesTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/b828e190d79d132d7a8ae2a4cf4f75a660da04.src","preCode":"  public void testSingletonHasClientProxiesTrue() {\n    InternalCache internalCache = Fakes.cache();\n    CacheClientProxy proxy = mock(CacheClientProxy.class);\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache,\n            mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    when(proxy.getProxyID()).thenReturn(mock(ClientProxyMembershipID.class));\n    ccn.addClientProxy(proxy);\n\n    \r\n    assertTrue(CacheClientNotifier.singletonHasClientProxies());\n\n    when(proxy.getAcceptorId()).thenReturn(Long.valueOf(111));\n    ccn.shutdown(111);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/CacheClientNotifierTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2020-04-25 00:20:21","commitOrder":4,"curCode":"  private CacheClientNotifier createCacheClientNotifier() {\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache,\n            mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class),\n            100000,\n            100000,\n            mock(ConnectionListener.class),\n            null,\n            false);\n    return ccn;\n  }\n","date":"2020-04-25 00:20:21","endLine":507,"groupId":"46696","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createCacheClientNotifier","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/47/78608c6fdfe14806a0b76e91c62a288b71148e.src","preCode":"  private CacheClientNotifier createCacheClientNotifier() {\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance((InternalCache) cache,\n            mock(ClientRegistrationEventQueueManager.class), mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 100000, 100000, mock(ConnectionListener.class), null,\n            false);\n    return ccn;\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ha/HARegionQueueIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":495,"status":"M"}],"commitId":"0a1701e92dc09bcd6b79edd3b52f20ee9e9a867c","commitMessage":"@@@GEODE-7964: Upgrade Mockito to 3.3.3 (#4924)\n\n","date":"2020-04-25 00:20:21","modifiedFileCount":"34","status":"M","submitter":"Kirk Lund"},{"authorTime":"2020-04-25 00:20:21","codes":[{"authorDate":"2021-01-27 05:38:01","commitOrder":5,"curCode":"  public void testSingletonHasClientProxiesTrue() {\n    when(cacheClientProxy.getAcceptorId())\n        .thenReturn(111L);\n    when(cacheClientProxy.getProxyID())\n        .thenReturn(mock(ClientProxyMembershipID.class));\n    when(internalCache.getCCPTimer())\n        .thenReturn(mock(SystemTimer.class));\n\n    cacheClientNotifier = CacheClientNotifier.getInstance(internalCache,\n        mock(ClientRegistrationEventQueueManager.class), mock(StatisticsClock.class),\n        mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    cacheClientNotifier.addClientProxy(cacheClientProxy);\n\n    \r\n    assertThat(CacheClientNotifier.singletonHasClientProxies()).isTrue();\n  }\n","date":"2021-01-27 05:38:01","endLine":304,"groupId":"102176","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingletonHasClientProxiesTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b9/bb56ebbdb8f635733f221e6922d193b4726971.src","preCode":"  public void testSingletonHasClientProxiesTrue() {\n    InternalCache internalCache = Fakes.cache();\n    CacheClientProxy proxy = mock(CacheClientProxy.class);\n\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(internalCache,\n            mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class), 10, 10, mock(ConnectionListener.class), null, true);\n\n    when(proxy.getProxyID()).thenReturn(mock(ClientProxyMembershipID.class));\n    ccn.addClientProxy(proxy);\n\n    \r\n    assertTrue(CacheClientNotifier.singletonHasClientProxies());\n\n    when(proxy.getAcceptorId()).thenReturn(Long.valueOf(111));\n    ccn.shutdown(111);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/CacheClientNotifierTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"M"},{"authorDate":"2020-04-25 00:20:21","commitOrder":5,"curCode":"  private CacheClientNotifier createCacheClientNotifier() {\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache,\n            mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class),\n            100000,\n            100000,\n            mock(ConnectionListener.class),\n            null,\n            false);\n    return ccn;\n  }\n","date":"2020-04-25 00:20:21","endLine":507,"groupId":"102176","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createCacheClientNotifier","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/47/78608c6fdfe14806a0b76e91c62a288b71148e.src","preCode":"  private CacheClientNotifier createCacheClientNotifier() {\n    CacheClientNotifier ccn =\n        CacheClientNotifier.getInstance(cache,\n            mock(ClientRegistrationEventQueueManager.class),\n            mock(StatisticsClock.class),\n            mock(CacheServerStats.class),\n            100000,\n            100000,\n            mock(ConnectionListener.class),\n            null,\n            false);\n    return ccn;\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ha/HARegionQueueIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":495,"status":"N"}],"commitId":"f8987edd090558ba17f715e7e5fdb00e898e72eb","commitMessage":"@@@GEODE-8811: Fix new value in events for failing client (#5953)\n\n* Declare parameters as interfaces instead of implementations.\n* Improve unit testing of CacheClientNotifier.\n* Use MockitoRule with STRICT_STUBS.","date":"2021-01-27 05:38:01","modifiedFileCount":"9","status":"M","submitter":"Kirk Lund"}]
