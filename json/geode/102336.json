[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void getDataTypeShouldReturnUserClass() throws IOException {\n    byte someUserClassId = 1;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_CLASS);\n    out.writeByte(someUserClassId);\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n    assertThat(type).isEqualTo(\"DataSerializer: with Id:\" + someUserClassId);\n  }\n","date":"2016-09-15 02:08:18","endLine":686,"groupId":"43287","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getDataTypeShouldReturnUserClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1f/9a8aa6636d70bf71b57a9f7345a82cebf44558.src","preCode":"  public void getDataTypeShouldReturnUserClass() throws IOException {\n    byte someUserClassId = 1;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_CLASS);\n    out.writeByte(someUserClassId);\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n    assertThat(type).isEqualTo(\"DataSerializer: with Id:\" + someUserClassId);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":677,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void getDataTypeShouldReturnGemfireEnum() throws IOException {\n    PowerMockito.mockStatic(DataSerializer.class);\n    when(DataSerializer.readString(any(DataInput.class))).thenReturn(\"GEMFIRE_ENUM\");\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.GEMFIRE_ENUM);\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\"java.lang.Enum:GEMFIRE_ENUM\");\n  }\n","date":"2016-09-15 02:08:18","endLine":927,"groupId":"36538","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDataTypeShouldReturnGemfireEnum","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/1f/9a8aa6636d70bf71b57a9f7345a82cebf44558.src","preCode":"  public void getDataTypeShouldReturnGemfireEnum() throws IOException {\n    PowerMockito.mockStatic(DataSerializer.class);\n    when(DataSerializer.readString(any(DataInput.class))).thenReturn(\"GEMFIRE_ENUM\");\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.GEMFIRE_ENUM);\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\"java.lang.Enum:GEMFIRE_ENUM\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":916,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2018-04-07 02:52:09","codes":[{"authorDate":"2018-04-07 02:52:09","commitOrder":2,"curCode":"  public void getDataTypeShouldReturnUserClass() throws IOException {\n    byte someUserClassId = 1;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_CLASS.toByte());\n    out.writeByte(someUserClassId);\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n    assertThat(type).isEqualTo(\"DataSerializer: with Id:\" + someUserClassId);\n  }\n","date":"2018-04-07 02:52:09","endLine":687,"groupId":"43287","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getDataTypeShouldReturnUserClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f5/e8fe7fae0e744a1075502eb3081f440a4d4b24.src","preCode":"  public void getDataTypeShouldReturnUserClass() throws IOException {\n    byte someUserClassId = 1;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_CLASS);\n    out.writeByte(someUserClassId);\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n    assertThat(type).isEqualTo(\"DataSerializer: with Id:\" + someUserClassId);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":678,"status":"M"},{"authorDate":"2018-04-07 02:52:09","commitOrder":2,"curCode":"  public void getDataTypeShouldReturnGemfireEnum() throws IOException {\n    PowerMockito.mockStatic(DataSerializer.class);\n    when(DataSerializer.readString(any(DataInput.class))).thenReturn(\"GEMFIRE_ENUM\");\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.GEMFIRE_ENUM.toByte());\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\"java.lang.Enum:GEMFIRE_ENUM\");\n  }\n","date":"2018-04-07 02:52:09","endLine":848,"groupId":"36538","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getDataTypeShouldReturnGemfireEnum","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f5/e8fe7fae0e744a1075502eb3081f440a4d4b24.src","preCode":"  public void getDataTypeShouldReturnGemfireEnum() throws IOException {\n    PowerMockito.mockStatic(DataSerializer.class);\n    when(DataSerializer.readString(any(DataInput.class))).thenReturn(\"GEMFIRE_ENUM\");\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.GEMFIRE_ENUM);\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\"java.lang.Enum:GEMFIRE_ENUM\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":837,"status":"M"}],"commitId":"804c053fdfbce4b7f1f810b1019f778c02f50020","commitMessage":"@@@GEODE-4518: Replace DSCODE with an enumeration. (#1738)\n\n* GEODE-4518: Replace DSCODE with an enumeration.\n- Deprecate DSCODE interface.\n- Introduce HeaderByte enum.\n- Replace explicit references to DSCODE with\n  explicit references to HeaderByte.\n\n* GEODE-4518: Update analysis files.\n\n* GEODE-4518: Add unit test for value uniqueness.\n\n* GEODE-4518: Convert DSCODE into enum that replaces HeaderByte.\n","date":"2018-04-07 02:52:09","modifiedFileCount":"30","status":"M","submitter":"Michael \"Sarge\" Dodge"},{"authorTime":"2018-12-18 09:38:10","codes":[{"authorDate":"2018-04-07 02:52:09","commitOrder":3,"curCode":"  public void getDataTypeShouldReturnUserClass() throws IOException {\n    byte someUserClassId = 1;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_CLASS.toByte());\n    out.writeByte(someUserClassId);\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n    assertThat(type).isEqualTo(\"DataSerializer: with Id:\" + someUserClassId);\n  }\n","date":"2018-04-07 02:52:09","endLine":687,"groupId":"102336","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getDataTypeShouldReturnUserClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f5/e8fe7fae0e744a1075502eb3081f440a4d4b24.src","preCode":"  public void getDataTypeShouldReturnUserClass() throws IOException {\n    byte someUserClassId = 1;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.USER_CLASS.toByte());\n    out.writeByte(someUserClassId);\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n    assertThat(type).isEqualTo(\"DataSerializer: with Id:\" + someUserClassId);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":678,"status":"N"},{"authorDate":"2018-12-18 09:38:10","commitOrder":3,"curCode":"  public void getDataTypeShouldReturnGemfireEnum() throws IOException {\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.GEMFIRE_ENUM.toByte());\n    DataSerializer.writeString(DSCODE.GEMFIRE_ENUM.name(), out);\n\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\"java.lang.Enum:GEMFIRE_ENUM\");\n  }\n","date":"2018-12-18 09:38:10","endLine":842,"groupId":"102336","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getDataTypeShouldReturnGemfireEnum","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fc/127a1abac668820b001962dedd2d669bb58871.src","preCode":"  public void getDataTypeShouldReturnGemfireEnum() throws IOException {\n    PowerMockito.mockStatic(DataSerializer.class);\n    when(DataSerializer.readString(any(DataInput.class))).thenReturn(\"GEMFIRE_ENUM\");\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    DataOutputStream out = new DataOutputStream(baos);\n    out.writeByte(DSCODE.GEMFIRE_ENUM.toByte());\n    byte[] bytes = baos.toByteArray();\n    String type = DataType.getDataType(bytes);\n\n    assertThat(type).isEqualTo(\"java.lang.Enum:GEMFIRE_ENUM\");\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/offheap/DataTypeJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":832,"status":"M"}],"commitId":"b2492bdc93b0a04e657c36454874226bf0c1da40","commitMessage":"@@@Merge pull request #2990 from apache/feature/GEODE-6143-5\n\nGEODE-6143: remove PowerMock from DataTypeJUnitTest","date":"2018-12-18 09:38:10","modifiedFileCount":"1","status":"M","submitter":"Xiaojian Zhou"}]
