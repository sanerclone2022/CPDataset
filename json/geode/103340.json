[{"authorTime":"2020-09-21 22:53:38","codes":[{"authorDate":"2020-09-21 22:53:38","commitOrder":1,"curCode":"  public void queryAllUsingGfshDoesNotFormatDate() throws Exception {\n    gfsh.connectAndVerify(server.getJmxPort(), GfshCommandRule.PortType.jmxManager);\n    TabularResultModelAssert tabularAssert =\n        gfsh.executeAndAssertThat(\"query --query='\" + SELECT_ALL + \"'\")\n            .statusIsSuccess()\n            .hasTableSection();\n    \r\n    tabularAssert.hasColumns().asList().containsExactlyInAnyOrder(\"name\", \"address\", \"startDate\",\n        \"endDate\", \"birthday\", \"Job Title\");\n    tabularAssert.hasColumn(\"startDate\").containsExactly(date.getTime() + \"\");\n    tabularAssert.hasColumn(\"endDate\").containsExactly(sqlDate.getTime() + \"\");\n    tabularAssert.hasColumn(\"birthday\")\n        .asList().asString().contains(\"\\\"year\\\":2020,\\\"month\\\":\\\"JANUARY\\\"\");\n  }\n","date":"2020-09-21 22:53:38","endLine":129,"groupId":"887","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"queryAllUsingGfshDoesNotFormatDate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2c/662f01dc474d2c7c38b9cf1db11bd97f8d81c6.src","preCode":"  public void queryAllUsingGfshDoesNotFormatDate() throws Exception {\n    gfsh.connectAndVerify(server.getJmxPort(), GfshCommandRule.PortType.jmxManager);\n    TabularResultModelAssert tabularAssert =\n        gfsh.executeAndAssertThat(\"query --query='\" + SELECT_ALL + \"'\")\n            .statusIsSuccess()\n            .hasTableSection();\n    \r\n    tabularAssert.hasColumns().asList().containsExactlyInAnyOrder(\"name\", \"address\", \"startDate\",\n        \"endDate\", \"birthday\", \"Job Title\");\n    tabularAssert.hasColumn(\"startDate\").containsExactly(date.getTime() + \"\");\n    tabularAssert.hasColumn(\"endDate\").containsExactly(sqlDate.getTime() + \"\");\n    tabularAssert.hasColumn(\"birthday\")\n        .asList().asString().contains(\"\\\"year\\\":2020,\\\"month\\\":\\\"JANUARY\\\"\");\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/management/internal/beans/DistributedSystemMBeanIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"},{"authorDate":"2020-09-21 22:53:38","commitOrder":1,"curCode":"  public void queryFieldsUsingGfshDoesNotHonorAnnotations() throws Exception {\n    gfsh.connectAndVerify(server.getJmxPort(), GfshCommandRule.PortType.jmxManager);\n    gfsh.executeAndAssertThat(\"query --query='\" + SELECT_FIELDS + \"'\")\n        .statusIsSuccess()\n        .hasTableSection().hasColumns().asList()\n        .containsExactlyInAnyOrder(\"id\", \"title\");\n  }\n","date":"2020-09-21 22:53:38","endLine":138,"groupId":"13655","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"queryFieldsUsingGfshDoesNotHonorAnnotations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2c/662f01dc474d2c7c38b9cf1db11bd97f8d81c6.src","preCode":"  public void queryFieldsUsingGfshDoesNotHonorAnnotations() throws Exception {\n    gfsh.connectAndVerify(server.getJmxPort(), GfshCommandRule.PortType.jmxManager);\n    gfsh.executeAndAssertThat(\"query --query='\" + SELECT_FIELDS + \"'\")\n        .statusIsSuccess()\n        .hasTableSection().hasColumns().asList()\n        .containsExactlyInAnyOrder(\"id\", \"title\");\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/management/internal/beans/DistributedSystemMBeanIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"}],"commitId":"98163083f67797b176fdef9091bff81b9801dab8","commitMessage":"@@@GEODE-8489: \"Select *\" query by DistributedSystemMBean should not hon? (#5507)\n\n* null value fields are serialized as well\n* move QueryResultFormatterTest to core\n\n","date":"2020-09-21 22:53:38","modifiedFileCount":"3","status":"B","submitter":"Jinmei Liao"},{"authorTime":"2020-09-21 22:53:38","codes":[{"authorDate":"2021-02-02 06:06:16","commitOrder":2,"curCode":"  public void queryAllUsingGfshDoesNotFormatDate() throws Exception {\n    gfsh.connectAndVerify(server.getJmxPort(), GfshCommandRule.PortType.jmxManager);\n    TabularResultModelAssert tabularAssert =\n        gfsh.executeAndAssertThat(\"query --query='\" + SELECT_ALL_BUT_LOCAL_DATE + \"'\")\n            .statusIsSuccess()\n            .hasTableSection();\n    tabularAssert.hasColumns().asList().containsExactlyInAnyOrder(\"name\", \"address\", \"startDate\",\n        \"endDate\", \"title\");\n    tabularAssert.hasColumn(\"startDate\").containsExactly(date.getTime() + \"\");\n    tabularAssert.hasColumn(\"endDate\").containsExactly(sqlDate.getTime() + \"\");\n  }\n","date":"2021-02-02 06:06:16","endLine":125,"groupId":"103340","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"queryAllUsingGfshDoesNotFormatDate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/92/0df234499d6b76ba0860533e34e104431cd883.src","preCode":"  public void queryAllUsingGfshDoesNotFormatDate() throws Exception {\n    gfsh.connectAndVerify(server.getJmxPort(), GfshCommandRule.PortType.jmxManager);\n    TabularResultModelAssert tabularAssert =\n        gfsh.executeAndAssertThat(\"query --query='\" + SELECT_ALL + \"'\")\n            .statusIsSuccess()\n            .hasTableSection();\n    \r\n    tabularAssert.hasColumns().asList().containsExactlyInAnyOrder(\"name\", \"address\", \"startDate\",\n        \"endDate\", \"birthday\", \"Job Title\");\n    tabularAssert.hasColumn(\"startDate\").containsExactly(date.getTime() + \"\");\n    tabularAssert.hasColumn(\"endDate\").containsExactly(sqlDate.getTime() + \"\");\n    tabularAssert.hasColumn(\"birthday\")\n        .asList().asString().contains(\"\\\"year\\\":2020,\\\"month\\\":\\\"JANUARY\\\"\");\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/management/internal/beans/DistributedSystemMBeanIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2020-09-21 22:53:38","commitOrder":2,"curCode":"  public void queryFieldsUsingGfshDoesNotHonorAnnotations() throws Exception {\n    gfsh.connectAndVerify(server.getJmxPort(), GfshCommandRule.PortType.jmxManager);\n    gfsh.executeAndAssertThat(\"query --query='\" + SELECT_FIELDS + \"'\")\n        .statusIsSuccess()\n        .hasTableSection().hasColumns().asList()\n        .containsExactlyInAnyOrder(\"id\", \"title\");\n  }\n","date":"2020-09-21 22:53:38","endLine":138,"groupId":"103340","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"queryFieldsUsingGfshDoesNotHonorAnnotations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2c/662f01dc474d2c7c38b9cf1db11bd97f8d81c6.src","preCode":"  public void queryFieldsUsingGfshDoesNotHonorAnnotations() throws Exception {\n    gfsh.connectAndVerify(server.getJmxPort(), GfshCommandRule.PortType.jmxManager);\n    gfsh.executeAndAssertThat(\"query --query='\" + SELECT_FIELDS + \"'\")\n        .statusIsSuccess()\n        .hasTableSection().hasColumns().asList()\n        .containsExactlyInAnyOrder(\"id\", \"title\");\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/management/internal/beans/DistributedSystemMBeanIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"N"}],"commitId":"c8e92884795af965f309c3ca36673c6f6ef429b5","commitMessage":"@@@GEODE-8496: Bump jackson from 2.11.3 to 2.12.1 (#5828)\n\n* Bump jackson from 2.11.3 to 2.12.1\n* Bump joda-time from 2.9.8 to 2.10.9\n* update tests to capture change in behaviour now that jackson 2.12 prevents serializing dates as POJOs","date":"2021-02-02 06:06:16","modifiedFileCount":"1","status":"M","submitter":"Owen Nichols"}]
