[{"authorTime":"2019-10-31 01:22:00","codes":[{"authorDate":"2019-10-31 01:22:00","commitOrder":1,"curCode":"  public void containsKeyThrowsTransactionExceptionIfIsBucketNotFoundException()\n      throws Exception {\n    PartitionedTXRegionStub stub = spy(new PartitionedTXRegionStub(txStateStub, partitionedRegion));\n    when(event.getRegion()).thenReturn(partitionedRegion);\n    ForceReattemptException forceReattemptException = mock(ForceReattemptException.class);\n    doReturn(true).when(stub).isBucketNotFoundException(forceReattemptException);\n    when(partitionedRegion.containsKeyRemotely((InternalDistributedMember) remoteTransactionHost, 1,\n        key)).thenThrow(forceReattemptException);\n    doReturn(expectedException).when(stub).getTransactionException(keyInfo,\n        forceReattemptException);\n\n    Throwable caughtException = catchThrowable(() -> stub.containsKey(keyInfo));\n\n    assertThat(caughtException).isInstanceOf(TransactionException.class);\n    verify(stub).getTransactionException(keyInfo, forceReattemptException);\n    verify(stub, never()).trackBucketForTx(keyInfo);\n  }\n","date":"2019-10-31 01:22:00","endLine":305,"groupId":"4754","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"containsKeyThrowsTransactionExceptionIfIsBucketNotFoundException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/80/9b53c70d37f5727123f94ba124bba36e8a49e9.src","preCode":"  public void containsKeyThrowsTransactionExceptionIfIsBucketNotFoundException()\n      throws Exception {\n    PartitionedTXRegionStub stub = spy(new PartitionedTXRegionStub(txStateStub, partitionedRegion));\n    when(event.getRegion()).thenReturn(partitionedRegion);\n    ForceReattemptException forceReattemptException = mock(ForceReattemptException.class);\n    doReturn(true).when(stub).isBucketNotFoundException(forceReattemptException);\n    when(partitionedRegion.containsKeyRemotely((InternalDistributedMember) remoteTransactionHost, 1,\n        key)).thenThrow(forceReattemptException);\n    doReturn(expectedException).when(stub).getTransactionException(keyInfo,\n        forceReattemptException);\n\n    Throwable caughtException = catchThrowable(() -> stub.containsKey(keyInfo));\n\n    assertThat(caughtException).isInstanceOf(TransactionException.class);\n    verify(stub).getTransactionException(keyInfo, forceReattemptException);\n    verify(stub, never()).trackBucketForTx(keyInfo);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tx/PartitionedTXRegionStubTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"B"},{"authorDate":"2019-10-31 01:22:00","commitOrder":1,"curCode":"  public void putEntryThrowsTransactionExceptionIfIsBucketNotFoundException()\n      throws Exception {\n    PartitionedTXRegionStub stub = spy(new PartitionedTXRegionStub(txStateStub, partitionedRegion));\n    when(event.getRegion()).thenReturn(partitionedRegion);\n    ForceReattemptException forceReattemptException = mock(ForceReattemptException.class);\n    doReturn(true).when(stub).isBucketNotFoundException(forceReattemptException);\n    doReturn(expectedException).when(stub).getTransactionException(keyInfo,\n        forceReattemptException);\n    when(partitionedRegion\n        .putRemotely((InternalDistributedMember) remoteTransactionHost, event, true, false,\n            expectedObject, true))\n                .thenThrow(forceReattemptException);\n\n    Throwable caughtException =\n        catchThrowable(() -> stub.putEntry(event, true, false, expectedObject, true, 1, false));\n\n    assertThat(caughtException).isInstanceOf(TransactionException.class);\n    verify(stub, never()).trackBucketForTx(keyInfo);\n  }\n","date":"2019-10-31 01:22:00","endLine":537,"groupId":"4757","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"putEntryThrowsTransactionExceptionIfIsBucketNotFoundException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/80/9b53c70d37f5727123f94ba124bba36e8a49e9.src","preCode":"  public void putEntryThrowsTransactionExceptionIfIsBucketNotFoundException()\n      throws Exception {\n    PartitionedTXRegionStub stub = spy(new PartitionedTXRegionStub(txStateStub, partitionedRegion));\n    when(event.getRegion()).thenReturn(partitionedRegion);\n    ForceReattemptException forceReattemptException = mock(ForceReattemptException.class);\n    doReturn(true).when(stub).isBucketNotFoundException(forceReattemptException);\n    doReturn(expectedException).when(stub).getTransactionException(keyInfo,\n        forceReattemptException);\n    when(partitionedRegion\n        .putRemotely((InternalDistributedMember) remoteTransactionHost, event, true, false,\n            expectedObject, true))\n                .thenThrow(forceReattemptException);\n\n    Throwable caughtException =\n        catchThrowable(() -> stub.putEntry(event, true, false, expectedObject, true, 1, false));\n\n    assertThat(caughtException).isInstanceOf(TransactionException.class);\n    verify(stub, never()).trackBucketForTx(keyInfo);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tx/PartitionedTXRegionStubTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":519,"status":"B"}],"commitId":"0015532d553cf436002fc090e3f83f9a3ac12b07","commitMessage":"@@@GEODE-7273: Able to detect not colocated transaction (#4170)\n\n* GEODE-7273: Able to detect not colocated transaction\n\n  * Able to detect not colocated transaction if it is caused by the first operation on a\n    replicate region and then on a partitioned region.\n  * Make sure transaction host can detect this and throw TransactionDataNotColocatedException.\n  * Transaction host will throw appropriate TransactionException based on the operations\n    exectued.\n  * Remote non host will rely on the TransactionException thrown from the tx host.\n","date":"2019-10-31 01:22:00","modifiedFileCount":"5","status":"B","submitter":"Eric Shu"},{"authorTime":"2021-02-02 04:10:19","codes":[{"authorDate":"2021-02-02 04:10:19","commitOrder":2,"curCode":"  public void containsKeyThrowsTransactionExceptionIfIsBucketNotFoundException()\n      throws Exception {\n    PartitionedTXRegionStub stub = spy(new PartitionedTXRegionStub(txStateStub, partitionedRegion));\n    when(event.getRegion()).thenReturn(partitionedRegion);\n    ForceReattemptException forceReattemptException = new ForceReattemptException(\"Test FRE\");\n    doReturn(true).when(stub).isBucketNotFoundException(forceReattemptException);\n    when(partitionedRegion.containsKeyRemotely((InternalDistributedMember) remoteTransactionHost, 1,\n        key)).thenThrow(forceReattemptException);\n    doReturn(expectedException).when(stub).getTransactionException(keyInfo,\n        forceReattemptException);\n\n    Throwable caughtException = catchThrowable(() -> stub.containsKey(keyInfo));\n\n    assertThat(caughtException).isInstanceOf(TransactionException.class);\n    verify(stub).getTransactionException(keyInfo, forceReattemptException);\n    verify(stub, never()).trackBucketForTx(keyInfo);\n  }\n","date":"2021-02-02 04:10:19","endLine":363,"groupId":"101136","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"containsKeyThrowsTransactionExceptionIfIsBucketNotFoundException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/85/fcdf85bfa9fdf363e5b8c2ad51d93e2fe0cc81.src","preCode":"  public void containsKeyThrowsTransactionExceptionIfIsBucketNotFoundException()\n      throws Exception {\n    PartitionedTXRegionStub stub = spy(new PartitionedTXRegionStub(txStateStub, partitionedRegion));\n    when(event.getRegion()).thenReturn(partitionedRegion);\n    ForceReattemptException forceReattemptException = mock(ForceReattemptException.class);\n    doReturn(true).when(stub).isBucketNotFoundException(forceReattemptException);\n    when(partitionedRegion.containsKeyRemotely((InternalDistributedMember) remoteTransactionHost, 1,\n        key)).thenThrow(forceReattemptException);\n    doReturn(expectedException).when(stub).getTransactionException(keyInfo,\n        forceReattemptException);\n\n    Throwable caughtException = catchThrowable(() -> stub.containsKey(keyInfo));\n\n    assertThat(caughtException).isInstanceOf(TransactionException.class);\n    verify(stub).getTransactionException(keyInfo, forceReattemptException);\n    verify(stub, never()).trackBucketForTx(keyInfo);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tx/PartitionedTXRegionStubTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"M"},{"authorDate":"2021-02-02 04:10:19","commitOrder":2,"curCode":"  public void putEntryThrowsTransactionExceptionIfIsBucketNotFoundException()\n      throws Exception {\n    PartitionedTXRegionStub stub = spy(new PartitionedTXRegionStub(txStateStub, partitionedRegion));\n    when(event.getRegion()).thenReturn(partitionedRegion);\n    ForceReattemptException forceReattemptException = new ForceReattemptException(\"Test FRE\");\n    doReturn(true).when(stub).isBucketNotFoundException(forceReattemptException);\n    doReturn(expectedException).when(stub).getTransactionException(keyInfo,\n        forceReattemptException);\n    when(partitionedRegion\n        .putRemotely((InternalDistributedMember) remoteTransactionHost, event, true, false,\n            expectedObject, true))\n                .thenThrow(forceReattemptException);\n\n    Throwable caughtException =\n        catchThrowable(() -> stub.putEntry(event, true, false, expectedObject, true, 1, false));\n\n    assertThat(caughtException).isInstanceOf(TransactionException.class);\n    verify(stub, never()).trackBucketForTx(keyInfo);\n  }\n","date":"2021-02-02 04:10:19","endLine":595,"groupId":"101136","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"putEntryThrowsTransactionExceptionIfIsBucketNotFoundException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/85/fcdf85bfa9fdf363e5b8c2ad51d93e2fe0cc81.src","preCode":"  public void putEntryThrowsTransactionExceptionIfIsBucketNotFoundException()\n      throws Exception {\n    PartitionedTXRegionStub stub = spy(new PartitionedTXRegionStub(txStateStub, partitionedRegion));\n    when(event.getRegion()).thenReturn(partitionedRegion);\n    ForceReattemptException forceReattemptException = mock(ForceReattemptException.class);\n    doReturn(true).when(stub).isBucketNotFoundException(forceReattemptException);\n    doReturn(expectedException).when(stub).getTransactionException(keyInfo,\n        forceReattemptException);\n    when(partitionedRegion\n        .putRemotely((InternalDistributedMember) remoteTransactionHost, event, true, false,\n            expectedObject, true))\n                .thenThrow(forceReattemptException);\n\n    Throwable caughtException =\n        catchThrowable(() -> stub.putEntry(event, true, false, expectedObject, true, 1, false));\n\n    assertThat(caughtException).isInstanceOf(TransactionException.class);\n    verify(stub, never()).trackBucketForTx(keyInfo);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tx/PartitionedTXRegionStubTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":577,"status":"M"}],"commitId":"62d6cb562e9f3a878da60dc24d564cc9c4c53e38","commitMessage":"@@@GEODE 8797: Increase code coverage on TXRegionStub classes (#5901) (#5901)\n\n- Adds DistributedTXRegionStubTest unit tests\n- Refactors DistributedTXRegionStub remote message sends to facilitate\nunit tests\n- Adds getEntryForIterator unit tests in PartitionedTXRegionStubTest","date":"2021-02-02 04:10:19","modifiedFileCount":"2","status":"M","submitter":"Louis Jacome"}]
