[{"authorTime":"2018-09-22 01:50:50","codes":[{"authorDate":"2018-09-22 01:50:50","commitOrder":1,"curCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    MBeanStatsMonitor.DefaultHashMap statsMap = new MBeanStatsMonitor.DefaultHashMap();\n    statsMap.put(StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 50);\n    statsMap.put(StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2048);\n    statsMap.put(StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 100);\n\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 60)).isEqualTo(10L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2100)).isEqualTo(52L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 150)).isEqualTo(50L);\n  }\n","date":"2018-09-22 01:50:50","endLine":100,"groupId":"29336","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"computeDeltaShouldOperateForHandledStatistics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fe/9b1166acfb82dfceee292687e679a1f87dc7b5.src","preCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    MBeanStatsMonitor.DefaultHashMap statsMap = new MBeanStatsMonitor.DefaultHashMap();\n    statsMap.put(StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 50);\n    statsMap.put(StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2048);\n    statsMap.put(StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 100);\n\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 60)).isEqualTo(10L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2100)).isEqualTo(52L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 150)).isEqualTo(50L);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/beans/stats/GatewaySenderOverflowMonitorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"},{"authorDate":"2018-09-22 01:50:50","commitOrder":1,"curCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    MBeanStatsMonitor.DefaultHashMap statsMap = new MBeanStatsMonitor.DefaultHashMap();\n    statsMap.put(StatsKey.NUM_FLUSHES, 10);\n    statsMap.put(StatsKey.DISK_QUEUE_SIZE, 148);\n    statsMap.put(StatsKey.TOTAL_FLUSH_TIME, 10000);\n    statsMap.put(StatsKey.FLUSHED_BYTES, 2048);\n    statsMap.put(StatsKey.DISK_READ_BYTES, 1024);\n    statsMap.put(StatsKey.DISK_RECOVERED_BYTES, 512);\n    statsMap.put(StatsKey.BACKUPS_COMPLETED, 5);\n    statsMap.put(StatsKey.DISK_WRITEN_BYTES, 8192);\n    statsMap.put(StatsKey.BACKUPS_IN_PROGRESS, 2);\n\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.NUM_FLUSHES, 16))\n        .isEqualTo(6L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_QUEUE_SIZE, 150))\n        .isEqualTo(2);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.TOTAL_FLUSH_TIME, 10000))\n        .isEqualTo(0L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.FLUSHED_BYTES, 3000))\n        .isEqualTo(952L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_READ_BYTES, 2048))\n        .isEqualTo(1024L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_RECOVERED_BYTES, 1024))\n        .isEqualTo(512L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_COMPLETED, 6))\n        .isEqualTo(1);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_WRITEN_BYTES, 8193))\n        .isEqualTo(1L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_IN_PROGRESS, 1))\n        .isEqualTo(-1);\n  }\n","date":"2018-09-22 01:50:50","endLine":122,"groupId":"12133","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"computeDeltaShouldOperateForHandledStatistics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e3/19d3aba9e0bd18af94a0555de1e9b0bd0ebc23.src","preCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    MBeanStatsMonitor.DefaultHashMap statsMap = new MBeanStatsMonitor.DefaultHashMap();\n    statsMap.put(StatsKey.NUM_FLUSHES, 10);\n    statsMap.put(StatsKey.DISK_QUEUE_SIZE, 148);\n    statsMap.put(StatsKey.TOTAL_FLUSH_TIME, 10000);\n    statsMap.put(StatsKey.FLUSHED_BYTES, 2048);\n    statsMap.put(StatsKey.DISK_READ_BYTES, 1024);\n    statsMap.put(StatsKey.DISK_RECOVERED_BYTES, 512);\n    statsMap.put(StatsKey.BACKUPS_COMPLETED, 5);\n    statsMap.put(StatsKey.DISK_WRITEN_BYTES, 8192);\n    statsMap.put(StatsKey.BACKUPS_IN_PROGRESS, 2);\n\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.NUM_FLUSHES, 16))\n        .isEqualTo(6L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_QUEUE_SIZE, 150))\n        .isEqualTo(2);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.TOTAL_FLUSH_TIME, 10000))\n        .isEqualTo(0L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.FLUSHED_BYTES, 3000))\n        .isEqualTo(952L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_READ_BYTES, 2048))\n        .isEqualTo(1024L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_RECOVERED_BYTES, 1024))\n        .isEqualTo(512L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_COMPLETED, 6))\n        .isEqualTo(1);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_WRITEN_BYTES, 8193))\n        .isEqualTo(1L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_IN_PROGRESS, 1))\n        .isEqualTo(-1);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/beans/stats/MemberLevelDiskMonitorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"}],"commitId":"be52507b73e46cf1b8578b23c4ea41ee40afc625","commitMessage":"@@@GEODE-5314: Cleanup and document MBeanStatsMonitor child classes\n\n- Fixed minor warnings.\n- Added JUnit Tests for all modified classes.\n- There's only one thread updating the mutable values so it's been\n  decided to keep volatiles instead of moving to atomics.\n- Documentation improved to better explain the thread-safety of the\n  classes.","date":"2018-09-22 01:50:50","modifiedFileCount":"5","status":"B","submitter":"Juan Jos? Ramos"},{"authorTime":"2018-09-26 15:35:32","codes":[{"authorDate":"2018-09-26 15:35:32","commitOrder":2,"curCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    Map<String, Number> statsMap = new HashMap<>();\n    statsMap.put(StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 50);\n    statsMap.put(StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2048);\n    statsMap.put(StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 100);\n\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 60)).isEqualTo(10L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2100)).isEqualTo(52L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 150)).isEqualTo(50L);\n  }\n","date":"2018-09-26 15:35:32","endLine":104,"groupId":"29336","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"computeDeltaShouldOperateForHandledStatistics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ae/fdc184dbc4dada740992b0954db9ffcacaa0c8.src","preCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    MBeanStatsMonitor.DefaultHashMap statsMap = new MBeanStatsMonitor.DefaultHashMap();\n    statsMap.put(StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 50);\n    statsMap.put(StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2048);\n    statsMap.put(StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 100);\n\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 60)).isEqualTo(10L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2100)).isEqualTo(52L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 150)).isEqualTo(50L);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/beans/stats/GatewaySenderOverflowMonitorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2018-09-26 15:35:32","commitOrder":2,"curCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    Map<String, Number> statsMap = new HashMap<>();\n    statsMap.put(StatsKey.NUM_FLUSHES, 10);\n    statsMap.put(StatsKey.DISK_QUEUE_SIZE, 148);\n    statsMap.put(StatsKey.TOTAL_FLUSH_TIME, 10000);\n    statsMap.put(StatsKey.FLUSHED_BYTES, 2048);\n    statsMap.put(StatsKey.DISK_READ_BYTES, 1024);\n    statsMap.put(StatsKey.DISK_RECOVERED_BYTES, 512);\n    statsMap.put(StatsKey.BACKUPS_COMPLETED, 5);\n    statsMap.put(StatsKey.DISK_WRITEN_BYTES, 8192);\n    statsMap.put(StatsKey.BACKUPS_IN_PROGRESS, 2);\n\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.NUM_FLUSHES, 16))\n        .isEqualTo(6L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_QUEUE_SIZE, 150))\n        .isEqualTo(2);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.TOTAL_FLUSH_TIME, 10000))\n        .isEqualTo(0L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.FLUSHED_BYTES, 3000))\n        .isEqualTo(952L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_READ_BYTES, 2048))\n        .isEqualTo(1024L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_RECOVERED_BYTES, 1024))\n        .isEqualTo(512L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_COMPLETED, 6))\n        .isEqualTo(1);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_WRITEN_BYTES, 8193))\n        .isEqualTo(1L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_IN_PROGRESS, 1))\n        .isEqualTo(-1);\n  }\n","date":"2018-09-26 15:35:32","endLine":125,"groupId":"12133","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"computeDeltaShouldOperateForHandledStatistics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/41/d165c9123e42da2714d8ae541020dd09b52e91.src","preCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    MBeanStatsMonitor.DefaultHashMap statsMap = new MBeanStatsMonitor.DefaultHashMap();\n    statsMap.put(StatsKey.NUM_FLUSHES, 10);\n    statsMap.put(StatsKey.DISK_QUEUE_SIZE, 148);\n    statsMap.put(StatsKey.TOTAL_FLUSH_TIME, 10000);\n    statsMap.put(StatsKey.FLUSHED_BYTES, 2048);\n    statsMap.put(StatsKey.DISK_READ_BYTES, 1024);\n    statsMap.put(StatsKey.DISK_RECOVERED_BYTES, 512);\n    statsMap.put(StatsKey.BACKUPS_COMPLETED, 5);\n    statsMap.put(StatsKey.DISK_WRITEN_BYTES, 8192);\n    statsMap.put(StatsKey.BACKUPS_IN_PROGRESS, 2);\n\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.NUM_FLUSHES, 16))\n        .isEqualTo(6L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_QUEUE_SIZE, 150))\n        .isEqualTo(2);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.TOTAL_FLUSH_TIME, 10000))\n        .isEqualTo(0L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.FLUSHED_BYTES, 3000))\n        .isEqualTo(952L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_READ_BYTES, 2048))\n        .isEqualTo(1024L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_RECOVERED_BYTES, 1024))\n        .isEqualTo(512L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_COMPLETED, 6))\n        .isEqualTo(1);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_WRITEN_BYTES, 8193))\n        .isEqualTo(1L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_IN_PROGRESS, 1))\n        .isEqualTo(-1);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/beans/stats/MemberLevelDiskMonitorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"8e3c5bb35b8de490fe69c7f18fba3c32cac69227","commitMessage":"@@@Merge pull request #2506 from jujoramos/feature/GEODE-5523\n\nGEODE-5523: Remove DefaultHashMap\n\nThe internal class `DefaultHashMap` was designed as an internal\nworkaround to return a default value whenever the value returned by\n`Map.get(K)` was `null`. Starting with Java 8 the `Map` interface\nadded the method `getOrDefault`.  which does something similar in a more\nefficient way but it returns the default only if the key doesn't exist.\nAfter inspecting the code.  we don't insert `null` values into the\n`statsMap`.  so it is safe to delete the old `DefaultHashMap` class and\nreplace its usage by `Map.getOrDefault`.","date":"2018-09-26 15:35:32","modifiedFileCount":"11","status":"M","submitter":"Juan Jos? Ramos"},{"authorTime":"2018-09-26 15:35:32","codes":[{"authorDate":"2020-10-19 14:02:55","commitOrder":3,"curCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    Map<String, Number> statsMap = new HashMap<>();\n    statsMap.put(StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 50);\n    statsMap.put(StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2048);\n    statsMap.put(StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 100);\n    statsMap.put(StatsKey.GATEWAYSENDER_BYTES_IN_MEMORY, 1024);\n\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 60)).isEqualTo(10L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2100)).isEqualTo(52L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 150)).isEqualTo(50L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_BYTES_IN_MEMORY, 2048)).isEqualTo(1024L);\n\n  }\n","date":"2020-10-19 14:02:55","endLine":109,"groupId":"10412","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"computeDeltaShouldOperateForHandledStatistics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/dc/cabea634f518f87dcf955e1fb8b49fc9d6ceba.src","preCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    Map<String, Number> statsMap = new HashMap<>();\n    statsMap.put(StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 50);\n    statsMap.put(StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2048);\n    statsMap.put(StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 100);\n\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_LRU_EVICTIONS, 60)).isEqualTo(10L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK, 2100)).isEqualTo(52L);\n    assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,\n        StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK, 150)).isEqualTo(50L);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/beans/stats/GatewaySenderOverflowMonitorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2018-09-26 15:35:32","commitOrder":3,"curCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    Map<String, Number> statsMap = new HashMap<>();\n    statsMap.put(StatsKey.NUM_FLUSHES, 10);\n    statsMap.put(StatsKey.DISK_QUEUE_SIZE, 148);\n    statsMap.put(StatsKey.TOTAL_FLUSH_TIME, 10000);\n    statsMap.put(StatsKey.FLUSHED_BYTES, 2048);\n    statsMap.put(StatsKey.DISK_READ_BYTES, 1024);\n    statsMap.put(StatsKey.DISK_RECOVERED_BYTES, 512);\n    statsMap.put(StatsKey.BACKUPS_COMPLETED, 5);\n    statsMap.put(StatsKey.DISK_WRITEN_BYTES, 8192);\n    statsMap.put(StatsKey.BACKUPS_IN_PROGRESS, 2);\n\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.NUM_FLUSHES, 16))\n        .isEqualTo(6L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_QUEUE_SIZE, 150))\n        .isEqualTo(2);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.TOTAL_FLUSH_TIME, 10000))\n        .isEqualTo(0L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.FLUSHED_BYTES, 3000))\n        .isEqualTo(952L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_READ_BYTES, 2048))\n        .isEqualTo(1024L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_RECOVERED_BYTES, 1024))\n        .isEqualTo(512L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_COMPLETED, 6))\n        .isEqualTo(1);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_WRITEN_BYTES, 8193))\n        .isEqualTo(1L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_IN_PROGRESS, 1))\n        .isEqualTo(-1);\n  }\n","date":"2018-09-26 15:35:32","endLine":125,"groupId":"10412","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"computeDeltaShouldOperateForHandledStatistics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/41/d165c9123e42da2714d8ae541020dd09b52e91.src","preCode":"  public void computeDeltaShouldOperateForHandledStatistics() {\n    Map<String, Number> statsMap = new HashMap<>();\n    statsMap.put(StatsKey.NUM_FLUSHES, 10);\n    statsMap.put(StatsKey.DISK_QUEUE_SIZE, 148);\n    statsMap.put(StatsKey.TOTAL_FLUSH_TIME, 10000);\n    statsMap.put(StatsKey.FLUSHED_BYTES, 2048);\n    statsMap.put(StatsKey.DISK_READ_BYTES, 1024);\n    statsMap.put(StatsKey.DISK_RECOVERED_BYTES, 512);\n    statsMap.put(StatsKey.BACKUPS_COMPLETED, 5);\n    statsMap.put(StatsKey.DISK_WRITEN_BYTES, 8192);\n    statsMap.put(StatsKey.BACKUPS_IN_PROGRESS, 2);\n\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.NUM_FLUSHES, 16))\n        .isEqualTo(6L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_QUEUE_SIZE, 150))\n        .isEqualTo(2);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.TOTAL_FLUSH_TIME, 10000))\n        .isEqualTo(0L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.FLUSHED_BYTES, 3000))\n        .isEqualTo(952L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_READ_BYTES, 2048))\n        .isEqualTo(1024L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_RECOVERED_BYTES, 1024))\n        .isEqualTo(512L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_COMPLETED, 6))\n        .isEqualTo(1);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.DISK_WRITEN_BYTES, 8193))\n        .isEqualTo(1L);\n    assertThat(memberLevelDiskMonitor.computeDelta(statsMap, StatsKey.BACKUPS_IN_PROGRESS, 1))\n        .isEqualTo(-1);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/management/internal/beans/stats/MemberLevelDiskMonitorTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"N"}],"commitId":"c362f77591fa83e5f87a056fe221d1241de87348","commitMessage":"@@@GEODE-8497: added getTotalQueueSizeBytesInUse (#5514)\n\n* GEODE-8497: added getTotalQueueSizeBytesInUse\n\n* GEODE-8497: updated UT\n\n* GEODE-8497: fix fail statistics after restart","date":"2020-10-19 14:02:55","modifiedFileCount":"7","status":"M","submitter":"Mario Ivanac"}]
