[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.get70.cmdExecute(this.message, this.serverConnection, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.responseMessage).send(this.serverConnection);\n  }\n","date":"2016-09-15 02:08:18","endLine":154,"groupId":"33305","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"oldSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4b/63a072370746e950ef3697358c7be7a125a213.src","preCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.get70.cmdExecute(this.message, this.serverConnection, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.responseMessage).send(this.serverConnection);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/Get70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void oldSecurityShouldFailIfNotAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n    doThrow(new NotAuthorizedException(\"\")).when(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n\n    this.get70.cmdExecute(this.message, this.serverConnection, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.errorResponseMessage).send(eq(this.serverConnection));\n  }\n","date":"2016-09-15 02:08:18","endLine":166,"groupId":"22595","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"oldSecurityShouldFailIfNotAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4b/63a072370746e950ef3697358c7be7a125a213.src","preCode":"  public void oldSecurityShouldFailIfNotAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n    doThrow(new NotAuthorizedException(\"\")).when(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n\n    this.get70.cmdExecute(this.message, this.serverConnection, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.errorResponseMessage).send(eq(this.serverConnection));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/Get70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2017-06-01 07:13:20","codes":[{"authorDate":"2017-06-01 07:13:20","commitOrder":2,"curCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.get70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.responseMessage).send(this.serverConnection);\n  }\n","date":"2017-06-10 01:17:12","endLine":154,"groupId":"33036","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"oldSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/73/4eb51b907a7a19a0b5b5dfb87c5f05279744cf.src","preCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.get70.cmdExecute(this.message, this.serverConnection, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.responseMessage).send(this.serverConnection);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/Get70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2017-06-01 07:13:20","commitOrder":2,"curCode":"  public void oldSecurityShouldFailIfNotAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n    doThrow(new NotAuthorizedException(\"\")).when(this.authzRequest).getAuthorize(eq(REGION_NAME),\n        eq(KEY), eq(CALLBACK_ARG));\n\n    this.get70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.errorResponseMessage).send(eq(this.serverConnection));\n  }\n","date":"2017-06-10 01:17:12","endLine":167,"groupId":"33039","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"oldSecurityShouldFailIfNotAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/73/4eb51b907a7a19a0b5b5dfb87c5f05279744cf.src","preCode":"  public void oldSecurityShouldFailIfNotAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n    doThrow(new NotAuthorizedException(\"\")).when(this.authzRequest).getAuthorize(eq(REGION_NAME),\n        eq(KEY), eq(CALLBACK_ARG));\n\n    this.get70.cmdExecute(this.message, this.serverConnection, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.errorResponseMessage).send(eq(this.serverConnection));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/Get70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"0211029baf497bbcca2670dbabe610d84bc626a5","commitMessage":"@@@GEODE-2632: use immutable SecurityService impls to improve performance\n\n* misc code clean up in classes touched by changes\n* new unit tests for SecurityService\n","date":"2017-06-10 01:17:12","modifiedFileCount":"198","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-10-25 06:32:46","codes":[{"authorDate":"2019-10-25 06:32:46","commitOrder":3,"curCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    givenOldSecurity();\n\n    get70.cmdExecute(message, serverConnection, securityService, 0);\n\n    verify(authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(responseMessage).send(serverConnection);\n  }\n","date":"2019-10-25 06:32:46","endLine":163,"groupId":"38187","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"oldSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/23/4fc4a2bc43580b68f054e015821dd9725949d4.src","preCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.get70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.responseMessage).send(this.serverConnection);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/Get70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2019-10-25 06:32:46","commitOrder":3,"curCode":"  public void oldSecurityShouldFailIfNotAuthorized() throws Exception {\n    givenOldSecurity();\n    givenOldSecurityNotAuthorized();\n\n    get70.cmdExecute(message, serverConnection, securityService, 0);\n\n    verify(authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(errorResponseMessage).send(eq(serverConnection));\n  }\n","date":"2019-10-25 06:32:46","endLine":174,"groupId":"38187","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"oldSecurityShouldFailIfNotAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/23/4fc4a2bc43580b68f054e015821dd9725949d4.src","preCode":"  public void oldSecurityShouldFailIfNotAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n    doThrow(new NotAuthorizedException(\"\")).when(this.authzRequest).getAuthorize(eq(REGION_NAME),\n        eq(KEY), eq(CALLBACK_ARG));\n\n    this.get70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.errorResponseMessage).send(eq(this.serverConnection));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/Get70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"}],"commitId":"55980e37f0a57256fdd0af6f10e1d70ce1f90676","commitMessage":"@@@GEODE-7326: Add cache gets timers (#4201)\n\n* GEODE-7326: Add cache gets timers\n\n- Add timers to record get operations from a Java client\n- Tag each timer with region name and result (hit/miss)\n- Close existing entries gauge when closing RegionPerfStats\n- Improve micrometer assertj assertions\n- Record time measurement in Get70 instead of LocalRegion.get()\n- Update timer descriptions to clarify the type of client\n- Add unit tests for instrumented code (Get70)\n- Refactor acceptance test for get that errors\n- Improve comments in TimerAssert\n- Make public fields immutable on Get70.Entry\n\nAuthored-by: Aaron Lindsey <alindsey@pivotal.io>\nCo-authored-by: Kirk Lund <klund@apache.org>\n","date":"2019-10-25 06:32:46","modifiedFileCount":"12","status":"M","submitter":"Aaron Lindsey"},{"authorTime":"2019-10-25 07:02:46","codes":[{"authorDate":"2019-10-25 07:02:46","commitOrder":4,"curCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.get70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.responseMessage).send(this.serverConnection);\n  }\n","date":"2019-10-25 07:24:27","endLine":159,"groupId":"33036","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"oldSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b6/7b5023734b74cfc8c633eb27832f6bffded8cc.src","preCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    givenOldSecurity();\n\n    get70.cmdExecute(message, serverConnection, securityService, 0);\n\n    verify(authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(responseMessage).send(serverConnection);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/Get70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"},{"authorDate":"2019-10-25 07:02:46","commitOrder":4,"curCode":"  public void oldSecurityShouldFailIfNotAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n    doThrow(new NotAuthorizedException(\"\")).when(this.authzRequest).getAuthorize(eq(REGION_NAME),\n        eq(KEY), eq(CALLBACK_ARG));\n\n    this.get70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.errorResponseMessage).send(eq(this.serverConnection));\n  }\n","date":"2019-10-25 07:24:27","endLine":172,"groupId":"33039","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"oldSecurityShouldFailIfNotAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b6/7b5023734b74cfc8c633eb27832f6bffded8cc.src","preCode":"  public void oldSecurityShouldFailIfNotAuthorized() throws Exception {\n    givenOldSecurity();\n    givenOldSecurityNotAuthorized();\n\n    get70.cmdExecute(message, serverConnection, securityService, 0);\n\n    verify(authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(errorResponseMessage).send(eq(serverConnection));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/Get70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"bcd2d8ae25967d13b28a34adee6e3aa3d331d925","commitMessage":"@@@Revert \"GEODE-7326: Add cache gets timers (#4201)\"\n\nThis reverts commit 55980e37f0a57256fdd0af6f10e1d70ce1f90676.\n","date":"2019-10-25 07:24:27","modifiedFileCount":"12","status":"M","submitter":"mhansonp"},{"authorTime":"2019-10-29 08:12:41","codes":[{"authorDate":"2019-10-29 08:12:41","commitOrder":5,"curCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    givenOldSecurity();\n\n    get70.cmdExecute(message, serverConnection, securityService, 0);\n\n    verify(authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(responseMessage).send(serverConnection);\n  }\n","date":"2019-10-29 08:12:41","endLine":162,"groupId":"10962","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"oldSecurityShouldSucceedIfAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d8/dc48a7a61e04210291499a200c385cf068c8cf.src","preCode":"  public void oldSecurityShouldSucceedIfAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n\n    this.get70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.responseMessage).send(this.serverConnection);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/Get70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2019-10-29 08:12:41","commitOrder":5,"curCode":"  public void oldSecurityShouldFailIfNotAuthorized() throws Exception {\n    givenOldSecurity();\n    givenOldSecurityNotAuthorized();\n\n    get70.cmdExecute(message, serverConnection, securityService, 0);\n\n    verify(authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(errorResponseMessage).send(eq(serverConnection));\n  }\n","date":"2019-10-29 08:12:41","endLine":173,"groupId":"10962","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"oldSecurityShouldFailIfNotAuthorized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d8/dc48a7a61e04210291499a200c385cf068c8cf.src","preCode":"  public void oldSecurityShouldFailIfNotAuthorized() throws Exception {\n    when(this.securityService.isClientSecurityRequired()).thenReturn(true);\n    when(this.securityService.isIntegratedSecurity()).thenReturn(false);\n    doThrow(new NotAuthorizedException(\"\")).when(this.authzRequest).getAuthorize(eq(REGION_NAME),\n        eq(KEY), eq(CALLBACK_ARG));\n\n    this.get70.cmdExecute(this.message, this.serverConnection, this.securityService, 0);\n\n    verify(this.authzRequest).getAuthorize(eq(REGION_NAME), eq(KEY), eq(CALLBACK_ARG));\n    verify(this.errorResponseMessage).send(eq(this.serverConnection));\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/tier/sockets/command/Get70Test.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"850f6d9314be70e27862faf01d0192329340b1a0","commitMessage":"@@@GEODE-7326: Add cache gets timers (#4223)\n\n- Add timers to record get operations from a Java client\n- Tag each timer with region name and result (hit/miss)\n- Close existing entries gauge when closing RegionPerfStats\n- Improve micrometer assertj assertions\n- Make public fields immutable on Get70.Entry\n\nCo-authored-by: Aaron Lindsey <alindsey@pivotal.io>\nCo-authored-by: Kirk Lund <klund@apache.org>\nCo-authored-by: Dale Emery <demery@pivotal.io>","date":"2019-10-29 08:12:41","modifiedFileCount":"11","status":"M","submitter":"Aaron Lindsey"}]
