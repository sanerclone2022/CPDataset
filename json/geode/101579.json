[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testSimpleSSLWithMultiKey_KeyStore() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\"));\n    props.setProperty(SSL_TRUSTSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKeyTrust.jks\"));\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    String restEndpoint = startInfraWithSSL(props, false);\n    validateConnection(restEndpoint, \"SSL\", props);\n  }\n","date":"2018-07-18 03:54:18","endLine":550,"groupId":"43370","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleSSLWithMultiKey_KeyStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a8/9aa559d3d4df87ab243bc883f4691ffcbb6290.src","preCode":"  public void testSimpleSSLWithMultiKey_KeyStore() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\"));\n    props.setProperty(SSL_TRUSTSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKeyTrust.jks\"));\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    String restEndpoint = startInfraWithSSL(props, false);\n    validateConnection(restEndpoint, \"SSL\", props);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":535,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testSimpleSSLWithMultiKey_KeyStore_WithInvalidClientKey() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\"));\n    props.setProperty(SSL_TRUSTSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKeyTrust.jks\"));\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(INVALID_CLIENT_ALIAS, \"someAlias\");\n    String restEndpoint = startInfraWithSSL(props, false);\n    validateConnection(restEndpoint, \"SSL\", props);\n  }\n","date":"2018-07-18 03:54:18","endLine":569,"groupId":"43370","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleSSLWithMultiKey_KeyStore_WithInvalidClientKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a8/9aa559d3d4df87ab243bc883f4691ffcbb6290.src","preCode":"  public void testSimpleSSLWithMultiKey_KeyStore_WithInvalidClientKey() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\"));\n    props.setProperty(SSL_TRUSTSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKeyTrust.jks\"));\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(INVALID_CLIENT_ALIAS, \"someAlias\");\n    String restEndpoint = startInfraWithSSL(props, false);\n    validateConnection(restEndpoint, \"SSL\", props);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":553,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-10-25 02:29:23","codes":[{"authorDate":"2018-10-25 02:29:23","commitOrder":2,"curCode":"  public void testSimpleSSLWithMultiKey_KeyStore() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\"));\n    props.setProperty(SSL_TRUSTSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKeyTrust.jks\"));\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    startClusterWithSSL(props);\n    validateConnection(props);\n  }\n","date":"2018-10-25 02:29:23","endLine":263,"groupId":"43370","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleSSLWithMultiKey_KeyStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/a9b8a1cd6af054320692054e879f85feb7f74e.src","preCode":"  public void testSimpleSSLWithMultiKey_KeyStore() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\"));\n    props.setProperty(SSL_TRUSTSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKeyTrust.jks\"));\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    String restEndpoint = startInfraWithSSL(props, false);\n    validateConnection(restEndpoint, \"SSL\", props);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"M"},{"authorDate":"2018-10-25 02:29:23","commitOrder":2,"curCode":"  public void testSimpleSSLWithMultiKey_KeyStore_WithInvalidClientKey() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\"));\n    props.setProperty(SSL_TRUSTSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKeyTrust.jks\"));\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(INVALID_CLIENT_ALIAS, \"someAlias\");\n    startClusterWithSSL(props);\n  }\n","date":"2018-10-25 02:29:23","endLine":281,"groupId":"43370","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleSSLWithMultiKey_KeyStore_WithInvalidClientKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/a9b8a1cd6af054320692054e879f85feb7f74e.src","preCode":"  public void testSimpleSSLWithMultiKey_KeyStore_WithInvalidClientKey() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\"));\n    props.setProperty(SSL_TRUSTSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKeyTrust.jks\"));\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(INVALID_CLIENT_ALIAS, \"someAlias\");\n    String restEndpoint = startInfraWithSSL(props, false);\n    validateConnection(restEndpoint, \"SSL\", props);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"}],"commitId":"a1bbe9074b05a9945e2f8cc4e7c915bd13bc8c02","commitMessage":"@@@GEODE-5819: use cipher suites supported across jdk versions (#2677)\n\n\n","date":"2018-10-25 02:29:23","modifiedFileCount":"1","status":"M","submitter":"jinmeiliao"},{"authorTime":"2019-05-03 02:00:10","codes":[{"authorDate":"2019-05-03 02:00:10","commitOrder":3,"curCode":"  public void testSimpleSSLWithMultiKey_KeyStore() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        createTempFileFromResource(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\")\n            .getAbsolutePath());\n    props.setProperty(SSL_TRUSTSTORE,\n        createTempFileFromResource(getClass(),\n            \"/org/apache/geode/internal/net/multiKeyTrust.jks\").getAbsolutePath());\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    startClusterWithSSL(props);\n    validateConnection(props);\n  }\n","date":"2019-05-08 00:21:55","endLine":266,"groupId":"101579","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleSSLWithMultiKey_KeyStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/27/15ce033a1d957d10e01d771f2c2009889926c3.src","preCode":"  public void testSimpleSSLWithMultiKey_KeyStore() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\"));\n    props.setProperty(SSL_TRUSTSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKeyTrust.jks\"));\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    startClusterWithSSL(props);\n    validateConnection(props);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"},{"authorDate":"2019-05-03 02:00:10","commitOrder":3,"curCode":"  public void testSimpleSSLWithMultiKey_KeyStore_WithInvalidClientKey() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        createTempFileFromResource(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\")\n            .getAbsolutePath());\n    props.setProperty(SSL_TRUSTSTORE,\n        createTempFileFromResource(getClass(),\n            \"/org/apache/geode/internal/net/multiKeyTrust.jks\").getAbsolutePath());\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(INVALID_CLIENT_ALIAS, \"someAlias\");\n    startClusterWithSSL(props);\n  }\n","date":"2019-05-08 00:21:55","endLine":286,"groupId":"101579","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleSSLWithMultiKey_KeyStore_WithInvalidClientKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/27/15ce033a1d957d10e01d771f2c2009889926c3.src","preCode":"  public void testSimpleSSLWithMultiKey_KeyStore_WithInvalidClientKey() throws Exception {\n\n    Properties props = new Properties();\n    props.setProperty(SSL_KEYSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKey.jks\"));\n    props.setProperty(SSL_TRUSTSTORE,\n        TestUtil.getResourcePath(getClass(), \"/org/apache/geode/internal/net/multiKeyTrust.jks\"));\n    props.setProperty(SSL_KEYSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_TRUSTSTORE_PASSWORD, \"password\");\n    props.setProperty(SSL_KEYSTORE_TYPE, \"JKS\");\n    props.setProperty(SSL_ENABLED_COMPONENTS, SecurableCommunicationChannel.WEB.getConstant());\n    props.setProperty(SSL_WEB_SERVICE_REQUIRE_AUTHENTICATION, \"true\");\n    props.setProperty(SSL_WEB_ALIAS, \"httpservicekey\");\n    props.setProperty(INVALID_CLIENT_ALIAS, \"someAlias\");\n    startClusterWithSSL(props);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/rest/internal/web/controllers/RestAPIsWithSSLDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"M"}],"commitId":"2a8259fd873ef0d5000cfe4bb2e3f513b61510fc","commitMessage":"@@@GEODE-6731: Make TestUtil delegate to ResourceUtils\n\n* Make TestUtil delegate to ResourceUtils.\n* Add deprecation annotations and javadocs.\n* Use static import for all uses of ResourceUtils.\n","date":"2019-05-08 00:21:55","modifiedFileCount":"75","status":"M","submitter":"Kirk Lund"}]
