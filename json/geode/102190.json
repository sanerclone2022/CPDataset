[{"authorTime":"2019-07-19 00:20:04","codes":[{"authorDate":"2019-07-19 00:20:04","commitOrder":1,"curCode":"  public void invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event, false);\n\n    verify(partitionedRegion, never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event,\n        false);\n  }\n","date":"2019-07-19 00:20:04","endLine":395,"groupId":"47065","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/47/08071dc2756d0731bcc8629c7cbd950e7be7d4.src","preCode":"  public void invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event, false);\n\n    verify(partitionedRegion, never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event,\n        false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"B"},{"authorDate":"2019-07-19 00:20:04","commitOrder":1,"curCode":"  public void invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event, false, false);\n\n    verify(partitionedRegion, never()).invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event,\n        false, false);\n  }\n","date":"2019-07-19 00:20:04","endLine":536,"groupId":"47065","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/47/08071dc2756d0731bcc8629c7cbd950e7be7d4.src","preCode":"  public void invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event, false, false);\n\n    verify(partitionedRegion, never()).invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event,\n        false, false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":525,"status":"B"}],"commitId":"846b9c277e37ae03fe3445c2fdd1a3a43c67e102","commitMessage":"@@@GEODE-6762: Prevent unnecessary PartitionedRegion callback events\n\n\n","date":"2019-07-19 00:20:04","modifiedFileCount":"2","status":"B","submitter":"mivanac"},{"authorTime":"2019-08-09 00:33:26","codes":[{"authorDate":"2019-08-09 00:33:26","commitOrder":2,"curCode":"  public void invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event, false);\n\n    verify(partitionedRegion, never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event,\n        false);\n  }\n","date":"2019-08-09 00:33:26","endLine":397,"groupId":"47065","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/e392d94a06da690cb7c91620ad7e3660b9a4d6.src","preCode":"  public void invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event, false);\n\n    verify(partitionedRegion, never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event,\n        false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"M"},{"authorDate":"2019-08-09 00:33:26","commitOrder":2,"curCode":"  public void invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event, false, false);\n\n    verify(partitionedRegion, never()).invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event,\n        false, false);\n  }\n","date":"2019-08-09 00:33:26","endLine":538,"groupId":"47065","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/e392d94a06da690cb7c91620ad7e3660b9a4d6.src","preCode":"  public void invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event, false, false);\n\n    verify(partitionedRegion, never()).invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event,\n        false, false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":527,"status":"M"}],"commitId":"b49279477a4c79b90220fb34239d12c2d9e50782","commitMessage":"@@@GEODE-7010: Replace static globals in CachePerfStats with StatisticsClock (#3859)\n\n* Replace CachePerfStats.getStatTime with Cache owned StatisticsClock\n* Inject StatisticsClock dependency via constructor\n","date":"2019-08-09 00:33:26","modifiedFileCount":"134","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-10-18 21:34:35","codes":[{"authorDate":"2019-08-09 00:33:26","commitOrder":3,"curCode":"  public void invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event, false);\n\n    verify(partitionedRegion, never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event,\n        false);\n  }\n","date":"2019-08-09 00:33:26","endLine":397,"groupId":"47065","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/e392d94a06da690cb7c91620ad7e3660b9a4d6.src","preCode":"  public void invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event, false);\n\n    verify(partitionedRegion, never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event,\n        false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"N"},{"authorDate":"2019-10-18 21:34:35","commitOrder":3,"curCode":"  public void invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doReturn(false).when(bucketRegion).isInitialized();\n    final String key = \"Object0\";\n    EntryEventImpl eventNew = new EntryEventImpl();\n    eventNew.setGenerateCallbacks(false);\n    eventNew.setKeyInfo(new KeyInfo(key, null, 0));\n\n    bucketRegion.invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, eventNew, false, false);\n\n    verify(partitionedRegion, never()).invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, eventNew,\n        false, false);\n  }\n","date":"2019-10-18 21:34:35","endLine":569,"groupId":"25126","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f6/6192036ddb177fdbfa9f8828e3e03e94f7d92d.src","preCode":"  public void invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event, false, false);\n\n    verify(partitionedRegion, never()).invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event,\n        false, false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":555,"status":"M"}],"commitId":"b2e26faeedfdc8792bbc1deb21d34582ba44e3b0","commitMessage":"@@@Merge pull request #4178 from Nordix/feature/GEODE-7319\n\nGEODE-7319:Replace mock EntryEventImpl.class in problematic TCs","date":"2019-10-18 21:34:35","modifiedFileCount":"1","status":"M","submitter":"Mario Ivanac"},{"authorTime":"2019-10-19 03:31:22","codes":[{"authorDate":"2019-08-09 00:33:26","commitOrder":4,"curCode":"  public void invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event, false);\n\n    verify(partitionedRegion, never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event,\n        false);\n  }\n","date":"2019-08-09 00:33:26","endLine":397,"groupId":"102190","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/e392d94a06da690cb7c91620ad7e3660b9a4d6.src","preCode":"  public void invokeTXCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event, false);\n\n    verify(partitionedRegion, never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, event,\n        false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"N"},{"authorDate":"2019-10-19 03:31:22","commitOrder":4,"curCode":"  public void invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doReturn(false).when(bucketRegion).isInitialized();\n    doReturn(false).when(event).isGenerateCallbacks();\n\n    bucketRegion.invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event, false, false);\n\n    verify(partitionedRegion, never()).invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, event,\n        false, false);\n  }\n","date":"2019-10-19 03:31:22","endLine":541,"groupId":"102190","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/20/425571909986435052a53f194a38f2b8eed73b.src","preCode":"  public void invokePutCallbacksDoesNotInvokeCallbacksIfEventIsNotGenerateCallbacks() {\n    BucketRegion bucketRegion =\n        spy(new BucketRegion(regionName, regionAttributes, partitionedRegion,\n            cache, internalRegionArgs, disabledClock()));\n    doReturn(false).when(bucketRegion).isInitialized();\n    final String key = \"Object0\";\n    EntryEventImpl eventNew = new EntryEventImpl();\n    eventNew.setGenerateCallbacks(false);\n    eventNew.setKeyInfo(new KeyInfo(key, null, 0));\n\n    bucketRegion.invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, eventNew, false, false);\n\n    verify(partitionedRegion, never()).invokePutCallbacks(EnumListenerEvent.AFTER_CREATE, eventNew,\n        false, false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":530,"status":"M"}],"commitId":"27f9b70b810c08ee207b4386cfec2f7a96564916","commitMessage":"@@@Merge pull request #4180 from apache/revert-4178-feature/GEODE-7319\n\nRevert \"GEODE-7319:Replace mock EntryEventImpl.class in problematic TCs\"","date":"2019-10-19 03:31:22","modifiedFileCount":"1","status":"M","submitter":"Mario Ivanac"}]
