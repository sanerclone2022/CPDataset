[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testQueries() throws Exception {\n    assertResponse(restClient.doGet(\"/queries\", \"user\", \"wrongPswd\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doGet(\"/queries\", \"user\", \"user\"))\n        .hasStatusCode(403);\n    assertResponse(restClient.doGet(\"/queries\", \"dataRead\", \"dataRead\"))\n        .hasStatusCode(200)\n        .hasContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);\n  }\n","date":"2018-07-18 03:54:18","endLine":85,"groupId":"36676","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/4a42f43b58449361fb1de65c5296626b86b167.src","preCode":"  public void testQueries() throws Exception {\n    assertResponse(restClient.doGet(\"/queries\", \"user\", \"wrongPswd\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doGet(\"/queries\", \"user\", \"user\"))\n        .hasStatusCode(403);\n    assertResponse(restClient.doGet(\"/queries\", \"dataRead\", \"dataRead\"))\n        .hasStatusCode(200)\n        .hasContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testAdhocQuery() throws Exception {\n    assertResponse(restClient.doGet(\"/queries/adhoc?q=\", \"user\", \"wrongPswd\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doGet(\"/queries/adhoc?q=\", \"user\", \"user\"))\n        .hasStatusCode(403);\n    \r\n    \r\n    assertResponse(restClient.doGet(\"/queries/adhoc?q=\", \"dataRead\", \"dataRead\"))\n        .hasStatusCode(500);\n  }\n","date":"2018-07-18 03:54:18","endLine":97,"groupId":"36675","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAdhocQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f8/4a42f43b58449361fb1de65c5296626b86b167.src","preCode":"  public void testAdhocQuery() throws Exception {\n    assertResponse(restClient.doGet(\"/queries/adhoc?q=\", \"user\", \"wrongPswd\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doGet(\"/queries/adhoc?q=\", \"user\", \"user\"))\n        .hasStatusCode(403);\n    \r\n    \r\n    assertResponse(restClient.doGet(\"/queries/adhoc?q=\", \"dataRead\", \"dataRead\"))\n        .hasStatusCode(500);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-09-28 01:49:49","codes":[{"authorDate":"2018-09-28 01:49:49","commitOrder":2,"curCode":"  public void testQueries() throws Exception {\n    restClient.doGetAndAssert(\"/queries\", \"user\", \"wrongPswd\")\n        .hasStatusCode(401);\n    restClient.doGetAndAssert(\"/queries\", \"user\", \"user\")\n        .hasStatusCode(403);\n    restClient.doGetAndAssert(\"/queries\", \"dataRead\", \"dataRead\")\n        .hasStatusCode(200)\n        .hasContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);\n  }\n","date":"2018-09-28 01:49:49","endLine":85,"groupId":"43983","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5b/dabbe6e0914a079c6d59521487d6a7095427d8.src","preCode":"  public void testQueries() throws Exception {\n    assertResponse(restClient.doGet(\"/queries\", \"user\", \"wrongPswd\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doGet(\"/queries\", \"user\", \"user\"))\n        .hasStatusCode(403);\n    assertResponse(restClient.doGet(\"/queries\", \"dataRead\", \"dataRead\"))\n        .hasStatusCode(200)\n        .hasContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2018-09-28 01:49:49","commitOrder":2,"curCode":"  public void testAdhocQuery() throws Exception {\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"user\", \"wrongPswd\")\n        .hasStatusCode(401);\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"user\", \"user\")\n        .hasStatusCode(403);\n    \r\n    \r\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"dataRead\", \"dataRead\")\n        .hasStatusCode(500);\n  }\n","date":"2018-09-28 01:49:49","endLine":97,"groupId":"43985","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAdhocQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5b/dabbe6e0914a079c6d59521487d6a7095427d8.src","preCode":"  public void testAdhocQuery() throws Exception {\n    assertResponse(restClient.doGet(\"/queries/adhoc?q=\", \"user\", \"wrongPswd\"))\n        .hasStatusCode(401);\n    assertResponse(restClient.doGet(\"/queries/adhoc?q=\", \"user\", \"user\"))\n        .hasStatusCode(403);\n    \r\n    \r\n    assertResponse(restClient.doGet(\"/queries/adhoc?q=\", \"dataRead\", \"dataRead\"))\n        .hasStatusCode(500);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"bde335925dbaee230300875a9b6303ce0086c907","commitMessage":"@@@Merge pull request #2477 from jinmeiliao/10-8\n\nGEODE-3: Do not use @PostConstruct annotation which is not supported ?","date":"2018-09-28 01:49:49","modifiedFileCount":"3","status":"M","submitter":"Dick Cavender"},{"authorTime":"2020-03-14 12:04:39","codes":[{"authorDate":"2020-03-14 12:04:39","commitOrder":3,"curCode":"  public void testQueries() {\n    restClient.doGetAndAssert(\"/queries\", \"user\", \"wrongPswd\")\n        .hasStatusCode(401);\n    restClient.doGetAndAssert(\"/queries\", \"user\", \"user\")\n        .hasStatusCode(403);\n    restClient.doGetAndAssert(\"/queries\", \"dataRead\", \"dataRead\")\n        .hasStatusCode(200)\n        .hasContentType(MediaType.APPLICATION_JSON_VALUE);\n  }\n","date":"2020-03-17 01:31:43","endLine":87,"groupId":"43983","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b0/9f2ad9ab84985f93c0b8107eb4f7e5a4462029.src","preCode":"  public void testQueries() throws Exception {\n    restClient.doGetAndAssert(\"/queries\", \"user\", \"wrongPswd\")\n        .hasStatusCode(401);\n    restClient.doGetAndAssert(\"/queries\", \"user\", \"user\")\n        .hasStatusCode(403);\n    restClient.doGetAndAssert(\"/queries\", \"dataRead\", \"dataRead\")\n        .hasStatusCode(200)\n        .hasContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-03-14 12:04:39","commitOrder":3,"curCode":"  public void testAdhocQuery() {\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"user\", \"wrongPswd\")\n        .hasStatusCode(401);\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"user\", \"user\")\n        .hasStatusCode(403);\n    \r\n    \r\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"dataRead\", \"dataRead\")\n        .hasStatusCode(500);\n  }\n","date":"2020-03-17 01:31:43","endLine":99,"groupId":"43985","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAdhocQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b0/9f2ad9ab84985f93c0b8107eb4f7e5a4462029.src","preCode":"  public void testAdhocQuery() throws Exception {\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"user\", \"wrongPswd\")\n        .hasStatusCode(401);\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"user\", \"user\")\n        .hasStatusCode(403);\n    \r\n    \r\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"dataRead\", \"dataRead\")\n        .hasStatusCode(500);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"9d1e682f0697609c5e4dad48fa4fd13bd521d723","commitMessage":"@@@GEODE-7869: Cleanup warnings in geode-web-api\n","date":"2020-03-17 01:31:43","modifiedFileCount":"19","status":"M","submitter":"Jacob Barrett"},{"authorTime":"2020-03-14 12:04:39","codes":[{"authorDate":"2020-03-19 08:07:31","commitOrder":4,"curCode":"  public void testQueries() {\n    restClient.doGetAndAssert(\"/queries\", \"user\", \"wrongPswd\")\n        .hasStatusCode(401);\n    restClient.doGetAndAssert(\"/queries\", \"user\", \"user\")\n        .hasStatusCode(403);\n    restClient.doGetAndAssert(\"/queries\", \"dataRead\", \"dataRead\")\n        .hasStatusCode(200)\n        .hasContentType(APPLICATION_JSON_UTF8_VALUE);\n  }\n","date":"2020-03-20 00:02:42","endLine":89,"groupId":"101061","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testQueries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2a/9bc83f35e15d6e62e42281c23f279daa2605b4.src","preCode":"  public void testQueries() {\n    restClient.doGetAndAssert(\"/queries\", \"user\", \"wrongPswd\")\n        .hasStatusCode(401);\n    restClient.doGetAndAssert(\"/queries\", \"user\", \"user\")\n        .hasStatusCode(403);\n    restClient.doGetAndAssert(\"/queries\", \"dataRead\", \"dataRead\")\n        .hasStatusCode(200)\n        .hasContentType(MediaType.APPLICATION_JSON_VALUE);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2020-03-14 12:04:39","commitOrder":4,"curCode":"  public void testAdhocQuery() {\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"user\", \"wrongPswd\")\n        .hasStatusCode(401);\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"user\", \"user\")\n        .hasStatusCode(403);\n    \r\n    \r\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"dataRead\", \"dataRead\")\n        .hasStatusCode(500);\n  }\n","date":"2020-03-17 01:31:43","endLine":99,"groupId":"101061","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testAdhocQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b0/9f2ad9ab84985f93c0b8107eb4f7e5a4462029.src","preCode":"  public void testAdhocQuery() {\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"user\", \"wrongPswd\")\n        .hasStatusCode(401);\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"user\", \"user\")\n        .hasStatusCode(403);\n    \r\n    \r\n    restClient.doGetAndAssert(\"/queries/adhoc?q=\", \"dataRead\", \"dataRead\")\n        .hasStatusCode(500);\n  }\n","realPath":"geode-assembly/src/integrationTest/java/org/apache/geode/rest/internal/web/RestSecurityIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"N"}],"commitId":"a627cb7cc5d01d146e760cdd1d6f53c22a560531","commitMessage":"@@@GEODE-7869: Revert content type changes.\n\nOlder tests struggle with the deprecated symbols being replaced. Should be revisited later as a wider effort to cleanup deprecated usage. This ticket is focused on not making deprecated usage worse.\n","date":"2020-03-20 00:02:42","modifiedFileCount":"10","status":"M","submitter":"Jacob Barrett"}]
