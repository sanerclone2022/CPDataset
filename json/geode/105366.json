[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testClientHealthStats_SubscriptionEnabled() throws Exception {\n    this.managementTestRule.createManager(this.managerVM, false);\n    this.managementTestRule.startManager(this.managerVM);\n\n    int port = this.serverVM.invoke(() -> createServerCache());\n\n    this.client1VM.invoke(() -> createClientCache(this.hostName, port, 1, true));\n    this.client2VM.invoke(() -> createClientCache(this.hostName, port, 2, true));\n\n    DistributedMember serverMember = this.managementTestRule.getDistributedMember(this.serverVM);\n    this.managerVM.invoke(() -> verifyClientStats(serverMember, port, 2));\n    this.managementTestRule.stopManager(this.managerVM);\n  }\n","date":"2018-07-18 03:54:18","endLine":127,"groupId":"49315","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientHealthStats_SubscriptionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/68/fc6c7fe1b69a2e4c006d1318c6fde1102c8bd6.src","preCode":"  public void testClientHealthStats_SubscriptionEnabled() throws Exception {\n    this.managementTestRule.createManager(this.managerVM, false);\n    this.managementTestRule.startManager(this.managerVM);\n\n    int port = this.serverVM.invoke(() -> createServerCache());\n\n    this.client1VM.invoke(() -> createClientCache(this.hostName, port, 1, true));\n    this.client2VM.invoke(() -> createClientCache(this.hostName, port, 2, true));\n\n    DistributedMember serverMember = this.managementTestRule.getDistributedMember(this.serverVM);\n    this.managerVM.invoke(() -> verifyClientStats(serverMember, port, 2));\n    this.managementTestRule.stopManager(this.managerVM);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/management/ClientHealthStatsDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testClientHealthStats_SubscriptionDisabled() throws Exception {\n    this.managementTestRule.createManager(this.managerVM, false);\n    this.managementTestRule.startManager(this.managerVM);\n\n    int port = this.serverVM.invoke(() -> createServerCache());\n\n    this.client1VM.invoke(() -> createClientCache(this.hostName, port, 1, false));\n    this.client2VM.invoke(() -> createClientCache(this.hostName, port, 2, false));\n\n    DistributedMember serverMember = this.managementTestRule.getDistributedMember(this.serverVM);\n    this.managerVM.invoke(() -> verifyClientStats(serverMember, port, 0));\n    this.managementTestRule.stopManager(this.managerVM);\n  }\n","date":"2018-07-18 03:54:18","endLine":142,"groupId":"34212","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientHealthStats_SubscriptionDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/68/fc6c7fe1b69a2e4c006d1318c6fde1102c8bd6.src","preCode":"  public void testClientHealthStats_SubscriptionDisabled() throws Exception {\n    this.managementTestRule.createManager(this.managerVM, false);\n    this.managementTestRule.startManager(this.managerVM);\n\n    int port = this.serverVM.invoke(() -> createServerCache());\n\n    this.client1VM.invoke(() -> createClientCache(this.hostName, port, 1, false));\n    this.client2VM.invoke(() -> createClientCache(this.hostName, port, 2, false));\n\n    DistributedMember serverMember = this.managementTestRule.getDistributedMember(this.serverVM);\n    this.managerVM.invoke(() -> verifyClientStats(serverMember, port, 0));\n    this.managementTestRule.stopManager(this.managerVM);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/management/ClientHealthStatsDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-07-27 23:56:46","codes":[{"authorDate":"2018-07-27 23:56:46","commitOrder":2,"curCode":"  public void testClientHealthStats_SubscriptionEnabled() throws Exception {\n    client1 = cluster.startClientVM(2, true, server.getPort());\n    client2 = cluster.startClientVM(3, true, server.getPort());\n\n    VMProvider.invokeInEveryMember(() -> {\n      ClientRegionFactory<String, String> regionFactory =\n          ClusterStartupRule.getClientCache()\n              .createClientRegionFactory(ClientRegionShortcut.CACHING_PROXY);\n      Region<String, String> region = regionFactory.create(\"regionA\");\n      \r\n      region.put(\"1\", \"1\");\n    }, client1, client2);\n\n    locator.waitTillClientsAreReadyOnServers(server.getName(), server.getPort(), 2);\n    verifyClientsAndSubscription(2);\n  }\n","date":"2018-07-27 23:56:46","endLine":79,"groupId":"5791","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientHealthStats_SubscriptionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/23/3694028a86ccec802262a7762cf97e8abfb9f3.src","preCode":"  public void testClientHealthStats_SubscriptionEnabled() throws Exception {\n    this.managementTestRule.createManager(this.managerVM, false);\n    this.managementTestRule.startManager(this.managerVM);\n\n    int port = this.serverVM.invoke(() -> createServerCache());\n\n    this.client1VM.invoke(() -> createClientCache(this.hostName, port, 1, true));\n    this.client2VM.invoke(() -> createClientCache(this.hostName, port, 2, true));\n\n    DistributedMember serverMember = this.managementTestRule.getDistributedMember(this.serverVM);\n    this.managerVM.invoke(() -> verifyClientStats(serverMember, port, 2));\n    this.managementTestRule.stopManager(this.managerVM);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/management/ClientHealthStatsDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2018-07-27 23:56:46","commitOrder":2,"curCode":"  public void testClientHealthStats_SubscriptionDisabled() throws Exception {\n    client1 = cluster.startClientVM(2, false, server.getPort());\n    client2 = cluster.startClientVM(3, false, server.getPort());\n    VMProvider.invokeInEveryMember(() -> {\n      ClientRegionFactory<String, String> regionFactory =\n          ClusterStartupRule.getClientCache()\n              .createClientRegionFactory(ClientRegionShortcut.CACHING_PROXY);\n      regionFactory.create(\"regionA\");\n    }, client1, client2);\n\n    locator.waitTillClientsAreReadyOnServers(server.getName(), server.getPort(), 2);\n    verifyClientsAndSubscription(0);\n  }\n","date":"2018-07-27 23:56:46","endLine":94,"groupId":"5789","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientHealthStats_SubscriptionDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/23/3694028a86ccec802262a7762cf97e8abfb9f3.src","preCode":"  public void testClientHealthStats_SubscriptionDisabled() throws Exception {\n    this.managementTestRule.createManager(this.managerVM, false);\n    this.managementTestRule.startManager(this.managerVM);\n\n    int port = this.serverVM.invoke(() -> createServerCache());\n\n    this.client1VM.invoke(() -> createClientCache(this.hostName, port, 1, false));\n    this.client2VM.invoke(() -> createClientCache(this.hostName, port, 2, false));\n\n    DistributedMember serverMember = this.managementTestRule.getDistributedMember(this.serverVM);\n    this.managerVM.invoke(() -> verifyClientStats(serverMember, port, 0));\n    this.managementTestRule.stopManager(this.managerVM);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/management/ClientHealthStatsDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"fe19efe01f35c43129d678af745415022c1190e1","commitMessage":"@@@GEODE-4118/GEODE-5406: rework ClientHealthStatsDUnitTest (#2203)\n\n\n","date":"2018-07-27 23:56:46","modifiedFileCount":"6","status":"M","submitter":"jinmeiliao"},{"authorTime":"2018-11-20 23:37:19","codes":[{"authorDate":"2018-11-20 23:37:19","commitOrder":3,"curCode":"  public void testClientHealthStats_SubscriptionEnabled() throws Exception {\n    client1 =\n        cluster.startClientVM(2,\n            c1 -> c1.withPoolSubscription(true).withServerConnection(server.getPort()));\n    client2 =\n        cluster.startClientVM(3,\n            c -> c.withPoolSubscription(true).withServerConnection(server.getPort()));\n\n    VMProvider.invokeInEveryMember(() -> {\n      ClientRegionFactory<String, String> regionFactory =\n          ClusterStartupRule.getClientCache()\n              .createClientRegionFactory(ClientRegionShortcut.CACHING_PROXY);\n      Region<String, String> region = regionFactory.create(\"regionA\");\n      \r\n      region.put(\"1\", \"1\");\n    }, client1, client2);\n\n    locator.waitTillClientsAreReadyOnServers(server.getName(), server.getPort(), 2);\n    verifyClientsAndSubscription(2);\n  }\n","date":"2018-11-20 23:37:19","endLine":84,"groupId":"105366","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientHealthStats_SubscriptionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ea/7a642fc8e1b2387ac0bfecef8b399ff58c5072.src","preCode":"  public void testClientHealthStats_SubscriptionEnabled() throws Exception {\n    client1 = cluster.startClientVM(2, true, server.getPort());\n    client2 = cluster.startClientVM(3, true, server.getPort());\n\n    VMProvider.invokeInEveryMember(() -> {\n      ClientRegionFactory<String, String> regionFactory =\n          ClusterStartupRule.getClientCache()\n              .createClientRegionFactory(ClientRegionShortcut.CACHING_PROXY);\n      Region<String, String> region = regionFactory.create(\"regionA\");\n      \r\n      region.put(\"1\", \"1\");\n    }, client1, client2);\n\n    locator.waitTillClientsAreReadyOnServers(server.getName(), server.getPort(), 2);\n    verifyClientsAndSubscription(2);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/management/ClientHealthStatsDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2018-11-20 23:37:19","commitOrder":3,"curCode":"  public void testClientHealthStats_SubscriptionDisabled() throws Exception {\n    client1 =\n        cluster.startClientVM(2,\n            c1 -> c1.withPoolSubscription(false).withServerConnection(server.getPort()));\n    client2 =\n        cluster.startClientVM(3,\n            c -> c.withPoolSubscription(false).withServerConnection(server.getPort()));\n    VMProvider.invokeInEveryMember(() -> {\n      ClientRegionFactory<String, String> regionFactory =\n          ClusterStartupRule.getClientCache()\n              .createClientRegionFactory(ClientRegionShortcut.CACHING_PROXY);\n      regionFactory.create(\"regionA\");\n    }, client1, client2);\n\n    locator.waitTillClientsAreReadyOnServers(server.getName(), server.getPort(), 2);\n    verifyClientsAndSubscription(0);\n  }\n","date":"2018-11-20 23:37:19","endLine":103,"groupId":"105366","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientHealthStats_SubscriptionDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ea/7a642fc8e1b2387ac0bfecef8b399ff58c5072.src","preCode":"  public void testClientHealthStats_SubscriptionDisabled() throws Exception {\n    client1 = cluster.startClientVM(2, false, server.getPort());\n    client2 = cluster.startClientVM(3, false, server.getPort());\n    VMProvider.invokeInEveryMember(() -> {\n      ClientRegionFactory<String, String> regionFactory =\n          ClusterStartupRule.getClientCache()\n              .createClientRegionFactory(ClientRegionShortcut.CACHING_PROXY);\n      regionFactory.create(\"regionA\");\n    }, client1, client2);\n\n    locator.waitTillClientsAreReadyOnServers(server.getName(), server.getPort(), 2);\n    verifyClientsAndSubscription(0);\n  }\n","realPath":"geode-core/src/distributedTest/java/org/apache/geode/management/ClientHealthStatsDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"222701ad7511841b1ba0033fc51c0ac6b044efe8","commitMessage":"@@@GEODE-4110: improve junit ClientCacheRule (#2872)\n\n* refactor some multiUser tests to use the ClientCacheRule\n* add more convenience methods in ClientCacheRule\n* clean up the ClusterStarterRule.startClient interface\n* deprecate the SecurityTestUtils to favor using rules","date":"2018-11-20 23:37:19","modifiedFileCount":"21","status":"M","submitter":"jinmeiliao"}]
