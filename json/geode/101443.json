[{"authorTime":"2018-08-02 04:20:47","codes":[{"authorDate":"2018-08-02 04:20:47","commitOrder":1,"curCode":"  public void testWithAvailablePort() throws IOException {\n    final Integer locatorPort = AvailablePortHelper.getRandomAvailableTCPPort();\n    final String memberName = \"testWithAvailablePort-locator\";\n    final String expectedMessage =\n        \"[\" + locatorPort + \"] as \" + memberName + \" is currently online.\";\n\n    File workingDir = tempFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, locatorPort.toString());\n\n    CommandResult result = gfsh.executeCommand(command.getCommandString());\n\n    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);\n    assertThat(result.getMessageFromContent()).contains(expectedMessage);\n  }\n","date":"2018-08-02 04:20:47","endLine":206,"groupId":"19734","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithAvailablePort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/3c/2c7f6d37843dff277f53ced01cbc7ad1992074.src","preCode":"  public void testWithAvailablePort() throws IOException {\n    final Integer locatorPort = AvailablePortHelper.getRandomAvailableTCPPort();\n    final String memberName = \"testWithAvailablePort-locator\";\n    final String expectedMessage =\n        \"[\" + locatorPort + \"] as \" + memberName + \" is currently online.\";\n\n    File workingDir = tempFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, locatorPort.toString());\n\n    CommandResult result = gfsh.executeCommand(command.getCommandString());\n\n    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);\n    assertThat(result.getMessageFromContent()).contains(expectedMessage);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"B"},{"authorDate":"2018-08-02 04:20:47","commitOrder":1,"curCode":"  public void testWithDefaultLocatorPort() throws IOException {\n    final String memberName = \"testWithDefaultLocatorPort-locator\";\n    final String unexpectedMessage = \"[0] as \" + memberName + \" is currently online.\";\n    final String expectedMessage = \"\\\\[\\\\d+\\\\] as \" + memberName + \" is currently online.\";\n\n    File workingDir = tempFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, \"0\");\n\n    CommandResult result = gfsh.executeCommand(command.getCommandString());\n\n    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);\n    assertThat(result.getMessageFromContent()).doesNotContain(unexpectedMessage);\n    assertThat(result.getMessageFromContent()).containsPattern(expectedMessage);\n  }\n","date":"2018-08-02 04:20:47","endLine":227,"groupId":"20429","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithDefaultLocatorPort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/3c/2c7f6d37843dff277f53ced01cbc7ad1992074.src","preCode":"  public void testWithDefaultLocatorPort() throws IOException {\n    final String memberName = \"testWithDefaultLocatorPort-locator\";\n    final String unexpectedMessage = \"[0] as \" + memberName + \" is currently online.\";\n    final String expectedMessage = \"\\\\[\\\\d+\\\\] as \" + memberName + \" is currently online.\";\n\n    File workingDir = tempFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, \"0\");\n\n    CommandResult result = gfsh.executeCommand(command.getCommandString());\n\n    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);\n    assertThat(result.getMessageFromContent()).doesNotContain(unexpectedMessage);\n    assertThat(result.getMessageFromContent()).containsPattern(expectedMessage);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"B"}],"commitId":"eafd116838324ac16bd81375bb06105b30b6c89b","commitMessage":"@@@GEODE-3530: Refactor LauncherLifecycleCommandsDUnitTest\n\n* extract start locator command tests\n* extract status locator tests\n* use the GfshCommandRule so that the test is not an acceptance test\n* use the ClusterStarterRule to start a locator to help with clean-up\n* connect all started locators to the locator\n* shutdown the cluster using the locator to clean up all JVMs\n* wrap resource creations in try-finally block\n* add test for creating dir and cleanup temp files\n* ignore the test that requires fewer permissions","date":"2018-08-02 04:20:47","modifiedFileCount":"2","status":"B","submitter":"Helena Bales"},{"authorTime":"2018-10-12 07:11:27","codes":[{"authorDate":"2018-10-12 07:11:27","commitOrder":2,"curCode":"  public void testWithAvailablePort() throws IOException {\n    int locatorPort = AvailablePortHelper.getRandomAvailableTCPPort();\n    String expectedMessage =\n        \"[\" + locatorPort + \"] as \" + memberName + \" is currently online.\";\n\n    File workingDir = temporaryFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, String.valueOf(locatorPort));\n\n    CommandResult result = gfsh.executeCommand(command.getCommandString());\n\n    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);\n    assertThat(result.getMessageFromContent()).contains(expectedMessage);\n  }\n","date":"2018-10-12 07:11:27","endLine":219,"groupId":"19734","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithAvailablePort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/31/7ae88ce9b772f24264c31ba00045d15a6078e2.src","preCode":"  public void testWithAvailablePort() throws IOException {\n    final Integer locatorPort = AvailablePortHelper.getRandomAvailableTCPPort();\n    final String memberName = \"testWithAvailablePort-locator\";\n    final String expectedMessage =\n        \"[\" + locatorPort + \"] as \" + memberName + \" is currently online.\";\n\n    File workingDir = tempFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, locatorPort.toString());\n\n    CommandResult result = gfsh.executeCommand(command.getCommandString());\n\n    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);\n    assertThat(result.getMessageFromContent()).contains(expectedMessage);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"},{"authorDate":"2018-10-12 07:11:27","commitOrder":2,"curCode":"  public void testWithDefaultLocatorPort() throws IOException {\n    String unexpectedMessage = \"[0] as \" + memberName + \" is currently online.\";\n    String expectedMessage = \"\\\\[\\\\d+\\\\] as \" + memberName + \" is currently online.\";\n\n    File workingDir = temporaryFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, \"0\");\n\n    CommandResult result = gfsh.executeCommand(command.getCommandString());\n\n    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);\n    assertThat(result.getMessageFromContent()).doesNotContain(unexpectedMessage);\n    assertThat(result.getMessageFromContent()).containsPattern(expectedMessage);\n  }\n","date":"2018-10-12 07:11:27","endLine":239,"groupId":"20429","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithDefaultLocatorPort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/31/7ae88ce9b772f24264c31ba00045d15a6078e2.src","preCode":"  public void testWithDefaultLocatorPort() throws IOException {\n    final String memberName = \"testWithDefaultLocatorPort-locator\";\n    final String unexpectedMessage = \"[0] as \" + memberName + \" is currently online.\";\n    final String expectedMessage = \"\\\\[\\\\d+\\\\] as \" + memberName + \" is currently online.\";\n\n    File workingDir = tempFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, \"0\");\n\n    CommandResult result = gfsh.executeCommand(command.getCommandString());\n\n    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);\n    assertThat(result.getMessageFromContent()).doesNotContain(unexpectedMessage);\n    assertThat(result.getMessageFromContent()).containsPattern(expectedMessage);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"a9023e06d835d660e9c9f5b2f6a1017866977088","commitMessage":"@@@GEODE-5212: fix failing StartLocator and Server command DUnit tests (#2580)\n\n   * Added unit tests to cover different working directory cases\n   * Removed acceptance tests related to working directory as they\n     seem to be fragile as paths are environment specific\n\nSigned-off-by: Kirk Lund <klund@apache.org>","date":"2018-10-12 07:11:27","modifiedFileCount":"7","status":"M","submitter":"Sai Boorlagadda"},{"authorTime":"2019-04-25 23:05:13","codes":[{"authorDate":"2019-04-25 23:05:13","commitOrder":3,"curCode":"  public void testWithAvailablePort() throws IOException {\n    int locatorPort = AvailablePortHelper.getRandomAvailableTCPPort();\n    String expectedMessage =\n        \"[\" + locatorPort + \"] as \" + memberName + \" is currently online.\";\n\n    File workingDir = temporaryFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, String.valueOf(locatorPort));\n\n    gfsh.executeAndAssertThat(command.getCommandString()).statusIsSuccess()\n        .containsOutput(expectedMessage);\n  }\n","date":"2019-04-25 23:05:13","endLine":207,"groupId":"19734","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithAvailablePort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9f/bedcf08ddc790b94c9c370ce02144a8ad9506e.src","preCode":"  public void testWithAvailablePort() throws IOException {\n    int locatorPort = AvailablePortHelper.getRandomAvailableTCPPort();\n    String expectedMessage =\n        \"[\" + locatorPort + \"] as \" + memberName + \" is currently online.\";\n\n    File workingDir = temporaryFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, String.valueOf(locatorPort));\n\n    CommandResult result = gfsh.executeCommand(command.getCommandString());\n\n    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);\n    assertThat(result.getMessageFromContent()).contains(expectedMessage);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"M"},{"authorDate":"2019-04-25 23:05:13","commitOrder":3,"curCode":"  public void testWithDefaultLocatorPort() throws IOException {\n    String unexpectedMessage = \"[0] as \" + memberName + \" is currently online.\";\n    String expectedMessage = \"\\\\[\\\\d+\\\\] as \" + memberName + \" is currently online.\";\n\n    File workingDir = temporaryFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, \"0\");\n\n    gfsh.executeAndAssertThat(command.getCommandString()).statusIsSuccess()\n        .hasOutput()\n        .doesNotContain(unexpectedMessage).containsPattern(expectedMessage);\n  }\n","date":"2019-04-25 23:05:13","endLine":225,"groupId":"20429","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithDefaultLocatorPort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9f/bedcf08ddc790b94c9c370ce02144a8ad9506e.src","preCode":"  public void testWithDefaultLocatorPort() throws IOException {\n    String unexpectedMessage = \"[0] as \" + memberName + \" is currently online.\";\n    String expectedMessage = \"\\\\[\\\\d+\\\\] as \" + memberName + \" is currently online.\";\n\n    File workingDir = temporaryFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, \"0\");\n\n    CommandResult result = gfsh.executeCommand(command.getCommandString());\n\n    assertThat(result.getStatus()).isEqualTo(Result.Status.OK);\n    assertThat(result.getMessageFromContent()).doesNotContain(unexpectedMessage);\n    assertThat(result.getMessageFromContent()).containsPattern(expectedMessage);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"}],"commitId":"96466c95cc233111db2d57b5d97ea52864fee875","commitMessage":"@@@GEODE-5971: delete LegacyCommandResult and rename ModelResultModel to? (#3497)\n\n\n","date":"2019-04-25 23:05:13","modifiedFileCount":"91","status":"M","submitter":"jinmeiliao"},{"authorTime":"2020-03-25 01:20:54","codes":[{"authorDate":"2020-03-25 01:20:54","commitOrder":4,"curCode":"  public void testWithAvailablePort() throws IOException {\n    int locatorPort = AvailablePortHelper.getRandomAvailableTCPPort();\n    String expectedMessage =\n        \"[\" + locatorPort + \"] as \" + memberName + \" is currently online.\";\n\n    File workingDir = temporaryFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, String.valueOf(locatorPort))\n        .addOption(\"J\", \"-Dgemfire.enable-management-rest-service=false\");\n\n    gfsh.executeAndAssertThat(command.getCommandString()).statusIsSuccess()\n        .containsOutput(expectedMessage);\n  }\n","date":"2020-03-25 01:20:54","endLine":221,"groupId":"101443","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testWithAvailablePort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8c/83f15ef184a5b18fc5b485f8bd9013f94d3566.src","preCode":"  public void testWithAvailablePort() throws IOException {\n    int locatorPort = AvailablePortHelper.getRandomAvailableTCPPort();\n    String expectedMessage =\n        \"[\" + locatorPort + \"] as \" + memberName + \" is currently online.\";\n\n    File workingDir = temporaryFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, String.valueOf(locatorPort));\n\n    gfsh.executeAndAssertThat(command.getCommandString()).statusIsSuccess()\n        .containsOutput(expectedMessage);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"M"},{"authorDate":"2020-03-25 01:20:54","commitOrder":4,"curCode":"  public void testWithDefaultLocatorPort() throws IOException {\n    String unexpectedMessage = \"[0] as \" + memberName + \" is currently online.\";\n    String expectedMessage = \"\\\\[\\\\d+\\\\] as \" + memberName + \" is currently online.\";\n\n    File workingDir = temporaryFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, \"0\")\n        .addOption(\"J\", \"-Dgemfire.enable-management-rest-service=false\");\n\n    gfsh.executeAndAssertThat(command.getCommandString()).statusIsSuccess()\n        .hasOutput()\n        .doesNotContain(unexpectedMessage).containsPattern(expectedMessage);\n  }\n","date":"2020-03-25 01:20:54","endLine":240,"groupId":"101443","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testWithDefaultLocatorPort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8c/83f15ef184a5b18fc5b485f8bd9013f94d3566.src","preCode":"  public void testWithDefaultLocatorPort() throws IOException {\n    String unexpectedMessage = \"[0] as \" + memberName + \" is currently online.\";\n    String expectedMessage = \"\\\\[\\\\d+\\\\] as \" + memberName + \" is currently online.\";\n\n    File workingDir = temporaryFolder.newFolder();\n\n    CommandStringBuilder command = new CommandStringBuilder(START_LOCATOR)\n        .addOption(START_LOCATOR__MEMBER_NAME, memberName)\n        .addOption(START_LOCATOR__LOCATORS, locatorConnectionString)\n        .addOption(START_LOCATOR__DIR, workingDir.getAbsolutePath())\n        .addOption(START_LOCATOR__PORT, \"0\");\n\n    gfsh.executeAndAssertThat(command.getCommandString()).statusIsSuccess()\n        .hasOutput()\n        .doesNotContain(unexpectedMessage).containsPattern(expectedMessage);\n  }\n","realPath":"geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommandDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"}],"commitId":"9700bbc34549886c462ea520de861b827a6267d5","commitMessage":"@@@GEODE-7826: start jmx-manager when the Management Rest Service is (#4820)\n\n* Before the geode management rest service web app is added. \nthe code now starts the jmx-manager.\n\n* Since the locator currently just logs a message if the management rest\nservice can not be started.  this is now also the behavior if the\njmx-manager can not be started on behalf of the management rest service.\nIf that happens the management rest service will not be available and\nyou will get a warning logged describing why the jmx-manager could not\nbe started.","date":"2020-03-25 01:20:54","modifiedFileCount":"3","status":"M","submitter":"Darrel Schneider"}]
