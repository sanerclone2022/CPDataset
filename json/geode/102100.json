[{"authorTime":"2018-05-02 03:40:48","codes":[{"authorDate":"2018-05-02 03:40:48","commitOrder":2,"curCode":"  public void txApplyPutOnSecondaryConstructsPendingCallbacksWhenRegionEntryExists()\n      throws Exception {\n    AbstractRegionMap arm = new TxRegionEntryTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(mock(InternalDistributedMember.class), 1);\n    TXRmtEvent txRmtEvent = mock(TXRmtEvent.class);\n    EventID eventId = mock(EventID.class);\n    Object newValue = \"value\";\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, txRmtEvent, eventId, null,\n        pendingCallbacks, null, null, null, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","date":"2018-05-02 03:40:48","endLine":853,"groupId":"22514","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"txApplyPutOnSecondaryConstructsPendingCallbacksWhenRegionEntryExists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/31/0e0a3702d06e6bb8fd02e584c3c1137614cc05.src","preCode":"  public void txApplyPutOnSecondaryConstructsPendingCallbacksWhenRegionEntryExists()\n      throws Exception {\n    AbstractRegionMap arm = new TxRegionEntryTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(mock(InternalDistributedMember.class), 1);\n    TXRmtEvent txRmtEvent = mock(TXRmtEvent.class);\n    EventID eventId = mock(EventID.class);\n    Object newValue = \"value\";\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, txRmtEvent, eventId, null,\n        pendingCallbacks, null, null, null, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/AbstractRegionMapTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":836,"status":"MB"},{"authorDate":"2018-05-02 03:40:48","commitOrder":2,"curCode":"  public void txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry()\n      throws Exception {\n    AbstractRegionMap arm = new TxPutIfAbsentTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(arm._getOwner().getMyId(), 1);\n    TXRmtEvent txRmtEvent = mock(TXRmtEvent.class);\n    EventID eventId = mock(EventID.class);\n    Object newValue = \"value\";\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, txRmtEvent, eventId, null,\n        pendingCallbacks, null, null, null, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","date":"2018-05-02 03:40:48","endLine":873,"groupId":"22514","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/31/0e0a3702d06e6bb8fd02e584c3c1137614cc05.src","preCode":"  public void txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry()\n      throws Exception {\n    AbstractRegionMap arm = new TxPutIfAbsentTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(arm._getOwner().getMyId(), 1);\n    TXRmtEvent txRmtEvent = mock(TXRmtEvent.class);\n    EventID eventId = mock(EventID.class);\n    Object newValue = \"value\";\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, txRmtEvent, eventId, null,\n        pendingCallbacks, null, null, null, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/AbstractRegionMapTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":856,"status":"B"}],"commitId":"7b9e8c21c6af53e90b7084571010af76e51852ab","commitMessage":"@@@GEODE-5152: add unit tests for txApplyPut (#1889)\n\n","date":"2018-05-02 03:40:48","modifiedFileCount":"1","status":"M","submitter":"Darrel Schneider"},{"authorTime":"2018-05-12 00:29:09","codes":[{"authorDate":"2018-05-02 03:40:48","commitOrder":3,"curCode":"  public void txApplyPutOnSecondaryConstructsPendingCallbacksWhenRegionEntryExists()\n      throws Exception {\n    AbstractRegionMap arm = new TxRegionEntryTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(mock(InternalDistributedMember.class), 1);\n    TXRmtEvent txRmtEvent = mock(TXRmtEvent.class);\n    EventID eventId = mock(EventID.class);\n    Object newValue = \"value\";\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, txRmtEvent, eventId, null,\n        pendingCallbacks, null, null, null, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","date":"2018-05-02 03:40:48","endLine":853,"groupId":"22514","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"txApplyPutOnSecondaryConstructsPendingCallbacksWhenRegionEntryExists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/31/0e0a3702d06e6bb8fd02e584c3c1137614cc05.src","preCode":"  public void txApplyPutOnSecondaryConstructsPendingCallbacksWhenRegionEntryExists()\n      throws Exception {\n    AbstractRegionMap arm = new TxRegionEntryTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(mock(InternalDistributedMember.class), 1);\n    TXRmtEvent txRmtEvent = mock(TXRmtEvent.class);\n    EventID eventId = mock(EventID.class);\n    Object newValue = \"value\";\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, txRmtEvent, eventId, null,\n        pendingCallbacks, null, null, null, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/AbstractRegionMapTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":836,"status":"N"},{"authorDate":"2018-05-12 00:29:09","commitOrder":3,"curCode":"  public void txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry()\n      throws Exception {\n    AbstractRegionMap arm = new TxPutIfAbsentTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(arm._getOwner().getMyId(), 1);\n    EventID eventId = mock(EventID.class);\n    TXEntryState txEntryState = mock(TXEntryState.class);\n    Object newValue = \"value\";\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, null, eventId, null,\n        pendingCallbacks, null, null, txEntryState, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","date":"2018-05-12 00:29:09","endLine":876,"groupId":"41884","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d8/957edbab2c14c6827a3be74e9b75cdb95e00aa.src","preCode":"  public void txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry()\n      throws Exception {\n    AbstractRegionMap arm = new TxPutIfAbsentTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(arm._getOwner().getMyId(), 1);\n    TXRmtEvent txRmtEvent = mock(TXRmtEvent.class);\n    EventID eventId = mock(EventID.class);\n    Object newValue = \"value\";\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, txRmtEvent, eventId, null,\n        pendingCallbacks, null, null, null, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/AbstractRegionMapTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":859,"status":"M"}],"commitId":"6839dca5b3c63f2a068998d890ee56cf3c21e5ef","commitMessage":"@@@GEODE-5172: refactor txApplyPut to reuse RegionMapPut (#1917)\n\nAbstractRegionMapPut has been introduced and has the common code used for both a non-tx put (RegionMapPut) and a transaction put being committed (RegionMapCommitPut).\nRegionMapCommitPut is used by txApplyPut.","date":"2018-05-12 00:29:09","modifiedFileCount":"18","status":"M","submitter":"Darrel Schneider"},{"authorTime":"2019-05-31 05:47:34","codes":[{"authorDate":"2019-05-31 05:47:34","commitOrder":4,"curCode":"  public void txApplyPutOnSecondaryConstructsPendingCallbacksWhenRegionEntryExists()\n      throws Exception {\n    AbstractRegionMap arm = new TxRegionEntryTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(mock(InternalDistributedMember.class), 1);\n    TXRmtEvent txRmtEvent = mock(TXRmtEvent.class);\n    EventID eventId = mock(EventID.class);\n    Object newValue = \"value\";\n\n    InternalCache cache = mock(InternalCache.class);\n    InternalDistributedSystem ids = mock(InternalDistributedSystem.class);\n    when(arm._getOwner().getCache()).thenReturn(cache);\n    when(cache.getDistributedSystem()).thenReturn(ids);\n    when(ids.getOffHeapStore()).thenReturn(null);\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, txRmtEvent, eventId, null,\n        pendingCallbacks, null, null, null, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","date":"2019-05-31 05:47:34","endLine":1351,"groupId":"102100","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"txApplyPutOnSecondaryConstructsPendingCallbacksWhenRegionEntryExists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/d88615beb173d77b71d0c42b9bd71192ce8a4a.src","preCode":"  public void txApplyPutOnSecondaryConstructsPendingCallbacksWhenRegionEntryExists()\n      throws Exception {\n    AbstractRegionMap arm = new TxRegionEntryTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(mock(InternalDistributedMember.class), 1);\n    TXRmtEvent txRmtEvent = mock(TXRmtEvent.class);\n    EventID eventId = mock(EventID.class);\n    Object newValue = \"value\";\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, txRmtEvent, eventId, null,\n        pendingCallbacks, null, null, null, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/AbstractRegionMapTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1328,"status":"M"},{"authorDate":"2019-05-31 05:47:34","commitOrder":4,"curCode":"  public void txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry()\n      throws Exception {\n    AbstractRegionMap arm = new TxPutIfAbsentTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(arm._getOwner().getMyId(), 1);\n    EventID eventId = mock(EventID.class);\n    TXEntryState txEntryState = mock(TXEntryState.class);\n    Object newValue = \"value\";\n\n    InternalCache cache = mock(InternalCache.class);\n    InternalDistributedSystem ids = mock(InternalDistributedSystem.class);\n    when(arm._getOwner().getCache()).thenReturn(cache);\n    when(cache.getDistributedSystem()).thenReturn(ids);\n    when(ids.getOffHeapStore()).thenReturn(null);\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, null, eventId, null,\n        pendingCallbacks, null, null, txEntryState, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","date":"2019-05-31 05:47:34","endLine":1377,"groupId":"102100","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b8/d88615beb173d77b71d0c42b9bd71192ce8a4a.src","preCode":"  public void txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry()\n      throws Exception {\n    AbstractRegionMap arm = new TxPutIfAbsentTestableAbstractRegionMap();\n    List<EntryEventImpl> pendingCallbacks = new ArrayList<>();\n    TXId txId = new TXId(arm._getOwner().getMyId(), 1);\n    EventID eventId = mock(EventID.class);\n    TXEntryState txEntryState = mock(TXEntryState.class);\n    Object newValue = \"value\";\n\n    arm.txApplyPut(Operation.UPDATE, KEY, newValue, false, txId, null, eventId, null,\n        pendingCallbacks, null, null, txEntryState, null, 1);\n\n    assertEquals(1, pendingCallbacks.size());\n    verify(arm._getOwner(), times(1)).txApplyPutPart2(any(), any(), anyLong(), anyBoolean(),\n        anyBoolean(), anyBoolean());\n    verify(arm._getOwner(), never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE, UPDATEEVENT,\n        false);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/cache/AbstractRegionMapTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1354,"status":"M"}],"commitId":"327feec1946a0b6e28dd552d175e7833dc8d8dd2","commitMessage":"@@@GEODE-6696: EntryEvenImpl.offHeapLock created only if off-heap in use (#3581)\n\n","date":"2019-05-31 05:47:34","modifiedFileCount":"11","status":"M","submitter":"mivanac"}]
