[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void createServer(VM server, final int port, final boolean isAccessor,\n      final int redundantCopies) {\n    SerializableRunnable createServer = new CacheSerializableRunnable(\"Create Cache Server\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create Cache Server. ###\");\n        \r\n        \r\n        \r\n\n        \r\n        AttributesFactory attr = new AttributesFactory();\n        \r\n        PartitionAttributesFactory paf = new PartitionAttributesFactory();\n        if (isAccessor) {\n          paf.setLocalMaxMemory(0);\n        }\n        PartitionAttributes prAttr =\n            paf.setTotalNumBuckets(197).setRedundantCopies(redundantCopies).create();\n        attr.setPartitionAttributes(prAttr);\n\n        assertFalse(getSystem().isLoner());\n        \r\n        \r\n        for (int i = 0; i < regions.length; i++) {\n          Region r = createRegion(regions[i], attr.create());\n          LogWriterUtils.getLogWriter().info(\"Server created the region: \" + r);\n        }\n        \r\n        try {\n          startBridgeServer(port, true);\n        } catch (Exception ex) {\n          Assert.fail(\"While starting CacheServer\", ex);\n        }\n        \r\n\n      }\n    };\n\n    server.invoke(createServer);\n  }\n","date":"2018-07-18 03:54:18","endLine":1674,"groupId":"23232","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createServer","params":"(VMserver@finalintport@finalbooleanisAccessor@finalintredundantCopies)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fc/7d640c734bf636b80f7ad66a98bc6d9813004c.src","preCode":"  public void createServer(VM server, final int port, final boolean isAccessor,\n      final int redundantCopies) {\n    SerializableRunnable createServer = new CacheSerializableRunnable(\"Create Cache Server\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create Cache Server. ###\");\n        \r\n        \r\n        \r\n\n        \r\n        AttributesFactory attr = new AttributesFactory();\n        \r\n        PartitionAttributesFactory paf = new PartitionAttributesFactory();\n        if (isAccessor) {\n          paf.setLocalMaxMemory(0);\n        }\n        PartitionAttributes prAttr =\n            paf.setTotalNumBuckets(197).setRedundantCopies(redundantCopies).create();\n        attr.setPartitionAttributes(prAttr);\n\n        assertFalse(getSystem().isLoner());\n        \r\n        \r\n        for (int i = 0; i < regions.length; i++) {\n          Region r = createRegion(regions[i], attr.create());\n          LogWriterUtils.getLogWriter().info(\"Server created the region: \" + r);\n        }\n        \r\n        try {\n          startBridgeServer(port, true);\n        } catch (Exception ex) {\n          Assert.fail(\"While starting CacheServer\", ex);\n        }\n        \r\n\n      }\n    };\n\n    server.invoke(createServer);\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/PrCqUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1635,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void createServerWithPR(VM server, final int port, final boolean isAccessor,\n      final int redundantCopies) {\n    SerializableRunnable createServer = new CacheSerializableRunnable(\"Create Cache Server\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create Cache Server. ###\");\n\n        AttributesFactory attr = new AttributesFactory();\n        PartitionAttributesFactory paf = new PartitionAttributesFactory();\n        if (isAccessor) {\n          paf.setLocalMaxMemory(0);\n        }\n        PartitionAttributes prAttr =\n            paf.setTotalNumBuckets(197).setRedundantCopies(redundantCopies).create();\n        attr.setPartitionAttributes(prAttr);\n\n        assertFalse(getSystem().isLoner());\n        for (int i = 0; i < regions.length; i++) {\n          Region r = createRegion(regions[i], attr.create());\n          LogWriterUtils.getLogWriter().info(\"Server created the region: \" + r);\n        }\n        try {\n          startBridgeServer(port, true);\n        } catch (Exception ex) {\n          Assert.fail(\"While starting CacheServer\", ex);\n        }\n      }\n    };\n\n    server.invoke(createServer);\n  }\n","date":"2018-07-18 03:54:18","endLine":274,"groupId":"23232","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createServerWithPR","params":"(VMserver@finalintport@finalbooleanisAccessor@finalintredundantCopies)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/87/5172d12d02b90c1af7e602c4eef42915b15293.src","preCode":"  public void createServerWithPR(VM server, final int port, final boolean isAccessor,\n      final int redundantCopies) {\n    SerializableRunnable createServer = new CacheSerializableRunnable(\"Create Cache Server\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create Cache Server. ###\");\n\n        AttributesFactory attr = new AttributesFactory();\n        PartitionAttributesFactory paf = new PartitionAttributesFactory();\n        if (isAccessor) {\n          paf.setLocalMaxMemory(0);\n        }\n        PartitionAttributes prAttr =\n            paf.setTotalNumBuckets(197).setRedundantCopies(redundantCopies).create();\n        attr.setPartitionAttributes(prAttr);\n\n        assertFalse(getSystem().isLoner());\n        for (int i = 0; i < regions.length; i++) {\n          Region r = createRegion(regions[i], attr.create());\n          LogWriterUtils.getLogWriter().info(\"Server created the region: \" + r);\n        }\n        try {\n          startBridgeServer(port, true);\n        } catch (Exception ex) {\n          Assert.fail(\"While starting CacheServer\", ex);\n        }\n      }\n    };\n\n    server.invoke(createServer);\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqQueryUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2019-01-12 07:53:54","commitOrder":2,"curCode":"  public void createServer(VM server, final int port, final boolean isAccessor,\n      final int redundantCopies) {\n    SerializableRunnable createServer = new CacheSerializableRunnable(\"Create Cache Server\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create Cache Server. ###\");\n        \r\n        \r\n        \r\n\n        \r\n        AttributesFactory attr = new AttributesFactory();\n        \r\n        PartitionAttributesFactory paf = new PartitionAttributesFactory();\n        if (isAccessor) {\n          paf.setLocalMaxMemory(0);\n        }\n        PartitionAttributes prAttr =\n            paf.setTotalNumBuckets(197).setRedundantCopies(redundantCopies).create();\n        attr.setPartitionAttributes(prAttr);\n\n        assertFalse(getSystem().isLoner());\n        \r\n        \r\n        for (int i = 0; i < regions.length; i++) {\n          Region r = createRegion(regions[i], attr.create());\n          LogWriterUtils.getLogWriter().info(\"Server created the region: \" + r);\n        }\n        \r\n        try {\n          startBridgeServer(port, true);\n        } catch (Exception ex) {\n          Assert.fail(\"While starting CacheServer\", ex);\n        }\n        \r\n\n      }\n    };\n\n    server.invoke(createServer);\n  }\n","date":"2019-01-12 07:53:54","endLine":1686,"groupId":"10774","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createServer","params":"(VMserver@finalintport@finalbooleanisAccessor@finalintredundantCopies)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/fa/e5b8c36a608cd3e96150429dfbecbabbd9d764.src","preCode":"  public void createServer(VM server, final int port, final boolean isAccessor,\n      final int redundantCopies) {\n    SerializableRunnable createServer = new CacheSerializableRunnable(\"Create Cache Server\") {\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create Cache Server. ###\");\n        \r\n        \r\n        \r\n\n        \r\n        AttributesFactory attr = new AttributesFactory();\n        \r\n        PartitionAttributesFactory paf = new PartitionAttributesFactory();\n        if (isAccessor) {\n          paf.setLocalMaxMemory(0);\n        }\n        PartitionAttributes prAttr =\n            paf.setTotalNumBuckets(197).setRedundantCopies(redundantCopies).create();\n        attr.setPartitionAttributes(prAttr);\n\n        assertFalse(getSystem().isLoner());\n        \r\n        \r\n        for (int i = 0; i < regions.length; i++) {\n          Region r = createRegion(regions[i], attr.create());\n          LogWriterUtils.getLogWriter().info(\"Server created the region: \" + r);\n        }\n        \r\n        try {\n          startBridgeServer(port, true);\n        } catch (Exception ex) {\n          Assert.fail(\"While starting CacheServer\", ex);\n        }\n        \r\n\n      }\n    };\n\n    server.invoke(createServer);\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/PrCqUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1646,"status":"M"},{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  public void createServerWithPR(VM server, final int port, final boolean isAccessor,\n      final int redundantCopies) {\n    SerializableRunnable createServer = new CacheSerializableRunnable(\"Create Cache Server\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create Cache Server. ###\");\n\n        AttributesFactory attr = new AttributesFactory();\n        PartitionAttributesFactory paf = new PartitionAttributesFactory();\n        if (isAccessor) {\n          paf.setLocalMaxMemory(0);\n        }\n        PartitionAttributes prAttr =\n            paf.setTotalNumBuckets(197).setRedundantCopies(redundantCopies).create();\n        attr.setPartitionAttributes(prAttr);\n\n        assertFalse(getSystem().isLoner());\n        for (int i = 0; i < regions.length; i++) {\n          Region r = createRegion(regions[i], attr.create());\n          LogWriterUtils.getLogWriter().info(\"Server created the region: \" + r);\n        }\n        try {\n          startBridgeServer(port, true);\n        } catch (Exception ex) {\n          Assert.fail(\"While starting CacheServer\", ex);\n        }\n      }\n    };\n\n    server.invoke(createServer);\n  }\n","date":"2018-07-18 03:54:18","endLine":274,"groupId":"10774","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createServerWithPR","params":"(VMserver@finalintport@finalbooleanisAccessor@finalintredundantCopies)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/87/5172d12d02b90c1af7e602c4eef42915b15293.src","preCode":"  public void createServerWithPR(VM server, final int port, final boolean isAccessor,\n      final int redundantCopies) {\n    SerializableRunnable createServer = new CacheSerializableRunnable(\"Create Cache Server\") {\n      @Override\n      public void run2() throws CacheException {\n        LogWriterUtils.getLogWriter().info(\"### Create Cache Server. ###\");\n\n        AttributesFactory attr = new AttributesFactory();\n        PartitionAttributesFactory paf = new PartitionAttributesFactory();\n        if (isAccessor) {\n          paf.setLocalMaxMemory(0);\n        }\n        PartitionAttributes prAttr =\n            paf.setTotalNumBuckets(197).setRedundantCopies(redundantCopies).create();\n        attr.setPartitionAttributes(prAttr);\n\n        assertFalse(getSystem().isLoner());\n        for (int i = 0; i < regions.length; i++) {\n          Region r = createRegion(regions[i], attr.create());\n          LogWriterUtils.getLogWriter().info(\"Server created the region: \" + r);\n        }\n        try {\n          startBridgeServer(port, true);\n        } catch (Exception ex) {\n          Assert.fail(\"While starting CacheServer\", ex);\n        }\n      }\n    };\n\n    server.invoke(createServer);\n  }\n","realPath":"geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/dunit/CqQueryUsingPoolDUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"N"}],"commitId":"9d737c9e95a77cb4db05a258f318908e7899bd6c","commitMessage":"@@@GEODE-4391: Add `@Override` where missing. (#3069)\n\n* GEODE-4391: Add `@Override` where missing.\n\n* Restart Concourse.  I think that was flaky.\n","date":"2019-01-12 07:53:54","modifiedFileCount":"1582","status":"M","submitter":"Galen O'Sullivan"}]
