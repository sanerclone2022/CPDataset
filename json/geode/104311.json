[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void statusWithPidReturnsOnlineWithDetails() throws Exception {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(localPid).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","date":"2018-07-18 03:54:18","endLine":235,"groupId":"16130","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"statusWithPidReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/ec/0352d5efa35b11bc561894593a9282ec396a47.src","preCode":"  public void statusWithPidReturnsOnlineWithDetails() throws Exception {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(localPid).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","date":"2018-07-18 03:54:18","endLine":163,"groupId":"42184","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"statusWithWorkingDirectoryReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/16/d452bac6807946a8861a0444177bdc99bc5f7a.src","preCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/LocatorLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-25 05:44:46","commitOrder":2,"curCode":"  public void statusWithPidReturnsOnlineWithDetails() throws UnknownHostException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(localPid).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","date":"2018-07-25 05:44:46","endLine":277,"groupId":"16130","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"statusWithPidReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/b3c07753f3f39024d3f88b600bb43509164504.src","preCode":"  public void statusWithPidReturnsOnlineWithDetails() throws Exception {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(localPid).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"},{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","date":"2018-07-18 03:54:18","endLine":163,"groupId":"42184","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"statusWithWorkingDirectoryReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/16/d452bac6807946a8861a0444177bdc99bc5f7a.src","preCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/LocatorLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"N"}],"commitId":"667fbb4176c2f9bf8e399809b1c46f744486c3cd","commitMessage":"@@@GEODE-5256: Parameters Precedence in Start Server (#2013)\n\n* GEODE-5256: Parameters Precedence in Start Server\n\nConfiguration options set as part of the `start server` command now\ntake precedence over those configured in the `cache.xml` file.  the\n`cluster-configuration-service` and defaults.\n\n- Rebased against latest develop branch.\n- Removed unused `throws` clauses from tests.\n- Renamed `ServerLauncherIntegrationTest` to\n  `ServerLauncherBuilderIntegrationTest`.\n- Added tests for `ServerLauncher` and `CacheCreation`.\n- Added acceptance tests for `gfsh start server` command.\n- Fixed `ServerLauncher.parseArguments` method.  it was wrongly calling\n  `setMaxConnections` for other unrelated parameters (maxMessageCount. \n  messageTimeToLive and sockerBufferSize).\n- The `ServerLauncher` class now sets all the relevent startup\n  parameters during initialization within the static `parameters` field\n  on `CacheServerLauncher` class. The `CacheCreation` class.  in turn. \n  reconfigures the `Server` attributes using\n  `CacheServerLauncher.parameters` before starting the `AcceptorImpl`.\n\n* GEODE-5256: Changes requested by reviewers\n\n- Rebased against latest develop branch.\n- Replaced `Wait` references for `Awaitility` in related tests.\n- Class `CacheServerLauncher.Parameters` is now a top level class.\n- Added `@Deprecated` annotation and docs for `CacheServerLauncher`.\n- `StartServerCommandAcceptanceTest` now uses `FileUtils` instead of\n  manually opening and reading the log file.\n","date":"2018-07-25 05:44:46","modifiedFileCount":"17","status":"M","submitter":"Juan Jos? Ramos"},{"authorTime":"2018-08-08 04:37:52","codes":[{"authorDate":"2018-07-25 05:44:46","commitOrder":3,"curCode":"  public void statusWithPidReturnsOnlineWithDetails() throws UnknownHostException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(localPid).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","date":"2018-07-25 05:44:46","endLine":277,"groupId":"16130","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"statusWithPidReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/b3c07753f3f39024d3f88b600bb43509164504.src","preCode":"  public void statusWithPidReturnsOnlineWithDetails() throws UnknownHostException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(localPid).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"N"},{"authorDate":"2018-08-08 04:37:52","commitOrder":3,"curCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualToIgnoringCase(getWorkingDirectoryPath());\n  }\n","date":"2018-08-08 04:37:52","endLine":163,"groupId":"42184","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"statusWithWorkingDirectoryReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/34/aa1d52514fa93732ea35837b55d0a5487efa1b.src","preCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/LocatorLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"d5bdece4afa6849fbd017e282ef01c61ee2ec640","commitMessage":"@@@GEODE-5212: Fix launcher test failures (#2273)\n\n","date":"2018-08-08 04:37:52","modifiedFileCount":"1","status":"M","submitter":"Sai Boorlagadda"},{"authorTime":"2019-05-31 02:19:28","codes":[{"authorDate":"2018-07-25 05:44:46","commitOrder":4,"curCode":"  public void statusWithPidReturnsOnlineWithDetails() throws UnknownHostException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(localPid).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","date":"2018-07-25 05:44:46","endLine":277,"groupId":"16130","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"statusWithPidReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/81/b3c07753f3f39024d3f88b600bb43509164504.src","preCode":"  public void statusWithPidReturnsOnlineWithDetails() throws UnknownHostException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(localPid).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"N"},{"authorDate":"2019-05-31 02:19:28","commitOrder":4,"curCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost())\n        .isEqualTo(SocketCreator.getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualToIgnoringCase(getWorkingDirectoryPath());\n  }\n","date":"2019-06-14 01:22:26","endLine":165,"groupId":"30366","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"statusWithWorkingDirectoryReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4b/1ad85c8173e04708c0fe93e6c289187e1c2d11.src","preCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualToIgnoringCase(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/LocatorLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"03f8395e17dd24606c79a88ede2b5ff430be0f1e","commitMessage":"@@@GEODE-6183: Use SocketCreator.getLocalHost in LocatorLauncherRemoteIntegrationTest\n\nThe tests that were using InetAddress.getLostHost for assertions may\nfail depending on /etc/hosts configuration. This change should prevent\nthese failures.\n\nCo-authored-by: Michael Oleske <moleske@pivotal.io>\nCo-authored-by: Mark Hanson <mhanson@pivotal.io>\n","date":"2019-06-14 01:22:26","modifiedFileCount":"1","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-05-31 04:03:09","codes":[{"authorDate":"2019-05-31 04:03:09","commitOrder":5,"curCode":"  public void statusWithPidReturnsOnlineWithDetails() throws UnknownHostException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder()\n        .setPid(localPid)\n        .build()\n        .status();\n\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","date":"2019-06-14 01:22:26","endLine":300,"groupId":"16445","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"statusWithPidReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0c/28ebf5537682083d39b6c18c85d90201b641b3.src","preCode":"  public void statusWithPidReturnsOnlineWithDetails() throws UnknownHostException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder().setPid(localPid).build().status();\n\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"M"},{"authorDate":"2019-05-31 04:03:09","commitOrder":5,"curCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState = new Builder()\n        .setWorkingDirectory(getWorkingDirectoryPath())\n        .build()\n        .status();\n\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost()).isEqualTo(getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualToIgnoringCase(getWorkingDirectoryPath());\n  }\n","date":"2019-06-14 01:22:26","endLine":168,"groupId":"16445","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"statusWithWorkingDirectoryReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/70/97f40633a788822126fd24da266ded2cef9550.src","preCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState =\n        new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status();\n\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost())\n        .isEqualTo(SocketCreator.getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualToIgnoringCase(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/LocatorLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"}],"commitId":"de19a41571476ecb179c2e561d1f5d6bc8b1c1b5","commitMessage":"@@@GEODE-6183: Cleanup Launcher integration tests\n\n* Fixup IDE warnings\n* Reformat test code\n* Use SocketCreator.getLocalHost\n","date":"2019-06-14 01:22:26","modifiedFileCount":"23","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-10-12 04:23:54","codes":[{"authorDate":"2019-05-31 04:03:09","commitOrder":6,"curCode":"  public void statusWithPidReturnsOnlineWithDetails() throws UnknownHostException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder()\n        .setPid(localPid)\n        .build()\n        .status();\n\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","date":"2019-06-14 01:22:26","endLine":300,"groupId":"104311","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"statusWithPidReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0c/28ebf5537682083d39b6c18c85d90201b641b3.src","preCode":"  public void statusWithPidReturnsOnlineWithDetails() throws UnknownHostException {\n    givenRunningServer();\n\n    ServerState serverState = new Builder()\n        .setPid(localPid)\n        .build()\n        .status();\n\n    assertThat(serverState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(serverState.getHost()).isEqualTo(getLocalHost().getCanonicalHostName());\n    assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath());\n    assertThat(serverState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(serverState.getPid().intValue()).isEqualTo(localPid);\n    assertThat(serverState.getStatus()).isEqualTo(ONLINE);\n    assertThat(serverState.getUptime()).isGreaterThan(0);\n    assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/ServerLauncherLocalIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"N"},{"authorDate":"2019-10-12 04:23:54","commitOrder":6,"curCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator(withPort(0));\n\n    LocatorState locatorState = new Builder()\n        .setWorkingDirectory(getWorkingDirectoryPath())\n        .build()\n        .status();\n\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost()).isEqualTo(getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualToIgnoringCase(getWorkingDirectoryPath());\n  }\n","date":"2019-10-12 04:23:54","endLine":168,"groupId":"104311","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"statusWithWorkingDirectoryReturnsOnlineWithDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/aa/83c35b4c02788ded37a66b79c7bab37a93e686.src","preCode":"  public void statusWithWorkingDirectoryReturnsOnlineWithDetails() throws Exception {\n    givenRunningLocator();\n\n    LocatorState locatorState = new Builder()\n        .setWorkingDirectory(getWorkingDirectoryPath())\n        .build()\n        .status();\n\n    assertThat(locatorState.getClasspath()).isEqualTo(getClassPath());\n    assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion());\n    assertThat(locatorState.getHost()).isEqualTo(getLocalHost().getCanonicalHostName());\n    assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"));\n    assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments());\n    assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath());\n    assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName());\n    assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile());\n    assertThat(locatorState.getStatus()).isEqualTo(ONLINE);\n    assertThat(locatorState.getUptime()).isGreaterThan(0);\n    assertThat(locatorState.getWorkingDirectory()).isEqualToIgnoringCase(getWorkingDirectoryPath());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/distributed/LocatorLauncherRemoteIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"}],"commitId":"91cc1b664d8ac14afa2291498a9ffc611793f074","commitMessage":"@@@GEODE-6183: Increase await timeout for LocatorLauncher tests (#4139)\n\n* Increase await timeout because these tests are awaiting on forked\n  external processes\n* Set locator port to zero where possible to reduce BindExceptions\n* Include statusFailedWithException details for Errors to provide\n  debug info aobut the forked Process if the awaited assertion fails","date":"2019-10-12 04:23:54","modifiedFileCount":"7","status":"M","submitter":"Kirk Lund"}]
