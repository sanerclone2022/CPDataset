[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testExpiryPositive() throws Exception {\n    HARegionQueueAttributes haa = new HARegionQueueAttributes();\n    haa.setExpiryTime(1);\n\n    HARegionQueue regionQueue = createHARegionQueue(testName.getMethodName(), haa);\n    long start = System.currentTimeMillis();\n\n    regionQueue.put(new ConflatableObject(\"key\", \"value\", new EventID(new byte[] {1}, 1, 1), true,\n        testName.getMethodName()));\n\n    Map map = (Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName());\n    waitAtLeast(1000, start, () -> {\n      assertThat(map, is(Collections.emptyMap()));\n      assertThat(regionQueue.getRegion().keys(), is(Collections.emptySet()));\n    });\n  }\n","date":"2018-07-18 03:54:18","endLine":244,"groupId":"18727","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testExpiryPositive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/35/0a91e1a70dda8c7c907c2fe169c9eb53981dbf.src","preCode":"  public void testExpiryPositive() throws Exception {\n    HARegionQueueAttributes haa = new HARegionQueueAttributes();\n    haa.setExpiryTime(1);\n\n    HARegionQueue regionQueue = createHARegionQueue(testName.getMethodName(), haa);\n    long start = System.currentTimeMillis();\n\n    regionQueue.put(new ConflatableObject(\"key\", \"value\", new EventID(new byte[] {1}, 1, 1), true,\n        testName.getMethodName()));\n\n    Map map = (Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName());\n    waitAtLeast(1000, start, () -> {\n      assertThat(map, is(Collections.emptyMap()));\n      assertThat(regionQueue.getRegion().keys(), is(Collections.emptySet()));\n    });\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ha/HARegionQueueJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testExpiryPositiveWithConflation() throws Exception {\n    HARegionQueueAttributes haa = new HARegionQueueAttributes();\n    haa.setExpiryTime(1);\n\n    HARegionQueue regionQueue = createHARegionQueue(testName.getMethodName(), haa);\n    long start = System.currentTimeMillis();\n\n    regionQueue.put(new ConflatableObject(\"key\", \"value\", new EventID(new byte[] {1}, 1, 1), true,\n        testName.getMethodName()));\n\n    regionQueue.put(new ConflatableObject(\"key\", \"newValue\", new EventID(new byte[] {1}, 1, 2),\n        true, testName.getMethodName()));\n\n    assertThat(\n        \" Expected region size not to be zero since expiry time has not been exceeded but it is not so \",\n        !regionQueue.isEmpty(), is(true));\n    assertThat(\n        \" Expected the available id's size not  to be zero since expiry time has not  been exceeded but it is not so \",\n        !regionQueue.getAvalaibleIds().isEmpty(), is(true));\n    assertThat(\n        \" Expected conflation map size not  to be zero since expiry time has not been exceeded but it is not so \"\n            + ((Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName()))\n                .get(\"key\"),\n        ((Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName())).get(\"key\"),\n        not(sameInstance(null)));\n    assertThat(\n        \" Expected eventID map size not to be zero since expiry time has not been exceeded but it is not so \",\n        !regionQueue.getEventsMapForTesting().isEmpty(), is(true));\n\n    waitAtLeast(1000, start, () -> {\n      assertThat(regionQueue.getRegion().keys(), is(Collections.emptySet()));\n      assertThat(regionQueue.getAvalaibleIds(), is(Collections.emptySet()));\n      assertThat(regionQueue.getConflationMapForTesting().get(testName.getMethodName()),\n          is(Collections.emptyMap()));\n      assertThat(regionQueue.getEventsMapForTesting(), is(Collections.emptyMap()));\n    });\n  }\n","date":"2018-07-18 03:54:18","endLine":286,"groupId":"14453","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testExpiryPositiveWithConflation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/35/0a91e1a70dda8c7c907c2fe169c9eb53981dbf.src","preCode":"  public void testExpiryPositiveWithConflation() throws Exception {\n    HARegionQueueAttributes haa = new HARegionQueueAttributes();\n    haa.setExpiryTime(1);\n\n    HARegionQueue regionQueue = createHARegionQueue(testName.getMethodName(), haa);\n    long start = System.currentTimeMillis();\n\n    regionQueue.put(new ConflatableObject(\"key\", \"value\", new EventID(new byte[] {1}, 1, 1), true,\n        testName.getMethodName()));\n\n    regionQueue.put(new ConflatableObject(\"key\", \"newValue\", new EventID(new byte[] {1}, 1, 2),\n        true, testName.getMethodName()));\n\n    assertThat(\n        \" Expected region size not to be zero since expiry time has not been exceeded but it is not so \",\n        !regionQueue.isEmpty(), is(true));\n    assertThat(\n        \" Expected the available id's size not  to be zero since expiry time has not  been exceeded but it is not so \",\n        !regionQueue.getAvalaibleIds().isEmpty(), is(true));\n    assertThat(\n        \" Expected conflation map size not  to be zero since expiry time has not been exceeded but it is not so \"\n            + ((Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName()))\n                .get(\"key\"),\n        ((Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName())).get(\"key\"),\n        not(sameInstance(null)));\n    assertThat(\n        \" Expected eventID map size not to be zero since expiry time has not been exceeded but it is not so \",\n        !regionQueue.getEventsMapForTesting().isEmpty(), is(true));\n\n    waitAtLeast(1000, start, () -> {\n      assertThat(regionQueue.getRegion().keys(), is(Collections.emptySet()));\n      assertThat(regionQueue.getAvalaibleIds(), is(Collections.emptySet()));\n      assertThat(regionQueue.getConflationMapForTesting().get(testName.getMethodName()),\n          is(Collections.emptyMap()));\n      assertThat(regionQueue.getEventsMapForTesting(), is(Collections.emptyMap()));\n    });\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ha/HARegionQueueJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-08-02 02:33:38","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  public void testExpiryPositive() throws Exception {\n    HARegionQueueAttributes haa = new HARegionQueueAttributes();\n    haa.setExpiryTime(1);\n\n    HARegionQueue regionQueue = createHARegionQueue(testName.getMethodName(), haa);\n    long start = System.currentTimeMillis();\n\n    regionQueue.put(new ConflatableObject(\"key\", \"value\", new EventID(new byte[] {1}, 1, 1), true,\n        testName.getMethodName()));\n\n    Map map = (Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName());\n    waitAtLeast(1000, start, () -> {\n      assertThat(map, is(Collections.emptyMap()));\n      assertThat(regionQueue.getRegion().keys(), is(Collections.emptySet()));\n    });\n  }\n","date":"2018-07-18 03:54:18","endLine":244,"groupId":"104062","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testExpiryPositive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/35/0a91e1a70dda8c7c907c2fe169c9eb53981dbf.src","preCode":"  public void testExpiryPositive() throws Exception {\n    HARegionQueueAttributes haa = new HARegionQueueAttributes();\n    haa.setExpiryTime(1);\n\n    HARegionQueue regionQueue = createHARegionQueue(testName.getMethodName(), haa);\n    long start = System.currentTimeMillis();\n\n    regionQueue.put(new ConflatableObject(\"key\", \"value\", new EventID(new byte[] {1}, 1, 1), true,\n        testName.getMethodName()));\n\n    Map map = (Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName());\n    waitAtLeast(1000, start, () -> {\n      assertThat(map, is(Collections.emptyMap()));\n      assertThat(regionQueue.getRegion().keys(), is(Collections.emptySet()));\n    });\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ha/HARegionQueueJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"N"},{"authorDate":"2018-08-02 02:33:38","commitOrder":2,"curCode":"  public void testExpiryPositiveWithConflation() throws Exception {\n    HARegionQueueAttributes haa = new HARegionQueueAttributes();\n    haa.setExpiryTime(1);\n\n    HARegionQueue regionQueue = createHARegionQueue(testName.getMethodName(), haa);\n    long start = System.currentTimeMillis();\n\n    regionQueue.put(new ConflatableObject(\"key\", \"value\", new EventID(new byte[] {1}, 1, 1), true,\n        testName.getMethodName()));\n\n    regionQueue.put(new ConflatableObject(\"key\", \"newValue\", new EventID(new byte[] {1}, 1, 2),\n        true, testName.getMethodName()));\n\n    assertThat(\n        \" Expected region size not to be zero since expiry time has not been exceeded but it is not so \",\n        !regionQueue.isEmpty(), is(true));\n    assertThat(\n        \" Expected the available id's size not  to be zero since expiry time has not  been exceeded but it is not so \",\n        !regionQueue.getAvailableIds().isEmpty(), is(true));\n    assertThat(\n        \" Expected conflation map size not  to be zero since expiry time has not been exceeded but it is not so \"\n            + ((Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName()))\n                .get(\"key\"),\n        ((Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName())).get(\"key\"),\n        not(sameInstance(null)));\n    assertThat(\n        \" Expected eventID map size not to be zero since expiry time has not been exceeded but it is not so \",\n        !regionQueue.getEventsMapForTesting().isEmpty(), is(true));\n\n    waitAtLeast(1000, start, () -> {\n      assertThat(regionQueue.getRegion().keys(), is(Collections.emptySet()));\n      assertThat(regionQueue.getAvailableIds(), is(Collections.emptySet()));\n      assertThat(regionQueue.getConflationMapForTesting().get(testName.getMethodName()),\n          is(Collections.emptyMap()));\n      assertThat(regionQueue.getEventsMapForTesting(), is(Collections.emptyMap()));\n    });\n  }\n","date":"2018-08-04 00:36:41","endLine":305,"groupId":"104062","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testExpiryPositiveWithConflation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/9e/fb7ce708b960dd1f6588aded3bf75809ae917d.src","preCode":"  public void testExpiryPositiveWithConflation() throws Exception {\n    HARegionQueueAttributes haa = new HARegionQueueAttributes();\n    haa.setExpiryTime(1);\n\n    HARegionQueue regionQueue = createHARegionQueue(testName.getMethodName(), haa);\n    long start = System.currentTimeMillis();\n\n    regionQueue.put(new ConflatableObject(\"key\", \"value\", new EventID(new byte[] {1}, 1, 1), true,\n        testName.getMethodName()));\n\n    regionQueue.put(new ConflatableObject(\"key\", \"newValue\", new EventID(new byte[] {1}, 1, 2),\n        true, testName.getMethodName()));\n\n    assertThat(\n        \" Expected region size not to be zero since expiry time has not been exceeded but it is not so \",\n        !regionQueue.isEmpty(), is(true));\n    assertThat(\n        \" Expected the available id's size not  to be zero since expiry time has not  been exceeded but it is not so \",\n        !regionQueue.getAvalaibleIds().isEmpty(), is(true));\n    assertThat(\n        \" Expected conflation map size not  to be zero since expiry time has not been exceeded but it is not so \"\n            + ((Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName()))\n                .get(\"key\"),\n        ((Map) regionQueue.getConflationMapForTesting().get(testName.getMethodName())).get(\"key\"),\n        not(sameInstance(null)));\n    assertThat(\n        \" Expected eventID map size not to be zero since expiry time has not been exceeded but it is not so \",\n        !regionQueue.getEventsMapForTesting().isEmpty(), is(true));\n\n    waitAtLeast(1000, start, () -> {\n      assertThat(regionQueue.getRegion().keys(), is(Collections.emptySet()));\n      assertThat(regionQueue.getAvalaibleIds(), is(Collections.emptySet()));\n      assertThat(regionQueue.getConflationMapForTesting().get(testName.getMethodName()),\n          is(Collections.emptyMap()));\n      assertThat(regionQueue.getEventsMapForTesting(), is(Collections.emptyMap()));\n    });\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/internal/cache/ha/HARegionQueueJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"M"}],"commitId":"acb50f94157c25ada4163771758115a1cb108516","commitMessage":"@@@GEODE-5495: Destroy available ID before decrement in updateHAContainer()\n\nCo-authored-by: Ryan McMahon <rmcmahon@pivotal.io>\nCo-authored-by: Lynn Hughes-Godfrey <lhughesgodfrey@pivotal.io>\n","date":"2018-08-04 00:36:41","modifiedFileCount":"5","status":"M","submitter":"Ryan McMahon"}]
