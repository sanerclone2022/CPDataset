[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void increaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 3;\n    int secondTtlSeconds = 8;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(30, SECONDS).until(() -> region.isDestroyed());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos))\n        .isGreaterThanOrEqualTo(secondTtlSeconds);\n  }\n","date":"2018-07-18 03:54:18","endLine":77,"groupId":"35322","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"increaseRegionTtl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6d/b7b5699bb975c66120c7de042d58f6d9c37be4.src","preCode":"  public void increaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 3;\n    int secondTtlSeconds = 8;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(30, SECONDS).until(() -> region.isDestroyed());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos))\n        .isGreaterThanOrEqualTo(secondTtlSeconds);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/RegionExpirationIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void decreaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 5;\n    int secondTtlSeconds = 1;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(10, SECONDS).until(() -> assertThat(region.isDestroyed()).isTrue());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos)).isLessThan(firstTtlSeconds);\n  }\n","date":"2018-07-18 03:54:18","endLine":94,"groupId":"35322","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"decreaseRegionTtl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6d/b7b5699bb975c66120c7de042d58f6d9c37be4.src","preCode":"  public void decreaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 5;\n    int secondTtlSeconds = 1;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(10, SECONDS).until(() -> assertThat(region.isDestroyed()).isTrue());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos)).isLessThan(firstTtlSeconds);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/RegionExpirationIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2018-08-17 08:13:57","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":2,"curCode":"  public void increaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 3;\n    int secondTtlSeconds = 8;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(30, SECONDS).until(() -> region.isDestroyed());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos))\n        .isGreaterThanOrEqualTo(secondTtlSeconds);\n  }\n","date":"2018-07-18 03:54:18","endLine":77,"groupId":"35322","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"increaseRegionTtl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/6d/b7b5699bb975c66120c7de042d58f6d9c37be4.src","preCode":"  public void increaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 3;\n    int secondTtlSeconds = 8;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(30, SECONDS).until(() -> region.isDestroyed());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos))\n        .isGreaterThanOrEqualTo(secondTtlSeconds);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/RegionExpirationIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"},{"authorDate":"2018-08-17 08:13:57","commitOrder":2,"curCode":"  public void decreaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 5;\n    int secondTtlSeconds = 1;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(10, SECONDS).untilAsserted(() -> assertThat(region.isDestroyed()).isTrue());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos)).isLessThan(firstTtlSeconds);\n  }\n","date":"2018-08-18 01:08:42","endLine":94,"groupId":"35322","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"decreaseRegionTtl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/46/bc02b91013ffd985cae71e979500656fc4e789.src","preCode":"  public void decreaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 5;\n    int secondTtlSeconds = 1;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(10, SECONDS).until(() -> assertThat(region.isDestroyed()).isTrue());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos)).isLessThan(firstTtlSeconds);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/RegionExpirationIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"f3f255a234eac78b63dc4932e1d725c20fe75706","commitMessage":"@@@GEODE-5593 Update test dependencies\n\nUpdated the following dependencies:\n\nassertj \t3.8.0 => 3.10.0\nawaitility \t2.0.0 => 3.1.1\nbcel\t\t6.0 => 6.2\ncglib\t\t3.2.4 => 3.2.7\nderby\t\t10.13.1.1 => 10.14.2.0\nhttpclient\t4.5.3 => 4.5.6\nbcel\t\t6.0 => 6.2\ncglib\t\t3.2.4 => 3.2.7\nderby\t\t10.13.1.1 => 10.14.2.0\nhttpclient\t4.5.3 => 4.5.6\nhttpcore\t4.4.6 => 4.4.10\njavax.mail\t1.4.6 => 1.6.1\njavax.persistence 2.1.1 => 2.2.0\njmock\t\t2.8.2 => 2.8.4\njson-path\t2.2.0 => 2.4.0\njunit-quickcheck 0.7 => 0.8.1\nmockito\t\t2.8.9 => 2.19.1\npowermock\t1.7.1 => 2.0.0-beta.5\nselenimum\t3.9.1 => 3.13.0\nsystem-rules\t1.17.1 => 1.18.0\nxerces\t\t2.11.0 => 2.12.0\n\nUpdated some tests due to API changes. Typically this meant\nconverting from until() to untilAsserted().  In other cases\nyou aren't allowed to throw undeclared check exceptions.\n\nUpdated and corrected powermock usage in a few places.\n\nDid not update junit-params since too many places in our\ntests use the test method name for region name (and the\ntest method name would not have been a legal region\nname).  This is an opportunity for future refactoring.\n","date":"2018-08-18 01:08:42","modifiedFileCount":"182","status":"M","submitter":"Anthony Baker"},{"authorTime":"2018-09-11 07:56:09","codes":[{"authorDate":"2018-09-11 07:56:09","commitOrder":3,"curCode":"  public void increaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 3;\n    int secondTtlSeconds = 8;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    regionFactory.setDataPolicy(dataPolicy);\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(30, SECONDS).until(() -> region.isDestroyed());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos))\n        .isGreaterThanOrEqualTo(secondTtlSeconds);\n  }\n","date":"2018-09-14 01:55:15","endLine":89,"groupId":"18116","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"increaseRegionTtl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/64/b39c269a0615323b228f155cdd889d48e7afe0.src","preCode":"  public void increaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 3;\n    int secondTtlSeconds = 8;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(30, SECONDS).until(() -> region.isDestroyed());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos))\n        .isGreaterThanOrEqualTo(secondTtlSeconds);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/RegionExpirationIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2018-09-11 07:56:09","commitOrder":3,"curCode":"  public void decreaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 5;\n    int secondTtlSeconds = 1;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    regionFactory.setDataPolicy(dataPolicy);\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(10, SECONDS).untilAsserted(() -> assertThat(region.isDestroyed()).isTrue());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos)).isLessThan(firstTtlSeconds);\n  }\n","date":"2018-09-14 01:55:15","endLine":107,"groupId":"18116","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"decreaseRegionTtl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/64/b39c269a0615323b228f155cdd889d48e7afe0.src","preCode":"  public void decreaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 5;\n    int secondTtlSeconds = 1;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(10, SECONDS).untilAsserted(() -> assertThat(region.isDestroyed()).isTrue());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos)).isLessThan(firstTtlSeconds);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/RegionExpirationIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"b7df38854cbe8215b5c11ae0ae62eeec6394612c","commitMessage":"@@@GEODE-5094: Replace flaky expiration with prexisting better one\n\nProxyJUnitTest.testExpiration used small timeouts and was flaky. It\nlooks like it was probably a near duplicate of a test that was already\nrefactored into RegionExpirationIntegrationTest. Removing the test and\nparameterizing RegionExpirationIntegrationTest instead.\n","date":"2018-09-14 01:55:15","modifiedFileCount":"2","status":"M","submitter":"Dan Smith"},{"authorTime":"2018-10-05 06:38:58","codes":[{"authorDate":"2018-10-05 06:38:58","commitOrder":4,"curCode":"  public void increaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 3;\n    int secondTtlSeconds = 8;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    regionFactory.setDataPolicy(dataPolicy);\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().until(() -> region.isDestroyed());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos))\n        .isGreaterThanOrEqualTo(secondTtlSeconds);\n  }\n","date":"2018-10-19 08:01:02","endLine":89,"groupId":"104404","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"increaseRegionTtl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/44/542139926ba7a7812f79a930cff5798dd8900e.src","preCode":"  public void increaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 3;\n    int secondTtlSeconds = 8;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    regionFactory.setDataPolicy(dataPolicy);\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(30, SECONDS).until(() -> region.isDestroyed());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos))\n        .isGreaterThanOrEqualTo(secondTtlSeconds);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/RegionExpirationIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2018-10-05 06:38:58","commitOrder":4,"curCode":"  public void decreaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 5;\n    int secondTtlSeconds = 1;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    regionFactory.setDataPolicy(dataPolicy);\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().untilAsserted(() -> assertThat(region.isDestroyed()).isTrue());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos)).isLessThan(firstTtlSeconds);\n  }\n","date":"2018-10-19 08:01:02","endLine":107,"groupId":"104404","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"decreaseRegionTtl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/44/542139926ba7a7812f79a930cff5798dd8900e.src","preCode":"  public void decreaseRegionTtl() throws Exception {\n    int firstTtlSeconds = 5;\n    int secondTtlSeconds = 1;\n    long startNanos = nanoTime();\n\n    RegionFactory<String, String> regionFactory = cache.createRegionFactory(LOCAL);\n    regionFactory.setRegionTimeToLive(new ExpirationAttributes(firstTtlSeconds, DESTROY));\n    regionFactory.setDataPolicy(dataPolicy);\n    Region<String, String> region = regionFactory.create(regionName);\n\n    region.getAttributesMutator()\n        .setRegionTimeToLive(new ExpirationAttributes(secondTtlSeconds, DESTROY));\n\n    await().atMost(10, SECONDS).untilAsserted(() -> assertThat(region.isDestroyed()).isTrue());\n    assertThat(NANOSECONDS.toSeconds(nanoTime() - startNanos)).isLessThan(firstTtlSeconds);\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/RegionExpirationIntegrationTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"239c532f8338c9d8e9bb8062fab9fadd3376ec73","commitMessage":"@@@GEODE-5424: Changing all awaitility calls to use consistent timings\n\nWe have a lot of Awaitility calls in our tests. Each test was picking\nits own timeout. That lead to some tests picking too small of a timeout\nand failing spuriously.\n\nWith this change.  all tests will use a new factory. \nGeodeAwaility.await().  rather than Awaitility.await(). This new factory\nsets a default timeout of 5 minutes. It also sets a sensible pollDelay\nand pollInterval.\n\nThe custom timeouts used in all tests have been removed.  in favor of\nthis new factory.  except for a couple of tests that had waits greater\nthan 5 minutes.\n","date":"2018-10-19 08:01:02","modifiedFileCount":"334","status":"M","submitter":"Dan Smith"}]
