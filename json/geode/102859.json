[{"authorTime":"2017-07-11 03:30:09","codes":[{"authorDate":"2017-07-11 03:30:09","commitOrder":1,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(isNull());\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","date":"2017-08-12 01:00:16","endLine":277,"groupId":"28666","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2b/cd994d4d14888adfdf68abef5acbc068b6fea8.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(isNull());\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"B"},{"authorDate":"2017-07-11 03:30:09","commitOrder":1,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","date":"2017-08-12 01:00:16","endLine":292,"groupId":"37348","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2b/cd994d4d14888adfdf68abef5acbc068b6fea8.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"B"}],"commitId":"894f3ee710e500c83f06be660b852d389cbb94cb","commitMessage":"@@@GEODE-3413: overhaul launcher and process classes and tests\n\nThis is primarily an overall of all ServerLauncher and LocatorLauncher\ntests and org.apache.geode.internal.process tests. The main classes in\norg.apachage.geode.internal.process package are also cleaned up.\n\nIn addition.  several bugs involving these classes and tests are fixed.\n\nHere is the complete list of tickets that are resolved in this overhaul:\n\n* GEODE-1229: LocatorLauncherRemoteJUnitTest.testStartOverwritesStalePidFile\n* GEODE-2791: LocatorLauncherAssemblyIntegrationTest.testLocatorStopsWhenJmxPortIsNonZero fails intermittently with AssertionError\n* GEODE-1308: CI failure: LocatorLauncherTest.testSetBindAddressToNonLocalHost\n* GEODE-1309: CI failure: ServerLauncherTest.testSetServerBindAddressToNonLocalHost\n* GEODE-3193: locator pid file is removed even if there was a problem while shutting down\n* GEODE-3413: Overhaul launcher tests and process tests\n* GEODE-3414: Cleanup org.apache.geode.internal.process package\n\nNote I moved all useful tests from LocatorLauncherAssemblyIntegrationTest\ninto the other launcher tests in geode-core.\n","date":"2017-08-12 01:00:16","modifiedFileCount":"59","status":"B","submitter":"Kirk Lund"},{"authorTime":"2017-07-11 03:30:09","codes":[{"authorDate":"2017-08-29 06:04:52","commitOrder":2,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    \r\n    verify(cacheServer, times(1)).setBindAddress(InetAddress.getLocalHost().getCanonicalHostName());\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","date":"2017-08-29 06:04:52","endLine":278,"groupId":"28666","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/69/6cc9b4c9693065b09453d92373dff5297ca48f.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(isNull());\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"},{"authorDate":"2017-07-11 03:30:09","commitOrder":2,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","date":"2017-08-12 01:00:16","endLine":292,"groupId":"37348","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2b/cd994d4d14888adfdf68abef5acbc068b6fea8.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"N"}],"commitId":"4a5c56eb8edd277b258e916212d41bec0b0e7b83","commitMessage":"@@@GEODE-3277: Fix test failure caused by ServerState changes\n","date":"2017-08-29 06:04:52","modifiedFileCount":"1","status":"M","submitter":"Ken Howe"},{"authorTime":"2017-07-11 03:30:09","codes":[{"authorDate":"2017-08-29 06:51:47","commitOrder":3,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(anyString());\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","date":"2017-08-29 06:53:02","endLine":276,"groupId":"28666","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/61/d0596e49f8b46931920de669b7ed948ecaadd7.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    \r\n    verify(cacheServer, times(1)).setBindAddress(InetAddress.getLocalHost().getCanonicalHostName());\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2017-07-11 03:30:09","commitOrder":3,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","date":"2017-08-12 01:00:16","endLine":292,"groupId":"37348","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2b/cd994d4d14888adfdf68abef5acbc068b6fea8.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"N"}],"commitId":"73a847a4b22239414db0ae9d973673f6a03fdcf0","commitMessage":"@@@GEODE-3277: Fix test failure caused by ServerState changes\n","date":"2017-08-29 06:53:02","modifiedFileCount":"1","status":"M","submitter":"Ken Howe"},{"authorTime":"2017-07-11 03:30:09","codes":[{"authorDate":"2017-08-30 01:31:46","commitOrder":4,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(isNull());\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","date":"2017-08-30 01:38:58","endLine":277,"groupId":"28666","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2b/cd994d4d14888adfdf68abef5acbc068b6fea8.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(anyString());\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"},{"authorDate":"2017-07-11 03:30:09","commitOrder":4,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","date":"2017-08-12 01:00:16","endLine":292,"groupId":"37348","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2b/cd994d4d14888adfdf68abef5acbc068b6fea8.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"N"}],"commitId":"4ac5e65f79ca7383cc7274c65c9a435d124b5d75","commitMessage":"@@@GEODE-3277: revert changes to Launcher bind address and State constructors\n\nThis reverts commit 73a847a4b22239414db0ae9d973673f6a03fdcf0.\nThis reverts commit 4a5c56eb8edd277b258e916212d41bec0b0e7b83.\nThis reverts commit f41ca9d7d2fa7c045ec439df9478335233f1d95e.\n","date":"2017-08-30 01:38:58","modifiedFileCount":"9","status":"M","submitter":"Ken Howe"},{"authorTime":"2017-07-11 03:30:09","codes":[{"authorDate":"2017-09-01 00:46:27","commitOrder":5,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(null);\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","date":"2017-09-09 04:55:25","endLine":276,"groupId":"28666","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/f1/762d0411055e709fa6aa2ea8e1d1649dd2760f.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(isNull());\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2017-07-11 03:30:09","commitOrder":5,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","date":"2017-08-12 01:00:16","endLine":292,"groupId":"37348","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2b/cd994d4d14888adfdf68abef5acbc068b6fea8.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"N"}],"commitId":"70bff4b8a601b4d892436aca179e69bf8ae78cee","commitMessage":"@@@GEODE-3277: Fix error path constructors of Launcher inner State classess\n\nUpdated tests for changes in the error constructors for ServerState and\nLocatorState.\n\nMinor spelling corrections.\n\nThis reintroduces changes that were reverted due to merge conflicts with\nthe previous state of the develop branch\n","date":"2017-09-09 04:55:25","modifiedFileCount":"10","status":"M","submitter":"Ken Howe"},{"authorTime":"2018-07-25 05:44:46","codes":[{"authorDate":"2018-07-25 05:44:46","commitOrder":6,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235)\n        .setMaxThreads(10).setMaxConnections(100).setMaxMessageCount(5).setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048).setHostNameForClients(\"hostName4Clients\").build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(null);\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).setMaxThreads(10);\n    verify(cacheServer, times(1)).setMaxConnections(100);\n    verify(cacheServer, times(1)).setMaximumMessageCount(5);\n    verify(cacheServer, times(1)).setMessageTimeToLive(10000);\n    verify(cacheServer, times(1)).setSocketBufferSize(2048);\n    verify(cacheServer, times(1)).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer, times(1)).start();\n  }\n","date":"2018-07-25 05:44:46","endLine":301,"groupId":"37349","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5e/f3d41f02def46aa3127b258e313029c6d5d916.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(null);\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"M"},{"authorDate":"2018-07-25 05:44:46","commitOrder":6,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).setMaxThreads(anyInt());\n    verify(cacheServer, times(0)).setMaxConnections(anyInt());\n    verify(cacheServer, times(0)).setMaximumMessageCount(anyInt());\n    verify(cacheServer, times(0)).setMessageTimeToLive(anyInt());\n    verify(cacheServer, times(0)).setSocketBufferSize(anyInt());\n    verify(cacheServer, times(0)).setHostnameForClients(anyString());\n    verify(cacheServer, times(0)).start();\n  }\n","date":"2018-07-25 05:44:46","endLine":322,"groupId":"37348","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5e/f3d41f02def46aa3127b258e313029c6d5d916.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws Exception {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"M"}],"commitId":"667fbb4176c2f9bf8e399809b1c46f744486c3cd","commitMessage":"@@@GEODE-5256: Parameters Precedence in Start Server (#2013)\n\n* GEODE-5256: Parameters Precedence in Start Server\n\nConfiguration options set as part of the `start server` command now\ntake precedence over those configured in the `cache.xml` file.  the\n`cluster-configuration-service` and defaults.\n\n- Rebased against latest develop branch.\n- Removed unused `throws` clauses from tests.\n- Renamed `ServerLauncherIntegrationTest` to\n  `ServerLauncherBuilderIntegrationTest`.\n- Added tests for `ServerLauncher` and `CacheCreation`.\n- Added acceptance tests for `gfsh start server` command.\n- Fixed `ServerLauncher.parseArguments` method.  it was wrongly calling\n  `setMaxConnections` for other unrelated parameters (maxMessageCount. \n  messageTimeToLive and sockerBufferSize).\n- The `ServerLauncher` class now sets all the relevent startup\n  parameters during initialization within the static `parameters` field\n  on `CacheServerLauncher` class. The `CacheCreation` class.  in turn. \n  reconfigures the `Server` attributes using\n  `CacheServerLauncher.parameters` before starting the `AcceptorImpl`.\n\n* GEODE-5256: Changes requested by reviewers\n\n- Rebased against latest develop branch.\n- Replaced `Wait` references for `Awaitility` in related tests.\n- Class `CacheServerLauncher.Parameters` is now a top level class.\n- Added `@Deprecated` annotation and docs for `CacheServerLauncher`.\n- `StartServerCommandAcceptanceTest` now uses `FileUtils` instead of\n  manually opening and reading the log file.\n","date":"2018-07-25 05:44:46","modifiedFileCount":"17","status":"M","submitter":"Juan Jos? Ramos"},{"authorTime":"2019-07-24 08:12:02","codes":[{"authorDate":"2019-07-24 08:12:02","commitOrder":7,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235)\n        .setMaxThreads(10).setMaxConnections(100).setMaxMessageCount(5).setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048).setHostNameForClients(\"hostName4Clients\").build();\n\n    final InternalResourceManager internalResourceManager = mock(InternalResourceManager.class);\n    when(cache.getResourceManager()).thenReturn(internalResourceManager);\n\n    launcher.startCacheServer(cache, 0L);\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","date":"2019-07-24 08:12:02","endLine":307,"groupId":"8865","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/73/4e98880687b25e3a55b7ca233a1339674db570.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235)\n        .setMaxThreads(10).setMaxConnections(100).setMaxMessageCount(5).setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048).setHostNameForClients(\"hostName4Clients\").build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(1)).setBindAddress(null);\n    verify(cacheServer, times(1)).setPort(eq(11235));\n    verify(cacheServer, times(1)).setMaxThreads(10);\n    verify(cacheServer, times(1)).setMaxConnections(100);\n    verify(cacheServer, times(1)).setMaximumMessageCount(5);\n    verify(cacheServer, times(1)).setMessageTimeToLive(10000);\n    verify(cacheServer, times(1)).setSocketBufferSize(2048);\n    verify(cacheServer, times(1)).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer, times(1)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"},{"authorDate":"2019-07-24 08:12:02","commitOrder":7,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    final InternalResourceManager internalResourceManager = mock(InternalResourceManager.class);\n    when(cache.getResourceManager()).thenReturn(internalResourceManager);\n\n    launcher.startCacheServer(cache, 0L);\n\n    verifyZeroInteractions(cacheServer);\n  }\n","date":"2019-07-24 08:12:02","endLine":323,"groupId":"0","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/73/4e98880687b25e3a55b7ca233a1339674db570.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    launcher.startCacheServer(cache);\n\n    verify(cacheServer, times(0)).setBindAddress(anyString());\n    verify(cacheServer, times(0)).setPort(anyInt());\n    verify(cacheServer, times(0)).setMaxThreads(anyInt());\n    verify(cacheServer, times(0)).setMaxConnections(anyInt());\n    verify(cacheServer, times(0)).setMaximumMessageCount(anyInt());\n    verify(cacheServer, times(0)).setMessageTimeToLive(anyInt());\n    verify(cacheServer, times(0)).setSocketBufferSize(anyInt());\n    verify(cacheServer, times(0)).setHostnameForClients(anyString());\n    verify(cacheServer, times(0)).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"}],"commitId":"f9686809fdb95dbd22fee00165e874685df8024e","commitMessage":"@@@GEODE-6918: Adding log message to denote end of startup (#3824)\n\nAdded a log message to InternalResourceManager to denote the end of startup\nAdded new test class to test the message occurs.\n\nCo-authored-by: Kirk Lund <klund@pivotal.io>\nCo-authored-by: Aaron Lindsey <alindsey@pivotal.io>\nCo-authored-by: Michael Oleske <moleske@pivotal.io>\nCo-authored-by: Dale Emery <demery@pivotal.io>\n","date":"2019-07-24 08:12:02","modifiedFileCount":"11","status":"M","submitter":"mhansonp"},{"authorTime":"2019-08-08 02:05:23","codes":[{"authorDate":"2019-08-08 02:05:23","commitOrder":8,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setServerBindAddress(null)\n        .setServerPort(11235)\n        .setMaxThreads(10)\n        .setMaxConnections(100)\n        .setMaxMessageCount(5)\n        .setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048)\n        .setHostNameForClients(\"hostName4Clients\")\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","date":"2019-08-08 02:05:23","endLine":293,"groupId":"8865","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/83/3b6e7192ee97722e28ddc8ae912051c811bc6b.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235)\n        .setMaxThreads(10).setMaxConnections(100).setMaxMessageCount(5).setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048).setHostNameForClients(\"hostName4Clients\").build();\n\n    final InternalResourceManager internalResourceManager = mock(InternalResourceManager.class);\n    when(cache.getResourceManager()).thenReturn(internalResourceManager);\n\n    launcher.startCacheServer(cache, 0L);\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2019-08-08 02:05:23","commitOrder":8,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setDisableDefaultServer(true)\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verifyZeroInteractions(cacheServer);\n  }\n","date":"2019-08-08 02:05:23","endLine":310,"groupId":"8866","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/83/3b6e7192ee97722e28ddc8ae912051c811bc6b.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    final InternalResourceManager internalResourceManager = mock(InternalResourceManager.class);\n    when(cache.getResourceManager()).thenReturn(internalResourceManager);\n\n    launcher.startCacheServer(cache, 0L);\n\n    verifyZeroInteractions(cacheServer);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"}],"commitId":"d9a9e30275ae21e33212a48ca72762bacdf37d67","commitMessage":"@@@Merge pull request #3878 from aaronlindsey/server-online-uses-startup-tasks\n\nGEODE-7042: Wait until all startup tasks complete to update server status as \"online\"","date":"2019-08-08 02:05:23","modifiedFileCount":"15","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-08-08 02:17:02","codes":[{"authorDate":"2019-08-08 02:17:02","commitOrder":9,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235)\n        .setMaxThreads(10).setMaxConnections(100).setMaxMessageCount(5).setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048).setHostNameForClients(\"hostName4Clients\").build();\n\n    final InternalResourceManager internalResourceManager = mock(InternalResourceManager.class);\n    when(cache.getResourceManager()).thenReturn(internalResourceManager);\n\n    launcher.startCacheServer(cache, 0L);\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","date":"2019-08-08 02:17:02","endLine":307,"groupId":"8865","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/73/4e98880687b25e3a55b7ca233a1339674db570.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setServerBindAddress(null)\n        .setServerPort(11235)\n        .setMaxThreads(10)\n        .setMaxConnections(100)\n        .setMaxMessageCount(5)\n        .setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048)\n        .setHostNameForClients(\"hostName4Clients\")\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"},{"authorDate":"2019-08-08 02:17:02","commitOrder":9,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    final InternalResourceManager internalResourceManager = mock(InternalResourceManager.class);\n    when(cache.getResourceManager()).thenReturn(internalResourceManager);\n\n    launcher.startCacheServer(cache, 0L);\n\n    verifyZeroInteractions(cacheServer);\n  }\n","date":"2019-08-08 02:17:02","endLine":323,"groupId":"0","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/73/4e98880687b25e3a55b7ca233a1339674db570.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setDisableDefaultServer(true)\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verifyZeroInteractions(cacheServer);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"}],"commitId":"afc95dbde5dbc24a109843e815fc806910bae734","commitMessage":"@@@Revert \"Merge pull request #3878 from aaronlindsey/server-online-uses-startup-tasks\"\n\nThis reverts commit d9a9e30275ae21e33212a48ca72762bacdf37d67.  reversing\nchanges made to f0db209e0508a313e1095a99d3e6009c1d229ce0.\n","date":"2019-08-08 02:17:02","modifiedFileCount":"15","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-07-31 02:01:53","codes":[{"authorDate":"2019-07-31 02:01:53","commitOrder":10,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setServerBindAddress(null)\n        .setServerPort(11235)\n        .setMaxThreads(10)\n        .setMaxConnections(100)\n        .setMaxMessageCount(5)\n        .setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048)\n        .setHostNameForClients(\"hostName4Clients\")\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","date":"2019-08-08 03:05:10","endLine":293,"groupId":"8865","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/83/3b6e7192ee97722e28ddc8ae912051c811bc6b.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setServerBindAddress(null).setServerPort(11235)\n        .setMaxThreads(10).setMaxConnections(100).setMaxMessageCount(5).setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048).setHostNameForClients(\"hostName4Clients\").build();\n\n    final InternalResourceManager internalResourceManager = mock(InternalResourceManager.class);\n    when(cache.getResourceManager()).thenReturn(internalResourceManager);\n\n    launcher.startCacheServer(cache, 0L);\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2019-07-31 02:01:53","commitOrder":10,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setDisableDefaultServer(true)\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verifyZeroInteractions(cacheServer);\n  }\n","date":"2019-08-08 03:05:10","endLine":310,"groupId":"8866","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/83/3b6e7192ee97722e28ddc8ae912051c811bc6b.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws IOException {\n    Cache cache = mock(Cache.class, \"Cache\");\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder().setDisableDefaultServer(true).build();\n\n    final InternalResourceManager internalResourceManager = mock(InternalResourceManager.class);\n    when(cache.getResourceManager()).thenReturn(internalResourceManager);\n\n    launcher.startCacheServer(cache, 0L);\n\n    verifyZeroInteractions(cacheServer);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"}],"commitId":"ab5c2df147e18a3f9750f8be9d40c368b5e9d920","commitMessage":"@@@GEODE-7042: Set server status to \"online\" after all startup tasks complete (#3878)\n\nServerLauncher start will now wait until all asynchronous startup tasks\ncomplete to update server status as \"online\".\n\nPreviously.  the server status was set to \"online\" before all of the\nstartup tasks had completed. This provided users with incorrect facts\nabout the system and its availability. This commit changes the behavior\nof ServerLauncher.start() so that it waits for all of the asynchronous\nstartup tasks to complete before returning the \"online\" status. The GFSH\n\"start server\" command relies on this status.  so this also has the\neffect of making the command wait for all startup tasks to complete\nbefore returning.\n\n* ServerLauncher.start() waits for startup tasks to complete\n* Improve testability of ServerLauncher\n* Extract ControllableProcess interface\n* Change InternalResourceManager support for asynchronous startup tasks\n* Move the responsibility for chaining the completion and exception\nactions of startup tasks to ServerLauncher\n\nCo-authored-by: Aaron Lindsey <alindsey@pivotal.io>\nCo-authored-by: Kirk Lund <klund@apache.org>\nCo-authored-by: Dale Emery <demery@pivotal.io>\n","date":"2019-08-08 03:05:10","modifiedFileCount":"15","status":"M","submitter":"Aaron Lindsey"},{"authorTime":"2019-10-15 00:39:32","codes":[{"authorDate":"2019-07-31 02:01:53","commitOrder":11,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setServerBindAddress(null)\n        .setServerPort(11235)\n        .setMaxThreads(10)\n        .setMaxConnections(100)\n        .setMaxMessageCount(5)\n        .setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048)\n        .setHostNameForClients(\"hostName4Clients\")\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","date":"2019-08-08 03:05:10","endLine":293,"groupId":"8865","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/83/3b6e7192ee97722e28ddc8ae912051c811bc6b.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setServerBindAddress(null)\n        .setServerPort(11235)\n        .setMaxThreads(10)\n        .setMaxConnections(100)\n        .setMaxMessageCount(5)\n        .setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048)\n        .setHostNameForClients(\"hostName4Clients\")\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"N"},{"authorDate":"2019-10-15 00:39:32","commitOrder":11,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setDisableDefaultServer(true)\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verifyZeroInteractions(cacheServer);\n  }\n","date":"2019-10-15 00:39:32","endLine":310,"groupId":"8866","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b0/245e6ae042999d2501fee111501a82cf1dc5c9.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setDisableDefaultServer(true)\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verifyZeroInteractions(cacheServer);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"}],"commitId":"94a71c254e17af47a3d0f4f42bf5a695d5c37743","commitMessage":"@@@GEODE-7189: Disable default server in startWaitsForStartupTasksToComp? (#4150)\n\n* setDisableDefaultServer true to skip AvailablePort check\n* Move startupTasks and when to top of test method","date":"2019-10-15 00:39:32","modifiedFileCount":"1","status":"M","submitter":"Kirk Lund"},{"authorTime":"2020-04-25 00:20:21","codes":[{"authorDate":"2019-07-31 02:01:53","commitOrder":12,"curCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setServerBindAddress(null)\n        .setServerPort(11235)\n        .setMaxThreads(10)\n        .setMaxConnections(100)\n        .setMaxMessageCount(5)\n        .setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048)\n        .setHostNameForClients(\"hostName4Clients\")\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","date":"2019-08-08 03:05:10","endLine":293,"groupId":"102859","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"startCacheServerStartsCacheServerWithBuilderValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/83/3b6e7192ee97722e28ddc8ae912051c811bc6b.src","preCode":"  public void startCacheServerStartsCacheServerWithBuilderValues() throws IOException {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setServerBindAddress(null)\n        .setServerPort(11235)\n        .setMaxThreads(10)\n        .setMaxConnections(100)\n        .setMaxMessageCount(5)\n        .setMessageTimeToLive(10000)\n        .setSocketBufferSize(2048)\n        .setHostNameForClients(\"hostName4Clients\")\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verify(cacheServer).setBindAddress(null);\n    verify(cacheServer).setPort(eq(11235));\n    verify(cacheServer).setMaxThreads(10);\n    verify(cacheServer).setMaxConnections(100);\n    verify(cacheServer).setMaximumMessageCount(5);\n    verify(cacheServer).setMessageTimeToLive(10000);\n    verify(cacheServer).setSocketBufferSize(2048);\n    verify(cacheServer).setHostnameForClients(\"hostName4Clients\");\n    verify(cacheServer).start();\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"N"},{"authorDate":"2020-04-25 00:20:21","commitOrder":12,"curCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setDisableDefaultServer(true)\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verifyNoMoreInteractions(cacheServer);\n  }\n","date":"2020-04-25 00:20:21","endLine":310,"groupId":"102859","id":24,"instanceNumber":2,"isCurCommit":1,"methodName":"startCacheServerDoesNothingWhenDefaultServerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a2/7c13a9b70c14555f3c35786335c974dbd80528.src","preCode":"  public void startCacheServerDoesNothingWhenDefaultServerDisabled() {\n    Cache cache = createCache();\n    CacheServer cacheServer = mock(CacheServer.class, \"CacheServer\");\n    when(cache.getCacheServers()).thenReturn(Collections.emptyList());\n    when(cache.addCacheServer()).thenReturn(cacheServer);\n    ServerLauncher launcher = new Builder()\n        .setDisableDefaultServer(true)\n        .setServerLauncherCacheProvider((a, b) -> cache)\n        .setControllableProcessFactory(() -> mock(ControllableProcess.class))\n        .build();\n\n    launcher.start();\n\n    verifyZeroInteractions(cacheServer);\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/ServerLauncherTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"}],"commitId":"0a1701e92dc09bcd6b79edd3b52f20ee9e9a867c","commitMessage":"@@@GEODE-7964: Upgrade Mockito to 3.3.3 (#4924)\n\n","date":"2020-04-25 00:20:21","modifiedFileCount":"34","status":"M","submitter":"Kirk Lund"}]
