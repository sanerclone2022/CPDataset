[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testIsIdentityField() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitIdentityAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n    DataSerializer.writeObject(objOut, out);\n\n    DataInputStream dis = new DataInputStream(new ByteArrayInputStream(out.toByteArray()));\n    PdxInstance pi = (PdxInstance) DataSerializer.readObject(dis);\n    PdxInstance pi2 = (PdxInstance) DataSerializer.readObject(dis);\n    assertEquals(true, pi.isIdentityField(\"long_0\"));\n    assertEquals(false, pi.isIdentityField(\"string_0\"));\n    assertEquals(false, pi.isEnum());\n    assertEquals(objOut.getClass().getName(), pi.getClassName());\n    assertEquals(objOut, pi.getObject());\n    assertEquals(objOut, pi2.getObject());\n  }\n","date":"2018-07-18 03:54:18","endLine":562,"groupId":"17174","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsIdentityField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/2ce56937f854d821cafc8aa8f3392acf9e7930.src","preCode":"  public void testIsIdentityField() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitIdentityAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n    DataSerializer.writeObject(objOut, out);\n\n    DataInputStream dis = new DataInputStream(new ByteArrayInputStream(out.toByteArray()));\n    PdxInstance pi = (PdxInstance) DataSerializer.readObject(dis);\n    PdxInstance pi2 = (PdxInstance) DataSerializer.readObject(dis);\n    assertEquals(true, pi.isIdentityField(\"long_0\"));\n    assertEquals(false, pi.isIdentityField(\"string_0\"));\n    assertEquals(false, pi.isEnum());\n    assertEquals(objOut.getClass().getName(), pi.getClassName());\n    assertEquals(objOut, pi.getObject());\n    assertEquals(objOut, pi2.getObject());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":544,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testGetFieldName() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitFieldNameAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pi = (PdxInstance) DataSerializer\n        .readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n    System.out.println(\"fieldNames=\" + pi.getFieldNames());\n    assertEquals(false, pi.hasField(\"long_0\"));\n    assertEquals(true, pi.hasField(\"_long_0\"));\n    assertEquals(true, pi.hasField(\"string_0\"));\n    assertEquals(objOut, pi.getObject());\n  }\n","date":"2018-07-18 03:54:18","endLine":621,"groupId":"17174","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetFieldName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/2ce56937f854d821cafc8aa8f3392acf9e7930.src","preCode":"  public void testGetFieldName() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitFieldNameAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pi = (PdxInstance) DataSerializer\n        .readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n    System.out.println(\"fieldNames=\" + pi.getFieldNames());\n    assertEquals(false, pi.hasField(\"long_0\"));\n    assertEquals(true, pi.hasField(\"_long_0\"));\n    assertEquals(true, pi.hasField(\"string_0\"));\n    assertEquals(objOut, pi.getObject());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":606,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2020-07-09 04:07:43","codes":[{"authorDate":"2020-07-09 04:07:43","commitOrder":2,"curCode":"  public void testIsIdentityField() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitIdentityAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n    DataSerializer.writeObject(objOut, out);\n\n    DataInputStream dis = new DataInputStream(new ByteArrayInputStream(out.toByteArray()));\n    PdxInstance pi = (PdxInstance) DataSerializer.readObject(dis);\n    PdxInstance pi2 = (PdxInstance) DataSerializer.readObject(dis);\n    assertEquals(true, pi.isIdentityField(\"long_0\"));\n    assertEquals(false, pi.isIdentityField(\"string_0\"));\n    assertEquals(false, pi.isEnum());\n    assertEquals(objOut.getClass().getName(), pi.getClassName());\n    assertEquals(objOut, pi.getObject());\n    assertEquals(objOut, pi2.getObject());\n  }\n","date":"2020-07-18 08:04:53","endLine":565,"groupId":"17174","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsIdentityField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7b/de4798baf03392ab2054bd9622a7e6d4be01d0.src","preCode":"  public void testIsIdentityField() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitIdentityAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n    DataSerializer.writeObject(objOut, out);\n\n    DataInputStream dis = new DataInputStream(new ByteArrayInputStream(out.toByteArray()));\n    PdxInstance pi = (PdxInstance) DataSerializer.readObject(dis);\n    PdxInstance pi2 = (PdxInstance) DataSerializer.readObject(dis);\n    assertEquals(true, pi.isIdentityField(\"long_0\"));\n    assertEquals(false, pi.isIdentityField(\"string_0\"));\n    assertEquals(false, pi.isEnum());\n    assertEquals(objOut.getClass().getName(), pi.getClassName());\n    assertEquals(objOut, pi.getObject());\n    assertEquals(objOut, pi2.getObject());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":547,"status":"M"},{"authorDate":"2020-07-09 04:07:43","commitOrder":2,"curCode":"  public void testGetFieldName() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitFieldNameAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pi = (PdxInstance) DataSerializer\n        .readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n    System.out.println(\"fieldNames=\" + pi.getFieldNames());\n    assertEquals(false, pi.hasField(\"long_0\"));\n    assertEquals(true, pi.hasField(\"_long_0\"));\n    assertEquals(true, pi.hasField(\"string_0\"));\n    assertEquals(objOut, pi.getObject());\n  }\n","date":"2020-07-18 08:04:53","endLine":624,"groupId":"17174","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetFieldName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7b/de4798baf03392ab2054bd9622a7e6d4be01d0.src","preCode":"  public void testGetFieldName() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitFieldNameAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pi = (PdxInstance) DataSerializer\n        .readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n    System.out.println(\"fieldNames=\" + pi.getFieldNames());\n    assertEquals(false, pi.hasField(\"long_0\"));\n    assertEquals(true, pi.hasField(\"_long_0\"));\n    assertEquals(true, pi.hasField(\"string_0\"));\n    assertEquals(objOut, pi.getObject());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":609,"status":"M"}],"commitId":"17d6679125942f5f33ded4670dc9e0ca643e03da","commitMessage":"@@@GEODE-8337: git mv Version.java->KnownVersion.java\n","date":"2020-07-18 08:04:53","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"},{"authorTime":"2020-07-23 01:09:22","codes":[{"authorDate":"2020-07-23 01:09:22","commitOrder":3,"curCode":"  public void testIsIdentityField() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitIdentityAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n    DataSerializer.writeObject(objOut, out);\n\n    DataInputStream dis = new DataInputStream(new ByteArrayInputStream(out.toByteArray()));\n    PdxInstance pi = (PdxInstance) DataSerializer.readObject(dis);\n    PdxInstance pi2 = (PdxInstance) DataSerializer.readObject(dis);\n    assertEquals(true, pi.isIdentityField(\"long_0\"));\n    assertEquals(false, pi.isIdentityField(\"string_0\"));\n    assertEquals(false, pi.isEnum());\n    assertEquals(objOut.getClass().getName(), pi.getClassName());\n    assertEquals(objOut, pi.getObject());\n    assertEquals(objOut, pi2.getObject());\n  }\n","date":"2020-07-23 04:07:08","endLine":565,"groupId":"17174","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsIdentityField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cb/8bfc24e1c2b42be6ec20cb6c3ba285776cb2aa.src","preCode":"  public void testIsIdentityField() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitIdentityAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n    DataSerializer.writeObject(objOut, out);\n\n    DataInputStream dis = new DataInputStream(new ByteArrayInputStream(out.toByteArray()));\n    PdxInstance pi = (PdxInstance) DataSerializer.readObject(dis);\n    PdxInstance pi2 = (PdxInstance) DataSerializer.readObject(dis);\n    assertEquals(true, pi.isIdentityField(\"long_0\"));\n    assertEquals(false, pi.isIdentityField(\"string_0\"));\n    assertEquals(false, pi.isEnum());\n    assertEquals(objOut.getClass().getName(), pi.getClassName());\n    assertEquals(objOut, pi.getObject());\n    assertEquals(objOut, pi2.getObject());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":547,"status":"M"},{"authorDate":"2020-07-23 01:09:22","commitOrder":3,"curCode":"  public void testGetFieldName() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitFieldNameAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pi = (PdxInstance) DataSerializer\n        .readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n    System.out.println(\"fieldNames=\" + pi.getFieldNames());\n    assertEquals(false, pi.hasField(\"long_0\"));\n    assertEquals(true, pi.hasField(\"_long_0\"));\n    assertEquals(true, pi.hasField(\"string_0\"));\n    assertEquals(objOut, pi.getObject());\n  }\n","date":"2020-07-23 04:07:08","endLine":624,"groupId":"17174","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetFieldName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cb/8bfc24e1c2b42be6ec20cb6c3ba285776cb2aa.src","preCode":"  public void testGetFieldName() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitFieldNameAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pi = (PdxInstance) DataSerializer\n        .readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n    System.out.println(\"fieldNames=\" + pi.getFieldNames());\n    assertEquals(false, pi.hasField(\"long_0\"));\n    assertEquals(true, pi.hasField(\"_long_0\"));\n    assertEquals(true, pi.hasField(\"string_0\"));\n    assertEquals(objOut, pi.getObject());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":609,"status":"M"}],"commitId":"76a034b795ea4c30ec081816b47cd2a00daa29c3","commitMessage":"@@@Revert \"GEODE-8337: git mv Version.java->KnownVersion.java\"\n\nThis reverts commit 17d66791\n","date":"2020-07-23 04:07:08","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"},{"authorTime":"2020-07-09 04:07:43","codes":[{"authorDate":"2020-07-09 04:07:43","commitOrder":4,"curCode":"  public void testIsIdentityField() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitIdentityAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n    DataSerializer.writeObject(objOut, out);\n\n    DataInputStream dis = new DataInputStream(new ByteArrayInputStream(out.toByteArray()));\n    PdxInstance pi = (PdxInstance) DataSerializer.readObject(dis);\n    PdxInstance pi2 = (PdxInstance) DataSerializer.readObject(dis);\n    assertEquals(true, pi.isIdentityField(\"long_0\"));\n    assertEquals(false, pi.isIdentityField(\"string_0\"));\n    assertEquals(false, pi.isEnum());\n    assertEquals(objOut.getClass().getName(), pi.getClassName());\n    assertEquals(objOut, pi.getObject());\n    assertEquals(objOut, pi2.getObject());\n  }\n","date":"2020-08-13 07:45:32","endLine":565,"groupId":"105274","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsIdentityField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7b/de4798baf03392ab2054bd9622a7e6d4be01d0.src","preCode":"  public void testIsIdentityField() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitIdentityAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n    DataSerializer.writeObject(objOut, out);\n\n    DataInputStream dis = new DataInputStream(new ByteArrayInputStream(out.toByteArray()));\n    PdxInstance pi = (PdxInstance) DataSerializer.readObject(dis);\n    PdxInstance pi2 = (PdxInstance) DataSerializer.readObject(dis);\n    assertEquals(true, pi.isIdentityField(\"long_0\"));\n    assertEquals(false, pi.isIdentityField(\"string_0\"));\n    assertEquals(false, pi.isEnum());\n    assertEquals(objOut.getClass().getName(), pi.getClassName());\n    assertEquals(objOut, pi.getObject());\n    assertEquals(objOut, pi2.getObject());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":547,"status":"M"},{"authorDate":"2020-07-09 04:07:43","commitOrder":4,"curCode":"  public void testGetFieldName() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitFieldNameAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pi = (PdxInstance) DataSerializer\n        .readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n    System.out.println(\"fieldNames=\" + pi.getFieldNames());\n    assertEquals(false, pi.hasField(\"long_0\"));\n    assertEquals(true, pi.hasField(\"_long_0\"));\n    assertEquals(true, pi.hasField(\"string_0\"));\n    assertEquals(objOut, pi.getObject());\n  }\n","date":"2020-08-13 07:45:32","endLine":624,"groupId":"105274","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetFieldName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/7b/de4798baf03392ab2054bd9622a7e6d4be01d0.src","preCode":"  public void testGetFieldName() throws IOException, ClassNotFoundException {\n    setupSerializer(\n        new ExplicitFieldNameAutoSerializer(false, \"org.apache.geode.pdx.DomainObjectPdxAuto\"),\n        true);\n    DomainObject objOut = new DomainObjectPdxAuto(4);\n    HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT);\n    DataSerializer.writeObject(objOut, out);\n\n    PdxInstance pi = (PdxInstance) DataSerializer\n        .readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));\n    System.out.println(\"fieldNames=\" + pi.getFieldNames());\n    assertEquals(false, pi.hasField(\"long_0\"));\n    assertEquals(true, pi.hasField(\"_long_0\"));\n    assertEquals(true, pi.hasField(\"string_0\"));\n    assertEquals(objOut, pi.getObject());\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/pdx/AutoSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":609,"status":"M"}],"commitId":"068a467dee63db91cb8869fe70ea435c95a6526c","commitMessage":"@@@GEODE-8337: git mv Version.java->KnownVersion.java\n\n(cherry picked from commit 17d6679125942f5f33ded4670dc9e0ca643e03da)\n","date":"2020-08-13 07:45:32","modifiedFileCount":"389","status":"M","submitter":"Bill Burcham"}]
