[{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testQueryOnSingleDataStoreWithCacheClose() throws Exception {\n\n    logger.info(\n        \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test Started  \");\n\n    logger.info(\n        \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: creating PR Region \");\n\n    final Region region =\n        PartitionedRegionTestHelper.createPartitionedRegion(regionName, localMaxMemory, redundancy);\n\n    final Region localRegion = PartitionedRegionTestHelper.createLocalRegion(localRegionName);\n\n    final StringBuffer errorBuf = new StringBuffer(\"\");\n\n    PortfolioData[] portfolios = new PortfolioData[dataSize];\n\n    try {\n      for (int j = 0; j < dataSize; j++) {\n        portfolios[j] = new PortfolioData(j);\n      }\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: populating PortfolioData into the PR Datastore  \");\n\n      populateData(region, portfolios);\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: populating PortfolioData into the PR Datastore  \");\n\n      populateData(localRegion, portfolios);\n      final String[] queryString =\n          {\"ID = 0 OR ID = 1\", \"ID > 4 AND ID < 9\", \"ID = 5\", \"ID < 5 \", \"ID <= 5\"};\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Creating a Thread which will fire queries on the datastore\");\n\n      Thread t1 = new Thread(new Runnable() {\n        public void run() {\n          final String expectedCacheClosedException = CacheClosedException.class.getName();\n\n          logger.info(\"<ExpectedException action=add>\" + expectedCacheClosedException\n              + \"</ExpectedException>\");\n\n          for (int i = 0; i < queryString.length; i++) {\n\n            try {\n\n              SelectResults resSetPR = region.query(queryString[i]);\n\n              SelectResults resSetLocal = localRegion.query(queryString[i]);\n\n              String failureString =\n                  PartitionedRegionTestHelper.compareResultSets(resSetPR, resSetLocal);\n              Thread.sleep(delayQuery);\n              if (failureString != null) {\n                errorBuf.append(failureString);\n                throw (new Exception(failureString));\n\n              }\n\n            } catch (InterruptedException ie) {\n              fail(\"interrupted\");\n\n            }\n\n            catch (CancelException cce) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: CancelException as Expected \"\n                      + cce);\n\n            }\n            \r\n            catch (RegionNotFoundException rnfe) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: RegionNotFoundException as Expected \"\n                      + rnfe);\n            }\n\n\n            catch (Exception qe) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Unexpected Exception \"\n                      + qe);\n\n              encounteredException = true;\n              StringWriter sw = new StringWriter();\n              qe.printStackTrace(new PrintWriter(sw, true));\n              errorBuf.append(sw);\n\n            }\n\n          }\n          logger.info(\"<ExpectedException action=remove>\" + expectedCacheClosedException\n              + \"</ExpectedException>\");\n\n        }\n      });\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Creating a Thread which will call cache.close() on the datastore \");\n\n      Thread t2 = new Thread(new Runnable() {\n        public void run() {\n          PartitionedRegionTestHelper.closeCache();\n          try {\n            Thread.sleep(delayCC);\n          } catch (InterruptedException ie) {\n            fail(\"interrupted\");\n          }\n          PartitionedRegionTestHelper.createCache();\n\n        }\n\n      });\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Initiating the  Threads\");\n\n      t1.start();\n      t2.start();\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Waiting for the Threads to join \");\n\n      ThreadUtils.join(t1, 30 * 1000);\n      ThreadUtils.join(t2, 30 * 1000);\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: checking for any Unexpected Exception's occurred\");\n\n      assertFalse(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Exception occurred in Query-thread: \"\n              + errorBuf,\n          encounteredException);\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test failed because of exception \"\n              + e);\n\n    }\n\n    logger.info(\"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test Ended\");\n\n  }\n","date":"2018-07-18 03:54:18","endLine":230,"groupId":"25319","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryOnSingleDataStoreWithCacheClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a8/4d284679165a2316473ffaccbc52c55e168716.src","preCode":"  public void testQueryOnSingleDataStoreWithCacheClose() throws Exception {\n\n    logger.info(\n        \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test Started  \");\n\n    logger.info(\n        \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: creating PR Region \");\n\n    final Region region =\n        PartitionedRegionTestHelper.createPartitionedRegion(regionName, localMaxMemory, redundancy);\n\n    final Region localRegion = PartitionedRegionTestHelper.createLocalRegion(localRegionName);\n\n    final StringBuffer errorBuf = new StringBuffer(\"\");\n\n    PortfolioData[] portfolios = new PortfolioData[dataSize];\n\n    try {\n      for (int j = 0; j < dataSize; j++) {\n        portfolios[j] = new PortfolioData(j);\n      }\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: populating PortfolioData into the PR Datastore  \");\n\n      populateData(region, portfolios);\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: populating PortfolioData into the PR Datastore  \");\n\n      populateData(localRegion, portfolios);\n      final String[] queryString =\n          {\"ID = 0 OR ID = 1\", \"ID > 4 AND ID < 9\", \"ID = 5\", \"ID < 5 \", \"ID <= 5\"};\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Creating a Thread which will fire queries on the datastore\");\n\n      Thread t1 = new Thread(new Runnable() {\n        public void run() {\n          final String expectedCacheClosedException = CacheClosedException.class.getName();\n\n          logger.info(\"<ExpectedException action=add>\" + expectedCacheClosedException\n              + \"</ExpectedException>\");\n\n          for (int i = 0; i < queryString.length; i++) {\n\n            try {\n\n              SelectResults resSetPR = region.query(queryString[i]);\n\n              SelectResults resSetLocal = localRegion.query(queryString[i]);\n\n              String failureString =\n                  PartitionedRegionTestHelper.compareResultSets(resSetPR, resSetLocal);\n              Thread.sleep(delayQuery);\n              if (failureString != null) {\n                errorBuf.append(failureString);\n                throw (new Exception(failureString));\n\n              }\n\n            } catch (InterruptedException ie) {\n              fail(\"interrupted\");\n\n            }\n\n            catch (CancelException cce) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: CancelException as Expected \"\n                      + cce);\n\n            }\n            \r\n            catch (RegionNotFoundException rnfe) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: RegionNotFoundException as Expected \"\n                      + rnfe);\n            }\n\n\n            catch (Exception qe) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Unexpected Exception \"\n                      + qe);\n\n              encounteredException = true;\n              StringWriter sw = new StringWriter();\n              qe.printStackTrace(new PrintWriter(sw, true));\n              errorBuf.append(sw);\n\n            }\n\n          }\n          logger.info(\"<ExpectedException action=remove>\" + expectedCacheClosedException\n              + \"</ExpectedException>\");\n\n        }\n      });\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Creating a Thread which will call cache.close() on the datastore \");\n\n      Thread t2 = new Thread(new Runnable() {\n        public void run() {\n          PartitionedRegionTestHelper.closeCache();\n          try {\n            Thread.sleep(delayCC);\n          } catch (InterruptedException ie) {\n            fail(\"interrupted\");\n          }\n          PartitionedRegionTestHelper.createCache();\n\n        }\n\n      });\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Initiating the  Threads\");\n\n      t1.start();\n      t2.start();\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Waiting for the Threads to join \");\n\n      ThreadUtils.join(t1, 30 * 1000);\n      ThreadUtils.join(t2, 30 * 1000);\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: checking for any Unexpected Exception's occurred\");\n\n      assertFalse(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Exception occurred in Query-thread: \"\n              + errorBuf,\n          encounteredException);\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test failed because of exception \"\n              + e);\n\n    }\n\n    logger.info(\"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test Ended\");\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/partitioned/PRQueryCacheClosedJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"},{"authorDate":"2018-07-18 03:54:18","commitOrder":1,"curCode":"  public void testQueryOnSingleDataStore() throws Exception {\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test Started  \");\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: creating PR Region \");\n\n    final Region region =\n        PartitionedRegionTestHelper.createPartitionedRegion(regionName, localMaxMemory, redundancy);\n\n    final Region localRegion = PartitionedRegionTestHelper.createLocalRegion(localRegionName);\n\n    final StringBuffer errorBuf = new StringBuffer(\"\");\n\n    PortfolioData[] portfolios = new PortfolioData[dataSize];\n\n    try {\n      for (int j = 0; j < dataSize; j++) {\n        portfolios[j] = new PortfolioData(j);\n      }\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: populating PortfolioData into the PR Datastore  \");\n\n      populateData(region, portfolios);\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: populating PortfolioData into the PR Datastore  \");\n\n      populateData(localRegion, portfolios);\n      final String[] queryString =\n          {\"ID = 0 OR ID = 1\", \"ID > 4 AND ID < 9\", \"ID = 5\", \"ID < 5 \", \"ID <= 5\"};\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Creating a Thread which will fire queries on the datastore\");\n\n      Thread t1 = new Thread(new Runnable() {\n        public void run() {\n          final String expectedRegionDestroyedException = RegionDestroyedException.class.getName();\n\n          logger.info(\"<ExpectedException action=add>\" + expectedRegionDestroyedException\n              + \"</ExpectedException>\");\n\n          for (int i = 0; i < queryString.length; i++) {\n\n            try {\n\n              SelectResults resSetPR = region.query(queryString[i]);\n              SelectResults resSetLocal = localRegion.query(queryString[i]);\n              String failureString =\n                  PartitionedRegionTestHelper.compareResultSets(resSetPR, resSetLocal);\n              Thread.sleep(delayQuery);\n              if (failureString != null) {\n                errorBuf.append(failureString);\n                throw (new Exception(failureString));\n\n              }\n\n            } catch (InterruptedException ie) {\n              fail(\"interrupted\");\n            }\n\n            catch (QueryInvocationTargetException qite) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: QueryInvocationTargetException as Expected \"\n                      + qite);\n\n            } catch (RegionDestroyedException rde) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: RegionDestroyedException as Expected \"\n                      + rde);\n\n            } catch (RegionNotFoundException rnfe) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: RegionNotFoundException as Expected \"\n                      + rnfe);\n\n            }\n\n            catch (Exception qe) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Unexpected Exception \"\n                      + qe);\n\n              encounteredException = true;\n              StringWriter sw = new StringWriter();\n              qe.printStackTrace(new PrintWriter(sw));\n              errorBuf.append(sw);\n\n            }\n\n          }\n          logger.info(\"<ExpectedException action=remove>\" + expectedRegionDestroyedException\n              + \"</ExpectedException>\");\n\n        }\n      });\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Creating a Thread which will call Region.destroyRegion() on the datastore \");\n\n      Thread t2 = new Thread(new Runnable() {\n        public void run() {\n          try {\n            Thread.sleep(2500);\n          } catch (InterruptedException ie) {\n            logger.info(\n                \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore:Thread Interrupted Exceptionduring region Destroy \");\n            fail(\"interrupted\");\n          }\n          region.destroyRegion();\n        }\n\n      });\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Initiating the  Threads\");\n\n      t1.start();\n      t2.start();\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Waiting for the Threads to join \");\n\n      ThreadUtils.join(t1, 30 * 1000);\n      ThreadUtils.join(t2, 30 * 1000);\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: checking for any Unexpected Exception's occurred\");\n\n      assertFalse(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Exception occurred in Query-thread\",\n          encounteredException);\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test failed because of exception \"\n              + e);\n\n    }\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test Ended\");\n\n  }\n","date":"2018-07-18 03:54:18","endLine":219,"groupId":"33969","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryOnSingleDataStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/a3/86d915d6dd5164960cb723183a8b9397fdeb23.src","preCode":"  public void testQueryOnSingleDataStore() throws Exception {\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test Started  \");\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: creating PR Region \");\n\n    final Region region =\n        PartitionedRegionTestHelper.createPartitionedRegion(regionName, localMaxMemory, redundancy);\n\n    final Region localRegion = PartitionedRegionTestHelper.createLocalRegion(localRegionName);\n\n    final StringBuffer errorBuf = new StringBuffer(\"\");\n\n    PortfolioData[] portfolios = new PortfolioData[dataSize];\n\n    try {\n      for (int j = 0; j < dataSize; j++) {\n        portfolios[j] = new PortfolioData(j);\n      }\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: populating PortfolioData into the PR Datastore  \");\n\n      populateData(region, portfolios);\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: populating PortfolioData into the PR Datastore  \");\n\n      populateData(localRegion, portfolios);\n      final String[] queryString =\n          {\"ID = 0 OR ID = 1\", \"ID > 4 AND ID < 9\", \"ID = 5\", \"ID < 5 \", \"ID <= 5\"};\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Creating a Thread which will fire queries on the datastore\");\n\n      Thread t1 = new Thread(new Runnable() {\n        public void run() {\n          final String expectedRegionDestroyedException = RegionDestroyedException.class.getName();\n\n          logger.info(\"<ExpectedException action=add>\" + expectedRegionDestroyedException\n              + \"</ExpectedException>\");\n\n          for (int i = 0; i < queryString.length; i++) {\n\n            try {\n\n              SelectResults resSetPR = region.query(queryString[i]);\n              SelectResults resSetLocal = localRegion.query(queryString[i]);\n              String failureString =\n                  PartitionedRegionTestHelper.compareResultSets(resSetPR, resSetLocal);\n              Thread.sleep(delayQuery);\n              if (failureString != null) {\n                errorBuf.append(failureString);\n                throw (new Exception(failureString));\n\n              }\n\n            } catch (InterruptedException ie) {\n              fail(\"interrupted\");\n            }\n\n            catch (QueryInvocationTargetException qite) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: QueryInvocationTargetException as Expected \"\n                      + qite);\n\n            } catch (RegionDestroyedException rde) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: RegionDestroyedException as Expected \"\n                      + rde);\n\n            } catch (RegionNotFoundException rnfe) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: RegionNotFoundException as Expected \"\n                      + rnfe);\n\n            }\n\n            catch (Exception qe) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Unexpected Exception \"\n                      + qe);\n\n              encounteredException = true;\n              StringWriter sw = new StringWriter();\n              qe.printStackTrace(new PrintWriter(sw));\n              errorBuf.append(sw);\n\n            }\n\n          }\n          logger.info(\"<ExpectedException action=remove>\" + expectedRegionDestroyedException\n              + \"</ExpectedException>\");\n\n        }\n      });\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Creating a Thread which will call Region.destroyRegion() on the datastore \");\n\n      Thread t2 = new Thread(new Runnable() {\n        public void run() {\n          try {\n            Thread.sleep(2500);\n          } catch (InterruptedException ie) {\n            logger.info(\n                \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore:Thread Interrupted Exceptionduring region Destroy \");\n            fail(\"interrupted\");\n          }\n          region.destroyRegion();\n        }\n\n      });\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Initiating the  Threads\");\n\n      t1.start();\n      t2.start();\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Waiting for the Threads to join \");\n\n      ThreadUtils.join(t1, 30 * 1000);\n      ThreadUtils.join(t2, 30 * 1000);\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: checking for any Unexpected Exception's occurred\");\n\n      assertFalse(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Exception occurred in Query-thread\",\n          encounteredException);\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test failed because of exception \"\n              + e);\n\n    }\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test Ended\");\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/partitioned/PRQueryRegionDestroyedJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"B","submitter":"Jacob Barrett"},{"authorTime":"2019-01-12 07:53:54","codes":[{"authorDate":"2019-01-12 07:53:54","commitOrder":2,"curCode":"  public void testQueryOnSingleDataStoreWithCacheClose() throws Exception {\n\n    logger.info(\n        \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test Started  \");\n\n    logger.info(\n        \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: creating PR Region \");\n\n    final Region region =\n        PartitionedRegionTestHelper.createPartitionedRegion(regionName, localMaxMemory, redundancy);\n\n    final Region localRegion = PartitionedRegionTestHelper.createLocalRegion(localRegionName);\n\n    final StringBuffer errorBuf = new StringBuffer(\"\");\n\n    PortfolioData[] portfolios = new PortfolioData[dataSize];\n\n    try {\n      for (int j = 0; j < dataSize; j++) {\n        portfolios[j] = new PortfolioData(j);\n      }\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: populating PortfolioData into the PR Datastore  \");\n\n      populateData(region, portfolios);\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: populating PortfolioData into the PR Datastore  \");\n\n      populateData(localRegion, portfolios);\n      final String[] queryString =\n          {\"ID = 0 OR ID = 1\", \"ID > 4 AND ID < 9\", \"ID = 5\", \"ID < 5 \", \"ID <= 5\"};\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Creating a Thread which will fire queries on the datastore\");\n\n      Thread t1 = new Thread(new Runnable() {\n        @Override\n        public void run() {\n          final String expectedCacheClosedException = CacheClosedException.class.getName();\n\n          logger.info(\"<ExpectedException action=add>\" + expectedCacheClosedException\n              + \"</ExpectedException>\");\n\n          for (int i = 0; i < queryString.length; i++) {\n\n            try {\n\n              SelectResults resSetPR = region.query(queryString[i]);\n\n              SelectResults resSetLocal = localRegion.query(queryString[i]);\n\n              String failureString =\n                  PartitionedRegionTestHelper.compareResultSets(resSetPR, resSetLocal);\n              Thread.sleep(delayQuery);\n              if (failureString != null) {\n                errorBuf.append(failureString);\n                throw (new Exception(failureString));\n\n              }\n\n            } catch (InterruptedException ie) {\n              fail(\"interrupted\");\n\n            }\n\n            catch (CancelException cce) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: CancelException as Expected \"\n                      + cce);\n\n            }\n            \r\n            catch (RegionNotFoundException rnfe) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: RegionNotFoundException as Expected \"\n                      + rnfe);\n            }\n\n\n            catch (Exception qe) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Unexpected Exception \"\n                      + qe);\n\n              encounteredException = true;\n              StringWriter sw = new StringWriter();\n              qe.printStackTrace(new PrintWriter(sw, true));\n              errorBuf.append(sw);\n\n            }\n\n          }\n          logger.info(\"<ExpectedException action=remove>\" + expectedCacheClosedException\n              + \"</ExpectedException>\");\n\n        }\n      });\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Creating a Thread which will call cache.close() on the datastore \");\n\n      Thread t2 = new Thread(new Runnable() {\n        @Override\n        public void run() {\n          PartitionedRegionTestHelper.closeCache();\n          try {\n            Thread.sleep(delayCC);\n          } catch (InterruptedException ie) {\n            fail(\"interrupted\");\n          }\n          PartitionedRegionTestHelper.createCache();\n\n        }\n\n      });\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Initiating the  Threads\");\n\n      t1.start();\n      t2.start();\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Waiting for the Threads to join \");\n\n      ThreadUtils.join(t1, 30 * 1000);\n      ThreadUtils.join(t2, 30 * 1000);\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: checking for any Unexpected Exception's occurred\");\n\n      assertFalse(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Exception occurred in Query-thread: \"\n              + errorBuf,\n          encounteredException);\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test failed because of exception \"\n              + e);\n\n    }\n\n    logger.info(\"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test Ended\");\n\n  }\n","date":"2019-01-12 07:53:54","endLine":232,"groupId":"104802","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testQueryOnSingleDataStoreWithCacheClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b0/758fdb3da7f5090686034fed6ef112f211d821.src","preCode":"  public void testQueryOnSingleDataStoreWithCacheClose() throws Exception {\n\n    logger.info(\n        \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test Started  \");\n\n    logger.info(\n        \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: creating PR Region \");\n\n    final Region region =\n        PartitionedRegionTestHelper.createPartitionedRegion(regionName, localMaxMemory, redundancy);\n\n    final Region localRegion = PartitionedRegionTestHelper.createLocalRegion(localRegionName);\n\n    final StringBuffer errorBuf = new StringBuffer(\"\");\n\n    PortfolioData[] portfolios = new PortfolioData[dataSize];\n\n    try {\n      for (int j = 0; j < dataSize; j++) {\n        portfolios[j] = new PortfolioData(j);\n      }\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: populating PortfolioData into the PR Datastore  \");\n\n      populateData(region, portfolios);\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: populating PortfolioData into the PR Datastore  \");\n\n      populateData(localRegion, portfolios);\n      final String[] queryString =\n          {\"ID = 0 OR ID = 1\", \"ID > 4 AND ID < 9\", \"ID = 5\", \"ID < 5 \", \"ID <= 5\"};\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Creating a Thread which will fire queries on the datastore\");\n\n      Thread t1 = new Thread(new Runnable() {\n        public void run() {\n          final String expectedCacheClosedException = CacheClosedException.class.getName();\n\n          logger.info(\"<ExpectedException action=add>\" + expectedCacheClosedException\n              + \"</ExpectedException>\");\n\n          for (int i = 0; i < queryString.length; i++) {\n\n            try {\n\n              SelectResults resSetPR = region.query(queryString[i]);\n\n              SelectResults resSetLocal = localRegion.query(queryString[i]);\n\n              String failureString =\n                  PartitionedRegionTestHelper.compareResultSets(resSetPR, resSetLocal);\n              Thread.sleep(delayQuery);\n              if (failureString != null) {\n                errorBuf.append(failureString);\n                throw (new Exception(failureString));\n\n              }\n\n            } catch (InterruptedException ie) {\n              fail(\"interrupted\");\n\n            }\n\n            catch (CancelException cce) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: CancelException as Expected \"\n                      + cce);\n\n            }\n            \r\n            catch (RegionNotFoundException rnfe) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: RegionNotFoundException as Expected \"\n                      + rnfe);\n            }\n\n\n            catch (Exception qe) {\n              logger.info(\n                  \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Unexpected Exception \"\n                      + qe);\n\n              encounteredException = true;\n              StringWriter sw = new StringWriter();\n              qe.printStackTrace(new PrintWriter(sw, true));\n              errorBuf.append(sw);\n\n            }\n\n          }\n          logger.info(\"<ExpectedException action=remove>\" + expectedCacheClosedException\n              + \"</ExpectedException>\");\n\n        }\n      });\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Creating a Thread which will call cache.close() on the datastore \");\n\n      Thread t2 = new Thread(new Runnable() {\n        public void run() {\n          PartitionedRegionTestHelper.closeCache();\n          try {\n            Thread.sleep(delayCC);\n          } catch (InterruptedException ie) {\n            fail(\"interrupted\");\n          }\n          PartitionedRegionTestHelper.createCache();\n\n        }\n\n      });\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Initiating the  Threads\");\n\n      t1.start();\n      t2.start();\n\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Waiting for the Threads to join \");\n\n      ThreadUtils.join(t1, 30 * 1000);\n      ThreadUtils.join(t2, 30 * 1000);\n      logger.info(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: checking for any Unexpected Exception's occurred\");\n\n      assertFalse(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Exception occurred in Query-thread: \"\n              + errorBuf,\n          encounteredException);\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\n          \"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test failed because of exception \"\n              + e);\n\n    }\n\n    logger.info(\"PRQueryCacheClosedJUnitTest#testQueryOnSingleDataStoreWithCacheClose: Test Ended\");\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/partitioned/PRQueryCacheClosedJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2019-01-12 07:53:54","commitOrder":2,"curCode":"  public void testQueryOnSingleDataStore() throws Exception {\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test Started  \");\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: creating PR Region \");\n\n    final Region region =\n        PartitionedRegionTestHelper.createPartitionedRegion(regionName, localMaxMemory, redundancy);\n\n    final Region localRegion = PartitionedRegionTestHelper.createLocalRegion(localRegionName);\n\n    final StringBuffer errorBuf = new StringBuffer(\"\");\n\n    PortfolioData[] portfolios = new PortfolioData[dataSize];\n\n    try {\n      for (int j = 0; j < dataSize; j++) {\n        portfolios[j] = new PortfolioData(j);\n      }\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: populating PortfolioData into the PR Datastore  \");\n\n      populateData(region, portfolios);\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: populating PortfolioData into the PR Datastore  \");\n\n      populateData(localRegion, portfolios);\n      final String[] queryString =\n          {\"ID = 0 OR ID = 1\", \"ID > 4 AND ID < 9\", \"ID = 5\", \"ID < 5 \", \"ID <= 5\"};\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Creating a Thread which will fire queries on the datastore\");\n\n      Thread t1 = new Thread(new Runnable() {\n        @Override\n        public void run() {\n          final String expectedRegionDestroyedException = RegionDestroyedException.class.getName();\n\n          logger.info(\"<ExpectedException action=add>\" + expectedRegionDestroyedException\n              + \"</ExpectedException>\");\n\n          for (int i = 0; i < queryString.length; i++) {\n\n            try {\n\n              SelectResults resSetPR = region.query(queryString[i]);\n              SelectResults resSetLocal = localRegion.query(queryString[i]);\n              String failureString =\n                  PartitionedRegionTestHelper.compareResultSets(resSetPR, resSetLocal);\n              Thread.sleep(delayQuery);\n              if (failureString != null) {\n                errorBuf.append(failureString);\n                throw (new Exception(failureString));\n\n              }\n\n            } catch (InterruptedException ie) {\n              fail(\"interrupted\");\n            }\n\n            catch (QueryInvocationTargetException qite) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: QueryInvocationTargetException as Expected \"\n                      + qite);\n\n            } catch (RegionDestroyedException rde) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: RegionDestroyedException as Expected \"\n                      + rde);\n\n            } catch (RegionNotFoundException rnfe) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: RegionNotFoundException as Expected \"\n                      + rnfe);\n\n            }\n\n            catch (Exception qe) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Unexpected Exception \"\n                      + qe);\n\n              encounteredException = true;\n              StringWriter sw = new StringWriter();\n              qe.printStackTrace(new PrintWriter(sw));\n              errorBuf.append(sw);\n\n            }\n\n          }\n          logger.info(\"<ExpectedException action=remove>\" + expectedRegionDestroyedException\n              + \"</ExpectedException>\");\n\n        }\n      });\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Creating a Thread which will call Region.destroyRegion() on the datastore \");\n\n      Thread t2 = new Thread(new Runnable() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(2500);\n          } catch (InterruptedException ie) {\n            logger.info(\n                \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore:Thread Interrupted Exceptionduring region Destroy \");\n            fail(\"interrupted\");\n          }\n          region.destroyRegion();\n        }\n\n      });\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Initiating the  Threads\");\n\n      t1.start();\n      t2.start();\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Waiting for the Threads to join \");\n\n      ThreadUtils.join(t1, 30 * 1000);\n      ThreadUtils.join(t2, 30 * 1000);\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: checking for any Unexpected Exception's occurred\");\n\n      assertFalse(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Exception occurred in Query-thread\",\n          encounteredException);\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test failed because of exception \"\n              + e);\n\n    }\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test Ended\");\n\n  }\n","date":"2019-01-12 07:53:54","endLine":221,"groupId":"104802","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testQueryOnSingleDataStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/c0/7c0e557a9071cdcef480161c4c3073821d05af.src","preCode":"  public void testQueryOnSingleDataStore() throws Exception {\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test Started  \");\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: creating PR Region \");\n\n    final Region region =\n        PartitionedRegionTestHelper.createPartitionedRegion(regionName, localMaxMemory, redundancy);\n\n    final Region localRegion = PartitionedRegionTestHelper.createLocalRegion(localRegionName);\n\n    final StringBuffer errorBuf = new StringBuffer(\"\");\n\n    PortfolioData[] portfolios = new PortfolioData[dataSize];\n\n    try {\n      for (int j = 0; j < dataSize; j++) {\n        portfolios[j] = new PortfolioData(j);\n      }\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: populating PortfolioData into the PR Datastore  \");\n\n      populateData(region, portfolios);\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: populating PortfolioData into the PR Datastore  \");\n\n      populateData(localRegion, portfolios);\n      final String[] queryString =\n          {\"ID = 0 OR ID = 1\", \"ID > 4 AND ID < 9\", \"ID = 5\", \"ID < 5 \", \"ID <= 5\"};\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Creating a Thread which will fire queries on the datastore\");\n\n      Thread t1 = new Thread(new Runnable() {\n        public void run() {\n          final String expectedRegionDestroyedException = RegionDestroyedException.class.getName();\n\n          logger.info(\"<ExpectedException action=add>\" + expectedRegionDestroyedException\n              + \"</ExpectedException>\");\n\n          for (int i = 0; i < queryString.length; i++) {\n\n            try {\n\n              SelectResults resSetPR = region.query(queryString[i]);\n              SelectResults resSetLocal = localRegion.query(queryString[i]);\n              String failureString =\n                  PartitionedRegionTestHelper.compareResultSets(resSetPR, resSetLocal);\n              Thread.sleep(delayQuery);\n              if (failureString != null) {\n                errorBuf.append(failureString);\n                throw (new Exception(failureString));\n\n              }\n\n            } catch (InterruptedException ie) {\n              fail(\"interrupted\");\n            }\n\n            catch (QueryInvocationTargetException qite) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: QueryInvocationTargetException as Expected \"\n                      + qite);\n\n            } catch (RegionDestroyedException rde) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: RegionDestroyedException as Expected \"\n                      + rde);\n\n            } catch (RegionNotFoundException rnfe) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: RegionNotFoundException as Expected \"\n                      + rnfe);\n\n            }\n\n            catch (Exception qe) {\n              logger.info(\n                  \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Unexpected Exception \"\n                      + qe);\n\n              encounteredException = true;\n              StringWriter sw = new StringWriter();\n              qe.printStackTrace(new PrintWriter(sw));\n              errorBuf.append(sw);\n\n            }\n\n          }\n          logger.info(\"<ExpectedException action=remove>\" + expectedRegionDestroyedException\n              + \"</ExpectedException>\");\n\n        }\n      });\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Creating a Thread which will call Region.destroyRegion() on the datastore \");\n\n      Thread t2 = new Thread(new Runnable() {\n        public void run() {\n          try {\n            Thread.sleep(2500);\n          } catch (InterruptedException ie) {\n            logger.info(\n                \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore:Thread Interrupted Exceptionduring region Destroy \");\n            fail(\"interrupted\");\n          }\n          region.destroyRegion();\n        }\n\n      });\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Initiating the  Threads\");\n\n      t1.start();\n      t2.start();\n\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Waiting for the Threads to join \");\n\n      ThreadUtils.join(t1, 30 * 1000);\n      ThreadUtils.join(t2, 30 * 1000);\n      logger.info(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: checking for any Unexpected Exception's occurred\");\n\n      assertFalse(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Exception occurred in Query-thread\",\n          encounteredException);\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail(\n          \"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test failed because of exception \"\n              + e);\n\n    }\n\n    logger.info(\"PRQueryRegionDestroyedJUnitTest#testQueryOnSingleDataStore: Test Ended\");\n\n  }\n","realPath":"geode-core/src/integrationTest/java/org/apache/geode/cache/query/partitioned/PRQueryRegionDestroyedJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"9d737c9e95a77cb4db05a258f318908e7899bd6c","commitMessage":"@@@GEODE-4391: Add `@Override` where missing. (#3069)\n\n* GEODE-4391: Add `@Override` where missing.\n\n* Restart Concourse.  I think that was flaky.\n","date":"2019-01-12 07:53:54","modifiedFileCount":"1582","status":"M","submitter":"Galen O'Sullivan"}]
