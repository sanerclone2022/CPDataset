[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void testLateDeSerializer() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = NonDataSerializable.NonDSSerializer.class;\n    DataSerializer.register(c, id);\n\n    Object o = new NonDataSerializable(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalDataSerializer.unregister(id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n        public void uncaughtException(Thread t, Throwable e) {\n          if (e instanceof VirtualMachineError) {\n            SystemFailure.setFailure((VirtualMachineError)e); \r\n          }\n          fail(\"Uncaught exception in thread \" + t, e);\n        }\n      };\n    Thread thread = new Thread(group, \"Registrar\") {\n        public void run() {\n          try {\n            Thread.sleep(300);\n            DataSerializer.register(c, id);\n\n          } catch (Exception ex) {\n            fail(\"Interrupted while registering\", ex);\n          }\n        }\n      };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalDataSerializer.unregister(id);\n      }\n    }\n  }\n","date":"2016-09-15 02:08:18","endLine":1953,"groupId":"16403","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLateDeSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/75461e4dc621b2a51d03b8d0734e38d304cc3e.src","preCode":"  public void testLateDeSerializer() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = NonDataSerializable.NonDSSerializer.class;\n    DataSerializer.register(c, id);\n\n    Object o = new NonDataSerializable(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalDataSerializer.unregister(id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n        public void uncaughtException(Thread t, Throwable e) {\n          if (e instanceof VirtualMachineError) {\n            SystemFailure.setFailure((VirtualMachineError)e); \r\n          }\n          fail(\"Uncaught exception in thread \" + t, e);\n        }\n      };\n    Thread thread = new Thread(group, \"Registrar\") {\n        public void run() {\n          try {\n            Thread.sleep(300);\n            DataSerializer.register(c, id);\n\n          } catch (Exception ex) {\n            fail(\"Interrupted while registering\", ex);\n          }\n        }\n      };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalDataSerializer.unregister(id);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1907,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":1,"curCode":"  public void testLateInstantiator() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = DataSerializableImpl.class;\n    final Instantiator inst = new Instantiator(c, id) {\n        public DataSerializable newInstance() {\n          return new DataSerializableImpl();\n        }\n      };\n    Instantiator.register(inst);\n\n    Object o = new DataSerializableImpl(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalInstantiator.unregister(c, id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n        public void uncaughtException(Thread t, Throwable e) {\n          if (e instanceof VirtualMachineError) {\n            SystemFailure.setFailure((VirtualMachineError)e); \r\n          }\n          fail(\"Uncaught exception in thread \" + t, e);\n        }\n      };\n    Thread thread = new Thread(group, \"Registrar\") {\n        public void run() {\n          try {\n            Thread.sleep(300);\n            Instantiator.register(inst);\n\n          } catch (Exception ex) {\n            fail(\"Interrupted while registering\", ex);\n          }\n        }\n      };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalInstantiator.unregister(c, id);\n      }\n    }\n  }\n","date":"2016-09-15 02:08:18","endLine":2011,"groupId":"13334","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLateInstantiator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/75461e4dc621b2a51d03b8d0734e38d304cc3e.src","preCode":"  public void testLateInstantiator() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = DataSerializableImpl.class;\n    final Instantiator inst = new Instantiator(c, id) {\n        public DataSerializable newInstance() {\n          return new DataSerializableImpl();\n        }\n      };\n    Instantiator.register(inst);\n\n    Object o = new DataSerializableImpl(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalInstantiator.unregister(c, id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n        public void uncaughtException(Thread t, Throwable e) {\n          if (e instanceof VirtualMachineError) {\n            SystemFailure.setFailure((VirtualMachineError)e); \r\n          }\n          fail(\"Uncaught exception in thread \" + t, e);\n        }\n      };\n    Thread thread = new Thread(group, \"Registrar\") {\n        public void run() {\n          try {\n            Thread.sleep(300);\n            Instantiator.register(inst);\n\n          } catch (Exception ex) {\n            fail(\"Interrupted while registering\", ex);\n          }\n        }\n      };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalInstantiator.unregister(c, id);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1960,"status":"B"}],"commitId":"8ea08da3d2baa64ca631641430b54d71ce3ff362","commitMessage":"@@@GEODE-37 Merge branch 'feature/GEODE-37_2' into develop\n\nConflicts:\n\tgeode-core/src/main/java/com/gemstone/gemfire/cache/query/internal/IndexTrackingQueryObserver.java\n","date":"2016-09-15 02:08:18","modifiedFileCount":"151","status":"B","submitter":"Hitesh Khamesra"},{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2017-04-19 16:18:23","commitOrder":2,"curCode":"  public void testLateDeSerializer() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = NonDataSerializable.NonDSSerializer.class;\n    DataSerializer.register(c);\n\n    Object o = new NonDataSerializable(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalDataSerializer.unregister(id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t, e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      public void run() {\n        try {\n          Thread.sleep(300);\n          DataSerializer.register(c);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\", ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalDataSerializer.unregister(id);\n      }\n    }\n  }\n","date":"2017-04-26 20:40:52","endLine":1915,"groupId":"16403","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLateDeSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/2f/853db5b00f08a9f5c12f76b7de56ffaf95db99.src","preCode":"  public void testLateDeSerializer() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = NonDataSerializable.NonDSSerializer.class;\n    DataSerializer.register(c, id);\n\n    Object o = new NonDataSerializable(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalDataSerializer.unregister(id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t, e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      public void run() {\n        try {\n          Thread.sleep(300);\n          DataSerializer.register(c, id);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\", ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalDataSerializer.unregister(id);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1869,"status":"M"},{"authorDate":"2016-09-15 02:08:18","commitOrder":2,"curCode":"  public void testLateInstantiator() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = DataSerializableImpl.class;\n    final Instantiator inst = new Instantiator(c, id) {\n        public DataSerializable newInstance() {\n          return new DataSerializableImpl();\n        }\n      };\n    Instantiator.register(inst);\n\n    Object o = new DataSerializableImpl(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalInstantiator.unregister(c, id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n        public void uncaughtException(Thread t, Throwable e) {\n          if (e instanceof VirtualMachineError) {\n            SystemFailure.setFailure((VirtualMachineError)e); \r\n          }\n          fail(\"Uncaught exception in thread \" + t, e);\n        }\n      };\n    Thread thread = new Thread(group, \"Registrar\") {\n        public void run() {\n          try {\n            Thread.sleep(300);\n            Instantiator.register(inst);\n\n          } catch (Exception ex) {\n            fail(\"Interrupted while registering\", ex);\n          }\n        }\n      };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalInstantiator.unregister(c, id);\n      }\n    }\n  }\n","date":"2016-09-15 02:08:18","endLine":2011,"groupId":"13334","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLateInstantiator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/8f/75461e4dc621b2a51d03b8d0734e38d304cc3e.src","preCode":"  public void testLateInstantiator() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = DataSerializableImpl.class;\n    final Instantiator inst = new Instantiator(c, id) {\n        public DataSerializable newInstance() {\n          return new DataSerializableImpl();\n        }\n      };\n    Instantiator.register(inst);\n\n    Object o = new DataSerializableImpl(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalInstantiator.unregister(c, id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n        public void uncaughtException(Thread t, Throwable e) {\n          if (e instanceof VirtualMachineError) {\n            SystemFailure.setFailure((VirtualMachineError)e); \r\n          }\n          fail(\"Uncaught exception in thread \" + t, e);\n        }\n      };\n    Thread thread = new Thread(group, \"Registrar\") {\n        public void run() {\n          try {\n            Thread.sleep(300);\n            Instantiator.register(inst);\n\n          } catch (Exception ex) {\n            fail(\"Interrupted while registering\", ex);\n          }\n        }\n      };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalInstantiator.unregister(c, id);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1960,"status":"N"}],"commitId":"384970dabbcb8476a074b83f50052339ebba5bae","commitMessage":"@@@GEODE-255: Removed deprecated DataSerializer.register(Class. byte)\nThis closes #466\n\nSigned-off-by: adongre <adongre@apache.org>\n","date":"2017-04-26 20:40:52","modifiedFileCount":"2","status":"M","submitter":"Avinash"},{"authorTime":"2018-07-18 03:54:18","codes":[{"authorDate":"2018-07-18 03:54:18","commitOrder":3,"curCode":"  public void testLateDeSerializer() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = NonDataSerializable.NonDSSerializer.class;\n    DataSerializer.register(c);\n\n    Object o = new NonDataSerializable(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalDataSerializer.unregister(id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t + e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      public void run() {\n        try {\n          Thread.sleep(300);\n          DataSerializer.register(c);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\" + ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalDataSerializer.unregister(id);\n      }\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":1936,"groupId":"16403","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testLateDeSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b7/3b0f7dcd809781dad58e9da972f6124034d8f9.src","preCode":"  public void testLateDeSerializer() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = NonDataSerializable.NonDSSerializer.class;\n    DataSerializer.register(c);\n\n    Object o = new NonDataSerializable(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalDataSerializer.unregister(id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t, e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      public void run() {\n        try {\n          Thread.sleep(300);\n          DataSerializer.register(c);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\", ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalDataSerializer.unregister(id);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1890,"status":"M"},{"authorDate":"2018-07-18 03:54:18","commitOrder":3,"curCode":"  public void testLateInstantiator() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = DataSerializableImpl.class;\n    final Instantiator inst = new Instantiator(c, id) {\n      public DataSerializable newInstance() {\n        return new DataSerializableImpl();\n      }\n    };\n    Instantiator.register(inst);\n\n    Object o = new DataSerializableImpl(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalInstantiator.unregister(c, id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t + e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      public void run() {\n        try {\n          Thread.sleep(300);\n          Instantiator.register(inst);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\" + ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalInstantiator.unregister(c, id);\n      }\n    }\n  }\n","date":"2018-07-18 03:54:18","endLine":1994,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testLateInstantiator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/b7/3b0f7dcd809781dad58e9da972f6124034d8f9.src","preCode":"  public void testLateInstantiator() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = DataSerializableImpl.class;\n    final Instantiator inst = new Instantiator(c, id) {\n      public DataSerializable newInstance() {\n        return new DataSerializableImpl();\n      }\n    };\n    Instantiator.register(inst);\n\n    Object o = new DataSerializableImpl(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalInstantiator.unregister(c, id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t, e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      public void run() {\n        try {\n          Thread.sleep(300);\n          Instantiator.register(inst);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\", ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalInstantiator.unregister(c, id);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1943,"status":"M"}],"commitId":"cb202f25b93e0a56f4776813da0bf6dcbba231cd","commitMessage":"@@@GEODE-5363: Moves all non-unit tests into specific isolated source sets. (#2126)\n\n* Creates integrationTest source set.\n* Creates distributedTest source set.\n* Creates acceptanceTest source set.\n* Creates uiTest source set.\n* Removes old categories.","date":"2018-07-18 03:54:18","modifiedFileCount":"697","status":"M","submitter":"Jacob Barrett"},{"authorTime":"2019-01-12 07:53:54","codes":[{"authorDate":"2019-01-12 07:53:54","commitOrder":4,"curCode":"  public void testLateDeSerializer() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = NonDataSerializable.NonDSSerializer.class;\n    DataSerializer.register(c);\n\n    Object o = new NonDataSerializable(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalDataSerializer.unregister(id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      @Override\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t + e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      @Override\n      public void run() {\n        try {\n          Thread.sleep(300);\n          DataSerializer.register(c);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\" + ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalDataSerializer.unregister(id);\n      }\n    }\n  }\n","date":"2019-01-12 07:53:54","endLine":1945,"groupId":"26230","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testLateDeSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0d/f787ed4443d4d4ab13ef0bda59129d9d50a0ff.src","preCode":"  public void testLateDeSerializer() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = NonDataSerializable.NonDSSerializer.class;\n    DataSerializer.register(c);\n\n    Object o = new NonDataSerializable(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalDataSerializer.unregister(id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t + e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      public void run() {\n        try {\n          Thread.sleep(300);\n          DataSerializer.register(c);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\" + ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalDataSerializer.unregister(id);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1897,"status":"M"},{"authorDate":"2019-01-12 07:53:54","commitOrder":4,"curCode":"  public void testLateInstantiator() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = DataSerializableImpl.class;\n    final Instantiator inst = new Instantiator(c, id) {\n      @Override\n      public DataSerializable newInstance() {\n        return new DataSerializableImpl();\n      }\n    };\n    Instantiator.register(inst);\n\n    Object o = new DataSerializableImpl(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalInstantiator.unregister(c, id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      @Override\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t + e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      @Override\n      public void run() {\n        try {\n          Thread.sleep(300);\n          Instantiator.register(inst);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\" + ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalInstantiator.unregister(c, id);\n      }\n    }\n  }\n","date":"2019-01-12 07:53:54","endLine":2006,"groupId":"21119","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testLateInstantiator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/0d/f787ed4443d4d4ab13ef0bda59129d9d50a0ff.src","preCode":"  public void testLateInstantiator() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = DataSerializableImpl.class;\n    final Instantiator inst = new Instantiator(c, id) {\n      public DataSerializable newInstance() {\n        return new DataSerializableImpl();\n      }\n    };\n    Instantiator.register(inst);\n\n    Object o = new DataSerializableImpl(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalInstantiator.unregister(c, id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t + e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      public void run() {\n        try {\n          Thread.sleep(300);\n          Instantiator.register(inst);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\" + ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalInstantiator.unregister(c, id);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1952,"status":"M"}],"commitId":"9d737c9e95a77cb4db05a258f318908e7899bd6c","commitMessage":"@@@GEODE-4391: Add `@Override` where missing. (#3069)\n\n* GEODE-4391: Add `@Override` where missing.\n\n* Restart Concourse.  I think that was flaky.\n","date":"2019-01-12 07:53:54","modifiedFileCount":"1582","status":"M","submitter":"Galen O'Sullivan"},{"authorTime":"2021-05-19 13:32:42","codes":[{"authorDate":"2021-05-19 13:32:42","commitOrder":5,"curCode":"  public void testLateDeSerializer() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class<?> c = NonDataSerializable.NonDSSerializer.class;\n    DataSerializer.register(c);\n\n    Object o = new NonDataSerializable(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalDataSerializer.unregister(id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      @Override\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t + e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      @Override\n      public void run() {\n        try {\n          Thread.sleep(300);\n          DataSerializer.register(c);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\" + ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalDataSerializer.unregister(id);\n      }\n    }\n  }\n","date":"2021-06-30 01:58:48","endLine":1946,"groupId":"102717","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testLateDeSerializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e9/722f7b9d627c7bfd09d36a5a25ec55cb733e67.src","preCode":"  public void testLateDeSerializer() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = NonDataSerializable.NonDSSerializer.class;\n    DataSerializer.register(c);\n\n    Object o = new NonDataSerializable(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalDataSerializer.unregister(id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      @Override\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t + e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      @Override\n      public void run() {\n        try {\n          Thread.sleep(300);\n          DataSerializer.register(c);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\" + ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalDataSerializer.unregister(id);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1898,"status":"M"},{"authorDate":"2021-05-19 13:32:42","commitOrder":5,"curCode":"  public void testLateInstantiator() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class<DataSerializableImpl> c = DataSerializableImpl.class;\n    final Instantiator inst = new Instantiator(c, id) {\n      @Override\n      public DataSerializable newInstance() {\n        return new DataSerializableImpl();\n      }\n    };\n    Instantiator.register(inst);\n\n    Object o = new DataSerializableImpl(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalInstantiator.unregister(c, id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      @Override\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t + e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      @Override\n      public void run() {\n        try {\n          Thread.sleep(300);\n          Instantiator.register(inst);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\" + ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalInstantiator.unregister(c, id);\n      }\n    }\n  }\n","date":"2021-06-30 01:58:48","endLine":2007,"groupId":"102717","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testLateInstantiator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/e9/722f7b9d627c7bfd09d36a5a25ec55cb733e67.src","preCode":"  public void testLateInstantiator() throws Exception {\n    Random random = new Random();\n\n    final byte id = (byte) 100;\n    final Class c = DataSerializableImpl.class;\n    final Instantiator inst = new Instantiator(c, id) {\n      @Override\n      public DataSerializable newInstance() {\n        return new DataSerializableImpl();\n      }\n    };\n    Instantiator.register(inst);\n\n    Object o = new DataSerializableImpl(random);\n    DataSerializer.writeObject(o, getDataOutput());\n    InternalInstantiator.unregister(c, id);\n\n    ThreadGroup group = new ThreadGroup(\"Group\") {\n      @Override\n      public void uncaughtException(Thread t, Throwable e) {\n        if (e instanceof VirtualMachineError) {\n          SystemFailure.setFailure((VirtualMachineError) e); \r\n        }\n        fail(\"Uncaught exception in thread \" + t + e);\n      }\n    };\n    Thread thread = new Thread(group, \"Registrar\") {\n      @Override\n      public void run() {\n        try {\n          Thread.sleep(300);\n          Instantiator.register(inst);\n\n        } catch (Exception ex) {\n          fail(\"Interrupted while registering\" + ex);\n        }\n      }\n    };\n    thread.start();\n\n    try {\n      DataSerializer.readObject(getDataInput());\n    } finally {\n      try {\n        long ms = 30 * 1000;\n        thread.join(ms);\n        if (thread.isAlive()) {\n          thread.interrupt();\n          fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread);\n        }\n      } finally {\n        InternalInstantiator.unregister(c, id);\n      }\n    }\n  }\n","realPath":"geode-core/src/test/java/org/apache/geode/internal/DataSerializableJUnitTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1953,"status":"M"}],"commitId":"cc6f2c307d66eb37b44bc33ac2f8a7f1f517ce13","commitMessage":"@@@GEODE-6588: Cleanup DataSerializableJUnitTest\n","date":"2021-06-30 01:58:48","modifiedFileCount":"1","status":"M","submitter":"Jacob Barrett"}]
