[{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2017-07-11 03:30:09","commitOrder":2,"curCode":"      protected static TestState fromJson(final String json) {\n        try {\n          GfJsonObject gfJsonObject = new GfJsonObject(json);\n\n          Status status = Status.valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n          List<String> jvmArguments = Arrays\n              .asList(GfJsonArray.toStringArray(gfJsonObject.getJSONArray(JSON_JVMARGUMENTS)));\n\n          return new TestState(status, gfJsonObject.getString(JSON_STATUSMESSAGE),\n              gfJsonObject.getLong(JSON_TIMESTAMP), gfJsonObject.getString(JSON_LOCATION),\n              gfJsonObject.getInt(JSON_PID), gfJsonObject.getLong(JSON_UPTIME),\n              gfJsonObject.getString(JSON_WORKINGDIRECTORY), jvmArguments,\n              gfJsonObject.getString(JSON_CLASSPATH), gfJsonObject.getString(JSON_GEMFIREVERSION),\n              gfJsonObject.getString(JSON_JAVAVERSION), gfJsonObject.getString(JSON_LOGFILE),\n              gfJsonObject.getString(JSON_HOST), gfJsonObject.getString(JSON_PORT),\n              gfJsonObject.getString(JSON_MEMBERNAME));\n        } catch (GfJsonException e) {\n          throw new IllegalArgumentException(\"Unable to create TestState from JSON: \" + json);\n        }\n      }\n","date":"2017-08-12 01:00:16","endLine":207,"groupId":"48883","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fromJson","params":"(finalStringjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/4b/03c9256cc364a91643eca90bde008afb87bbc1.src","preCode":"      protected static TestState fromJson(final String json) {\n        try {\n          GfJsonObject gfJsonObject = new GfJsonObject(json);\n\n          Status status = Status.valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n          List<String> jvmArguments = Arrays\n              .asList(GfJsonArray.toStringArray(gfJsonObject.getJSONArray(JSON_JVMARGUMENTS)));\n\n          return new TestState(status, gfJsonObject.getString(JSON_STATUSMESSAGE),\n              gfJsonObject.getLong(JSON_TIMESTAMP), gfJsonObject.getString(JSON_LOCATION),\n              gfJsonObject.getInt(JSON_PID), gfJsonObject.getLong(JSON_UPTIME),\n              gfJsonObject.getString(JSON_WORKINGDIRECTORY), jvmArguments,\n              gfJsonObject.getString(JSON_CLASSPATH), gfJsonObject.getString(JSON_GEMFIREVERSION),\n              gfJsonObject.getString(JSON_JAVAVERSION), gfJsonObject.getString(JSON_LOGFILE),\n              gfJsonObject.getString(JSON_HOST), gfJsonObject.getString(JSON_PORT),\n              gfJsonObject.getString(JSON_MEMBERNAME));\n        } catch (GfJsonException e) {\n          throw new IllegalArgumentException(\"Unable to create TestState from JSON: \" + json);\n        }\n      }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/AbstractLauncherServiceStateTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"B"},{"authorDate":"2016-09-15 02:08:18","commitOrder":2,"curCode":"    public static LocatorState fromJson(final String json) {\n      try {\n        final GfJsonObject gfJsonObject = new GfJsonObject(json);\n        \n        final Status status = Status.valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n\n        final List<String> jvmArguments = Arrays.asList(GfJsonArray.toStringArray(\n          gfJsonObject.getJSONArray(JSON_JVMARGUMENTS)));\n\n        return new LocatorState(status, \n            gfJsonObject.getString(JSON_STATUSMESSAGE),\n            gfJsonObject.getLong(JSON_TIMESTAMP),\n            gfJsonObject.getString(JSON_LOCATION),\n            gfJsonObject.getInt(JSON_PID),\n            gfJsonObject.getLong(JSON_UPTIME),\n            gfJsonObject.getString(JSON_WORKINGDIRECTORY),\n            jvmArguments,\n            gfJsonObject.getString(JSON_CLASSPATH),\n            gfJsonObject.getString(JSON_GEMFIREVERSION),\n            gfJsonObject.getString(JSON_JAVAVERSION),\n            gfJsonObject.getString(JSON_LOGFILE),\n            gfJsonObject.getString(JSON_HOST),\n            gfJsonObject.getString(JSON_PORT),\n            gfJsonObject.getString(JSON_MEMBERNAME));\n      }\n      catch (GfJsonException e) {\n        throw new IllegalArgumentException(\"Unable to create LocatorStatus from JSON: \".concat(json), e);\n      }\n    }\n","date":"2016-09-15 02:08:18","endLine":1933,"groupId":"48883","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fromJson","params":"(finalStringjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5d/b332eab621891a098eb99823b225c97048622d.src","preCode":"    public static LocatorState fromJson(final String json) {\n      try {\n        final GfJsonObject gfJsonObject = new GfJsonObject(json);\n        \n        final Status status = Status.valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n\n        final List<String> jvmArguments = Arrays.asList(GfJsonArray.toStringArray(\n          gfJsonObject.getJSONArray(JSON_JVMARGUMENTS)));\n\n        return new LocatorState(status, \n            gfJsonObject.getString(JSON_STATUSMESSAGE),\n            gfJsonObject.getLong(JSON_TIMESTAMP),\n            gfJsonObject.getString(JSON_LOCATION),\n            gfJsonObject.getInt(JSON_PID),\n            gfJsonObject.getLong(JSON_UPTIME),\n            gfJsonObject.getString(JSON_WORKINGDIRECTORY),\n            jvmArguments,\n            gfJsonObject.getString(JSON_CLASSPATH),\n            gfJsonObject.getString(JSON_GEMFIREVERSION),\n            gfJsonObject.getString(JSON_JAVAVERSION),\n            gfJsonObject.getString(JSON_LOGFILE),\n            gfJsonObject.getString(JSON_HOST),\n            gfJsonObject.getString(JSON_PORT),\n            gfJsonObject.getString(JSON_MEMBERNAME));\n      }\n      catch (GfJsonException e) {\n        throw new IllegalArgumentException(\"Unable to create LocatorStatus from JSON: \".concat(json), e);\n      }\n    }\n","realPath":"geode-core/src/main/java/org/apache/geode/distributed/LocatorLauncher.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1905,"status":"NB"}],"commitId":"894f3ee710e500c83f06be660b852d389cbb94cb","commitMessage":"@@@GEODE-3413: overhaul launcher and process classes and tests\n\nThis is primarily an overall of all ServerLauncher and LocatorLauncher\ntests and org.apache.geode.internal.process tests. The main classes in\norg.apachage.geode.internal.process package are also cleaned up.\n\nIn addition.  several bugs involving these classes and tests are fixed.\n\nHere is the complete list of tickets that are resolved in this overhaul:\n\n* GEODE-1229: LocatorLauncherRemoteJUnitTest.testStartOverwritesStalePidFile\n* GEODE-2791: LocatorLauncherAssemblyIntegrationTest.testLocatorStopsWhenJmxPortIsNonZero fails intermittently with AssertionError\n* GEODE-1308: CI failure: LocatorLauncherTest.testSetBindAddressToNonLocalHost\n* GEODE-1309: CI failure: ServerLauncherTest.testSetServerBindAddressToNonLocalHost\n* GEODE-3193: locator pid file is removed even if there was a problem while shutting down\n* GEODE-3413: Overhaul launcher tests and process tests\n* GEODE-3414: Cleanup org.apache.geode.internal.process package\n\nNote I moved all useful tests from LocatorLauncherAssemblyIntegrationTest\ninto the other launcher tests in geode-core.\n","date":"2017-08-12 01:00:16","modifiedFileCount":"59","status":"M","submitter":"Kirk Lund"},{"authorTime":"2016-09-15 02:08:18","codes":[{"authorDate":"2019-01-23 03:35:47","commitOrder":3,"curCode":"      protected static TestState fromJson(final String json) {\n        try {\n          GfJsonObject gfJsonObject = new GfJsonObject(json);\n\n          Status status = valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n          List<String> jvmArguments = Arrays\n              .asList(GfJsonArray.toStringArray(gfJsonObject.getJSONArray(JSON_JVMARGUMENTS)));\n\n          return new TestState(status, gfJsonObject.getString(JSON_STATUSMESSAGE),\n              gfJsonObject.getLong(JSON_TIMESTAMP), gfJsonObject.getString(JSON_LOCATION),\n              gfJsonObject.getInt(JSON_PID), gfJsonObject.getLong(JSON_UPTIME),\n              gfJsonObject.getString(JSON_WORKINGDIRECTORY), jvmArguments,\n              gfJsonObject.getString(JSON_CLASSPATH), gfJsonObject.getString(JSON_GEMFIREVERSION),\n              gfJsonObject.getString(JSON_JAVAVERSION), gfJsonObject.getString(JSON_LOGFILE),\n              gfJsonObject.getString(JSON_HOST), gfJsonObject.getString(JSON_PORT),\n              gfJsonObject.getString(JSON_MEMBERNAME));\n        } catch (GfJsonException e) {\n          throw new IllegalArgumentException(\"Unable to create TestState from JSON: \" + json);\n        }\n      }\n","date":"2019-01-25 03:48:14","endLine":822,"groupId":"48883","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fromJson","params":"(finalStringjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/da/47ac77ac0b1480c8054e30c5af7775e9841c11.src","preCode":"      protected static TestState fromJson(final String json) {\n        try {\n          GfJsonObject gfJsonObject = new GfJsonObject(json);\n\n          Status status = Status.valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n          List<String> jvmArguments = Arrays\n              .asList(GfJsonArray.toStringArray(gfJsonObject.getJSONArray(JSON_JVMARGUMENTS)));\n\n          return new TestState(status, gfJsonObject.getString(JSON_STATUSMESSAGE),\n              gfJsonObject.getLong(JSON_TIMESTAMP), gfJsonObject.getString(JSON_LOCATION),\n              gfJsonObject.getInt(JSON_PID), gfJsonObject.getLong(JSON_UPTIME),\n              gfJsonObject.getString(JSON_WORKINGDIRECTORY), jvmArguments,\n              gfJsonObject.getString(JSON_CLASSPATH), gfJsonObject.getString(JSON_GEMFIREVERSION),\n              gfJsonObject.getString(JSON_JAVAVERSION), gfJsonObject.getString(JSON_LOGFILE),\n              gfJsonObject.getString(JSON_HOST), gfJsonObject.getString(JSON_PORT),\n              gfJsonObject.getString(JSON_MEMBERNAME));\n        } catch (GfJsonException e) {\n          throw new IllegalArgumentException(\"Unable to create TestState from JSON: \" + json);\n        }\n      }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/AbstractLauncherServiceStateTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":803,"status":"M"},{"authorDate":"2016-09-15 02:08:18","commitOrder":3,"curCode":"    public static LocatorState fromJson(final String json) {\n      try {\n        final GfJsonObject gfJsonObject = new GfJsonObject(json);\n        \n        final Status status = Status.valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n\n        final List<String> jvmArguments = Arrays.asList(GfJsonArray.toStringArray(\n          gfJsonObject.getJSONArray(JSON_JVMARGUMENTS)));\n\n        return new LocatorState(status, \n            gfJsonObject.getString(JSON_STATUSMESSAGE),\n            gfJsonObject.getLong(JSON_TIMESTAMP),\n            gfJsonObject.getString(JSON_LOCATION),\n            gfJsonObject.getInt(JSON_PID),\n            gfJsonObject.getLong(JSON_UPTIME),\n            gfJsonObject.getString(JSON_WORKINGDIRECTORY),\n            jvmArguments,\n            gfJsonObject.getString(JSON_CLASSPATH),\n            gfJsonObject.getString(JSON_GEMFIREVERSION),\n            gfJsonObject.getString(JSON_JAVAVERSION),\n            gfJsonObject.getString(JSON_LOGFILE),\n            gfJsonObject.getString(JSON_HOST),\n            gfJsonObject.getString(JSON_PORT),\n            gfJsonObject.getString(JSON_MEMBERNAME));\n      }\n      catch (GfJsonException e) {\n        throw new IllegalArgumentException(\"Unable to create LocatorStatus from JSON: \".concat(json), e);\n      }\n    }\n","date":"2016-09-15 02:08:18","endLine":1933,"groupId":"48883","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fromJson","params":"(finalStringjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/5d/b332eab621891a098eb99823b225c97048622d.src","preCode":"    public static LocatorState fromJson(final String json) {\n      try {\n        final GfJsonObject gfJsonObject = new GfJsonObject(json);\n        \n        final Status status = Status.valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n\n        final List<String> jvmArguments = Arrays.asList(GfJsonArray.toStringArray(\n          gfJsonObject.getJSONArray(JSON_JVMARGUMENTS)));\n\n        return new LocatorState(status, \n            gfJsonObject.getString(JSON_STATUSMESSAGE),\n            gfJsonObject.getLong(JSON_TIMESTAMP),\n            gfJsonObject.getString(JSON_LOCATION),\n            gfJsonObject.getInt(JSON_PID),\n            gfJsonObject.getLong(JSON_UPTIME),\n            gfJsonObject.getString(JSON_WORKINGDIRECTORY),\n            jvmArguments,\n            gfJsonObject.getString(JSON_CLASSPATH),\n            gfJsonObject.getString(JSON_GEMFIREVERSION),\n            gfJsonObject.getString(JSON_JAVAVERSION),\n            gfJsonObject.getString(JSON_LOGFILE),\n            gfJsonObject.getString(JSON_HOST),\n            gfJsonObject.getString(JSON_PORT),\n            gfJsonObject.getString(JSON_MEMBERNAME));\n      }\n      catch (GfJsonException e) {\n        throw new IllegalArgumentException(\"Unable to create LocatorStatus from JSON: \".concat(json), e);\n      }\n    }\n","realPath":"geode-core/src/main/java/org/apache/geode/distributed/LocatorLauncher.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1905,"status":"N"}],"commitId":"91ea4957e1dfd31c0c2ff0f011b8944538c2d80f","commitMessage":"@@@GEODE-6308: Use line separators in launcher status\n","date":"2019-01-25 03:48:14","modifiedFileCount":"2","status":"M","submitter":"Kirk Lund"},{"authorTime":"2019-03-15 06:56:29","codes":[{"authorDate":"2019-03-15 06:56:29","commitOrder":4,"curCode":"      protected static TestState fromJson(final String json) {\n        try {\n          GfJsonObject gfJsonObject = new GfJsonObject(json);\n\n          Status status = valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n          List<String> jvmArguments = gfJsonObject.getJSONArray(JSON_JVMARGUMENTS).toStringList();\n\n          return new TestState(status, gfJsonObject.getString(JSON_STATUSMESSAGE),\n              gfJsonObject.getLong(JSON_TIMESTAMP), gfJsonObject.getString(JSON_LOCATION),\n              gfJsonObject.getInt(JSON_PID), gfJsonObject.getLong(JSON_UPTIME),\n              gfJsonObject.getString(JSON_WORKINGDIRECTORY), jvmArguments,\n              gfJsonObject.getString(JSON_CLASSPATH), gfJsonObject.getString(JSON_GEMFIREVERSION),\n              gfJsonObject.getString(JSON_JAVAVERSION), gfJsonObject.getString(JSON_LOGFILE),\n              gfJsonObject.getString(JSON_HOST), gfJsonObject.getString(JSON_PORT),\n              gfJsonObject.getString(JSON_MEMBERNAME));\n        } catch (GfJsonException e) {\n          throw new IllegalArgumentException(\"Unable to create TestState from JSON: \" + json);\n        }\n      }\n","date":"2019-03-15 06:56:29","endLine":820,"groupId":"48883","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"fromJson","params":"(finalStringjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/07/d0a36b0b4755e596ac0cd8a02ff9fca389eff8.src","preCode":"      protected static TestState fromJson(final String json) {\n        try {\n          GfJsonObject gfJsonObject = new GfJsonObject(json);\n\n          Status status = valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n          List<String> jvmArguments = Arrays\n              .asList(GfJsonArray.toStringArray(gfJsonObject.getJSONArray(JSON_JVMARGUMENTS)));\n\n          return new TestState(status, gfJsonObject.getString(JSON_STATUSMESSAGE),\n              gfJsonObject.getLong(JSON_TIMESTAMP), gfJsonObject.getString(JSON_LOCATION),\n              gfJsonObject.getInt(JSON_PID), gfJsonObject.getLong(JSON_UPTIME),\n              gfJsonObject.getString(JSON_WORKINGDIRECTORY), jvmArguments,\n              gfJsonObject.getString(JSON_CLASSPATH), gfJsonObject.getString(JSON_GEMFIREVERSION),\n              gfJsonObject.getString(JSON_JAVAVERSION), gfJsonObject.getString(JSON_LOGFILE),\n              gfJsonObject.getString(JSON_HOST), gfJsonObject.getString(JSON_PORT),\n              gfJsonObject.getString(JSON_MEMBERNAME));\n        } catch (GfJsonException e) {\n          throw new IllegalArgumentException(\"Unable to create TestState from JSON: \" + json);\n        }\n      }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/AbstractLauncherServiceStateTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":802,"status":"M"},{"authorDate":"2019-03-15 06:56:29","commitOrder":4,"curCode":"    public static LocatorState fromJson(final String json) {\n      try {\n        final GfJsonObject gfJsonObject = new GfJsonObject(json);\n\n        final Status status = Status.valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n\n        final List<String> jvmArguments =\n            gfJsonObject.getJSONArray(JSON_JVMARGUMENTS).toStringList();\n\n        return new LocatorState(status, gfJsonObject.getString(JSON_STATUSMESSAGE),\n            gfJsonObject.getLong(JSON_TIMESTAMP), gfJsonObject.getString(JSON_LOCATION),\n            gfJsonObject.getInt(JSON_PID), gfJsonObject.getLong(JSON_UPTIME),\n            gfJsonObject.getString(JSON_WORKINGDIRECTORY), jvmArguments,\n            gfJsonObject.getString(JSON_CLASSPATH), gfJsonObject.getString(JSON_GEMFIREVERSION),\n            gfJsonObject.getString(JSON_JAVAVERSION), gfJsonObject.getString(JSON_LOGFILE),\n            gfJsonObject.getString(JSON_HOST), gfJsonObject.getString(JSON_PORT),\n            gfJsonObject.getString(JSON_MEMBERNAME));\n      } catch (GfJsonException e) {\n        throw new IllegalArgumentException(\n            \"Unable to create LocatorStatus from JSON: \".concat(json), e);\n      }\n    }\n","date":"2019-03-15 06:56:29","endLine":2017,"groupId":"48883","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"fromJson","params":"(finalStringjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/cb/7a7d97add7583b3d7c909751ed674004d7b767.src","preCode":"    public static LocatorState fromJson(final String json) {\n      try {\n        final GfJsonObject gfJsonObject = new GfJsonObject(json);\n\n        final Status status = Status.valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n\n        final List<String> jvmArguments =\n            Arrays.asList(GfJsonArray.toStringArray(gfJsonObject.getJSONArray(JSON_JVMARGUMENTS)));\n\n        return new LocatorState(status, gfJsonObject.getString(JSON_STATUSMESSAGE),\n            gfJsonObject.getLong(JSON_TIMESTAMP), gfJsonObject.getString(JSON_LOCATION),\n            gfJsonObject.getInt(JSON_PID), gfJsonObject.getLong(JSON_UPTIME),\n            gfJsonObject.getString(JSON_WORKINGDIRECTORY), jvmArguments,\n            gfJsonObject.getString(JSON_CLASSPATH), gfJsonObject.getString(JSON_GEMFIREVERSION),\n            gfJsonObject.getString(JSON_JAVAVERSION), gfJsonObject.getString(JSON_LOGFILE),\n            gfJsonObject.getString(JSON_HOST), gfJsonObject.getString(JSON_PORT),\n            gfJsonObject.getString(JSON_MEMBERNAME));\n      } catch (GfJsonException e) {\n        throw new IllegalArgumentException(\n            \"Unable to create LocatorStatus from JSON: \".concat(json), e);\n      }\n    }\n","realPath":"geode-core/src/main/java/org/apache/geode/distributed/LocatorLauncher.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1996,"status":"M"}],"commitId":"aa38e224f484d22def2bae2ff940715f2ab86de9","commitMessage":"@@@GEODE-5013 Replace org.json with Jackson in GfJsonObject\n\nThis removes org.json as a dependency in geode-core and associated test\nmodules.  GfJsonObject and GfJsonArray are ported to use the same basic\nJackson ObjectMapper setup as QueryResultFormatter so that we now have a\nuniform mechanism for managing JSON documents for querying/gfsh and\nfolks can use Jackson annotations like @JsonIgnore on their classes.\n\nThe geode-web-api and geode-pulse modules still use the geode-json\nmodule in tests.  When/if they are ported to use GfJsonObject/Array we can delete\nthe geode-json module.\n","date":"2019-03-15 06:56:29","modifiedFileCount":"26","status":"M","submitter":"Bruce Schuchardt"},{"authorTime":"2019-05-08 00:04:24","codes":[{"authorDate":"2019-05-08 00:04:24","commitOrder":5,"curCode":"      protected static TestState fromJson(final String json) {\n        try {\n          JsonNode jsonObject = new ObjectMapper().readTree(json);\n\n          Status status = valueOfDescription(jsonObject.get(JSON_STATUS).asText());\n          List<String> jvmArguments = JsonUtil.toStringList(jsonObject.get(JSON_JVMARGUMENTS));\n\n          return new TestState(status, jsonObject.get(JSON_STATUSMESSAGE).asText(),\n              jsonObject.get(JSON_TIMESTAMP).asLong(), jsonObject.get(JSON_LOCATION).asText(),\n              jsonObject.get(JSON_PID).asInt(), jsonObject.get(JSON_UPTIME).asLong(),\n              jsonObject.get(JSON_WORKINGDIRECTORY).asText(), jvmArguments,\n              jsonObject.get(JSON_CLASSPATH).asText(), jsonObject.get(JSON_GEMFIREVERSION).asText(),\n              jsonObject.get(JSON_JAVAVERSION).asText(), jsonObject.get(JSON_LOGFILE).asText(),\n              jsonObject.get(JSON_HOST).asText(), jsonObject.get(JSON_PORT).asText(),\n              jsonObject.get(JSON_MEMBERNAME).asText());\n        } catch (Exception e) {\n          throw new IllegalArgumentException(\"Unable to create TestState from JSON: \" + json);\n        }\n      }\n","date":"2019-05-08 00:04:24","endLine":821,"groupId":"102853","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"fromJson","params":"(finalStringjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/d8/cf92e61f3381596638ae8ea7da1ca482c19fcf.src","preCode":"      protected static TestState fromJson(final String json) {\n        try {\n          GfJsonObject gfJsonObject = new GfJsonObject(json);\n\n          Status status = valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n          List<String> jvmArguments = gfJsonObject.getJSONArray(JSON_JVMARGUMENTS).toStringList();\n\n          return new TestState(status, gfJsonObject.getString(JSON_STATUSMESSAGE),\n              gfJsonObject.getLong(JSON_TIMESTAMP), gfJsonObject.getString(JSON_LOCATION),\n              gfJsonObject.getInt(JSON_PID), gfJsonObject.getLong(JSON_UPTIME),\n              gfJsonObject.getString(JSON_WORKINGDIRECTORY), jvmArguments,\n              gfJsonObject.getString(JSON_CLASSPATH), gfJsonObject.getString(JSON_GEMFIREVERSION),\n              gfJsonObject.getString(JSON_JAVAVERSION), gfJsonObject.getString(JSON_LOGFILE),\n              gfJsonObject.getString(JSON_HOST), gfJsonObject.getString(JSON_PORT),\n              gfJsonObject.getString(JSON_MEMBERNAME));\n        } catch (GfJsonException e) {\n          throw new IllegalArgumentException(\"Unable to create TestState from JSON: \" + json);\n        }\n      }\n","realPath":"geode-core/src/test/java/org/apache/geode/distributed/AbstractLauncherServiceStateTest.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":803,"status":"M"},{"authorDate":"2019-05-08 00:04:24","commitOrder":5,"curCode":"    public static LocatorState fromJson(final String json) {\n      try {\n        final JsonNode jsonObject = new ObjectMapper().readTree(json);\n\n        final Status status = Status.valueOfDescription(jsonObject.get(JSON_STATUS).asText());\n\n        final List<String> jvmArguments = JsonUtil.toStringList(jsonObject.get(JSON_JVMARGUMENTS));\n\n        return new LocatorState(status, jsonObject.get(JSON_STATUSMESSAGE).asText(),\n            jsonObject.get(JSON_TIMESTAMP).asLong(), jsonObject.get(JSON_LOCATION).asText(),\n            jsonObject.get(JSON_PID).asInt(), jsonObject.get(JSON_UPTIME).asLong(),\n            jsonObject.get(JSON_WORKINGDIRECTORY).asText(), jvmArguments,\n            jsonObject.get(JSON_CLASSPATH).asText(), jsonObject.get(JSON_GEMFIREVERSION).asText(),\n            jsonObject.get(JSON_JAVAVERSION).asText(), jsonObject.get(JSON_LOGFILE).asText(),\n            jsonObject.get(JSON_HOST).asText(), jsonObject.get(JSON_PORT).asText(),\n            jsonObject.get(JSON_MEMBERNAME).asText());\n      } catch (Exception e) {\n        throw new IllegalArgumentException(\n            \"Unable to create LocatorStatus from JSON: \".concat(json), e);\n      }\n    }\n","date":"2019-05-08 00:04:24","endLine":2017,"groupId":"102853","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"fromJson","params":"(finalStringjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-geode-10-0.7/blobInfo/CC_OUT/blobs/17/33b8eda3b1a4b592f8f996650d2f005adc7a4e.src","preCode":"    public static LocatorState fromJson(final String json) {\n      try {\n        final GfJsonObject gfJsonObject = new GfJsonObject(json);\n\n        final Status status = Status.valueOfDescription(gfJsonObject.getString(JSON_STATUS));\n\n        final List<String> jvmArguments =\n            gfJsonObject.getJSONArray(JSON_JVMARGUMENTS).toStringList();\n\n        return new LocatorState(status, gfJsonObject.getString(JSON_STATUSMESSAGE),\n            gfJsonObject.getLong(JSON_TIMESTAMP), gfJsonObject.getString(JSON_LOCATION),\n            gfJsonObject.getInt(JSON_PID), gfJsonObject.getLong(JSON_UPTIME),\n            gfJsonObject.getString(JSON_WORKINGDIRECTORY), jvmArguments,\n            gfJsonObject.getString(JSON_CLASSPATH), gfJsonObject.getString(JSON_GEMFIREVERSION),\n            gfJsonObject.getString(JSON_JAVAVERSION), gfJsonObject.getString(JSON_LOGFILE),\n            gfJsonObject.getString(JSON_HOST), gfJsonObject.getString(JSON_PORT),\n            gfJsonObject.getString(JSON_MEMBERNAME));\n      } catch (GfJsonException e) {\n        throw new IllegalArgumentException(\n            \"Unable to create LocatorStatus from JSON: \".concat(json), e);\n      }\n    }\n","realPath":"geode-core/src/main/java/org/apache/geode/distributed/LocatorLauncher.java","repoName":"geode","snippetEndLine":0,"snippetStartLine":0,"startLine":1997,"status":"M"}],"commitId":"6defb1b8e2a663afb5d23124a9a63b5107ab85a2","commitMessage":"@@@GEODE-6743: Remove GFJsonObject and GFJsonArray classes (#3555)\n\n","date":"2019-05-08 00:04:24","modifiedFileCount":"18","status":"M","submitter":"Jens Deppe"}]
