[{"authorTime":"2018-02-20 20:25:20","codes":[{"authorDate":"2018-02-21 18:27:13","commitOrder":2,"curCode":"\tpublic void autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\n\t\t\t\t\t\t\"spring.datasource.schema:db/create-custom-schema.sql\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").meter();\n\t\t\t\t});\n\t}\n","date":"2018-02-21 18:32:41","endLine":114,"groupId":"2364","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/10/eef4d7c641c349f25cba4cbeb53cb89ea5e734.src","preCode":"\tpublic void autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\n\t\t\t\t\t\t\"spring.datasource.schema:db/create-custom-schema.sql\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"},{"authorDate":"2018-02-20 20:25:20","commitOrder":2,"curCode":"\tpublic void hikariDataSourceInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.enable.hikaricp=false\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"hikaricp.connections\").meter())\n\t\t\t\t\t\t\t.isNull();\n\t\t\t\t});\n\t}\n","date":"2018-02-20 20:25:20","endLine":113,"groupId":"4161","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"hikariDataSourceInstrumentationCanBeDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0c/9d5efd422a862f217b5d079b077e4ecd235718.src","preCode":"\tpublic void hikariDataSourceInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.enable.hikaricp=false\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"hikaricp.connections\").meter())\n\t\t\t\t\t\t\t.isNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"NB"}],"commitId":"e7176c63f571a2052a17c3aa6cb0e67e1379bf4b","commitMessage":"@@@Stop DataSource initialization from preventing Hikari instrumentation\n\nCloses gh-12129\n","date":"2018-02-21 18:32:41","modifiedFileCount":"3","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2018-06-02 00:58:03","codes":[{"authorDate":"2018-06-02 00:58:03","commitOrder":3,"curCode":"\tpublic void autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\n\t\t\t\t\t\t\"spring.datasource.schema:db/create-custom-schema.sql\")\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(DataSourceAutoConfiguration.class))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").meter();\n\t\t\t\t});\n\t}\n","date":"2018-06-02 00:58:03","endLine":130,"groupId":"2364","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/44314fc1a4523ace388ddf4fbb5dda63b1acda.src","preCode":"\tpublic void autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\n\t\t\t\t\t\t\"spring.datasource.schema:db/create-custom-schema.sql\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2018-06-02 00:58:03","commitOrder":3,"curCode":"\tpublic void hikariDataSourceInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.enable.hikaricp=false\")\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(DataSourceAutoConfiguration.class))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"hikaricp.connections\").meter()).isNull();\n\t\t\t\t});\n\t}\n","date":"2018-06-02 00:58:03","endLine":155,"groupId":"4161","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"hikariDataSourceInstrumentationCanBeDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/44314fc1a4523ace388ddf4fbb5dda63b1acda.src","preCode":"\tpublic void hikariDataSourceInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.enable.hikaricp=false\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"hikaricp.connections\").meter()).isNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"78b1a37d7d8d3e5f0986c3e7b0ec7bcbb08ab052","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-06-02 00:58:03","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.datasource.schema:db/create-custom-schema.sql\")\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").meter();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":111,"groupId":"2364","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/50/f1361fa141a8e125bc0750bf24c115864db8df.src","preCode":"\tpublic void autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.datasource.schema:db/create-custom-schema.sql\")\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid hikariDataSourceInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.enable.hikaricp=false\")\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"hikaricp.connections\").meter()).isNull();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":132,"groupId":"4161","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"hikariDataSourceInstrumentationCanBeDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/50/f1361fa141a8e125bc0750bf24c115864db8df.src","preCode":"\tpublic void hikariDataSourceInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.enable.hikaricp=false\")\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"hikaricp.connections\").meter()).isNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2021-03-24 00:50:22","commitOrder":5,"curCode":"\tvoid autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.sql.init.schema:db/create-custom-schema.sql\").withConfiguration(\n\t\t\t\tAutoConfigurations.of(DataSourceAutoConfiguration.class, SqlInitializationAutoConfiguration.class))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").meter();\n\t\t\t\t});\n\t}\n","date":"2021-03-24 22:57:29","endLine":124,"groupId":"10879","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/94/5386533149c7cad6a80f7ae0be09549f6827ed.src","preCode":"\tvoid autoConfiguredHikariDataSourceIsInstrumentedWhenUsingDataSourceInitialization() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.datasource.schema:db/create-custom-schema.sql\")\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid hikariDataSourceInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.enable.hikaricp=false\")\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"hikaricp.connections\").meter()).isNull();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":132,"groupId":"10879","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"hikariDataSourceInstrumentationCanBeDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/50/f1361fa141a8e125bc0750bf24c115864db8df.src","preCode":"\tvoid hikariDataSourceInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.enable.hikaricp=false\")\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"hikaricp.connections\").meter()).isNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"}],"commitId":"90b4ced7a6a9bdd8e61485247fca0283e5eb863d","commitMessage":"@@@Move DataSource init auto-config out of DataSourceAutoConfiguration\n\nPreviously.  the auto-configuration for DataSource initialization and\nthe properties used to configure it were part of the general\nDataSource auto-configuration and properties.\n\nThis commit moves the auto-configuration of DataSource initialization\nout into a separate top-level auto-configuration class. Similarly. \nthe properties for configuring DataSource initialization have been\nmoved from `spring.datasource.*` into `spring.sql.init.*`.\n\nThe old initialization-related `spring.datasource.*` properties have\nbeen deprecated but can still be used. When they are used.  they new. \nseparate initialization auto-configuration will back off. In other\nwords.  the initialization related `spring.datasource.*` properties\nand the `spring.sql.init.*` properties cannot be used in combination.\n\nCloses gh-25323\n","date":"2021-03-24 22:57:29","modifiedFileCount":"27","status":"M","submitter":"Andy Wilkinson"}]
