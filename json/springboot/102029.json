[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void startupWithDefaults() throws Exception {\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>(\n\t\t\t\tthis.servlet);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"mockServlet\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(true);\n\t\tverify(this.registration).addMapping(\"/*\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":85,"groupId":"13765","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startupWithDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9e/3de86b7f3bcbe0482047cb1fd47b53d48df544.src","preCode":"\tpublic void startupWithDefaults() throws Exception {\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>(\n\t\t\t\tthis.servlet);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"mockServlet\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(true);\n\t\tverify(this.registration).addMapping(\"/*\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/ServletRegistrationBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void startupWithSpecifiedValues() throws Exception {\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>();\n\t\tbean.setName(\"test\");\n\t\tbean.setServlet(this.servlet);\n\t\tbean.setAsyncSupported(false);\n\t\tbean.setInitParameters(Collections.singletonMap(\"a\", \"b\"));\n\t\tbean.addInitParameter(\"c\", \"d\");\n\t\tbean.setUrlMappings(new LinkedHashSet<>(Arrays.asList(\"/a\", \"/b\")));\n\t\tbean.addUrlMappings(\"/c\");\n\t\tbean.setLoadOnStartup(10);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"test\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(false);\n\t\tMap<String, String> expectedInitParameters = new HashMap<>();\n\t\texpectedInitParameters.put(\"a\", \"b\");\n\t\texpectedInitParameters.put(\"c\", \"d\");\n\t\tverify(this.registration).setInitParameters(expectedInitParameters);\n\t\tverify(this.registration).addMapping(\"/a\", \"/b\", \"/c\");\n\t\tverify(this.registration).setLoadOnStartup(10);\n\t}\n","date":"2017-10-05 11:18:56","endLine":118,"groupId":"2407","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"startupWithSpecifiedValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9e/3de86b7f3bcbe0482047cb1fd47b53d48df544.src","preCode":"\tpublic void startupWithSpecifiedValues() throws Exception {\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>();\n\t\tbean.setName(\"test\");\n\t\tbean.setServlet(this.servlet);\n\t\tbean.setAsyncSupported(false);\n\t\tbean.setInitParameters(Collections.singletonMap(\"a\", \"b\"));\n\t\tbean.addInitParameter(\"c\", \"d\");\n\t\tbean.setUrlMappings(new LinkedHashSet<>(Arrays.asList(\"/a\", \"/b\")));\n\t\tbean.addUrlMappings(\"/c\");\n\t\tbean.setLoadOnStartup(10);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"test\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(false);\n\t\tMap<String, String> expectedInitParameters = new HashMap<>();\n\t\texpectedInitParameters.put(\"a\", \"b\");\n\t\texpectedInitParameters.put(\"c\", \"d\");\n\t\tverify(this.registration).setInitParameters(expectedInitParameters);\n\t\tverify(this.registration).addMapping(\"/a\", \"/b\", \"/c\");\n\t\tverify(this.registration).setLoadOnStartup(10);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/ServletRegistrationBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid startupWithDefaults() throws Exception {\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>(this.servlet);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"mockServlet\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(true);\n\t\tverify(this.registration).addMapping(\"/*\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":77,"groupId":"13765","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startupWithDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/89/32978d0e78aab27f86853fc5d45765f1d1d71a.src","preCode":"\tpublic void startupWithDefaults() throws Exception {\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>(this.servlet);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"mockServlet\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(true);\n\t\tverify(this.registration).addMapping(\"/*\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/ServletRegistrationBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid startupWithSpecifiedValues() throws Exception {\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>();\n\t\tbean.setName(\"test\");\n\t\tbean.setServlet(this.servlet);\n\t\tbean.setAsyncSupported(false);\n\t\tbean.setInitParameters(Collections.singletonMap(\"a\", \"b\"));\n\t\tbean.addInitParameter(\"c\", \"d\");\n\t\tbean.setUrlMappings(new LinkedHashSet<>(Arrays.asList(\"/a\", \"/b\")));\n\t\tbean.addUrlMappings(\"/c\");\n\t\tbean.setLoadOnStartup(10);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"test\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(false);\n\t\tMap<String, String> expectedInitParameters = new HashMap<>();\n\t\texpectedInitParameters.put(\"a\", \"b\");\n\t\texpectedInitParameters.put(\"c\", \"d\");\n\t\tverify(this.registration).setInitParameters(expectedInitParameters);\n\t\tverify(this.registration).addMapping(\"/a\", \"/b\", \"/c\");\n\t\tverify(this.registration).setLoadOnStartup(10);\n\t}\n","date":"2019-06-07 19:25:54","endLine":108,"groupId":"2407","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"startupWithSpecifiedValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/89/32978d0e78aab27f86853fc5d45765f1d1d71a.src","preCode":"\tpublic void startupWithSpecifiedValues() throws Exception {\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>();\n\t\tbean.setName(\"test\");\n\t\tbean.setServlet(this.servlet);\n\t\tbean.setAsyncSupported(false);\n\t\tbean.setInitParameters(Collections.singletonMap(\"a\", \"b\"));\n\t\tbean.addInitParameter(\"c\", \"d\");\n\t\tbean.setUrlMappings(new LinkedHashSet<>(Arrays.asList(\"/a\", \"/b\")));\n\t\tbean.addUrlMappings(\"/c\");\n\t\tbean.setLoadOnStartup(10);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"test\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(false);\n\t\tMap<String, String> expectedInitParameters = new HashMap<>();\n\t\texpectedInitParameters.put(\"a\", \"b\");\n\t\texpectedInitParameters.put(\"c\", \"d\");\n\t\tverify(this.registration).setInitParameters(expectedInitParameters);\n\t\tverify(this.registration).addMapping(\"/a\", \"/b\", \"/c\");\n\t\tverify(this.registration).setLoadOnStartup(10);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/ServletRegistrationBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-08-08 22:53:42","codes":[{"authorDate":"2020-08-08 22:53:42","commitOrder":3,"curCode":"\tvoid startupWithDefaults() throws Exception {\n\t\tgiven(this.servletContext.addServlet(anyString(), any(Servlet.class))).willReturn(this.registration);\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>(this.servlet);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"mockServlet\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(true);\n\t\tverify(this.registration).addMapping(\"/*\");\n\t}\n","date":"2020-08-10 22:22:03","endLine":71,"groupId":"102029","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"startupWithDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2d/5ec9ad08333761a2f58223d8b3b9e78b6ed098.src","preCode":"\tvoid startupWithDefaults() throws Exception {\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>(this.servlet);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"mockServlet\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(true);\n\t\tverify(this.registration).addMapping(\"/*\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/ServletRegistrationBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2020-08-08 22:53:42","commitOrder":3,"curCode":"\tvoid startupWithSpecifiedValues() throws Exception {\n\t\tgiven(this.servletContext.addServlet(anyString(), any(Servlet.class))).willReturn(this.registration);\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>();\n\t\tbean.setName(\"test\");\n\t\tbean.setServlet(this.servlet);\n\t\tbean.setAsyncSupported(false);\n\t\tbean.setInitParameters(Collections.singletonMap(\"a\", \"b\"));\n\t\tbean.addInitParameter(\"c\", \"d\");\n\t\tbean.setUrlMappings(new LinkedHashSet<>(Arrays.asList(\"/a\", \"/b\")));\n\t\tbean.addUrlMappings(\"/c\");\n\t\tbean.setLoadOnStartup(10);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"test\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(false);\n\t\tMap<String, String> expectedInitParameters = new HashMap<>();\n\t\texpectedInitParameters.put(\"a\", \"b\");\n\t\texpectedInitParameters.put(\"c\", \"d\");\n\t\tverify(this.registration).setInitParameters(expectedInitParameters);\n\t\tverify(this.registration).addMapping(\"/a\", \"/b\", \"/c\");\n\t\tverify(this.registration).setLoadOnStartup(10);\n\t}\n","date":"2020-08-10 22:22:03","endLine":103,"groupId":"102029","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"startupWithSpecifiedValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2d/5ec9ad08333761a2f58223d8b3b9e78b6ed098.src","preCode":"\tvoid startupWithSpecifiedValues() throws Exception {\n\t\tServletRegistrationBean<MockServlet> bean = new ServletRegistrationBean<>();\n\t\tbean.setName(\"test\");\n\t\tbean.setServlet(this.servlet);\n\t\tbean.setAsyncSupported(false);\n\t\tbean.setInitParameters(Collections.singletonMap(\"a\", \"b\"));\n\t\tbean.addInitParameter(\"c\", \"d\");\n\t\tbean.setUrlMappings(new LinkedHashSet<>(Arrays.asList(\"/a\", \"/b\")));\n\t\tbean.addUrlMappings(\"/c\");\n\t\tbean.setLoadOnStartup(10);\n\t\tbean.onStartup(this.servletContext);\n\t\tverify(this.servletContext).addServlet(\"test\", this.servlet);\n\t\tverify(this.registration).setAsyncSupported(false);\n\t\tMap<String, String> expectedInitParameters = new HashMap<>();\n\t\texpectedInitParameters.put(\"a\", \"b\");\n\t\texpectedInitParameters.put(\"c\", \"d\");\n\t\tverify(this.registration).setInitParameters(expectedInitParameters);\n\t\tverify(this.registration).addMapping(\"/a\", \"/b\", \"/c\");\n\t\tverify(this.registration).setLoadOnStartup(10);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/ServletRegistrationBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"969dd35e456e6683dd5b767be2079085ccff3941","commitMessage":"@@@Upgrade to Mockito 3.4.6\n\nCloses gh-22838\n","date":"2020-08-10 22:22:03","modifiedFileCount":"68","status":"M","submitter":"Andy Wilkinson"}]
