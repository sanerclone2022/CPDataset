[{"authorTime":"2018-01-10 12:57:10","codes":[{"authorDate":"2018-01-10 12:57:10","commitOrder":1,"curCode":"\tpublic void writeOperation() {\n\t\tload(TestEndpointConfiguration.class, (client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tbody.put(\"bar\", \"two\");\n\t\t\tclient.post().uri(\"/test\").syncBody(body).exchange().expectStatus()\n\t\t\t\t\t.isNoContent().expectBody().isEmpty();\n\t\t});\n\t}\n","date":"2018-01-20 12:44:24","endLine":173,"groupId":"15992","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1b/ce93ac227e6a3dfdd23bb9cdbc68619c8d6bcf.src","preCode":"\tpublic void writeOperation() {\n\t\tload(TestEndpointConfiguration.class, (client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tbody.put(\"bar\", \"two\");\n\t\t\tclient.post().uri(\"/test\").syncBody(body).exchange().expectStatus()\n\t\t\t\t\t.isNoContent().expectBody().isEmpty();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"},{"authorDate":"2018-01-10 12:57:10","commitOrder":1,"curCode":"\tpublic void nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody() {\n\t\tload(TestEndpointConfiguration.class, (context, client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tclient.post().uri(\"/test\").syncBody(body).exchange().expectStatus()\n\t\t\t\t\t.isNoContent().expectBody().isEmpty();\n\t\t\tverify(context.getBean(EndpointDelegate.class)).write(\"one\", null);\n\t\t});\n\t}\n","date":"2018-01-20 12:44:24","endLine":209,"groupId":"4294","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1b/ce93ac227e6a3dfdd23bb9cdbc68619c8d6bcf.src","preCode":"\tpublic void nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody() {\n\t\tload(TestEndpointConfiguration.class, (context, client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tclient.post().uri(\"/test\").syncBody(body).exchange().expectStatus()\n\t\t\t\t\t.isNoContent().expectBody().isEmpty();\n\t\t\tverify(context.getBean(EndpointDelegate.class)).write(\"one\", null);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"B"}],"commitId":"1d39feffeabf4b94e3f900b941b58e0443d5887a","commitMessage":"@@@Overhaul actuator endpoint code\n\nRefactor several areas of the actuator endpoint code in order to make\nfuture extensions easier. The primary goal is to introduce the concept\nof an `ExposableEndpoint` that has technology specific subclasses and\ncan carry additional data for filters to use. Many other changes have\nbeen made along the way including:\n\n* A new EndpointSupplier interface that allows cleaner separation of\n  supplying vs discovering endpoints. This allows cleaner class names\n  and allows for better auto-configuration since a user can choose to\n  provide their own supplier entirely.\n\n* A `DiscoveredEndpoint` interface that allows the `EndpointFilter`\n  to be greatly simplified. A filter now doesn't need to know about\n  discovery concerns unless absolutely necessary.\n\n* Improved naming and package structure. Many technology specific\n  concerns are now grouped in a better way. Related concerns are\n  co-located and concepts from one area no longer leakage into another.\n\n* Simplified `HandlerMapping` implementations. Many common concerns have\n  been pulled up helping to create simpler subclasses.\n\n* Simplified JMX adapters. Many of the intermediary `Info` classes have\n  been removed. The `DiscoveredJmxOperation` is now responsible for\n  mapping methods to operations.\n\n* A specific @`HealthEndpointCloudFoundryExtension` for Cloud Foundry.\n  The extension logic used to create a \"full\" health endpoint extension\n  has been made explicit.\n\nFixes gh-11428\nFixes gh-11581\n","date":"2018-01-20 12:44:24","modifiedFileCount":"63","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid writeOperation() {\n\t\tload(TestEndpointConfiguration.class, (client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tbody.put(\"bar\", \"two\");\n\t\t\tclient.post().uri(\"/test\").syncBody(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":168,"groupId":"15992","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3d/034bfd52f13ce3b84dc8c60e6f4ef7b682d8b2.src","preCode":"\tpublic void writeOperation() {\n\t\tload(TestEndpointConfiguration.class, (client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tbody.put(\"bar\", \"two\");\n\t\t\tclient.post().uri(\"/test\").syncBody(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody() {\n\t\tload(TestEndpointConfiguration.class, (context, client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tclient.post().uri(\"/test\").syncBody(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t\tverify(context.getBean(EndpointDelegate.class)).write(\"one\", null);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":200,"groupId":"4294","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3d/034bfd52f13ce3b84dc8c60e6f4ef7b682d8b2.src","preCode":"\tpublic void nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody() {\n\t\tload(TestEndpointConfiguration.class, (context, client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tclient.post().uri(\"/test\").syncBody(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t\tverify(context.getBean(EndpointDelegate.class)).write(\"one\", null);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-09 19:13:23","codes":[{"authorDate":"2019-07-09 19:13:23","commitOrder":3,"curCode":"\tvoid writeOperation() {\n\t\tload(TestEndpointConfiguration.class, (client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tbody.put(\"bar\", \"two\");\n\t\t\tclient.post().uri(\"/test\").body(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t});\n\t}\n","date":"2019-07-09 19:13:23","endLine":168,"groupId":"15992","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"writeOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/2f305a4fbdfc3fdd7ad3e5a2fd252d7a53413e.src","preCode":"\tvoid writeOperation() {\n\t\tload(TestEndpointConfiguration.class, (client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tbody.put(\"bar\", \"two\");\n\t\t\tclient.post().uri(\"/test\").syncBody(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"},{"authorDate":"2019-07-09 19:13:23","commitOrder":3,"curCode":"\tvoid nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody() {\n\t\tload(TestEndpointConfiguration.class, (context, client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tclient.post().uri(\"/test\").body(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t\tverify(context.getBean(EndpointDelegate.class)).write(\"one\", null);\n\t\t});\n\t}\n","date":"2019-07-09 19:13:23","endLine":200,"groupId":"4294","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/2f305a4fbdfc3fdd7ad3e5a2fd252d7a53413e.src","preCode":"\tvoid nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody() {\n\t\tload(TestEndpointConfiguration.class, (context, client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tclient.post().uri(\"/test\").syncBody(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t\tverify(context.getBean(EndpointDelegate.class)).write(\"one\", null);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"}],"commitId":"d93c79316d96da75059477248e285bcb098d0077","commitMessage":"@@@Align with body method changes in RequestBodySpec\n\nCloses gh-17460\n","date":"2019-07-09 19:13:23","modifiedFileCount":"6","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-08-20 19:03:24","codes":[{"authorDate":"2019-08-20 19:03:24","commitOrder":4,"curCode":"\tvoid writeOperation() {\n\t\tload(TestEndpointConfiguration.class, (client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tbody.put(\"bar\", \"two\");\n\t\t\tclient.post().uri(\"/test\").bodyValue(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t});\n\t}\n","date":"2019-08-20 19:03:24","endLine":184,"groupId":"10431","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"writeOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/ef4df5b5b78c5ab291329ec6e123d1728e5f3c.src","preCode":"\tvoid writeOperation() {\n\t\tload(TestEndpointConfiguration.class, (client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tbody.put(\"bar\", \"two\");\n\t\t\tclient.post().uri(\"/test\").body(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2019-08-20 19:03:24","commitOrder":4,"curCode":"\tvoid nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody() {\n\t\tload(TestEndpointConfiguration.class, (context, client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tclient.post().uri(\"/test\").bodyValue(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t\tverify(context.getBean(EndpointDelegate.class)).write(\"one\", null);\n\t\t});\n\t}\n","date":"2019-08-20 19:03:24","endLine":216,"groupId":"10431","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/ef4df5b5b78c5ab291329ec6e123d1728e5f3c.src","preCode":"\tvoid nullIsPassedToTheOperationWhenArgumentIsNotFoundInPostRequestBody() {\n\t\tload(TestEndpointConfiguration.class, (context, client) -> {\n\t\t\tMap<String, Object> body = new HashMap<>();\n\t\t\tbody.put(\"foo\", \"one\");\n\t\t\tclient.post().uri(\"/test\").body(body).exchange().expectStatus().isNoContent().expectBody().isEmpty();\n\t\t\tverify(context.getBean(EndpointDelegate.class)).write(\"one\", null);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"}],"commitId":"e7c3ab3e274e1769889a531bdd6bb157b50dbf2a","commitMessage":"@@@Rename WebFlux response body methods\n\nThis commit adapts to recent changes in Spring Framework.\nSee spring-projects/spring-framework#23212\n","date":"2019-08-20 19:03:24","modifiedFileCount":"6","status":"M","submitter":"Brian Clozel"}]
