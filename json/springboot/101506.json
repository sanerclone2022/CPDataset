[{"authorTime":"2020-08-28 09:10:42","codes":[{"authorDate":"2020-08-28 09:10:42","commitOrder":1,"curCode":"\tvoid getImportOriginWhenCommaListReturnsOrigin() {\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.put(\"spring.config.import\", \"one,two,three\");\n\t\tBinder binder = new Binder(source);\n\t\tConfigDataProperties properties = ConfigDataProperties.get(binder);\n\t\tassertThat(properties.getImportOrigin(\"two\"))\n\t\t\t\t.hasToString(\"\\\"spring.config.import\\\" from property source \\\"source\\\"\");\n\t}\n","date":"2020-08-28 13:15:51","endLine":200,"groupId":"586","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getImportOriginWhenCommaListReturnsOrigin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ba/68719b4c620773b3016461a00dcf224c2aaebf.src","preCode":"\tvoid getImportOriginWhenCommaListReturnsOrigin() {\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.put(\"spring.config.import\", \"one,two,three\");\n\t\tBinder binder = new Binder(source);\n\t\tConfigDataProperties properties = ConfigDataProperties.get(binder);\n\t\tassertThat(properties.getImportOrigin(\"two\"))\n\t\t\t\t.hasToString(\"\\\"spring.config.import\\\" from property source \\\"source\\\"\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigDataPropertiesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"B"},{"authorDate":"2020-08-28 09:10:42","commitOrder":1,"curCode":"\tvoid getImportOriginWhenBracketListReturnsOrigin() {\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.put(\"spring.config.import[0]\", \"one\");\n\t\tsource.put(\"spring.config.import[1]\", \"two\");\n\t\tsource.put(\"spring.config.import[2]\", \"three\");\n\t\tBinder binder = new Binder(source);\n\t\tConfigDataProperties properties = ConfigDataProperties.get(binder);\n\t\tassertThat(properties.getImportOrigin(\"two\"))\n\t\t\t\t.hasToString(\"\\\"spring.config.import[1]\\\" from property source \\\"source\\\"\");\n\t}\n","date":"2020-08-28 13:15:51","endLine":212,"groupId":"586","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getImportOriginWhenBracketListReturnsOrigin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ba/68719b4c620773b3016461a00dcf224c2aaebf.src","preCode":"\tvoid getImportOriginWhenBracketListReturnsOrigin() {\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.put(\"spring.config.import[0]\", \"one\");\n\t\tsource.put(\"spring.config.import[1]\", \"two\");\n\t\tsource.put(\"spring.config.import[2]\", \"three\");\n\t\tBinder binder = new Binder(source);\n\t\tConfigDataProperties properties = ConfigDataProperties.get(binder);\n\t\tassertThat(properties.getImportOrigin(\"two\"))\n\t\t\t\t.hasToString(\"\\\"spring.config.import[1]\\\" from property source \\\"source\\\"\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigDataPropertiesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"B"}],"commitId":"3c1e141aef823f354f5be3961473d70ba719c474","commitMessage":"@@@Add parent origin support to config data\n\nAllow `ConfigDataLocationResolvers` to access `Origin` information for\nlocations so that they can be used as a parent origin of loaded items.\n\nThe `ResourceConfigData...` classes have been reworked so that loaded\n`PropertySources` include the parent origin.\n\nSee gh-23018\n","date":"2020-08-28 13:15:51","modifiedFileCount":"12","status":"B","submitter":"Phillip Webb"},{"authorTime":"2020-10-14 05:43:34","codes":[{"authorDate":"2020-10-14 05:43:34","commitOrder":2,"curCode":"\tvoid getImportOriginWhenCommaListReturnsOrigin() {\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.put(\"spring.config.import\", \"one,two,three\");\n\t\tBinder binder = new Binder(source);\n\t\tConfigDataProperties properties = ConfigDataProperties.get(binder);\n\t\tassertThat(properties.getImports().get(1).getOrigin())\n\t\t\t\t.hasToString(\"\\\"spring.config.import\\\" from property source \\\"source\\\"\");\n\t}\n","date":"2020-10-16 02:33:57","endLine":204,"groupId":"101506","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getImportOriginWhenCommaListReturnsOrigin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/22287a001bc89bf6c4905189b63cfa4b622885.src","preCode":"\tvoid getImportOriginWhenCommaListReturnsOrigin() {\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.put(\"spring.config.import\", \"one,two,three\");\n\t\tBinder binder = new Binder(source);\n\t\tConfigDataProperties properties = ConfigDataProperties.get(binder);\n\t\tassertThat(properties.getImportOrigin(\"two\"))\n\t\t\t\t.hasToString(\"\\\"spring.config.import\\\" from property source \\\"source\\\"\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigDataPropertiesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"},{"authorDate":"2020-10-14 05:43:34","commitOrder":2,"curCode":"\tvoid getImportOriginWhenBracketListReturnsOrigin() {\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.put(\"spring.config.import[0]\", \"one\");\n\t\tsource.put(\"spring.config.import[1]\", \"two\");\n\t\tsource.put(\"spring.config.import[2]\", \"three\");\n\t\tBinder binder = new Binder(source);\n\t\tConfigDataProperties properties = ConfigDataProperties.get(binder);\n\t\tassertThat(properties.getImports().get(1).getOrigin())\n\t\t\t\t.hasToString(\"\\\"spring.config.import[1]\\\" from property source \\\"source\\\"\");\n\t}\n","date":"2020-10-16 02:33:57","endLine":216,"groupId":"101506","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getImportOriginWhenBracketListReturnsOrigin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/22287a001bc89bf6c4905189b63cfa4b622885.src","preCode":"\tvoid getImportOriginWhenBracketListReturnsOrigin() {\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.put(\"spring.config.import[0]\", \"one\");\n\t\tsource.put(\"spring.config.import[1]\", \"two\");\n\t\tsource.put(\"spring.config.import[2]\", \"three\");\n\t\tBinder binder = new Binder(source);\n\t\tConfigDataProperties properties = ConfigDataProperties.get(binder);\n\t\tassertThat(properties.getImportOrigin(\"two\"))\n\t\t\t\t.hasToString(\"\\\"spring.config.import[1]\\\" from property source \\\"source\\\"\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigDataPropertiesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"1cf9fc107e5ed29a44935688eaca2bf6fa85108b","commitMessage":"@@@Improve ConfigData processing code\n\nRefactor `ConfigData` processing code to make it less awkward to\nfollow.\n\nPrior to this commit the `ConfigDataLocationResolver` would take a\nString location and return a `ConfigDataLocation` instance. This was\na little confusing since sometimes we would refer to `location` as the\nString value.  and sometimes it would be the typed instance. We also\nhad nowhere sensible to put the `optional:` prefix logic and we needed\nto pass a `boolean` parameter to a number of methods. The recently\nintroduced `Orgin` support also didn't have a good home.\n\nTo solve this.  `ConfigDataLocation` has been renamed to\n`ConfigDataResource`. This frees up `ConfigDataLocation` to be used\nas a richer `location` type that holds the String value.  the `Orgin`\nand provides a home for the `optional:` logic.\n\nThis commit also cleans up a few other areas of the code.  including\nrenaming `ResourceConfigData...` to `StandardConfigData...`. It also\nintroduces a new exception hierarchy for `ConfigDataNotFoundExceptions`.\n\nCloses gh-23711\n","date":"2020-10-16 02:33:57","modifiedFileCount":"41","status":"M","submitter":"Phillip Webb"}]
