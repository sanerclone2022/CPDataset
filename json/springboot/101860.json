[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void registerListener() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tfinal LinkedHashSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","date":"2017-10-05 11:18:56","endLine":762,"groupId":"14985","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"registerListener","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fa/493d81f5e428b159f4a804648dffee325268c7.src","preCode":"\tpublic void registerListener() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tfinal LinkedHashSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":752,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void registerListenerWithCustomMulticaster() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class, Multicaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tfinal LinkedHashSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","date":"2017-10-05 11:18:56","endLine":775,"groupId":"14985","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"registerListenerWithCustomMulticaster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fa/493d81f5e428b159f4a804648dffee325268c7.src","preCode":"\tpublic void registerListenerWithCustomMulticaster() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class, Multicaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tfinal LinkedHashSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":765,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-11-24 00:00:59","codes":[{"authorDate":"2017-11-24 00:00:59","commitOrder":2,"curCode":"\tpublic void registerListener() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","date":"2017-11-24 00:00:59","endLine":793,"groupId":"14985","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"registerListener","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/fa281cba94cded40453d466a6130aaf957327e.src","preCode":"\tpublic void registerListener() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tfinal LinkedHashSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":783,"status":"M"},{"authorDate":"2017-11-24 00:00:59","commitOrder":2,"curCode":"\tpublic void registerListenerWithCustomMulticaster() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class, Multicaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","date":"2017-11-24 00:00:59","endLine":806,"groupId":"14985","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"registerListenerWithCustomMulticaster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/fa281cba94cded40453d466a6130aaf957327e.src","preCode":"\tpublic void registerListenerWithCustomMulticaster() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class, Multicaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tfinal LinkedHashSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":796,"status":"M"}],"commitId":"3b1d2b0733cad18b0e9d5de1e7bdf1a68881ad3b","commitMessage":"@@@Merge pull request #11126 from Johnny Lim\n\n* gh-11126:\n  Polish\n","date":"2017-11-24 00:00:59","modifiedFileCount":"8","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void registerListener() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","date":"2017-12-12 18:57:30","endLine":793,"groupId":"14985","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"registerListener","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1e/de3d5a84ed0656d647a5905984c4106b295996.src","preCode":"\tpublic void registerListener() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":783,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void registerListenerWithCustomMulticaster() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class, Multicaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","date":"2017-12-12 18:57:30","endLine":806,"groupId":"14985","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"registerListenerWithCustomMulticaster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1e/de3d5a84ed0656d647a5905984c4106b295996.src","preCode":"\tpublic void registerListenerWithCustomMulticaster() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class,\n\t\t\t\tListenerConfig.class, Multicaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":796,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid registerListener() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","date":"2019-06-07 19:25:54","endLine":869,"groupId":"14985","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"registerListener","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/98/b7ed11c647d2d175a7e722635161ed6ad25db5.src","preCode":"\tpublic void registerListener() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":860,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid registerListenerWithCustomMulticaster() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class,\n\t\t\t\tMulticaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","date":"2019-06-07 19:25:54","endLine":882,"groupId":"14985","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"registerListenerWithCustomMulticaster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/98/b7ed11c647d2d175a7e722635161ed6ad25db5.src","preCode":"\tpublic void registerListenerWithCustomMulticaster() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class,\n\t\t\t\tMulticaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":872,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-04-15 07:40:56","codes":[{"authorDate":"2020-04-15 07:40:56","commitOrder":5,"curCode":"\tvoid registerListener() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyRegisteredListenerSuccessEvents();\n\t}\n","date":"2020-04-15 07:40:56","endLine":895,"groupId":"14985","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"registerListener","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/63/53a44810d325271fe446c38da6390c71701802.src","preCode":"\tvoid registerListener() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":886,"status":"M"},{"authorDate":"2020-04-15 07:40:56","commitOrder":5,"curCode":"\tvoid registerListenerWithCustomMulticaster() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class,\n\t\t\t\tMulticaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyRegisteredListenerSuccessEvents();\n\t}\n","date":"2020-04-15 07:40:56","endLine":908,"groupId":"14985","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"registerListenerWithCustomMulticaster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/63/53a44810d325271fe446c38da6390c71701802.src","preCode":"\tvoid registerListenerWithCustomMulticaster() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class,\n\t\t\t\tMulticaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyTestListenerEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":898,"status":"M"}],"commitId":"24ee9737c0c4d05d90cb4957a7698aee2724c679","commitMessage":"@@@Rework some aspects of the probes support\n\nCloses gh-20962\n","date":"2020-04-15 07:40:56","modifiedFileCount":"15","status":"M","submitter":"Phillip Webb"},{"authorTime":"2020-07-14 21:26:39","codes":[{"authorDate":"2020-07-14 21:26:39","commitOrder":6,"curCode":"\tvoid registerListener() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class);\n\t\tapplication\n\t\t\t\t.setApplicationContextFactory(ApplicationContextFactory.forContextClass(SpyApplicationContext.class));\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyRegisteredListenerSuccessEvents();\n\t}\n","date":"2020-07-16 22:03:08","endLine":910,"groupId":"14985","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"registerListener","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/30/e7c58f49f45a994c8857f41cacd92450b9c537.src","preCode":"\tvoid registerListener() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyRegisteredListenerSuccessEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":900,"status":"M"},{"authorDate":"2020-07-14 21:26:39","commitOrder":6,"curCode":"\tvoid registerListenerWithCustomMulticaster() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class,\n\t\t\t\tMulticaster.class);\n\t\tapplication\n\t\t\t\t.setApplicationContextFactory(ApplicationContextFactory.forContextClass(SpyApplicationContext.class));\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyRegisteredListenerSuccessEvents();\n\t}\n","date":"2020-07-16 22:03:08","endLine":924,"groupId":"14985","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"registerListenerWithCustomMulticaster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/30/e7c58f49f45a994c8857f41cacd92450b9c537.src","preCode":"\tvoid registerListenerWithCustomMulticaster() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class,\n\t\t\t\tMulticaster.class);\n\t\tapplication.setApplicationContextClass(SpyApplicationContext.class);\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyRegisteredListenerSuccessEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":913,"status":"M"}],"commitId":"0c8e52e87718af385478cb6746821b3aa2ece44e","commitMessage":"@@@Avoid using reflection to create SpringApplication's context\n\nCloses gh-22322\n","date":"2020-07-16 22:03:08","modifiedFileCount":"7","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-07-23 08:59:38","codes":[{"authorDate":"2020-07-23 08:59:38","commitOrder":7,"curCode":"\tvoid registerListener() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class);\n\t\tapplication.setApplicationContextFactory(ApplicationContextFactory.ofContextClass(SpyApplicationContext.class));\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyRegisteredListenerSuccessEvents();\n\t}\n","date":"2020-07-23 09:25:27","endLine":908,"groupId":"101860","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"registerListener","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0c/24890ce1ede9dcfa5f9183c6021b3b1f2580fa.src","preCode":"\tvoid registerListener() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class);\n\t\tapplication\n\t\t\t\t.setApplicationContextFactory(ApplicationContextFactory.forContextClass(SpyApplicationContext.class));\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyRegisteredListenerSuccessEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":899,"status":"M"},{"authorDate":"2020-07-23 08:59:38","commitOrder":7,"curCode":"\tvoid registerListenerWithCustomMulticaster() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class,\n\t\t\t\tMulticaster.class);\n\t\tapplication.setApplicationContextFactory(ApplicationContextFactory.ofContextClass(SpyApplicationContext.class));\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyRegisteredListenerSuccessEvents();\n\t}\n","date":"2020-07-23 09:25:27","endLine":921,"groupId":"101860","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"registerListenerWithCustomMulticaster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0c/24890ce1ede9dcfa5f9183c6021b3b1f2580fa.src","preCode":"\tvoid registerListenerWithCustomMulticaster() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class, ListenerConfig.class,\n\t\t\t\tMulticaster.class);\n\t\tapplication\n\t\t\t\t.setApplicationContextFactory(ApplicationContextFactory.forContextClass(SpyApplicationContext.class));\n\t\tSet<ApplicationEvent> events = new LinkedHashSet<>();\n\t\tapplication.addListeners((ApplicationListener<ApplicationEvent>) events::add);\n\t\tthis.context = application.run();\n\t\tassertThat(events).hasAtLeastOneElementOfType(ApplicationPreparedEvent.class);\n\t\tassertThat(events).hasAtLeastOneElementOfType(ContextRefreshedEvent.class);\n\t\tverifyRegisteredListenerSuccessEvents();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":911,"status":"M"}],"commitId":"14c1b0938aa2a50d9c62a885288d7750b0ddbacf","commitMessage":"@@@Polish\n","date":"2020-07-23 09:25:27","modifiedFileCount":"9","status":"M","submitter":"Phillip Webb"}]
