[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void azureDefaultLoggingConfigDoesNotCauseAFailure() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config: -Djava.util.logging.config.file=\\\"d:\\\\home\\\\site\\\\wwwroot\\\\bin\\\\apache-tomcat-7.0.52\\\\conf\\\\logging.properties\\\"\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","date":"2017-10-05 11:18:56","endLine":187,"groupId":"3709","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"azureDefaultLoggingConfigDoesNotCauseAFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/18cad9d3d6c7d929cd47660c22b3869a08ba76.src","preCode":"\tpublic void azureDefaultLoggingConfigDoesNotCauseAFailure() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config: -Djava.util.logging.config.file=\\\"d:\\\\home\\\\site\\\\wwwroot\\\\bin\\\\apache-tomcat-7.0.52\\\\conf\\\\logging.properties\\\"\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void tomcatNopLoggingConfigDoesNotCauseAFailure() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"LOGGING_CONFIG: -Dnop\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","date":"2017-10-05 11:18:56","endLine":199,"groupId":"3709","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"tomcatNopLoggingConfigDoesNotCauseAFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/18cad9d3d6c7d929cd47660c22b3869a08ba76.src","preCode":"\tpublic void tomcatNopLoggingConfigDoesNotCauseAFailure() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"LOGGING_CONFIG: -Dnop\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void azureDefaultLoggingConfigDoesNotCauseAFailure() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config: -Djava.util.logging.config.file=\\\"d:\\\\home\\\\site\\\\wwwroot\\\\bin\\\\apache-tomcat-7.0.52\\\\conf\\\\logging.properties\\\"\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","date":"2017-12-12 18:57:30","endLine":188,"groupId":"3709","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"azureDefaultLoggingConfigDoesNotCauseAFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/71/4254c41ffcf906132c7199535f0f2536c794b5.src","preCode":"\tpublic void azureDefaultLoggingConfigDoesNotCauseAFailure() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config: -Djava.util.logging.config.file=\\\"d:\\\\home\\\\site\\\\wwwroot\\\\bin\\\\apache-tomcat-7.0.52\\\\conf\\\\logging.properties\\\"\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void tomcatNopLoggingConfigDoesNotCauseAFailure() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"LOGGING_CONFIG: -Dnop\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","date":"2017-12-12 18:57:30","endLine":200,"groupId":"3709","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"tomcatNopLoggingConfigDoesNotCauseAFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/71/4254c41ffcf906132c7199535f0f2536c794b5.src","preCode":"\tpublic void tomcatNopLoggingConfigDoesNotCauseAFailure() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"LOGGING_CONFIG: -Dnop\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-12-17 20:30:04","codes":[{"authorDate":"2018-12-17 20:30:04","commitOrder":3,"curCode":"\tpublic void azureDefaultLoggingConfigDoesNotCauseAFailure() {\n\t\taddPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=-Djava.util.logging.config.file=\\\"d:\\\\home\\\\site\\\\wwwroot\\\\bin\\\\apache-tomcat-7.0.52\\\\conf\\\\logging.properties\\\"\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","date":"2018-12-17 22:02:10","endLine":195,"groupId":"3709","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"azureDefaultLoggingConfigDoesNotCauseAFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/53/0964a5d80ed7f0bfc9dd2763135fddd805ca75.src","preCode":"\tpublic void azureDefaultLoggingConfigDoesNotCauseAFailure() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config: -Djava.util.logging.config.file=\\\"d:\\\\home\\\\site\\\\wwwroot\\\\bin\\\\apache-tomcat-7.0.52\\\\conf\\\\logging.properties\\\"\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"},{"authorDate":"2018-12-17 20:30:04","commitOrder":3,"curCode":"\tpublic void tomcatNopLoggingConfigDoesNotCauseAFailure() {\n\t\taddPropertiesToEnvironment(this.context, \"LOGGING_CONFIG=-Dnop\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","date":"2018-12-17 22:02:10","endLine":206,"groupId":"3709","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"tomcatNopLoggingConfigDoesNotCauseAFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/53/0964a5d80ed7f0bfc9dd2763135fddd805ca75.src","preCode":"\tpublic void tomcatNopLoggingConfigDoesNotCauseAFailure() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"LOGGING_CONFIG: -Dnop\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"6adccbfd3049129cc6b17ea1bb45d059ca8e32be","commitMessage":"@@@Make LoggingApplicationListener and tests more robust on Windows\n\nPreviously.  LoggingApplicationListener its tests.  and LogFile made some\nassumptions that do not hold true on Windows. Specifically. \nLoggingApplicationListenerTests used TestPropertySourceUtils to add\nproperties to the environment. This uses Java's standard Properties\nparsing which does a poor job of handling Windows file paths (Strings\nwith backslashes in them). Secondly.  LogFile made assumptions about\nthe use of forward clashes for the file separator.\n\nThis commit replaces the use of TestPropertySourceUtils and removes\nthe assumption about the OS's file separator.\n\nCloses gh-15471\n","date":"2018-12-17 22:02:10","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-15 01:07:47","codes":[{"authorDate":"2019-07-15 01:07:47","commitOrder":4,"curCode":"\tpublic void azureDefaultLoggingConfigDoesNotCauseAFailure() {\n\t\taddPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=-Djava.util.logging.config.file=\\\"d:\\\\home\\\\site\\\\wwwroot\\\\bin\\\\apache-tomcat-7.0.52\\\\conf\\\\logging.properties\\\"\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","date":"2019-07-15 07:24:18","endLine":188,"groupId":"3709","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"azureDefaultLoggingConfigDoesNotCauseAFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a1/584b4388f56ca0a16f3352d5f5c806e5fb3af5.src","preCode":"\tpublic void azureDefaultLoggingConfigDoesNotCauseAFailure() {\n\t\taddPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=-Djava.util.logging.config.file=\\\"d:\\\\home\\\\site\\\\wwwroot\\\\bin\\\\apache-tomcat-7.0.52\\\\conf\\\\logging.properties\\\"\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"},{"authorDate":"2019-07-15 01:07:47","commitOrder":4,"curCode":"\tpublic void tomcatNopLoggingConfigDoesNotCauseAFailure() {\n\t\taddPropertiesToEnvironment(this.context, \"LOGGING_CONFIG=-Dnop\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","date":"2019-07-15 07:24:18","endLine":198,"groupId":"3709","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"tomcatNopLoggingConfigDoesNotCauseAFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a1/584b4388f56ca0a16f3352d5f5c806e5fb3af5.src","preCode":"\tpublic void tomcatNopLoggingConfigDoesNotCauseAFailure() {\n\t\taddPropertiesToEnvironment(this.context, \"LOGGING_CONFIG=-Dnop\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"}],"commitId":"c3816bfe7be8cc1a042396b2b7d8d236aa585c52","commitMessage":"@@@Polish output capture names\n","date":"2019-07-15 07:24:18","modifiedFileCount":"73","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-07-15 07:34:21","codes":[{"authorDate":"2019-07-15 07:34:21","commitOrder":5,"curCode":"\tvoid azureDefaultLoggingConfigDoesNotCauseAFailure() {\n\t\taddPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=-Djava.util.logging.config.file=\\\"d:\\\\home\\\\site\\\\wwwroot\\\\bin\\\\apache-tomcat-7.0.52\\\\conf\\\\logging.properties\\\"\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(this.output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(this.tempDir.toFile(), \"/spring.log\").exists()).isFalse();\n\t}\n","date":"2019-07-15 07:34:21","endLine":180,"groupId":"101222","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"azureDefaultLoggingConfigDoesNotCauseAFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/74bfda6c8921743ec2d6bfb35093b3c6b0c9f5.src","preCode":"\tpublic void azureDefaultLoggingConfigDoesNotCauseAFailure() {\n\t\taddPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=-Djava.util.logging.config.file=\\\"d:\\\\home\\\\site\\\\wwwroot\\\\bin\\\\apache-tomcat-7.0.52\\\\conf\\\\logging.properties\\\"\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2019-07-15 07:34:21","commitOrder":5,"curCode":"\tvoid tomcatNopLoggingConfigDoesNotCauseAFailure() {\n\t\taddPropertiesToEnvironment(this.context, \"LOGGING_CONFIG=-Dnop\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(this.output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(this.tempDir.toFile(), \"/spring.log\").exists()).isFalse();\n\t}\n","date":"2019-07-15 07:34:21","endLine":189,"groupId":"101222","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"tomcatNopLoggingConfigDoesNotCauseAFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/74bfda6c8921743ec2d6bfb35093b3c6b0c9f5.src","preCode":"\tpublic void tomcatNopLoggingConfigDoesNotCauseAFailure() {\n\t\taddPropertiesToEnvironment(this.context, \"LOGGING_CONFIG=-Dnop\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\").doesNotContain(\"???\");\n\t\tassertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"4b744bdfd1a74f29505fc191cc00c7a75a467041","commitMessage":"@@@Merge pull request #17491 from dreis2211\n\n* pr/17491:\n  Delete ModifiedClassPathRunner\n  Polish ModifiedClassPath support\n  Migrate ModifiedClassPath tests to JUnit 5\n  Add JUnit 5 ModifiedClassPathExtension\n  Extract ModifiedClassPathClass logic\n  Migrate to MockRestServiceServer\n  Polish LoggingApplicationListenerTests\n  Migrate to ApplicationContextRunner\n\nCloses gh-17491\n","date":"2019-07-15 07:34:21","modifiedFileCount":"38","status":"M","submitter":"Phillip Webb"}]
