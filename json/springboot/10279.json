[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"other.name:foo\", \"first.name:bar\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor other = properties.getBeans()\n\t\t\t\t\t.get(\"other\");\n\t\t\tassertThat(other).isNotNull();\n\t\t\tassertThat(other.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(other.getProperties()).isNotNull();\n\t\t\tassertThat(other.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":56,"groupId":"9737","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNaming","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a5/662a120788bc61c2c3aa09ef65845860222459.src","preCode":"\tpublic void testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"other.name:foo\", \"first.name:bar\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor other = properties.getBeans()\n\t\t\t\t\t.get(\"other\");\n\t\t\tassertThat(other).isNotNull();\n\t\t\tassertThat(other.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(other.getProperties()).isNotNull();\n\t\t\tassertThat(other.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointMethodAnnotationsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void prefixFromBeanMethodConfigurationPropertiesCanOverridePrefixOnClass() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(OverriddenPrefix.class)\n\t\t\t\t.withPropertyValues(\"other.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor bar = properties.getBeans().get(\"bar\");\n\t\t\tassertThat(bar).isNotNull();\n\t\t\tassertThat(bar.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(bar.getProperties()).isNotNull();\n\t\t\tassertThat(bar.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":74,"groupId":"2833","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prefixFromBeanMethodConfigurationPropertiesCanOverridePrefixOnClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a5/662a120788bc61c2c3aa09ef65845860222459.src","preCode":"\tpublic void prefixFromBeanMethodConfigurationPropertiesCanOverridePrefixOnClass() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(OverriddenPrefix.class)\n\t\t\t\t.withPropertyValues(\"other.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor bar = properties.getBeans().get(\"bar\");\n\t\t\tassertThat(bar).isNotNull();\n\t\t\tassertThat(bar.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(bar.getProperties()).isNotNull();\n\t\t\tassertThat(bar.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointMethodAnnotationsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-01-15 21:36:20","codes":[{"authorDate":"2018-01-15 21:36:20","commitOrder":2,"curCode":"\tpublic void testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"other.name:foo\", \"first.name:bar\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tassertThat(applicationProperties.getContexts())\n\t\t\t\t\t.containsOnlyKeys(context.getId());\n\t\t\tContextConfigurationProperties contextProperties = applicationProperties\n\t\t\t\t\t.getContexts().get(context.getId());\n\t\t\tConfigurationPropertiesBeanDescriptor other = contextProperties.getBeans()\n\t\t\t\t\t.get(\"other\");\n\t\t\tassertThat(other).isNotNull();\n\t\t\tassertThat(other.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(other.getProperties()).isNotNull();\n\t\t\tassertThat(other.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","date":"2018-01-16 17:53:52","endLine":61,"groupId":"9737","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNaming","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/961bcd8cc14b2eea443a278acdccd7ff594a42.src","preCode":"\tpublic void testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"other.name:foo\", \"first.name:bar\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor other = properties.getBeans()\n\t\t\t\t\t.get(\"other\");\n\t\t\tassertThat(other).isNotNull();\n\t\t\tassertThat(other.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(other.getProperties()).isNotNull();\n\t\t\tassertThat(other.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointMethodAnnotationsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2018-01-15 21:36:20","commitOrder":2,"curCode":"\tpublic void prefixFromBeanMethodConfigurationPropertiesCanOverridePrefixOnClass() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(OverriddenPrefix.class)\n\t\t\t\t.withPropertyValues(\"other.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tassertThat(applicationProperties.getContexts())\n\t\t\t\t\t.containsOnlyKeys(context.getId());\n\t\t\tContextConfigurationProperties contextProperties = applicationProperties\n\t\t\t\t\t.getContexts().get(context.getId());\n\t\t\tConfigurationPropertiesBeanDescriptor bar = contextProperties.getBeans()\n\t\t\t\t\t.get(\"bar\");\n\t\t\tassertThat(bar).isNotNull();\n\t\t\tassertThat(bar.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(bar.getProperties()).isNotNull();\n\t\t\tassertThat(bar.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","date":"2018-01-16 17:53:52","endLine":84,"groupId":"13698","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prefixFromBeanMethodConfigurationPropertiesCanOverridePrefixOnClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/961bcd8cc14b2eea443a278acdccd7ff594a42.src","preCode":"\tpublic void prefixFromBeanMethodConfigurationPropertiesCanOverridePrefixOnClass() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(OverriddenPrefix.class)\n\t\t\t\t.withPropertyValues(\"other.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor bar = properties.getBeans().get(\"bar\");\n\t\t\tassertThat(bar).isNotNull();\n\t\t\tassertThat(bar.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(bar.getProperties()).isNotNull();\n\t\t\tassertThat(bar.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointMethodAnnotationsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"5b8a2f96750c969c06b0765546312c37b22f0282","commitMessage":"@@@Improve context hierarchy handling in Actuator endpoints\n\nPreviously.  a number of Actuator endpoints ignored a context hierarchy\nor assumed that it would always be linear. This commit reworks the\naffected endpoints so that the no longer assume a linear hierarchy.\n\nA side-effect of a non-linear hierarchy is that there may be multiple\ndifferent beans with the same name (in a linear hierarchy.  a bean\nwith the same name as one in an ancestor context.  replaces that bean).\nThe affected endpoints have also been updated so that.  when bean names\nare used as keys.  those keys are grouped by application context. This\nprevents a bean in one context from accidentially overwriting a bean\nin another context.\n\nCloses gh-11019\n","date":"2018-01-16 17:53:52","modifiedFileCount":"25","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner().withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"other.name:foo\", \"first.name:bar\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint.configurationProperties();\n\t\t\tassertThat(applicationProperties.getContexts()).containsOnlyKeys(context.getId());\n\t\t\tContextConfigurationProperties contextProperties = applicationProperties.getContexts().get(context.getId());\n\t\t\tConfigurationPropertiesBeanDescriptor other = contextProperties.getBeans().get(\"other\");\n\t\t\tassertThat(other).isNotNull();\n\t\t\tassertThat(other.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(other.getProperties()).isNotNull();\n\t\t\tassertThat(other.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":56,"groupId":"10279","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNaming","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/57/1457de8ec0879088b03e6824144e6db7f0cd23.src","preCode":"\tpublic void testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner().withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"other.name:foo\", \"first.name:bar\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint.configurationProperties();\n\t\t\tassertThat(applicationProperties.getContexts()).containsOnlyKeys(context.getId());\n\t\t\tContextConfigurationProperties contextProperties = applicationProperties.getContexts().get(context.getId());\n\t\t\tConfigurationPropertiesBeanDescriptor other = contextProperties.getBeans().get(\"other\");\n\t\t\tassertThat(other).isNotNull();\n\t\t\tassertThat(other.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(other.getProperties()).isNotNull();\n\t\t\tassertThat(other.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointMethodAnnotationsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid prefixFromBeanMethodConfigurationPropertiesCanOverridePrefixOnClass() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(OverriddenPrefix.class).withPropertyValues(\"other.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint.configurationProperties();\n\t\t\tassertThat(applicationProperties.getContexts()).containsOnlyKeys(context.getId());\n\t\t\tContextConfigurationProperties contextProperties = applicationProperties.getContexts().get(context.getId());\n\t\t\tConfigurationPropertiesBeanDescriptor bar = contextProperties.getBeans().get(\"bar\");\n\t\t\tassertThat(bar).isNotNull();\n\t\t\tassertThat(bar.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(bar.getProperties()).isNotNull();\n\t\t\tassertThat(bar.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":74,"groupId":"10279","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prefixFromBeanMethodConfigurationPropertiesCanOverridePrefixOnClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/57/1457de8ec0879088b03e6824144e6db7f0cd23.src","preCode":"\tpublic void prefixFromBeanMethodConfigurationPropertiesCanOverridePrefixOnClass() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(OverriddenPrefix.class).withPropertyValues(\"other.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint.configurationProperties();\n\t\t\tassertThat(applicationProperties.getContexts()).containsOnlyKeys(context.getId());\n\t\t\tContextConfigurationProperties contextProperties = applicationProperties.getContexts().get(context.getId());\n\t\t\tConfigurationPropertiesBeanDescriptor bar = contextProperties.getBeans().get(\"bar\");\n\t\t\tassertThat(bar).isNotNull();\n\t\t\tassertThat(bar.getPrefix()).isEqualTo(\"other\");\n\t\t\tassertThat(bar.getProperties()).isNotNull();\n\t\t\tassertThat(bar.getProperties()).isNotEmpty();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointMethodAnnotationsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
