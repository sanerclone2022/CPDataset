[{"authorTime":"2019-02-10 17:35:53","codes":[{"authorDate":"2019-03-21 07:14:30","commitOrder":4,"curCode":"\tprivate Set<String> getPackagesToScan(AnnotationMetadata metadata) {\n\t\tAnnotationAttributes attributes = AnnotationAttributes.fromMap(metadata\n\t\t\t\t.getAnnotationAttributes(ConfigurationPropertiesScan.class.getName()));\n\t\tString[] basePackages = attributes.getStringArray(\"basePackages\");\n\t\tClass<?>[] basePackageClasses = attributes.getClassArray(\"basePackageClasses\");\n\t\tSet<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));\n\t\tfor (Class<?> basePackageClass : basePackageClasses) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(basePackageClass));\n\t\t}\n\t\tif (packagesToScan.isEmpty()) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(metadata.getClassName()));\n\t\t}\n\t\treturn packagesToScan;\n\t}\n","date":"2019-03-22 04:30:44","endLine":61,"groupId":"14800","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPackagesToScan","params":"(AnnotationMetadatametadata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a2/b21cd8ddad906a7411641afae43bace7325af8.src","preCode":"\tprivate Set<String> getPackagesToScan(AnnotationMetadata metadata) {\n\t\tAnnotationAttributes attributes = AnnotationAttributes.fromMap(metadata\n\t\t\t\t.getAnnotationAttributes(ConfigurationPropertiesScan.class.getName()));\n\t\tString[] basePackages = attributes.getStringArray(\"basePackages\");\n\t\tClass<?>[] basePackageClasses = attributes.getClassArray(\"basePackageClasses\");\n\t\tSet<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));\n\t\tfor (Class<?> basePackageClass : basePackageClasses) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(basePackageClass));\n\t\t}\n\t\tif (packagesToScan.isEmpty()) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(metadata.getClassName()));\n\t\t}\n\t\treturn packagesToScan;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesScanRegistrar.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2019-02-10 17:35:53","commitOrder":4,"curCode":"\tprivate Set<String> getPackagesToScan(AnnotationMetadata metadata) {\n\t\tAnnotationAttributes attributes = AnnotationAttributes.fromMap(\n\t\t\t\tmetadata.getAnnotationAttributes(ServletComponentScan.class.getName()));\n\t\tString[] basePackages = attributes.getStringArray(\"basePackages\");\n\t\tClass<?>[] basePackageClasses = attributes.getClassArray(\"basePackageClasses\");\n\t\tSet<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));\n\t\tfor (Class<?> basePackageClass : basePackageClasses) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(basePackageClass));\n\t\t}\n\t\tif (packagesToScan.isEmpty()) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(metadata.getClassName()));\n\t\t}\n\t\treturn packagesToScan;\n\t}\n","date":"2019-02-10 17:35:53","endLine":88,"groupId":"14800","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPackagesToScan","params":"(AnnotationMetadatametadata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/83/2109d6358aa195da5cbaab6b191ae3bceb7439.src","preCode":"\tprivate Set<String> getPackagesToScan(AnnotationMetadata metadata) {\n\t\tAnnotationAttributes attributes = AnnotationAttributes.fromMap(\n\t\t\t\tmetadata.getAnnotationAttributes(ServletComponentScan.class.getName()));\n\t\tString[] basePackages = attributes.getStringArray(\"basePackages\");\n\t\tClass<?>[] basePackageClasses = attributes.getClassArray(\"basePackageClasses\");\n\t\tSet<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));\n\t\tfor (Class<?> basePackageClass : basePackageClasses) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(basePackageClass));\n\t\t}\n\t\tif (packagesToScan.isEmpty()) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(metadata.getClassName()));\n\t\t}\n\t\treturn packagesToScan;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentScanRegistrar.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"NB"}],"commitId":"8f693a027750956c0c1e36255e2b1919fe7e17c9","commitMessage":"@@@Add support for configuration properties scanning\n\nSee gh-12602\n","date":"2019-03-22 04:30:44","modifiedFileCount":"2","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-02-10 17:35:53","codes":[{"authorDate":"2019-09-20 03:34:11","commitOrder":5,"curCode":"\tprivate Set<String> getPackagesToScan(AnnotationMetadata metadata) {\n\t\tAnnotationAttributes attributes = AnnotationAttributes\n\t\t\t\t.fromMap(metadata.getAnnotationAttributes(ConfigurationPropertiesScan.class.getName()));\n\t\tString[] basePackages = attributes.getStringArray(\"basePackages\");\n\t\tClass<?>[] basePackageClasses = attributes.getClassArray(\"basePackageClasses\");\n\t\tSet<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));\n\t\tfor (Class<?> basePackageClass : basePackageClasses) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(basePackageClass));\n\t\t}\n\t\tif (packagesToScan.isEmpty()) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(metadata.getClassName()));\n\t\t}\n\t\tpackagesToScan.removeIf((candidate) -> !StringUtils.hasText(candidate));\n\t\treturn packagesToScan;\n\t}\n","date":"2019-09-21 04:42:33","endLine":77,"groupId":"102139","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getPackagesToScan","params":"(AnnotationMetadatametadata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9b/a5338b2259a4d005954c921b59e7e03e147c87.src","preCode":"\tprivate Set<String> getPackagesToScan(AnnotationMetadata metadata) {\n\t\tAnnotationAttributes attributes = AnnotationAttributes\n\t\t\t\t.fromMap(metadata.getAnnotationAttributes(ConfigurationPropertiesScan.class.getName()));\n\t\tString[] basePackages = attributes.getStringArray(\"basePackages\");\n\t\tClass<?>[] basePackageClasses = attributes.getClassArray(\"basePackageClasses\");\n\t\tSet<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));\n\t\tfor (Class<?> basePackageClass : basePackageClasses) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(basePackageClass));\n\t\t}\n\t\tif (packagesToScan.isEmpty()) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(metadata.getClassName()));\n\t\t}\n\t\treturn packagesToScan;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesScanRegistrar.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-02-10 17:35:53","commitOrder":5,"curCode":"\tprivate Set<String> getPackagesToScan(AnnotationMetadata metadata) {\n\t\tAnnotationAttributes attributes = AnnotationAttributes.fromMap(\n\t\t\t\tmetadata.getAnnotationAttributes(ServletComponentScan.class.getName()));\n\t\tString[] basePackages = attributes.getStringArray(\"basePackages\");\n\t\tClass<?>[] basePackageClasses = attributes.getClassArray(\"basePackageClasses\");\n\t\tSet<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));\n\t\tfor (Class<?> basePackageClass : basePackageClasses) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(basePackageClass));\n\t\t}\n\t\tif (packagesToScan.isEmpty()) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(metadata.getClassName()));\n\t\t}\n\t\treturn packagesToScan;\n\t}\n","date":"2019-02-10 17:35:53","endLine":88,"groupId":"102139","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPackagesToScan","params":"(AnnotationMetadatametadata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/83/2109d6358aa195da5cbaab6b191ae3bceb7439.src","preCode":"\tprivate Set<String> getPackagesToScan(AnnotationMetadata metadata) {\n\t\tAnnotationAttributes attributes = AnnotationAttributes.fromMap(\n\t\t\t\tmetadata.getAnnotationAttributes(ServletComponentScan.class.getName()));\n\t\tString[] basePackages = attributes.getStringArray(\"basePackages\");\n\t\tClass<?>[] basePackageClasses = attributes.getClassArray(\"basePackageClasses\");\n\t\tSet<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));\n\t\tfor (Class<?> basePackageClass : basePackageClasses) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(basePackageClass));\n\t\t}\n\t\tif (packagesToScan.isEmpty()) {\n\t\t\tpackagesToScan.add(ClassUtils.getPackageName(metadata.getClassName()));\n\t\t}\n\t\treturn packagesToScan;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentScanRegistrar.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"221ff0ff6de8bd9557f3fb6d7b336a188b2dd224","commitMessage":"@@@Polish configuration property bean classes\n\nRefactor the `org.springframework.boot.actuate.context` package\nwith the following changes:\n\n- Deprecate several classes which would ideally be internal\n\n- Replace `ConfigurationBeanFactoryMetadata` with a new\n  `ConfigurationPropertiesBean` class to better reflect that we no\n  longer maintain meta-data directly.\n\n- Use constructor injection and final fields whenever possible\n\n- Rename `ConfiguraionPropertiesBeanDefinition` to\n  `ConfigurationPropertiesValueObjectBeanDefinition` to align\n  with the binder changes made in commit 0b3015e4ff\n\n- Add additional tests\n\nCloses gh-16903\n","date":"2019-09-21 04:42:33","modifiedFileCount":"14","status":"M","submitter":"Phillip Webb"}]
