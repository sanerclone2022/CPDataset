[{"authorTime":"2019-09-26 13:46:37","codes":[{"authorDate":"2019-09-26 13:46:37","commitOrder":3,"curCode":"\tvoid healthWhenPathDoesNotExistReturnsHttp404() {\n\t\tthis.registry.registerContributor(\"test\", createContributor(this.up));\n\t\tWebEndpointResponse<? extends HealthComponent> response = create(this.registry, this.groups)\n\t\t\t\t.health(ApiVersion.LATEST, SecurityContext.NONE, \"missing\").block();\n\t\tassertThat(response.getBody()).isNull();\n\t\tassertThat(response.getStatus()).isEqualTo(404);\n\t}\n","date":"2019-09-27 07:16:23","endLine":70,"groupId":"4175","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"healthWhenPathDoesNotExistReturnsHttp404","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/28/20aa4e499e5c81c836a86901e3945cb59b381e.src","preCode":"\tvoid healthWhenPathDoesNotExistReturnsHttp404() {\n\t\tthis.registry.registerContributor(\"test\", createContributor(this.up));\n\t\tWebEndpointResponse<? extends HealthComponent> response = create(this.registry, this.groups)\n\t\t\t\t.health(ApiVersion.LATEST, SecurityContext.NONE, \"missing\").block();\n\t\tassertThat(response.getBody()).isNull();\n\t\tassertThat(response.getStatus()).isEqualTo(404);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtensionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"MB"},{"authorDate":"2019-09-26 13:46:37","commitOrder":3,"curCode":"\tvoid healthWhenPathExistsReturnsHealth() {\n\t\tthis.registry.registerContributor(\"test\", createContributor(this.up));\n\t\tWebEndpointResponse<? extends HealthComponent> response = create(this.registry, this.groups)\n\t\t\t\t.health(ApiVersion.LATEST, SecurityContext.NONE, \"test\").block();\n\t\tassertThat(response.getBody()).isEqualTo(this.up);\n\t\tassertThat(response.getStatus()).isEqualTo(200);\n\t}\n","date":"2019-09-27 07:16:23","endLine":79,"groupId":"4176","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"healthWhenPathExistsReturnsHealth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/28/20aa4e499e5c81c836a86901e3945cb59b381e.src","preCode":"\tvoid healthWhenPathExistsReturnsHealth() {\n\t\tthis.registry.registerContributor(\"test\", createContributor(this.up));\n\t\tWebEndpointResponse<? extends HealthComponent> response = create(this.registry, this.groups)\n\t\t\t\t.health(ApiVersion.LATEST, SecurityContext.NONE, \"test\").block();\n\t\tassertThat(response.getBody()).isEqualTo(this.up);\n\t\tassertThat(response.getStatus()).isEqualTo(200);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtensionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"MB"}],"commitId":"69c561a69a54a32ba31f4bc66e7954ee21e6445f","commitMessage":"@@@Rename health JSON 'details' to 'components' in v3\n\nUpdate the health endpoint so the nested components are now exposed\nunder `components` rather than `details` when v3 of the actuator\nREST API is being used.\n\nThis distinction helps to clarify the difference between composite\nhealth (health composed of other health components) and health\ndetails (technology specific information gathered by the indicator).\n\nSince this is a breaking change for the REST API.  it is only returned\nfor v3 payloads. Requests made accepting only a v2 response will have\nJSON provided in the original form.\n\nCloses gh-17929\n","date":"2019-09-27 07:16:23","modifiedFileCount":"21","status":"M","submitter":"Phillip Webb"},{"authorTime":"2021-07-14 06:13:04","codes":[{"authorDate":"2021-07-14 06:13:04","commitOrder":4,"curCode":"\tvoid healthWhenPathDoesNotExistReturnsHttp404() {\n\t\tthis.registry.registerContributor(\"test\", createContributor(this.up));\n\t\tWebEndpointResponse<? extends HealthComponent> response = create(this.registry, this.groups)\n\t\t\t\t.health(ApiVersion.LATEST, null, SecurityContext.NONE, \"missing\").block();\n\t\tassertThat(response.getBody()).isNull();\n\t\tassertThat(response.getStatus()).isEqualTo(404);\n\t}\n","date":"2021-08-12 10:25:25","endLine":72,"groupId":"10314","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"healthWhenPathDoesNotExistReturnsHttp404","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/38/acbd1acee98d180bbe4fd2ca771a99228672f7.src","preCode":"\tvoid healthWhenPathDoesNotExistReturnsHttp404() {\n\t\tthis.registry.registerContributor(\"test\", createContributor(this.up));\n\t\tWebEndpointResponse<? extends HealthComponent> response = create(this.registry, this.groups)\n\t\t\t\t.health(ApiVersion.LATEST, SecurityContext.NONE, \"missing\").block();\n\t\tassertThat(response.getBody()).isNull();\n\t\tassertThat(response.getStatus()).isEqualTo(404);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtensionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2021-07-14 06:13:04","commitOrder":4,"curCode":"\tvoid healthWhenPathExistsReturnsHealth() {\n\t\tthis.registry.registerContributor(\"test\", createContributor(this.up));\n\t\tWebEndpointResponse<? extends HealthComponent> response = create(this.registry, this.groups)\n\t\t\t\t.health(ApiVersion.LATEST, null, SecurityContext.NONE, \"test\").block();\n\t\tassertThat(response.getBody()).isEqualTo(this.up);\n\t\tassertThat(response.getStatus()).isEqualTo(200);\n\t}\n","date":"2021-08-12 10:25:25","endLine":81,"groupId":"10314","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"healthWhenPathExistsReturnsHealth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/38/acbd1acee98d180bbe4fd2ca771a99228672f7.src","preCode":"\tvoid healthWhenPathExistsReturnsHealth() {\n\t\tthis.registry.registerContributor(\"test\", createContributor(this.up));\n\t\tWebEndpointResponse<? extends HealthComponent> response = create(this.registry, this.groups)\n\t\t\t\t.health(ApiVersion.LATEST, SecurityContext.NONE, \"test\").block();\n\t\tassertThat(response.getBody()).isEqualTo(this.up);\n\t\tassertThat(response.getStatus()).isEqualTo(200);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtensionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"49c86e6e1bef32e21bd2979aabddfcbacbe8ee89","commitMessage":"@@@Allow health groups to be configured at an additional path\n\nCloses gh-25471\n\nCo-authored-by: Phillip Webb <pwebb@vmware.com>\n","date":"2021-08-12 10:25:25","modifiedFileCount":"35","status":"M","submitter":"Madhura Bhave"}]
