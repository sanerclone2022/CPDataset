[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void bindWhenUsingNoUnboundElementsHandlerShouldBind() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\tnew NoUnboundElementsBindHandler()).get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":69,"groupId":"14088","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bindWhenUsingNoUnboundElementsHandlerShouldBind","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/59da56addb729ffcd4b75a11c7f72c53d0432e.src","preCode":"\tpublic void bindWhenUsingNoUnboundElementsHandlerShouldBind() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\tnew NoUnboundElementsBindHandler()).get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void bindWhenUsingNoUnboundElementsHandlerShouldBindIfUnboundSystemProperties()\n\t\t\tthrows Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tsource.put(\"example.other\", \"baz\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tNoUnboundElementsBindHandler handler = new NoUnboundElementsBindHandler(\n\t\t\t\tBindHandler.DEFAULT, ((configurationPropertySource) -> false));\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class), handler)\n\t\t\t\t.get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":115,"groupId":"14088","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bindWhenUsingNoUnboundElementsHandlerShouldBindIfUnboundSystemProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/59da56addb729ffcd4b75a11c7f72c53d0432e.src","preCode":"\tpublic void bindWhenUsingNoUnboundElementsHandlerShouldBindIfUnboundSystemProperties()\n\t\t\tthrows Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tsource.put(\"example.other\", \"baz\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tNoUnboundElementsBindHandler handler = new NoUnboundElementsBindHandler(\n\t\t\t\tBindHandler.DEFAULT, ((configurationPropertySource) -> false));\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class), handler)\n\t\t\t\t.get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void bindWhenUsingNoUnboundElementsHandlerShouldBind() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\tnew NoUnboundElementsBindHandler()).get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":69,"groupId":"14088","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bindWhenUsingNoUnboundElementsHandlerShouldBind","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4d/8401b9b0a239e275baf8ca3b7236877bacd91b.src","preCode":"\tpublic void bindWhenUsingNoUnboundElementsHandlerShouldBind() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\tnew NoUnboundElementsBindHandler()).get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void bindWhenUsingNoUnboundElementsHandlerShouldBindIfUnboundSystemProperties() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tsource.put(\"example.other\", \"baz\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tNoUnboundElementsBindHandler handler = new NoUnboundElementsBindHandler(\n\t\t\t\tBindHandler.DEFAULT, ((configurationPropertySource) -> false));\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class), handler)\n\t\t\t\t.get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":113,"groupId":"14088","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bindWhenUsingNoUnboundElementsHandlerShouldBindIfUnboundSystemProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4d/8401b9b0a239e275baf8ca3b7236877bacd91b.src","preCode":"\tpublic void bindWhenUsingNoUnboundElementsHandlerShouldBindIfUnboundSystemProperties()\n\t\t\tthrows Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tsource.put(\"example.other\", \"baz\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tNoUnboundElementsBindHandler handler = new NoUnboundElementsBindHandler(\n\t\t\t\tBindHandler.DEFAULT, ((configurationPropertySource) -> false));\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class), handler)\n\t\t\t\t.get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid bindWhenUsingNoUnboundElementsHandlerShouldBind() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class), new NoUnboundElementsBindHandler())\n\t\t\t\t.get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":67,"groupId":"101420","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"bindWhenUsingNoUnboundElementsHandlerShouldBind","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/07/e0967c712e5c7b440a578711cdd206ae20d470.src","preCode":"\tpublic void bindWhenUsingNoUnboundElementsHandlerShouldBind() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class), new NoUnboundElementsBindHandler())\n\t\t\t\t.get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid bindWhenUsingNoUnboundElementsHandlerShouldBindIfUnboundSystemProperties() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tsource.put(\"example.other\", \"baz\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tNoUnboundElementsBindHandler handler = new NoUnboundElementsBindHandler(BindHandler.DEFAULT,\n\t\t\t\t((configurationPropertySource) -> false));\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class), handler).get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":105,"groupId":"101420","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"bindWhenUsingNoUnboundElementsHandlerShouldBindIfUnboundSystemProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/07/e0967c712e5c7b440a578711cdd206ae20d470.src","preCode":"\tpublic void bindWhenUsingNoUnboundElementsHandlerShouldBindIfUnboundSystemProperties() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"bar\");\n\t\tsource.put(\"example.other\", \"baz\");\n\t\tthis.sources.add(source);\n\t\tthis.binder = new Binder(this.sources);\n\t\tNoUnboundElementsBindHandler handler = new NoUnboundElementsBindHandler(BindHandler.DEFAULT,\n\t\t\t\t((configurationPropertySource) -> false));\n\t\tExample bound = this.binder.bind(\"example\", Bindable.of(Example.class), handler).get();\n\t\tassertThat(bound.getFoo()).isEqualTo(\"bar\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
