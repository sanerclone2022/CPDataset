[{"authorTime":"2017-11-03 12:20:07","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tpublic void testLevelPatternProperty() {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(\n\t\t\t\tenvironment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":325,"groupId":"3981","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLevelPatternProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2c/5b047bd6727c93556a231337b7b5cc5aaed4f7.src","preCode":"\tpublic void testLevelPatternProperty() {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(\n\t\t\t\tenvironment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"NB"},{"authorDate":"2017-11-03 12:20:07","commitOrder":2,"curCode":"\tpublic void testDateformatPatternProperty() {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.dateformat\",\n\t\t\t\t\"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(\n\t\t\t\tenvironment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","date":"2017-11-03 14:22:16","endLine":455,"groupId":"3981","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDateformatPatternProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/86/dd231596967553b3e472152149d0f2fbe24964.src","preCode":"\tpublic void testDateformatPatternProperty() {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.dateformat\",\n\t\t\t\t\"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(\n\t\t\t\tenvironment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":444,"status":"B"}],"commitId":"b58f1f00fa932054d28cee7fcfa4d81f168288db","commitMessage":"@@@Merge pull request #8516 from hdohlmann/logging-pattern-dateformat\n\n* pr/8516:\n  Introduce configurable logging.pattern.dateformat\n","date":"2017-11-03 14:22:16","modifiedFileCount":"4","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-06-30 06:53:56","codes":[{"authorDate":"2019-06-30 06:53:56","commitOrder":3,"curCode":"\tvoid testLevelPatternProperty(CapturedOutput output) {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","date":"2019-06-30 06:53:56","endLine":299,"groupId":"3981","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLevelPatternProperty","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/14/f71ae79ea54790e38db9ccd6e440fc1cfb6154.src","preCode":"\tpublic void testLevelPatternProperty() {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"},{"authorDate":"2019-06-30 06:53:56","commitOrder":3,"curCode":"\tvoid testDateformatPatternProperty(CapturedOutput output) {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.dateformat\", \"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","date":"2019-06-30 06:53:56","endLine":512,"groupId":"3981","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDateformatPatternProperty","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/14/f71ae79ea54790e38db9ccd6e440fc1cfb6154.src","preCode":"\tpublic void testDateformatPatternProperty() {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.dateformat\", \"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":504,"status":"M"}],"commitId":"a5f430264968166c80f2a3d88bc0f96d0c3c2521","commitMessage":"@@@Merge pull request #17107 from L00kian\n\n* gh-17107:\n  Polish \"Migrate LogbackLoggingSystemTests to JUnit 5\"\n  Migrate LogbackLoggingSystemTests to JUnit 5\n\nCloses gh-17107\n","date":"2019-06-30 06:53:56","modifiedFileCount":"4","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-10-21 09:13:23","codes":[{"authorDate":"2020-10-21 09:13:23","commitOrder":4,"curCode":"\tvoid testLevelPatternProperty(CapturedOutput output) {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tnew LoggingSystemProperties(environment).apply();\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","date":"2020-10-21 09:13:23","endLine":316,"groupId":"3981","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testLevelPatternProperty","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fa/91f0200d816e38dbaa4e82fbfe8a5e9b2f7839.src","preCode":"\tvoid testLevelPatternProperty(CapturedOutput output) {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"M"},{"authorDate":"2020-10-21 09:13:23","commitOrder":4,"curCode":"\tvoid testDateformatPatternProperty(CapturedOutput output) {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.dateformat\", \"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tnew LoggingSystemProperties(environment).apply();\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","date":"2020-10-21 09:13:23","endLine":530,"groupId":"3981","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDateformatPatternProperty","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fa/91f0200d816e38dbaa4e82fbfe8a5e9b2f7839.src","preCode":"\tvoid testDateformatPatternProperty(CapturedOutput output) {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.dateformat\", \"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":521,"status":"M"}],"commitId":"fb25104151f0e9716f8e589bde144538c9df977d","commitMessage":"@@@Remove unnecessary code\n\nRemove code from `LogbackLoggingSystem.loadDefaults` that sets Logback\ncontext properties from the Spring Environment. The code should not be\nrequired since `LoggingSystemVariables` will have already set system\nvariables for the logging config to use.\n\nCloses gh-23767\n","date":"2020-10-21 09:13:23","modifiedFileCount":"2","status":"M","submitter":"Phillip Webb"},{"authorTime":"2020-10-22 07:05:14","codes":[{"authorDate":"2020-10-22 07:05:14","commitOrder":5,"curCode":"\tvoid testLevelPatternProperty(CapturedOutput output) {\n\t\tthis.environment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tnew LoggingSystemProperties(this.environment).apply();\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(this.environment);\n\t\tinitialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","date":"2020-10-23 03:55:02","endLine":322,"groupId":"12457","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testLevelPatternProperty","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/64/e8170081155f450b4c996aaaadd19b5ab5346c.src","preCode":"\tvoid testLevelPatternProperty(CapturedOutput output) {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tnew LoggingSystemProperties(environment).apply();\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"M"},{"authorDate":"2020-10-22 07:05:14","commitOrder":5,"curCode":"\tvoid testDateformatPatternProperty(CapturedOutput output) {\n\t\tthis.environment.setProperty(\"logging.pattern.dateformat\", \"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tnew LoggingSystemProperties(this.environment).apply();\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(this.environment);\n\t\tinitialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","date":"2020-10-23 03:55:02","endLine":526,"groupId":"12457","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testDateformatPatternProperty","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/64/e8170081155f450b4c996aaaadd19b5ab5346c.src","preCode":"\tvoid testDateformatPatternProperty(CapturedOutput output) {\n\t\tMockEnvironment environment = new MockEnvironment();\n\t\tenvironment.setProperty(\"logging.pattern.dateformat\", \"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tnew LoggingSystemProperties(environment).apply();\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment);\n\t\tthis.loggingSystem.initialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":518,"status":"M"}],"commitId":"1725594a0edae57a50614210f094e59b6edca305","commitMessage":"@@@Rationalize Logback logging properties\n\nDeprecate and provide alternatives for logging properties that are\nspecific to Logback.\n\nThe following Spring Boot properties have been changed:\n\n  * logging.pattern.rolling-file-name ->\n    logging.logback.rollingpolicy.file-name-pattern\n\n  * logging.file.clean-history-on-start ->\n    logging.logback.rollingpolicy.clean-history-on-start\n\n  * logging.file.max-size ->\n    logging.logback.rollingpolicy.max-file-size\n\n  * logging.file.total-size-cap ->\n    logging.logback.rollingpolicy.total-size-cap\n\n  * logging.file.max-history ->\n    logging.logback.rollingpolicy.max-history\n\nAs have the system environment properties that they map to:\n\n  * ROLLING_FILE_NAME_PATTERN ->\n    LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN\n\n  * LOG_FILE_CLEAN_HISTORY_ON_START ->\n    LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START\n\n  * LOG_FILE_MAX_SIZE ->\n    LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE\n\n  * LOG_FILE_TOTAL_SIZE_CAP ->\n    LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP\n\n  * LOG_FILE_MAX_HISTORY ->\n    LOGBACK_ROLLINGPOLICY_MAX_HISTORY\n\nThis commit also cleans up and simplifies `DefaultLogbackConfiguration`.\n\nCloses gh-23609\n","date":"2020-10-23 03:55:02","modifiedFileCount":"8","status":"M","submitter":"Phillip Webb"},{"authorTime":"2021-01-15 08:15:15","codes":[{"authorDate":"2021-01-15 08:15:15","commitOrder":6,"curCode":"\tvoid testLevelPatternProperty(CapturedOutput output) {\n\t\tthis.environment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(this.environment);\n\t\tinitialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","date":"2021-01-15 08:15:15","endLine":319,"groupId":"12457","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testLevelPatternProperty","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/93/19b12c254c015ba5066e30ee1b12793f36bdd2.src","preCode":"\tvoid testLevelPatternProperty(CapturedOutput output) {\n\t\tthis.environment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tnew LoggingSystemProperties(this.environment).apply();\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(this.environment);\n\t\tinitialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"M"},{"authorDate":"2021-01-15 08:15:15","commitOrder":6,"curCode":"\tvoid testDateformatPatternProperty(CapturedOutput output) {\n\t\tthis.environment.setProperty(\"logging.pattern.dateformat\", \"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(this.environment);\n\t\tinitialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","date":"2021-01-15 08:15:15","endLine":522,"groupId":"12457","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testDateformatPatternProperty","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/93/19b12c254c015ba5066e30ee1b12793f36bdd2.src","preCode":"\tvoid testDateformatPatternProperty(CapturedOutput output) {\n\t\tthis.environment.setProperty(\"logging.pattern.dateformat\", \"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tnew LoggingSystemProperties(this.environment).apply();\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(this.environment);\n\t\tinitialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":515,"status":"M"}],"commitId":"b7843f9399197bee8107c0d2981af45b91c13146","commitMessage":"@@@Merge branch '2.4.x'\n\nCloses gh-24846\n","date":"2021-01-15 08:15:15","modifiedFileCount":"2","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2021-01-15 09:23:24","codes":[{"authorDate":"2021-01-15 09:23:24","commitOrder":7,"curCode":"\tvoid testLevelPatternProperty(CapturedOutput output) {\n\t\tthis.environment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tnew LoggingSystemProperties(this.environment).apply();\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(this.environment);\n\t\tinitialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","date":"2021-01-15 09:23:24","endLine":326,"groupId":"101114","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testLevelPatternProperty","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/07/88dcdaa931718ee57a925af13ce02c82ca2362.src","preCode":"\tvoid testLevelPatternProperty(CapturedOutput output) {\n\t\tthis.environment.setProperty(\"logging.pattern.level\", \"X%clr(%p)X\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(this.environment);\n\t\tinitialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\")).contains(\"XINFOX\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":319,"status":"M"},{"authorDate":"2021-01-15 09:23:24","commitOrder":7,"curCode":"\tvoid testDateformatPatternProperty(CapturedOutput output) {\n\t\tthis.environment.setProperty(\"logging.pattern.dateformat\", \"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tnew LoggingSystemProperties(this.environment).apply();\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(this.environment);\n\t\tinitialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","date":"2021-01-15 09:23:24","endLine":530,"groupId":"101114","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testDateformatPatternProperty","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/07/88dcdaa931718ee57a925af13ce02c82ca2362.src","preCode":"\tvoid testDateformatPatternProperty(CapturedOutput output) {\n\t\tthis.environment.setProperty(\"logging.pattern.dateformat\", \"yyyy-MM-dd'T'hh:mm:ss.SSSZ\");\n\t\tLoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(this.environment);\n\t\tinitialize(loggingInitializationContext, null, null);\n\t\tthis.logger.info(\"Hello world\");\n\t\tassertThat(getLineWithText(output, \"Hello world\"))\n\t\t\t\t.containsPattern(\"\\\\d{4}-\\\\d{2}\\\\-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"M"}],"commitId":"daf2b2fea312fcdd63b6dba4057f4f3ffc93553a","commitMessage":"@@@Merge branch '2.4.x'\n\nFixes gh-24846\n","date":"2021-01-15 09:23:24","modifiedFileCount":"3","status":"M","submitter":"Phillip Webb"}]
