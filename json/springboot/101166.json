[{"authorTime":"2018-06-20 18:41:54","codes":[{"authorDate":"2018-06-20 18:41:54","commitOrder":1,"curCode":"\tpublic void environmentIsQueriedWithProfileFromNameAttribute()\n\t\t\tthrows ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<String>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\");\n\t}\n","date":"2018-06-20 18:41:54","endLine":76,"groupId":"6422","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"environmentIsQueriedWithProfileFromNameAttribute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/ca83a5b05209f44d1bf66a23990e42b16eb31c.src","preCode":"\tpublic void environmentIsQueriedWithProfileFromNameAttribute()\n\t\t\tthrows ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<String>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/SpringProfileActionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2018-06-20 18:41:54","commitOrder":1,"curCode":"\tpublic void environmentIsQueriedWithMultipleProfilesFromCommaSeparatedNameAttribute()\n\t\t\tthrows ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev,qa\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<String>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\", \"qa\");\n\t}\n","date":"2018-06-20 18:41:54","endLine":91,"groupId":"6422","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"environmentIsQueriedWithMultipleProfilesFromCommaSeparatedNameAttribute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/ca83a5b05209f44d1bf66a23990e42b16eb31c.src","preCode":"\tpublic void environmentIsQueriedWithMultipleProfilesFromCommaSeparatedNameAttribute()\n\t\t\tthrows ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev,qa\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<String>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\", \"qa\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/SpringProfileActionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"}],"commitId":"7571f10ae30ec00d9ef9aeebd6dcfa4869454994","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-06-20 18:41:54","modifiedFileCount":"1","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2018-10-02 02:18:16","codes":[{"authorDate":"2018-10-02 02:18:16","commitOrder":2,"curCode":"\tpublic void environmentIsQueriedWithProfileFromNameAttribute()\n\t\t\tthrows ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\");\n\t}\n","date":"2018-10-03 01:55:28","endLine":76,"groupId":"6422","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"environmentIsQueriedWithProfileFromNameAttribute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2b/80993ea7ec77cad41f8ae432358cd077645867.src","preCode":"\tpublic void environmentIsQueriedWithProfileFromNameAttribute()\n\t\t\tthrows ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<String>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/SpringProfileActionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2018-10-02 02:18:16","commitOrder":2,"curCode":"\tpublic void environmentIsQueriedWithMultipleProfilesFromCommaSeparatedNameAttribute()\n\t\t\tthrows ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev,qa\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\", \"qa\");\n\t}\n","date":"2018-10-03 01:55:28","endLine":91,"groupId":"6422","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"environmentIsQueriedWithMultipleProfilesFromCommaSeparatedNameAttribute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2b/80993ea7ec77cad41f8ae432358cd077645867.src","preCode":"\tpublic void environmentIsQueriedWithMultipleProfilesFromCommaSeparatedNameAttribute()\n\t\t\tthrows ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev,qa\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<String>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\", \"qa\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/SpringProfileActionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"d76bba5e6f5c702c8bf2aa86fee19ec7de8ed3cb","commitMessage":"@@@Migrate from ExpectedException rule to AssertJ\n\nReplace ExpectedException JUnit rules with AssertJ exception\nassertions.\n\nCloses gh-14336\n","date":"2018-10-03 01:55:28","modifiedFileCount":"271","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid environmentIsQueriedWithProfileFromNameAttribute() throws ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":74,"groupId":"101166","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"environmentIsQueriedWithProfileFromNameAttribute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/17/02caa48cd9ed73bdd12cace441b933286a15cd.src","preCode":"\tpublic void environmentIsQueriedWithProfileFromNameAttribute() throws ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/SpringProfileActionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid environmentIsQueriedWithMultipleProfilesFromCommaSeparatedNameAttribute() throws ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev,qa\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\", \"qa\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":88,"groupId":"101166","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"environmentIsQueriedWithMultipleProfilesFromCommaSeparatedNameAttribute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/17/02caa48cd9ed73bdd12cace441b933286a15cd.src","preCode":"\tpublic void environmentIsQueriedWithMultipleProfilesFromCommaSeparatedNameAttribute() throws ActionException {\n\t\tgiven(this.attributes.getValue(Action.NAME_ATTRIBUTE)).willReturn(\"dev,qa\");\n\t\tthis.action.begin(this.interpretationContext, null, this.attributes);\n\t\tArgumentCaptor<Profiles> profiles = ArgumentCaptor.forClass(Profiles.class);\n\t\tverify(this.environment).acceptsProfiles(profiles.capture());\n\t\tList<String> profileNames = new ArrayList<>();\n\t\tprofiles.getValue().matches((profile) -> {\n\t\t\tprofileNames.add(profile);\n\t\t\treturn false;\n\t\t});\n\t\tassertThat(profileNames).containsExactly(\"dev\", \"qa\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/SpringProfileActionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
