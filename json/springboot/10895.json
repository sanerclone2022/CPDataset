[{"authorTime":"2018-02-20 01:37:58","codes":[{"authorDate":"2018-02-20 01:37:58","commitOrder":1,"curCode":"\tpublic void registerWhenHasMultipleMeterRegistriesShouldAddPrimaryComposite() {\n\t\tthis.contextRunner.withUserConfiguration(MultipleMeterRegistriesConfig.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context.getBeansOfType(MeterRegistry.class)).hasSize(3)\n\t\t\t\t\t\t\t.containsKeys(\"meterRegistryOne\", \"meterRegistryTwo\",\n\t\t\t\t\t\t\t\t\tCOMPOSITE_NAME);\n\t\t\t\t\tMeterRegistry primary = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(primary).isInstanceOf(CompositeMeterRegistry.class);\n\t\t\t\t\tassertThat(((CompositeMeterRegistry) primary).getRegistries())\n\t\t\t\t\t\t\t.hasSize(2);\n\t\t\t\t\tassertThat(primary.config().clock()).isNotNull();\n\t\t\t\t});\n\t}\n","date":"2018-02-20 01:41:23","endLine":82,"groupId":"1699","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"registerWhenHasMultipleMeterRegistriesShouldAddPrimaryComposite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8e/34e7868c70208d416887cb73cee2f3a527a2ff.src","preCode":"\tpublic void registerWhenHasMultipleMeterRegistriesShouldAddPrimaryComposite() {\n\t\tthis.contextRunner.withUserConfiguration(MultipleMeterRegistriesConfig.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context.getBeansOfType(MeterRegistry.class)).hasSize(3)\n\t\t\t\t\t\t\t.containsKeys(\"meterRegistryOne\", \"meterRegistryTwo\",\n\t\t\t\t\t\t\t\t\tCOMPOSITE_NAME);\n\t\t\t\t\tMeterRegistry primary = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(primary).isInstanceOf(CompositeMeterRegistry.class);\n\t\t\t\t\tassertThat(((CompositeMeterRegistry) primary).getRegistries())\n\t\t\t\t\t\t\t.hasSize(2);\n\t\t\t\t\tassertThat(primary.config().clock()).isNotNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2018-02-20 01:37:58","commitOrder":1,"curCode":"\tpublic void registerWhenHasMultipleRegistriesAndOneIsPrimaryShouldDoNothing() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(MultipleMeterRegistriesWithOnePrimaryConfig.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context.getBeansOfType(MeterRegistry.class)).hasSize(2)\n\t\t\t\t\t\t\t.containsKeys(\"meterRegistryOne\", \"meterRegistryTwo\");\n\t\t\t\t\tMeterRegistry primary = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(primary).isInstanceOf(TestMeterRegistry.class);\n\t\t\t\t});\n\t}\n","date":"2018-02-20 01:41:23","endLine":94,"groupId":"4807","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"registerWhenHasMultipleRegistriesAndOneIsPrimaryShouldDoNothing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8e/34e7868c70208d416887cb73cee2f3a527a2ff.src","preCode":"\tpublic void registerWhenHasMultipleRegistriesAndOneIsPrimaryShouldDoNothing() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(MultipleMeterRegistriesWithOnePrimaryConfig.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context.getBeansOfType(MeterRegistry.class)).hasSize(2)\n\t\t\t\t\t\t\t.containsKeys(\"meterRegistryOne\", \"meterRegistryTwo\");\n\t\t\t\t\tMeterRegistry primary = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(primary).isInstanceOf(TestMeterRegistry.class);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"}],"commitId":"73460a5b2559f440bad62b6e312590b3d5db1f42","commitMessage":"@@@Use auto-configuration to create composite.  not a BFPP\n\nCloses gh-12122\n","date":"2018-02-20 01:41:23","modifiedFileCount":"16","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid registerWhenHasMultipleMeterRegistriesShouldAddPrimaryComposite() {\n\t\tthis.contextRunner.withUserConfiguration(MultipleMeterRegistriesConfig.class).run((context) -> {\n\t\t\tassertThat(context.getBeansOfType(MeterRegistry.class)).hasSize(3).containsKeys(\"meterRegistryOne\",\n\t\t\t\t\t\"meterRegistryTwo\", COMPOSITE_NAME);\n\t\t\tMeterRegistry primary = context.getBean(MeterRegistry.class);\n\t\t\tassertThat(primary).isInstanceOf(CompositeMeterRegistry.class);\n\t\t\tassertThat(((CompositeMeterRegistry) primary).getRegistries()).hasSize(2);\n\t\t\tassertThat(primary.config().clock()).isNotNull();\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":76,"groupId":"10895","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"registerWhenHasMultipleMeterRegistriesShouldAddPrimaryComposite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c3/5dbfa1d4c57dce64527e72f3bd135e0c20a3af.src","preCode":"\tpublic void registerWhenHasMultipleMeterRegistriesShouldAddPrimaryComposite() {\n\t\tthis.contextRunner.withUserConfiguration(MultipleMeterRegistriesConfig.class).run((context) -> {\n\t\t\tassertThat(context.getBeansOfType(MeterRegistry.class)).hasSize(3).containsKeys(\"meterRegistryOne\",\n\t\t\t\t\t\"meterRegistryTwo\", COMPOSITE_NAME);\n\t\t\tMeterRegistry primary = context.getBean(MeterRegistry.class);\n\t\t\tassertThat(primary).isInstanceOf(CompositeMeterRegistry.class);\n\t\t\tassertThat(((CompositeMeterRegistry) primary).getRegistries()).hasSize(2);\n\t\t\tassertThat(primary.config().clock()).isNotNull();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid registerWhenHasMultipleRegistriesAndOneIsPrimaryShouldDoNothing() {\n\t\tthis.contextRunner.withUserConfiguration(MultipleMeterRegistriesWithOnePrimaryConfig.class).run((context) -> {\n\t\t\tassertThat(context.getBeansOfType(MeterRegistry.class)).hasSize(2).containsKeys(\"meterRegistryOne\",\n\t\t\t\t\t\"meterRegistryTwo\");\n\t\t\tMeterRegistry primary = context.getBean(MeterRegistry.class);\n\t\t\tassertThat(primary).isInstanceOf(TestMeterRegistry.class);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":86,"groupId":"10895","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"registerWhenHasMultipleRegistriesAndOneIsPrimaryShouldDoNothing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c3/5dbfa1d4c57dce64527e72f3bd135e0c20a3af.src","preCode":"\tpublic void registerWhenHasMultipleRegistriesAndOneIsPrimaryShouldDoNothing() {\n\t\tthis.contextRunner.withUserConfiguration(MultipleMeterRegistriesWithOnePrimaryConfig.class).run((context) -> {\n\t\t\tassertThat(context.getBeansOfType(MeterRegistry.class)).hasSize(2).containsKeys(\"meterRegistryOne\",\n\t\t\t\t\t\"meterRegistryTwo\");\n\t\t\tMeterRegistry primary = context.getBean(MeterRegistry.class);\n\t\t\tassertThat(primary).isInstanceOf(TestMeterRegistry.class);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
