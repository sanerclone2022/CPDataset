[{"authorTime":"2019-05-01 14:17:42","codes":[{"authorDate":"2019-05-01 14:17:42","commitOrder":1,"curCode":"\tpublic void autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withPropertyValues(\n\t\t\t\t\"management.metrics.web.client.request.autotime.enabled=true\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles-histogram=true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.client.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile())\n\t\t\t\t\t\t\t.isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile())\n\t\t\t\t\t\t\t.isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","date":"2019-05-01 14:17:42","endLine":121,"groupId":"13836","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"autoTimeRequestsCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ec/61d507c747edcf8004ac32c194e7c07896915d.src","preCode":"\tpublic void autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withPropertyValues(\n\t\t\t\t\"management.metrics.web.client.request.autotime.enabled=true\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles-histogram=true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.client.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile())\n\t\t\t\t\t\t\t.isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile())\n\t\t\t\t\t\t\t.isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"},{"authorDate":"2019-05-01 14:17:42","commitOrder":1,"curCode":"\tpublic void autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\n\t\t\t\t\t\t\"management.metrics.web.server.request.autotime.enabled=true\",\n\t\t\t\t\t\t\"management.metrics.web.server.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\t\t\"management.metrics.web.server.request.autotime.percentiles-histogram=true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.server.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile())\n\t\t\t\t\t\t\t.isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile())\n\t\t\t\t\t\t\t.isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","date":"2019-05-01 14:17:42","endLine":162,"groupId":"13836","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"autoTimeRequestsCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/14/81fab1f70a7c45f25667d77adb7b0344d38d20.src","preCode":"\tpublic void autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\n\t\t\t\t\t\t\"management.metrics.web.server.request.autotime.enabled=true\",\n\t\t\t\t\t\t\"management.metrics.web.server.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\t\t\"management.metrics.web.server.request.autotime.percentiles-histogram=true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.server.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile())\n\t\t\t\t\t\t\t.isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile())\n\t\t\t\t\t\t\t.isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"}],"commitId":"eb028fa77db248e46f9c17ee1fd2f488a0af6a2c","commitMessage":"@@@Merge pull request #15988 from ttddyy\n\n* pr/15988:\n  Polish \"Allow configuration of auto-timed metrics\"\n  Allow configuration of auto-timed metrics\n","date":"2019-05-01 14:17:42","modifiedFileCount":"24","status":"B","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.request.autotime.enabled=true\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles-histogram=true\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.client.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":110,"groupId":"10872","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"autoTimeRequestsCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ce/733aa2e036d2562c6047003aa29654e564def2.src","preCode":"\tpublic void autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.request.autotime.enabled=true\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles-histogram=true\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.client.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, WebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.request.autotime.enabled=true\",\n\t\t\t\t\t\t\"management.metrics.web.server.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\t\t\"management.metrics.web.server.request.autotime.percentiles-histogram=true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.server.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":145,"groupId":"10872","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"autoTimeRequestsCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f4/dbc4834c1452468cf608a205eec7c7b9616ea3.src","preCode":"\tpublic void autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, WebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.request.autotime.enabled=true\",\n\t\t\t\t\t\t\"management.metrics.web.server.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\t\t\"management.metrics.web.server.request.autotime.percentiles-histogram=true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.server.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
