[{"authorTime":"2019-08-21 05:09:04","codes":[{"authorDate":"2019-08-21 05:09:04","commitOrder":6,"curCode":"\tpublic WebEndpointResponse<HealthComponent> health(SecurityContext securityContext, boolean alwaysIncludeDetails,\n\t\t\tString... path) {\n\t\tHealthResult<HealthComponent> result = getHealth(securityContext, alwaysIncludeDetails, path);\n\t\tif (result == null) {\n\t\t\treturn new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND);\n\t\t}\n\t\tHealthComponent health = result.getHealth();\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t}\n","date":"2019-08-22 09:43:25","endLine":87,"groupId":"11304","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"health","params":"(SecurityContextsecurityContext@booleanalwaysIncludeDetails@String...path)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fb/6eeaecd59d0fbbb048c814af9510bdfffce359.src","preCode":"\tpublic WebEndpointResponse<HealthComponent> health(SecurityContext securityContext, boolean alwaysIncludeDetails,\n\t\t\tString... path) {\n\t\tHealthResult<HealthComponent> result = getHealth(securityContext, alwaysIncludeDetails, path);\n\t\tif (result == null) {\n\t\t\treturn new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND);\n\t\t}\n\t\tHealthComponent health = result.getHealth();\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthEndpointWebExtension.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"MB"},{"authorDate":"2019-08-21 05:09:04","commitOrder":6,"curCode":"\tpublic Mono<WebEndpointResponse<? extends HealthComponent>> health(SecurityContext securityContext,\n\t\t\tboolean alwaysIncludeDetails, String... path) {\n\t\tHealthResult<Mono<? extends HealthComponent>> result = getHealth(securityContext, alwaysIncludeDetails, path);\n\t\tif (result == null) {\n\t\t\treturn Mono.just(new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND));\n\t\t}\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\treturn result.getHealth().map((health) -> {\n\t\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t\t});\n\t}\n","date":"2019-08-22 09:43:25","endLine":89,"groupId":"9585","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"health","params":"(SecurityContextsecurityContext@booleanalwaysIncludeDetails@String...path)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fc/8ecf79e82447caa7866d04e73dd9257af155a4.src","preCode":"\tpublic Mono<WebEndpointResponse<? extends HealthComponent>> health(SecurityContext securityContext,\n\t\t\tboolean alwaysIncludeDetails, String... path) {\n\t\tHealthResult<Mono<? extends HealthComponent>> result = getHealth(securityContext, alwaysIncludeDetails, path);\n\t\tif (result == null) {\n\t\t\treturn Mono.just(new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND));\n\t\t}\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\treturn result.getHealth().map((health) -> {\n\t\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtension.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"MB"}],"commitId":"e03f822c6d883823f46f4c7d375160923ab48a08","commitMessage":"@@@Add support for health indicator groups\n\nUpdate the `HealthEndpoint` to support health groups. The\n`HealthEndpointSettings` interface has been replaced with\n`HealthEndpointGroups` which provides access to the primary group\nas well as an optional set of additional groups.\n\nGroups can be configured via properties and may have custom\n`StatusAggregator` and `HttpCodeStatusMapper` settings.\n\nCloses gh-14022\n\nCo-authored-by: Stephane Nicoll <snicoll@pivotal.io>\n","date":"2019-08-22 09:43:25","modifiedFileCount":"18","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-09-26 13:46:37","codes":[{"authorDate":"2019-09-26 13:46:37","commitOrder":7,"curCode":"\tpublic WebEndpointResponse<HealthComponent> health(ApiVersion apiVersion, SecurityContext securityContext,\n\t\t\tboolean alwaysIncludeDetails, String... path) {\n\t\tHealthResult<HealthComponent> result = getHealth(apiVersion, securityContext, alwaysIncludeDetails, path);\n\t\tif (result == null) {\n\t\t\treturn new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND);\n\t\t}\n\t\tHealthComponent health = result.getHealth();\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t}\n","date":"2019-09-27 07:16:23","endLine":88,"groupId":"11304","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"health","params":"(ApiVersionapiVersion@SecurityContextsecurityContext@booleanalwaysIncludeDetails@String...path)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a3/bf307305bce27cb84071dd9b6558ec29d0a9d4.src","preCode":"\tpublic WebEndpointResponse<HealthComponent> health(SecurityContext securityContext, boolean alwaysIncludeDetails,\n\t\t\tString... path) {\n\t\tHealthResult<HealthComponent> result = getHealth(securityContext, alwaysIncludeDetails, path);\n\t\tif (result == null) {\n\t\t\treturn new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND);\n\t\t}\n\t\tHealthComponent health = result.getHealth();\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthEndpointWebExtension.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2019-09-26 13:46:37","commitOrder":7,"curCode":"\tpublic Mono<WebEndpointResponse<? extends HealthComponent>> health(ApiVersion apiVersion,\n\t\t\tSecurityContext securityContext, boolean alwaysIncludeDetails, String... path) {\n\t\tHealthResult<Mono<? extends HealthComponent>> result = getHealth(apiVersion, securityContext,\n\t\t\t\talwaysIncludeDetails, path);\n\t\tif (result == null) {\n\t\t\treturn Mono.just(new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND));\n\t\t}\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\treturn result.getHealth().map((health) -> {\n\t\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t\t});\n\t}\n","date":"2019-09-27 07:16:23","endLine":92,"groupId":"9585","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"health","params":"(ApiVersionapiVersion@SecurityContextsecurityContext@booleanalwaysIncludeDetails@String...path)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/75/f933bc19a823ba2e34deb12768af54cb82152f.src","preCode":"\tpublic Mono<WebEndpointResponse<? extends HealthComponent>> health(SecurityContext securityContext,\n\t\t\tboolean alwaysIncludeDetails, String... path) {\n\t\tHealthResult<Mono<? extends HealthComponent>> result = getHealth(securityContext, alwaysIncludeDetails, path);\n\t\tif (result == null) {\n\t\t\treturn Mono.just(new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND));\n\t\t}\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\treturn result.getHealth().map((health) -> {\n\t\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtension.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"69c561a69a54a32ba31f4bc66e7954ee21e6445f","commitMessage":"@@@Rename health JSON 'details' to 'components' in v3\n\nUpdate the health endpoint so the nested components are now exposed\nunder `components` rather than `details` when v3 of the actuator\nREST API is being used.\n\nThis distinction helps to clarify the difference between composite\nhealth (health composed of other health components) and health\ndetails (technology specific information gathered by the indicator).\n\nSince this is a breaking change for the REST API.  it is only returned\nfor v3 payloads. Requests made accepting only a v2 response will have\nJSON provided in the original form.\n\nCloses gh-17929\n","date":"2019-09-27 07:16:23","modifiedFileCount":"21","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-09-26 04:45:25","codes":[{"authorDate":"2019-09-26 04:45:25","commitOrder":8,"curCode":"\tpublic WebEndpointResponse<HealthComponent> health(ApiVersion apiVersion, SecurityContext securityContext,\n\t\t\tboolean showAll, String... path) {\n\t\tHealthResult<HealthComponent> result = getHealth(apiVersion, securityContext, showAll, path);\n\t\tif (result == null) {\n\t\t\treturn new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND);\n\t\t}\n\t\tHealthComponent health = result.getHealth();\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t}\n","date":"2019-09-27 07:17:28","endLine":88,"groupId":"11304","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"health","params":"(ApiVersionapiVersion@SecurityContextsecurityContext@booleanshowAll@String...path)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/49/9da09f9ee44b8f499d711a756fcc58e4e25999.src","preCode":"\tpublic WebEndpointResponse<HealthComponent> health(ApiVersion apiVersion, SecurityContext securityContext,\n\t\t\tboolean alwaysIncludeDetails, String... path) {\n\t\tHealthResult<HealthComponent> result = getHealth(apiVersion, securityContext, alwaysIncludeDetails, path);\n\t\tif (result == null) {\n\t\t\treturn new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND);\n\t\t}\n\t\tHealthComponent health = result.getHealth();\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthEndpointWebExtension.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2019-09-26 04:45:25","commitOrder":8,"curCode":"\tpublic Mono<WebEndpointResponse<? extends HealthComponent>> health(ApiVersion apiVersion,\n\t\t\tSecurityContext securityContext, boolean showAll, String... path) {\n\t\tHealthResult<Mono<? extends HealthComponent>> result = getHealth(apiVersion, securityContext, showAll, path);\n\t\tif (result == null) {\n\t\t\treturn Mono.just(new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND));\n\t\t}\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\treturn result.getHealth().map((health) -> {\n\t\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t\t});\n\t}\n","date":"2019-09-27 07:17:28","endLine":91,"groupId":"9585","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"health","params":"(ApiVersionapiVersion@SecurityContextsecurityContext@booleanshowAll@String...path)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/2122da1f6b2d9cacc344a4e7684b73e97a5b1a.src","preCode":"\tpublic Mono<WebEndpointResponse<? extends HealthComponent>> health(ApiVersion apiVersion,\n\t\t\tSecurityContext securityContext, boolean alwaysIncludeDetails, String... path) {\n\t\tHealthResult<Mono<? extends HealthComponent>> result = getHealth(apiVersion, securityContext,\n\t\t\t\talwaysIncludeDetails, path);\n\t\tif (result == null) {\n\t\t\treturn Mono.just(new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND));\n\t\t}\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\treturn result.getHealth().map((health) -> {\n\t\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtension.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"a94ab673a3230e89403c1046837359c300f8717c","commitMessage":"@@@Add health endpoint 'show-components' support\n\nAdd a `show-components` property under `management.endpoint.health` and\n`management.endpoint.health.group.<name>` that can be used to change\nwhen components are displayed.\n\nPrior to this commit it was only possible to set `show-details` which\noffered an \"all or nothing\" approach to the resulting JSON. The new\nswitch allows component information to be displayed whilst still hiding\npotentially sensitive details returned from the actual `HealthIndicator`.\n\nCloses gh-15076\n","date":"2019-09-27 07:17:28","modifiedFileCount":"13","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-11-06 17:07:25","codes":[{"authorDate":"2019-11-06 17:07:25","commitOrder":9,"curCode":"\tpublic WebEndpointResponse<HealthComponent> health(ApiVersion apiVersion, SecurityContext securityContext,\n\t\t\tboolean showAll, String... path) {\n\t\tHealthResult<HealthComponent> result = getHealth(apiVersion, securityContext, showAll, path);\n\t\tif (result == null) {\n\t\t\treturn (Arrays.equals(path, NO_PATH))\n\t\t\t\t\t? new WebEndpointResponse<>(DEFAULT_HEALTH, WebEndpointResponse.STATUS_OK)\n\t\t\t\t\t: new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND);\n\t\t}\n\t\tHealthComponent health = result.getHealth();\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t}\n","date":"2019-11-06 19:46:47","endLine":91,"groupId":"11304","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"health","params":"(ApiVersionapiVersion@SecurityContextsecurityContext@booleanshowAll@String...path)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/03/4faf3a89f1d968812b8d079c078a6197e4884d.src","preCode":"\tpublic WebEndpointResponse<HealthComponent> health(ApiVersion apiVersion, SecurityContext securityContext,\n\t\t\tboolean showAll, String... path) {\n\t\tHealthResult<HealthComponent> result = getHealth(apiVersion, securityContext, showAll, path);\n\t\tif (result == null) {\n\t\t\treturn new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND);\n\t\t}\n\t\tHealthComponent health = result.getHealth();\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthEndpointWebExtension.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2019-11-06 17:07:25","commitOrder":9,"curCode":"\tpublic Mono<WebEndpointResponse<? extends HealthComponent>> health(ApiVersion apiVersion,\n\t\t\tSecurityContext securityContext, boolean showAll, String... path) {\n\t\tHealthResult<Mono<? extends HealthComponent>> result = getHealth(apiVersion, securityContext, showAll, path);\n\t\tif (result == null) {\n\t\t\treturn (Arrays.equals(path, NO_PATH))\n\t\t\t\t\t? Mono.just(new WebEndpointResponse<>(DEFAULT_HEALTH, WebEndpointResponse.STATUS_OK))\n\t\t\t\t\t: Mono.just(new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND));\n\t\t}\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\treturn result.getHealth().map((health) -> {\n\t\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t\t});\n\t}\n","date":"2019-11-06 19:46:47","endLine":94,"groupId":"9585","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"health","params":"(ApiVersionapiVersion@SecurityContextsecurityContext@booleanshowAll@String...path)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a3/d16e62c17a5123f4dc646337a28c5e10563114.src","preCode":"\tpublic Mono<WebEndpointResponse<? extends HealthComponent>> health(ApiVersion apiVersion,\n\t\t\tSecurityContext securityContext, boolean showAll, String... path) {\n\t\tHealthResult<Mono<? extends HealthComponent>> result = getHealth(apiVersion, securityContext, showAll, path);\n\t\tif (result == null) {\n\t\t\treturn Mono.just(new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND));\n\t\t}\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\treturn result.getHealth().map((health) -> {\n\t\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtension.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"86a1c96224a02da8e53b31e90c2e91507fba076f","commitMessage":"@@@Make sure health endpoint is available with no contributor\n\nThis commit makes sure that the health endpoint returns a default health\nstatus when no contributors are available. Previously.  it was returning\n`null` which leads to a 404 when exposed via HTTP.\n\nCloses gh-18676\n","date":"2019-11-06 19:46:47","modifiedFileCount":"7","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2021-07-14 06:13:04","codes":[{"authorDate":"2021-07-14 06:13:04","commitOrder":10,"curCode":"\tpublic WebEndpointResponse<HealthComponent> health(ApiVersion apiVersion, WebServerNamespace serverNamespace,\n\t\t\tSecurityContext securityContext, boolean showAll, String... path) {\n\t\tHealthResult<HealthComponent> result = getHealth(apiVersion, serverNamespace, securityContext, showAll, path);\n\t\tif (result == null) {\n\t\t\treturn (Arrays.equals(path, NO_PATH))\n\t\t\t\t\t? new WebEndpointResponse<>(DEFAULT_HEALTH, WebEndpointResponse.STATUS_OK)\n\t\t\t\t\t: new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND);\n\t\t}\n\t\tHealthComponent health = result.getHealth();\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t}\n","date":"2021-08-12 10:25:25","endLine":83,"groupId":"10571","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"health","params":"(ApiVersionapiVersion@WebServerNamespaceserverNamespace@SecurityContextsecurityContext@booleanshowAll@String...path)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3c/44d51137cd3b88a2465121f3f13ac0c7b9ff40.src","preCode":"\tpublic WebEndpointResponse<HealthComponent> health(ApiVersion apiVersion, SecurityContext securityContext,\n\t\t\tboolean showAll, String... path) {\n\t\tHealthResult<HealthComponent> result = getHealth(apiVersion, securityContext, showAll, path);\n\t\tif (result == null) {\n\t\t\treturn (Arrays.equals(path, NO_PATH))\n\t\t\t\t\t? new WebEndpointResponse<>(DEFAULT_HEALTH, WebEndpointResponse.STATUS_OK)\n\t\t\t\t\t: new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND);\n\t\t}\n\t\tHealthComponent health = result.getHealth();\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthEndpointWebExtension.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2021-07-14 06:13:04","commitOrder":10,"curCode":"\tpublic Mono<WebEndpointResponse<? extends HealthComponent>> health(ApiVersion apiVersion,\n\t\t\tWebServerNamespace serverNamespace, SecurityContext securityContext, boolean showAll, String... path) {\n\t\tHealthResult<Mono<? extends HealthComponent>> result = getHealth(apiVersion, serverNamespace, securityContext,\n\t\t\t\tshowAll, path);\n\t\tif (result == null) {\n\t\t\treturn (Arrays.equals(path, NO_PATH))\n\t\t\t\t\t? Mono.just(new WebEndpointResponse<>(DEFAULT_HEALTH, WebEndpointResponse.STATUS_OK))\n\t\t\t\t\t: Mono.just(new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND));\n\t\t}\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\treturn result.getHealth().map((health) -> {\n\t\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t\t});\n\t}\n","date":"2021-08-12 10:25:25","endLine":86,"groupId":"10571","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"health","params":"(ApiVersionapiVersion@WebServerNamespaceserverNamespace@SecurityContextsecurityContext@booleanshowAll@String...path)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4d/74549a39fc68588a03783573b1957e73d9a437.src","preCode":"\tpublic Mono<WebEndpointResponse<? extends HealthComponent>> health(ApiVersion apiVersion,\n\t\t\tSecurityContext securityContext, boolean showAll, String... path) {\n\t\tHealthResult<Mono<? extends HealthComponent>> result = getHealth(apiVersion, securityContext, showAll, path);\n\t\tif (result == null) {\n\t\t\treturn (Arrays.equals(path, NO_PATH))\n\t\t\t\t\t? Mono.just(new WebEndpointResponse<>(DEFAULT_HEALTH, WebEndpointResponse.STATUS_OK))\n\t\t\t\t\t: Mono.just(new WebEndpointResponse<>(WebEndpointResponse.STATUS_NOT_FOUND));\n\t\t}\n\t\tHealthEndpointGroup group = result.getGroup();\n\t\treturn result.getHealth().map((health) -> {\n\t\t\tint statusCode = group.getHttpCodeStatusMapper().getStatusCode(health.getStatus());\n\t\t\treturn new WebEndpointResponse<>(health, statusCode);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtension.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"49c86e6e1bef32e21bd2979aabddfcbacbe8ee89","commitMessage":"@@@Allow health groups to be configured at an additional path\n\nCloses gh-25471\n\nCo-authored-by: Phillip Webb <pwebb@vmware.com>\n","date":"2021-08-12 10:25:25","modifiedFileCount":"35","status":"M","submitter":"Madhura Bhave"}]
