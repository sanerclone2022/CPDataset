[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void readOperationsThatReturnAResourceSupportRangeRequests() {\n\t\tload(ResourceEndpointConfiguration.class, (client) -> {\n\t\t\tbyte[] responseBody = client.get().uri(\"/resource\")\n\t\t\t\t\t.header(\"Range\", \"bytes=0-3\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.PARTIAL_CONTENT).expectHeader()\n\t\t\t\t\t.contentType(MediaType.APPLICATION_OCTET_STREAM)\n\t\t\t\t\t.returnResult(byte[].class).getResponseBodyContent();\n\t\t\tassertThat(responseBody).containsExactly(0, 1, 2, 3);\n\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":79,"groupId":"10855","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"readOperationsThatReturnAResourceSupportRangeRequests","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d4/e9e4924f0e561dd4d4dc621eacec491f751843.src","preCode":"\tpublic void readOperationsThatReturnAResourceSupportRangeRequests() {\n\t\tload(ResourceEndpointConfiguration.class, (client) -> {\n\t\t\tbyte[] responseBody = client.get().uri(\"/resource\")\n\t\t\t\t\t.header(\"Range\", \"bytes=0-3\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.PARTIAL_CONTENT).expectHeader()\n\t\t\t\t\t.contentType(MediaType.APPLICATION_OCTET_STREAM)\n\t\t\t\t\t.returnResult(byte[].class).getResponseBodyContent();\n\t\t\tassertThat(responseBody).containsExactly(0, 1, 2, 3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/reactive/WebFluxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void readOperationsThatReturnAResourceSupportRangeRequests() {\n\t\tload(ResourceEndpointConfiguration.class, (client) -> {\n\t\t\tbyte[] responseBody = client.get().uri(\"/resource\")\n\t\t\t\t\t.header(\"Range\", \"bytes=0-3\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.PARTIAL_CONTENT).expectHeader()\n\t\t\t\t\t.contentType(MediaType.APPLICATION_OCTET_STREAM)\n\t\t\t\t\t.returnResult(byte[].class).getResponseBodyContent();\n\t\t\tassertThat(responseBody).containsExactly(0, 1, 2, 3);\n\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":75,"groupId":"10855","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"readOperationsThatReturnAResourceSupportRangeRequests","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/01/589e8c7fb9e93cfc3fe26750722fa980357065.src","preCode":"\tpublic void readOperationsThatReturnAResourceSupportRangeRequests() {\n\t\tload(ResourceEndpointConfiguration.class, (client) -> {\n\t\t\tbyte[] responseBody = client.get().uri(\"/resource\")\n\t\t\t\t\t.header(\"Range\", \"bytes=0-3\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.PARTIAL_CONTENT).expectHeader()\n\t\t\t\t\t.contentType(MediaType.APPLICATION_OCTET_STREAM)\n\t\t\t\t\t.returnResult(byte[].class).getResponseBodyContent();\n\t\t\tassertThat(responseBody).containsExactly(0, 1, 2, 3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/MvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid readOperationsThatReturnAResourceSupportRangeRequests() {\n\t\tload(ResourceEndpointConfiguration.class, (client) -> {\n\t\t\tbyte[] responseBody = client.get().uri(\"/resource\").header(\"Range\", \"bytes=0-3\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.PARTIAL_CONTENT).expectHeader()\n\t\t\t\t\t.contentType(MediaType.APPLICATION_OCTET_STREAM).returnResult(byte[].class)\n\t\t\t\t\t.getResponseBodyContent();\n\t\t\tassertThat(responseBody).containsExactly(0, 1, 2, 3);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":95,"groupId":"10415","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"readOperationsThatReturnAResourceSupportRangeRequests","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/68/5145a68c0643738578d7c7d543e01d4742521f.src","preCode":"\tpublic void readOperationsThatReturnAResourceSupportRangeRequests() {\n\t\tload(ResourceEndpointConfiguration.class, (client) -> {\n\t\t\tbyte[] responseBody = client.get().uri(\"/resource\").header(\"Range\", \"bytes=0-3\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.PARTIAL_CONTENT).expectHeader()\n\t\t\t\t\t.contentType(MediaType.APPLICATION_OCTET_STREAM).returnResult(byte[].class)\n\t\t\t\t\t.getResponseBodyContent();\n\t\t\tassertThat(responseBody).containsExactly(0, 1, 2, 3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/reactive/WebFluxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid readOperationsThatReturnAResourceSupportRangeRequests() {\n\t\tload(ResourceEndpointConfiguration.class, (client) -> {\n\t\t\tbyte[] responseBody = client.get().uri(\"/resource\").header(\"Range\", \"bytes=0-3\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.PARTIAL_CONTENT).expectHeader()\n\t\t\t\t\t.contentType(MediaType.APPLICATION_OCTET_STREAM).returnResult(byte[].class)\n\t\t\t\t\t.getResponseBodyContent();\n\t\t\tassertThat(responseBody).containsExactly(0, 1, 2, 3);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":104,"groupId":"10415","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"readOperationsThatReturnAResourceSupportRangeRequests","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cb/f49e699635b5ac13a9efc3877d683615c4b4be.src","preCode":"\tpublic void readOperationsThatReturnAResourceSupportRangeRequests() {\n\t\tload(ResourceEndpointConfiguration.class, (client) -> {\n\t\t\tbyte[] responseBody = client.get().uri(\"/resource\").header(\"Range\", \"bytes=0-3\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.PARTIAL_CONTENT).expectHeader()\n\t\t\t\t\t.contentType(MediaType.APPLICATION_OCTET_STREAM).returnResult(byte[].class)\n\t\t\t\t\t.getResponseBodyContent();\n\t\t\tassertThat(responseBody).containsExactly(0, 1, 2, 3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/MvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
