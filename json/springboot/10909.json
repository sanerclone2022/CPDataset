[{"authorTime":"2018-02-13 20:47:25","codes":[{"authorDate":"2018-02-13 20:47:25","commitOrder":1,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations\n\t\t\t\t\t\t\t\t.of(TomcatMetricsAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2018-02-13 20:47:25","endLine":63,"groupId":"16345","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/da/d59466a3e472f319de1e843d10f52b6003f802.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations\n\t\t\t\t\t\t\t\t.of(TomcatMetricsAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2018-02-13 20:47:25","commitOrder":1,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tnew ReactiveWebApplicationContextRunner(\n\t\t\t\tAnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations\n\t\t\t\t\t\t\t\t.of(TomcatMetricsAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2018-02-13 20:47:25","endLine":82,"groupId":"16345","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/da/d59466a3e472f319de1e843d10f52b6003f802.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tnew ReactiveWebApplicationContextRunner(\n\t\t\t\tAnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations\n\t\t\t\t\t\t\t\t.of(TomcatMetricsAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"ce9b2b8266ca5f49069617c4765794c96d163130","commitMessage":"@@@Auto-configure Micrometer?s Tomcat metrics\n\nCloses gh-11916\n","date":"2018-02-13 20:47:25","modifiedFileCount":"0","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2018-02-16 17:07:12","codes":[{"authorDate":"2018-02-16 17:07:12","commitOrder":2,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2018-02-16 17:07:12","endLine":69,"groupId":"16345","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5d/2f61e874dce883deb07238a14da398470ab4b3.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations\n\t\t\t\t\t\t\t\t.of(TomcatMetricsAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2018-02-16 17:07:12","commitOrder":2,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tnew ReactiveWebApplicationContextRunner(\n\t\t\t\tAnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tReactiveWebServerAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2018-02-16 17:07:12","endLine":110,"groupId":"16345","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5d/2f61e874dce883deb07238a14da398470ab4b3.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tnew ReactiveWebApplicationContextRunner(\n\t\t\t\tAnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations\n\t\t\t\t\t\t\t\t.of(TomcatMetricsAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"e72506c35368c412ad020ab4d15f8f32798c50d1","commitMessage":"@@@Protect TomcatMetrics auto-config against early MeterBinder init\n\nCloses gh-11916\n","date":"2018-02-16 17:07:12","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2018-02-16 17:44:15","codes":[{"authorDate":"2018-02-16 17:07:12","commitOrder":3,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2018-02-16 17:07:12","endLine":69,"groupId":"16345","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5d/2f61e874dce883deb07238a14da398470ab4b3.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"},{"authorDate":"2018-02-16 17:44:15","commitOrder":3,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tnew ReactiveWebApplicationContextRunner(\n\t\t\t\tAnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tReactiveWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2018-02-16 18:02:35","endLine":110,"groupId":"16345","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/98/012c7000660bf2bc89c601e929e65c153c1b71.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tnew ReactiveWebApplicationContextRunner(\n\t\t\t\tAnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tReactiveWebServerAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"fe4c8f95ed8bda44e51d00d820792fb5a23bf746","commitMessage":"@@@Rename ReactiveWebServerAutoConfiguration\n\nCloses gh-12086\n","date":"2018-02-16 18:02:35","modifiedFileCount":"7","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2018-10-13 17:58:20","codes":[{"authorDate":"2018-10-13 17:58:20","commitOrder":4,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class,\n\t\t\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tcontext.publishEvent(\n\t\t\t\t\t\t\t\t\tnew ApplicationStartedEvent(new SpringApplication(),\n\t\t\t\t\t\t\t\t\t\t\tnull, context.getSourceApplicationContext()));\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = context\n\t\t\t\t\t\t\t\t\t.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2018-10-13 18:52:51","endLine":74,"groupId":"5514","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9c/e083fa607f0c66235f24dbcb854bbfa3e524fa.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2018-10-13 17:58:20","commitOrder":4,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tnew ReactiveWebApplicationContextRunner(\n\t\t\t\tAnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tReactiveWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class,\n\t\t\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tcontext.publishEvent(\n\t\t\t\t\t\t\t\t\tnew ApplicationStartedEvent(new SpringApplication(),\n\t\t\t\t\t\t\t\t\t\t\tnull, context.getSourceApplicationContext()));\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = context\n\t\t\t\t\t\t\t\t\t.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2018-10-13 18:52:51","endLine":97,"groupId":"3119","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9c/e083fa607f0c66235f24dbcb854bbfa3e524fa.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tnew ReactiveWebApplicationContextRunner(\n\t\t\t\tAnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tReactiveWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetrics.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n\t\t\t\t\t\t\tcontext.getBean(TomcatMetrics.class).bindTo(registry);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"7ad94299d6b7b59c9fa723600b02d818b08c9660","commitMessage":"@@@Stop relying on server customizer ordering for Tomcat metrics binding\n\nCloses gh-14784\n","date":"2018-10-13 18:52:51","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-22 00:00:53","codes":[{"authorDate":"2019-05-22 00:00:53","commitOrder":5,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class,\n\t\t\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\")\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tcontext.publishEvent(\n\t\t\t\t\t\t\t\t\tnew ApplicationStartedEvent(new SpringApplication(),\n\t\t\t\t\t\t\t\t\t\t\tnull, context.getSourceApplicationContext()));\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = context\n\t\t\t\t\t\t\t\t\t.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2019-05-28 22:21:31","endLine":80,"groupId":"5514","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/56/e9b5dd347de50c8c4e7dfec3cd9e878bd186ed.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class,\n\t\t\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tcontext.publishEvent(\n\t\t\t\t\t\t\t\t\tnew ApplicationStartedEvent(new SpringApplication(),\n\t\t\t\t\t\t\t\t\t\t\tnull, context.getSourceApplicationContext()));\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = context\n\t\t\t\t\t\t\t\t\t.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2019-05-22 00:00:53","commitOrder":5,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tresetTomcatState();\n\t\tnew ReactiveWebApplicationContextRunner(\n\t\t\t\tAnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tReactiveWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class,\n\t\t\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\")\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tcontext.publishEvent(\n\t\t\t\t\t\t\t\t\tnew ApplicationStartedEvent(new SpringApplication(),\n\t\t\t\t\t\t\t\t\t\t\tnull, context.getSourceApplicationContext()));\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = context\n\t\t\t\t\t\t\t\t\t.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2019-05-28 22:21:31","endLine":105,"groupId":"5515","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/56/e9b5dd347de50c8c4e7dfec3cd9e878bd186ed.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tnew ReactiveWebApplicationContextRunner(\n\t\t\t\tAnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tReactiveWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class,\n\t\t\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tcontext.publishEvent(\n\t\t\t\t\t\t\t\t\tnew ApplicationStartedEvent(new SpringApplication(),\n\t\t\t\t\t\t\t\t\t\t\tnull, context.getSourceApplicationContext()));\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = context\n\t\t\t\t\t\t\t\t\t.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"b603cd5d4b456b8f1ed7b70e5b5d014fad403c6d","commitMessage":"@@@Disable Tomcat's MBean Registry by default\n\nCloses gh-16498\n","date":"2019-05-28 22:21:31","modifiedFileCount":"6","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":71,"groupId":"5514","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/909ea787ba051710a3503ac83821bdf20f4763.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tresetTomcatState();\n\t\tnew ReactiveWebApplicationContextRunner(AnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tReactiveWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":87,"groupId":"5515","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/909ea787ba051710a3503ac83821bdf20f4763.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tresetTomcatState();\n\t\tnew ReactiveWebApplicationContextRunner(AnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tReactiveWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-09-16 20:08:56","codes":[{"authorDate":"2021-09-16 20:08:56","commitOrder":7,"curCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(createApplicationStartedEvent(context.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","date":"2021-09-16 20:08:57","endLine":71,"groupId":"10909","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e9/5cda900ab4d1b34c6f89a8f240b23097d0e463.src","preCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2021-09-16 20:08:56","commitOrder":7,"curCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tresetTomcatState();\n\t\tnew ReactiveWebApplicationContextRunner(AnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tReactiveWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(createApplicationStartedEvent(context.getSourceApplicationContext()));\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","date":"2021-09-16 20:08:57","endLine":86,"groupId":"10909","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e9/5cda900ab4d1b34c6f89a8f240b23097d0e463.src","preCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedReactiveTomcat() {\n\t\tresetTomcatState();\n\t\tnew ReactiveWebApplicationContextRunner(AnnotationConfigReactiveWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tReactiveWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ReactiveWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"ce95e093087d591626762089095705826b5adab8","commitMessage":"@@@Merge pull request #27878 from bono007\n\n* pr/27878:\n  Polish \"Add startup time metrics\"\n  Add startup time metrics\n\nCloses gh-27878\n","date":"2021-09-16 20:08:57","modifiedFileCount":"15","status":"M","submitter":"Stephane Nicoll"}]
