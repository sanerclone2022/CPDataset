[{"authorTime":"2018-02-03 10:54:54","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tpublic void shortenCommitId() {\n\t\tProperties properties = new Properties();\n\t\tproperties.put(\"branch\", \"master\");\n\t\tproperties.put(\"commit.id\", \"8e29a0b0d423d2665c6ee5171947c101a5c15681\");\n\t\tGitInfoContributor contributor = new GitInfoContributor(\n\t\t\t\tnew GitProperties(properties));\n\t\tMap<String, Object> content = contributor.generateContent();\n\t\tassertThat(content.get(\"commit\")).isInstanceOf(Map.class);\n\t\tMap<String, Object> commit = (Map<String, Object>) content.get(\"commit\");\n\t\tassertThat(commit.get(\"id\")).isEqualTo(\"8e29a0b\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":64,"groupId":"4696","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shortenCommitId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c6/7a6becbcaf53e87c54c528fff67cf1e2395541.src","preCode":"\tpublic void shortenCommitId() {\n\t\tProperties properties = new Properties();\n\t\tproperties.put(\"branch\", \"master\");\n\t\tproperties.put(\"commit.id\", \"8e29a0b0d423d2665c6ee5171947c101a5c15681\");\n\t\tGitInfoContributor contributor = new GitInfoContributor(\n\t\t\t\tnew GitProperties(properties));\n\t\tMap<String, Object> content = contributor.generateContent();\n\t\tassertThat(content.get(\"commit\")).isInstanceOf(Map.class);\n\t\tMap<String, Object> commit = (Map<String, Object>) content.get(\"commit\");\n\t\tassertThat(commit.get(\"id\")).isEqualTo(\"8e29a0b\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/info/GitInfoContributorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"NB"},{"authorDate":"2018-02-03 10:54:54","commitOrder":2,"curCode":"\tpublic void withGitIdAndAbbrev() {\n\t\t\r\n\t\tProperties properties = new Properties();\n\t\tproperties.put(\"branch\", \"master\");\n\t\tproperties.put(\"commit.id\", \"1b3cec34f7ca0a021244452f2cae07a80497a7c7\");\n\t\tproperties.put(\"commit.id.abbrev\", \"1b3cec3\");\n\t\tGitInfoContributor contributor = new GitInfoContributor(\n\t\t\t\tnew GitProperties(properties), Mode.FULL);\n\t\tMap<String, Object> content = contributor.generateContent();\n\t\tMap<String, Object> commit = (Map<String, Object>) content.get(\"commit\");\n\t\tassertThat(commit.get(\"id\")).isInstanceOf(Map.class);\n\t\tMap<String, Object> id = (Map<String, Object>) commit.get(\"id\");\n\t\tassertThat(id.get(\"full\")).isEqualTo(\"1b3cec34f7ca0a021244452f2cae07a80497a7c7\");\n\t\tassertThat(id.get(\"abbrev\")).isEqualTo(\"1b3cec3\");\n\t}\n","date":"2018-02-03 11:00:35","endLine":83,"groupId":"4696","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"withGitIdAndAbbrev","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1b/c29c70799f6df7e6627a00964ae35c5340ea1e.src","preCode":"\tpublic void withGitIdAndAbbrev() {\n\t\t\r\n\t\tProperties properties = new Properties();\n\t\tproperties.put(\"branch\", \"master\");\n\t\tproperties.put(\"commit.id\", \"1b3cec34f7ca0a021244452f2cae07a80497a7c7\");\n\t\tproperties.put(\"commit.id.abbrev\", \"1b3cec3\");\n\t\tGitInfoContributor contributor = new GitInfoContributor(\n\t\t\t\tnew GitProperties(properties), Mode.FULL);\n\t\tMap<String, Object> content = contributor.generateContent();\n\t\tMap<String, Object> commit = (Map<String, Object>) content.get(\"commit\");\n\t\tassertThat(commit.get(\"id\")).isInstanceOf(Map.class);\n\t\tMap<String, Object> id = (Map<String, Object>) commit.get(\"id\");\n\t\tassertThat(id.get(\"full\")).isEqualTo(\"1b3cec34f7ca0a021244452f2cae07a80497a7c7\");\n\t\tassertThat(id.get(\"abbrev\")).isEqualTo(\"1b3cec3\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/info/GitInfoContributorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"b5c4ce230df815273bcc7d3c05de438d9d6da846","commitMessage":"@@@Ensure full commit id is always available\n\nUpdate `GitProperties` so that the `commit.id` entry is also copied to\n`commit.id.full`.\n\nPrior to this commit.  when returning full details.  the value of\n`commit.id` would be replaced with a `Map` containing only `abbriv` as\na key. By  copying the value to a sub-key we ensure that it remains\navailable both in the FULL and SIMPLE modes.\n\nFixes gh-11892\n","date":"2018-02-03 11:00:35","modifiedFileCount":"2","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid shortenCommitId() {\n\t\tProperties properties = new Properties();\n\t\tproperties.put(\"branch\", \"master\");\n\t\tproperties.put(\"commit.id\", \"8e29a0b0d423d2665c6ee5171947c101a5c15681\");\n\t\tGitInfoContributor contributor = new GitInfoContributor(new GitProperties(properties));\n\t\tMap<String, Object> content = contributor.generateContent();\n\t\tassertThat(content.get(\"commit\")).isInstanceOf(Map.class);\n\t\tMap<String, Object> commit = (Map<String, Object>) content.get(\"commit\");\n\t\tassertThat(commit.get(\"id\")).isEqualTo(\"8e29a0b\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":63,"groupId":"10365","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"shortenCommitId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c2/5347238454983bc7471ee560509f559d0e49e5.src","preCode":"\tpublic void shortenCommitId() {\n\t\tProperties properties = new Properties();\n\t\tproperties.put(\"branch\", \"master\");\n\t\tproperties.put(\"commit.id\", \"8e29a0b0d423d2665c6ee5171947c101a5c15681\");\n\t\tGitInfoContributor contributor = new GitInfoContributor(new GitProperties(properties));\n\t\tMap<String, Object> content = contributor.generateContent();\n\t\tassertThat(content.get(\"commit\")).isInstanceOf(Map.class);\n\t\tMap<String, Object> commit = (Map<String, Object>) content.get(\"commit\");\n\t\tassertThat(commit.get(\"id\")).isEqualTo(\"8e29a0b\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/info/GitInfoContributorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid withGitIdAndAbbrev() {\n\t\t\r\n\t\tProperties properties = new Properties();\n\t\tproperties.put(\"branch\", \"master\");\n\t\tproperties.put(\"commit.id\", \"1b3cec34f7ca0a021244452f2cae07a80497a7c7\");\n\t\tproperties.put(\"commit.id.abbrev\", \"1b3cec3\");\n\t\tGitInfoContributor contributor = new GitInfoContributor(new GitProperties(properties), Mode.FULL);\n\t\tMap<String, Object> content = contributor.generateContent();\n\t\tMap<String, Object> commit = (Map<String, Object>) content.get(\"commit\");\n\t\tassertThat(commit.get(\"id\")).isInstanceOf(Map.class);\n\t\tMap<String, Object> id = (Map<String, Object>) commit.get(\"id\");\n\t\tassertThat(id.get(\"full\")).isEqualTo(\"1b3cec34f7ca0a021244452f2cae07a80497a7c7\");\n\t\tassertThat(id.get(\"abbrev\")).isEqualTo(\"1b3cec3\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":80,"groupId":"10365","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"withGitIdAndAbbrev","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c2/5347238454983bc7471ee560509f559d0e49e5.src","preCode":"\tpublic void withGitIdAndAbbrev() {\n\t\t\r\n\t\tProperties properties = new Properties();\n\t\tproperties.put(\"branch\", \"master\");\n\t\tproperties.put(\"commit.id\", \"1b3cec34f7ca0a021244452f2cae07a80497a7c7\");\n\t\tproperties.put(\"commit.id.abbrev\", \"1b3cec3\");\n\t\tGitInfoContributor contributor = new GitInfoContributor(new GitProperties(properties), Mode.FULL);\n\t\tMap<String, Object> content = contributor.generateContent();\n\t\tMap<String, Object> commit = (Map<String, Object>) content.get(\"commit\");\n\t\tassertThat(commit.get(\"id\")).isInstanceOf(Map.class);\n\t\tMap<String, Object> id = (Map<String, Object>) commit.get(\"id\");\n\t\tassertThat(id.get(\"full\")).isEqualTo(\"1b3cec34f7ca0a021244452f2cae07a80497a7c7\");\n\t\tassertThat(id.get(\"abbrev\")).isEqualTo(\"1b3cec3\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/info/GitInfoContributorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
