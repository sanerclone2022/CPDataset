[{"authorTime":"2018-08-30 19:08:42","codes":[{"authorDate":"2018-08-30 19:08:42","commitOrder":1,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-08-30 19:08:42","endLine":85,"groupId":"11628","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/970367fc445a139a51114098f0481c6b7c2ac2.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"},{"authorDate":"2018-08-30 19:08:42","commitOrder":1,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(TestController.class,\n\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-08-30 19:08:42","endLine":124,"groupId":"11628","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/35/4f6671cda1c8466687c6f04c142508a52d649d.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(TestController.class,\n\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"B"}],"commitId":"6c26315cd196dea6251933daabf2963952005b08","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-08-30 19:08:42","modifiedFileCount":"6","status":"B","submitter":"Stephane Nicoll"},{"authorTime":"2018-09-04 21:04:02","codes":[{"authorDate":"2018-08-30 19:08:42","commitOrder":2,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-08-30 19:08:42","endLine":85,"groupId":"11628","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/970367fc445a139a51114098f0481c6b7c2ac2.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"},{"authorDate":"2018-09-04 21:04:02","commitOrder":2,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-09-04 21:04:02","endLine":121,"groupId":"11628","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/19/99bd4c22bcb1aa1cddf22a11ad43d14baa587b.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(TestController.class,\n\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"1ceb076035ac68369ddb7f68485ee23b61d8ea20","commitMessage":"@@@Harmonize Metrics test\n\nThis commit harmonizes metrics test to rely on `MetricRun.simple()`\nrather than configuring a simple `MeterRegistry` manually. Rather than\napplying related auto-configurations automatically.  `MetricsRun` only\nenable the absolute minimum.\n\nSee gh-14255\n","date":"2018-09-04 21:04:02","modifiedFileCount":"7","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-31 17:03:02","codes":[{"authorDate":"2019-05-31 17:03:02","commitOrder":3,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-06-01 01:33:10","endLine":82,"groupId":"11628","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/49/e919c5740cab3edac3a1f7a392ea10873a050c.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2019-05-31 17:03:02","commitOrder":3,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-06-01 01:33:10","endLine":125,"groupId":"11628","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a7/2026551eb9ecad8f3fe8080c6fc88073f42199.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"0644a7940108d6db7c352a807bfb2b8a34d544e2","commitMessage":"@@@Repackage output capture and always use extension declaratively\n\nCloses gh-17029\n","date":"2019-06-01 01:33:10","modifiedFileCount":"61","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \" + \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":78,"groupId":"11628","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1c/38188347b624ef1cf8385e22a836ba825148bb.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \" + \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, WebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \" + \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":116,"groupId":"11628","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f4/dbc4834c1452468cf608a205eec7c7b9616ea3.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, WebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \" + \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-15 01:07:47","codes":[{"authorDate":"2019-07-15 01:07:47","commitOrder":5,"curCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput output) {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(output).contains(\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-07-15 07:24:18","endLine":77,"groupId":"10945","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c5/bfe12c5ece705454703eb277ae53e91d887591.src","preCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \" + \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2019-07-15 01:07:47","commitOrder":5,"curCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput output) {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, WebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(output).contains(\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-07-15 07:24:18","endLine":115,"groupId":"10945","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/b45e46826933dfa98220a82fc72956eac6b1ba.src","preCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, WebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \" + \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"c3816bfe7be8cc1a042396b2b7d8d236aa585c52","commitMessage":"@@@Polish output capture names\n","date":"2019-07-15 07:24:18","modifiedFileCount":"73","status":"M","submitter":"Phillip Webb"}]
