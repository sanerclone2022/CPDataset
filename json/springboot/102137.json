[{"authorTime":"2019-11-01 09:17:23","codes":[{"authorDate":"2019-11-01 09:17:23","commitOrder":1,"curCode":"\tpublic Constructor<?> getBindConstructor(Bindable<?> bindable) {\n\t\tClass<?> type = bindable.getType().resolve();\n\t\tif (bindable.getValue() != null || type == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (KotlinDetector.isKotlinPresent() && KotlinDetector.isKotlinType(type)) {\n\t\t\treturn getDeducedKotlinConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","date":"2019-11-06 06:44:31","endLine":46,"groupId":"4456","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getBindConstructor","params":"(Bindable<?>bindable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c9/e00110f1bdc2b3031e193835d4d914d4c483b8.src","preCode":"\tpublic Constructor<?> getBindConstructor(Bindable<?> bindable) {\n\t\tClass<?> type = bindable.getType().resolve();\n\t\tif (bindable.getValue() != null || type == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (KotlinDetector.isKotlinPresent() && KotlinDetector.isKotlinType(type)) {\n\t\t\treturn getDeducedKotlinConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/DefaultBindConstructorProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"},{"authorDate":"2019-11-01 09:17:23","commitOrder":1,"curCode":"\tprivate Constructor<?> deduceBindConstructor(Class<?> type) {\n\t\tif (isKotlinType(type)) {\n\t\t\treturn deducedKotlinBindConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","date":"2019-11-06 06:44:31","endLine":93,"groupId":"4456","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deduceBindConstructor","params":"(Class<?>type)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d5/06881a7d7becbe5063107cd0e25be73307f0cc.src","preCode":"\tprivate Constructor<?> deduceBindConstructor(Class<?> type) {\n\t\tif (isKotlinType(type)) {\n\t\t\treturn deducedKotlinBindConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindConstructorProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"}],"commitId":"f9785d2bda86a61d70481883681dbb96cf194d93","commitMessage":"@@@Fix constructor binding issues\n\nThis commit fixes a few bugs related to constructor binding.\nThe ContructorFilter on the Bindable has been replaced with a\nBinder level BinderConstructorProvider so that it can be used to\ndetermine the constructor to use for nested properties as well.\n\nFixes gh-18810\nFixes gh-18670\nCloses gh-18685\nCloses gh-18894\n\nCo-authored-by: Phillip Webb <pwebb@pivotal.io>\n","date":"2019-11-06 06:44:31","modifiedFileCount":"13","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2019-11-01 09:17:23","codes":[{"authorDate":"2019-11-14 06:48:31","commitOrder":2,"curCode":"\tpublic Constructor<?> getBindConstructor(Bindable<?> bindable, boolean isNestedConstructorBinding) {\n\t\tClass<?> type = bindable.getType().resolve();\n\t\tif (bindable.getValue() != null || type == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (KotlinDetector.isKotlinPresent() && KotlinDetector.isKotlinType(type)) {\n\t\t\treturn getDeducedKotlinConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","date":"2019-11-14 06:48:31","endLine":46,"groupId":"4456","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getBindConstructor","params":"(Bindable<?>bindable@booleanisNestedConstructorBinding)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b3/6b12b2ccfb41852fe90d7e33908f6d2e84b46b.src","preCode":"\tpublic Constructor<?> getBindConstructor(Bindable<?> bindable) {\n\t\tClass<?> type = bindable.getType().resolve();\n\t\tif (bindable.getValue() != null || type == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (KotlinDetector.isKotlinPresent() && KotlinDetector.isKotlinType(type)) {\n\t\t\treturn getDeducedKotlinConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/DefaultBindConstructorProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2019-11-01 09:17:23","commitOrder":2,"curCode":"\tprivate Constructor<?> deduceBindConstructor(Class<?> type) {\n\t\tif (isKotlinType(type)) {\n\t\t\treturn deducedKotlinBindConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","date":"2019-11-06 06:44:31","endLine":93,"groupId":"4456","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deduceBindConstructor","params":"(Class<?>type)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d5/06881a7d7becbe5063107cd0e25be73307f0cc.src","preCode":"\tprivate Constructor<?> deduceBindConstructor(Class<?> type) {\n\t\tif (isKotlinType(type)) {\n\t\t\treturn deducedKotlinBindConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindConstructorProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"}],"commitId":"c8dfec4b38ddeb7d3c45ce0742dd709e9ee4659a","commitMessage":"@@@Merge branch '2.2.x'\n\nCloses gh-19011\n","date":"2019-11-14 06:48:31","modifiedFileCount":"10","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-11-01 09:17:23","codes":[{"authorDate":"2020-08-28 00:44:10","commitOrder":3,"curCode":"\tpublic Constructor<?> getBindConstructor(Bindable<?> bindable, boolean isNestedConstructorBinding) {\n\t\tClass<?> type = bindable.getType().resolve();\n\t\tif (bindable.getValue() != null || type == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (KotlinDetector.isKotlinPresent() && KotlinDetector.isKotlinType(type)) {\n\t\t\treturn getDeducedKotlinConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\tConstructor<?> constructor = null;\n\t\tfor (Constructor<?> candidate : constructors) {\n\t\t\tif (!Modifier.isPrivate(candidate.getModifiers())) {\n\t\t\t\tif (constructor != null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconstructor = candidate;\n\t\t\t}\n\t\t}\n\t\tif (constructor != null && constructor.getParameterCount() > 0) {\n\t\t\treturn constructor;\n\t\t}\n\t\treturn null;\n\t}\n","date":"2020-08-28 12:28:16","endLine":59,"groupId":"102137","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getBindConstructor","params":"(Bindable<?>bindable@booleanisNestedConstructorBinding)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/26/0e83c0e66bd7a43f45c2c82f85e4cca172a336.src","preCode":"\tpublic Constructor<?> getBindConstructor(Bindable<?> bindable, boolean isNestedConstructorBinding) {\n\t\tClass<?> type = bindable.getType().resolve();\n\t\tif (bindable.getValue() != null || type == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (KotlinDetector.isKotlinPresent() && KotlinDetector.isKotlinType(type)) {\n\t\t\treturn getDeducedKotlinConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/DefaultBindConstructorProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2019-11-01 09:17:23","commitOrder":3,"curCode":"\tprivate Constructor<?> deduceBindConstructor(Class<?> type) {\n\t\tif (isKotlinType(type)) {\n\t\t\treturn deducedKotlinBindConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","date":"2019-11-06 06:44:31","endLine":93,"groupId":"102137","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"deduceBindConstructor","params":"(Class<?>type)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d5/06881a7d7becbe5063107cd0e25be73307f0cc.src","preCode":"\tprivate Constructor<?> deduceBindConstructor(Class<?> type) {\n\t\tif (isKotlinType(type)) {\n\t\t\treturn deducedKotlinBindConstructor(type);\n\t\t}\n\t\tConstructor<?>[] constructors = type.getDeclaredConstructors();\n\t\tif (constructors.length == 1 && constructors[0].getParameterCount() > 0) {\n\t\t\treturn constructors[0];\n\t\t}\n\t\treturn null;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindConstructorProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"}],"commitId":"c613d119f774b6f3bc80c75b1717640f579f35b6","commitMessage":"@@@Support binding with multiple constructors\n\nUpdate `DefaultBindConstructorProvider` so that binding to objects with\nmultiple constructors is allowed.  as long as there is only one\nnon-public candidate.\n\nCloses gh-23117\n","date":"2020-08-28 12:28:16","modifiedFileCount":"2","status":"M","submitter":"Phillip Webb"}]
