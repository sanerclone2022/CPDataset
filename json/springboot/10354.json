[{"authorTime":"2018-02-08 21:07:06","codes":[{"authorDate":"2018-02-08 21:07:06","commitOrder":1,"curCode":"\tpublic void traceForMonoErrorWithRuntimeExceptionHas500Status() {\n\t\tReactiveWebApplicationContextRunner runner = new ReactiveWebApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(Config.class);\n\t\trunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get()\n\t\t\t\t\t.uri(\"/mono-error\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus())\n\t\t\t\t\t.isEqualTo(500);\n\t\t});\n\t}\n","date":"2018-02-08 21:08:27","endLine":81,"groupId":"10251","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"traceForMonoErrorWithRuntimeExceptionHas500Status","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/de/1b687aa873adc205ad185ce9aaf6ef42b5b436.src","preCode":"\tpublic void traceForMonoErrorWithRuntimeExceptionHas500Status() {\n\t\tReactiveWebApplicationContextRunner runner = new ReactiveWebApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(Config.class);\n\t\trunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get()\n\t\t\t\t\t.uri(\"/mono-error\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus())\n\t\t\t\t\t.isEqualTo(500);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2018-02-08 21:07:06","commitOrder":1,"curCode":"\tpublic void traceForThrownRuntimeExceptionHas500Status() {\n\t\tReactiveWebApplicationContextRunner runner = new ReactiveWebApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(Config.class);\n\t\trunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get().uri(\"/thrown\")\n\t\t\t\t\t.exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus())\n\t\t\t\t\t.isEqualTo(500);\n\t\t});\n\t}\n","date":"2018-02-08 21:08:27","endLine":96,"groupId":"10251","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"traceForThrownRuntimeExceptionHas500Status","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/de/1b687aa873adc205ad185ce9aaf6ef42b5b436.src","preCode":"\tpublic void traceForThrownRuntimeExceptionHas500Status() {\n\t\tReactiveWebApplicationContextRunner runner = new ReactiveWebApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(Config.class);\n\t\trunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get().uri(\"/thrown\")\n\t\t\t\t\t.exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus())\n\t\t\t\t\t.isEqualTo(500);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"}],"commitId":"4beb6be179ff8c4d83ea2638b65f4bede99922d6","commitMessage":"@@@Rename HTTP trace properties and packages\n\nCloses gh-11934\n","date":"2018-02-08 21:08:27","modifiedFileCount":"14","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2018-02-17 07:38:16","codes":[{"authorDate":"2018-02-17 07:38:16","commitOrder":2,"curCode":"\tpublic void traceForMonoErrorWithRuntimeExceptionHas500Status() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get()\n\t\t\t\t\t.uri(\"/mono-error\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus())\n\t\t\t\t\t.isEqualTo(500);\n\t\t});\n\t}\n","date":"2018-02-17 10:11:54","endLine":80,"groupId":"10251","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"traceForMonoErrorWithRuntimeExceptionHas500Status","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/40/606c747e6acaf178e633a7f6b2d5eef111f51d.src","preCode":"\tpublic void traceForMonoErrorWithRuntimeExceptionHas500Status() {\n\t\tReactiveWebApplicationContextRunner runner = new ReactiveWebApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(Config.class);\n\t\trunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get()\n\t\t\t\t\t.uri(\"/mono-error\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus())\n\t\t\t\t\t.isEqualTo(500);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2018-02-17 07:38:16","commitOrder":2,"curCode":"\tpublic void traceForThrownRuntimeExceptionHas500Status() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get().uri(\"/thrown\")\n\t\t\t\t\t.exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus())\n\t\t\t\t\t.isEqualTo(500);\n\t\t});\n\t}\n","date":"2018-02-17 10:11:54","endLine":93,"groupId":"10251","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"traceForThrownRuntimeExceptionHas500Status","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/40/606c747e6acaf178e633a7f6b2d5eef111f51d.src","preCode":"\tpublic void traceForThrownRuntimeExceptionHas500Status() {\n\t\tReactiveWebApplicationContextRunner runner = new ReactiveWebApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(Config.class);\n\t\trunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get().uri(\"/thrown\")\n\t\t\t\t\t.exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus())\n\t\t\t\t\t.isEqualTo(500);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"9e75680e6f26a23494f21fb6c41b70445f58d8ea","commitMessage":"@@@Polish\n","date":"2018-02-17 10:11:54","modifiedFileCount":"30","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid traceForMonoErrorWithRuntimeExceptionHas500Status() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get().uri(\"/mono-error\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus()).isEqualTo(500);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":77,"groupId":"10354","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"traceForMonoErrorWithRuntimeExceptionHas500Status","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/82922589964429273b6a209c5974d967d69664.src","preCode":"\tpublic void traceForMonoErrorWithRuntimeExceptionHas500Status() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get().uri(\"/mono-error\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus()).isEqualTo(500);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid traceForThrownRuntimeExceptionHas500Status() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get().uri(\"/thrown\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus()).isEqualTo(500);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":88,"groupId":"10354","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"traceForThrownRuntimeExceptionHas500Status","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/82922589964429273b6a209c5974d967d69664.src","preCode":"\tpublic void traceForThrownRuntimeExceptionHas500Status() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tWebTestClient.bindToApplicationContext(context).build().get().uri(\"/thrown\").exchange().expectStatus()\n\t\t\t\t\t.isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\t\tHttpTraceRepository repository = context.getBean(HttpTraceRepository.class);\n\t\t\tassertThat(repository.findAll()).hasSize(1);\n\t\t\tassertThat(repository.findAll().get(0).getResponse().getStatus()).isEqualTo(500);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
