[{"authorTime":"2017-10-17 06:05:32","codes":[{"authorDate":"2017-10-17 06:05:32","commitOrder":1,"curCode":"\tpublic void endpointsAreSecureByDefaultWithCustomBasePath() throws Exception {\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isUnauthorized());\n\t}\n","date":"2017-10-17 06:17:55","endLine":85,"groupId":"16495","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"endpointsAreSecureByDefaultWithCustomBasePath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f5/844f0d427730518b9d903db0c1f9909f0fb759.src","preCode":"\tpublic void endpointsAreSecureByDefaultWithCustomBasePath() throws Exception {\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isUnauthorized());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2017-10-17 06:05:32","commitOrder":1,"curCode":"\tpublic void endpointsAreSecureWithActuatorRoleWithCustomBasePath()\n\t\t\tthrows Exception {\n\t\tTestSecurityContextHolder.getContext().setAuthentication(\n\t\t\t\tnew TestingAuthenticationToken(\"user\", \"N/A\", \"ROLE_ACTUATOR\"));\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\",\n\t\t\t\t\"endpoints.default.web.enabled=true\").applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\")).andExpect(status().isOk());\n\t}\n","date":"2017-10-17 06:17:55","endLine":98,"groupId":"3731","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"endpointsAreSecureWithActuatorRoleWithCustomBasePath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f5/844f0d427730518b9d903db0c1f9909f0fb759.src","preCode":"\tpublic void endpointsAreSecureWithActuatorRoleWithCustomBasePath()\n\t\t\tthrows Exception {\n\t\tTestSecurityContextHolder.getContext().setAuthentication(\n\t\t\t\tnew TestingAuthenticationToken(\"user\", \"N/A\", \"ROLE_ACTUATOR\"));\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\",\n\t\t\t\t\"endpoints.default.web.enabled=true\").applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\")).andExpect(status().isOk());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"d307eba0a3844f017c0d5bd26e583bc0fd8bb808","commitMessage":"@@@Add property to configure base-path for web endpoints.\n\nAlso.  move properties corresponding to management server under\n`management.server.*`.\n\nCloses gh-10230\n","date":"2017-10-17 06:17:55","modifiedFileCount":"22","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2017-10-14 00:14:27","codes":[{"authorDate":"2017-10-17 06:05:32","commitOrder":2,"curCode":"\tpublic void endpointsAreSecureByDefaultWithCustomBasePath() throws Exception {\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isUnauthorized());\n\t}\n","date":"2017-10-17 06:17:55","endLine":85,"groupId":"16495","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"endpointsAreSecureByDefaultWithCustomBasePath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f5/844f0d427730518b9d903db0c1f9909f0fb759.src","preCode":"\tpublic void endpointsAreSecureByDefaultWithCustomBasePath() throws Exception {\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isUnauthorized());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"},{"authorDate":"2017-10-14 00:14:27","commitOrder":2,"curCode":"\tpublic void endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {\n\t\tTestSecurityContextHolder.getContext().setAuthentication(\n\t\t\t\tnew TestingAuthenticationToken(\"user\", \"N/A\", \"ROLE_ACTUATOR\"));\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\",\n\t\t\t\t\"management.endpoints.web.expose=*\").applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\")).andExpect(status().isOk());\n\t}\n","date":"2017-11-16 06:41:38","endLine":98,"groupId":"3722","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"endpointsAreSecureWithActuatorRoleWithCustomBasePath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e0/cbcefb77414252d5f703c6c19f591d16b90be1.src","preCode":"\tpublic void endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {\n\t\tTestSecurityContextHolder.getContext().setAuthentication(\n\t\t\t\tnew TestingAuthenticationToken(\"user\", \"N/A\", \"ROLE_ACTUATOR\"));\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\",\n\t\t\t\t\"endpoints.default.web.enabled=true\").applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\")).andExpect(status().isOk());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"fd5c43cdc97a3b17234a139b566a96eabd282639","commitMessage":"@@@Separate endpoint concerns\n\nUpdate endpoint code to provide cleaner separation of concerns.\nSpecifically.  the top level endpoint package is no longer aware of\nthe fact that JMX and HTTP are ultimately used to expose endpoints.\nCaching concerns have also been abstracted behind a general purpose\n`OperationMethodInvokerAdvisor` interface.\n\nConfiguration properties have been refined to further enforce\nseparation. The `management.endpoint.<name>` prefix provides\nconfiguration for a  single endpoint (including enable and cache\ntime-to-live). These  properties are now technology agnostic (they\ndon't include `web` or `jmx` sub properties).\n\nThe `management.endpoints.<technology>` prefix provide exposure specific\nconfiguration. For example.  `management.endpoints.web.path-mapping`\nallow endpoint URLs to be changed.\n\nEndpoint enabled/disabled logic has been simplified so that endpoints\ncan't be disabled per exposure technology. Instead a filter based\napproach is used to allow refinement of what endpoints are exposed over\na given technology.\n\nFixes gh-10176\n","date":"2017-11-16 06:41:38","modifiedFileCount":"108","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-02-12 21:00:40","codes":[{"authorDate":"2017-10-17 06:05:32","commitOrder":3,"curCode":"\tpublic void endpointsAreSecureByDefaultWithCustomBasePath() throws Exception {\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isUnauthorized());\n\t}\n","date":"2017-10-17 06:17:55","endLine":85,"groupId":"16495","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"endpointsAreSecureByDefaultWithCustomBasePath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f5/844f0d427730518b9d903db0c1f9909f0fb759.src","preCode":"\tpublic void endpointsAreSecureByDefaultWithCustomBasePath() throws Exception {\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isUnauthorized());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"},{"authorDate":"2018-02-12 21:00:40","commitOrder":3,"curCode":"\tpublic void endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {\n\t\tTestSecurityContextHolder.getContext().setAuthentication(\n\t\t\t\tnew TestingAuthenticationToken(\"user\", \"N/A\", \"ROLE_ACTUATOR\"));\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\",\n\t\t\t\t\"management.endpoints.web.exposure.include=*\").applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\")).andExpect(status().isOk());\n\t}\n","date":"2018-02-12 21:00:40","endLine":111,"groupId":"3722","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"endpointsAreSecureWithActuatorRoleWithCustomBasePath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ea/9ee4fa0aa8659b5ead7ab20b259af5b9763a57.src","preCode":"\tpublic void endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {\n\t\tTestSecurityContextHolder.getContext().setAuthentication(\n\t\t\t\tnew TestingAuthenticationToken(\"user\", \"N/A\", \"ROLE_ACTUATOR\"));\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\",\n\t\t\t\t\"management.endpoints.web.expose=*\").applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\")).andExpect(status().isOk());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"7473642f5852900166d4dfa754b9362612e2db32","commitMessage":"@@@Harmonize endpoints exclude property\n\nCloses gh-11914\n","date":"2018-02-12 21:00:40","modifiedFileCount":"19","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-04-02 16:06:33","codes":[{"authorDate":"2019-04-02 16:06:33","commitOrder":4,"curCode":"\tpublic void endpointsAreSecureByDefaultWithCustomBasePath() throws Exception {\n\t\tthis.context = new AnnotationConfigServletWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isUnauthorized());\n\t}\n","date":"2019-04-05 20:17:41","endLine":99,"groupId":"16495","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"endpointsAreSecureByDefaultWithCustomBasePath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a8/7c5c30553cb9fea9b4c87928ae7f5404b7c077.src","preCode":"\tpublic void endpointsAreSecureByDefaultWithCustomBasePath() throws Exception {\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isUnauthorized());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2019-04-02 16:06:33","commitOrder":4,"curCode":"\tpublic void endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {\n\t\tTestSecurityContextHolder.getContext().setAuthentication(\n\t\t\t\tnew TestingAuthenticationToken(\"user\", \"N/A\", \"ROLE_ACTUATOR\"));\n\t\tthis.context = new AnnotationConfigServletWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.base-path:/management\",\n\t\t\t\t\t\t\"management.endpoints.web.exposure.include=*\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\")).andExpect(status().isOk());\n\t}\n","date":"2019-04-05 20:17:41","endLine":113,"groupId":"3722","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"endpointsAreSecureWithActuatorRoleWithCustomBasePath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a8/7c5c30553cb9fea9b4c87928ae7f5404b7c077.src","preCode":"\tpublic void endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {\n\t\tTestSecurityContextHolder.getContext().setAuthentication(\n\t\t\t\tnew TestingAuthenticationToken(\"user\", \"N/A\", \"ROLE_ACTUATOR\"));\n\t\tthis.context = new AnnotationConfigWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.base-path:/management\",\n\t\t\t\t\t\t\"management.endpoints.web.exposure.include=*\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\")).andExpect(status().isOk());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"c432288ed1a4edc2e985a2a0442050e2bb60d161","commitMessage":"@@@Migrate ApplicationContext to common hierarchy\n\nThis commit migrates `AnnotationConfigReactiveWebApplicationContext`\nparent to the `GenericApplicationContext` abstraction. Any use of\n`AnnotationConfigWebApplicationContext` is also removed as it also\ninherits from the `AbstractRefreshableApplicationContext` outdated\nhierarchy.\n\nA new `AnnotationConfigServletWebApplicationContext` context is\nintroduced instead.  extending from `GenericApplicationContext` and\nproviding the counter part of the reactive context for the Servlet-based\nweb app tests.\n\nSee gh-16096\n","date":"2019-04-05 20:17:41","modifiedFileCount":"23","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid endpointsAreSecureByDefaultWithCustomBasePath() throws Exception {\n\t\tthis.context = new AnnotationConfigServletWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\").applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isUnauthorized());\n\t}\n","date":"2019-06-07 19:25:54","endLine":97,"groupId":"10832","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"endpointsAreSecureByDefaultWithCustomBasePath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8d/e76b934d902c69a6f5ccb3a6fb582d092ea6e5.src","preCode":"\tpublic void endpointsAreSecureByDefaultWithCustomBasePath() throws Exception {\n\t\tthis.context = new AnnotationConfigServletWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues.of(\"management.endpoints.web.base-path:/management\").applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\").accept(MediaType.APPLICATION_JSON))\n\t\t\t\t.andExpect(status().isUnauthorized());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {\n\t\tTestSecurityContextHolder.getContext()\n\t\t\t\t.setAuthentication(new TestingAuthenticationToken(\"user\", \"N/A\", \"ROLE_ACTUATOR\"));\n\t\tthis.context = new AnnotationConfigServletWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.base-path:/management\", \"management.endpoints.web.exposure.include=*\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\")).andExpect(status().isOk());\n\t}\n","date":"2019-06-07 19:25:54","endLine":110,"groupId":"10832","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"endpointsAreSecureWithActuatorRoleWithCustomBasePath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8d/e76b934d902c69a6f5ccb3a6fb582d092ea6e5.src","preCode":"\tpublic void endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {\n\t\tTestSecurityContextHolder.getContext()\n\t\t\t\t.setAuthentication(new TestingAuthenticationToken(\"user\", \"N/A\", \"ROLE_ACTUATOR\"));\n\t\tthis.context = new AnnotationConfigServletWebApplicationContext();\n\t\tthis.context.register(SecureConfiguration.class);\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.base-path:/management\", \"management.endpoints.web.exposure.include=*\")\n\t\t\t\t.applyTo(this.context);\n\t\tMockMvc mockMvc = createSecureMockMvc();\n\t\tmockMvc.perform(get(\"/management/beans\")).andExpect(status().isOk());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
