[{"authorTime":"2018-01-15 21:36:20","codes":[{"authorDate":"2018-01-15 21:36:20","commitOrder":1,"curCode":"\tpublic void liquibaseReportIsReturned() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class)\n\t\t\t\t.run((context) -> assertThat(\n\t\t\t\t\t\tcontext.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans())\n\t\t\t\t\t\t\t\t\t\t.hasSize(1));\n\t}\n","date":"2018-01-16 17:53:52","endLine":52,"groupId":"10515","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"liquibaseReportIsReturned","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/01/4e95f7f54d3552a75b483f38ac9d69b2818c2e.src","preCode":"\tpublic void liquibaseReportIsReturned() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class)\n\t\t\t\t.run((context) -> assertThat(\n\t\t\t\t\t\tcontext.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans())\n\t\t\t\t\t\t\t\t\t\t.hasSize(1));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2018-01-15 21:36:20","commitOrder":1,"curCode":"\tpublic void invokeWithCustomSchema() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"spring.liquibase.default-schema=CUSTOMSCHEMA\",\n\t\t\t\t\t\t\"spring.datasource.schema=classpath:/db/create-custom-schema.sql\")\n\t\t\t\t.run((context) -> assertThat(\n\t\t\t\t\t\tcontext.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans())\n\t\t\t\t\t\t\t\t\t\t.hasSize(1));\n\t}\n","date":"2018-01-16 17:53:52","endLine":63,"groupId":"10515","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeWithCustomSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/01/4e95f7f54d3552a75b483f38ac9d69b2818c2e.src","preCode":"\tpublic void invokeWithCustomSchema() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"spring.liquibase.default-schema=CUSTOMSCHEMA\",\n\t\t\t\t\t\t\"spring.datasource.schema=classpath:/db/create-custom-schema.sql\")\n\t\t\t\t.run((context) -> assertThat(\n\t\t\t\t\t\tcontext.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans())\n\t\t\t\t\t\t\t\t\t\t.hasSize(1));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"}],"commitId":"5b8a2f96750c969c06b0765546312c37b22f0282","commitMessage":"@@@Improve context hierarchy handling in Actuator endpoints\n\nPreviously.  a number of Actuator endpoints ignored a context hierarchy\nor assumed that it would always be linear. This commit reworks the\naffected endpoints so that the no longer assume a linear hierarchy.\n\nA side-effect of a non-linear hierarchy is that there may be multiple\ndifferent beans with the same name (in a linear hierarchy.  a bean\nwith the same name as one in an ancestor context.  replaces that bean).\nThe affected endpoints have also been updated so that.  when bean names\nare used as keys.  those keys are grouped by application context. This\nprevents a bean in one context from accidentially overwriting a bean\nin another context.\n\nCloses gh-11019\n","date":"2018-01-16 17:53:52","modifiedFileCount":"25","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2019-04-04 21:40:54","codes":[{"authorDate":"2019-04-04 21:40:54","commitOrder":2,"curCode":"\tpublic void liquibaseReportIsReturned() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class).run((context) -> {\n\t\t\tMap<String, LiquibaseBean> liquibaseBeans = context\n\t\t\t\t\t.getBean(LiquibaseEndpoint.class).liquibaseBeans().getContexts()\n\t\t\t\t\t.get(context.getId()).getLiquibaseBeans();\n\t\t\tassertThat(liquibaseBeans.get(\"liquibase\").getChangeSets()).hasSize(1);\n\t\t});\n\t}\n","date":"2019-04-04 21:40:54","endLine":60,"groupId":"13376","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"liquibaseReportIsReturned","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/28/4a6ebc911201b6fc516e0c3841bf9b6b5837c6.src","preCode":"\tpublic void liquibaseReportIsReturned() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class)\n\t\t\t\t.run((context) -> assertThat(\n\t\t\t\t\t\tcontext.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans())\n\t\t\t\t\t\t\t\t\t\t.hasSize(1));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2019-04-04 21:40:54","commitOrder":2,"curCode":"\tpublic void invokeWithCustomSchema() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"spring.liquibase.default-schema=CUSTOMSCHEMA\",\n\t\t\t\t\t\t\"spring.datasource.schema=classpath:/db/create-custom-schema.sql\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMap<String, LiquibaseBean> liquibaseBeans = context\n\t\t\t\t\t\t\t.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans();\n\t\t\t\t\tassertThat(liquibaseBeans.get(\"liquibase\").getChangeSets())\n\t\t\t\t\t\t\t.hasSize(1);\n\t\t\t\t});\n\t}\n","date":"2019-04-04 21:40:54","endLine":74,"groupId":"13376","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeWithCustomSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/28/4a6ebc911201b6fc516e0c3841bf9b6b5837c6.src","preCode":"\tpublic void invokeWithCustomSchema() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"spring.liquibase.default-schema=CUSTOMSCHEMA\",\n\t\t\t\t\t\t\"spring.datasource.schema=classpath:/db/create-custom-schema.sql\")\n\t\t\t\t.run((context) -> assertThat(\n\t\t\t\t\t\tcontext.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans())\n\t\t\t\t\t\t\t\t\t\t.hasSize(1));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"537a97c1e54dfb0f3b955676dc89fdbed10272db","commitMessage":"@@@Merge branch '2.1.x'\n\nCloses gh-16461\n","date":"2019-04-04 21:40:54","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid liquibaseReportIsReturned() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class).run((context) -> {\n\t\t\tMap<String, LiquibaseBean> liquibaseBeans = context.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans();\n\t\t\tassertThat(liquibaseBeans.get(\"liquibase\").getChangeSets()).hasSize(1);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":59,"groupId":"13376","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"liquibaseReportIsReturned","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3f/82ae806418e910187e48e3fbbd4b3eb6a1c0fb.src","preCode":"\tpublic void liquibaseReportIsReturned() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class).run((context) -> {\n\t\t\tMap<String, LiquibaseBean> liquibaseBeans = context.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans();\n\t\t\tassertThat(liquibaseBeans.get(\"liquibase\").getChangeSets()).hasSize(1);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid invokeWithCustomSchema() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"spring.liquibase.default-schema=CUSTOMSCHEMA\",\n\t\t\t\t\t\t\"spring.datasource.schema=classpath:/db/create-custom-schema.sql\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMap<String, LiquibaseBean> liquibaseBeans = context.getBean(LiquibaseEndpoint.class)\n\t\t\t\t\t\t\t.liquibaseBeans().getContexts().get(context.getId()).getLiquibaseBeans();\n\t\t\t\t\tassertThat(liquibaseBeans.get(\"liquibase\").getChangeSets()).hasSize(1);\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":71,"groupId":"13376","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeWithCustomSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3f/82ae806418e910187e48e3fbbd4b3eb6a1c0fb.src","preCode":"\tpublic void invokeWithCustomSchema() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"spring.liquibase.default-schema=CUSTOMSCHEMA\",\n\t\t\t\t\t\t\"spring.datasource.schema=classpath:/db/create-custom-schema.sql\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMap<String, LiquibaseBean> liquibaseBeans = context.getBean(LiquibaseEndpoint.class)\n\t\t\t\t\t\t\t.liquibaseBeans().getContexts().get(context.getId()).getLiquibaseBeans();\n\t\t\t\t\tassertThat(liquibaseBeans.get(\"liquibase\").getChangeSets()).hasSize(1);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-03-24 00:50:22","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid liquibaseReportIsReturned() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class).run((context) -> {\n\t\t\tMap<String, LiquibaseBean> liquibaseBeans = context.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans();\n\t\t\tassertThat(liquibaseBeans.get(\"liquibase\").getChangeSets()).hasSize(1);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":59,"groupId":"10488","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"liquibaseReportIsReturned","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3f/82ae806418e910187e48e3fbbd4b3eb6a1c0fb.src","preCode":"\tvoid liquibaseReportIsReturned() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class).run((context) -> {\n\t\t\tMap<String, LiquibaseBean> liquibaseBeans = context.getBean(LiquibaseEndpoint.class).liquibaseBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getLiquibaseBeans();\n\t\t\tassertThat(liquibaseBeans.get(\"liquibase\").getChangeSets()).hasSize(1);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"},{"authorDate":"2021-03-24 00:50:22","commitOrder":4,"curCode":"\tvoid invokeWithCustomSchema() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class, DataSourceWithSchemaConfiguration.class)\n\t\t\t\t.withPropertyValues(\"spring.liquibase.default-schema=CUSTOMSCHEMA\").run((context) -> {\n\t\t\t\t\tMap<String, LiquibaseBean> liquibaseBeans = context.getBean(LiquibaseEndpoint.class)\n\t\t\t\t\t\t\t.liquibaseBeans().getContexts().get(context.getId()).getLiquibaseBeans();\n\t\t\t\t\tassertThat(liquibaseBeans.get(\"liquibase\").getChangeSets()).hasSize(1);\n\t\t\t\t});\n\t}\n","date":"2021-03-24 22:57:29","endLine":88,"groupId":"10488","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeWithCustomSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/80/0cdb1af9d1a1852b4ff716ae95ff36d1721d7d.src","preCode":"\tvoid invokeWithCustomSchema() {\n\t\tthis.contextRunner.withUserConfiguration(Config.class)\n\t\t\t\t.withPropertyValues(\"spring.liquibase.default-schema=CUSTOMSCHEMA\",\n\t\t\t\t\t\t\"spring.datasource.schema=classpath:/db/create-custom-schema.sql\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMap<String, LiquibaseBean> liquibaseBeans = context.getBean(LiquibaseEndpoint.class)\n\t\t\t\t\t\t\t.liquibaseBeans().getContexts().get(context.getId()).getLiquibaseBeans();\n\t\t\t\t\tassertThat(liquibaseBeans.get(\"liquibase\").getChangeSets()).hasSize(1);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"90b4ced7a6a9bdd8e61485247fca0283e5eb863d","commitMessage":"@@@Move DataSource init auto-config out of DataSourceAutoConfiguration\n\nPreviously.  the auto-configuration for DataSource initialization and\nthe properties used to configure it were part of the general\nDataSource auto-configuration and properties.\n\nThis commit moves the auto-configuration of DataSource initialization\nout into a separate top-level auto-configuration class. Similarly. \nthe properties for configuring DataSource initialization have been\nmoved from `spring.datasource.*` into `spring.sql.init.*`.\n\nThe old initialization-related `spring.datasource.*` properties have\nbeen deprecated but can still be used. When they are used.  they new. \nseparate initialization auto-configuration will back off. In other\nwords.  the initialization related `spring.datasource.*` properties\nand the `spring.sql.init.*` properties cannot be used in combination.\n\nCloses gh-25323\n","date":"2021-03-24 22:57:29","modifiedFileCount":"27","status":"M","submitter":"Andy Wilkinson"}]
