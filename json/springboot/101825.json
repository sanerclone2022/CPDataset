[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void getMetadataReaderUsesCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isSameAs(metadataReader2);\n\t\tverify(factory, times(1)).createMetadataReader((Resource) any());\n\t}\n","date":"2017-10-05 11:18:56","endLine":49,"groupId":"9674","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getMetadataReaderUsesCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d5/b2191e56f0dbfa78aaf63c970782d5366db6b1.src","preCode":"\tpublic void getMetadataReaderUsesCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isSameAs(metadataReader2);\n\t\tverify(factory, times(1)).createMetadataReader((Resource) any());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/type/classreading/ConcurrentReferenceCachingMetadataReaderFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void clearResetsCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tfactory.clearCache();\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isNotEqualTo(sameInstance(metadataReader2));\n\t\tverify(factory, times(2)).createMetadataReader((Resource) any());\n\t}\n","date":"2017-10-05 11:18:56","endLine":60,"groupId":"11328","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"clearResetsCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d5/b2191e56f0dbfa78aaf63c970782d5366db6b1.src","preCode":"\tpublic void clearResetsCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tfactory.clearCache();\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isNotEqualTo(sameInstance(metadataReader2));\n\t\tverify(factory, times(2)).createMetadataReader((Resource) any());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/type/classreading/ConcurrentReferenceCachingMetadataReaderFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-01-29 15:05:04","codes":[{"authorDate":"2018-01-29 15:05:04","commitOrder":2,"curCode":"\tpublic void getMetadataReaderUsesCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isSameAs(metadataReader2);\n\t\tverify(factory, times(1)).createMetadataReader(any(Resource.class));\n\t}\n","date":"2018-01-29 15:05:04","endLine":47,"groupId":"9674","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getMetadataReaderUsesCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ab/37d6a5b1a8e35d2d4e7bca1601a9648583f990.src","preCode":"\tpublic void getMetadataReaderUsesCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isSameAs(metadataReader2);\n\t\tverify(factory, times(1)).createMetadataReader((Resource) any());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/type/classreading/ConcurrentReferenceCachingMetadataReaderFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2018-01-29 15:05:04","commitOrder":2,"curCode":"\tpublic void clearResetsCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tfactory.clearCache();\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isNotEqualTo(sameInstance(metadataReader2));\n\t\tverify(factory, times(2)).createMetadataReader(any(Resource.class));\n\t}\n","date":"2018-01-29 15:05:04","endLine":58,"groupId":"11328","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"clearResetsCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ab/37d6a5b1a8e35d2d4e7bca1601a9648583f990.src","preCode":"\tpublic void clearResetsCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tfactory.clearCache();\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isNotEqualTo(sameInstance(metadataReader2));\n\t\tverify(factory, times(2)).createMetadataReader((Resource) any());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/type/classreading/ConcurrentReferenceCachingMetadataReaderFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"fac8970366019064ed4bbcae00bc267beb0e130f","commitMessage":"@@@Merge pull request #11817 from dreis2211:replace-any-with-casts\n\n* pr/11817:\n  Replace casted Mockito.any() calls\n","date":"2018-01-29 15:05:04","modifiedFileCount":"16","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid getMetadataReaderUsesCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isSameAs(metadataReader2);\n\t\tverify(factory, times(1)).createMetadataReader(any(Resource.class));\n\t}\n","date":"2019-06-07 19:25:54","endLine":47,"groupId":"9674","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getMetadataReaderUsesCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/07/20e346fe013719e7d49048dfc1665d221620a5.src","preCode":"\tpublic void getMetadataReaderUsesCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isSameAs(metadataReader2);\n\t\tverify(factory, times(1)).createMetadataReader(any(Resource.class));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/type/classreading/ConcurrentReferenceCachingMetadataReaderFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid clearResetsCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tfactory.clearCache();\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isNotEqualTo(sameInstance(metadataReader2));\n\t\tverify(factory, times(2)).createMetadataReader(any(Resource.class));\n\t}\n","date":"2019-06-07 19:25:54","endLine":58,"groupId":"11328","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"clearResetsCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/07/20e346fe013719e7d49048dfc1665d221620a5.src","preCode":"\tpublic void clearResetsCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tfactory.clearCache();\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isNotEqualTo(sameInstance(metadataReader2));\n\t\tverify(factory, times(2)).createMetadataReader(any(Resource.class));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/type/classreading/ConcurrentReferenceCachingMetadataReaderFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-18 20:27:17","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid getMetadataReaderUsesCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isSameAs(metadataReader2);\n\t\tverify(factory, times(1)).createMetadataReader(any(Resource.class));\n\t}\n","date":"2019-06-07 19:25:54","endLine":47,"groupId":"101825","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getMetadataReaderUsesCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/07/20e346fe013719e7d49048dfc1665d221620a5.src","preCode":"\tvoid getMetadataReaderUsesCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isSameAs(metadataReader2);\n\t\tverify(factory, times(1)).createMetadataReader(any(Resource.class));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/type/classreading/ConcurrentReferenceCachingMetadataReaderFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"N"},{"authorDate":"2019-07-18 20:27:17","commitOrder":4,"curCode":"\tvoid clearResetsCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tfactory.clearCache();\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isNotSameAs(metadataReader2);\n\t\tverify(factory, times(2)).createMetadataReader(any(Resource.class));\n\t}\n","date":"2019-07-18 20:27:17","endLine":57,"groupId":"101825","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"clearResetsCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/35/9a83c18f30a7ae05931d30b7247b641676922a.src","preCode":"\tvoid clearResetsCache() throws Exception {\n\t\tTestConcurrentReferenceCachingMetadataReaderFactory factory = spy(\n\t\t\t\tnew TestConcurrentReferenceCachingMetadataReaderFactory());\n\t\tMetadataReader metadataReader1 = factory.getMetadataReader(getClass().getName());\n\t\tfactory.clearCache();\n\t\tMetadataReader metadataReader2 = factory.getMetadataReader(getClass().getName());\n\t\tassertThat(metadataReader1).isNotEqualTo(sameInstance(metadataReader2));\n\t\tverify(factory, times(2)).createMetadataReader(any(Resource.class));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/type/classreading/ConcurrentReferenceCachingMetadataReaderFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"bc8514cd2f1e134ece5c79e905f70c090b79839e","commitMessage":"@@@Merge pull request #17557 from dreis2211\n\n* pr/17557:\n  Remove testsupport.assertj package\n\nCloses gh-17557\n","date":"2019-07-18 20:27:17","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"}]
