[{"authorTime":"2021-03-16 04:59:57","codes":[{"authorDate":"2021-03-16 04:59:57","commitOrder":1,"curCode":"\tvoid buildWhenH2TypeSpecifiedReturnsExpectedDataSource() {\n\t\tthis.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type(JdbcDataSource.class).username(\"test\")\n\t\t\t\t.build();\n\t\tassertThat(this.dataSource).isInstanceOf(JdbcDataSource.class);\n\t\tJdbcDataSource h2DataSource = (JdbcDataSource) this.dataSource;\n\t\tassertThat(h2DataSource.getUser()).isEqualTo(\"test\");\n\t}\n","date":"2021-03-18 08:00:44","endLine":139,"groupId":"12404","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"buildWhenH2TypeSpecifiedReturnsExpectedDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/a20801b2a015116b633938f37652a2480bd64c.src","preCode":"\tvoid buildWhenH2TypeSpecifiedReturnsExpectedDataSource() {\n\t\tthis.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type(JdbcDataSource.class).username(\"test\")\n\t\t\t\t.build();\n\t\tassertThat(this.dataSource).isInstanceOf(JdbcDataSource.class);\n\t\tJdbcDataSource h2DataSource = (JdbcDataSource) this.dataSource;\n\t\tassertThat(h2DataSource.getUser()).isEqualTo(\"test\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/jdbc/DataSourceBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"},{"authorDate":"2021-03-16 04:59:57","commitOrder":1,"curCode":"\tvoid buildWhenCustomSubclassTypeSpecifiedReturnsDataSourceWithOnlyBasePropertiesSet() {\n\t\tthis.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type(CustomTomcatDataSource.class)\n\t\t\t\t.username(\"test\").build();\n\t\tassertThat(this.dataSource).isInstanceOf(CustomTomcatDataSource.class);\n\t\tCustomTomcatDataSource testDataSource = (CustomTomcatDataSource) this.dataSource;\n\t\tassertThat(testDataSource.getUrl()).isEqualTo(\"jdbc:h2:test\");\n\t\tassertThat(testDataSource.getJdbcUrl()).isNull();\n\t\tassertThat(testDataSource.getUsername()).isEqualTo(\"test\");\n\t\tassertThat(testDataSource.getUser()).isNull();\n\t\tassertThat(testDataSource.getDriverClassName()).isEqualTo(Driver.class.getName());\n\t\tassertThat(testDataSource.getDriverClass()).isNull();\n\t}\n","date":"2021-03-18 08:00:44","endLine":168,"groupId":"12404","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildWhenCustomSubclassTypeSpecifiedReturnsDataSourceWithOnlyBasePropertiesSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/a20801b2a015116b633938f37652a2480bd64c.src","preCode":"\tvoid buildWhenCustomSubclassTypeSpecifiedReturnsDataSourceWithOnlyBasePropertiesSet() {\n\t\tthis.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type(CustomTomcatDataSource.class)\n\t\t\t\t.username(\"test\").build();\n\t\tassertThat(this.dataSource).isInstanceOf(CustomTomcatDataSource.class);\n\t\tCustomTomcatDataSource testDataSource = (CustomTomcatDataSource) this.dataSource;\n\t\tassertThat(testDataSource.getUrl()).isEqualTo(\"jdbc:h2:test\");\n\t\tassertThat(testDataSource.getJdbcUrl()).isNull();\n\t\tassertThat(testDataSource.getUsername()).isEqualTo(\"test\");\n\t\tassertThat(testDataSource.getUser()).isNull();\n\t\tassertThat(testDataSource.getDriverClassName()).isEqualTo(Driver.class.getName());\n\t\tassertThat(testDataSource.getDriverClass()).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/jdbc/DataSourceBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"}],"commitId":"85f1e2c9b6a09da5ef512b4afbf906f5b4f74f8b","commitMessage":"@@@Refactor DataSourceBuilder and add derivedFrom\n\nRefactor `DataSourceBuilder` to use direct property mappers rather than\nthe `Binder` and aliases. Supported DataSource types now include two-way\nmappers which allows us to both get and set properties in a uniform way.\n\nA new `derivedFrom` factory method has been added which allows a new\n`DataSource` to be derived from an existing one. This update is\nprimarily to allow Flyway and Liquibase migrations to work against a\n`@Bean` configured DataSource rather than assuming that the primary\nDataSource was always created via auto-configuration.\n\nSee gh-25643\n","date":"2021-03-18 08:00:44","modifiedFileCount":"2","status":"B","submitter":"Phillip Webb"},{"authorTime":"2021-03-16 04:59:57","codes":[{"authorDate":"2021-05-27 04:06:13","commitOrder":2,"curCode":"\tvoid buildWhenH2TypeSpecifiedReturnsExpectedDataSource() {\n\t\tthis.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type(JdbcDataSource.class).username(\"test\")\n\t\t\t\t.password(\"secret\").build();\n\t\tassertThat(this.dataSource).isInstanceOf(JdbcDataSource.class);\n\t\tJdbcDataSource h2DataSource = (JdbcDataSource) this.dataSource;\n\t\tassertThat(h2DataSource.getUser()).isEqualTo(\"test\");\n\t\tassertThat(h2DataSource.getPassword()).isEqualTo(\"secret\");\n\t}\n","date":"2021-05-27 06:51:30","endLine":140,"groupId":"101199","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"buildWhenH2TypeSpecifiedReturnsExpectedDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/47/17650b948246666f56308abf7767383d2b5677.src","preCode":"\tvoid buildWhenH2TypeSpecifiedReturnsExpectedDataSource() {\n\t\tthis.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type(JdbcDataSource.class).username(\"test\")\n\t\t\t\t.build();\n\t\tassertThat(this.dataSource).isInstanceOf(JdbcDataSource.class);\n\t\tJdbcDataSource h2DataSource = (JdbcDataSource) this.dataSource;\n\t\tassertThat(h2DataSource.getUser()).isEqualTo(\"test\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/jdbc/DataSourceBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2021-03-16 04:59:57","commitOrder":2,"curCode":"\tvoid buildWhenCustomSubclassTypeSpecifiedReturnsDataSourceWithOnlyBasePropertiesSet() {\n\t\tthis.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type(CustomTomcatDataSource.class)\n\t\t\t\t.username(\"test\").build();\n\t\tassertThat(this.dataSource).isInstanceOf(CustomTomcatDataSource.class);\n\t\tCustomTomcatDataSource testDataSource = (CustomTomcatDataSource) this.dataSource;\n\t\tassertThat(testDataSource.getUrl()).isEqualTo(\"jdbc:h2:test\");\n\t\tassertThat(testDataSource.getJdbcUrl()).isNull();\n\t\tassertThat(testDataSource.getUsername()).isEqualTo(\"test\");\n\t\tassertThat(testDataSource.getUser()).isNull();\n\t\tassertThat(testDataSource.getDriverClassName()).isEqualTo(Driver.class.getName());\n\t\tassertThat(testDataSource.getDriverClass()).isNull();\n\t}\n","date":"2021-03-18 08:00:44","endLine":168,"groupId":"101199","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildWhenCustomSubclassTypeSpecifiedReturnsDataSourceWithOnlyBasePropertiesSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/a20801b2a015116b633938f37652a2480bd64c.src","preCode":"\tvoid buildWhenCustomSubclassTypeSpecifiedReturnsDataSourceWithOnlyBasePropertiesSet() {\n\t\tthis.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type(CustomTomcatDataSource.class)\n\t\t\t\t.username(\"test\").build();\n\t\tassertThat(this.dataSource).isInstanceOf(CustomTomcatDataSource.class);\n\t\tCustomTomcatDataSource testDataSource = (CustomTomcatDataSource) this.dataSource;\n\t\tassertThat(testDataSource.getUrl()).isEqualTo(\"jdbc:h2:test\");\n\t\tassertThat(testDataSource.getJdbcUrl()).isNull();\n\t\tassertThat(testDataSource.getUsername()).isEqualTo(\"test\");\n\t\tassertThat(testDataSource.getUser()).isNull();\n\t\tassertThat(testDataSource.getDriverClassName()).isEqualTo(Driver.class.getName());\n\t\tassertThat(testDataSource.getDriverClass()).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/jdbc/DataSourceBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"N"}],"commitId":"7d6093680d8c80a34003a78cb58f67a9743826df","commitMessage":"@@@Polish\n","date":"2021-05-27 06:51:30","modifiedFileCount":"1","status":"M","submitter":"Scott Frederick"}]
