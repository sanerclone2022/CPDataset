[{"authorTime":"2018-04-11 02:24:19","codes":[{"authorDate":"2018-04-11 02:24:19","commitOrder":2,"curCode":"\tpublic void getEndpointsShouldIncludeServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestServletEndpoint.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testservlet\");\n\t\t\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","date":"2018-04-11 02:24:19","endLine":85,"groupId":"16411","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldIncludeServletEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f2/b0a48c8b9561bbe985e7bd9b4efa7fc4e7f022.src","preCode":"\tpublic void getEndpointsShouldIncludeServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestServletEndpoint.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testservlet\");\n\t\t\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"MB"},{"authorDate":"2018-04-11 02:24:19","commitOrder":2,"curCode":"\tpublic void getEndpointsShouldDiscoverProxyServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyServletEndpoint.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(ValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testservlet\");\n\t\t\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","date":"2018-04-11 02:24:19","endLine":99,"groupId":"16411","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointsShouldDiscoverProxyServletEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f2/b0a48c8b9561bbe985e7bd9b4efa7fc4e7f022.src","preCode":"\tpublic void getEndpointsShouldDiscoverProxyServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyServletEndpoint.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(ValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testservlet\");\n\t\t\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"55ea9f796fff1ac03166ce1890cceb93916f34bf","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-04-11 02:24:19","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-10-15 04:53:28","codes":[{"authorDate":"2018-10-15 04:53:28","commitOrder":3,"curCode":"\tpublic void getEndpointsShouldIncludeServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestServletEndpoint.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getEndpointId())\n\t\t\t\t\t\t\t.isEqualTo(EndpointId.of(\"testservlet\"));\n\t\t\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","date":"2018-10-15 04:53:28","endLine":84,"groupId":"16411","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldIncludeServletEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/27/10477efc1c020a7da6f8f6c18f689324a6faa7.src","preCode":"\tpublic void getEndpointsShouldIncludeServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestServletEndpoint.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testservlet\");\n\t\t\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-10-15 04:53:28","commitOrder":3,"curCode":"\tpublic void getEndpointsShouldDiscoverProxyServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyServletEndpoint.class)\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(ValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getEndpointId())\n\t\t\t\t\t\t\t.isEqualTo(EndpointId.of(\"testservlet\"));\n\t\t\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","date":"2018-10-15 04:53:28","endLine":101,"groupId":"16411","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointsShouldDiscoverProxyServletEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/27/10477efc1c020a7da6f8f6c18f689324a6faa7.src","preCode":"\tpublic void getEndpointsShouldDiscoverProxyServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyServletEndpoint.class)\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(ValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testservlet\");\n\t\t\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"1bf97e9b5e2187a04d8471ead73b629444ecc838","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-10-15 04:53:28","modifiedFileCount":"66","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid getEndpointsShouldIncludeServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestServletEndpoint.class).run(assertDiscoverer((discoverer) -> {\n\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\tassertThat(endpoint.getEndpointId()).isEqualTo(EndpointId.of(\"testservlet\"));\n\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t}));\n\t}\n","date":"2019-06-07 19:25:54","endLine":79,"groupId":"10444","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldIncludeServletEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/51/5ae926e3a3215f9de69a147eb9926cf9b288af.src","preCode":"\tpublic void getEndpointsShouldIncludeServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestServletEndpoint.class).run(assertDiscoverer((discoverer) -> {\n\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\tassertThat(endpoint.getEndpointId()).isEqualTo(EndpointId.of(\"testservlet\"));\n\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid getEndpointsShouldDiscoverProxyServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyServletEndpoint.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(ValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getEndpointId()).isEqualTo(EndpointId.of(\"testservlet\"));\n\t\t\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","date":"2019-06-07 19:25:54","endLine":93,"groupId":"10444","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointsShouldDiscoverProxyServletEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/51/5ae926e3a3215f9de69a147eb9926cf9b288af.src","preCode":"\tpublic void getEndpointsShouldDiscoverProxyServletEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyServletEndpoint.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(ValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableServletEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getEndpointId()).isEqualTo(EndpointId.of(\"testservlet\"));\n\t\t\t\t\tassertThat(endpoint.getEndpointServlet()).isNotNull();\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
