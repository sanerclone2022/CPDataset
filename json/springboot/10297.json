[{"authorTime":"2019-10-22 20:27:25","codes":[{"authorDate":"2019-10-22 20:27:25","commitOrder":5,"curCode":"\tvoid sanitizeLists() {\n\t\tthis.contextRunner.withUserConfiguration(SensiblePropertiesConfiguration.class)\n\t\t\t\t.run(assertProperties(\"sensible\", (properties) -> {\n\t\t\t\t\tassertThat(properties.get(\"listItems\")).isInstanceOf(List.class);\n\t\t\t\t\tList<Object> list = (List<Object>) properties.get(\"listItems\");\n\t\t\t\t\tassertThat(list).hasSize(1);\n\t\t\t\t\tMap<String, Object> item = (Map<String, Object>) list.get(0);\n\t\t\t\t\tassertThat(item.get(\"somePassword\")).isEqualTo(\"******\");\n\t\t\t\t}));\n\t}\n","date":"2019-10-22 20:27:25","endLine":169,"groupId":"2498","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sanitizeLists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4c/1de2f7d956ecf2731ddef93405be0dd559e174.src","preCode":"\tvoid sanitizeLists() {\n\t\tthis.contextRunner.withUserConfiguration(SensiblePropertiesConfiguration.class)\n\t\t\t\t.run(assertProperties(\"sensible\", (properties) -> {\n\t\t\t\t\tassertThat(properties.get(\"listItems\")).isInstanceOf(List.class);\n\t\t\t\t\tList<Object> list = (List<Object>) properties.get(\"listItems\");\n\t\t\t\t\tassertThat(list).hasSize(1);\n\t\t\t\t\tMap<String, Object> item = (Map<String, Object>) list.get(0);\n\t\t\t\t\tassertThat(item.get(\"somePassword\")).isEqualTo(\"******\");\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"},{"authorDate":"2019-10-22 20:27:25","commitOrder":5,"curCode":"\tvoid listsOfListsAreSanitized() {\n\t\tthis.contextRunner.withUserConfiguration(SensiblePropertiesConfiguration.class)\n\t\t\t\t.run(assertProperties(\"sensible\", (properties) -> {\n\t\t\t\t\tassertThat(properties.get(\"listOfListItems\")).isInstanceOf(List.class);\n\t\t\t\t\tList<List<Object>> listOfLists = (List<List<Object>>) properties.get(\"listOfListItems\");\n\t\t\t\t\tassertThat(listOfLists).hasSize(1);\n\t\t\t\t\tList<Object> list = listOfLists.get(0);\n\t\t\t\t\tassertThat(list).hasSize(1);\n\t\t\t\t\tMap<String, Object> item = (Map<String, Object>) list.get(0);\n\t\t\t\t\tassertThat(item.get(\"somePassword\")).isEqualTo(\"******\");\n\t\t\t\t}));\n\t}\n","date":"2019-10-22 20:27:25","endLine":183,"groupId":"8130","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"listsOfListsAreSanitized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4c/1de2f7d956ecf2731ddef93405be0dd559e174.src","preCode":"\tvoid listsOfListsAreSanitized() {\n\t\tthis.contextRunner.withUserConfiguration(SensiblePropertiesConfiguration.class)\n\t\t\t\t.run(assertProperties(\"sensible\", (properties) -> {\n\t\t\t\t\tassertThat(properties.get(\"listOfListItems\")).isInstanceOf(List.class);\n\t\t\t\t\tList<List<Object>> listOfLists = (List<List<Object>>) properties.get(\"listOfListItems\");\n\t\t\t\t\tassertThat(listOfLists).hasSize(1);\n\t\t\t\t\tList<Object> list = listOfLists.get(0);\n\t\t\t\t\tassertThat(list).hasSize(1);\n\t\t\t\t\tMap<String, Object> item = (Map<String, Object>) list.get(0);\n\t\t\t\t\tassertThat(item.get(\"somePassword\")).isEqualTo(\"******\");\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"MB"}],"commitId":"d254c6271253c57383e351998ffdd97b2d385c99","commitMessage":"@@@Polish tests\n","date":"2019-10-22 20:27:25","modifiedFileCount":"1","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-12-11 05:55:23","codes":[{"authorDate":"2019-12-11 05:55:23","commitOrder":6,"curCode":"\tvoid sanitizeLists() {\n\t\tthis.contextRunner.withUserConfiguration(SensiblePropertiesConfiguration.class)\n\t\t\t\t.withPropertyValues(\"sensible.listItems[0].some-password=password\")\n\t\t\t\t.run(assertProperties(\"sensible\", (properties) -> {\n\t\t\t\t\tassertThat(properties.get(\"listItems\")).isInstanceOf(List.class);\n\t\t\t\t\tList<Object> list = (List<Object>) properties.get(\"listItems\");\n\t\t\t\t\tassertThat(list).hasSize(1);\n\t\t\t\t\tMap<String, Object> item = (Map<String, Object>) list.get(0);\n\t\t\t\t\tassertThat(item.get(\"somePassword\")).isEqualTo(\"******\");\n\t\t\t\t}, (inputs) -> {\n\t\t\t\t\tList<Object> list = (List<Object>) inputs.get(\"listItems\");\n\t\t\t\t\tassertThat(list).hasSize(1);\n\t\t\t\t\tMap<String, Object> item = (Map<String, Object>) list.get(0);\n\t\t\t\t\tMap<String, Object> somePassword = (Map<String, Object>) item.get(\"somePassword\");\n\t\t\t\t\tassertThat(somePassword.get(\"value\")).isEqualTo(\"******\");\n\t\t\t\t\tassertThat(somePassword.get(\"origin\"))\n\t\t\t\t\t\t\t.isEqualTo(\"\\\"sensible.listItems[0].some-password\\\" from property source \\\"test\\\"\");\n\t\t\t\t}));\n\t}\n","date":"2019-12-13 09:02:46","endLine":267,"groupId":"10297","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sanitizeLists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ae/48d1f7b3023674ecbf4eea94b23bc55a35384f.src","preCode":"\tvoid sanitizeLists() {\n\t\tthis.contextRunner.withUserConfiguration(SensiblePropertiesConfiguration.class)\n\t\t\t\t.run(assertProperties(\"sensible\", (properties) -> {\n\t\t\t\t\tassertThat(properties.get(\"listItems\")).isInstanceOf(List.class);\n\t\t\t\t\tList<Object> list = (List<Object>) properties.get(\"listItems\");\n\t\t\t\t\tassertThat(list).hasSize(1);\n\t\t\t\t\tMap<String, Object> item = (Map<String, Object>) list.get(0);\n\t\t\t\t\tassertThat(item.get(\"somePassword\")).isEqualTo(\"******\");\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"},{"authorDate":"2019-12-11 05:55:23","commitOrder":6,"curCode":"\tvoid listsOfListsAreSanitized() {\n\t\tthis.contextRunner.withUserConfiguration(SensiblePropertiesConfiguration.class)\n\t\t\t\t.withPropertyValues(\"sensible.listOfListItems[0][0].some-password=password\")\n\t\t\t\t.run(assertProperties(\"sensible\", (properties) -> {\n\t\t\t\t\tassertThat(properties.get(\"listOfListItems\")).isInstanceOf(List.class);\n\t\t\t\t\tList<List<Object>> listOfLists = (List<List<Object>>) properties.get(\"listOfListItems\");\n\t\t\t\t\tassertThat(listOfLists).hasSize(1);\n\t\t\t\t\tList<Object> list = listOfLists.get(0);\n\t\t\t\t\tassertThat(list).hasSize(1);\n\t\t\t\t\tMap<String, Object> item = (Map<String, Object>) list.get(0);\n\t\t\t\t\tassertThat(item.get(\"somePassword\")).isEqualTo(\"******\");\n\t\t\t\t}, (inputs) -> {\n\t\t\t\t\tassertThat(inputs.get(\"listOfListItems\")).isInstanceOf(List.class);\n\t\t\t\t\tList<List<Object>> listOfLists = (List<List<Object>>) inputs.get(\"listOfListItems\");\n\t\t\t\t\tassertThat(listOfLists).hasSize(1);\n\t\t\t\t\tList<Object> list = listOfLists.get(0);\n\t\t\t\t\tassertThat(list).hasSize(1);\n\t\t\t\t\tMap<String, Object> item = (Map<String, Object>) list.get(0);\n\t\t\t\t\tMap<String, Object> somePassword = (Map<String, Object>) item.get(\"somePassword\");\n\t\t\t\t\tassertThat(somePassword.get(\"value\")).isEqualTo(\"******\");\n\t\t\t\t\tassertThat(somePassword.get(\"origin\")).isEqualTo(\n\t\t\t\t\t\t\t\"\\\"sensible.listOfListItems[0][0].some-password\\\" from property source \\\"test\\\"\");\n\t\t\t\t}));\n\t}\n","date":"2019-12-13 09:02:46","endLine":293,"groupId":"10297","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"listsOfListsAreSanitized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ae/48d1f7b3023674ecbf4eea94b23bc55a35384f.src","preCode":"\tvoid listsOfListsAreSanitized() {\n\t\tthis.contextRunner.withUserConfiguration(SensiblePropertiesConfiguration.class)\n\t\t\t\t.run(assertProperties(\"sensible\", (properties) -> {\n\t\t\t\t\tassertThat(properties.get(\"listOfListItems\")).isInstanceOf(List.class);\n\t\t\t\t\tList<List<Object>> listOfLists = (List<List<Object>>) properties.get(\"listOfListItems\");\n\t\t\t\t\tassertThat(listOfLists).hasSize(1);\n\t\t\t\t\tList<Object> list = listOfLists.get(0);\n\t\t\t\t\tassertThat(list).hasSize(1);\n\t\t\t\t\tMap<String, Object> item = (Map<String, Object>) list.get(0);\n\t\t\t\t\tassertThat(item.get(\"somePassword\")).isEqualTo(\"******\");\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"}],"commitId":"8dcf1e4033eb1b453447fe48d2cbc9aa8c674d97","commitMessage":"@@@Provide end-to-end traceability for config properties\n\nCloses gh-14880\n\nCo-authored-by: Andy Wilkinson <awilkinson@pivotal.io>\n","date":"2019-12-13 09:02:46","modifiedFileCount":"12","status":"M","submitter":"Madhura Bhave"}]
