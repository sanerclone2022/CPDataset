[{"authorTime":"2019-03-13 08:30:00","codes":[{"authorDate":"2019-03-13 08:30:00","commitOrder":1,"curCode":"\tpublic void gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\").run((context) -> {\n\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info().get(\"git\");\n\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\tassertThat(commit).hasSize(4);\n\t\t});\n\t}\n","date":"2019-03-13 08:30:00","endLine":316,"groupId":"152","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"gitFullDetailsAlwaysPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/39/a96389661e9555e976e20fc64eb04fc33d168b.src","preCode":"\tpublic void gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\").run((context) -> {\n\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info().get(\"git\");\n\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\tassertThat(commit).hasSize(4);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"B"},{"authorDate":"2019-03-13 08:30:00","commitOrder":1,"curCode":"\tpublic void gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner\n\t\t\t\t.withInitializer(\n\t\t\t\t\t\tnew ConditionEvaluationReportLoggingListener(LogLevel.INFO))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info()\n\t\t\t\t\t\t\t.get(\"git\");\n\t\t\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\t\t\tassertThat(commit).hasSize(4);\n\t\t\t\t});\n\t}\n","date":"2019-03-13 08:30:00","endLine":82,"groupId":"152","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"gitFullDetailsAlwaysPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4c/dd8dec62461aad1e8a88573796c1e6e6843c3b.src","preCode":"\tpublic void gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner\n\t\t\t\t.withInitializer(\n\t\t\t\t\t\tnew ConditionEvaluationReportLoggingListener(LogLevel.INFO))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info()\n\t\t\t\t\t\t\t.get(\"git\");\n\t\t\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\t\t\tassertThat(commit).hasSize(4);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtensionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"e8cb75bba88f7fbec3d5b35aee24d06a3e43a4b8","commitMessage":"@@@Enable git remote linking automatically on CF\n\nCloses gh-13586\n","date":"2019-03-13 08:30:00","modifiedFileCount":"8","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\").run((context) -> {\n\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info().get(\"git\");\n\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\tassertThat(commit).hasSize(4);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":258,"groupId":"152","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"gitFullDetailsAlwaysPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/ac9ee8d9051b313821e885b1ad75293e602f47.src","preCode":"\tpublic void gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\").run((context) -> {\n\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info().get(\"git\");\n\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\tassertThat(commit).hasSize(4);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner.withInitializer(new ConditionEvaluationReportLoggingListener(LogLevel.INFO))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info().get(\"git\");\n\t\t\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\t\t\tassertThat(commit).hasSize(4);\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":73,"groupId":"152","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"gitFullDetailsAlwaysPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/18/d717f487266760cea61756fc657729275e4da0.src","preCode":"\tpublic void gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner.withInitializer(new ConditionEvaluationReportLoggingListener(LogLevel.INFO))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info().get(\"git\");\n\t\t\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\t\t\tassertThat(commit).hasSize(4);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtensionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-11-27 20:50:50","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\").run((context) -> {\n\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info().get(\"git\");\n\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\tassertThat(commit).hasSize(4);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":258,"groupId":"10735","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"gitFullDetailsAlwaysPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/ac9ee8d9051b313821e885b1ad75293e602f47.src","preCode":"\tvoid gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\").run((context) -> {\n\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info().get(\"git\");\n\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\tassertThat(commit).hasSize(4);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"N"},{"authorDate":"2019-11-27 20:50:50","commitOrder":3,"curCode":"\tvoid gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info().get(\"git\");\n\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\tassertThat(commit).hasSize(4);\n\t\t});\n\t}\n","date":"2019-11-27 20:50:50","endLine":70,"groupId":"10735","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"gitFullDetailsAlwaysPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/84/41baab9eb4424b818d09c74c7775f5bd2010c7.src","preCode":"\tvoid gitFullDetailsAlwaysPresent() {\n\t\tthis.contextRunner.withInitializer(new ConditionEvaluationReportLoggingListener(LogLevel.INFO))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryInfoEndpointWebExtension extension = context\n\t\t\t\t\t\t\t.getBean(CloudFoundryInfoEndpointWebExtension.class);\n\t\t\t\t\tMap<String, Object> git = (Map<String, Object>) extension.info().get(\"git\");\n\t\t\t\t\tMap<String, Object> commit = (Map<String, Object>) git.get(\"commit\");\n\t\t\t\t\tassertThat(commit).hasSize(4);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryInfoEndpointWebExtensionTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"cde9c2e853894e5d9d01d073f67f5f76fd935d31","commitMessage":"@@@Merge branch '2.2.x'\n\nCloses gh-19161\n","date":"2019-11-27 20:50:50","modifiedFileCount":"5","status":"M","submitter":"Stephane Nicoll"}]
