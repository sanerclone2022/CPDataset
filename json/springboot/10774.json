[{"authorTime":"2017-11-03 09:00:55","codes":[{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\tprivate String getSignedToken(byte[] header, byte[] claims) throws Exception {\n\t\tPrivateKey privateKey = getPrivateKey();\n\t\tSignature signature = Signature.getInstance(\"SHA256WithRSA\");\n\t\tsignature.initSign(privateKey);\n\t\tbyte[] content = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encode(claims));\n\t\tsignature.update(content);\n\t\tbyte[] crypto = signature.sign();\n\t\tbyte[] token = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encodeUrlSafe(claims), Base64Utils.encodeUrlSafe(crypto));\n\t\treturn new String(token, UTF_8);\n\t}\n","date":"2017-11-03 09:00:55","endLine":210,"groupId":"1254","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getSignedToken","params":"(byte[]header@byte[]claims)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/01/7346d258b8f93864780f7b9d4c36f2462d642c.src","preCode":"\tprivate String getSignedToken(byte[] header, byte[] claims) throws Exception {\n\t\tPrivateKey privateKey = getPrivateKey();\n\t\tSignature signature = Signature.getInstance(\"SHA256WithRSA\");\n\t\tsignature.initSign(privateKey);\n\t\tbyte[] content = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encode(claims));\n\t\tsignature.update(content);\n\t\tbyte[] crypto = signature.sign();\n\t\tbyte[] token = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encodeUrlSafe(claims), Base64Utils.encodeUrlSafe(crypto));\n\t\treturn new String(token, UTF_8);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"B"},{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\tprivate String getSignedToken(byte[] header, byte[] claims) throws Exception {\n\t\tPrivateKey privateKey = getPrivateKey();\n\t\tSignature signature = Signature.getInstance(\"SHA256WithRSA\");\n\t\tsignature.initSign(privateKey);\n\t\tbyte[] content = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encode(claims));\n\t\tsignature.update(content);\n\t\tbyte[] crypto = signature.sign();\n\t\tbyte[] token = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encodeUrlSafe(claims), Base64Utils.encodeUrlSafe(crypto));\n\t\treturn new String(token, UTF_8);\n\t}\n","date":"2017-11-03 09:00:55","endLine":220,"groupId":"1254","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getSignedToken","params":"(byte[]header@byte[]claims)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a8/f77238bbd0da2897561e11914a85930dadff57.src","preCode":"\tprivate String getSignedToken(byte[] header, byte[] claims) throws Exception {\n\t\tPrivateKey privateKey = getPrivateKey();\n\t\tSignature signature = Signature.getInstance(\"SHA256WithRSA\");\n\t\tsignature.initSign(privateKey);\n\t\tbyte[] content = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encode(claims));\n\t\tsignature.update(content);\n\t\tbyte[] crypto = signature.sign();\n\t\tbyte[] token = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encodeUrlSafe(claims), Base64Utils.encodeUrlSafe(crypto));\n\t\treturn new String(token, UTF_8);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/TokenValidatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"B"}],"commitId":"d50fe8874fa442cbd3ea380754e7b412a77aed9a","commitMessage":"@@@Add CF support for reactive actuators\n\nCloses gh-10780\n","date":"2017-11-03 09:00:55","modifiedFileCount":"5","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2017-11-10 16:49:41","codes":[{"authorDate":"2017-11-10 16:49:41","commitOrder":2,"curCode":"\tprivate String getSignedToken(byte[] header, byte[] claims) throws Exception {\n\t\tPrivateKey privateKey = getPrivateKey();\n\t\tSignature signature = Signature.getInstance(\"SHA256WithRSA\");\n\t\tsignature.initSign(privateKey);\n\t\tbyte[] content = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encode(claims));\n\t\tsignature.update(content);\n\t\tbyte[] crypto = signature.sign();\n\t\tbyte[] token = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encodeUrlSafe(claims), Base64Utils.encodeUrlSafe(crypto));\n\t\treturn new String(token, StandardCharsets.UTF_8);\n\t}\n","date":"2017-11-10 16:49:41","endLine":228,"groupId":"10774","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getSignedToken","params":"(byte[]header@byte[]claims)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d4/84976c2329a91a5a5b68a977a241724f9e469f.src","preCode":"\tprivate String getSignedToken(byte[] header, byte[] claims) throws Exception {\n\t\tPrivateKey privateKey = getPrivateKey();\n\t\tSignature signature = Signature.getInstance(\"SHA256WithRSA\");\n\t\tsignature.initSign(privateKey);\n\t\tbyte[] content = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encode(claims));\n\t\tsignature.update(content);\n\t\tbyte[] crypto = signature.sign();\n\t\tbyte[] token = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encodeUrlSafe(claims), Base64Utils.encodeUrlSafe(crypto));\n\t\treturn new String(token, UTF_8);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"},{"authorDate":"2017-11-10 16:49:41","commitOrder":2,"curCode":"\tprivate String getSignedToken(byte[] header, byte[] claims) throws Exception {\n\t\tPrivateKey privateKey = getPrivateKey();\n\t\tSignature signature = Signature.getInstance(\"SHA256WithRSA\");\n\t\tsignature.initSign(privateKey);\n\t\tbyte[] content = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encode(claims));\n\t\tsignature.update(content);\n\t\tbyte[] crypto = signature.sign();\n\t\tbyte[] token = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encodeUrlSafe(claims), Base64Utils.encodeUrlSafe(crypto));\n\t\treturn new String(token, StandardCharsets.UTF_8);\n\t}\n","date":"2017-11-10 16:49:41","endLine":218,"groupId":"10774","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getSignedToken","params":"(byte[]header@byte[]claims)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a4/361ae4e6aaf45f6c6e76566338be95224a4450.src","preCode":"\tprivate String getSignedToken(byte[] header, byte[] claims) throws Exception {\n\t\tPrivateKey privateKey = getPrivateKey();\n\t\tSignature signature = Signature.getInstance(\"SHA256WithRSA\");\n\t\tsignature.initSign(privateKey);\n\t\tbyte[] content = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encode(claims));\n\t\tsignature.update(content);\n\t\tbyte[] crypto = signature.sign();\n\t\tbyte[] token = dotConcat(Base64Utils.encodeUrlSafe(header),\n\t\t\t\tBase64Utils.encodeUrlSafe(claims), Base64Utils.encodeUrlSafe(crypto));\n\t\treturn new String(token, UTF_8);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/TokenValidatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"25ddd4713a7541ed0da24ea8c37b850e1f08dd2d","commitMessage":"@@@Merge pull request #10972 from izeye:standard-charsets\n\n* pr/10972:\n  Utilize StandardCharsets\n","date":"2017-11-10 16:49:41","modifiedFileCount":"30","status":"M","submitter":"Stephane Nicoll"}]
