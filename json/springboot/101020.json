[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument).block();\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\").block())\n\t\t\t\t.isTrue();\n\t}\n","date":"2017-10-05 11:18:56","endLine":51,"groupId":"13303","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRepository","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/29/f15663f6314a65a961b66be6e2c62b4ee2a3e5.src","preCode":"\tpublic void testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument).block();\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\").block())\n\t\t\t\t.isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/mongo/DataMongoTestReactiveIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument);\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\")).isTrue();\n\t}\n","date":"2017-10-05 11:18:56","endLine":60,"groupId":"13303","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRepository","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/3d12aadaf28fe1487f9fb4ed82a5878349b819.src","preCode":"\tpublic void testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument);\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\")).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/mongo/DataMongoTestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2018-12-20 23:30:51","commitOrder":2,"curCode":"\tpublic void testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument)\n\t\t\t\t.block(Duration.ofSeconds(30));\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\")\n\t\t\t\t.block(Duration.ofSeconds(30))).isTrue();\n\t}\n","date":"2018-12-20 23:30:51","endLine":54,"groupId":"13303","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRepository","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/52/a33cba5966bc495cc72d0b78f6e80ae302df07.src","preCode":"\tpublic void testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument).block();\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\").block())\n\t\t\t\t.isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/mongo/DataMongoTestReactiveIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tpublic void testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument);\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\")).isTrue();\n\t}\n","date":"2017-10-05 11:18:56","endLine":60,"groupId":"13303","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRepository","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/3d12aadaf28fe1487f9fb4ed82a5878349b819.src","preCode":"\tpublic void testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument);\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\")).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/mongo/DataMongoTestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"}],"commitId":"9d2d6d5812d34b0bc04da3a124b9c5c0da511c04","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2018-12-20 23:30:51","modifiedFileCount":"22","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument).block(Duration.ofSeconds(30));\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\").block(Duration.ofSeconds(30))).isTrue();\n\t}\n","date":"2019-06-07 19:25:54","endLine":49,"groupId":"101020","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRepository","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3b/941f5c8bc91370dbc1121a0f0fa3212a68163c.src","preCode":"\tpublic void testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument).block(Duration.ofSeconds(30));\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\").block(Duration.ofSeconds(30))).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/mongo/DataMongoTestReactiveIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument);\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\")).isTrue();\n\t}\n","date":"2019-06-07 19:25:54","endLine":53,"groupId":"101020","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRepository","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/db/f2152c7ea1e44ed78cc74c7d04406cf96190d3.src","preCode":"\tpublic void testRepository() {\n\t\tExampleDocument exampleDocument = new ExampleDocument();\n\t\texampleDocument.setText(\"Look, new @DataMongoTest!\");\n\t\texampleDocument = this.exampleRepository.save(exampleDocument);\n\t\tassertThat(exampleDocument.getId()).isNotNull();\n\t\tassertThat(this.mongoTemplate.collectionExists(\"exampleDocuments\")).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/mongo/DataMongoTestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
