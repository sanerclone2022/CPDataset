[{"authorTime":"2018-02-09 12:26:09","codes":[{"authorDate":"2018-02-09 12:26:09","commitOrder":1,"curCode":"\tpublic void autoConfiguredCacheManagerIsInstrumented() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.cache.type=caffeine\",\n\t\t\t\t\"spring.cache.cache-names=cache1,cache2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache1\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache2\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t});\n\t}\n","date":"2018-02-09 14:39:47","endLine":52,"groupId":"14478","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguredCacheManagerIsInstrumented","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/02/a95e62c761eb6d0234c2974f469ab482bd4fff.src","preCode":"\tpublic void autoConfiguredCacheManagerIsInstrumented() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.cache.type=caffeine\",\n\t\t\t\t\"spring.cache.cache-names=cache1,cache2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache1\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache2\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"},{"authorDate":"2018-02-09 12:26:09","commitOrder":1,"curCode":"\tpublic void cacheInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.cache.instrument=false\",\n\t\t\t\t\t\t\"spring.cache.type=caffeine\", \"spring.cache.cache-names=cache1\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"cache.requests\").tags(\"name\", \"cache1\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter()).isNull();\n\t\t\t\t});\n\t}\n","date":"2018-02-09 14:39:47","endLine":76,"groupId":"16206","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cacheInstrumentationCanBeDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/02/a95e62c761eb6d0234c2974f469ab482bd4fff.src","preCode":"\tpublic void cacheInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.cache.instrument=false\",\n\t\t\t\t\t\t\"spring.cache.type=caffeine\", \"spring.cache.cache-names=cache1\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"cache.requests\").tags(\"name\", \"cache1\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter()).isNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"}],"commitId":"204f6f67fdf1b07f7bab558d9a6a943f89415842","commitMessage":"@@@Migrate all of metrics to auto-configuration\n\nMigrate remaining metrics `@Configuration` classes to individual\nauto-configurations.\n\nFixes gh-11935\n","date":"2018-02-09 14:39:47","modifiedFileCount":"2","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-02-13 21:42:46","codes":[{"authorDate":"2018-02-09 12:26:09","commitOrder":2,"curCode":"\tpublic void autoConfiguredCacheManagerIsInstrumented() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.cache.type=caffeine\",\n\t\t\t\t\"spring.cache.cache-names=cache1,cache2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache1\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache2\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t});\n\t}\n","date":"2018-02-09 14:39:47","endLine":52,"groupId":"14478","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguredCacheManagerIsInstrumented","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/02/a95e62c761eb6d0234c2974f469ab482bd4fff.src","preCode":"\tpublic void autoConfiguredCacheManagerIsInstrumented() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.cache.type=caffeine\",\n\t\t\t\t\"spring.cache.cache-names=cache1,cache2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache1\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache2\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"},{"authorDate":"2018-02-13 21:42:46","commitOrder":2,"curCode":"\tpublic void cacheInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.enable.cache=false\",\n\t\t\t\t\t\t\"spring.cache.type=caffeine\", \"spring.cache.cache-names=cache1\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"cache.requests\").tags(\"name\", \"cache1\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter()).isNull();\n\t\t\t\t});\n\t}\n","date":"2018-02-13 21:42:46","endLine":76,"groupId":"16206","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cacheInstrumentationCanBeDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b7/0cca7fe6be9640033040eee3be64b16898788a.src","preCode":"\tpublic void cacheInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.cache.instrument=false\",\n\t\t\t\t\t\t\"spring.cache.type=caffeine\", \"spring.cache.cache-names=cache1\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"cache.requests\").tags(\"name\", \"cache1\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter()).isNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"fd13202b692de7c09c8935dc00b862ebb1ab99a9","commitMessage":"@@@Merge pull request #12017 from jkschneider:micrometer-config\n\n* pr/12017:\n  Polish \"Remove unnecessary config options for metrics\"\n  Remove unnecessary config options for JDBC.  Rabbit.  and Cache metrics\n","date":"2018-02-13 21:42:46","modifiedFileCount":"10","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid autoConfiguredCacheManagerIsInstrumented() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.cache.type=caffeine\", \"spring.cache.cache-names=cache1,cache2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache1\").tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache2\").tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":50,"groupId":"10893","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguredCacheManagerIsInstrumented","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fb/40f572065d2fc5aad275c68dcc98b048b30887.src","preCode":"\tpublic void autoConfiguredCacheManagerIsInstrumented() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.cache.type=caffeine\", \"spring.cache.cache-names=cache1,cache2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache1\").tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t\tregistry.get(\"cache.gets\").tags(\"name\", \"cache2\").tags(\"cacheManager\", \"cacheManager\").meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid cacheInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.enable.cache=false\", \"spring.cache.type=caffeine\",\n\t\t\t\t\"spring.cache.cache-names=cache1\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"cache.requests\").tags(\"name\", \"cache1\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter()).isNull();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":72,"groupId":"10893","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"cacheInstrumentationCanBeDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fb/40f572065d2fc5aad275c68dcc98b048b30887.src","preCode":"\tpublic void cacheInstrumentationCanBeDisabled() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.enable.cache=false\", \"spring.cache.type=caffeine\",\n\t\t\t\t\"spring.cache.cache-names=cache1\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"cache.requests\").tags(\"name\", \"cache1\")\n\t\t\t\t\t\t\t.tags(\"cacheManager\", \"cacheManager\").meter()).isNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
