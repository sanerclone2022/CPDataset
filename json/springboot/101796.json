[{"authorTime":"2018-09-04 17:04:22","codes":[{"authorDate":"2018-02-18 00:21:49","commitOrder":2,"curCode":"\tprivate Duration convert(Integer source, ChronoUnit defaultUnit) {\n\t\tTypeDescriptor targetType = mock(TypeDescriptor.class);\n\t\tif (defaultUnit != null) {\n\t\t\tDurationUnit unitAnnotation = AnnotationUtils.synthesizeAnnotation(\n\t\t\t\t\tCollections.singletonMap(\"value\", defaultUnit), DurationUnit.class,\n\t\t\t\t\tnull);\n\t\t\tgiven(targetType.getAnnotation(DurationUnit.class))\n\t\t\t\t\t.willReturn(unitAnnotation);\n\t\t}\n\t\tgiven(targetType.getType()).willReturn((Class) Duration.class);\n\t\treturn (Duration) this.conversionService.convert(source,\n\t\t\t\tTypeDescriptor.forObject(source), targetType);\n\t}\n","date":"2018-02-20 12:25:47","endLine":87,"groupId":"9978","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(Integersource@ChronoUnitdefaultUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/59fc56ffb8db21c95599d019df61bc9af1b6f8.src","preCode":"\tprivate Duration convert(Integer source, ChronoUnit defaultUnit) {\n\t\tTypeDescriptor targetType = mock(TypeDescriptor.class);\n\t\tif (defaultUnit != null) {\n\t\t\tDurationUnit unitAnnotation = AnnotationUtils.synthesizeAnnotation(\n\t\t\t\t\tCollections.singletonMap(\"value\", defaultUnit), DurationUnit.class,\n\t\t\t\t\tnull);\n\t\t\tgiven(targetType.getAnnotation(DurationUnit.class))\n\t\t\t\t\t.willReturn(unitAnnotation);\n\t\t}\n\t\tgiven(targetType.getType()).willReturn((Class) Duration.class);\n\t\treturn (Duration) this.conversionService.convert(source,\n\t\t\t\tTypeDescriptor.forObject(source), targetType);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/NumberToDurationConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"NB"},{"authorDate":"2018-09-04 17:04:22","commitOrder":2,"curCode":"\tprivate DataSize convert(Integer source, DataUnit defaultUnit) {\n\t\tTypeDescriptor targetType = mock(TypeDescriptor.class);\n\t\tif (defaultUnit != null) {\n\t\t\tDataSizeUnit unitAnnotation = AnnotationUtils.synthesizeAnnotation(\n\t\t\t\t\tCollections.singletonMap(\"value\", defaultUnit), DataSizeUnit.class,\n\t\t\t\t\tnull);\n\t\t\tgiven(targetType.getAnnotation(DataSizeUnit.class))\n\t\t\t\t\t.willReturn(unitAnnotation);\n\t\t}\n\t\tgiven(targetType.getType()).willReturn((Class) DataSize.class);\n\t\treturn (DataSize) this.conversionService.convert(source,\n\t\t\t\tTypeDescriptor.forObject(source), targetType);\n\t}\n","date":"2018-09-04 17:04:22","endLine":81,"groupId":"9978","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(Integersource@DataUnitdefaultUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/92/5a083eeb62d763f9c79cd9279274223e9a3c6d.src","preCode":"\tprivate DataSize convert(Integer source, DataUnit defaultUnit) {\n\t\tTypeDescriptor targetType = mock(TypeDescriptor.class);\n\t\tif (defaultUnit != null) {\n\t\t\tDataSizeUnit unitAnnotation = AnnotationUtils.synthesizeAnnotation(\n\t\t\t\t\tCollections.singletonMap(\"value\", defaultUnit), DataSizeUnit.class,\n\t\t\t\t\tnull);\n\t\t\tgiven(targetType.getAnnotation(DataSizeUnit.class))\n\t\t\t\t\t.willReturn(unitAnnotation);\n\t\t}\n\t\tgiven(targetType.getType()).willReturn((Class) DataSize.class);\n\t\treturn (DataSize) this.conversionService.convert(source,\n\t\t\t\tTypeDescriptor.forObject(source), targetType);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/NumberToDataSizeConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"cb7de2a9636005103436ee3343afda1fed853cc4","commitMessage":"@@@Allow binding number to DataSize\n\nCloses gh-14294\n","date":"2018-09-04 17:04:22","modifiedFileCount":"1","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tprivate Duration convert(ConversionService conversionService, Integer source, ChronoUnit defaultUnit) {\n\t\tTypeDescriptor targetType = mock(TypeDescriptor.class);\n\t\tif (defaultUnit != null) {\n\t\t\tDurationUnit unitAnnotation = AnnotationUtils\n\t\t\t\t\t.synthesizeAnnotation(Collections.singletonMap(\"value\", defaultUnit), DurationUnit.class, null);\n\t\t\tgiven(targetType.getAnnotation(DurationUnit.class)).willReturn(unitAnnotation);\n\t\t}\n\t\tgiven(targetType.getType()).willReturn((Class) Duration.class);\n\t\treturn (Duration) conversionService.convert(source, TypeDescriptor.forObject(source), targetType);\n\t}\n","date":"2019-06-07 19:25:54","endLine":69,"groupId":"101796","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(ConversionServiceconversionService@Integersource@ChronoUnitdefaultUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d3/b638ace83bc59a4d8f42809592c3766bd7efdd.src","preCode":"\tprivate Duration convert(Integer source, ChronoUnit defaultUnit) {\n\t\tTypeDescriptor targetType = mock(TypeDescriptor.class);\n\t\tif (defaultUnit != null) {\n\t\t\tDurationUnit unitAnnotation = AnnotationUtils\n\t\t\t\t\t.synthesizeAnnotation(Collections.singletonMap(\"value\", defaultUnit), DurationUnit.class, null);\n\t\t\tgiven(targetType.getAnnotation(DurationUnit.class)).willReturn(unitAnnotation);\n\t\t}\n\t\tgiven(targetType.getType()).willReturn((Class) Duration.class);\n\t\treturn (Duration) this.conversionService.convert(source, TypeDescriptor.forObject(source), targetType);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/NumberToDurationConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tprivate DataSize convert(ConversionService conversionService, Integer source, DataUnit defaultUnit) {\n\t\tTypeDescriptor targetType = mock(TypeDescriptor.class);\n\t\tif (defaultUnit != null) {\n\t\t\tDataSizeUnit unitAnnotation = AnnotationUtils\n\t\t\t\t\t.synthesizeAnnotation(Collections.singletonMap(\"value\", defaultUnit), DataSizeUnit.class, null);\n\t\t\tgiven(targetType.getAnnotation(DataSizeUnit.class)).willReturn(unitAnnotation);\n\t\t}\n\t\tgiven(targetType.getType()).willReturn((Class) DataSize.class);\n\t\treturn (DataSize) conversionService.convert(source, TypeDescriptor.forObject(source), targetType);\n\t}\n","date":"2019-06-07 19:25:54","endLine":69,"groupId":"101796","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"convert","params":"(ConversionServiceconversionService@Integersource@DataUnitdefaultUnit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/15/b3296efe8540eed5998132c0459a05e602231f.src","preCode":"\tprivate DataSize convert(Integer source, DataUnit defaultUnit) {\n\t\tTypeDescriptor targetType = mock(TypeDescriptor.class);\n\t\tif (defaultUnit != null) {\n\t\t\tDataSizeUnit unitAnnotation = AnnotationUtils\n\t\t\t\t\t.synthesizeAnnotation(Collections.singletonMap(\"value\", defaultUnit), DataSizeUnit.class, null);\n\t\t\tgiven(targetType.getAnnotation(DataSizeUnit.class)).willReturn(unitAnnotation);\n\t\t}\n\t\tgiven(targetType.getType()).willReturn((Class) DataSize.class);\n\t\treturn (DataSize) this.conversionService.convert(source, TypeDescriptor.forObject(source), targetType);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/NumberToDataSizeConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
