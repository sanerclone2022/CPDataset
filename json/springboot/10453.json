[{"authorTime":"2018-04-11 02:24:19","codes":[{"authorDate":"2018-04-11 02:24:19","commitOrder":3,"curCode":"\tpublic void getEndpointsShouldIncludeControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestControllerEndpoint.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testcontroller\");\n\t\t\t\t\tassertThat(endpoint.getController())\n\t\t\t\t\t\t\t.isInstanceOf(TestControllerEndpoint.class);\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","date":"2018-04-11 02:24:19","endLine":77,"groupId":"16411","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldIncludeControllerEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b1/ea4acc06f5be66e8bd944aeef02b1351f74f1d.src","preCode":"\tpublic void getEndpointsShouldIncludeControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestControllerEndpoint.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testcontroller\");\n\t\t\t\t\tassertThat(endpoint.getController())\n\t\t\t\t\t\t\t.isInstanceOf(TestControllerEndpoint.class);\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"MB"},{"authorDate":"2018-04-11 02:24:19","commitOrder":3,"curCode":"\tpublic void getEndpointsShouldDiscoverProxyControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyControllerEndpoint.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\tValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testcontroller\");\n\t\t\t\t\tassertThat(endpoint.getController())\n\t\t\t\t\t\t\t.isInstanceOf(TestProxyControllerEndpoint.class);\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","date":"2018-04-11 02:24:19","endLine":93,"groupId":"16411","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointsShouldDiscoverProxyControllerEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b1/ea4acc06f5be66e8bd944aeef02b1351f74f1d.src","preCode":"\tpublic void getEndpointsShouldDiscoverProxyControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyControllerEndpoint.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\tValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testcontroller\");\n\t\t\t\t\tassertThat(endpoint.getController())\n\t\t\t\t\t\t\t.isInstanceOf(TestProxyControllerEndpoint.class);\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"55ea9f796fff1ac03166ce1890cceb93916f34bf","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-04-11 02:24:19","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-10-15 04:53:28","codes":[{"authorDate":"2018-10-15 04:53:28","commitOrder":4,"curCode":"\tpublic void getEndpointsShouldIncludeControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestControllerEndpoint.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getEndpointId())\n\t\t\t\t\t\t\t.isEqualTo(EndpointId.of(\"testcontroller\"));\n\t\t\t\t\tassertThat(endpoint.getController())\n\t\t\t\t\t\t\t.isInstanceOf(TestControllerEndpoint.class);\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","date":"2018-10-15 04:53:28","endLine":76,"groupId":"16411","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldIncludeControllerEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/20/b9ab00fc7e9e0e63d7dad11fb75ad0ddce7c01.src","preCode":"\tpublic void getEndpointsShouldIncludeControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestControllerEndpoint.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testcontroller\");\n\t\t\t\t\tassertThat(endpoint.getController())\n\t\t\t\t\t\t\t.isInstanceOf(TestControllerEndpoint.class);\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2018-10-15 04:53:28","commitOrder":4,"curCode":"\tpublic void getEndpointsShouldDiscoverProxyControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyControllerEndpoint.class)\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(ValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getEndpointId())\n\t\t\t\t\t\t\t.isEqualTo(EndpointId.of(\"testcontroller\"));\n\t\t\t\t\tassertThat(endpoint.getController())\n\t\t\t\t\t\t\t.isInstanceOf(TestProxyControllerEndpoint.class);\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","date":"2018-10-15 04:53:28","endLine":94,"groupId":"16411","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointsShouldDiscoverProxyControllerEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/20/b9ab00fc7e9e0e63d7dad11fb75ad0ddce7c01.src","preCode":"\tpublic void getEndpointsShouldDiscoverProxyControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyControllerEndpoint.class)\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(ValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getId()).isEqualTo(\"testcontroller\");\n\t\t\t\t\tassertThat(endpoint.getController())\n\t\t\t\t\t\t\t.isInstanceOf(TestProxyControllerEndpoint.class);\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"1bf97e9b5e2187a04d8471ead73b629444ecc838","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-10-15 04:53:28","modifiedFileCount":"66","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid getEndpointsShouldIncludeControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestControllerEndpoint.class).run(assertDiscoverer((discoverer) -> {\n\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\tassertThat(endpoint.getEndpointId()).isEqualTo(EndpointId.of(\"testcontroller\"));\n\t\t\tassertThat(endpoint.getController()).isInstanceOf(TestControllerEndpoint.class);\n\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t}));\n\t}\n","date":"2019-06-07 19:25:54","endLine":70,"groupId":"10453","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldIncludeControllerEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/72/6fdec1443f899669409870703ca6b93ca207ae.src","preCode":"\tpublic void getEndpointsShouldIncludeControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestControllerEndpoint.class).run(assertDiscoverer((discoverer) -> {\n\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\tassertThat(endpoint.getEndpointId()).isEqualTo(EndpointId.of(\"testcontroller\"));\n\t\t\tassertThat(endpoint.getController()).isInstanceOf(TestControllerEndpoint.class);\n\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid getEndpointsShouldDiscoverProxyControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyControllerEndpoint.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(ValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getEndpointId()).isEqualTo(EndpointId.of(\"testcontroller\"));\n\t\t\t\t\tassertThat(endpoint.getController()).isInstanceOf(TestProxyControllerEndpoint.class);\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","date":"2019-06-07 19:25:54","endLine":84,"groupId":"10453","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointsShouldDiscoverProxyControllerEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/72/6fdec1443f899669409870703ca6b93ca207ae.src","preCode":"\tpublic void getEndpointsShouldDiscoverProxyControllerEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(TestProxyControllerEndpoint.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(ValidationAutoConfiguration.class))\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tassertThat(endpoints).hasSize(1);\n\t\t\t\t\tExposableControllerEndpoint endpoint = endpoints.iterator().next();\n\t\t\t\t\tassertThat(endpoint.getEndpointId()).isEqualTo(EndpointId.of(\"testcontroller\"));\n\t\t\t\t\tassertThat(endpoint.getController()).isInstanceOf(TestProxyControllerEndpoint.class);\n\t\t\t\t\tassertThat(endpoint).isInstanceOf(DiscoveredEndpoint.class);\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
