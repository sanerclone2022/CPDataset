[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void cyclicBeanMethods() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CyclicBeanMethodsConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0)).isEqualTo(\n\t\t\t\t\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\n\t\t\t\t\"|  one defined in \" + InnerInnerConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5))\n\t\t\t\t.startsWith(\"|  two defined in \" + InnerConfiguration.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\n\t\t\t\t\"|  three defined in \" + CyclicBeanMethodsConfiguration.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":70,"groupId":"5774","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cyclicBeanMethods","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/6496ffebfbf91cd5dd603e71561deb418553da.src","preCode":"\tpublic void cyclicBeanMethods() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CyclicBeanMethodsConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0)).isEqualTo(\n\t\t\t\t\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\n\t\t\t\t\"|  one defined in \" + InnerInnerConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5))\n\t\t\t\t.startsWith(\"|  two defined in \" + InnerConfiguration.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\n\t\t\t\t\"|  three defined in \" + CyclicBeanMethodsConfiguration.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void cycleWithAutowiredFields() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CycleWithAutowiredFields.class);\n\t\tassertThat(analysis.getDescription()).startsWith(\n\t\t\t\t\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0)).isEqualTo(\n\t\t\t\t\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\n\t\t\t\t\"|  three defined in \" + BeanThreeConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5)).startsWith(\n\t\t\t\t\"|  one defined in \" + CycleWithAutowiredFields.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\"|  \" + BeanTwoConfiguration.class.getName()\n\t\t\t\t+ \" (field private \" + BeanThree.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":92,"groupId":"2659","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cycleWithAutowiredFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/6496ffebfbf91cd5dd603e71561deb418553da.src","preCode":"\tpublic void cycleWithAutowiredFields() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CycleWithAutowiredFields.class);\n\t\tassertThat(analysis.getDescription()).startsWith(\n\t\t\t\t\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0)).isEqualTo(\n\t\t\t\t\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\n\t\t\t\t\"|  three defined in \" + BeanThreeConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5)).startsWith(\n\t\t\t\t\"|  one defined in \" + CycleWithAutowiredFields.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\"|  \" + BeanTwoConfiguration.class.getName()\n\t\t\t\t+ \" (field private \" + BeanThree.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid cyclicBeanMethods() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CyclicBeanMethodsConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  one defined in \" + InnerInnerConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5)).startsWith(\"|  two defined in \" + InnerConfiguration.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\"|  three defined in \" + CyclicBeanMethodsConfiguration.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":67,"groupId":"5774","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cyclicBeanMethods","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/88/cb0705466554dee55777339cd71e68c01aa5dc.src","preCode":"\tpublic void cyclicBeanMethods() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CyclicBeanMethodsConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  one defined in \" + InnerInnerConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5)).startsWith(\"|  two defined in \" + InnerConfiguration.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\"|  three defined in \" + CyclicBeanMethodsConfiguration.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid cycleWithAutowiredFields() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CycleWithAutowiredFields.class);\n\t\tassertThat(analysis.getDescription())\n\t\t\t\t.startsWith(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  three defined in \" + BeanThreeConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5)).startsWith(\"|  one defined in \" + CycleWithAutowiredFields.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\n\t\t\t\t\"|  \" + BeanTwoConfiguration.class.getName() + \" (field private \" + BeanThree.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":87,"groupId":"2659","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cycleWithAutowiredFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/88/cb0705466554dee55777339cd71e68c01aa5dc.src","preCode":"\tpublic void cycleWithAutowiredFields() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CycleWithAutowiredFields.class);\n\t\tassertThat(analysis.getDescription())\n\t\t\t\t.startsWith(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  three defined in \" + BeanThreeConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5)).startsWith(\"|  one defined in \" + CycleWithAutowiredFields.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\n\t\t\t\t\"|  \" + BeanTwoConfiguration.class.getName() + \" (field private \" + BeanThree.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-07-15 18:51:24","codes":[{"authorDate":"2021-07-15 18:51:24","commitOrder":3,"curCode":"\tvoid cyclicBeanMethods() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CyclicBeanMethodsConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  one defined in \" + InnerInnerConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5)).startsWith(\"|  two defined in \" + InnerConfiguration.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\"|  three defined in \" + CyclicBeanMethodsConfiguration.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(analysis.getAction()).isNotNull();\n\t}\n","date":"2021-08-17 21:51:39","endLine":68,"groupId":"101872","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"cyclicBeanMethods","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b7/b34bcbcb8a71cd970baadf604f1c6f47aeca55.src","preCode":"\tvoid cyclicBeanMethods() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CyclicBeanMethodsConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  one defined in \" + InnerInnerConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5)).startsWith(\"|  two defined in \" + InnerConfiguration.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\"|  three defined in \" + CyclicBeanMethodsConfiguration.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2021-07-15 18:51:24","commitOrder":3,"curCode":"\tvoid cycleWithAutowiredFields() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CycleWithAutowiredFields.class);\n\t\tassertThat(analysis.getDescription())\n\t\t\t\t.startsWith(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  three defined in \" + BeanThreeConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5)).startsWith(\"|  one defined in \" + CycleWithAutowiredFields.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\n\t\t\t\t\"|  \" + BeanTwoConfiguration.class.getName() + \" (field private \" + BeanThree.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(analysis.getAction()).isNotNull();\n\t}\n","date":"2021-08-17 21:51:39","endLine":89,"groupId":"101872","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"cycleWithAutowiredFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b7/b34bcbcb8a71cd970baadf604f1c6f47aeca55.src","preCode":"\tvoid cycleWithAutowiredFields() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CycleWithAutowiredFields.class);\n\t\tassertThat(analysis.getDescription())\n\t\t\t\t.startsWith(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(9);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  three defined in \" + BeanThreeConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(5)).startsWith(\"|  one defined in \" + CycleWithAutowiredFields.class.getName());\n\t\tassertThat(lines.get(6)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(7)).startsWith(\n\t\t\t\t\"|  \" + BeanTwoConfiguration.class.getName() + \" (field private \" + BeanThree.class.getName());\n\t\tassertThat(lines.get(8)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"01e741d7039b626054911e0797872776ce28c120","commitMessage":"@@@Prohibit circular references by default\n\nCloses gh-27652\n","date":"2021-08-17 21:51:39","modifiedFileCount":"7","status":"M","submitter":"Andy Wilkinson"}]
