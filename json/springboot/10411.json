[{"authorTime":"2018-05-29 20:18:26","codes":[{"authorDate":"2018-01-10 12:57:10","commitOrder":2,"curCode":"\tpublic void getEndpointsShouldApplyExtensions() {\n\t\tload(SpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(\n\t\t\t\t\tcontext);\n\t\t\tMap<String, SpecializedExposableEndpoint> endpoints = mapEndpoints(\n\t\t\t\t\tdiscoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(\n\t\t\t\t\tendpoints.get(\"specialized\"));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\n\t\t});\n\t}\n","date":"2018-01-20 12:44:24","endLine":234,"groupId":"4516","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldApplyExtensions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d7/90e83d94b6897d425faffb6b5c52ade06b89e6.src","preCode":"\tpublic void getEndpointsShouldApplyExtensions() {\n\t\tload(SpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(\n\t\t\t\t\tcontext);\n\t\t\tMap<String, SpecializedExposableEndpoint> endpoints = mapEndpoints(\n\t\t\t\t\tdiscoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(\n\t\t\t\t\tendpoints.get(\"specialized\"));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"NB"},{"authorDate":"2018-05-29 20:18:26","commitOrder":2,"curCode":"\tpublic void getEndpointShouldFindParentExtension() {\n\t\tload(SubSpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(\n\t\t\t\t\tcontext);\n\t\t\tMap<String, SpecializedExposableEndpoint> endpoints = mapEndpoints(\n\t\t\t\t\tdiscoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(\n\t\t\t\t\tendpoints.get(\"specialized\"));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedTestEndpoint.class, \"getAll\"));\n\t\t\tassertThat(operations).containsKeys(ReflectionUtils.findMethod(\n\t\t\t\t\tSubSpecializedTestEndpoint.class, \"getSpecialOne\", String.class));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\t\t\tassertThat(operations).hasSize(3);\n\t\t});\n\t}\n","date":"2018-05-29 20:18:26","endLine":253,"groupId":"4516","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointShouldFindParentExtension","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b3/8c076ef6338ec8c06eb3f90dd7f700ea2d8438.src","preCode":"\tpublic void getEndpointShouldFindParentExtension() {\n\t\tload(SubSpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(\n\t\t\t\t\tcontext);\n\t\t\tMap<String, SpecializedExposableEndpoint> endpoints = mapEndpoints(\n\t\t\t\t\tdiscoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(\n\t\t\t\t\tendpoints.get(\"specialized\"));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedTestEndpoint.class, \"getAll\"));\n\t\t\tassertThat(operations).containsKeys(ReflectionUtils.findMethod(\n\t\t\t\t\tSubSpecializedTestEndpoint.class, \"getSpecialOne\", String.class));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\t\t\tassertThat(operations).hasSize(3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"B"}],"commitId":"39861bf819c50686f4aabcda6f93295b7f545bad","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-05-29 20:18:26","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-10-15 04:53:28","codes":[{"authorDate":"2018-10-15 04:53:28","commitOrder":3,"curCode":"\tpublic void getEndpointsShouldApplyExtensions() {\n\t\tload(SpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(\n\t\t\t\t\tcontext);\n\t\t\tMap<EndpointId, SpecializedExposableEndpoint> endpoints = mapEndpoints(\n\t\t\t\t\tdiscoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(\n\t\t\t\t\tendpoints.get(EndpointId.of(\"specialized\")));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\n\t\t});\n\t}\n","date":"2018-10-15 04:53:28","endLine":241,"groupId":"3121","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldApplyExtensions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a2/6a0773ab3d9d56fb0e28bd6fd2519c7b3c1c78.src","preCode":"\tpublic void getEndpointsShouldApplyExtensions() {\n\t\tload(SpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(\n\t\t\t\t\tcontext);\n\t\t\tMap<String, SpecializedExposableEndpoint> endpoints = mapEndpoints(\n\t\t\t\t\tdiscoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(\n\t\t\t\t\tendpoints.get(\"specialized\"));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"},{"authorDate":"2018-10-15 04:53:28","commitOrder":3,"curCode":"\tpublic void getEndpointShouldFindParentExtension() {\n\t\tload(SubSpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(\n\t\t\t\t\tcontext);\n\t\t\tMap<EndpointId, SpecializedExposableEndpoint> endpoints = mapEndpoints(\n\t\t\t\t\tdiscoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(\n\t\t\t\t\tendpoints.get(EndpointId.of(\"specialized\")));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedTestEndpoint.class, \"getAll\"));\n\t\t\tassertThat(operations).containsKeys(ReflectionUtils.findMethod(\n\t\t\t\t\tSubSpecializedTestEndpoint.class, \"getSpecialOne\", String.class));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\t\t\tassertThat(operations).hasSize(3);\n\t\t});\n\t}\n","date":"2018-10-15 04:53:28","endLine":260,"groupId":"3121","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointShouldFindParentExtension","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a2/6a0773ab3d9d56fb0e28bd6fd2519c7b3c1c78.src","preCode":"\tpublic void getEndpointShouldFindParentExtension() {\n\t\tload(SubSpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(\n\t\t\t\t\tcontext);\n\t\t\tMap<String, SpecializedExposableEndpoint> endpoints = mapEndpoints(\n\t\t\t\t\tdiscoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(\n\t\t\t\t\tendpoints.get(\"specialized\"));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedTestEndpoint.class, \"getAll\"));\n\t\t\tassertThat(operations).containsKeys(ReflectionUtils.findMethod(\n\t\t\t\t\tSubSpecializedTestEndpoint.class, \"getSpecialOne\", String.class));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\t\t\tassertThat(operations).hasSize(3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"}],"commitId":"1bf97e9b5e2187a04d8471ead73b629444ecc838","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-10-15 04:53:28","modifiedFileCount":"66","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid getEndpointsShouldApplyExtensions() {\n\t\tload(SpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(context);\n\t\t\tMap<EndpointId, SpecializedExposableEndpoint> endpoints = mapEndpoints(discoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(endpoints.get(EndpointId.of(\"specialized\")));\n\t\t\tassertThat(operations).containsKeys(ReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":223,"groupId":"10411","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldApplyExtensions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6e/5734d8be02a5dd04ae88742b6ec518a0917dbe.src","preCode":"\tpublic void getEndpointsShouldApplyExtensions() {\n\t\tload(SpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(context);\n\t\t\tMap<EndpointId, SpecializedExposableEndpoint> endpoints = mapEndpoints(discoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(endpoints.get(EndpointId.of(\"specialized\")));\n\t\t\tassertThat(operations).containsKeys(ReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid getEndpointShouldFindParentExtension() {\n\t\tload(SubSpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(context);\n\t\t\tMap<EndpointId, SpecializedExposableEndpoint> endpoints = mapEndpoints(discoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(endpoints.get(EndpointId.of(\"specialized\")));\n\t\t\tassertThat(operations).containsKeys(ReflectionUtils.findMethod(SpecializedTestEndpoint.class, \"getAll\"));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SubSpecializedTestEndpoint.class, \"getSpecialOne\", String.class));\n\t\t\tassertThat(operations).containsKeys(ReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\t\t\tassertThat(operations).hasSize(3);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":237,"groupId":"10411","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointShouldFindParentExtension","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6e/5734d8be02a5dd04ae88742b6ec518a0917dbe.src","preCode":"\tpublic void getEndpointShouldFindParentExtension() {\n\t\tload(SubSpecializedEndpointsConfiguration.class, (context) -> {\n\t\t\tSpecializedEndpointDiscoverer discoverer = new SpecializedEndpointDiscoverer(context);\n\t\t\tMap<EndpointId, SpecializedExposableEndpoint> endpoints = mapEndpoints(discoverer.getEndpoints());\n\t\t\tMap<Method, SpecializedOperation> operations = mapOperations(endpoints.get(EndpointId.of(\"specialized\")));\n\t\t\tassertThat(operations).containsKeys(ReflectionUtils.findMethod(SpecializedTestEndpoint.class, \"getAll\"));\n\t\t\tassertThat(operations).containsKeys(\n\t\t\t\t\tReflectionUtils.findMethod(SubSpecializedTestEndpoint.class, \"getSpecialOne\", String.class));\n\t\t\tassertThat(operations).containsKeys(ReflectionUtils.findMethod(SpecializedExtension.class, \"getSpecial\"));\n\t\t\tassertThat(operations).hasSize(3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
