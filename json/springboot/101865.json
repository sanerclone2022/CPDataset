[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context,\n\t\t\tString[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf(\"=\");\n\t\t\tString key = (index > 0 ? pair.substring(0, index) : pair);\n\t\t\tString value = (index > 0 ? pair.substring(index + 1) : \"\");\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","date":"2017-10-05 11:18:56","endLine":143,"groupId":"3793","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addEnvironment","params":"(AnnotationConfigApplicationContextcontext@String[]environment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/00/8e572cd98de05fb573eed349319788db04455b.src","preCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context,\n\t\t\tString[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf(\"=\");\n\t\t\tString key = (index > 0 ? pair.substring(0, index) : pair);\n\t\t\tString value = (index > 0 ? pair.substring(index + 1) : \"\");\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BindValidationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context,\n\t\t\tString[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf(\"=\");\n\t\t\tString key = (index > 0 ? pair.substring(0, index) : pair);\n\t\t\tString value = (index > 0 ? pair.substring(index + 1) : \"\");\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","date":"2017-10-05 11:18:56","endLine":110,"groupId":"3793","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addEnvironment","params":"(AnnotationConfigApplicationContextcontext@String[]environment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f7/ff7c782c21847fcb81de63eee9d546900bdcc4.src","preCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context,\n\t\t\tString[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf(\"=\");\n\t\t\tString key = (index > 0 ? pair.substring(0, index) : pair);\n\t\t\tString value = (index > 0 ? pair.substring(index + 1) : \"\");\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-07-28 08:35:43","codes":[{"authorDate":"2018-07-28 08:35:43","commitOrder":2,"curCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context,\n\t\t\tString[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf(\"=\");\n\t\t\tString key = (index > 0) ? pair.substring(0, index) : pair;\n\t\t\tString value = (index > 0) ? pair.substring(index + 1) : \"\";\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","date":"2018-07-28 08:35:43","endLine":143,"groupId":"15227","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addEnvironment","params":"(AnnotationConfigApplicationContextcontext@String[]environment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e7/cf6b4f3295923359b2593a3511e202d70b7c14.src","preCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context,\n\t\t\tString[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf(\"=\");\n\t\t\tString key = (index > 0 ? pair.substring(0, index) : pair);\n\t\t\tString value = (index > 0 ? pair.substring(index + 1) : \"\");\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BindValidationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2018-07-28 08:35:43","commitOrder":2,"curCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context,\n\t\t\tString[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf(\"=\");\n\t\t\tString key = (index > 0) ? pair.substring(0, index) : pair;\n\t\t\tString value = (index > 0) ? pair.substring(index + 1) : \"\";\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","date":"2018-07-28 08:35:43","endLine":128,"groupId":"15227","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addEnvironment","params":"(AnnotationConfigApplicationContextcontext@String[]environment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d7/927ffd07c6ca3d48ab23aefe28dd68095c182d.src","preCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context,\n\t\t\tString[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf(\"=\");\n\t\t\tString key = (index > 0 ? pair.substring(0, index) : pair);\n\t\t\tString value = (index > 0 ? pair.substring(index + 1) : \"\");\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"a6c9c92f2e17251137e3f59899266ead2274d6f7","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-07-28 08:35:43","modifiedFileCount":"358","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-07-05 00:44:40","codes":[{"authorDate":"2019-07-05 00:44:40","commitOrder":3,"curCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context, String[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf('=');\n\t\t\tString key = (index > 0) ? pair.substring(0, index) : pair;\n\t\t\tString value = (index > 0) ? pair.substring(index + 1) : \"\";\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","date":"2019-07-05 00:44:40","endLine":128,"groupId":"101865","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"addEnvironment","params":"(AnnotationConfigApplicationContextcontext@String[]environment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d5/a5714ea86fd5413cfb2f0053d5e991d0e6b66f.src","preCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context, String[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf(\"=\");\n\t\t\tString key = (index > 0) ? pair.substring(0, index) : pair;\n\t\t\tString value = (index > 0) ? pair.substring(index + 1) : \"\";\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BindValidationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2019-07-05 00:44:40","commitOrder":3,"curCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context, String[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf('=');\n\t\t\tString key = (index > 0) ? pair.substring(0, index) : pair;\n\t\t\tString value = (index > 0) ? pair.substring(index + 1) : \"\";\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","date":"2019-07-05 00:44:40","endLine":117,"groupId":"101865","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addEnvironment","params":"(AnnotationConfigApplicationContextcontext@String[]environment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2d/7ad180d3ec2317cc96e0ea4f4ee586361efc0e.src","preCode":"\tprivate void addEnvironment(AnnotationConfigApplicationContext context, String[] environment) {\n\t\tMutablePropertySources sources = context.getEnvironment().getPropertySources();\n\t\tMap<String, Object> map = new HashMap<>();\n\t\tfor (String pair : environment) {\n\t\t\tint index = pair.indexOf(\"=\");\n\t\t\tString key = (index > 0) ? pair.substring(0, index) : pair;\n\t\t\tString value = (index > 0) ? pair.substring(index + 1) : \"\";\n\t\t\tmap.put(key.trim(), value.trim());\n\t\t}\n\t\tsources.addFirst(new MapPropertySource(\"test\", map));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"4b2a116fa76d21eebfcb52af64752b6d22da8864","commitMessage":"@@@Use String indexOf(char) and lastIndexOf(char) where possible\n\nCloses gh-11416\n","date":"2019-07-05 00:44:40","modifiedFileCount":"7","status":"M","submitter":"Andy Wilkinson"}]
