[{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2021-04-10 08:39:40","commitOrder":3,"curCode":"\tvoid autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.data.repository.autotime.enabled=true\",\n\t\t\t\t\t\t\"management.metrics.data.repository.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\t\t\"management.metrics.data.repository.autotime.percentiles-histogram=true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context, ExampleRepository.class);\n\t\t\t\t\tTimer timer = registry.get(\"spring.data.repository.invocations\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","date":"2021-04-10 14:49:25","endLine":118,"groupId":"13836","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"autoTimeRequestsCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/deb306993313baa2537af742e940b8d077192f.src","preCode":"\tvoid autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.data.repository.autotime.enabled=true\",\n\t\t\t\t\t\t\"management.metrics.data.repository.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\t\t\"management.metrics.data.repository.autotime.percentiles-histogram=true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context, ExampleRepository.class);\n\t\t\t\t\tTimer timer = registry.get(\"spring.data.repository.invocations\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/data/RepositoryMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.request.autotime.enabled=true\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles-histogram=true\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.client.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":110,"groupId":"13836","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"autoTimeRequestsCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ce/733aa2e036d2562c6047003aa29654e564def2.src","preCode":"\tvoid autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.request.autotime.enabled=true\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles-histogram=true\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.client.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"NB"}],"commitId":"f03f74ff0ae2d903e643780567a523de470dc451","commitMessage":"@@@Add Spring Data Repository metrics support\n\nAdd support for Spring Data Repository metrics by integrating with\nSpring Data's new `RepositoryMethodInvocationListener` support.\n\nCloses gh-22217\n","date":"2021-04-10 14:49:25","modifiedFileCount":"1","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2021-04-15 22:31:25","commitOrder":4,"curCode":"\tvoid autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.data.repository.autotime.enabled=true\",\n\t\t\t\t\"management.metrics.data.repository.autotime.percentiles=0.5,0.7\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context, ExampleRepository.class);\n\t\t\t\t\tTimer timer = registry.get(\"spring.data.repository.invocations\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","date":"2021-04-15 22:31:26","endLine":114,"groupId":"10868","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"autoTimeRequestsCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/61/a607f17f7d177fda76f1d02147665d984a3a84.src","preCode":"\tvoid autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.data.repository.autotime.enabled=true\",\n\t\t\t\t\t\t\"management.metrics.data.repository.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\t\t\"management.metrics.data.repository.autotime.percentiles-histogram=true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context, ExampleRepository.class);\n\t\t\t\t\tTimer timer = registry.get(\"spring.data.repository.invocations\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/data/RepositoryMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.request.autotime.enabled=true\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles-histogram=true\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.client.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":110,"groupId":"10868","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"autoTimeRequestsCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ce/733aa2e036d2562c6047003aa29654e564def2.src","preCode":"\tvoid autoTimeRequestsCanBeConfigured() {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.request.autotime.enabled=true\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles=0.5,0.7\",\n\t\t\t\t\"management.metrics.web.client.request.autotime.percentiles-histogram=true\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tTimer timer = registry.get(\"http.client.requests\").timer();\n\t\t\t\t\tHistogramSnapshot snapshot = timer.takeSnapshot();\n\t\t\t\t\tassertThat(snapshot.percentileValues()).hasSize(2);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[0].percentile()).isEqualTo(0.5);\n\t\t\t\t\tassertThat(snapshot.percentileValues()[1].percentile()).isEqualTo(0.7);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"}],"commitId":"182b75a1fd1464ee7421ac7c75d2949f94044b40","commitMessage":"@@@Merge pull request #26135 from izeye\n\n* pr/26135:\n  Polish\n\nCloses gh-26135\n","date":"2021-04-15 22:31:26","modifiedFileCount":"7","status":"M","submitter":"Stephane Nicoll"}]
