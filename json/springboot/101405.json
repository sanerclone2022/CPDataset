[{"authorTime":"2018-02-23 03:55:11","codes":[{"authorDate":"2018-02-23 03:55:11","commitOrder":1,"curCode":"\tpublic void bindToArrayWhenStringShouldUsePropertyEditor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"java.lang.RuntimeException,java.lang.IllegalStateException\");\n\t\tthis.sources.add(source);\n\t\tassertThat(this.binder.bind(\"foo\", Bindable.of(Class[].class)).get())\n\t\t\t\t.containsExactly(RuntimeException.class, IllegalStateException.class);\n\t}\n","date":"2018-02-23 13:26:36","endLine":300,"groupId":"3254","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToArrayWhenStringShouldUsePropertyEditor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9b/5482296adea13923ef3de07f256f3ee5cb7957.src","preCode":"\tpublic void bindToArrayWhenStringShouldUsePropertyEditor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"java.lang.RuntimeException,java.lang.IllegalStateException\");\n\t\tthis.sources.add(source);\n\t\tassertThat(this.binder.bind(\"foo\", Bindable.of(Class[].class)).get())\n\t\t\t\t.containsExactly(RuntimeException.class, IllegalStateException.class);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/ArrayBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":293,"status":"B"},{"authorDate":"2018-02-23 03:55:11","commitOrder":1,"curCode":"\tpublic void bindToCollectionShouldUsePropertyEditor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo[0]\", \"java.lang.RuntimeException\");\n\t\tsource.put(\"foo[1]\", \"java.lang.IllegalStateException\");\n\t\tthis.sources.add(source);\n\t\tassertThat(this.binder.bind(\"foo\", Bindable.listOf(Class.class)).get())\n\t\t\t\t.containsExactly(RuntimeException.class, IllegalStateException.class);\n\t}\n","date":"2018-02-23 13:26:36","endLine":365,"groupId":"3254","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToCollectionShouldUsePropertyEditor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/4ffc43e7ed4e9fed6fccc853031b419bd9a8f5.src","preCode":"\tpublic void bindToCollectionShouldUsePropertyEditor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo[0]\", \"java.lang.RuntimeException\");\n\t\tsource.put(\"foo[1]\", \"java.lang.IllegalStateException\");\n\t\tthis.sources.add(source);\n\t\tassertThat(this.binder.bind(\"foo\", Bindable.listOf(Class.class)).get())\n\t\t\t\t.containsExactly(RuntimeException.class, IllegalStateException.class);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/CollectionBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":357,"status":"B"}],"commitId":"3dea6fc645a6157447a2e98a036b01fcd2fcce00","commitMessage":"@@@Fix bind TypeConverter delegation with collections\n\nUpdate `BindConverter` so that delegation to `SimpleTypeConverter` also\nworks with Collections and Arrays.\n\nPrior to this commit.  conversion that relied on a `PropertyEditor` would\nonly work for simple types. For example.  \"String -> Class<?>\" would use\nthe `ClassEditor` but \"String -> List<Class<?>>\" would fail.\n\nThe `BindConverter` now uses a minimal `ConversionService` as an adapter\nto the `SimpleTypeConverter`. This allows us to use the same delimited\nstring conversion logic as the `ApplicationConverter`.\n\nFixes gh-12166\n","date":"2018-02-23 13:26:36","modifiedFileCount":"7","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid bindToArrayWhenStringShouldUsePropertyEditor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"java.lang.RuntimeException,java.lang.IllegalStateException\");\n\t\tthis.sources.add(source);\n\t\tassertThat(this.binder.bind(\"foo\", Bindable.of(Class[].class)).get()).containsExactly(RuntimeException.class,\n\t\t\t\tIllegalStateException.class);\n\t}\n","date":"2019-06-07 19:25:54","endLine":286,"groupId":"101405","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToArrayWhenStringShouldUsePropertyEditor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/58/82c4a94946a128a32edb27b4a80a5f12d6fe87.src","preCode":"\tpublic void bindToArrayWhenStringShouldUsePropertyEditor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"java.lang.RuntimeException,java.lang.IllegalStateException\");\n\t\tthis.sources.add(source);\n\t\tassertThat(this.binder.bind(\"foo\", Bindable.of(Class[].class)).get()).containsExactly(RuntimeException.class,\n\t\t\t\tIllegalStateException.class);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/ArrayBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid bindToCollectionShouldUsePropertyEditor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo[0]\", \"java.lang.RuntimeException\");\n\t\tsource.put(\"foo[1]\", \"java.lang.IllegalStateException\");\n\t\tthis.sources.add(source);\n\t\tassertThat(this.binder.bind(\"foo\", Bindable.listOf(Class.class)).get()).containsExactly(RuntimeException.class,\n\t\t\t\tIllegalStateException.class);\n\t}\n","date":"2019-06-07 19:25:54","endLine":383,"groupId":"101405","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToCollectionShouldUsePropertyEditor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c2/022252c53b76e3ffcb116feb8baa62bd6611cf.src","preCode":"\tpublic void bindToCollectionShouldUsePropertyEditor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo[0]\", \"java.lang.RuntimeException\");\n\t\tsource.put(\"foo[1]\", \"java.lang.IllegalStateException\");\n\t\tthis.sources.add(source);\n\t\tassertThat(this.binder.bind(\"foo\", Bindable.listOf(Class.class)).get()).containsExactly(RuntimeException.class,\n\t\t\t\tIllegalStateException.class);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/CollectionBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":375,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
