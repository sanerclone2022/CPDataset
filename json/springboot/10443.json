[{"authorTime":"2018-01-10 12:57:10","codes":[{"authorDate":"2018-01-10 12:57:10","commitOrder":1,"curCode":"\tprivate void load(Function<String, Long> timeToLive,\n\t\t\tEndpointPathResolver endpointPathResolver, Class<?> configuration,\n\t\t\tConsumer<WebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(context,\n\t\t\t\t\tparameterMapper, mediaTypes, endpointPathResolver,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","date":"2018-01-20 12:44:24","endLine":278,"groupId":"1003","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"load","params":"(Function<String@Long>timeToLive@EndpointPathResolverendpointPathResolver@Class<?>configuration@Consumer<WebEndpointDiscoverer>consumer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d9/85530ca22a6e0ff917f25d06135c15e5880fc5.src","preCode":"\tprivate void load(Function<String, Long> timeToLive,\n\t\t\tEndpointPathResolver endpointPathResolver, Class<?> configuration,\n\t\t\tConsumer<WebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(context,\n\t\t\t\t\tparameterMapper, mediaTypes, endpointPathResolver,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/WebEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"B"},{"authorDate":"2018-01-10 12:57:10","commitOrder":1,"curCode":"\tprivate void load(Function<String, Long> timeToLive,\n\t\t\tEndpointPathResolver endpointPathResolver, Class<?> configuration,\n\t\t\tConsumer<CloudFoundryWebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tCloudFoundryWebEndpointDiscoverer discoverer = new CloudFoundryWebEndpointDiscoverer(\n\t\t\t\t\tcontext, parameterMapper, mediaTypes, endpointPathResolver,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","date":"2018-01-20 12:44:24","endLine":91,"groupId":"1003","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"load","params":"(Function<String@Long>timeToLive@EndpointPathResolverendpointPathResolver@Class<?>configuration@Consumer<CloudFoundryWebEndpointDiscoverer>consumer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3c/352752453089ab7b56c491d236acc8b00136fa.src","preCode":"\tprivate void load(Function<String, Long> timeToLive,\n\t\t\tEndpointPathResolver endpointPathResolver, Class<?> configuration,\n\t\t\tConsumer<CloudFoundryWebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tCloudFoundryWebEndpointDiscoverer discoverer = new CloudFoundryWebEndpointDiscoverer(\n\t\t\t\t\tcontext, parameterMapper, mediaTypes, endpointPathResolver,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"}],"commitId":"1d39feffeabf4b94e3f900b941b58e0443d5887a","commitMessage":"@@@Overhaul actuator endpoint code\n\nRefactor several areas of the actuator endpoint code in order to make\nfuture extensions easier. The primary goal is to introduce the concept\nof an `ExposableEndpoint` that has technology specific subclasses and\ncan carry additional data for filters to use. Many other changes have\nbeen made along the way including:\n\n* A new EndpointSupplier interface that allows cleaner separation of\n  supplying vs discovering endpoints. This allows cleaner class names\n  and allows for better auto-configuration since a user can choose to\n  provide their own supplier entirely.\n\n* A `DiscoveredEndpoint` interface that allows the `EndpointFilter`\n  to be greatly simplified. A filter now doesn't need to know about\n  discovery concerns unless absolutely necessary.\n\n* Improved naming and package structure. Many technology specific\n  concerns are now grouped in a better way. Related concerns are\n  co-located and concepts from one area no longer leakage into another.\n\n* Simplified `HandlerMapping` implementations. Many common concerns have\n  been pulled up helping to create simpler subclasses.\n\n* Simplified JMX adapters. Many of the intermediary `Info` classes have\n  been removed. The `DiscoveredJmxOperation` is now responsible for\n  mapping methods to operations.\n\n* A specific @`HealthEndpointCloudFoundryExtension` for Cloud Foundry.\n  The extension logic used to create a \"full\" health endpoint extension\n  has been made explicit.\n\nFixes gh-11428\nFixes gh-11581\n","date":"2018-01-20 12:44:24","modifiedFileCount":"63","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-01-20 08:01:50","codes":[{"authorDate":"2018-01-20 08:01:50","commitOrder":2,"curCode":"\tprivate void load(Function<String, Long> timeToLive, PathMapper endpointPathMapper,\n\t\t\tClass<?> configuration, Consumer<WebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(context,\n\t\t\t\t\tparameterMapper, mediaTypes, endpointPathMapper,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","date":"2018-01-20 12:44:24","endLine":277,"groupId":"1003","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"load","params":"(Function<String@Long>timeToLive@PathMapperendpointPathMapper@Class<?>configuration@Consumer<WebEndpointDiscoverer>consumer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1c/99c331316e6e382f8e82d83bcc83ccf1776d4a.src","preCode":"\tprivate void load(Function<String, Long> timeToLive, PathMapper endpointPathMapper,\n\t\t\tClass<?> configuration, Consumer<WebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(context,\n\t\t\t\t\tparameterMapper, mediaTypes, endpointPathMapper,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/WebEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"MB"},{"authorDate":"2018-01-20 08:01:50","commitOrder":2,"curCode":"\tprivate void load(Function<String, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<CloudFoundryWebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tCloudFoundryWebEndpointDiscoverer discoverer = new CloudFoundryWebEndpointDiscoverer(\n\t\t\t\t\tcontext, parameterMapper, mediaTypes, endpointPathMapper,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","date":"2018-01-20 12:44:24","endLine":91,"groupId":"1003","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"load","params":"(Function<String@Long>timeToLive@PathMapperendpointPathMapper@Class<?>configuration@Consumer<CloudFoundryWebEndpointDiscoverer>consumer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/fdbb28e92e3a52c9f1b31f305841fbcdb18b8e.src","preCode":"\tprivate void load(Function<String, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<CloudFoundryWebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tCloudFoundryWebEndpointDiscoverer discoverer = new CloudFoundryWebEndpointDiscoverer(\n\t\t\t\t\tcontext, parameterMapper, mediaTypes, endpointPathMapper,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"MB"}],"commitId":"340ef52f7814737c41ac13973cd864327938d553","commitMessage":"@@@Refactor endpoint path concerns\n\nCreate a `PathMappedEndpoint` interface that allows any `ExposedEndpoint`\nto provide root path details. The `EndpointPathResolver` interface has\nbeen renamed to `PathMapper` and is now only used during endpoint\ndiscovery.\n\n`EndpointPathProvider` has been replaced with `PathMappedEndpoints`\nwhich simply finds relevant path mapped endpoints.\n\nFixes gh-10985\n","date":"2018-01-20 12:44:24","modifiedFileCount":"21","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-10-15 04:53:28","codes":[{"authorDate":"2018-10-15 04:53:28","commitOrder":3,"curCode":"\tprivate void load(Function<EndpointId, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<WebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(context,\n\t\t\t\t\tparameterMapper, mediaTypes, endpointPathMapper,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","date":"2018-10-15 04:53:28","endLine":271,"groupId":"1003","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"load","params":"(Function<EndpointId@Long>timeToLive@PathMapperendpointPathMapper@Class<?>configuration@Consumer<WebEndpointDiscoverer>consumer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bf/0a91ca1423ca6c6602eb804829e29f9eb217b9.src","preCode":"\tprivate void load(Function<String, Long> timeToLive, PathMapper endpointPathMapper,\n\t\t\tClass<?> configuration, Consumer<WebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(context,\n\t\t\t\t\tparameterMapper, mediaTypes, endpointPathMapper,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/WebEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":251,"status":"M"},{"authorDate":"2018-10-15 04:53:28","commitOrder":3,"curCode":"\tprivate void load(Function<EndpointId, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<CloudFoundryWebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tCloudFoundryWebEndpointDiscoverer discoverer = new CloudFoundryWebEndpointDiscoverer(\n\t\t\t\t\tcontext, parameterMapper, mediaTypes, endpointPathMapper,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","date":"2018-10-15 04:53:28","endLine":106,"groupId":"1003","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"load","params":"(Function<EndpointId@Long>timeToLive@PathMapperendpointPathMapper@Class<?>configuration@Consumer<CloudFoundryWebEndpointDiscoverer>consumer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2d/dc0457e2ab77df871899a5f6a150eebcf2b292.src","preCode":"\tprivate void load(Function<String, Long> timeToLive, PathMapper endpointPathMapper,\n\t\t\tClass<?> configuration,\n\t\t\tConsumer<CloudFoundryWebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tCloudFoundryWebEndpointDiscoverer discoverer = new CloudFoundryWebEndpointDiscoverer(\n\t\t\t\t\tcontext, parameterMapper, mediaTypes, endpointPathMapper,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"1bf97e9b5e2187a04d8471ead73b629444ecc838","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-10-15 04:53:28","modifiedFileCount":"66","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-10-16 06:41:36","codes":[{"authorDate":"2018-10-16 06:41:36","commitOrder":4,"curCode":"\tprivate void load(Function<EndpointId, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<WebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(context,\n\t\t\t\t\tparameterMapper, mediaTypes,\n\t\t\t\t\tCollections.singletonList(endpointPathMapper),\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","date":"2018-10-16 09:25:42","endLine":273,"groupId":"8299","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"load","params":"(Function<EndpointId@Long>timeToLive@PathMapperendpointPathMapper@Class<?>configuration@Consumer<WebEndpointDiscoverer>consumer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/32/34829b4962aa4ec7753bd2268dcf306cdb4e09.src","preCode":"\tprivate void load(Function<EndpointId, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<WebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(context,\n\t\t\t\t\tparameterMapper, mediaTypes, endpointPathMapper,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/WebEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"},{"authorDate":"2018-10-16 06:41:36","commitOrder":4,"curCode":"\tprivate void load(Function<EndpointId, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<CloudFoundryWebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tCloudFoundryWebEndpointDiscoverer discoverer = new CloudFoundryWebEndpointDiscoverer(\n\t\t\t\t\tcontext, parameterMapper, mediaTypes,\n\t\t\t\t\tCollections.singletonList(endpointPathMapper),\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","date":"2018-10-16 09:25:42","endLine":107,"groupId":"8299","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"load","params":"(Function<EndpointId@Long>timeToLive@PathMapperendpointPathMapper@Class<?>configuration@Consumer<CloudFoundryWebEndpointDiscoverer>consumer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/37/4a2f2433fe1723f4e28acd0121d60580666c0f.src","preCode":"\tprivate void load(Function<EndpointId, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<CloudFoundryWebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tCloudFoundryWebEndpointDiscoverer discoverer = new CloudFoundryWebEndpointDiscoverer(\n\t\t\t\t\tcontext, parameterMapper, mediaTypes, endpointPathMapper,\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"6b37d874975cec8c903360074f9c9342d9b5deb9","commitMessage":"@@@Allow multiple endpoint PathMapper beans\n\nUpdate `WebEndpointDiscoverer` and related classes to that multiple\n`PathMapper` beans can be registered. Mappers are now tried in order\nuntil one returns a non-null value.\n\nCloses gh-14841\n","date":"2018-10-16 09:25:42","modifiedFileCount":"24","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-12-10 16:06:13","codes":[{"authorDate":"2018-12-10 16:06:13","commitOrder":5,"curCode":"\tprivate void load(Function<EndpointId, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<WebEndpointDiscoverer> consumer) {\n\t\ttry (AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration)) {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(context,\n\t\t\t\t\tparameterMapper, mediaTypes,\n\t\t\t\t\tCollections.singletonList(endpointPathMapper),\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t}\n","date":"2018-12-10 16:06:13","endLine":269,"groupId":"10443","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"load","params":"(Function<EndpointId@Long>timeToLive@PathMapperendpointPathMapper@Class<?>configuration@Consumer<WebEndpointDiscoverer>consumer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/30/0f7a4f1c769f062ccd8aff174e7a5f953a8b57.src","preCode":"\tprivate void load(Function<EndpointId, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<WebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(context,\n\t\t\t\t\tparameterMapper, mediaTypes,\n\t\t\t\t\tCollections.singletonList(endpointPathMapper),\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/WebEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"},{"authorDate":"2018-12-10 16:06:13","commitOrder":5,"curCode":"\tprivate void load(Function<EndpointId, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<CloudFoundryWebEndpointDiscoverer> consumer) {\n\t\ttry (AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration)) {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tCloudFoundryWebEndpointDiscoverer discoverer = new CloudFoundryWebEndpointDiscoverer(\n\t\t\t\t\tcontext, parameterMapper, mediaTypes,\n\t\t\t\t\tCollections.singletonList(endpointPathMapper),\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t}\n","date":"2018-12-10 16:06:13","endLine":103,"groupId":"10443","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"load","params":"(Function<EndpointId@Long>timeToLive@PathMapperendpointPathMapper@Class<?>configuration@Consumer<CloudFoundryWebEndpointDiscoverer>consumer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8a/3f81c8f90876d5e1b803a0d3fbb8fa75d4952c.src","preCode":"\tprivate void load(Function<EndpointId, Long> timeToLive,\n\t\t\tPathMapper endpointPathMapper, Class<?> configuration,\n\t\t\tConsumer<CloudFoundryWebEndpointDiscoverer> consumer) {\n\t\tAnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n\t\t\t\tconfiguration);\n\t\ttry {\n\t\t\tConversionServiceParameterValueMapper parameterMapper = new ConversionServiceParameterValueMapper(\n\t\t\t\t\tDefaultConversionService.getSharedInstance());\n\t\t\tEndpointMediaTypes mediaTypes = new EndpointMediaTypes(\n\t\t\t\t\tCollections.singletonList(\"application/json\"),\n\t\t\t\t\tCollections.singletonList(\"application/json\"));\n\t\t\tCloudFoundryWebEndpointDiscoverer discoverer = new CloudFoundryWebEndpointDiscoverer(\n\t\t\t\t\tcontext, parameterMapper, mediaTypes,\n\t\t\t\t\tCollections.singletonList(endpointPathMapper),\n\t\t\t\t\tCollections.singleton(new CachingOperationInvokerAdvisor(timeToLive)),\n\t\t\t\t\tCollections.emptyList());\n\t\t\tconsumer.accept(discoverer);\n\t\t}\n\t\tfinally {\n\t\t\tcontext.close();\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"83de570f33309b7bd600d851be1ef00328a88eb2","commitMessage":"@@@Merge pull request #15427 from igor-suhorukov\n\n* pr/15427:\n  Simplify code by using try-with-resources statement\n","date":"2018-12-10 16:06:13","modifiedFileCount":"3","status":"M","submitter":"Stephane Nicoll"}]
