[{"authorTime":"2018-01-30 03:51:50","codes":[{"authorDate":"2018-01-30 03:51:50","commitOrder":1,"curCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() throws Exception {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tdoAnswer(new Answer<Void>() {\n\n\t\t\t@Override\n\t\t\tpublic Void answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tassertThat(((Context) invocation.getArguments()[0]).getParent())\n\t\t\t\t\t\t.isNotNull();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}).when(customizer).customize(any(Context.class));\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer();\n\t\tverify(customizer).customize(any(Context.class));\n\t}\n","date":"2018-01-30 03:51:50","endLine":166,"groupId":"543","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"contextIsAddedToHostBeforeCustomizersAreCalled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e8/335c8aca0d8e4ddc6a33013b5e1fc373a466d2.src","preCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() throws Exception {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tdoAnswer(new Answer<Void>() {\n\n\t\t\t@Override\n\t\t\tpublic Void answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tassertThat(((Context) invocation.getArguments()[0]).getParent())\n\t\t\t\t\t\t.isNotNull();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}).when(customizer).customize(any(Context.class));\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer();\n\t\tverify(customizer).customize(any(Context.class));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"B"},{"authorDate":"2018-01-30 03:51:50","commitOrder":1,"curCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() throws Exception {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tdoAnswer(new Answer<Void>() {\n\n\t\t\t@Override\n\t\t\tpublic Void answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tassertThat(((Context) invocation.getArguments()[0]).getParent())\n\t\t\t\t\t\t.isNotNull();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}).when(customizer).customize(any(Context.class));\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tverify(customizer).customize(any(Context.class));\n\t}\n","date":"2018-01-30 03:51:50","endLine":88,"groupId":"543","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"contextIsAddedToHostBeforeCustomizersAreCalled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/68/db29755a3b62b37a48e9575048801ed70cc642.src","preCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() throws Exception {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tdoAnswer(new Answer<Void>() {\n\n\t\t\t@Override\n\t\t\tpublic Void answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tassertThat(((Context) invocation.getArguments()[0]).getParent())\n\t\t\t\t\t\t.isNotNull();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}).when(customizer).customize(any(Context.class));\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tverify(customizer).customize(any(Context.class));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"244a287484d15ac82789c10ca7c0c880c58d4a73","commitMessage":"@@@Merge branch '1.5.x'\n","date":"2018-01-30 03:51:50","modifiedFileCount":"7","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2018-01-30 04:16:55","codes":[{"authorDate":"2018-01-30 04:16:55","commitOrder":2,"curCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() throws Exception {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\twillAnswer(new Answer<Void>() {\n\n\t\t\t@Override\n\t\t\tpublic Void answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tassertThat(((Context) invocation.getArguments()[0]).getParent())\n\t\t\t\t\t\t.isNotNull();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}).given(customizer).customize(any(Context.class));\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer();\n\t\tverify(customizer).customize(any(Context.class));\n\t}\n","date":"2018-01-30 04:16:55","endLine":166,"groupId":"543","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"contextIsAddedToHostBeforeCustomizersAreCalled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a5/33f8cc27b6fce48139e8af91cad915bb16cab3.src","preCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() throws Exception {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tdoAnswer(new Answer<Void>() {\n\n\t\t\t@Override\n\t\t\tpublic Void answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tassertThat(((Context) invocation.getArguments()[0]).getParent())\n\t\t\t\t\t\t.isNotNull();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}).when(customizer).customize(any(Context.class));\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer();\n\t\tverify(customizer).customize(any(Context.class));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2018-01-30 04:16:55","commitOrder":2,"curCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() throws Exception {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\twillAnswer(new Answer<Void>() {\n\n\t\t\t@Override\n\t\t\tpublic Void answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tassertThat(((Context) invocation.getArguments()[0]).getParent())\n\t\t\t\t\t\t.isNotNull();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}).given(customizer).customize(any(Context.class));\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tverify(customizer).customize(any(Context.class));\n\t}\n","date":"2018-01-30 04:16:55","endLine":88,"groupId":"543","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"contextIsAddedToHostBeforeCustomizersAreCalled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/48/e3b2fe10aa125f10345b32a6261b6d3d6f1468.src","preCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() throws Exception {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tdoAnswer(new Answer<Void>() {\n\n\t\t\t@Override\n\t\t\tpublic Void answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tassertThat(((Context) invocation.getArguments()[0]).getParent())\n\t\t\t\t\t\t.isNotNull();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}).when(customizer).customize(any(Context.class));\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tverify(customizer).customize(any(Context.class));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"f5102516fabacaae6d20b03bd9f77f3ca0d85f10","commitMessage":"@@@Merge branch '1.5.x'\n","date":"2018-01-30 04:16:55","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2018-02-26 16:37:36","codes":[{"authorDate":"2018-02-26 16:37:36","commitOrder":3,"curCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer();\n\t\tArgumentCaptor<Context> contextCaptor = ArgumentCaptor.forClass(Context.class);\n\t\tverify(customizer).customize(contextCaptor.capture());\n\t\tassertThat(contextCaptor.getValue().getParent()).isNotNull();\n\t}\n","date":"2018-02-26 16:37:36","endLine":156,"groupId":"6041","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"contextIsAddedToHostBeforeCustomizersAreCalled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/04/9e38c4c3c362c96078786b5c4ff5bab2f50b82.src","preCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() throws Exception {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\twillAnswer(new Answer<Void>() {\n\n\t\t\t@Override\n\t\t\tpublic Void answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tassertThat(((Context) invocation.getArguments()[0]).getParent())\n\t\t\t\t\t\t.isNotNull();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}).given(customizer).customize(any(Context.class));\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer();\n\t\tverify(customizer).customize(any(Context.class));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2018-02-26 16:37:36","commitOrder":3,"curCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tArgumentCaptor<Context> contextCaptor = ArgumentCaptor.forClass(Context.class);\n\t\tverify(customizer).customize(contextCaptor.capture());\n\t\tassertThat(contextCaptor.getValue().getParent()).isNotNull();\n\t}\n","date":"2018-02-26 16:37:36","endLine":78,"groupId":"10593","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"contextIsAddedToHostBeforeCustomizersAreCalled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/33/33ae1f187ca2f482e44c9a77b60cda41470a52.src","preCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() throws Exception {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\twillAnswer(new Answer<Void>() {\n\n\t\t\t@Override\n\t\t\tpublic Void answer(InvocationOnMock invocation) throws Throwable {\n\t\t\t\tassertThat(((Context) invocation.getArguments()[0]).getParent())\n\t\t\t\t\t\t.isNotNull();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t}).given(customizer).customize(any(Context.class));\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tverify(customizer).customize(any(Context.class));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"8755b4a5476b7b8d7c1715d721d0ea468676e0f5","commitMessage":"@@@Merge pull request #12203 from dreis2211:polish-tomcat-tests\n\n* pr/12203:\n  Polish argument capturing in two Tomcat tests\n","date":"2018-02-26 16:37:36","modifiedFileCount":"2","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid contextIsAddedToHostBeforeCustomizersAreCalled() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer();\n\t\tArgumentCaptor<Context> contextCaptor = ArgumentCaptor.forClass(Context.class);\n\t\tverify(customizer).customize(contextCaptor.capture());\n\t\tassertThat(contextCaptor.getValue().getParent()).isNotNull();\n\t}\n","date":"2019-06-07 19:25:54","endLine":176,"groupId":"102047","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"contextIsAddedToHostBeforeCustomizersAreCalled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/88/87e1c6c34af0369ec64d0f0d0b57de4bfc8798.src","preCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer();\n\t\tArgumentCaptor<Context> contextCaptor = ArgumentCaptor.forClass(Context.class);\n\t\tverify(customizer).customize(contextCaptor.capture());\n\t\tassertThat(contextCaptor.getValue().getParent()).isNotNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid contextIsAddedToHostBeforeCustomizersAreCalled() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tArgumentCaptor<Context> contextCaptor = ArgumentCaptor.forClass(Context.class);\n\t\tverify(customizer).customize(contextCaptor.capture());\n\t\tassertThat(contextCaptor.getValue().getParent()).isNotNull();\n\t}\n","date":"2019-06-07 19:25:54","endLine":81,"groupId":"102047","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"contextIsAddedToHostBeforeCustomizersAreCalled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f2/07050aedf626955c2dfde55c58679a52173df4.src","preCode":"\tpublic void contextIsAddedToHostBeforeCustomizersAreCalled() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tTomcatContextCustomizer customizer = mock(TomcatContextCustomizer.class);\n\t\tfactory.addContextCustomizers(customizer);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tArgumentCaptor<Context> contextCaptor = ArgumentCaptor.forClass(Context.class);\n\t\tverify(customizer).customize(contextCaptor.capture());\n\t\tassertThat(contextCaptor.getValue().getParent()).isNotNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
