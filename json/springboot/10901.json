[{"authorTime":"2018-10-13 17:58:20","codes":[{"authorDate":"2019-05-04 04:42:04","commitOrder":4,"curCode":"\tpublic void backsOffWhenDisabled() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(CustomAuditEventRepositoryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"management.auditevents.enabled=false\")\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(AuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthenticationAuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthorizationAuditListener.class));\n\t}\n","date":"2019-05-04 04:48:29","endLine":110,"groupId":"7708","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"backsOffWhenDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ad/695960792af2681d1042f82e77d3095399b90d.src","preCode":"\tpublic void backsOffWhenDisabled() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(CustomAuditEventRepositoryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"management.auditevents.enabled=false\")\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(AuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthenticationAuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthorizationAuditListener.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"},{"authorDate":"2018-10-13 17:58:20","commitOrder":4,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class,\n\t\t\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tcontext.publishEvent(\n\t\t\t\t\t\t\t\t\tnew ApplicationStartedEvent(new SpringApplication(),\n\t\t\t\t\t\t\t\t\t\t\tnull, context.getSourceApplicationContext()));\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = context\n\t\t\t\t\t\t\t\t\t.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2018-10-13 18:52:51","endLine":74,"groupId":"5514","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9c/e083fa607f0c66235f24dbcb854bbfa3e524fa.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class,\n\t\t\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tcontext.publishEvent(\n\t\t\t\t\t\t\t\t\tnew ApplicationStartedEvent(new SpringApplication(),\n\t\t\t\t\t\t\t\t\t\t\tnull, context.getSourceApplicationContext()));\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = context\n\t\t\t\t\t\t\t\t\t.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"NB"}],"commitId":"07d6eb6397d5362db6917c134f0190d76a0c5fb6","commitMessage":"@@@Disable auditing infrastructure by default\n\nPrior to this commit.  the audit auto-configuration provided\nan `InMemoryAuditEventRepository` bean. This commit changes the auto-config\nso that an `AuditEventRepository` is not provided and instead the auto-config\nis conditional on the presence of a `AuditEventRepository` bean. This is done\nto encourage the use of a custom implementation of `AuditEventRepository`\nsince the in-memory one is quite limited and not suitable for production.\nA flag is available if the auto-configuration needs to be turned off even\nin the presence of a bean.\n\nCloses gh-16110\n","date":"2019-05-04 04:48:29","modifiedFileCount":"5","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-05-22 00:00:53","codes":[{"authorDate":"2019-05-04 04:42:04","commitOrder":5,"curCode":"\tpublic void backsOffWhenDisabled() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(CustomAuditEventRepositoryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"management.auditevents.enabled=false\")\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(AuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthenticationAuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthorizationAuditListener.class));\n\t}\n","date":"2019-05-04 04:48:29","endLine":110,"groupId":"7708","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"backsOffWhenDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ad/695960792af2681d1042f82e77d3095399b90d.src","preCode":"\tpublic void backsOffWhenDisabled() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(CustomAuditEventRepositoryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"management.auditevents.enabled=false\")\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(AuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthenticationAuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthorizationAuditListener.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"},{"authorDate":"2019-05-22 00:00:53","commitOrder":5,"curCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class,\n\t\t\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\")\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tcontext.publishEvent(\n\t\t\t\t\t\t\t\t\tnew ApplicationStartedEvent(new SpringApplication(),\n\t\t\t\t\t\t\t\t\t\t\tnull, context.getSourceApplicationContext()));\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = context\n\t\t\t\t\t\t\t\t\t.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","date":"2019-05-28 22:21:31","endLine":80,"groupId":"5514","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/56/e9b5dd347de50c8c4e7dfec3cd9e878bd186ed.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tnew WebApplicationContextRunner(\n\t\t\t\tAnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t\t\t.withConfiguration(AutoConfigurations.of(\n\t\t\t\t\t\t\t\tTomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class,\n\t\t\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t\t\t.run((context) -> {\n\t\t\t\t\t\t\tcontext.publishEvent(\n\t\t\t\t\t\t\t\t\tnew ApplicationStartedEvent(new SpringApplication(),\n\t\t\t\t\t\t\t\t\t\t\tnull, context.getSourceApplicationContext()));\n\t\t\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\t\t\tSimpleMeterRegistry registry = context\n\t\t\t\t\t\t\t\t\t.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\t\t\tassertThat(\n\t\t\t\t\t\t\t\t\tregistry.find(\"tomcat.sessions.active.max\").meter())\n\t\t\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter())\n\t\t\t\t\t\t\t\t\t.isNotNull();\n\t\t\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"b603cd5d4b456b8f1ed7b70e5b5d014fad403c6d","commitMessage":"@@@Disable Tomcat's MBean Registry by default\n\nCloses gh-16498\n","date":"2019-05-28 22:21:31","modifiedFileCount":"6","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid backsOffWhenDisabled() {\n\t\tthis.contextRunner.withUserConfiguration(CustomAuditEventRepositoryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"management.auditevents.enabled=false\")\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(AuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthenticationAuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthorizationAuditListener.class));\n\t}\n","date":"2019-06-07 19:25:54","endLine":97,"groupId":"7708","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"backsOffWhenDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/24/6a1041ef44cbfc365513bd31ba7fad80db706f.src","preCode":"\tpublic void backsOffWhenDisabled() {\n\t\tthis.contextRunner.withUserConfiguration(CustomAuditEventRepositoryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"management.auditevents.enabled=false\")\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(AuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthenticationAuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthorizationAuditListener.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":71,"groupId":"5514","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/909ea787ba051710a3503ac83821bdf20f4763.src","preCode":"\tpublic void autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-09-16 20:08:56","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":7,"curCode":"\tvoid backsOffWhenDisabled() {\n\t\tthis.contextRunner.withUserConfiguration(CustomAuditEventRepositoryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"management.auditevents.enabled=false\")\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(AuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthenticationAuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthorizationAuditListener.class));\n\t}\n","date":"2019-06-07 19:25:54","endLine":97,"groupId":"10901","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"backsOffWhenDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/24/6a1041ef44cbfc365513bd31ba7fad80db706f.src","preCode":"\tvoid backsOffWhenDisabled() {\n\t\tthis.contextRunner.withUserConfiguration(CustomAuditEventRepositoryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"management.auditevents.enabled=false\")\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(AuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthenticationAuditListener.class)\n\t\t\t\t\t\t.doesNotHaveBean(AuthorizationAuditListener.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2021-09-16 20:08:56","commitOrder":7,"curCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(createApplicationStartedEvent(context.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","date":"2021-09-16 20:08:57","endLine":71,"groupId":"10901","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e9/5cda900ab4d1b34c6f89a8f240b23097d0e463.src","preCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"ce95e093087d591626762089095705826b5adab8","commitMessage":"@@@Merge pull request #27878 from bono007\n\n* pr/27878:\n  Polish \"Add startup time metrics\"\n  Add startup time metrics\n\nCloses gh-27878\n","date":"2021-09-16 20:08:57","modifiedFileCount":"15","status":"M","submitter":"Stephane Nicoll"}]
