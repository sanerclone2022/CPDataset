[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void addLogFileProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file=target/foo.log\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).startsWith(\"target/foo.log\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":224,"groupId":"8142","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addLogFileProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/18cad9d3d6c7d929cd47660c22b3869a08ba76.src","preCode":"\tpublic void addLogFileProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file=target/foo.log\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).startsWith(\"target/foo.log\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void addLogPathProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.path=target/foo/\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).startsWith(\"target/foo/spring.log\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":249,"groupId":"8142","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addLogPathProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/18cad9d3d6c7d929cd47660c22b3869a08ba76.src","preCode":"\tpublic void addLogPathProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.path=target/foo/\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).startsWith(\"target/foo/spring.log\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-04-04 21:15:52","codes":[{"authorDate":"2018-04-04 21:15:52","commitOrder":2,"curCode":"\tpublic void addLogFileProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file=target/foo.log\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(\"target/foo.log\");\n\t}\n","date":"2018-04-04 21:15:52","endLine":223,"groupId":"10872","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addLogFileProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f0/5cb1f5ec75d544eb4a689ecf555f90e4918e5d.src","preCode":"\tpublic void addLogFileProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file=target/foo.log\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).startsWith(\"target/foo.log\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"M"},{"authorDate":"2018-04-04 21:15:52","commitOrder":2,"curCode":"\tpublic void addLogPathProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.path=target/foo/\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(\"target/foo/spring.log\");\n\t}\n","date":"2018-04-04 21:15:52","endLine":250,"groupId":"10872","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addLogPathProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f0/5cb1f5ec75d544eb4a689ecf555f90e4918e5d.src","preCode":"\tpublic void addLogPathProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.path=target/foo/\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().trim();\n\t\tassertThat(output).startsWith(\"target/foo/spring.log\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"}],"commitId":"e44bfbea4a357dd443cd680e87a678e3e15fb923","commitMessage":"@@@Merge branch '1.5.x'\n","date":"2018-04-04 21:15:52","modifiedFileCount":"1","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2018-12-03 17:42:44","codes":[{"authorDate":"2018-12-03 17:42:44","commitOrder":3,"curCode":"\tpublic void addLogFileProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.name=target/foo.log\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(\"target/foo.log\");\n\t}\n","date":"2018-12-03 17:42:44","endLine":225,"groupId":"10872","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addLogFileProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d5/66e8d40c9b572f433a4d969a1caf6cca3301ad.src","preCode":"\tpublic void addLogFileProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file=target/foo.log\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(\"target/foo.log\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"M"},{"authorDate":"2018-12-03 17:42:44","commitOrder":3,"curCode":"\tpublic void addLogPathProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.path=target/foo/\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(\"target/foo/spring.log\");\n\t}\n","date":"2018-12-03 17:42:44","endLine":281,"groupId":"10872","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addLogPathProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d5/66e8d40c9b572f433a4d969a1caf6cca3301ad.src","preCode":"\tpublic void addLogPathProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.path=target/foo/\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(\"target/foo/spring.log\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"M"}],"commitId":"389ab9579f30c8ebb4b6f87ca3bf4dc6da792625","commitMessage":"@@@Merge pull request #15089 from TwinProduction\n\n* pr/15089:\n  Polish \"Rename logging.file to logging.file.name\"\n  Rename logging.file to logging.file.name\n","date":"2018-12-03 17:42:44","modifiedFileCount":"11","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-12-15 01:50:20","codes":[{"authorDate":"2018-12-15 01:50:20","commitOrder":4,"curCode":"\tpublic void addLogFileProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.name=\" + this.logFile);\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(this.logFile.getAbsolutePath());\n\t}\n","date":"2018-12-15 01:50:20","endLine":234,"groupId":"10872","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"addLogFileProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1a/951789b02b42db1fbaf7d1fb2b67904955ef26.src","preCode":"\tpublic void addLogFileProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.name=target/foo.log\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(\"target/foo.log\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"},{"authorDate":"2018-12-15 01:50:20","commitOrder":4,"curCode":"\tpublic void addLogPathProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.path=\" + this.logFile);\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(this.logFile.getAbsolutePath());\n\t}\n","date":"2018-12-15 01:50:20","endLine":290,"groupId":"10872","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"addLogPathProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1a/951789b02b42db1fbaf7d1fb2b67904955ef26.src","preCode":"\tpublic void addLogPathProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.path=target/foo/\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(\"target/foo/spring.log\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"M"}],"commitId":"61d04db0d7cbde5a17f0d3b0b3b59e1c7b123393","commitMessage":"@@@Minimize and centralize assumptions about build output\n\nCloses gh-15471\n","date":"2018-12-15 01:50:20","modifiedFileCount":"49","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2018-12-17 20:30:04","codes":[{"authorDate":"2018-12-17 20:30:04","commitOrder":5,"curCode":"\tpublic void addLogFileProperty() {\n\t\taddPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.name=\" + this.logFile);\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(this.logFile.getAbsolutePath());\n\t}\n","date":"2018-12-17 22:02:10","endLine":234,"groupId":"10872","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"addLogFileProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/53/0964a5d80ed7f0bfc9dd2763135fddd805ca75.src","preCode":"\tpublic void addLogFileProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.name=\" + this.logFile);\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(this.logFile.getAbsolutePath());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"},{"authorDate":"2018-12-17 20:30:04","commitOrder":5,"curCode":"\tpublic void addLogPathProperty() {\n\t\taddPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.path=\" + this.temp.getRoot());\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(\n\t\t\t\tnew File(this.temp.getRoot(), \"spring.log\").getAbsolutePath());\n\t}\n","date":"2018-12-17 22:02:10","endLine":289,"groupId":"10872","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"addLogPathProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/53/0964a5d80ed7f0bfc9dd2763135fddd805ca75.src","preCode":"\tpublic void addLogPathProperty() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.path=\" + this.logFile);\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length())\n\t\t\t\t.trim();\n\t\tassertThat(output).startsWith(this.logFile.getAbsolutePath());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"M"}],"commitId":"6adccbfd3049129cc6b17ea1bb45d059ca8e32be","commitMessage":"@@@Make LoggingApplicationListener and tests more robust on Windows\n\nPreviously.  LoggingApplicationListener its tests.  and LogFile made some\nassumptions that do not hold true on Windows. Specifically. \nLoggingApplicationListenerTests used TestPropertySourceUtils to add\nproperties to the environment. This uses Java's standard Properties\nparsing which does a poor job of handling Windows file paths (Strings\nwith backslashes in them). Secondly.  LogFile made assumptions about\nthe use of forward clashes for the file separator.\n\nThis commit replaces the use of TestPropertySourceUtils and removes\nthe assumption about the OS's file separator.\n\nCloses gh-15471\n","date":"2018-12-17 22:02:10","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-15 01:07:47","codes":[{"authorDate":"2019-07-15 01:07:47","commitOrder":6,"curCode":"\tpublic void addLogFileProperty() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.name=\" + this.logFile);\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.output.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.output.toString().substring(existingOutput.length()).trim();\n\t\tassertThat(output).startsWith(this.logFile.getAbsolutePath());\n\t}\n","date":"2019-07-15 07:24:18","endLine":221,"groupId":"15048","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"addLogFileProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a1/584b4388f56ca0a16f3352d5f5c806e5fb3af5.src","preCode":"\tpublic void addLogFileProperty() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.name=\" + this.logFile);\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length()).trim();\n\t\tassertThat(output).startsWith(this.logFile.getAbsolutePath());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"M"},{"authorDate":"2019-07-15 01:07:47","commitOrder":6,"curCode":"\tpublic void addLogPathProperty() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.path=\" + this.temp.getRoot());\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.output.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.output.toString().substring(existingOutput.length()).trim();\n\t\tassertThat(output).startsWith(new File(this.temp.getRoot(), \"spring.log\").getAbsolutePath());\n\t}\n","date":"2019-07-15 07:24:18","endLine":267,"groupId":"15048","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"addLogPathProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a1/584b4388f56ca0a16f3352d5f5c806e5fb3af5.src","preCode":"\tpublic void addLogPathProperty() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.path=\" + this.temp.getRoot());\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.outputCapture.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.outputCapture.toString().substring(existingOutput.length()).trim();\n\t\tassertThat(output).startsWith(new File(this.temp.getRoot(), \"spring.log\").getAbsolutePath());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"M"}],"commitId":"c3816bfe7be8cc1a042396b2b7d8d236aa585c52","commitMessage":"@@@Polish output capture names\n","date":"2019-07-15 07:24:18","modifiedFileCount":"73","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-07-15 07:34:21","codes":[{"authorDate":"2019-07-15 07:34:21","commitOrder":7,"curCode":"\tvoid addLogFileProperty() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.name=\" + this.logFile);\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.output.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.output.toString().substring(existingOutput.length()).trim();\n\t\tassertThat(output).startsWith(this.logFile.getAbsolutePath());\n\t}\n","date":"2019-07-15 07:34:21","endLine":212,"groupId":"101223","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"addLogFileProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/74bfda6c8921743ec2d6bfb35093b3c6b0c9f5.src","preCode":"\tpublic void addLogFileProperty() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.name=\" + this.logFile);\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.output.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.output.toString().substring(existingOutput.length()).trim();\n\t\tassertThat(output).startsWith(this.logFile.getAbsolutePath());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"},{"authorDate":"2019-07-15 07:34:21","commitOrder":7,"curCode":"\tvoid addLogPathProperty() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.path=\" + this.tempDir);\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.output.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.output.toString().substring(existingOutput.length()).trim();\n\t\tassertThat(output).startsWith(new File(this.tempDir.toFile(), \"spring.log\").getAbsolutePath());\n\t}\n","date":"2019-07-15 07:34:21","endLine":257,"groupId":"101223","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"addLogPathProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/74bfda6c8921743ec2d6bfb35093b3c6b0c9f5.src","preCode":"\tpublic void addLogPathProperty() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.config=classpath:logback-nondefault.xml\",\n\t\t\t\t\"logging.file.path=\" + this.temp.getRoot());\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tLog logger = LogFactory.getLog(LoggingApplicationListenerTests.class);\n\t\tString existingOutput = this.output.toString();\n\t\tlogger.info(\"Hello world\");\n\t\tString output = this.output.toString().substring(existingOutput.length()).trim();\n\t\tassertThat(output).startsWith(new File(this.temp.getRoot(), \"spring.log\").getAbsolutePath());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"M"}],"commitId":"4b744bdfd1a74f29505fc191cc00c7a75a467041","commitMessage":"@@@Merge pull request #17491 from dreis2211\n\n* pr/17491:\n  Delete ModifiedClassPathRunner\n  Polish ModifiedClassPath support\n  Migrate ModifiedClassPath tests to JUnit 5\n  Add JUnit 5 ModifiedClassPathExtension\n  Extract ModifiedClassPathClass logic\n  Migrate to MockRestServiceServer\n  Polish LoggingApplicationListenerTests\n  Migrate to ApplicationContextRunner\n\nCloses gh-17491\n","date":"2019-07-15 07:34:21","modifiedFileCount":"38","status":"M","submitter":"Phillip Webb"}]
