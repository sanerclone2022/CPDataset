[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void commandLinePropertySourceEnhancesEnvironment() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tenvironment.getPropertySources().addFirst(new MapPropertySource(\"commandLineArgs\",\n\t\t\t\tCollections.<String, Object>singletonMap(\"foo\", \"original\")));\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run(\"--foo=bar\", \"--bar=foo\");\n\t\tassertThat(environment).has(\n\t\t\t\tmatchingPropertySource(CompositePropertySource.class, \"commandLineArgs\"));\n\t\tassertThat(environment.getProperty(\"bar\")).isEqualTo(\"foo\");\n\t\t\r\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tCompositePropertySource composite = (CompositePropertySource) environment\n\t\t\t\t.getPropertySources().get(\"commandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).hasSize(2);\n\t\tassertThat(composite.getPropertySources()).first().matches(\n\t\t\t\t(source) -> source.getName().equals(\"springApplicationCommandLineArgs\"),\n\t\t\t\t\"is named springApplicationCommandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).element(1).matches(\n\t\t\t\t(source) -> source.getName().equals(\"commandLineArgs\"),\n\t\t\t\t\"is named commandLineArgs\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":505,"groupId":"2193","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"commandLinePropertySourceEnhancesEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fa/493d81f5e428b159f4a804648dffee325268c7.src","preCode":"\tpublic void commandLinePropertySourceEnhancesEnvironment() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tenvironment.getPropertySources().addFirst(new MapPropertySource(\"commandLineArgs\",\n\t\t\t\tCollections.<String, Object>singletonMap(\"foo\", \"original\")));\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run(\"--foo=bar\", \"--bar=foo\");\n\t\tassertThat(environment).has(\n\t\t\t\tmatchingPropertySource(CompositePropertySource.class, \"commandLineArgs\"));\n\t\tassertThat(environment.getProperty(\"bar\")).isEqualTo(\"foo\");\n\t\t\r\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tCompositePropertySource composite = (CompositePropertySource) environment\n\t\t\t\t.getPropertySources().get(\"commandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).hasSize(2);\n\t\tassertThat(composite.getPropertySources()).first().matches(\n\t\t\t\t(source) -> source.getName().equals(\"springApplicationCommandLineArgs\"),\n\t\t\t\t\"is named springApplicationCommandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).element(1).matches(\n\t\t\t\t(source) -> source.getName().equals(\"commandLineArgs\"),\n\t\t\t\t\"is named commandLineArgs\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void propertiesFileEnhancesEnvironment() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run();\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bucket\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":515,"groupId":"9561","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"propertiesFileEnhancesEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fa/493d81f5e428b159f4a804648dffee325268c7.src","preCode":"\tpublic void propertiesFileEnhancesEnvironment() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run();\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bucket\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-24 21:48:49","commitOrder":2,"curCode":"\tpublic void commandLinePropertySourceEnhancesEnvironment() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tenvironment.getPropertySources().addFirst(new MapPropertySource(\"commandLineArgs\",\n\t\t\t\tCollections.singletonMap(\"foo\", \"original\")));\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run(\"--foo=bar\", \"--bar=foo\");\n\t\tassertThat(environment).has(\n\t\t\t\tmatchingPropertySource(CompositePropertySource.class, \"commandLineArgs\"));\n\t\tassertThat(environment.getProperty(\"bar\")).isEqualTo(\"foo\");\n\t\t\r\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tCompositePropertySource composite = (CompositePropertySource) environment\n\t\t\t\t.getPropertySources().get(\"commandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).hasSize(2);\n\t\tassertThat(composite.getPropertySources()).first().matches(\n\t\t\t\t(source) -> source.getName().equals(\"springApplicationCommandLineArgs\"),\n\t\t\t\t\"is named springApplicationCommandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).element(1).matches(\n\t\t\t\t(source) -> source.getName().equals(\"commandLineArgs\"),\n\t\t\t\t\"is named commandLineArgs\");\n\t}\n","date":"2017-10-24 21:48:49","endLine":505,"groupId":"2193","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"commandLinePropertySourceEnhancesEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f4/9334c6550c4b24493b767f04c353779a01d32c.src","preCode":"\tpublic void commandLinePropertySourceEnhancesEnvironment() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tenvironment.getPropertySources().addFirst(new MapPropertySource(\"commandLineArgs\",\n\t\t\t\tCollections.<String, Object>singletonMap(\"foo\", \"original\")));\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run(\"--foo=bar\", \"--bar=foo\");\n\t\tassertThat(environment).has(\n\t\t\t\tmatchingPropertySource(CompositePropertySource.class, \"commandLineArgs\"));\n\t\tassertThat(environment.getProperty(\"bar\")).isEqualTo(\"foo\");\n\t\t\r\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tCompositePropertySource composite = (CompositePropertySource) environment\n\t\t\t\t.getPropertySources().get(\"commandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).hasSize(2);\n\t\tassertThat(composite.getPropertySources()).first().matches(\n\t\t\t\t(source) -> source.getName().equals(\"springApplicationCommandLineArgs\"),\n\t\t\t\t\"is named springApplicationCommandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).element(1).matches(\n\t\t\t\t(source) -> source.getName().equals(\"commandLineArgs\"),\n\t\t\t\t\"is named commandLineArgs\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"M"},{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tpublic void propertiesFileEnhancesEnvironment() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run();\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bucket\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":515,"groupId":"9561","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"propertiesFileEnhancesEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fa/493d81f5e428b159f4a804648dffee325268c7.src","preCode":"\tpublic void propertiesFileEnhancesEnvironment() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run();\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bucket\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"N"}],"commitId":"35c6b83fce86a83e4b2b9ec9fb5cbe0646eb23a5","commitMessage":"@@@Merge pull request #10494 from Johnny Lim\n\n* gh-10494:\n  Polish ?Remove explicit type arguments?\n  Remove explicit type arguments\n","date":"2017-10-24 21:48:49","modifiedFileCount":"61","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void commandLinePropertySourceEnhancesEnvironment() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tenvironment.getPropertySources().addFirst(new MapPropertySource(\"commandLineArgs\",\n\t\t\t\tCollections.singletonMap(\"foo\", \"original\")));\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run(\"--foo=bar\", \"--bar=foo\");\n\t\tassertThat(environment).has(\n\t\t\t\tmatchingPropertySource(CompositePropertySource.class, \"commandLineArgs\"));\n\t\tassertThat(environment.getProperty(\"bar\")).isEqualTo(\"foo\");\n\t\t\r\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tCompositePropertySource composite = (CompositePropertySource) environment\n\t\t\t\t.getPropertySources().get(\"commandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).hasSize(2);\n\t\tassertThat(composite.getPropertySources()).first().matches(\n\t\t\t\t(source) -> source.getName().equals(\"springApplicationCommandLineArgs\"),\n\t\t\t\t\"is named springApplicationCommandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).element(1).matches(\n\t\t\t\t(source) -> source.getName().equals(\"commandLineArgs\"),\n\t\t\t\t\"is named commandLineArgs\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":509,"groupId":"2193","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"commandLinePropertySourceEnhancesEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1e/de3d5a84ed0656d647a5905984c4106b295996.src","preCode":"\tpublic void commandLinePropertySourceEnhancesEnvironment() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tenvironment.getPropertySources().addFirst(new MapPropertySource(\"commandLineArgs\",\n\t\t\t\tCollections.singletonMap(\"foo\", \"original\")));\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run(\"--foo=bar\", \"--bar=foo\");\n\t\tassertThat(environment).has(\n\t\t\t\tmatchingPropertySource(CompositePropertySource.class, \"commandLineArgs\"));\n\t\tassertThat(environment.getProperty(\"bar\")).isEqualTo(\"foo\");\n\t\t\r\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tCompositePropertySource composite = (CompositePropertySource) environment\n\t\t\t\t.getPropertySources().get(\"commandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).hasSize(2);\n\t\tassertThat(composite.getPropertySources()).first().matches(\n\t\t\t\t(source) -> source.getName().equals(\"springApplicationCommandLineArgs\"),\n\t\t\t\t\"is named springApplicationCommandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).element(1).matches(\n\t\t\t\t(source) -> source.getName().equals(\"commandLineArgs\"),\n\t\t\t\t\"is named commandLineArgs\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":487,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void propertiesFileEnhancesEnvironment() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run();\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bucket\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":519,"groupId":"9561","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"propertiesFileEnhancesEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1e/de3d5a84ed0656d647a5905984c4106b295996.src","preCode":"\tpublic void propertiesFileEnhancesEnvironment() throws Exception {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run();\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bucket\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":512,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid commandLinePropertySourceEnhancesEnvironment() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tenvironment.getPropertySources()\n\t\t\t\t.addFirst(new MapPropertySource(\"commandLineArgs\", Collections.singletonMap(\"foo\", \"original\")));\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run(\"--foo=bar\", \"--bar=foo\");\n\t\tassertThat(environment).has(matchingPropertySource(CompositePropertySource.class, \"commandLineArgs\"));\n\t\tassertThat(environment.getProperty(\"bar\")).isEqualTo(\"foo\");\n\t\t\r\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tCompositePropertySource composite = (CompositePropertySource) environment.getPropertySources()\n\t\t\t\t.get(\"commandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).hasSize(2);\n\t\tassertThat(composite.getPropertySources()).first().matches(\n\t\t\t\t(source) -> source.getName().equals(\"springApplicationCommandLineArgs\"),\n\t\t\t\t\"is named springApplicationCommandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).element(1)\n\t\t\t\t.matches((source) -> source.getName().equals(\"commandLineArgs\"), \"is named commandLineArgs\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":520,"groupId":"101852","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"commandLinePropertySourceEnhancesEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/98/b7ed11c647d2d175a7e722635161ed6ad25db5.src","preCode":"\tpublic void commandLinePropertySourceEnhancesEnvironment() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tenvironment.getPropertySources()\n\t\t\t\t.addFirst(new MapPropertySource(\"commandLineArgs\", Collections.singletonMap(\"foo\", \"original\")));\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run(\"--foo=bar\", \"--bar=foo\");\n\t\tassertThat(environment).has(matchingPropertySource(CompositePropertySource.class, \"commandLineArgs\"));\n\t\tassertThat(environment.getProperty(\"bar\")).isEqualTo(\"foo\");\n\t\t\r\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tCompositePropertySource composite = (CompositePropertySource) environment.getPropertySources()\n\t\t\t\t.get(\"commandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).hasSize(2);\n\t\tassertThat(composite.getPropertySources()).first().matches(\n\t\t\t\t(source) -> source.getName().equals(\"springApplicationCommandLineArgs\"),\n\t\t\t\t\"is named springApplicationCommandLineArgs\");\n\t\tassertThat(composite.getPropertySources()).element(1)\n\t\t\t\t.matches((source) -> source.getName().equals(\"commandLineArgs\"), \"is named commandLineArgs\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":500,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid propertiesFileEnhancesEnvironment() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run();\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bucket\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":530,"groupId":"101852","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"propertiesFileEnhancesEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/98/b7ed11c647d2d175a7e722635161ed6ad25db5.src","preCode":"\tpublic void propertiesFileEnhancesEnvironment() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableEnvironment environment = new StandardEnvironment();\n\t\tapplication.setEnvironment(environment);\n\t\tthis.context = application.run();\n\t\tassertThat(environment.getProperty(\"foo\")).isEqualTo(\"bucket\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":523,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
