[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters), this.requestFactory,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthorization,\n\t\t\t\tthis.restTemplateCustomizers, this.requestFactoryCustomizers,\n\t\t\t\tthis.interceptors);\n\t}\n","date":"2017-10-05 11:18:56","endLine":227,"groupId":"514","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"additionalMessageConverters","params":"(Collection<?extendsHttpMessageConverter<?>>messageConverters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/224ee9e1f80ba86fe26b871b4b61509b430db3.src","preCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters), this.requestFactory,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthorization,\n\t\t\t\tthis.restTemplateCustomizers, this.requestFactoryCustomizers,\n\t\t\t\tthis.interceptors);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic RestTemplateBuilder interceptors(\n\t\t\tCollection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, this.requestFactory, this.uriTemplateHandler,\n\t\t\t\tthis.errorHandler, this.basicAuthorization, this.restTemplateCustomizers,\n\t\t\t\tthis.requestFactoryCustomizers,\n\t\t\t\tCollections.unmodifiableSet(new LinkedHashSet<>(interceptors)));\n\t}\n","date":"2017-10-05 11:18:56","endLine":277,"groupId":"3292","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptors","params":"(Collection<ClientHttpRequestInterceptor>interceptors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/224ee9e1f80ba86fe26b871b4b61509b430db3.src","preCode":"\tpublic RestTemplateBuilder interceptors(\n\t\t\tCollection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, this.requestFactory, this.uriTemplateHandler,\n\t\t\t\tthis.errorHandler, this.basicAuthorization, this.restTemplateCustomizers,\n\t\t\t\tthis.requestFactoryCustomizers,\n\t\t\t\tCollections.unmodifiableSet(new LinkedHashSet<>(interceptors)));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-01-05 22:00:12","codes":[{"authorDate":"2018-01-05 22:00:12","commitOrder":2,"curCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters), this.requestFactorySupplier,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthorization,\n\t\t\t\tthis.restTemplateCustomizers, this.requestFactoryCustomizers,\n\t\t\t\tthis.interceptors);\n\t}\n","date":"2018-01-05 23:29:18","endLine":228,"groupId":"1737","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"additionalMessageConverters","params":"(Collection<?extendsHttpMessageConverter<?>>messageConverters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c0/a264d3c17c04afc9e893af1520cb67d41b477b.src","preCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters), this.requestFactory,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthorization,\n\t\t\t\tthis.restTemplateCustomizers, this.requestFactoryCustomizers,\n\t\t\t\tthis.interceptors);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2018-01-05 22:00:12","commitOrder":2,"curCode":"\tpublic RestTemplateBuilder interceptors(\n\t\t\tCollection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, this.requestFactorySupplier, this.uriTemplateHandler,\n\t\t\t\tthis.errorHandler, this.basicAuthorization, this.restTemplateCustomizers,\n\t\t\t\tthis.requestFactoryCustomizers,\n\t\t\t\tCollections.unmodifiableSet(new LinkedHashSet<>(interceptors)));\n\t}\n","date":"2018-01-05 23:29:18","endLine":278,"groupId":"5849","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptors","params":"(Collection<ClientHttpRequestInterceptor>interceptors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c0/a264d3c17c04afc9e893af1520cb67d41b477b.src","preCode":"\tpublic RestTemplateBuilder interceptors(\n\t\t\tCollection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, this.requestFactory, this.uriTemplateHandler,\n\t\t\t\tthis.errorHandler, this.basicAuthorization, this.restTemplateCustomizers,\n\t\t\t\tthis.requestFactoryCustomizers,\n\t\t\t\tCollections.unmodifiableSet(new LinkedHashSet<>(interceptors)));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"}],"commitId":"11d4426b4d7455f6eb780dbd566b7dfad2a39ef2","commitMessage":"@@@Provide client factory with supplier in RestTemplateBuilder\n\nThis commit removes\n`RestTemplateBuilder.requestFactory(ClientHttpRequestFactory factory)`\nbecause it can be misleading. This builder class is meant to be\nimmutable.  but calling that method and then timeout related ones will\naffect the `ClientHttpRequestFactory` instance.\n\nInstead.  this method is replaced with a\n`Supplier<ClientHttpRequestFactory>` that is called every time a\n`RestTemplate` is being built.\n\nThat approach may reduce the reusability of request factories.  but it is\nmuch more consistent.\n\nCloses gh-11255\n","date":"2018-01-05 23:29:18","modifiedFileCount":"2","status":"M","submitter":"Brian Clozel"},{"authorTime":"2018-06-05 22:01:38","codes":[{"authorDate":"2018-06-05 22:01:38","commitOrder":3,"curCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters),\n\t\t\t\tthis.requestFactorySupplier, this.uriTemplateHandler, this.errorHandler,\n\t\t\t\tthis.basicAuthorization, this.restTemplateCustomizers,\n\t\t\t\tthis.requestFactoryCustomizer, this.interceptors);\n\t}\n","date":"2018-06-05 22:01:38","endLine":215,"groupId":"1737","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"additionalMessageConverters","params":"(Collection<?extendsHttpMessageConverter<?>>messageConverters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8a/4d2eb6ccf3449dccb9a44d185715c04b130870.src","preCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters),\n\t\t\t\tthis.requestFactorySupplier, this.uriTemplateHandler, this.errorHandler,\n\t\t\t\tthis.basicAuthorization, this.restTemplateCustomizers,\n\t\t\t\tthis.requestFactoryCustomizers, this.interceptors);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"},{"authorDate":"2018-06-05 22:01:38","commitOrder":3,"curCode":"\tpublic RestTemplateBuilder interceptors(\n\t\t\tCollection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, this.requestFactorySupplier,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthorization,\n\t\t\t\tthis.restTemplateCustomizers, this.requestFactoryCustomizer,\n\t\t\t\tCollections.unmodifiableSet(new LinkedHashSet<>(interceptors)));\n\t}\n","date":"2018-06-05 22:01:38","endLine":265,"groupId":"5849","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptors","params":"(Collection<ClientHttpRequestInterceptor>interceptors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8a/4d2eb6ccf3449dccb9a44d185715c04b130870.src","preCode":"\tpublic RestTemplateBuilder interceptors(\n\t\t\tCollection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, this.requestFactorySupplier,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthorization,\n\t\t\t\tthis.restTemplateCustomizers, this.requestFactoryCustomizers,\n\t\t\t\tCollections.unmodifiableSet(new LinkedHashSet<>(interceptors)));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"}],"commitId":"638d4d94f4cebc4fc722873b73565f65cec7cdb1","commitMessage":"@@@Merge pull request #13355 from nosan:duration-instead-of-timeout\n\n* pr/13355:\n  Polish \"Add duration support for setConnectTimeout and setReadTimeout\"\n  Add duration support for setConnectTimeout and setReadTimeout\n  Polish \"Add duration support for setConnectTimout and setReadTimeout\"\n","date":"2018-06-05 22:01:38","modifiedFileCount":"2","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-10-16 16:22:08","codes":[{"authorDate":"2018-10-16 16:22:08","commitOrder":4,"curCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters),\n\t\t\t\tthis.requestFactorySupplier, this.uriTemplateHandler, this.errorHandler,\n\t\t\t\tthis.basicAuthentication, this.restTemplateCustomizers,\n\t\t\t\tthis.requestFactoryCustomizer, this.interceptors);\n\t}\n","date":"2018-10-16 16:22:08","endLine":219,"groupId":"1737","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"additionalMessageConverters","params":"(Collection<?extendsHttpMessageConverter<?>>messageConverters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1b/0ab4c7c5546e2e8c51ff78498dfb9f9319287f.src","preCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters),\n\t\t\t\tthis.requestFactorySupplier, this.uriTemplateHandler, this.errorHandler,\n\t\t\t\tthis.basicAuthorization, this.restTemplateCustomizers,\n\t\t\t\tthis.requestFactoryCustomizer, this.interceptors);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"M"},{"authorDate":"2018-10-16 16:22:08","commitOrder":4,"curCode":"\tpublic RestTemplateBuilder interceptors(\n\t\t\tCollection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, this.requestFactorySupplier,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthentication,\n\t\t\t\tthis.restTemplateCustomizers, this.requestFactoryCustomizer,\n\t\t\t\tCollections.unmodifiableSet(new LinkedHashSet<>(interceptors)));\n\t}\n","date":"2018-10-16 16:22:08","endLine":269,"groupId":"5849","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptors","params":"(Collection<ClientHttpRequestInterceptor>interceptors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1b/0ab4c7c5546e2e8c51ff78498dfb9f9319287f.src","preCode":"\tpublic RestTemplateBuilder interceptors(\n\t\t\tCollection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, this.requestFactorySupplier,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthorization,\n\t\t\t\tthis.restTemplateCustomizers, this.requestFactoryCustomizer,\n\t\t\t\tCollections.unmodifiableSet(new LinkedHashSet<>(interceptors)));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"}],"commitId":"80fdd473699ee4bcdb4d4546fe00a2a1367887ee","commitMessage":"@@@Merge pull request #14830 from dreis2211\n\n* pr/14830:\n  Polish \"Remove usages of BasicAuthorizationInterceptor\"\n  Remove usages of BasicAuthorizationInterceptor\n","date":"2018-10-16 16:22:08","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-06-13 07:36:03","codes":[{"authorDate":"2019-06-13 07:36:03","commitOrder":5,"curCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.requestFactoryCustomizer, this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters), this.interceptors, this.requestFactory,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthentication, this.defaultHeaders,\n\t\t\t\tthis.customizers, this.requestCustomizers);\n\t}\n","date":"2019-06-13 07:36:03","endLine":227,"groupId":"14129","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"additionalMessageConverters","params":"(Collection<?extendsHttpMessageConverter<?>>messageConverters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/e267f268945f51440d30be9da57e6d17d26ef5.src","preCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters), this.requestFactorySupplier, this.uriTemplateHandler,\n\t\t\t\tthis.errorHandler, this.basicAuthentication, this.restTemplateCustomizers,\n\t\t\t\tthis.requestFactoryCustomizer, this.interceptors);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2019-06-13 07:36:03","commitOrder":5,"curCode":"\tpublic RestTemplateBuilder interceptors(Collection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.requestFactoryCustomizer, this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, setOf(interceptors), this.requestFactory, this.uriTemplateHandler,\n\t\t\t\tthis.errorHandler, this.basicAuthentication, this.defaultHeaders, this.customizers,\n\t\t\t\tthis.requestCustomizers);\n\t}\n","date":"2019-06-13 07:36:03","endLine":272,"groupId":"14129","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptors","params":"(Collection<ClientHttpRequestInterceptor>interceptors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/e267f268945f51440d30be9da57e6d17d26ef5.src","preCode":"\tpublic RestTemplateBuilder interceptors(Collection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.detectRequestFactory, this.rootUri, this.messageConverters,\n\t\t\t\tthis.requestFactorySupplier, this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,\n\t\t\t\tthis.restTemplateCustomizers, this.requestFactoryCustomizer,\n\t\t\t\tCollections.unmodifiableSet(new LinkedHashSet<>(interceptors)));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"}],"commitId":"2888ddee22e162f17cb051ab1d8724be0d4baa56","commitMessage":"@@@Merge pull request #17091 from L00kian\n\n* pr/17091:\n  Polish \"Support default headers with RestTemplateBuilder\"\n  Support default headers with RestTemplateBuilder\n\nCloses gh-17091\n","date":"2019-06-13 07:36:03","modifiedFileCount":"6","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-07-06 02:09:19","codes":[{"authorDate":"2019-06-13 07:36:03","commitOrder":6,"curCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.requestFactoryCustomizer, this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters), this.interceptors, this.requestFactory,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthentication, this.defaultHeaders,\n\t\t\t\tthis.customizers, this.requestCustomizers);\n\t}\n","date":"2019-06-13 07:36:03","endLine":227,"groupId":"102165","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"additionalMessageConverters","params":"(Collection<?extendsHttpMessageConverter<?>>messageConverters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/e267f268945f51440d30be9da57e6d17d26ef5.src","preCode":"\tpublic RestTemplateBuilder additionalMessageConverters(\n\t\t\tCollection<? extends HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notNull(messageConverters, \"MessageConverters must not be null\");\n\t\treturn new RestTemplateBuilder(this.requestFactoryCustomizer, this.detectRequestFactory, this.rootUri,\n\t\t\t\tappend(this.messageConverters, messageConverters), this.interceptors, this.requestFactory,\n\t\t\t\tthis.uriTemplateHandler, this.errorHandler, this.basicAuthentication, this.defaultHeaders,\n\t\t\t\tthis.customizers, this.requestCustomizers);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"N"},{"authorDate":"2019-07-06 02:09:19","commitOrder":6,"curCode":"\tpublic RestTemplateBuilder interceptors(Collection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.requestFactoryCustomizer, this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, copiedSetOf(interceptors), this.requestFactory, this.uriTemplateHandler,\n\t\t\t\tthis.errorHandler, this.basicAuthentication, this.defaultHeaders, this.customizers,\n\t\t\t\tthis.requestCustomizers);\n\t}\n","date":"2019-07-06 02:09:19","endLine":272,"groupId":"102165","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"interceptors","params":"(Collection<ClientHttpRequestInterceptor>interceptors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1d/bd93752c5a9a6593734b89f87e1292c8b201d6.src","preCode":"\tpublic RestTemplateBuilder interceptors(Collection<ClientHttpRequestInterceptor> interceptors) {\n\t\tAssert.notNull(interceptors, \"interceptors must not be null\");\n\t\treturn new RestTemplateBuilder(this.requestFactoryCustomizer, this.detectRequestFactory, this.rootUri,\n\t\t\t\tthis.messageConverters, setOf(interceptors), this.requestFactory, this.uriTemplateHandler,\n\t\t\t\tthis.errorHandler, this.basicAuthentication, this.defaultHeaders, this.customizers,\n\t\t\t\tthis.requestCustomizers);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"}],"commitId":"638b4b8186c012c3c6ec7babd4d0004b7a832bc8","commitMessage":"@@@Rename methods to make copying behaviour more clear\n\nCloses gh-17441\n","date":"2019-07-06 02:09:19","modifiedFileCount":"1","status":"M","submitter":"Andy Wilkinson"}]
