[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void diskSpaceIsUp() throws Exception {\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(THRESHOLD_BYTES + 10);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(THRESHOLD_BYTES * 10);\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD_BYTES);\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(THRESHOLD_BYTES + 10);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(THRESHOLD_BYTES * 10);\n\t}\n","date":"2017-10-05 11:18:56","endLine":70,"groupId":"6485","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"diskSpaceIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/89/07cd9f583ddd914c30989350c08f6d87a044f6.src","preCode":"\tpublic void diskSpaceIsUp() throws Exception {\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(THRESHOLD_BYTES + 10);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(THRESHOLD_BYTES * 10);\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD_BYTES);\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(THRESHOLD_BYTES + 10);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(THRESHOLD_BYTES * 10);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void diskSpaceIsDown() throws Exception {\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(THRESHOLD_BYTES - 10);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(THRESHOLD_BYTES * 10);\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD_BYTES);\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(THRESHOLD_BYTES - 10);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(THRESHOLD_BYTES * 10);\n\t}\n","date":"2017-10-05 11:18:56","endLine":81,"groupId":"1479","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"diskSpaceIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/89/07cd9f583ddd914c30989350c08f6d87a044f6.src","preCode":"\tpublic void diskSpaceIsDown() throws Exception {\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(THRESHOLD_BYTES - 10);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(THRESHOLD_BYTES * 10);\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD_BYTES);\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(THRESHOLD_BYTES - 10);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(THRESHOLD_BYTES * 10);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void diskSpaceIsUp() {\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(THRESHOLD_BYTES + 10);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(THRESHOLD_BYTES * 10);\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD_BYTES);\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(THRESHOLD_BYTES + 10);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(THRESHOLD_BYTES * 10);\n\t}\n","date":"2017-12-12 18:57:30","endLine":70,"groupId":"6485","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"diskSpaceIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ae/0f5ef9c85992ae0333e220af565853a5fd6375.src","preCode":"\tpublic void diskSpaceIsUp() throws Exception {\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(THRESHOLD_BYTES + 10);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(THRESHOLD_BYTES * 10);\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD_BYTES);\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(THRESHOLD_BYTES + 10);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(THRESHOLD_BYTES * 10);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void diskSpaceIsDown() {\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(THRESHOLD_BYTES - 10);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(THRESHOLD_BYTES * 10);\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD_BYTES);\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(THRESHOLD_BYTES - 10);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(THRESHOLD_BYTES * 10);\n\t}\n","date":"2017-12-12 18:57:30","endLine":81,"groupId":"1479","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"diskSpaceIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ae/0f5ef9c85992ae0333e220af565853a5fd6375.src","preCode":"\tpublic void diskSpaceIsDown() throws Exception {\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(THRESHOLD_BYTES - 10);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(THRESHOLD_BYTES * 10);\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD_BYTES);\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(THRESHOLD_BYTES - 10);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(THRESHOLD_BYTES * 10);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-09-21 22:31:24","codes":[{"authorDate":"2018-09-21 22:31:24","commitOrder":3,"curCode":"\tpublic void diskSpaceIsUp() {\n\t\tlong freeSpace = THRESHOLD.toBytes() + 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t}\n","date":"2018-09-21 22:31:24","endLine":74,"groupId":"4714","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"diskSpaceIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1b/c8cc6db23df5a69378177fc4118654fce496f9.src","preCode":"\tpublic void diskSpaceIsUp() {\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(THRESHOLD_BYTES + 10);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(THRESHOLD_BYTES * 10);\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD_BYTES);\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(THRESHOLD_BYTES + 10);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(THRESHOLD_BYTES * 10);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2018-09-21 22:31:24","commitOrder":3,"curCode":"\tpublic void diskSpaceIsDown() {\n\t\tlong freeSpace = THRESHOLD.toBytes() - 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t}\n","date":"2018-09-21 22:31:24","endLine":86,"groupId":"4717","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"diskSpaceIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1b/c8cc6db23df5a69378177fc4118654fce496f9.src","preCode":"\tpublic void diskSpaceIsDown() {\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(THRESHOLD_BYTES - 10);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(THRESHOLD_BYTES * 10);\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD_BYTES);\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(THRESHOLD_BYTES - 10);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(THRESHOLD_BYTES * 10);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"dda875033bda05d87cbf3e6fb49b741a570b58e0","commitMessage":"@@@Merge pull request #14549 from qct:change-to-datasize\n\n* pr/14549:\n  Polish \"Migrate size properties to DataSize\"\n  Migrate size properties to DataSize\n","date":"2018-09-21 22:31:24","modifiedFileCount":"23","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid diskSpaceIsUp() {\n\t\tlong freeSpace = THRESHOLD.toBytes() + 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t}\n","date":"2019-06-07 19:25:54","endLine":69,"groupId":"4714","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"diskSpaceIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0e/c408534ac13d96e6c9863af8d22470f752bb0e.src","preCode":"\tpublic void diskSpaceIsUp() {\n\t\tlong freeSpace = THRESHOLD.toBytes() + 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid diskSpaceIsDown() {\n\t\tlong freeSpace = THRESHOLD.toBytes() - 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t}\n","date":"2019-06-07 19:25:54","endLine":81,"groupId":"4717","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"diskSpaceIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0e/c408534ac13d96e6c9863af8d22470f752bb0e.src","preCode":"\tpublic void diskSpaceIsDown() {\n\t\tlong freeSpace = THRESHOLD.toBytes() - 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-03-31 19:24:25","codes":[{"authorDate":"2020-03-31 19:24:25","commitOrder":5,"curCode":"\tvoid diskSpaceIsUp() {\n\t\tlong freeSpace = THRESHOLD.toBytes() + 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t\tassertThat(health.getDetails().get(\"exists\")).isEqualTo(true);\n\t}\n","date":"2020-03-31 19:24:25","endLine":69,"groupId":"4714","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"diskSpaceIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/42/dd5388ade4fe550ab653b746793498d62fa30d.src","preCode":"\tvoid diskSpaceIsUp() {\n\t\tlong freeSpace = THRESHOLD.toBytes() + 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-03-31 19:24:25","commitOrder":5,"curCode":"\tvoid diskSpaceIsDown() {\n\t\tlong freeSpace = THRESHOLD.toBytes() - 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t\tassertThat(health.getDetails().get(\"exists\")).isEqualTo(true);\n\t}\n","date":"2020-03-31 19:24:25","endLine":82,"groupId":"4717","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"diskSpaceIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/42/dd5388ade4fe550ab653b746793498d62fa30d.src","preCode":"\tvoid diskSpaceIsDown() {\n\t\tlong freeSpace = THRESHOLD.toBytes() - 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"c19c9b8dd66f5af3e3967d5c4a0c25448945c51b","commitMessage":"@@@Merge pull request #20580 from Phoosha\n\n* gh-20580:\n  Polish \"Improve handling of non-existent path in disk space health check\"\n  Improve handling of non-existent path in disk space health check\n\nCloses gh-20580\n","date":"2020-03-31 19:24:25","modifiedFileCount":"4","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-08-08 22:53:42","codes":[{"authorDate":"2020-08-08 22:53:42","commitOrder":6,"curCode":"\tvoid diskSpaceIsUp() {\n\t\tgiven(this.fileMock.exists()).willReturn(true);\n\t\tlong freeSpace = THRESHOLD.toBytes() + 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t\tassertThat(health.getDetails().get(\"exists\")).isEqualTo(true);\n\t}\n","date":"2020-08-10 22:22:03","endLine":70,"groupId":"10558","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"diskSpaceIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b6/31c492bd43b9bccea81754aefa7ac4a7ddba45.src","preCode":"\tvoid diskSpaceIsUp() {\n\t\tlong freeSpace = THRESHOLD.toBytes() + 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t\tassertThat(health.getDetails().get(\"exists\")).isEqualTo(true);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-08-08 22:53:42","commitOrder":6,"curCode":"\tvoid diskSpaceIsDown() {\n\t\tgiven(this.fileMock.exists()).willReturn(true);\n\t\tlong freeSpace = THRESHOLD.toBytes() - 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t\tassertThat(health.getDetails().get(\"exists\")).isEqualTo(true);\n\t}\n","date":"2020-08-10 22:22:03","endLine":84,"groupId":"10558","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"diskSpaceIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b6/31c492bd43b9bccea81754aefa7ac4a7ddba45.src","preCode":"\tvoid diskSpaceIsDown() {\n\t\tlong freeSpace = THRESHOLD.toBytes() - 10;\n\t\tgiven(this.fileMock.getUsableSpace()).willReturn(freeSpace);\n\t\tgiven(this.fileMock.getTotalSpace()).willReturn(TOTAL_SPACE.toBytes());\n\t\tHealth health = this.healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"threshold\")).isEqualTo(THRESHOLD.toBytes());\n\t\tassertThat(health.getDetails().get(\"free\")).isEqualTo(freeSpace);\n\t\tassertThat(health.getDetails().get(\"total\")).isEqualTo(TOTAL_SPACE.toBytes());\n\t\tassertThat(health.getDetails().get(\"exists\")).isEqualTo(true);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/DiskSpaceHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"969dd35e456e6683dd5b767be2079085ccff3941","commitMessage":"@@@Upgrade to Mockito 3.4.6\n\nCloses gh-22838\n","date":"2020-08-10 22:22:03","modifiedFileCount":"68","status":"M","submitter":"Andy Wilkinson"}]
