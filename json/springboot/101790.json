[{"authorTime":"2021-06-08 18:19:41","codes":[{"authorDate":"2021-06-08 18:19:41","commitOrder":2,"curCode":"\tvoid whenDatabaseIsInitializedThenSchemaAndDataScriptsAreApplied() {\n\t\tDatabaseInitializationSettings settings = new DatabaseInitializationSettings();\n\t\tsettings.setSchemaLocations(Arrays.asList(\"schema.sql\"));\n\t\tsettings.setDataLocations(Arrays.asList(\"data.sql\"));\n\t\tAbstractScriptDatabaseInitializer initializer = createEmbeddedDatabaseInitializer(settings);\n\t\tassertThat(initializer.initializeDatabase()).isTrue();\n\t\tassertThat(numberOfEmbeddedRows(\"SELECT COUNT(*) FROM EXAMPLE\")).isEqualTo(1);\n\t}\n","date":"2021-06-08 22:13:55","endLine":44,"groupId":"3455","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"whenDatabaseIsInitializedThenSchemaAndDataScriptsAreApplied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/66/4ba215b898d8158ed6ce63fce59b18a7a2504a.src","preCode":"\tvoid whenDatabaseIsInitializedThenSchemaAndDataScriptsAreApplied() {\n\t\tDatabaseInitializationSettings settings = new DatabaseInitializationSettings();\n\t\tsettings.setSchemaLocations(Arrays.asList(\"schema.sql\"));\n\t\tsettings.setDataLocations(Arrays.asList(\"data.sql\"));\n\t\tAbstractScriptDatabaseInitializer initializer = createEmbeddedDatabaseInitializer(settings);\n\t\tassertThat(initializer.initializeDatabase()).isTrue();\n\t\tassertThat(numberOfEmbeddedRows(\"SELECT COUNT(*) FROM EXAMPLE\")).isEqualTo(1);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/sql/init/AbstractScriptDatabaseInitializerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"MB"},{"authorDate":"2021-06-08 18:19:41","commitOrder":2,"curCode":"\tvoid whenModeIsEmbeddedThenEmbeddedDatabaseIsInitialized() {\n\t\tDatabaseInitializationSettings settings = new DatabaseInitializationSettings();\n\t\tsettings.setSchemaLocations(Arrays.asList(\"schema.sql\"));\n\t\tsettings.setDataLocations(Arrays.asList(\"data.sql\"));\n\t\tsettings.setMode(DatabaseInitializationMode.EMBEDDED);\n\t\tAbstractScriptDatabaseInitializer initializer = createEmbeddedDatabaseInitializer(settings);\n\t\tassertThat(initializer.initializeDatabase()).isTrue();\n\t\tassertThat(numberOfEmbeddedRows(\"SELECT COUNT(*) FROM EXAMPLE\")).isEqualTo(1);\n\t}\n","date":"2021-06-08 22:13:55","endLine":126,"groupId":"3459","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"whenModeIsEmbeddedThenEmbeddedDatabaseIsInitialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/66/4ba215b898d8158ed6ce63fce59b18a7a2504a.src","preCode":"\tvoid whenModeIsEmbeddedThenEmbeddedDatabaseIsInitialized() {\n\t\tDatabaseInitializationSettings settings = new DatabaseInitializationSettings();\n\t\tsettings.setSchemaLocations(Arrays.asList(\"schema.sql\"));\n\t\tsettings.setDataLocations(Arrays.asList(\"data.sql\"));\n\t\tsettings.setMode(DatabaseInitializationMode.EMBEDDED);\n\t\tAbstractScriptDatabaseInitializer initializer = createEmbeddedDatabaseInitializer(settings);\n\t\tassertThat(initializer.initializeDatabase()).isTrue();\n\t\tassertThat(numberOfEmbeddedRows(\"SELECT COUNT(*) FROM EXAMPLE\")).isEqualTo(1);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/sql/init/AbstractScriptDatabaseInitializerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"}],"commitId":"c52143727a9c35b656f2f0d5298344e876785404","commitMessage":"@@@Reinstate mode for controlling DB initialization\n\nCloses gh-26682\n","date":"2021-06-08 22:13:55","modifiedFileCount":"19","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-06-17 18:24:28","codes":[{"authorDate":"2021-06-17 18:24:28","commitOrder":3,"curCode":"\tvoid whenDatabaseIsInitializedThenSchemaAndDataScriptsAreApplied() {\n\t\tDatabaseInitializationSettings settings = new DatabaseInitializationSettings();\n\t\tsettings.setSchemaLocations(Arrays.asList(\"schema.sql\"));\n\t\tsettings.setDataLocations(Arrays.asList(\"data.sql\"));\n\t\tT initializer = createEmbeddedDatabaseInitializer(settings);\n\t\tassertThat(initializer.initializeDatabase()).isTrue();\n\t\tassertThat(numberOfEmbeddedRows(\"SELECT COUNT(*) FROM EXAMPLE\")).isEqualTo(1);\n\t}\n","date":"2021-06-17 18:24:28","endLine":45,"groupId":"101790","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"whenDatabaseIsInitializedThenSchemaAndDataScriptsAreApplied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a3/854f440ac7f917906fe18929618e40cc437c8b.src","preCode":"\tvoid whenDatabaseIsInitializedThenSchemaAndDataScriptsAreApplied() {\n\t\tDatabaseInitializationSettings settings = new DatabaseInitializationSettings();\n\t\tsettings.setSchemaLocations(Arrays.asList(\"schema.sql\"));\n\t\tsettings.setDataLocations(Arrays.asList(\"data.sql\"));\n\t\tAbstractScriptDatabaseInitializer initializer = createEmbeddedDatabaseInitializer(settings);\n\t\tassertThat(initializer.initializeDatabase()).isTrue();\n\t\tassertThat(numberOfEmbeddedRows(\"SELECT COUNT(*) FROM EXAMPLE\")).isEqualTo(1);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/sql/init/AbstractScriptDatabaseInitializerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2021-06-17 18:24:28","commitOrder":3,"curCode":"\tvoid whenModeIsEmbeddedThenEmbeddedDatabaseIsInitialized() {\n\t\tDatabaseInitializationSettings settings = new DatabaseInitializationSettings();\n\t\tsettings.setSchemaLocations(Arrays.asList(\"schema.sql\"));\n\t\tsettings.setDataLocations(Arrays.asList(\"data.sql\"));\n\t\tsettings.setMode(DatabaseInitializationMode.EMBEDDED);\n\t\tT initializer = createEmbeddedDatabaseInitializer(settings);\n\t\tassertThat(initializer.initializeDatabase()).isTrue();\n\t\tassertThat(numberOfEmbeddedRows(\"SELECT COUNT(*) FROM EXAMPLE\")).isEqualTo(1);\n\t}\n","date":"2021-06-17 18:24:28","endLine":135,"groupId":"101790","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"whenModeIsEmbeddedThenEmbeddedDatabaseIsInitialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a3/854f440ac7f917906fe18929618e40cc437c8b.src","preCode":"\tvoid whenModeIsEmbeddedThenEmbeddedDatabaseIsInitialized() {\n\t\tDatabaseInitializationSettings settings = new DatabaseInitializationSettings();\n\t\tsettings.setSchemaLocations(Arrays.asList(\"schema.sql\"));\n\t\tsettings.setDataLocations(Arrays.asList(\"data.sql\"));\n\t\tsettings.setMode(DatabaseInitializationMode.EMBEDDED);\n\t\tAbstractScriptDatabaseInitializer initializer = createEmbeddedDatabaseInitializer(settings);\n\t\tassertThat(initializer.initializeDatabase()).isTrue();\n\t\tassertThat(numberOfEmbeddedRows(\"SELECT COUNT(*) FROM EXAMPLE\")).isEqualTo(1);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/sql/init/AbstractScriptDatabaseInitializerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"fb8f7afce5a88d44d944534a38003b7e62adb277","commitMessage":"@@@Merge branch '2.5.x'\n\nCloses gh-26942\n","date":"2021-06-17 18:24:28","modifiedFileCount":"4","status":"M","submitter":"Andy Wilkinson"}]
