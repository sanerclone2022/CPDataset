[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void bindToArrayWhenCommaListAndIndexedShouldOnlyUseFirst() throws Exception {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tint[] result = this.binder.bind(\"foo\", Bindable.of(int[].class)).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","date":"2017-10-05 11:18:56","endLine":243,"groupId":"2068","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToArrayWhenCommaListAndIndexedShouldOnlyUseFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/0001c2df9ea9e717522ae9991b34363e75d08c.src","preCode":"\tpublic void bindToArrayWhenCommaListAndIndexedShouldOnlyUseFirst() throws Exception {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tint[] result = this.binder.bind(\"foo\", Bindable.of(int[].class)).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/ArrayBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void bindToCollectionWhenCommaListAndIndexedShouldOnlyUseFirst()\n\t\t\tthrows Exception {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tList<Integer> result = this.binder.bind(\"foo\", INTEGER_LIST).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","date":"2017-10-05 11:18:56","endLine":246,"groupId":"2068","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToCollectionWhenCommaListAndIndexedShouldOnlyUseFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/87/79d5738f38b77fcf8a518875cdfd10bb408942.src","preCode":"\tpublic void bindToCollectionWhenCommaListAndIndexedShouldOnlyUseFirst()\n\t\t\tthrows Exception {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tList<Integer> result = this.binder.bind(\"foo\", INTEGER_LIST).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/CollectionBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void bindToArrayWhenCommaListAndIndexedShouldOnlyUseFirst() {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tint[] result = this.binder.bind(\"foo\", Bindable.of(int[].class)).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","date":"2017-12-12 18:57:30","endLine":242,"groupId":"2068","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToArrayWhenCommaListAndIndexedShouldOnlyUseFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d6/bd4e57e5cc8a7d66facf2609014846ac6b6f0a.src","preCode":"\tpublic void bindToArrayWhenCommaListAndIndexedShouldOnlyUseFirst() throws Exception {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tint[] result = this.binder.bind(\"foo\", Bindable.of(int[].class)).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/ArrayBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void bindToCollectionWhenCommaListAndIndexedShouldOnlyUseFirst() {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tList<Integer> result = this.binder.bind(\"foo\", INTEGER_LIST).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","date":"2017-12-12 18:57:30","endLine":238,"groupId":"2068","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToCollectionWhenCommaListAndIndexedShouldOnlyUseFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/91/2409782fa790c57241a30e2b054fa4da84ba1b.src","preCode":"\tpublic void bindToCollectionWhenCommaListAndIndexedShouldOnlyUseFirst()\n\t\t\tthrows Exception {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tList<Integer> result = this.binder.bind(\"foo\", INTEGER_LIST).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/CollectionBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid bindToArrayWhenCommaListAndIndexedShouldOnlyUseFirst() {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tint[] result = this.binder.bind(\"foo\", Bindable.of(int[].class)).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","date":"2019-06-07 19:25:54","endLine":228,"groupId":"101399","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToArrayWhenCommaListAndIndexedShouldOnlyUseFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/58/82c4a94946a128a32edb27b4a80a5f12d6fe87.src","preCode":"\tpublic void bindToArrayWhenCommaListAndIndexedShouldOnlyUseFirst() {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tint[] result = this.binder.bind(\"foo\", Bindable.of(int[].class)).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/ArrayBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid bindToCollectionWhenCommaListAndIndexedShouldOnlyUseFirst() {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tList<Integer> result = this.binder.bind(\"foo\", INTEGER_LIST).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","date":"2019-06-07 19:25:54","endLine":239,"groupId":"101399","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToCollectionWhenCommaListAndIndexedShouldOnlyUseFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c2/022252c53b76e3ffcb116feb8baa62bd6611cf.src","preCode":"\tpublic void bindToCollectionWhenCommaListAndIndexedShouldOnlyUseFirst() {\n\t\tMockConfigurationPropertySource source1 = new MockConfigurationPropertySource();\n\t\tsource1.put(\"foo\", \"1,2\");\n\t\tthis.sources.add(source1);\n\t\tMockConfigurationPropertySource source2 = new MockConfigurationPropertySource();\n\t\tsource2.put(\"foo[0]\", \"2\");\n\t\tsource2.put(\"foo[1]\", \"3\");\n\t\tList<Integer> result = this.binder.bind(\"foo\", INTEGER_LIST).get();\n\t\tassertThat(result).containsExactly(1, 2);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/CollectionBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
