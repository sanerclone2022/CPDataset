[{"authorTime":"2017-11-03 09:00:55","codes":[{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\tprivate CorsConfiguration getCorsConfiguration() {\n\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\tcorsConfiguration.addAllowedOrigin(CorsConfiguration.ALL);\n\t\tcorsConfiguration.setAllowedMethods(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tcorsConfiguration.setAllowedHeaders(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\treturn corsConfiguration;\n\t}\n","date":"2017-11-03 09:00:55","endLine":109,"groupId":"11983","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getCorsConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/e41e93f33cbf455fb676f9471f101d9934dd89.src","preCode":"\tprivate CorsConfiguration getCorsConfiguration() {\n\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\tcorsConfiguration.addAllowedOrigin(CorsConfiguration.ALL);\n\t\tcorsConfiguration.setAllowedMethods(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tcorsConfiguration.setAllowedHeaders(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\treturn corsConfiguration;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\tprivate CorsConfiguration getCorsConfiguration() {\n\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\tcorsConfiguration.addAllowedOrigin(CorsConfiguration.ALL);\n\t\tcorsConfiguration.setAllowedMethods(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tcorsConfiguration.setAllowedHeaders(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\treturn corsConfiguration;\n\t}\n","date":"2017-11-03 09:00:55","endLine":111,"groupId":"11983","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getCorsConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/d36e974f7eb730ee4e6e6f1a679f19cd2f78a8.src","preCode":"\tprivate CorsConfiguration getCorsConfiguration() {\n\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\tcorsConfiguration.addAllowedOrigin(CorsConfiguration.ALL);\n\t\tcorsConfiguration.setAllowedMethods(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tcorsConfiguration.setAllowedHeaders(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\treturn corsConfiguration;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"d50fe8874fa442cbd3ea380754e7b412a77aed9a","commitMessage":"@@@Add CF support for reactive actuators\n\nCloses gh-10780\n","date":"2017-11-03 09:00:55","modifiedFileCount":"5","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2019-06-21 22:25:03","codes":[{"authorDate":"2019-06-21 22:25:03","commitOrder":2,"curCode":"\tprivate CorsConfiguration getCorsConfiguration() {\n\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\tcorsConfiguration.addAllowedOrigin(CorsConfiguration.ALL);\n\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tcorsConfiguration.setAllowedHeaders(\n\t\t\t\tArrays.asList(HttpHeaders.AUTHORIZATION, \"X-Cf-App-Instance\", HttpHeaders.CONTENT_TYPE));\n\t\treturn corsConfiguration;\n\t}\n","date":"2019-06-21 22:25:03","endLine":151,"groupId":"10993","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getCorsConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/53/2c26eaa2f363978a51aa5957d732f701056d62.src","preCode":"\tprivate CorsConfiguration getCorsConfiguration() {\n\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\tcorsConfiguration.addAllowedOrigin(CorsConfiguration.ALL);\n\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tcorsConfiguration.setAllowedHeaders(Arrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\treturn corsConfiguration;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2019-06-21 22:25:03","commitOrder":2,"curCode":"\tprivate CorsConfiguration getCorsConfiguration() {\n\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\tcorsConfiguration.addAllowedOrigin(CorsConfiguration.ALL);\n\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tcorsConfiguration.setAllowedHeaders(\n\t\t\t\tArrays.asList(HttpHeaders.AUTHORIZATION, \"X-Cf-App-Instance\", HttpHeaders.CONTENT_TYPE));\n\t\treturn corsConfiguration;\n\t}\n","date":"2019-06-21 22:25:03","endLine":154,"groupId":"10993","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getCorsConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a0/950f72441b1448559eb6235e855d5853cdbc99.src","preCode":"\tprivate CorsConfiguration getCorsConfiguration() {\n\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\tcorsConfiguration.addAllowedOrigin(CorsConfiguration.ALL);\n\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tcorsConfiguration.setAllowedHeaders(Arrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\treturn corsConfiguration;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"c7d3b7a9f1b2614d56a105a80fef40baa7c3111a","commitMessage":"@@@Merge pull request #17199 from izeye\n\n* pr/17199:\n  Polish \"Use constants for HTTP headers\"\n  Use constants for HTTP headers\n\nCloses gh-17199\n","date":"2019-06-21 22:25:03","modifiedFileCount":"2","status":"M","submitter":"Stephane Nicoll"}]
