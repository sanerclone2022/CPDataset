[{"authorTime":"2018-10-08 19:20:11","codes":[{"authorDate":"2018-10-08 19:41:16","commitOrder":2,"curCode":"\tpublic void trustStoreProviderIsUsedWhenCreatingTrustStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setTrustStorePassword(\"password\");\n\t\tssl.setTrustStore(\"src/test/resources/test.jks\");\n\t\tssl.setTrustStoreProvider(\"com.example.TrustStoreProvider\");\n\t\tSslServerCustomizer customizer = new SslServerCustomizer(ssl, null);\n\t\ttry {\n\t\t\tcustomizer.getTrustManagerFactory(ssl, null);\n\t\t\tfail();\n\t\t}\n\t\tcatch (IllegalStateException ex) {\n\t\t\tThrowable cause = ex.getCause();\n\t\t\tassertThat(cause).isInstanceOf(NoSuchProviderException.class);\n\t\t\tassertThat(cause).hasMessageContaining(\"com.example.TrustStoreProvider\");\n\t\t}\n\t}\n","date":"2018-10-08 19:41:16","endLine":69,"groupId":"2106","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"trustStoreProviderIsUsedWhenCreatingTrustStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/02/edd888717605438a0582a0d760fcaf960998a3.src","preCode":"\tpublic void trustStoreProviderIsUsedWhenCreatingTrustStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setTrustStorePassword(\"password\");\n\t\tssl.setTrustStore(\"src/test/resources/test.jks\");\n\t\tssl.setTrustStoreProvider(\"com.example.TrustStoreProvider\");\n\t\tSslServerCustomizer customizer = new SslServerCustomizer(ssl, null);\n\t\ttry {\n\t\t\tcustomizer.getTrustManagerFactory(ssl, null);\n\t\t\tfail();\n\t\t}\n\t\tcatch (IllegalStateException ex) {\n\t\t\tThrowable cause = ex.getCause();\n\t\t\tassertThat(cause).isInstanceOf(NoSuchProviderException.class);\n\t\t\tassertThat(cause).hasMessageContaining(\"com.example.TrustStoreProvider\");\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/netty/SslServerCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2018-10-08 19:20:11","commitOrder":2,"curCode":"\tpublic void keyStoreProviderIsUsedWhenCreatingKeyStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setKeyStoreProvider(\"com.example.KeyStoreProvider\");\n\t\tSslBuilderCustomizer customizer = new SslBuilderCustomizer(8080,\n\t\t\t\tInetAddress.getLocalHost(), ssl, null);\n\t\ttry {\n\t\t\tReflectionTestUtils.invokeMethod(customizer, \"getKeyManagers\", ssl, null);\n\t\t\tfail();\n\t\t}\n\t\tcatch (IllegalStateException ex) {\n\t\t\tThrowable cause = ex.getCause();\n\t\t\tassertThat(cause).isInstanceOf(NoSuchProviderException.class);\n\t\t\tassertThat(cause).hasMessageContaining(\"com.example.KeyStoreProvider\");\n\t\t}\n\t}\n","date":"2018-10-08 19:20:11","endLine":70,"groupId":"1007","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"keyStoreProviderIsUsedWhenCreatingKeyStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bb/f7c87e6734a3d4c07a8884634b23c0afd563ec.src","preCode":"\tpublic void keyStoreProviderIsUsedWhenCreatingKeyStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setKeyStoreProvider(\"com.example.KeyStoreProvider\");\n\t\tSslBuilderCustomizer customizer = new SslBuilderCustomizer(8080,\n\t\t\t\tInetAddress.getLocalHost(), ssl, null);\n\t\ttry {\n\t\t\tReflectionTestUtils.invokeMethod(customizer, \"getKeyManagers\", ssl, null);\n\t\t\tfail();\n\t\t}\n\t\tcatch (IllegalStateException ex) {\n\t\t\tThrowable cause = ex.getCause();\n\t\t\tassertThat(cause).isInstanceOf(NoSuchProviderException.class);\n\t\t\tassertThat(cause).hasMessageContaining(\"com.example.KeyStoreProvider\");\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/SslBuilderCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"NB"}],"commitId":"1e0f2b652e10d6106c07a7f48352b8990d8298df","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-10-08 19:41:16","modifiedFileCount":"1","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2018-10-08 19:20:11","codes":[{"authorDate":"2018-10-08 20:34:25","commitOrder":3,"curCode":"\tpublic void trustStoreProviderIsUsedWhenCreatingTrustStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setTrustStorePassword(\"password\");\n\t\tssl.setTrustStore(\"src/test/resources/test.jks\");\n\t\tssl.setTrustStoreProvider(\"com.example.TrustStoreProvider\");\n\t\tSslServerCustomizer customizer = new SslServerCustomizer(ssl, null, null);\n\t\ttry {\n\t\t\tcustomizer.getTrustManagerFactory(ssl, null);\n\t\t\tfail();\n\t\t}\n\t\tcatch (IllegalStateException ex) {\n\t\t\tThrowable cause = ex.getCause();\n\t\t\tassertThat(cause).isInstanceOf(NoSuchProviderException.class);\n\t\t\tassertThat(cause).hasMessageContaining(\"com.example.TrustStoreProvider\");\n\t\t}\n\t}\n","date":"2018-10-08 20:34:25","endLine":69,"groupId":"9773","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"trustStoreProviderIsUsedWhenCreatingTrustStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/17/ed85276acfbf4c87c4bc51b9467c3e370d55c1.src","preCode":"\tpublic void trustStoreProviderIsUsedWhenCreatingTrustStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setTrustStorePassword(\"password\");\n\t\tssl.setTrustStore(\"src/test/resources/test.jks\");\n\t\tssl.setTrustStoreProvider(\"com.example.TrustStoreProvider\");\n\t\tSslServerCustomizer customizer = new SslServerCustomizer(ssl, null);\n\t\ttry {\n\t\t\tcustomizer.getTrustManagerFactory(ssl, null);\n\t\t\tfail();\n\t\t}\n\t\tcatch (IllegalStateException ex) {\n\t\t\tThrowable cause = ex.getCause();\n\t\t\tassertThat(cause).isInstanceOf(NoSuchProviderException.class);\n\t\t\tassertThat(cause).hasMessageContaining(\"com.example.TrustStoreProvider\");\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/netty/SslServerCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2018-10-08 19:20:11","commitOrder":3,"curCode":"\tpublic void keyStoreProviderIsUsedWhenCreatingKeyStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setKeyStoreProvider(\"com.example.KeyStoreProvider\");\n\t\tSslBuilderCustomizer customizer = new SslBuilderCustomizer(8080,\n\t\t\t\tInetAddress.getLocalHost(), ssl, null);\n\t\ttry {\n\t\t\tReflectionTestUtils.invokeMethod(customizer, \"getKeyManagers\", ssl, null);\n\t\t\tfail();\n\t\t}\n\t\tcatch (IllegalStateException ex) {\n\t\t\tThrowable cause = ex.getCause();\n\t\t\tassertThat(cause).isInstanceOf(NoSuchProviderException.class);\n\t\t\tassertThat(cause).hasMessageContaining(\"com.example.KeyStoreProvider\");\n\t\t}\n\t}\n","date":"2018-10-08 19:20:11","endLine":70,"groupId":"1007","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"keyStoreProviderIsUsedWhenCreatingKeyStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bb/f7c87e6734a3d4c07a8884634b23c0afd563ec.src","preCode":"\tpublic void keyStoreProviderIsUsedWhenCreatingKeyStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setKeyStoreProvider(\"com.example.KeyStoreProvider\");\n\t\tSslBuilderCustomizer customizer = new SslBuilderCustomizer(8080,\n\t\t\t\tInetAddress.getLocalHost(), ssl, null);\n\t\ttry {\n\t\t\tReflectionTestUtils.invokeMethod(customizer, \"getKeyManagers\", ssl, null);\n\t\t\tfail();\n\t\t}\n\t\tcatch (IllegalStateException ex) {\n\t\t\tThrowable cause = ex.getCause();\n\t\t\tassertThat(cause).isInstanceOf(NoSuchProviderException.class);\n\t\t\tassertThat(cause).hasMessageContaining(\"com.example.KeyStoreProvider\");\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/SslBuilderCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"}],"commitId":"749fa96a8b57f48a68f4644b501b54b02ab312c2","commitMessage":"@@@Polish\n","date":"2018-10-08 20:34:25","modifiedFileCount":"1","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-02-04 20:36:33","codes":[{"authorDate":"2019-02-04 20:36:33","commitOrder":4,"curCode":"\tpublic void trustStoreProviderIsUsedWhenCreatingTrustStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setTrustStorePassword(\"password\");\n\t\tssl.setTrustStore(\"src/test/resources/test.jks\");\n\t\tssl.setTrustStoreProvider(\"com.example.TrustStoreProvider\");\n\t\tSslServerCustomizer customizer = new SslServerCustomizer(ssl, null, null);\n\t\tassertThatIllegalStateException()\n\t\t\t\t.isThrownBy(() -> customizer.getTrustManagerFactory(ssl, null))\n\t\t\t\t.withCauseInstanceOf(NoSuchProviderException.class)\n\t\t\t\t.withMessageContaining(\"com.example.TrustStoreProvider\");\n\t}\n","date":"2019-02-04 20:36:33","endLine":60,"groupId":"8763","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"trustStoreProviderIsUsedWhenCreatingTrustStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ad/439ac765e071a80552ed48c0e27a7a1628c1ad.src","preCode":"\tpublic void trustStoreProviderIsUsedWhenCreatingTrustStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setTrustStorePassword(\"password\");\n\t\tssl.setTrustStore(\"src/test/resources/test.jks\");\n\t\tssl.setTrustStoreProvider(\"com.example.TrustStoreProvider\");\n\t\tSslServerCustomizer customizer = new SslServerCustomizer(ssl, null, null);\n\t\ttry {\n\t\t\tcustomizer.getTrustManagerFactory(ssl, null);\n\t\t\tfail();\n\t\t}\n\t\tcatch (IllegalStateException ex) {\n\t\t\tThrowable cause = ex.getCause();\n\t\t\tassertThat(cause).isInstanceOf(NoSuchProviderException.class);\n\t\t\tassertThat(cause).hasMessageContaining(\"com.example.TrustStoreProvider\");\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/netty/SslServerCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2019-02-04 20:36:33","commitOrder":4,"curCode":"\tpublic void keyStoreProviderIsUsedWhenCreatingKeyStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setKeyStoreProvider(\"com.example.KeyStoreProvider\");\n\t\tSslBuilderCustomizer customizer = new SslBuilderCustomizer(8080,\n\t\t\t\tInetAddress.getLocalHost(), ssl, null);\n\t\tassertThatIllegalStateException()\n\t\t\t\t.isThrownBy(() -> ReflectionTestUtils.invokeMethod(customizer,\n\t\t\t\t\t\t\"getKeyManagers\", ssl, null))\n\t\t\t\t.withCauseInstanceOf(NoSuchProviderException.class)\n\t\t\t\t.withMessageContaining(\"com.example.KeyStoreProvider\");\n\t}\n","date":"2019-02-04 20:36:33","endLine":68,"groupId":"7745","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"keyStoreProviderIsUsedWhenCreatingKeyStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/55/97a4e29f7ca29b965afc7fb53b916f8ecda454.src","preCode":"\tpublic void keyStoreProviderIsUsedWhenCreatingKeyStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setKeyStoreProvider(\"com.example.KeyStoreProvider\");\n\t\tSslBuilderCustomizer customizer = new SslBuilderCustomizer(8080,\n\t\t\t\tInetAddress.getLocalHost(), ssl, null);\n\t\ttry {\n\t\t\tReflectionTestUtils.invokeMethod(customizer, \"getKeyManagers\", ssl, null);\n\t\t\tfail();\n\t\t}\n\t\tcatch (IllegalStateException ex) {\n\t\t\tThrowable cause = ex.getCause();\n\t\t\tassertThat(cause).isInstanceOf(NoSuchProviderException.class);\n\t\t\tassertThat(cause).hasMessageContaining(\"com.example.KeyStoreProvider\");\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/SslBuilderCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"45cc649c7db6c5f205f512878956890078d2ecbf","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2019-02-04 20:36:33","modifiedFileCount":"26","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid trustStoreProviderIsUsedWhenCreatingTrustStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setTrustStorePassword(\"password\");\n\t\tssl.setTrustStore(\"src/test/resources/test.jks\");\n\t\tssl.setTrustStoreProvider(\"com.example.TrustStoreProvider\");\n\t\tSslServerCustomizer customizer = new SslServerCustomizer(ssl, null, null);\n\t\tassertThatIllegalStateException().isThrownBy(() -> customizer.getTrustManagerFactory(ssl, null))\n\t\t\t\t.withCauseInstanceOf(NoSuchProviderException.class)\n\t\t\t\t.withMessageContaining(\"com.example.TrustStoreProvider\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":58,"groupId":"8763","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"trustStoreProviderIsUsedWhenCreatingTrustStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ea/563b7f9538fcb455e52a0448f0b808565500a9.src","preCode":"\tpublic void trustStoreProviderIsUsedWhenCreatingTrustStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setTrustStorePassword(\"password\");\n\t\tssl.setTrustStore(\"src/test/resources/test.jks\");\n\t\tssl.setTrustStoreProvider(\"com.example.TrustStoreProvider\");\n\t\tSslServerCustomizer customizer = new SslServerCustomizer(ssl, null, null);\n\t\tassertThatIllegalStateException().isThrownBy(() -> customizer.getTrustManagerFactory(ssl, null))\n\t\t\t\t.withCauseInstanceOf(NoSuchProviderException.class)\n\t\t\t\t.withMessageContaining(\"com.example.TrustStoreProvider\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/netty/SslServerCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid keyStoreProviderIsUsedWhenCreatingKeyStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setKeyStoreProvider(\"com.example.KeyStoreProvider\");\n\t\tSslBuilderCustomizer customizer = new SslBuilderCustomizer(8080, InetAddress.getLocalHost(), ssl, null);\n\t\tassertThatIllegalStateException()\n\t\t\t\t.isThrownBy(() -> ReflectionTestUtils.invokeMethod(customizer, \"getKeyManagers\", ssl, null))\n\t\t\t\t.withCauseInstanceOf(NoSuchProviderException.class)\n\t\t\t\t.withMessageContaining(\"com.example.KeyStoreProvider\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":64,"groupId":"7745","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"keyStoreProviderIsUsedWhenCreatingKeyStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a7/ae5fa564eb223a53214d8bb25c82d1be75c9c1.src","preCode":"\tpublic void keyStoreProviderIsUsedWhenCreatingKeyStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setKeyStoreProvider(\"com.example.KeyStoreProvider\");\n\t\tSslBuilderCustomizer customizer = new SslBuilderCustomizer(8080, InetAddress.getLocalHost(), ssl, null);\n\t\tassertThatIllegalStateException()\n\t\t\t\t.isThrownBy(() -> ReflectionTestUtils.invokeMethod(customizer, \"getKeyManagers\", ssl, null))\n\t\t\t\t.withCauseInstanceOf(NoSuchProviderException.class)\n\t\t\t\t.withMessageContaining(\"com.example.KeyStoreProvider\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/SslBuilderCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2021-05-17 16:15:00","commitOrder":6,"curCode":"\tvoid trustStoreProviderIsUsedWhenCreatingTrustStore() {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setTrustStorePassword(\"password\");\n\t\tssl.setTrustStore(\"src/test/resources/test.jks\");\n\t\tssl.setTrustStoreProvider(\"com.example.TrustStoreProvider\");\n\t\tSslServerCustomizer customizer = new SslServerCustomizer(ssl, null, null);\n\t\tassertThatIllegalStateException().isThrownBy(() -> customizer.getTrustManagerFactory(ssl, null))\n\t\t\t\t.withCauseInstanceOf(NoSuchProviderException.class)\n\t\t\t\t.withMessageContaining(\"com.example.TrustStoreProvider\");\n\t}\n","date":"2021-05-17 16:15:00","endLine":59,"groupId":"102080","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"trustStoreProviderIsUsedWhenCreatingTrustStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e1/eace5595db78fb32b2e994ea65ee36a69b76f4.src","preCode":"\tvoid trustStoreProviderIsUsedWhenCreatingTrustStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setTrustStorePassword(\"password\");\n\t\tssl.setTrustStore(\"src/test/resources/test.jks\");\n\t\tssl.setTrustStoreProvider(\"com.example.TrustStoreProvider\");\n\t\tSslServerCustomizer customizer = new SslServerCustomizer(ssl, null, null);\n\t\tassertThatIllegalStateException().isThrownBy(() -> customizer.getTrustManagerFactory(ssl, null))\n\t\t\t\t.withCauseInstanceOf(NoSuchProviderException.class)\n\t\t\t\t.withMessageContaining(\"com.example.TrustStoreProvider\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/netty/SslServerCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid keyStoreProviderIsUsedWhenCreatingKeyStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setKeyStoreProvider(\"com.example.KeyStoreProvider\");\n\t\tSslBuilderCustomizer customizer = new SslBuilderCustomizer(8080, InetAddress.getLocalHost(), ssl, null);\n\t\tassertThatIllegalStateException()\n\t\t\t\t.isThrownBy(() -> ReflectionTestUtils.invokeMethod(customizer, \"getKeyManagers\", ssl, null))\n\t\t\t\t.withCauseInstanceOf(NoSuchProviderException.class)\n\t\t\t\t.withMessageContaining(\"com.example.KeyStoreProvider\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":64,"groupId":"102080","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"keyStoreProviderIsUsedWhenCreatingKeyStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a7/ae5fa564eb223a53214d8bb25c82d1be75c9c1.src","preCode":"\tvoid keyStoreProviderIsUsedWhenCreatingKeyStore() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setKeyStoreProvider(\"com.example.KeyStoreProvider\");\n\t\tSslBuilderCustomizer customizer = new SslBuilderCustomizer(8080, InetAddress.getLocalHost(), ssl, null);\n\t\tassertThatIllegalStateException()\n\t\t\t\t.isThrownBy(() -> ReflectionTestUtils.invokeMethod(customizer, \"getKeyManagers\", ssl, null))\n\t\t\t\t.withCauseInstanceOf(NoSuchProviderException.class)\n\t\t\t\t.withMessageContaining(\"com.example.KeyStoreProvider\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/SslBuilderCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"}],"commitId":"21a3f03d20a24934e38a26843872778598da7ad3","commitMessage":"@@@Merge pull request #26441 from weixsun\n\n* pr/26441:\n  Polish \"Remove unnecessary throws declaration in tests\"\n  Remove unnecessary throws declaration in tests\n\nCloses gh-26441\n","date":"2021-05-17 16:15:00","modifiedFileCount":"172","status":"M","submitter":"Stephane Nicoll"}]
