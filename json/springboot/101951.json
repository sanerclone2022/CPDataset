[{"authorTime":"2018-08-12 15:31:08","codes":[{"authorDate":"2018-08-12 15:31:08","commitOrder":1,"curCode":"\tpublic void createWithDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKiloBytes(2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegaBytes(3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(2 * 1024L);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(3 * 1024 * 1024);\n\t}\n","date":"2018-08-13 21:43:23","endLine":83,"groupId":"2981","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createWithDataSizes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fb/ad220d15312db287d2ef6fa102767e4e9f6f10.src","preCode":"\tpublic void createWithDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKiloBytes(2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegaBytes(3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(2 * 1024L);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(3 * 1024 * 1024);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/MultipartConfigFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"},{"authorDate":"2018-08-12 15:31:08","commitOrder":1,"curCode":"\tpublic void createWithNegativeDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(-1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKiloBytes(-2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegaBytes(-3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(-1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(-1);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(0);\n\t}\n","date":"2018-08-13 21:43:23","endLine":95,"groupId":"2982","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createWithNegativeDataSizes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fb/ad220d15312db287d2ef6fa102767e4e9f6f10.src","preCode":"\tpublic void createWithNegativeDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(-1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKiloBytes(-2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegaBytes(-3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(-1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(-1);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(0);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/MultipartConfigFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"6734e1122201ba7bf8698a73c7fec3f9e0f9a834","commitMessage":"@@@Adapt MultipartConfig to use DataSize support\n\nSee gh-13974\n","date":"2018-08-13 21:43:23","modifiedFileCount":"4","status":"B","submitter":"Stephane Nicoll"},{"authorTime":"2018-09-04 20:09:57","codes":[{"authorDate":"2018-09-04 20:09:57","commitOrder":2,"curCode":"\tpublic void createWithDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKilobytes(2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegabytes(3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(2 * 1024L);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(3 * 1024 * 1024);\n\t}\n","date":"2018-09-04 20:09:57","endLine":83,"groupId":"2981","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createWithDataSizes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/04/d17310c411c3363a68824b973e273f21300445.src","preCode":"\tpublic void createWithDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKiloBytes(2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegaBytes(3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(2 * 1024L);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(3 * 1024 * 1024);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/MultipartConfigFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2018-09-04 20:09:57","commitOrder":2,"curCode":"\tpublic void createWithNegativeDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(-1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKilobytes(-2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegabytes(-3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(-1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(-1);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(0);\n\t}\n","date":"2018-09-04 20:09:57","endLine":95,"groupId":"2982","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createWithNegativeDataSizes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/04/d17310c411c3363a68824b973e273f21300445.src","preCode":"\tpublic void createWithNegativeDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(-1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKiloBytes(-2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegaBytes(-3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(-1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(-1);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(0);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/MultipartConfigFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"c0e45b7333b932766c6242be08e309bfb12905f9","commitMessage":"@@@Adapt to Spring Framework API change\n","date":"2018-09-04 20:09:57","modifiedFileCount":"13","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid createWithDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKilobytes(2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegabytes(3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(2 * 1024L);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(3 * 1024 * 1024);\n\t}\n","date":"2019-06-07 19:25:54","endLine":55,"groupId":"101951","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"createWithDataSizes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cb/0b18a06b2b57a8cbf315bed55b6a657a7686ae.src","preCode":"\tpublic void createWithDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKilobytes(2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegabytes(3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(2 * 1024L);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(3 * 1024 * 1024);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/MultipartConfigFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid createWithNegativeDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(-1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKilobytes(-2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegabytes(-3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(-1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(-1);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(0);\n\t}\n","date":"2019-06-07 19:25:54","endLine":67,"groupId":"101951","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"createWithNegativeDataSizes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cb/0b18a06b2b57a8cbf315bed55b6a657a7686ae.src","preCode":"\tpublic void createWithNegativeDataSizes() {\n\t\tMultipartConfigFactory factory = new MultipartConfigFactory();\n\t\tfactory.setMaxFileSize(DataSize.ofBytes(-1));\n\t\tfactory.setMaxRequestSize(DataSize.ofKilobytes(-2));\n\t\tfactory.setFileSizeThreshold(DataSize.ofMegabytes(-3));\n\t\tMultipartConfigElement config = factory.createMultipartConfig();\n\t\tassertThat(config.getMaxFileSize()).isEqualTo(-1L);\n\t\tassertThat(config.getMaxRequestSize()).isEqualTo(-1);\n\t\tassertThat(config.getFileSizeThreshold()).isEqualTo(0);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/MultipartConfigFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
