[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void defaults() throws Exception {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(Arrays.asList(\"\"),\n\t\t\t\tArrays.asList(\"\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"static/**\");\n\t\tassertThat(excludes).contains(\"**/*.jar\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":62,"groupId":"1934","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"defaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/1275cf5ec95196cb91837a30ea26d33a464e2a.src","preCode":"\tpublic void defaults() throws Exception {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(Arrays.asList(\"\"),\n\t\t\t\tArrays.asList(\"\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"static/**\");\n\t\tassertThat(excludes).contains(\"**/*.jar\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/archive/ResourceMatcherTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void includedDeltasAndNewEntries() throws Exception {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(\n\t\t\t\tArrays.asList(\"-static/**\", \"foo.jar\"), Arrays.asList(\"-**/*.jar\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"foo.jar\");\n\t\tassertThat(includes).contains(\"templates/**\");\n\t\tassertThat(includes).doesNotContain(\"static/**\");\n\t\tassertThat(excludes).doesNotContain(\"**/*.jar\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":104,"groupId":"1938","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"includedDeltasAndNewEntries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/1275cf5ec95196cb91837a30ea26d33a464e2a.src","preCode":"\tpublic void includedDeltasAndNewEntries() throws Exception {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(\n\t\t\t\tArrays.asList(\"-static/**\", \"foo.jar\"), Arrays.asList(\"-**/*.jar\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"foo.jar\");\n\t\tassertThat(includes).contains(\"templates/**\");\n\t\tassertThat(includes).doesNotContain(\"static/**\");\n\t\tassertThat(excludes).doesNotContain(\"**/*.jar\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/archive/ResourceMatcherTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void defaults() {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(Arrays.asList(\"\"),\n\t\t\t\tArrays.asList(\"\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"static/**\");\n\t\tassertThat(excludes).contains(\"**/*.jar\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":62,"groupId":"1934","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"defaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/39/bc86d1564da1d786b3a60ea228380175c3cce6.src","preCode":"\tpublic void defaults() throws Exception {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(Arrays.asList(\"\"),\n\t\t\t\tArrays.asList(\"\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"static/**\");\n\t\tassertThat(excludes).contains(\"**/*.jar\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/archive/ResourceMatcherTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void includedDeltasAndNewEntries() {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(\n\t\t\t\tArrays.asList(\"-static/**\", \"foo.jar\"), Arrays.asList(\"-**/*.jar\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"foo.jar\");\n\t\tassertThat(includes).contains(\"templates/**\");\n\t\tassertThat(includes).doesNotContain(\"static/**\");\n\t\tassertThat(excludes).doesNotContain(\"**/*.jar\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":104,"groupId":"1938","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"includedDeltasAndNewEntries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/39/bc86d1564da1d786b3a60ea228380175c3cce6.src","preCode":"\tpublic void includedDeltasAndNewEntries() throws Exception {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(\n\t\t\t\tArrays.asList(\"-static/**\", \"foo.jar\"), Arrays.asList(\"-**/*.jar\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils\n\t\t\t\t.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"foo.jar\");\n\t\tassertThat(includes).contains(\"templates/**\");\n\t\tassertThat(includes).doesNotContain(\"static/**\");\n\t\tassertThat(excludes).doesNotContain(\"**/*.jar\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/archive/ResourceMatcherTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid defaults() {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(Arrays.asList(\"\"), Arrays.asList(\"\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"static/**\");\n\t\tassertThat(excludes).contains(\"**/*.jar\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":57,"groupId":"10618","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"defaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3b/53eb236af28caeb28c6608eb02ce449d839c52.src","preCode":"\tpublic void defaults() {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(Arrays.asList(\"\"), Arrays.asList(\"\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"static/**\");\n\t\tassertThat(excludes).contains(\"**/*.jar\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/archive/ResourceMatcherTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid includedDeltasAndNewEntries() {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(Arrays.asList(\"-static/**\", \"foo.jar\"),\n\t\t\t\tArrays.asList(\"-**/*.jar\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"foo.jar\");\n\t\tassertThat(includes).contains(\"templates/**\");\n\t\tassertThat(includes).doesNotContain(\"static/**\");\n\t\tassertThat(excludes).doesNotContain(\"**/*.jar\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":93,"groupId":"10618","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"includedDeltasAndNewEntries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3b/53eb236af28caeb28c6608eb02ce449d839c52.src","preCode":"\tpublic void includedDeltasAndNewEntries() {\n\t\tResourceMatcher resourceMatcher = new ResourceMatcher(Arrays.asList(\"-static/**\", \"foo.jar\"),\n\t\t\t\tArrays.asList(\"-**/*.jar\"));\n\t\tCollection<String> includes = (Collection<String>) ReflectionTestUtils.getField(resourceMatcher, \"includes\");\n\t\tCollection<String> excludes = (Collection<String>) ReflectionTestUtils.getField(resourceMatcher, \"excludes\");\n\t\tassertThat(includes).contains(\"foo.jar\");\n\t\tassertThat(includes).contains(\"templates/**\");\n\t\tassertThat(includes).doesNotContain(\"static/**\");\n\t\tassertThat(excludes).doesNotContain(\"**/*.jar\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/archive/ResourceMatcherTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
