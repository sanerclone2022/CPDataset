[{"authorTime":"2020-05-06 15:30:25","codes":[{"authorDate":"2018-02-18 00:21:49","commitOrder":2,"curCode":"\tISO8601(\"^[\\\\+\\\\-]?P.*$\") {\n\n\t\t@Override\n\t\tpublic Duration parse(String value, ChronoUnit unit) {\n\t\t\ttry {\n\t\t\t\treturn Duration.parse(value);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\"'\" + value + \"' is not a valid ISO-8601 duration\", ex);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic String print(Duration value, ChronoUnit unit) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t};\n","date":"2018-02-20 12:25:47","endLine":84,"groupId":"11273","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ISO8601","params":"(\"^[\\\\+\\\\-]?P.*$\")","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0e/81efbde016353cda4be8f2d028acc0cd65c4ee.src","preCode":"\tISO8601(\"^[\\\\+\\\\-]?P.*$\") {\n\n\t\t@Override\n\t\tpublic Duration parse(String value, ChronoUnit unit) {\n\t\t\ttry {\n\t\t\t\treturn Duration.parse(value);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\"'\" + value + \"' is not a valid ISO-8601 duration\", ex);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic String print(Duration value, ChronoUnit unit) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t};\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationStyle.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"NB"},{"authorDate":"2020-05-06 15:30:25","commitOrder":2,"curCode":"\tISO8601(\"^[\\\\+\\\\-]?P.*$\", 0) {\n\n\t\t@Override\n\t\tpublic Period parse(String value, ChronoUnit unit) {\n\t\t\ttry {\n\t\t\t\treturn Period.parse(value);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new IllegalArgumentException(\"'\" + value + \"' is not a valid ISO-8601 period\", ex);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic String print(Period value, ChronoUnit unit) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t};\n","date":"2020-05-06 15:30:26","endLine":122,"groupId":"445","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ISO8601","params":"(\"^[\\\\+\\\\-]?P.*$\"@0)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/78/e61cb729907c981be4b8f892ccba218c8127ff.src","preCode":"\tISO8601(\"^[\\\\+\\\\-]?P.*$\", 0) {\n\n\t\t@Override\n\t\tpublic Period parse(String value, ChronoUnit unit) {\n\t\t\ttry {\n\t\t\t\treturn Period.parse(value);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new IllegalArgumentException(\"'\" + value + \"' is not a valid ISO-8601 period\", ex);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic String print(Period value, ChronoUnit unit) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t};\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/PeriodStyle.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"}],"commitId":"66e8968b98fed745387b3b8bd716799198d9ff7d","commitMessage":"@@@Merge pull request #21136 from Grubhart\n\n* pr/21136:\n  Polish 'Add Period converter support'\n  Add Period converter support\n\nCloses gh-21136\n","date":"2020-05-06 15:30:26","modifiedFileCount":"4","status":"M","submitter":"Phillip Webb"},{"authorTime":"2020-05-07 22:43:51","codes":[{"authorDate":"2020-05-07 22:43:51","commitOrder":3,"curCode":"\tISO8601(\"^[+-]?P.*$\") {\n\n\t\t@Override\n\t\tpublic Duration parse(String value, ChronoUnit unit) {\n\t\t\ttry {\n\t\t\t\treturn Duration.parse(value);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new IllegalArgumentException(\"'\" + value + \"' is not a valid ISO-8601 duration\", ex);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic String print(Duration value, ChronoUnit unit) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t};\n","date":"2020-05-07 22:44:31","endLine":82,"groupId":"102150","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ISO8601","params":"(\"^[+-]?P.*$\")","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/11/5fded64cfeb74a1dd5552287d53a0ef07b08c5.src","preCode":"\tISO8601(\"^[\\\\+\\\\-]?P.*$\") {\n\n\t\t@Override\n\t\tpublic Duration parse(String value, ChronoUnit unit) {\n\t\t\ttry {\n\t\t\t\treturn Duration.parse(value);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new IllegalArgumentException(\"'\" + value + \"' is not a valid ISO-8601 duration\", ex);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic String print(Duration value, ChronoUnit unit) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t};\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationStyle.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2020-05-07 22:43:51","commitOrder":3,"curCode":"\tISO8601(\"^[+-]?P.*$\", 0) {\n\n\t\t@Override\n\t\tpublic Period parse(String value, ChronoUnit unit) {\n\t\t\ttry {\n\t\t\t\treturn Period.parse(value);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new IllegalArgumentException(\"'\" + value + \"' is not a valid ISO-8601 period\", ex);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic String print(Period value, ChronoUnit unit) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t};\n","date":"2020-05-07 22:44:31","endLine":122,"groupId":"102150","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ISO8601","params":"(\"^[+-]?P.*$\"@0)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5e/a887b95eeaaf01385c3b870ce3151909c65490.src","preCode":"\tISO8601(\"^[\\\\+\\\\-]?P.*$\", 0) {\n\n\t\t@Override\n\t\tpublic Period parse(String value, ChronoUnit unit) {\n\t\t\ttry {\n\t\t\t\treturn Period.parse(value);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new IllegalArgumentException(\"'\" + value + \"' is not a valid ISO-8601 period\", ex);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic String print(Period value, ChronoUnit unit) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t};\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/PeriodStyle.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"559c178637924c7e5938c469fd85d30bc3c535aa","commitMessage":"@@@Simplify regex expressions\n","date":"2020-05-07 22:44:31","modifiedFileCount":"2","status":"M","submitter":"Phillip Webb"}]
