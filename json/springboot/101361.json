[{"authorTime":"2017-10-24 21:48:49","codes":[{"authorDate":"2017-10-24 21:48:49","commitOrder":2,"curCode":"\tpublic void shouldAdaptPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(\n\t\t\t\tnew MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-10-24 21:48:49","endLine":64,"groupId":"14268","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAdaptPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/0235abd400f2f0ac5f90dd7ee5593d6aadd4ea.src","preCode":"\tpublic void shouldAdaptPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(\n\t\t\t\tnew MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"MB"},{"authorDate":"2017-10-24 21:48:49","commitOrder":2,"curCode":"\tpublic void shouldAdaptMultiplePropertySources() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tsources.addLast(new MapPropertySource(\"test1\",\n\t\t\t\tCollections.singletonMap(\"server.po-rt\", \"4567\")));\n\t\tsources.addLast(\n\t\t\t\tnew MapPropertySource(\"test2\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"4567\");\n\t\tassertThat(iterator.next()\n\t\t\t\t.getConfigurationProperty(ConfigurationPropertyName.of(\"a\")).getValue())\n\t\t\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-10-24 21:48:49","endLine":99,"groupId":"950","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAdaptMultiplePropertySources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/0235abd400f2f0ac5f90dd7ee5593d6aadd4ea.src","preCode":"\tpublic void shouldAdaptMultiplePropertySources() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tsources.addLast(new MapPropertySource(\"test1\",\n\t\t\t\tCollections.singletonMap(\"server.po-rt\", \"4567\")));\n\t\tsources.addLast(\n\t\t\t\tnew MapPropertySource(\"test2\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"4567\");\n\t\tassertThat(iterator.next()\n\t\t\t\t.getConfigurationProperty(ConfigurationPropertyName.of(\"a\")).getValue())\n\t\t\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"MB"}],"commitId":"35c6b83fce86a83e4b2b9ec9fb5cbe0646eb23a5","commitMessage":"@@@Merge pull request #10494 from Johnny Lim\n\n* gh-10494:\n  Polish ?Remove explicit type arguments?\n  Remove explicit type arguments\n","date":"2017-10-24 21:48:49","modifiedFileCount":"61","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void shouldAdaptPropertySource() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(\n\t\t\t\tnew MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-12-12 18:57:30","endLine":64,"groupId":"14268","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAdaptPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d7/53c78e84dba4e2fddd0d3fb0577444eaf31b4d.src","preCode":"\tpublic void shouldAdaptPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(\n\t\t\t\tnew MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void shouldAdaptMultiplePropertySources() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tsources.addLast(new MapPropertySource(\"test1\",\n\t\t\t\tCollections.singletonMap(\"server.po-rt\", \"4567\")));\n\t\tsources.addLast(\n\t\t\t\tnew MapPropertySource(\"test2\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"4567\");\n\t\tassertThat(iterator.next()\n\t\t\t\t.getConfigurationProperty(ConfigurationPropertyName.of(\"a\")).getValue())\n\t\t\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-12-12 18:57:30","endLine":127,"groupId":"950","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAdaptMultiplePropertySources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d7/53c78e84dba4e2fddd0d3fb0577444eaf31b4d.src","preCode":"\tpublic void shouldAdaptMultiplePropertySources() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tsources.addLast(new MapPropertySource(\"test1\",\n\t\t\t\tCollections.singletonMap(\"server.po-rt\", \"4567\")));\n\t\tsources.addLast(\n\t\t\t\tnew MapPropertySource(\"test2\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"4567\");\n\t\tassertThat(iterator.next()\n\t\t\t\t.getConfigurationProperty(ConfigurationPropertyName.of(\"a\")).getValue())\n\t\t\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid shouldAdaptPropertySource() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(new MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2019-06-07 19:25:54","endLine":56,"groupId":"101361","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAdaptPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/ed843b7c895bdebb8e4c96c648b80290a90d4d.src","preCode":"\tpublic void shouldAdaptPropertySource() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(new MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid shouldAdaptMultiplePropertySources() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\", Collections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tsources.addLast(new MapPropertySource(\"test1\", Collections.singletonMap(\"server.po-rt\", \"4567\")));\n\t\tsources.addLast(new MapPropertySource(\"test2\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"1234\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"4567\");\n\t\tassertThat(iterator.next().getConfigurationProperty(ConfigurationPropertyName.of(\"a\")).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2019-06-07 19:25:54","endLine":116,"groupId":"101361","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAdaptMultiplePropertySources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/ed843b7c895bdebb8e4c96c648b80290a90d4d.src","preCode":"\tpublic void shouldAdaptMultiplePropertySources() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\", Collections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tsources.addLast(new MapPropertySource(\"test1\", Collections.singletonMap(\"server.po-rt\", \"4567\")));\n\t\tsources.addLast(new MapPropertySource(\"test2\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"1234\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"4567\");\n\t\tassertThat(iterator.next().getConfigurationProperty(ConfigurationPropertyName.of(\"a\")).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
