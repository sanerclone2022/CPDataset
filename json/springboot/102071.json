[{"authorTime":"2018-02-02 23:01:35","codes":[{"authorDate":"2018-02-02 23:01:35","commitOrder":1,"curCode":"\tpublic void specificIPAddressNotReverseResolved() throws Exception {\n\t\tJettyServletWebServerFactory factory = getFactory();\n\t\tInetAddress localhost = InetAddress.getLocalHost();\n\t\tfactory.setAddress(InetAddress.getByAddress(localhost.getAddress()));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tConnector connector = ((JettyWebServer) this.webServer).getServer()\n\t\t\t\t.getConnectors()[0];\n\t\tassertThat(((ServerConnector) connector).getHost())\n\t\t\t\t.isEqualTo(localhost.getHostAddress());\n\t}\n","date":"2018-02-02 23:01:35","endLine":289,"groupId":"14","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"specificIPAddressNotReverseResolved","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1b/23bdcf3a30466b8439fffeca8b865ab40d1b81.src","preCode":"\tpublic void specificIPAddressNotReverseResolved() throws Exception {\n\t\tJettyServletWebServerFactory factory = getFactory();\n\t\tInetAddress localhost = InetAddress.getLocalHost();\n\t\tfactory.setAddress(InetAddress.getByAddress(localhost.getAddress()));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tConnector connector = ((JettyWebServer) this.webServer).getServer()\n\t\t\t\t.getConnectors()[0];\n\t\tassertThat(((ServerConnector) connector).getHost())\n\t\t\t\t.isEqualTo(localhost.getHostAddress());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"B"},{"authorDate":"2018-02-02 23:01:35","commitOrder":1,"curCode":"\tpublic void specificIPAddressNotReverseResolved() throws Exception {\n\t\tJettyReactiveWebServerFactory factory = getFactory();\n\t\tInetAddress localhost = InetAddress.getLocalHost();\n\t\tfactory.setAddress(InetAddress.getByAddress(localhost.getAddress()));\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tthis.webServer.start();\n\t\tConnector connector = ((JettyWebServer) this.webServer).getServer()\n\t\t\t\t.getConnectors()[0];\n\t\tassertThat(((ServerConnector) connector).getHost())\n\t\t\t\t.isEqualTo(localhost.getHostAddress());\n\t}\n","date":"2018-02-02 23:01:35","endLine":94,"groupId":"3389","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"specificIPAddressNotReverseResolved","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/06/7ea60d450f3148a61924b5356a0576bb2cb325.src","preCode":"\tpublic void specificIPAddressNotReverseResolved() throws Exception {\n\t\tJettyReactiveWebServerFactory factory = getFactory();\n\t\tInetAddress localhost = InetAddress.getLocalHost();\n\t\tfactory.setAddress(InetAddress.getByAddress(localhost.getAddress()));\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tthis.webServer.start();\n\t\tConnector connector = ((JettyWebServer) this.webServer).getServer()\n\t\t\t\t.getConnectors()[0];\n\t\tassertThat(((ServerConnector) connector).getHost())\n\t\t\t\t.isEqualTo(localhost.getHostAddress());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/jetty/JettyReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"}],"commitId":"cebe6579d1617c44dd25f4907d8d0064d1bfc7f3","commitMessage":"@@@Merge branch '1.5.x'\n","date":"2018-02-02 23:01:35","modifiedFileCount":"4","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid specificIPAddressNotReverseResolved() throws Exception {\n\t\tJettyServletWebServerFactory factory = getFactory();\n\t\tInetAddress localhost = InetAddress.getLocalHost();\n\t\tfactory.setAddress(InetAddress.getByAddress(localhost.getAddress()));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tConnector connector = ((JettyWebServer) this.webServer).getServer().getConnectors()[0];\n\t\tassertThat(((ServerConnector) connector).getHost()).isEqualTo(localhost.getHostAddress());\n\t}\n","date":"2019-06-07 19:25:54","endLine":267,"groupId":"102071","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"specificIPAddressNotReverseResolved","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/83/ae74e836c504493f80c06c7e31bcc127d89f8d.src","preCode":"\tpublic void specificIPAddressNotReverseResolved() throws Exception {\n\t\tJettyServletWebServerFactory factory = getFactory();\n\t\tInetAddress localhost = InetAddress.getLocalHost();\n\t\tfactory.setAddress(InetAddress.getByAddress(localhost.getAddress()));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tConnector connector = ((JettyWebServer) this.webServer).getServer().getConnectors()[0];\n\t\tassertThat(((ServerConnector) connector).getHost()).isEqualTo(localhost.getHostAddress());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid specificIPAddressNotReverseResolved() throws Exception {\n\t\tJettyReactiveWebServerFactory factory = getFactory();\n\t\tInetAddress localhost = InetAddress.getLocalHost();\n\t\tfactory.setAddress(InetAddress.getByAddress(localhost.getAddress()));\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tthis.webServer.start();\n\t\tConnector connector = ((JettyWebServer) this.webServer).getServer().getConnectors()[0];\n\t\tassertThat(((ServerConnector) connector).getHost()).isEqualTo(localhost.getHostAddress());\n\t}\n","date":"2019-06-07 19:25:54","endLine":90,"groupId":"102071","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"specificIPAddressNotReverseResolved","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/43/17adb28175e29b4b614bdbb0af321120834005.src","preCode":"\tpublic void specificIPAddressNotReverseResolved() throws Exception {\n\t\tJettyReactiveWebServerFactory factory = getFactory();\n\t\tInetAddress localhost = InetAddress.getLocalHost();\n\t\tfactory.setAddress(InetAddress.getByAddress(localhost.getAddress()));\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tthis.webServer.start();\n\t\tConnector connector = ((JettyWebServer) this.webServer).getServer().getConnectors()[0];\n\t\tassertThat(((ServerConnector) connector).getHost()).isEqualTo(localhost.getHostAddress());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/jetty/JettyReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
