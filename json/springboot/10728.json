[{"authorTime":"2017-11-03 09:00:55","codes":[{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebAnnotationEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tReactiveCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","date":"2017-11-03 09:00:55","endLine":228,"groupId":"946","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(WebAnnotationEndpointDiscovererwebEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@ReactiveCloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d2/0f5f81a6cba09f7832497a343d5ee833dfeeb2.src","preCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebAnnotationEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tReactiveCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"B"},{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebAnnotationEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","date":"2017-11-03 09:00:55","endLine":216,"groupId":"946","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(WebAnnotationEndpointDiscovererwebEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@CloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/49/4740038210eae929385f6cac62b5788e7e4f23.src","preCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebAnnotationEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"B"}],"commitId":"d50fe8874fa442cbd3ea380754e7b412a77aed9a","commitMessage":"@@@Add CF support for reactive actuators\n\nCloses gh-10780\n","date":"2017-11-03 09:00:55","modifiedFileCount":"5","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2017-10-14 00:14:27","codes":[{"authorDate":"2017-10-14 00:14:27","commitOrder":2,"curCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tEndpointDiscoverer<WebOperation> webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tReactiveCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","date":"2017-11-16 06:41:38","endLine":231,"groupId":"946","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(EndpointDiscoverer<WebOperation>webEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@ReactiveCloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/4332e91adba6f17104bd71b33c2dce370a6ede.src","preCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebAnnotationEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tReactiveCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2017-10-14 00:14:27","commitOrder":2,"curCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tEndpointDiscoverer<WebOperation> webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","date":"2017-11-16 06:41:38","endLine":217,"groupId":"946","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(EndpointDiscoverer<WebOperation>webEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@CloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/04/faa3bf5e496eba36ac5c246eec5af4ebc8802b.src","preCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebAnnotationEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"}],"commitId":"fd5c43cdc97a3b17234a139b566a96eabd282639","commitMessage":"@@@Separate endpoint concerns\n\nUpdate endpoint code to provide cleaner separation of concerns.\nSpecifically.  the top level endpoint package is no longer aware of\nthe fact that JMX and HTTP are ultimately used to expose endpoints.\nCaching concerns have also been abstracted behind a general purpose\n`OperationMethodInvokerAdvisor` interface.\n\nConfiguration properties have been refined to further enforce\nseparation. The `management.endpoint.<name>` prefix provides\nconfiguration for a  single endpoint (including enable and cache\ntime-to-live). These  properties are now technology agnostic (they\ndon't include `web` or `jmx` sub properties).\n\nThe `management.endpoints.<technology>` prefix provide exposure specific\nconfiguration. For example.  `management.endpoints.web.path-mapping`\nallow endpoint URLs to be changed.\n\nEndpoint enabled/disabled logic has been simplified so that endpoints\ncan't be disabled per exposure technology. Instead a filter based\napproach is used to allow refinement of what endpoints are exposed over\na given technology.\n\nFixes gh-10176\n","date":"2017-11-16 06:41:38","modifiedFileCount":"108","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-01-10 12:57:10","codes":[{"authorDate":"2018-01-10 12:57:10","commitOrder":3,"curCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","date":"2018-01-20 12:44:24","endLine":229,"groupId":"946","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(WebEndpointDiscovererwebEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@CloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8c/117bfbdb854788aef784a6008e059106940178.src","preCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tEndpointDiscoverer<WebOperation> webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tReactiveCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2018-01-10 12:57:10","commitOrder":3,"curCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","date":"2018-01-20 12:44:24","endLine":215,"groupId":"946","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(WebEndpointDiscovererwebEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@CloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d4/07d593750daf62d6b307c98dfca3fe4369098a.src","preCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tEndpointDiscoverer<WebOperation> webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"1d39feffeabf4b94e3f900b941b58e0443d5887a","commitMessage":"@@@Overhaul actuator endpoint code\n\nRefactor several areas of the actuator endpoint code in order to make\nfuture extensions easier. The primary goal is to introduce the concept\nof an `ExposableEndpoint` that has technology specific subclasses and\ncan carry additional data for filters to use. Many other changes have\nbeen made along the way including:\n\n* A new EndpointSupplier interface that allows cleaner separation of\n  supplying vs discovering endpoints. This allows cleaner class names\n  and allows for better auto-configuration since a user can choose to\n  provide their own supplier entirely.\n\n* A `DiscoveredEndpoint` interface that allows the `EndpointFilter`\n  to be greatly simplified. A filter now doesn't need to know about\n  discovery concerns unless absolutely necessary.\n\n* Improved naming and package structure. Many technology specific\n  concerns are now grouped in a better way. Related concerns are\n  co-located and concepts from one area no longer leakage into another.\n\n* Simplified `HandlerMapping` implementations. Many common concerns have\n  been pulled up helping to create simpler subclasses.\n\n* Simplified JMX adapters. Many of the intermediary `Info` classes have\n  been removed. The `DiscoveredJmxOperation` is now responsible for\n  mapping methods to operations.\n\n* A specific @`HealthEndpointCloudFoundryExtension` for Cloud Foundry.\n  The extension logic used to create a \"full\" health endpoint extension\n  has been made explicit.\n\nFixes gh-11428\nFixes gh-11581\n","date":"2018-01-20 12:44:24","modifiedFileCount":"63","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-02-09 04:43:24","codes":[{"authorDate":"2018-02-09 04:43:24","commitOrder":4,"curCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor,\n\t\t\t\t\tnew EndpointLinksResolver(webEndpointDiscoverer.getEndpoints()));\n\t\t}\n","date":"2018-02-09 18:56:15","endLine":227,"groupId":"946","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(WebEndpointDiscovererwebEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@CloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/56/152f3b076049d7e3d030572301e34ad8c6e8d4.src","preCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"},{"authorDate":"2018-02-09 04:43:24","commitOrder":4,"curCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor,\n\t\t\t\t\tnew EndpointLinksResolver(webEndpointDiscoverer.getEndpoints()));\n\t\t}\n","date":"2018-02-09 18:56:15","endLine":213,"groupId":"946","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(WebEndpointDiscovererwebEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@CloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6d/d6a226f24f34186a746df2dddad1050dd20b74.src","preCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor);\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"}],"commitId":"2993dccd1e521c2c2945cecd3ad0b432ed45bc3a","commitMessage":"@@@Provide links to all types of endpoints\n\nPreviously.  links were only provide to web endpoints. This commit\nexpands link resolution to also provide links for servlet endpoints. \ncontroller endpoints.  and rest controller endpoints.\n\nCloses gh-11902\n","date":"2018-02-09 18:56:15","modifiedFileCount":"21","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-03-28 19:48:47","codes":[{"authorDate":"2019-03-28 19:48:47","commitOrder":5,"curCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"https://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor,\n\t\t\t\t\tnew EndpointLinksResolver(webEndpointDiscoverer.getEndpoints()));\n\t\t}\n","date":"2019-03-28 19:48:47","endLine":213,"groupId":"946","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(WebEndpointDiscovererwebEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@CloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/06/10172d4f90195e9e18af2e06e3f5da65e39823.src","preCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor,\n\t\t\t\t\tnew EndpointLinksResolver(webEndpointDiscoverer.getEndpoints()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"},{"authorDate":"2019-03-28 19:48:47","commitOrder":5,"curCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"https://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor,\n\t\t\t\t\tnew EndpointLinksResolver(webEndpointDiscoverer.getEndpoints()));\n\t\t}\n","date":"2019-03-28 19:48:47","endLine":208,"groupId":"946","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(WebEndpointDiscovererwebEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@CloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/25/03089b2328ba1e94967f66f8d1629ad34656b9.src","preCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer,\n\t\t\t\tEndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"http://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\t\tnew EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes,\n\t\t\t\t\tcorsConfiguration, interceptor,\n\t\t\t\t\tnew EndpointLinksResolver(webEndpointDiscoverer.getEndpoints()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"878a635bfb6c28ee135b4f84e12fc09a42d1a3a9","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2019-03-28 19:48:47","modifiedFileCount":"67","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-02 03:29:51","codes":[{"authorDate":"2019-07-02 03:29:51","commitOrder":6,"curCode":"\t\tCloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer, EndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"https://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(new EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes, corsConfiguration, interceptor,\n\t\t\t\t\tnew EndpointLinksResolver(webEndpointDiscoverer.getEndpoints()));\n\t\t}\n","date":"2019-07-04 02:39:47","endLine":188,"groupId":"10728","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(WebEndpointDiscovererwebEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@CloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ce/b011459db809bbc5cd3e97e2f171d3d9e5295d.src","preCode":"\t\tpublic CloudFoundryWebFluxEndpointHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer, EndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"https://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebFluxEndpointHandlerMapping(new EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes, corsConfiguration, interceptor,\n\t\t\t\t\tnew EndpointLinksResolver(webEndpointDiscoverer.getEndpoints()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"},{"authorDate":"2019-07-02 03:29:51","commitOrder":6,"curCode":"\t\tCloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer, EndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"https://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(new EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes, corsConfiguration, interceptor,\n\t\t\t\t\tnew EndpointLinksResolver(webEndpointDiscoverer.getEndpoints()));\n\t\t}\n","date":"2019-07-04 02:39:47","endLine":185,"groupId":"10728","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryWebEndpointServletHandlerMapping","params":"(WebEndpointDiscovererwebEndpointDiscoverer@EndpointMediaTypesendpointMediaTypes@CloudFoundrySecurityInterceptorinterceptor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8a/f1637510801b552e573ee464ec5083f6fdf52f.src","preCode":"\t\tpublic CloudFoundryWebEndpointServletHandlerMapping cloudFoundryWebEndpointServletHandlerMapping(\n\t\t\t\tWebEndpointDiscoverer webEndpointDiscoverer, EndpointMediaTypes endpointMediaTypes,\n\t\t\t\tCloudFoundrySecurityInterceptor interceptor) {\n\t\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\t\tcorsConfiguration.setAllowedOrigins(Arrays.asList(\"https://example.com\"));\n\t\t\tcorsConfiguration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\"));\n\t\t\treturn new CloudFoundryWebEndpointServletHandlerMapping(new EndpointMapping(\"/cfApplication\"),\n\t\t\t\t\twebEndpointDiscoverer.getEndpoints(), endpointMediaTypes, corsConfiguration, interceptor,\n\t\t\t\t\tnew EndpointLinksResolver(webEndpointDiscoverer.getEndpoints()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"}],"commitId":"a66c4d3096877b33119366ea9ea165c892b462c8","commitMessage":"@@@Unify method visibility of private classes\n\nApply checkstyle rule to ensure that private and package private\nclasses do not have unnecessary public methods. Test classes have\nalso been unified as much as possible to use default scoped\ninner-classes.\n\nCloses gh-7316\n","date":"2019-07-04 02:39:47","modifiedFileCount":"906","status":"M","submitter":"Phillip Webb"}]
