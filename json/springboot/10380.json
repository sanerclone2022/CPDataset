[{"authorTime":"2020-07-28 22:42:01","codes":[{"authorDate":"2020-07-28 22:42:01","commitOrder":1,"curCode":"\tvoid neo4jIsUp() {\n\t\tResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"4711\", \"My Home\", \"test\");\n\t\tDriver driver = mockDriver(resultSummary, \"ultimate collectors edition\");\n\t\tHealth health = new Neo4jHealthIndicator(driver).health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"server\", \"4711@My Home\");\n\t\tassertThat(health.getDetails()).containsEntry(\"database\", \"test\");\n\t\tassertThat(health.getDetails()).containsEntry(\"edition\", \"ultimate collectors edition\");\n\t}\n","date":"2020-07-28 22:42:01","endLine":61,"groupId":"6409","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"neo4jIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a7/2f1fa8fd7a8106f166cf7e8f3dd56a908037f4.src","preCode":"\tvoid neo4jIsUp() {\n\t\tResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"4711\", \"My Home\", \"test\");\n\t\tDriver driver = mockDriver(resultSummary, \"ultimate collectors edition\");\n\t\tHealth health = new Neo4jHealthIndicator(driver).health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"server\", \"4711@My Home\");\n\t\tassertThat(health.getDetails()).containsEntry(\"database\", \"test\");\n\t\tassertThat(health.getDetails()).containsEntry(\"edition\", \"ultimate collectors edition\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/neo4j/Neo4jHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2020-07-28 22:42:01","commitOrder":1,"curCode":"\tvoid neo4jIsUpWithEmptyDatabaseName() {\n\t\tResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"4711\", \"My Home\", \"\");\n\t\tDriver driver = mockDriver(resultSummary, \"some edition\");\n\t\tHealth health = new Neo4jHealthIndicator(driver).health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"server\", \"4711@My Home\");\n\t\tassertThat(health.getDetails()).doesNotContainKey(\"database\");\n\t\tassertThat(health.getDetails()).containsEntry(\"edition\", \"some edition\");\n\t}\n","date":"2020-07-28 22:42:01","endLine":83,"groupId":"6409","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"neo4jIsUpWithEmptyDatabaseName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a7/2f1fa8fd7a8106f166cf7e8f3dd56a908037f4.src","preCode":"\tvoid neo4jIsUpWithEmptyDatabaseName() {\n\t\tResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"4711\", \"My Home\", \"\");\n\t\tDriver driver = mockDriver(resultSummary, \"some edition\");\n\t\tHealth health = new Neo4jHealthIndicator(driver).health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"server\", \"4711@My Home\");\n\t\tassertThat(health.getDetails()).doesNotContainKey(\"database\");\n\t\tassertThat(health.getDetails()).containsEntry(\"edition\", \"some edition\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/neo4j/Neo4jHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"}],"commitId":"0482cc8f78101831ce5599a0e4178ed24cf5f709","commitMessage":"@@@Merge pull request #22302 from meistermeier\n\n* pr/22302:\n  Polish \"Update Neo4j health check to use the Neo4j Driver\"\n  Update Neo4j health check to use the Neo4j Driver\n\nCloses gh-22302\n","date":"2020-07-28 22:42:01","modifiedFileCount":"7","status":"B","submitter":"Stephane Nicoll"},{"authorTime":"2021-07-15 00:53:46","codes":[{"authorDate":"2021-07-15 00:53:46","commitOrder":2,"curCode":"\tvoid neo4jIsUp() {\n\t\tResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"My Home\", \"test\");\n\t\tDriver driver = mockDriver(resultSummary, \"4711\", \"ultimate collectors edition\");\n\t\tHealth health = new Neo4jHealthIndicator(driver).health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"server\", \"4711@My Home\");\n\t\tassertThat(health.getDetails()).containsEntry(\"database\", \"test\");\n\t\tassertThat(health.getDetails()).containsEntry(\"edition\", \"ultimate collectors edition\");\n\t}\n","date":"2021-07-15 00:53:47","endLine":61,"groupId":"10380","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"neo4jIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dd/89d5b6cfe50f12c7ae536c6eae3d57b967a0b0.src","preCode":"\tvoid neo4jIsUp() {\n\t\tResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"4711\", \"My Home\", \"test\");\n\t\tDriver driver = mockDriver(resultSummary, \"ultimate collectors edition\");\n\t\tHealth health = new Neo4jHealthIndicator(driver).health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"server\", \"4711@My Home\");\n\t\tassertThat(health.getDetails()).containsEntry(\"database\", \"test\");\n\t\tassertThat(health.getDetails()).containsEntry(\"edition\", \"ultimate collectors edition\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/neo4j/Neo4jHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2021-07-15 00:53:46","commitOrder":2,"curCode":"\tvoid neo4jIsUpWithEmptyDatabaseName() {\n\t\tResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"My Home\", \"\");\n\t\tDriver driver = mockDriver(resultSummary, \"4711\", \"some edition\");\n\t\tHealth health = new Neo4jHealthIndicator(driver).health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"server\", \"4711@My Home\");\n\t\tassertThat(health.getDetails()).doesNotContainKey(\"database\");\n\t\tassertThat(health.getDetails()).containsEntry(\"edition\", \"some edition\");\n\t}\n","date":"2021-07-15 00:53:47","endLine":83,"groupId":"10380","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"neo4jIsUpWithEmptyDatabaseName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dd/89d5b6cfe50f12c7ae536c6eae3d57b967a0b0.src","preCode":"\tvoid neo4jIsUpWithEmptyDatabaseName() {\n\t\tResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"4711\", \"My Home\", \"\");\n\t\tDriver driver = mockDriver(resultSummary, \"some edition\");\n\t\tHealth health = new Neo4jHealthIndicator(driver).health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"server\", \"4711@My Home\");\n\t\tassertThat(health.getDetails()).doesNotContainKey(\"database\");\n\t\tassertThat(health.getDetails()).containsEntry(\"edition\", \"some edition\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/neo4j/Neo4jHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"b39ed7f0867ca0ce8f6dc28a09ab794779168904","commitMessage":"@@@Merge pull request #27294 from meistermeier\n\n* gh-27294:\n  Polish \"Use server version from database in Neo4j health details\"\n  Use server version from database in Neo4j health details\n\nCloses gh-27294\n","date":"2021-07-15 00:53:47","modifiedFileCount":"6","status":"M","submitter":"Andy Wilkinson"}]
