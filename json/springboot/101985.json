[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void servletAndFilterBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet = mock(Servlet.class);\n\t\tFilter filter1 = mock(Filter.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter1).getOrder()).willReturn(1);\n\t\tFilter filter2 = mock(Filter.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean\", beanDefinition(servlet));\n\t\tthis.context.registerBeanDefinition(\"filterBean2\", beanDefinition(filter2));\n\t\tthis.context.registerBeanDefinition(\"filterBean1\", beanDefinition(filter1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tverify(factory.getServletContext()).addServlet(\"servletBean\", servlet);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean1\", filter1);\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean2\", filter2);\n\t\tverify(factory.getRegisteredFilter(0).getRegistration()).addMappingForUrlPatterns(\n\t\t\t\tEnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t\tverify(factory.getRegisteredFilter(1).getRegistration()).addMappingForUrlPatterns(\n\t\t\t\tEnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":314,"groupId":"6832","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"servletAndFilterBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e4/320681e82e437aa1d8ddd837f60f992e659d96.src","preCode":"\tpublic void servletAndFilterBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet = mock(Servlet.class);\n\t\tFilter filter1 = mock(Filter.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter1).getOrder()).willReturn(1);\n\t\tFilter filter2 = mock(Filter.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean\", beanDefinition(servlet));\n\t\tthis.context.registerBeanDefinition(\"filterBean2\", beanDefinition(filter2));\n\t\tthis.context.registerBeanDefinition(\"filterBean1\", beanDefinition(filter1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tverify(factory.getServletContext()).addServlet(\"servletBean\", servlet);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean1\", filter1);\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean2\", filter2);\n\t\tverify(factory.getRegisteredFilter(0).getRegistration()).addMappingForUrlPatterns(\n\t\t\t\tEnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t\tverify(factory.getRegisteredFilter(1).getRegistration()).addMappingForUrlPatterns(\n\t\t\t\tEnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void servletContextInitializerBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServletContextInitializer initializer1 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer1).getOrder()).willReturn(1);\n\t\tServletContextInitializer initializer2 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"initializerBean2\",\n\t\t\t\tbeanDefinition(initializer2));\n\t\tthis.context.registerBeanDefinition(\"initializerBean1\",\n\t\t\t\tbeanDefinition(initializer1));\n\t\tthis.context.refresh();\n\t\tServletContext servletContext = getWebServerFactory().getServletContext();\n\t\tInOrder ordered = inOrder(initializer1, initializer2);\n\t\tordered.verify(initializer1).onStartup(servletContext);\n\t\tordered.verify(initializer2).onStartup(servletContext);\n\t}\n","date":"2017-10-05 11:18:56","endLine":334,"groupId":"6832","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"servletContextInitializerBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e4/320681e82e437aa1d8ddd837f60f992e659d96.src","preCode":"\tpublic void servletContextInitializerBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServletContextInitializer initializer1 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer1).getOrder()).willReturn(1);\n\t\tServletContextInitializer initializer2 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"initializerBean2\",\n\t\t\t\tbeanDefinition(initializer2));\n\t\tthis.context.registerBeanDefinition(\"initializerBean1\",\n\t\t\t\tbeanDefinition(initializer1));\n\t\tthis.context.refresh();\n\t\tServletContext servletContext = getWebServerFactory().getServletContext();\n\t\tInOrder ordered = inOrder(initializer1, initializer2);\n\t\tordered.verify(initializer1).onStartup(servletContext);\n\t\tordered.verify(initializer2).onStartup(servletContext);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void servletAndFilterBeans() {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet = mock(Servlet.class);\n\t\tFilter filter1 = mock(Filter.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter1).getOrder()).willReturn(1);\n\t\tFilter filter2 = mock(Filter.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean\", beanDefinition(servlet));\n\t\tthis.context.registerBeanDefinition(\"filterBean2\", beanDefinition(filter2));\n\t\tthis.context.registerBeanDefinition(\"filterBean1\", beanDefinition(filter1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tverify(factory.getServletContext()).addServlet(\"servletBean\", servlet);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean1\", filter1);\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean2\", filter2);\n\t\tverify(factory.getRegisteredFilter(0).getRegistration()).addMappingForUrlPatterns(\n\t\t\t\tEnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t\tverify(factory.getRegisteredFilter(1).getRegistration()).addMappingForUrlPatterns(\n\t\t\t\tEnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":312,"groupId":"6832","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"servletAndFilterBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0b/dfdead68209afc728f7b3272774c5180865672.src","preCode":"\tpublic void servletAndFilterBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet = mock(Servlet.class);\n\t\tFilter filter1 = mock(Filter.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter1).getOrder()).willReturn(1);\n\t\tFilter filter2 = mock(Filter.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean\", beanDefinition(servlet));\n\t\tthis.context.registerBeanDefinition(\"filterBean2\", beanDefinition(filter2));\n\t\tthis.context.registerBeanDefinition(\"filterBean1\", beanDefinition(filter1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tverify(factory.getServletContext()).addServlet(\"servletBean\", servlet);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean1\", filter1);\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean2\", filter2);\n\t\tverify(factory.getRegisteredFilter(0).getRegistration()).addMappingForUrlPatterns(\n\t\t\t\tEnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t\tverify(factory.getRegisteredFilter(1).getRegistration()).addMappingForUrlPatterns(\n\t\t\t\tEnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"M"},{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tpublic void servletContextInitializerBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServletContextInitializer initializer1 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer1).getOrder()).willReturn(1);\n\t\tServletContextInitializer initializer2 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"initializerBean2\",\n\t\t\t\tbeanDefinition(initializer2));\n\t\tthis.context.registerBeanDefinition(\"initializerBean1\",\n\t\t\t\tbeanDefinition(initializer1));\n\t\tthis.context.refresh();\n\t\tServletContext servletContext = getWebServerFactory().getServletContext();\n\t\tInOrder ordered = inOrder(initializer1, initializer2);\n\t\tordered.verify(initializer1).onStartup(servletContext);\n\t\tordered.verify(initializer2).onStartup(servletContext);\n\t}\n","date":"2017-10-05 11:18:56","endLine":334,"groupId":"6832","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"servletContextInitializerBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e4/320681e82e437aa1d8ddd837f60f992e659d96.src","preCode":"\tpublic void servletContextInitializerBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServletContextInitializer initializer1 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer1).getOrder()).willReturn(1);\n\t\tServletContextInitializer initializer2 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"initializerBean2\",\n\t\t\t\tbeanDefinition(initializer2));\n\t\tthis.context.registerBeanDefinition(\"initializerBean1\",\n\t\t\t\tbeanDefinition(initializer1));\n\t\tthis.context.refresh();\n\t\tServletContext servletContext = getWebServerFactory().getServletContext();\n\t\tInOrder ordered = inOrder(initializer1, initializer2);\n\t\tordered.verify(initializer1).onStartup(servletContext);\n\t\tordered.verify(initializer2).onStartup(servletContext);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"N"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid servletAndFilterBeans() {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet = mock(Servlet.class);\n\t\tFilter filter1 = mock(Filter.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter1).getOrder()).willReturn(1);\n\t\tFilter filter2 = mock(Filter.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean\", beanDefinition(servlet));\n\t\tthis.context.registerBeanDefinition(\"filterBean2\", beanDefinition(filter2));\n\t\tthis.context.registerBeanDefinition(\"filterBean1\", beanDefinition(filter1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tverify(factory.getServletContext()).addServlet(\"servletBean\", servlet);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean1\", filter1);\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean2\", filter2);\n\t\tverify(factory.getRegisteredFilter(0).getRegistration())\n\t\t\t\t.addMappingForUrlPatterns(EnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t\tverify(factory.getRegisteredFilter(1).getRegistration())\n\t\t\t\t.addMappingForUrlPatterns(EnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":286,"groupId":"101985","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"servletAndFilterBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/3fee8ddaf0799dd411d1c235b44bbb2716025e.src","preCode":"\tpublic void servletAndFilterBeans() {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet = mock(Servlet.class);\n\t\tFilter filter1 = mock(Filter.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter1).getOrder()).willReturn(1);\n\t\tFilter filter2 = mock(Filter.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) filter2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean\", beanDefinition(servlet));\n\t\tthis.context.registerBeanDefinition(\"filterBean2\", beanDefinition(filter2));\n\t\tthis.context.registerBeanDefinition(\"filterBean1\", beanDefinition(filter1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tverify(factory.getServletContext()).addServlet(\"servletBean\", servlet);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean1\", filter1);\n\t\tordered.verify(factory.getServletContext()).addFilter(\"filterBean2\", filter2);\n\t\tverify(factory.getRegisteredFilter(0).getRegistration())\n\t\t\t\t.addMappingForUrlPatterns(EnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t\tverify(factory.getRegisteredFilter(1).getRegistration())\n\t\t\t\t.addMappingForUrlPatterns(EnumSet.of(DispatcherType.REQUEST), false, \"/*\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid servletContextInitializerBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServletContextInitializer initializer1 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer1).getOrder()).willReturn(1);\n\t\tServletContextInitializer initializer2 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"initializerBean2\", beanDefinition(initializer2));\n\t\tthis.context.registerBeanDefinition(\"initializerBean1\", beanDefinition(initializer1));\n\t\tthis.context.refresh();\n\t\tServletContext servletContext = getWebServerFactory().getServletContext();\n\t\tInOrder ordered = inOrder(initializer1, initializer2);\n\t\tordered.verify(initializer1).onStartup(servletContext);\n\t\tordered.verify(initializer2).onStartup(servletContext);\n\t}\n","date":"2019-06-07 19:25:54","endLine":304,"groupId":"101985","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"servletContextInitializerBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/3fee8ddaf0799dd411d1c235b44bbb2716025e.src","preCode":"\tpublic void servletContextInitializerBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServletContextInitializer initializer1 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer1).getOrder()).willReturn(1);\n\t\tServletContextInitializer initializer2 = mock(ServletContextInitializer.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) initializer2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"initializerBean2\", beanDefinition(initializer2));\n\t\tthis.context.registerBeanDefinition(\"initializerBean1\", beanDefinition(initializer1));\n\t\tthis.context.refresh();\n\t\tServletContext servletContext = getWebServerFactory().getServletContext();\n\t\tInOrder ordered = inOrder(initializer1, initializer2);\n\t\tordered.verify(initializer1).onStartup(servletContext);\n\t\tordered.verify(initializer2).onStartup(servletContext);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
