[{"authorTime":"2019-04-24 20:57:52","codes":[{"authorDate":"2019-05-04 02:46:12","commitOrder":3,"curCode":"\tpublic void usesUserProvidedWebFilterWhenReactiveContext() {\n\t\tnew ReactiveWebApplicationContextRunner()\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HttpTraceAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(HttpTraceRepositoryConfiguration.class)\n\t\t\t\t.withUserConfiguration(CustomWebFilterConfiguration.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context).hasSingleBean(HttpTraceWebFilter.class);\n\t\t\t\t\tassertThat(context.getBean(HttpTraceWebFilter.class))\n\t\t\t\t\t\t\t.isInstanceOf(CustomHttpTraceWebFilter.class);\n\t\t\t\t});\n\t}\n","date":"2019-05-04 03:00:37","endLine":92,"groupId":"13052","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"usesUserProvidedWebFilterWhenReactiveContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9e/5613c40990beaa075f1363b7b5a4e02739ed79.src","preCode":"\tpublic void usesUserProvidedWebFilterWhenReactiveContext() {\n\t\tnew ReactiveWebApplicationContextRunner()\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HttpTraceAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(HttpTraceRepositoryConfiguration.class)\n\t\t\t\t.withUserConfiguration(CustomWebFilterConfiguration.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context).hasSingleBean(HttpTraceWebFilter.class);\n\t\t\t\t\tassertThat(context.getBean(HttpTraceWebFilter.class))\n\t\t\t\t\t\t\t.isInstanceOf(CustomHttpTraceWebFilter.class);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/trace/HttpTraceAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2019-04-24 20:57:52","commitOrder":3,"curCode":"\tpublic void enableSchedulingWithExistingTaskSchedulerBacksOff() {\n\t\tthis.contextRunner.withUserConfiguration(SchedulingConfiguration.class,\n\t\t\t\tTaskSchedulerConfiguration.class).run((context) -> {\n\t\t\t\t\tassertThat(context).hasSingleBean(TaskScheduler.class);\n\t\t\t\t\tassertThat(context.getBean(TaskScheduler.class))\n\t\t\t\t\t\t\t.isInstanceOf(TestTaskScheduler.class);\n\t\t\t\t\tTestBean bean = context.getBean(TestBean.class);\n\t\t\t\t\tassertThat(bean.latch.await(30, TimeUnit.SECONDS)).isTrue();\n\t\t\t\t\tassertThat(bean.threadNames).containsExactly(\"test-1\");\n\t\t\t\t});\n\t}\n","date":"2019-04-24 20:57:52","endLine":108,"groupId":"13052","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"enableSchedulingWithExistingTaskSchedulerBacksOff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dd/135fa16c6acce63ad8b576958a39d8ad4be61f.src","preCode":"\tpublic void enableSchedulingWithExistingTaskSchedulerBacksOff() {\n\t\tthis.contextRunner.withUserConfiguration(SchedulingConfiguration.class,\n\t\t\t\tTaskSchedulerConfiguration.class).run((context) -> {\n\t\t\t\t\tassertThat(context).hasSingleBean(TaskScheduler.class);\n\t\t\t\t\tassertThat(context.getBean(TaskScheduler.class))\n\t\t\t\t\t\t\t.isInstanceOf(TestTaskScheduler.class);\n\t\t\t\t\tTestBean bean = context.getBean(TestBean.class);\n\t\t\t\t\tassertThat(bean.latch.await(30, TimeUnit.SECONDS)).isTrue();\n\t\t\t\t\tassertThat(bean.threadNames).containsExactly(\"test-1\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"NB"}],"commitId":"de128fed20d7ee7f569e7219ba734ec0ea6de4cd","commitMessage":"@@@Disable HttpTrace infrastructure by default\n\nPrior to this commit.  the http trace auto-configuration provided\nan `InMemoryHttpTraceRepository` bean. This commit changes the auto-config\nso that an `HttpTraceRepository` is not provided and instead the auto-config\nis conditional on the presence of a `HttpTraceRepository` bean. This is done\nto encourage the use of a custom implementation of `HttpTraceRepository`\nsince the in-memory one is quite limited and not suitable for production.\nA flag is available if the auto-configuration needs to be turned off even\nin the presence of a bean.\n\nCloses gh-15039\n","date":"2019-05-04 03:00:37","modifiedFileCount":"3","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid usesUserProvidedWebFilterWhenReactiveContext() {\n\t\tnew ReactiveWebApplicationContextRunner()\n\t\t\t\t.withConfiguration(AutoConfigurations.of(HttpTraceAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(HttpTraceRepositoryConfiguration.class)\n\t\t\t\t.withUserConfiguration(CustomWebFilterConfiguration.class).run((context) -> {\n\t\t\t\t\tassertThat(context).hasSingleBean(HttpTraceWebFilter.class);\n\t\t\t\t\tassertThat(context.getBean(HttpTraceWebFilter.class)).isInstanceOf(CustomHttpTraceWebFilter.class);\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":85,"groupId":"10857","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"usesUserProvidedWebFilterWhenReactiveContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ea/e78fd422f74e4363e0a135fc4af1c85baff761.src","preCode":"\tpublic void usesUserProvidedWebFilterWhenReactiveContext() {\n\t\tnew ReactiveWebApplicationContextRunner()\n\t\t\t\t.withConfiguration(AutoConfigurations.of(HttpTraceAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(HttpTraceRepositoryConfiguration.class)\n\t\t\t\t.withUserConfiguration(CustomWebFilterConfiguration.class).run((context) -> {\n\t\t\t\t\tassertThat(context).hasSingleBean(HttpTraceWebFilter.class);\n\t\t\t\t\tassertThat(context.getBean(HttpTraceWebFilter.class)).isInstanceOf(CustomHttpTraceWebFilter.class);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/trace/HttpTraceAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid enableSchedulingWithExistingTaskSchedulerBacksOff() {\n\t\tthis.contextRunner.withUserConfiguration(SchedulingConfiguration.class, TaskSchedulerConfiguration.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context).hasSingleBean(TaskScheduler.class);\n\t\t\t\t\tassertThat(context.getBean(TaskScheduler.class)).isInstanceOf(TestTaskScheduler.class);\n\t\t\t\t\tTestBean bean = context.getBean(TestBean.class);\n\t\t\t\t\tassertThat(bean.latch.await(30, TimeUnit.SECONDS)).isTrue();\n\t\t\t\t\tassertThat(bean.threadNames).containsExactly(\"test-1\");\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":98,"groupId":"10857","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"enableSchedulingWithExistingTaskSchedulerBacksOff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cc/b8994d3a9a7f7dc0764606e005ccea2b2917e1.src","preCode":"\tpublic void enableSchedulingWithExistingTaskSchedulerBacksOff() {\n\t\tthis.contextRunner.withUserConfiguration(SchedulingConfiguration.class, TaskSchedulerConfiguration.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context).hasSingleBean(TaskScheduler.class);\n\t\t\t\t\tassertThat(context.getBean(TaskScheduler.class)).isInstanceOf(TestTaskScheduler.class);\n\t\t\t\t\tTestBean bean = context.getBean(TestBean.class);\n\t\t\t\t\tassertThat(bean.latch.await(30, TimeUnit.SECONDS)).isTrue();\n\t\t\t\t\tassertThat(bean.threadNames).containsExactly(\"test-1\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
