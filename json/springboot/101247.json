[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void parseLevelsNone() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.fatal(\"testatfatal\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\")\n\t\t\t\t.doesNotContain(\"testatfatal\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":351,"groupId":"10874","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parseLevelsNone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/18cad9d3d6c7d929cd47660c22b3869a08ba76.src","preCode":"\tpublic void parseLevelsNone() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.fatal(\"testatfatal\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\")\n\t\t\t\t.doesNotContain(\"testatfatal\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":342,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void parseArgsDoesntReplace() throws Exception {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication,\n\t\t\t\tnew String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":385,"groupId":"10938","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parseArgsDoesntReplace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/18cad9d3d6c7d929cd47660c22b3869a08ba76.src","preCode":"\tpublic void parseArgsDoesntReplace() throws Exception {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication,\n\t\t\t\tnew String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":376,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void parseLevelsNone() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.fatal(\"testatfatal\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\")\n\t\t\t\t.doesNotContain(\"testatfatal\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":352,"groupId":"10874","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parseLevelsNone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/71/4254c41ffcf906132c7199535f0f2536c794b5.src","preCode":"\tpublic void parseLevelsNone() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.fatal(\"testatfatal\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\")\n\t\t\t\t.doesNotContain(\"testatfatal\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":343,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication,\n\t\t\t\tnew String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":386,"groupId":"10938","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parseArgsDoesntReplace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/71/4254c41ffcf906132c7199535f0f2536c794b5.src","preCode":"\tpublic void parseArgsDoesntReplace() throws Exception {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication,\n\t\t\t\tnew String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2018-12-07 23:37:24","commitOrder":3,"curCode":"\tpublic void parseLevelsNone() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.error(\"testaterror\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\")\n\t\t\t\t.doesNotContain(\"testaterror\");\n\t}\n","date":"2018-12-07 23:37:24","endLine":413,"groupId":"1860","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"parseLevelsNone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cd/59e5eea76b03550f83f4307337749dd5d1c348.src","preCode":"\tpublic void parseLevelsNone() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.fatal(\"testatfatal\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\")\n\t\t\t\t.doesNotContain(\"testatfatal\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":404,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication,\n\t\t\t\tnew String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":386,"groupId":"10938","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"parseArgsDoesntReplace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/71/4254c41ffcf906132c7199535f0f2536c794b5.src","preCode":"\tpublic void parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication,\n\t\t\t\tnew String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"N"}],"commitId":"bbf0932f0f81c18449f36946a4b0415a8cc66234","commitMessage":"@@@Exclude jcl-over-slf4j in favour of spring-jcl\n\nCloses gh-15392\n","date":"2018-12-07 23:37:24","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2018-12-17 20:30:04","commitOrder":4,"curCode":"\tpublic void parseLevelsNone() {\n\t\taddPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.error(\"testaterror\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\")\n\t\t\t\t.doesNotContain(\"testaterror\");\n\t}\n","date":"2018-12-17 22:02:10","endLine":418,"groupId":"1860","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"parseLevelsNone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/53/0964a5d80ed7f0bfc9dd2763135fddd805ca75.src","preCode":"\tpublic void parseLevelsNone() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.error(\"testaterror\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\")\n\t\t\t\t.doesNotContain(\"testaterror\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":409,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":4,"curCode":"\tpublic void parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication,\n\t\t\t\tnew String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":386,"groupId":"10938","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"parseArgsDoesntReplace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/71/4254c41ffcf906132c7199535f0f2536c794b5.src","preCode":"\tpublic void parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication,\n\t\t\t\tnew String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(),\n\t\t\t\tthis.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"N"}],"commitId":"6adccbfd3049129cc6b17ea1bb45d059ca8e32be","commitMessage":"@@@Make LoggingApplicationListener and tests more robust on Windows\n\nPreviously.  LoggingApplicationListener its tests.  and LogFile made some\nassumptions that do not hold true on Windows. Specifically. \nLoggingApplicationListenerTests used TestPropertySourceUtils to add\nproperties to the environment. This uses Java's standard Properties\nparsing which does a poor job of handling Windows file paths (Strings\nwith backslashes in them). Secondly.  LogFile made assumptions about\nthe use of forward clashes for the file separator.\n\nThis commit replaces the use of TestPropertySourceUtils and removes\nthe assumption about the OS's file separator.\n\nCloses gh-15471\n","date":"2018-12-17 22:02:10","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-15 01:07:47","codes":[{"authorDate":"2019-07-15 01:07:47","commitOrder":5,"curCode":"\tpublic void parseLevelsNone() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.error(\"testaterror\");\n\t\tassertThat(this.output.toString()).doesNotContain(\"testatdebug\").doesNotContain(\"testaterror\");\n\t}\n","date":"2019-07-15 07:24:18","endLine":385,"groupId":"1860","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"parseLevelsNone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a1/584b4388f56ca0a16f3352d5f5c806e5fb3af5.src","preCode":"\tpublic void parseLevelsNone() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.error(\"testaterror\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\").doesNotContain(\"testaterror\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":379,"status":"M"},{"authorDate":"2019-07-15 01:07:47","commitOrder":5,"curCode":"\tpublic void parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.output.toString()).doesNotContain(\"testatdebug\");\n\t}\n","date":"2019-07-15 07:24:18","endLine":413,"groupId":"10938","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"parseArgsDoesntReplace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a1/584b4388f56ca0a16f3352d5f5c806e5fb3af5.src","preCode":"\tpublic void parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.outputCapture.toString()).doesNotContain(\"testatdebug\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"M"}],"commitId":"c3816bfe7be8cc1a042396b2b7d8d236aa585c52","commitMessage":"@@@Polish output capture names\n","date":"2019-07-15 07:24:18","modifiedFileCount":"73","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-07-15 07:34:21","codes":[{"authorDate":"2019-07-15 07:34:21","commitOrder":6,"curCode":"\tvoid parseLevelsNone() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.error(\"testaterror\");\n\t\tassertThat(this.output).doesNotContain(\"testatdebug\").doesNotContain(\"testaterror\");\n\t}\n","date":"2019-07-15 07:34:21","endLine":375,"groupId":"1860","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"parseLevelsNone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/74bfda6c8921743ec2d6bfb35093b3c6b0c9f5.src","preCode":"\tpublic void parseLevelsNone() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.error(\"testaterror\");\n\t\tassertThat(this.output.toString()).doesNotContain(\"testatdebug\").doesNotContain(\"testaterror\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":369,"status":"M"},{"authorDate":"2019-07-15 07:34:21","commitOrder":6,"curCode":"\tvoid parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.output).doesNotContain(\"testatdebug\");\n\t}\n","date":"2019-07-15 07:34:21","endLine":403,"groupId":"10938","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"parseArgsDoesntReplace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/74bfda6c8921743ec2d6bfb35093b3c6b0c9f5.src","preCode":"\tpublic void parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.output.toString()).doesNotContain(\"testatdebug\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":396,"status":"M"}],"commitId":"4b744bdfd1a74f29505fc191cc00c7a75a467041","commitMessage":"@@@Merge pull request #17491 from dreis2211\n\n* pr/17491:\n  Delete ModifiedClassPathRunner\n  Polish ModifiedClassPath support\n  Migrate ModifiedClassPath tests to JUnit 5\n  Add JUnit 5 ModifiedClassPathExtension\n  Extract ModifiedClassPathClass logic\n  Migrate to MockRestServiceServer\n  Polish LoggingApplicationListenerTests\n  Migrate to ApplicationContextRunner\n\nCloses gh-17491\n","date":"2019-07-15 07:34:21","modifiedFileCount":"38","status":"M","submitter":"Phillip Webb"},{"authorTime":"2020-09-17 15:09:41","codes":[{"authorDate":"2019-07-15 07:34:21","commitOrder":7,"curCode":"\tvoid parseLevelsNone() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.error(\"testaterror\");\n\t\tassertThat(this.output).doesNotContain(\"testatdebug\").doesNotContain(\"testaterror\");\n\t}\n","date":"2019-07-15 07:34:21","endLine":375,"groupId":"101247","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"parseLevelsNone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/74bfda6c8921743ec2d6bfb35093b3c6b0c9f5.src","preCode":"\tvoid parseLevelsNone() {\n\t\taddPropertiesToEnvironment(this.context, \"logging.level.org.springframework.boot=OFF\");\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tthis.logger.error(\"testaterror\");\n\t\tassertThat(this.output).doesNotContain(\"testatdebug\").doesNotContain(\"testaterror\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":369,"status":"N"},{"authorDate":"2020-09-17 15:09:41","commitOrder":7,"curCode":"\tvoid parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.bootstrapContext, this.springApplication,\n\t\t\t\tnew String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.output).doesNotContain(\"testatdebug\");\n\t}\n","date":"2020-09-17 15:31:00","endLine":383,"groupId":"101247","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"parseArgsDoesntReplace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f7/2c008d3eaf6287ef8be011565e4268ca37cb88.src","preCode":"\tvoid parseArgsDoesntReplace() {\n\t\tthis.initializer.setSpringBootLogging(LogLevel.ERROR);\n\t\tthis.initializer.setParseArgs(false);\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[] { \"--debug\" }));\n\t\tthis.initializer.initialize(this.context.getEnvironment(), this.context.getClassLoader());\n\t\tthis.logger.debug(\"testatdebug\");\n\t\tassertThat(this.output).doesNotContain(\"testatdebug\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":375,"status":"M"}],"commitId":"1ae14362110360cc558bcd498fa67f70a35b8373","commitMessage":"@@@Refactor BootstrapRegistry support\n\nRefactor `BootstrapRegistry` support following initial prototype work\nwith the Spring Cloud team.\n\nThis update splits the `BootstrapRegistry` API into `BootstrapRegistry`. \n`BootstrapContext` and  `ConfigurableBootstrapContext` interfaces and\nmoves it to the same package as `SpringApplication`.\n\nA new `Bootstrapper` interface has been introduced that can be added\nto the `SpringApplication` to customize the `BootstrapRegistry` before\nit's used.\n\nCloses gh-23326\n","date":"2020-09-17 15:31:00","modifiedFileCount":"40","status":"M","submitter":"Phillip Webb"}]
