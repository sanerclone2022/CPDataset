[{"authorTime":"2020-05-07 05:31:30","codes":[{"authorDate":"2020-05-07 05:31:30","commitOrder":3,"curCode":"\tvoid nullExceptionMessage() {\n\t\tthis.request.setAttribute(\"javax.servlet.error.exception\", new RuntimeException());\n\t\tthis.request.setAttribute(\"javax.servlet.error.message\", \"Test\");\n\t\tMap<String, Object> attributes = this.errorAttributes.getErrorAttributes(this.webRequest,\n\t\t\t\tErrorAttributeOptions.of(Include.MESSAGE));\n\t\tassertThat(attributes.containsKey(\"exception\")).isFalse();\n\t\tassertThat(attributes.get(\"message\")).isEqualTo(\"Test\");\n\t}\n","date":"2020-05-12 04:36:24","endLine":145,"groupId":"10034","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"nullExceptionMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/22/ac9eee8492d580c128a16e752534cb5fbf1785.src","preCode":"\tvoid nullExceptionMessage() {\n\t\tthis.request.setAttribute(\"javax.servlet.error.exception\", new RuntimeException());\n\t\tthis.request.setAttribute(\"javax.servlet.error.message\", \"Test\");\n\t\tMap<String, Object> attributes = this.errorAttributes.getErrorAttributes(this.webRequest,\n\t\t\t\tErrorAttributeOptions.of(Include.MESSAGE));\n\t\tassertThat(attributes.containsKey(\"exception\")).isFalse();\n\t\tassertThat(attributes.get(\"message\")).isEqualTo(\"Test\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"MB"},{"authorDate":"2020-05-07 05:31:30","commitOrder":3,"curCode":"\tvoid nullExceptionMessageAndServletMessage() {\n\t\tthis.request.setAttribute(\"javax.servlet.error.exception\", new RuntimeException());\n\t\tMap<String, Object> attributes = this.errorAttributes.getErrorAttributes(this.webRequest,\n\t\t\t\tErrorAttributeOptions.of(Include.MESSAGE));\n\t\tassertThat(attributes.containsKey(\"exception\")).isFalse();\n\t\tassertThat(attributes.get(\"message\")).isEqualTo(\"No message available\");\n\t}\n","date":"2020-05-12 04:36:24","endLine":154,"groupId":"10034","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"nullExceptionMessageAndServletMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/22/ac9eee8492d580c128a16e752534cb5fbf1785.src","preCode":"\tvoid nullExceptionMessageAndServletMessage() {\n\t\tthis.request.setAttribute(\"javax.servlet.error.exception\", new RuntimeException());\n\t\tMap<String, Object> attributes = this.errorAttributes.getErrorAttributes(this.webRequest,\n\t\t\t\tErrorAttributeOptions.of(Include.MESSAGE));\n\t\tassertThat(attributes.containsKey(\"exception\")).isFalse();\n\t\tassertThat(attributes.get(\"message\")).isEqualTo(\"No message available\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"}],"commitId":"158933c3e57e921a0339cdb7635b12ae0ad89832","commitMessage":"@@@Improve API of ErrorAttributes and DefaultErrorAttributes\n\nThis commit improves the backward-compatibility of the ErrorAttributes\ninterfaces by providing a default implementation of a new method. It\nalso encapsulates several parameters that control the inclusion or\nexclusion of error attributes into a new ErrorAttributeOptions type to\nmake it easier and less intrusive to add additional options in the\nfuture. This encapsulation also makes the handling of the\nincludeException option more similar to other options.\n\nFixes gh-21324\n","date":"2020-05-12 04:36:24","modifiedFileCount":"17","status":"M","submitter":"Scott Frederick"},{"authorTime":"2021-01-22 21:32:47","codes":[{"authorDate":"2021-01-22 21:32:47","commitOrder":4,"curCode":"\tvoid nullExceptionMessage() {\n\t\tthis.request.setAttribute(\"javax.servlet.error.exception\", new RuntimeException());\n\t\tthis.request.setAttribute(\"javax.servlet.error.message\", \"Test\");\n\t\tMap<String, Object> attributes = this.errorAttributes.getErrorAttributes(this.webRequest,\n\t\t\t\tErrorAttributeOptions.of(Include.MESSAGE));\n\t\tassertThat(attributes).doesNotContainKey(\"exception\");\n\t\tassertThat(attributes.get(\"message\")).isEqualTo(\"Test\");\n\t}\n","date":"2021-01-22 21:32:47","endLine":145,"groupId":"102017","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"nullExceptionMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/49/1ade7d78f2136c2718d3c6b81198004b3de80e.src","preCode":"\tvoid nullExceptionMessage() {\n\t\tthis.request.setAttribute(\"javax.servlet.error.exception\", new RuntimeException());\n\t\tthis.request.setAttribute(\"javax.servlet.error.message\", \"Test\");\n\t\tMap<String, Object> attributes = this.errorAttributes.getErrorAttributes(this.webRequest,\n\t\t\t\tErrorAttributeOptions.of(Include.MESSAGE));\n\t\tassertThat(attributes.containsKey(\"exception\")).isFalse();\n\t\tassertThat(attributes.get(\"message\")).isEqualTo(\"Test\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"},{"authorDate":"2021-01-22 21:32:47","commitOrder":4,"curCode":"\tvoid nullExceptionMessageAndServletMessage() {\n\t\tthis.request.setAttribute(\"javax.servlet.error.exception\", new RuntimeException());\n\t\tMap<String, Object> attributes = this.errorAttributes.getErrorAttributes(this.webRequest,\n\t\t\t\tErrorAttributeOptions.of(Include.MESSAGE));\n\t\tassertThat(attributes).doesNotContainKey(\"exception\");\n\t\tassertThat(attributes.get(\"message\")).isEqualTo(\"No message available\");\n\t}\n","date":"2021-01-22 21:32:47","endLine":154,"groupId":"102017","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"nullExceptionMessageAndServletMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/49/1ade7d78f2136c2718d3c6b81198004b3de80e.src","preCode":"\tvoid nullExceptionMessageAndServletMessage() {\n\t\tthis.request.setAttribute(\"javax.servlet.error.exception\", new RuntimeException());\n\t\tMap<String, Object> attributes = this.errorAttributes.getErrorAttributes(this.webRequest,\n\t\t\t\tErrorAttributeOptions.of(Include.MESSAGE));\n\t\tassertThat(attributes.containsKey(\"exception\")).isFalse();\n\t\tassertThat(attributes.get(\"message\")).isEqualTo(\"No message available\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"1370e8ca979da9f4b8fc87fdb2eb8a9a65d0033c","commitMessage":"@@@Merge branch '2.4.x'\n\nCloses gh-24974\n","date":"2021-01-22 21:32:47","modifiedFileCount":"5","status":"M","submitter":"Andy Wilkinson"}]
