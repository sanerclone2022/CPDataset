[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\ttry {\n\t\t\t\tif (options.has(this.allOption)) {\n\t\t\t\t\tif (!args.isEmpty()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\t\"Please use --all without specifying any dependencies\");\n\t\t\t\t\t}\n\t\t\t\t\tnew Installer(options, this).uninstallAll();\n\t\t\t\t}\n\t\t\t\tif (args.isEmpty()) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"Please specify at least one dependency, in the form group:artifact:version, to uninstall\");\n\t\t\t\t}\n\t\t\t\tnew Installer(options, this).uninstall(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error(message != null ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","date":"2017-10-05 11:18:56","endLine":81,"groupId":"3","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"(OptionSetoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f7/ccd54f9b8163adb8030d4c44e9896b694a1bf0.src","preCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\ttry {\n\t\t\t\tif (options.has(this.allOption)) {\n\t\t\t\t\tif (!args.isEmpty()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\t\"Please use --all without specifying any dependencies\");\n\t\t\t\t\t}\n\t\t\t\t\tnew Installer(options, this).uninstallAll();\n\t\t\t\t}\n\t\t\t\tif (args.isEmpty()) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"Please specify at least one dependency, in the form group:artifact:version, to uninstall\");\n\t\t\t\t}\n\t\t\t\tnew Installer(options, this).uninstall(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error(message != null ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/install/UninstallCommand.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\tAssert.notEmpty(args, \"Please specify at least one \"\n\t\t\t\t\t+ \"dependency, in the form group:artifact:version, to install\");\n\t\t\ttry {\n\t\t\t\tnew Installer(options, this).install(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error(message != null ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","date":"2017-10-05 11:18:56","endLine":65,"groupId":"6159","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"(OptionSetoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a8/856a4da12ac15e4d00f4490917855da96d1d55.src","preCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\tAssert.notEmpty(args, \"Please specify at least one \"\n\t\t\t\t\t+ \"dependency, in the form group:artifact:version, to install\");\n\t\t\ttry {\n\t\t\t\tnew Installer(options, this).install(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error(message != null ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/install/InstallCommand.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-07-28 08:35:43","codes":[{"authorDate":"2018-07-28 08:35:43","commitOrder":2,"curCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\ttry {\n\t\t\t\tif (options.has(this.allOption)) {\n\t\t\t\t\tif (!args.isEmpty()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\t\"Please use --all without specifying any dependencies\");\n\t\t\t\t\t}\n\t\t\t\t\tnew Installer(options, this).uninstallAll();\n\t\t\t\t}\n\t\t\t\tif (args.isEmpty()) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"Please specify at least one dependency, in the form group:artifact:version, to uninstall\");\n\t\t\t\t}\n\t\t\t\tnew Installer(options, this).uninstall(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error((message != null) ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","date":"2018-07-28 08:35:43","endLine":81,"groupId":"3","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"(OptionSetoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2c/547bef1e2984d12611588c8000bbd80018ac8e.src","preCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\ttry {\n\t\t\t\tif (options.has(this.allOption)) {\n\t\t\t\t\tif (!args.isEmpty()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\t\"Please use --all without specifying any dependencies\");\n\t\t\t\t\t}\n\t\t\t\t\tnew Installer(options, this).uninstallAll();\n\t\t\t\t}\n\t\t\t\tif (args.isEmpty()) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"Please specify at least one dependency, in the form group:artifact:version, to uninstall\");\n\t\t\t\t}\n\t\t\t\tnew Installer(options, this).uninstall(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error(message != null ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/install/UninstallCommand.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2018-07-28 08:35:43","commitOrder":2,"curCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\tAssert.notEmpty(args, \"Please specify at least one \"\n\t\t\t\t\t+ \"dependency, in the form group:artifact:version, to install\");\n\t\t\ttry {\n\t\t\t\tnew Installer(options, this).install(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error((message != null) ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","date":"2018-07-28 08:35:43","endLine":65,"groupId":"6159","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"(OptionSetoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dd/96bf0a8ba8050ff55d225ec761a9324f623cd2.src","preCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\tAssert.notEmpty(args, \"Please specify at least one \"\n\t\t\t\t\t+ \"dependency, in the form group:artifact:version, to install\");\n\t\t\ttry {\n\t\t\t\tnew Installer(options, this).install(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error(message != null ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/install/InstallCommand.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"a6c9c92f2e17251137e3f59899266ead2274d6f7","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-07-28 08:35:43","modifiedFileCount":"358","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-07-15 02:39:18","codes":[{"authorDate":"2018-07-28 08:35:43","commitOrder":3,"curCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\ttry {\n\t\t\t\tif (options.has(this.allOption)) {\n\t\t\t\t\tif (!args.isEmpty()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\t\"Please use --all without specifying any dependencies\");\n\t\t\t\t\t}\n\t\t\t\t\tnew Installer(options, this).uninstallAll();\n\t\t\t\t}\n\t\t\t\tif (args.isEmpty()) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"Please specify at least one dependency, in the form group:artifact:version, to uninstall\");\n\t\t\t\t}\n\t\t\t\tnew Installer(options, this).uninstall(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error((message != null) ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","date":"2018-07-28 08:35:43","endLine":81,"groupId":"10639","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"(OptionSetoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2c/547bef1e2984d12611588c8000bbd80018ac8e.src","preCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\ttry {\n\t\t\t\tif (options.has(this.allOption)) {\n\t\t\t\t\tif (!args.isEmpty()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\t\"Please use --all without specifying any dependencies\");\n\t\t\t\t\t}\n\t\t\t\t\tnew Installer(options, this).uninstallAll();\n\t\t\t\t}\n\t\t\t\tif (args.isEmpty()) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"Please specify at least one dependency, in the form group:artifact:version, to uninstall\");\n\t\t\t\t}\n\t\t\t\tnew Installer(options, this).uninstall(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error((message != null) ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/install/UninstallCommand.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2019-07-15 02:39:18","commitOrder":3,"curCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\tAssert.notEmpty(args,\n\t\t\t\t\t\"Please specify at least one dependency, in the form group:artifact:version, to install\");\n\t\t\ttry {\n\t\t\t\tnew Installer(options, this).install(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error((message != null) ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","date":"2019-07-15 07:24:19","endLine":64,"groupId":"10639","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"run","params":"(OptionSetoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c1/036fbad1aaf41c551a08b41be50156787b3793.src","preCode":"\t\tprotected ExitStatus run(OptionSet options) throws Exception {\n\t\t\tList<String> args = (List<String>) options.nonOptionArguments();\n\t\t\tAssert.notEmpty(args,\n\t\t\t\t\t\"Please specify at least one \" + \"dependency, in the form group:artifact:version, to install\");\n\t\t\ttry {\n\t\t\t\tnew Installer(options, this).install(args);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tString message = ex.getMessage();\n\t\t\t\tLog.error((message != null) ? message : ex.getClass().toString());\n\t\t\t}\n\t\t\treturn ExitStatus.OK;\n\t\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/install/InstallCommand.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"01933f9b064860e5bbca4e3ff71789dbcf615e19","commitMessage":"@@@Merge previously split strings\n\nMerge some string lines that were previously split because of the\n90 chars wide formatting.\n","date":"2019-07-15 07:24:19","modifiedFileCount":"173","status":"M","submitter":"Phillip Webb"}]
