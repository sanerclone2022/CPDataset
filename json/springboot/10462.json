[{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":1,"curCode":"\t\tpublic WebFluxEndpointHandlerMapping webEndpointReactiveHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebFluxEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()));\n\t\t}\n","date":"2019-06-07 19:25:54","endLine":292,"groupId":"2953","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"webEndpointReactiveHandlerMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/55/89d9c651867a3f754c56e8e8c6b620d9f78e7f.src","preCode":"\t\tpublic WebFluxEndpointHandlerMapping webEndpointReactiveHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebFluxEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/test/WebEndpointTestInvocationContextProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"B"},{"authorDate":"2019-05-24 18:24:29","commitOrder":1,"curCode":"\t\tpublic WebMvcEndpointHandlerMapping webEndpointServletHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebMvcEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()));\n\t\t}\n","date":"2019-06-07 19:25:54","endLine":321,"groupId":"2953","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"webEndpointServletHandlerMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/55/89d9c651867a3f754c56e8e8c6b620d9f78e7f.src","preCode":"\t\tpublic WebMvcEndpointHandlerMapping webEndpointServletHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebMvcEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/test/WebEndpointTestInvocationContextProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"B"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-02 03:29:51","codes":[{"authorDate":"2019-07-02 03:29:51","commitOrder":2,"curCode":"\t\tWebFluxEndpointHandlerMapping webEndpointReactiveHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebFluxEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()));\n\t\t}\n","date":"2019-07-04 02:39:47","endLine":292,"groupId":"2953","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"webEndpointReactiveHandlerMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/88/86f5f7c56f699e9fea290fe1f17f16da781ba3.src","preCode":"\t\tpublic WebFluxEndpointHandlerMapping webEndpointReactiveHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebFluxEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/test/WebEndpointTestInvocationContextProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"},{"authorDate":"2019-07-02 03:29:51","commitOrder":2,"curCode":"\t\tWebMvcEndpointHandlerMapping webEndpointServletHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebMvcEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()));\n\t\t}\n","date":"2019-07-04 02:39:47","endLine":321,"groupId":"2953","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"webEndpointServletHandlerMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/88/86f5f7c56f699e9fea290fe1f17f16da781ba3.src","preCode":"\t\tpublic WebMvcEndpointHandlerMapping webEndpointServletHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebMvcEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/test/WebEndpointTestInvocationContextProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"M"}],"commitId":"a66c4d3096877b33119366ea9ea165c892b462c8","commitMessage":"@@@Unify method visibility of private classes\n\nApply checkstyle rule to ensure that private and package private\nclasses do not have unnecessary public methods. Test classes have\nalso been unified as much as possible to use default scoped\ninner-classes.\n\nCloses gh-7316\n","date":"2019-07-04 02:39:47","modifiedFileCount":"906","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-07-04 07:19:52","codes":[{"authorDate":"2019-07-04 07:19:52","commitOrder":3,"curCode":"\t\tWebFluxEndpointHandlerMapping webEndpointReactiveHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebFluxEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()),\n\t\t\t\t\ttrue);\n\t\t}\n","date":"2019-07-04 07:19:52","endLine":293,"groupId":"2953","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"webEndpointReactiveHandlerMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cb/62ec73ca8cebcfe11f6fdd57c1dc65d7c64b97.src","preCode":"\t\tWebFluxEndpointHandlerMapping webEndpointReactiveHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebFluxEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/test/WebEndpointTestInvocationContextProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"},{"authorDate":"2019-07-04 07:19:52","commitOrder":3,"curCode":"\t\tWebMvcEndpointHandlerMapping webEndpointServletHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebMvcEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()),\n\t\t\t\t\ttrue);\n\t\t}\n","date":"2019-07-04 07:19:52","endLine":323,"groupId":"2953","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"webEndpointServletHandlerMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cb/62ec73ca8cebcfe11f6fdd57c1dc65d7c64b97.src","preCode":"\t\tWebMvcEndpointHandlerMapping webEndpointServletHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebMvcEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/test/WebEndpointTestInvocationContextProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"M"}],"commitId":"f0e934e5acda7c1696fa3a1b4c2ad36a38ee46a2","commitMessage":"@@@Merge pull request #17418 from htztomic\n\n* pr/17418:\n  Polish \"Provide links / when using a separate management port\"\n  Provide links for actuators at / when using a separate management port\n\nCloses gh-17418\n","date":"2019-07-04 07:19:52","modifiedFileCount":"16","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-09-26 13:53:55","codes":[{"authorDate":"2019-09-26 13:53:55","commitOrder":4,"curCode":"\t\tWebFluxEndpointHandlerMapping webEndpointReactiveHandlerMapping() {\n\t\t\tEndpointMediaTypes endpointMediaTypes = EndpointMediaTypes.DEFAULT;\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebFluxEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()),\n\t\t\t\t\ttrue);\n\t\t}\n","date":"2019-09-27 07:16:15","endLine":286,"groupId":"10462","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"webEndpointReactiveHandlerMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/bf39c07faf837b73f6c6d2d2d91f726de56275.src","preCode":"\t\tWebFluxEndpointHandlerMapping webEndpointReactiveHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebFluxEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()),\n\t\t\t\t\ttrue);\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/test/WebEndpointTestInvocationContextProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"M"},{"authorDate":"2019-09-26 13:53:55","commitOrder":4,"curCode":"\t\tWebMvcEndpointHandlerMapping webEndpointServletHandlerMapping() {\n\t\t\tEndpointMediaTypes endpointMediaTypes = EndpointMediaTypes.DEFAULT;\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebMvcEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()),\n\t\t\t\t\ttrue);\n\t\t}\n","date":"2019-09-27 07:16:15","endLine":315,"groupId":"10462","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"webEndpointServletHandlerMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/bf39c07faf837b73f6c6d2d2d91f726de56275.src","preCode":"\t\tWebMvcEndpointHandlerMapping webEndpointServletHandlerMapping() {\n\t\t\tList<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON_VALUE, ActuatorMediaType.V2_JSON);\n\t\t\tEndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes);\n\t\t\tWebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext,\n\t\t\t\t\tnew ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(),\n\t\t\t\t\tCollections.emptyList());\n\t\t\treturn new WebMvcEndpointHandlerMapping(new EndpointMapping(\"/actuator\"), discoverer.getEndpoints(),\n\t\t\t\t\tendpointMediaTypes, new CorsConfiguration(), new EndpointLinksResolver(discoverer.getEndpoints()),\n\t\t\t\t\ttrue);\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/test/WebEndpointTestInvocationContextProvider.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"M"}],"commitId":"deb9d67cef7fe55bd08ab292659b611419031403","commitMessage":"@@@Add Actuator ApiVersion support and bump version\n\nAdd `ApiVersion` enum that can be injected into actuator endpoints if\nthey need to support more than one API revision.\n\nSpring MVC.  WebFlux and Jersey integrations now detect the API version\nbased on the HTTP accept header. If the request explicitly accepts a\n`application/vnd.spring-boot.actuator.v` media type then the version\nis set from the header. If no explicit Spring Boot media type is\naccepted then the latest `ApiVersion` is assumed.\n\nA new v3 API revision has also been introduced to allow upcoming health\nendpoint format changes. By default all endpoints now consume and\ncan produce v3.  v2 and `application/json` media types.\n\nSee gh-17929\n","date":"2019-09-27 07:16:15","modifiedFileCount":"13","status":"M","submitter":"Phillip Webb"}]
