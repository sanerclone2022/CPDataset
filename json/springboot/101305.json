[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void getValueShouldUseDirectMapping() throws Exception {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\",\n\t\t\t\tsource);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tmapper.addFromConfigurationProperty(name, \"key2\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":94,"groupId":"13369","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getValueShouldUseDirectMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b8/a57dd8f176378415fbcfd6a19b37f61de54e4b.src","preCode":"\tpublic void getValueShouldUseDirectMapping() throws Exception {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\",\n\t\t\t\tsource);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tmapper.addFromConfigurationProperty(name, \"key2\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void getValueShouldUseEnumerableMapping() throws Exception {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\",\n\t\t\t\tsource);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tmapper.addFromPropertySource(\"key1\", \"my.missing\");\n\t\tmapper.addFromPropertySource(\"key2\", \"my.k-e-y\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":111,"groupId":"1212","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getValueShouldUseEnumerableMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b8/a57dd8f176378415fbcfd6a19b37f61de54e4b.src","preCode":"\tpublic void getValueShouldUseEnumerableMapping() throws Exception {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\",\n\t\t\t\tsource);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tmapper.addFromPropertySource(\"key1\", \"my.missing\");\n\t\tmapper.addFromPropertySource(\"key2\", \"my.k-e-y\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void getValueShouldUseDirectMapping() {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\",\n\t\t\t\tsource);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tmapper.addFromConfigurationProperty(name, \"key2\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":94,"groupId":"13369","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getValueShouldUseDirectMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b0/5a0b2797e1405b438a2924a2589bf2b11086e3.src","preCode":"\tpublic void getValueShouldUseDirectMapping() throws Exception {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\",\n\t\t\t\tsource);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tmapper.addFromConfigurationProperty(name, \"key2\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void getValueShouldUseEnumerableMapping() {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\",\n\t\t\t\tsource);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tmapper.addFromPropertySource(\"key1\", \"my.missing\");\n\t\tmapper.addFromPropertySource(\"key2\", \"my.k-e-y\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":111,"groupId":"1212","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getValueShouldUseEnumerableMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b0/5a0b2797e1405b438a2924a2589bf2b11086e3.src","preCode":"\tpublic void getValueShouldUseEnumerableMapping() throws Exception {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\",\n\t\t\t\tsource);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tmapper.addFromPropertySource(\"key1\", \"my.missing\");\n\t\tmapper.addFromPropertySource(\"key2\", \"my.k-e-y\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid getValueShouldUseDirectMapping() {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\", source);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tmapper.addFromConfigurationProperty(name, \"key2\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":94,"groupId":"101305","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getValueShouldUseDirectMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2b/72b916e86f823363d484941cd34b6f5e5c992b.src","preCode":"\tpublic void getValueShouldUseDirectMapping() {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\", source);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tmapper.addFromConfigurationProperty(name, \"key2\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid getValueShouldUseEnumerableMapping() {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\", source);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tmapper.addFromPropertySource(\"key1\", \"my.missing\");\n\t\tmapper.addFromPropertySource(\"key2\", \"my.k-e-y\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":110,"groupId":"101305","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getValueShouldUseEnumerableMapping","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2b/72b916e86f823363d484941cd34b6f5e5c992b.src","preCode":"\tpublic void getValueShouldUseEnumerableMapping() {\n\t\tMap<String, Object> source = new LinkedHashMap<>();\n\t\tsource.put(\"key1\", \"value1\");\n\t\tsource.put(\"key2\", \"value2\");\n\t\tsource.put(\"key3\", \"value3\");\n\t\tEnumerablePropertySource<?> propertySource = new MapPropertySource(\"test\", source);\n\t\tTestPropertyMapper mapper = new TestPropertyMapper();\n\t\tmapper.addFromPropertySource(\"key1\", \"my.missing\");\n\t\tmapper.addFromPropertySource(\"key2\", \"my.k-e-y\");\n\t\tSpringIterableConfigurationPropertySource adapter = new SpringIterableConfigurationPropertySource(\n\t\t\t\tpropertySource, mapper);\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"my.key\");\n\t\tassertThat(adapter.getConfigurationProperty(name).getValue()).isEqualTo(\"value2\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
