[{"authorTime":"2021-04-07 01:16:13","codes":[{"authorDate":"2021-04-07 01:16:13","commitOrder":1,"curCode":"\tvoid whenThereIsACustomMetricsCommandTagsProviderItIsUsed() {\n\t\tfinal MongoMetricsCommandTagsProvider customTagsProvider = mock(MongoMetricsCommandTagsProvider.class);\n\t\tthis.contextRunner.with(MetricsRun.simple())\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MongoAutoConfiguration.class))\n\t\t\t\t.withBean(\"customMongoMetricsCommandTagsProvider\", MongoMetricsCommandTagsProvider.class,\n\t\t\t\t\t\t() -> customTagsProvider)\n\t\t\t\t.run((context) -> assertThat(getMongoMetricsCommandTagsProviderUsedToConstructListener(context))\n\t\t\t\t\t\t.isSameAs(customTagsProvider));\n\t}\n","date":"2021-04-07 01:16:13","endLine":101,"groupId":"15008","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"whenThereIsACustomMetricsCommandTagsProviderItIsUsed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a3/d110258b9c9366193eb8c67eb9f91e487acb6f.src","preCode":"\tvoid whenThereIsACustomMetricsCommandTagsProviderItIsUsed() {\n\t\tfinal MongoMetricsCommandTagsProvider customTagsProvider = mock(MongoMetricsCommandTagsProvider.class);\n\t\tthis.contextRunner.with(MetricsRun.simple())\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MongoAutoConfiguration.class))\n\t\t\t\t.withBean(\"customMongoMetricsCommandTagsProvider\", MongoMetricsCommandTagsProvider.class,\n\t\t\t\t\t\t() -> customTagsProvider)\n\t\t\t\t.run((context) -> assertThat(getMongoMetricsCommandTagsProviderUsedToConstructListener(context))\n\t\t\t\t\t\t.isSameAs(customTagsProvider));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/mongo/MongoMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"},{"authorDate":"2021-04-07 01:16:13","commitOrder":1,"curCode":"\tvoid whenThereIsACustomMetricsConnectionPoolTagsProviderItIsUsed() {\n\t\tfinal MongoMetricsConnectionPoolTagsProvider customTagsProvider = mock(\n\t\t\t\tMongoMetricsConnectionPoolTagsProvider.class);\n\t\tthis.contextRunner.with(MetricsRun.simple())\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MongoAutoConfiguration.class))\n\t\t\t\t.withBean(\"customMongoMetricsConnectionPoolTagsProvider\", MongoMetricsConnectionPoolTagsProvider.class,\n\t\t\t\t\t\t() -> customTagsProvider)\n\t\t\t\t.run((context) -> assertThat(getMongoMetricsConnectionPoolTagsProviderUsedToConstructListener(context))\n\t\t\t\t\t\t.isSameAs(customTagsProvider));\n\t}\n","date":"2021-04-07 01:16:13","endLine":113,"groupId":"15008","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"whenThereIsACustomMetricsConnectionPoolTagsProviderItIsUsed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a3/d110258b9c9366193eb8c67eb9f91e487acb6f.src","preCode":"\tvoid whenThereIsACustomMetricsConnectionPoolTagsProviderItIsUsed() {\n\t\tfinal MongoMetricsConnectionPoolTagsProvider customTagsProvider = mock(\n\t\t\t\tMongoMetricsConnectionPoolTagsProvider.class);\n\t\tthis.contextRunner.with(MetricsRun.simple())\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MongoAutoConfiguration.class))\n\t\t\t\t.withBean(\"customMongoMetricsConnectionPoolTagsProvider\", MongoMetricsConnectionPoolTagsProvider.class,\n\t\t\t\t\t\t() -> customTagsProvider)\n\t\t\t\t.run((context) -> assertThat(getMongoMetricsConnectionPoolTagsProviderUsedToConstructListener(context))\n\t\t\t\t\t\t.isSameAs(customTagsProvider));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/mongo/MongoMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"}],"commitId":"87dd329eba1a749bade92115627f75ce80a25b83","commitMessage":"@@@Merge pull request #23990 from bono007\n\n* gh-23990:\n  Polish \"Auto-configure Mongo metrics\"\n  Auto-configure Mongo metrics\n\nCloses gh-23990\n","date":"2021-04-07 01:16:13","modifiedFileCount":"0","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2021-04-09 15:00:39","codes":[{"authorDate":"2021-04-09 15:00:39","commitOrder":2,"curCode":"\tvoid whenThereIsACustomMetricsCommandTagsProviderItIsUsed() {\n\t\tfinal MongoCommandTagsProvider customTagsProvider = mock(MongoCommandTagsProvider.class);\n\t\tthis.contextRunner.with(MetricsRun.simple())\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MongoAutoConfiguration.class))\n\t\t\t\t.withBean(\"customMongoCommandTagsProvider\", MongoCommandTagsProvider.class, () -> customTagsProvider)\n\t\t\t\t.run((context) -> assertThat(getMongoCommandTagsProviderUsedToConstructListener(context))\n\t\t\t\t\t\t.isSameAs(customTagsProvider));\n\t}\n","date":"2021-04-09 19:44:32","endLine":100,"groupId":"10968","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"whenThereIsACustomMetricsCommandTagsProviderItIsUsed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0c/e42f76f704c31e4d6c122d6388f92215974546.src","preCode":"\tvoid whenThereIsACustomMetricsCommandTagsProviderItIsUsed() {\n\t\tfinal MongoMetricsCommandTagsProvider customTagsProvider = mock(MongoMetricsCommandTagsProvider.class);\n\t\tthis.contextRunner.with(MetricsRun.simple())\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MongoAutoConfiguration.class))\n\t\t\t\t.withBean(\"customMongoMetricsCommandTagsProvider\", MongoMetricsCommandTagsProvider.class,\n\t\t\t\t\t\t() -> customTagsProvider)\n\t\t\t\t.run((context) -> assertThat(getMongoMetricsCommandTagsProviderUsedToConstructListener(context))\n\t\t\t\t\t\t.isSameAs(customTagsProvider));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/mongo/MongoMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2021-04-09 15:00:39","commitOrder":2,"curCode":"\tvoid whenThereIsACustomMetricsConnectionPoolTagsProviderItIsUsed() {\n\t\tfinal MongoConnectionPoolTagsProvider customTagsProvider = mock(MongoConnectionPoolTagsProvider.class);\n\t\tthis.contextRunner.with(MetricsRun.simple())\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MongoAutoConfiguration.class))\n\t\t\t\t.withBean(\"customMongoConnectionPoolTagsProvider\", MongoConnectionPoolTagsProvider.class,\n\t\t\t\t\t\t() -> customTagsProvider)\n\t\t\t\t.run((context) -> assertThat(getMongoConnectionPoolTagsProviderUsedToConstructListener(context))\n\t\t\t\t\t\t.isSameAs(customTagsProvider));\n\t}\n","date":"2021-04-09 19:44:32","endLine":111,"groupId":"10968","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"whenThereIsACustomMetricsConnectionPoolTagsProviderItIsUsed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0c/e42f76f704c31e4d6c122d6388f92215974546.src","preCode":"\tvoid whenThereIsACustomMetricsConnectionPoolTagsProviderItIsUsed() {\n\t\tfinal MongoMetricsConnectionPoolTagsProvider customTagsProvider = mock(\n\t\t\t\tMongoMetricsConnectionPoolTagsProvider.class);\n\t\tthis.contextRunner.with(MetricsRun.simple())\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MongoAutoConfiguration.class))\n\t\t\t\t.withBean(\"customMongoMetricsConnectionPoolTagsProvider\", MongoMetricsConnectionPoolTagsProvider.class,\n\t\t\t\t\t\t() -> customTagsProvider)\n\t\t\t\t.run((context) -> assertThat(getMongoMetricsConnectionPoolTagsProviderUsedToConstructListener(context))\n\t\t\t\t\t\t.isSameAs(customTagsProvider));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/mongo/MongoMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"d50e58140331b776c98e72c0daf65212aaf26063","commitMessage":"@@@Start building against Micrometer 1.7.0-RC1 snapshots\n\nSee gh-25934\n","date":"2021-04-09 19:44:32","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"}]
