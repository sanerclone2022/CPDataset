[{"authorTime":"2018-08-30 19:08:42","codes":[{"authorDate":"2018-08-31 20:02:20","commitOrder":2,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=10\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tWebClient.Builder builder = context.getBean(WebClient.Builder.class);\n\t\t\t\t\tWebClient webClient = builder.clientConnector(this.connector).build();\n\t\t\t\t\tMetricsProperties properties = context\n\t\t\t\t\t\t\t.getBean(MetricsProperties.class);\n\t\t\t\t\tint maxUriTags = properties.getWeb().getClient().getMaxUriTags();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tfor (int i = 0; i < maxUriTags + 10; i++) {\n\t\t\t\t\t\twebClient.get().uri(\"http://example.org/projects/\" + i).exchange()\n\t\t\t\t\t\t\t\t.block();\n\t\t\t\t\t}\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters())\n\t\t\t\t\t\t\t.hasSize(maxUriTags);\n\t\t\t\t\tassertThat(this.out.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.out.toString())\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","date":"2018-08-31 20:45:03","endLine":111,"groupId":"9167","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0d/23febf7caf882b8d9167770e2beb836bfa2dbb.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=10\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tWebClient.Builder builder = context.getBean(WebClient.Builder.class);\n\t\t\t\t\tWebClient webClient = builder.clientConnector(this.connector).build();\n\t\t\t\t\tMetricsProperties properties = context\n\t\t\t\t\t\t\t.getBean(MetricsProperties.class);\n\t\t\t\t\tint maxUriTags = properties.getWeb().getClient().getMaxUriTags();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tfor (int i = 0; i < maxUriTags + 10; i++) {\n\t\t\t\t\t\twebClient.get().uri(\"http://example.org/projects/\" + i).exchange()\n\t\t\t\t\t\t\t\t.block();\n\t\t\t\t\t}\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters())\n\t\t\t\t\t\t\t.hasSize(maxUriTags);\n\t\t\t\t\tassertThat(this.out.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.out.toString())\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"},{"authorDate":"2018-08-30 19:08:42","commitOrder":2,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(TestController.class,\n\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-08-30 19:08:42","endLine":124,"groupId":"11628","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/35/4f6671cda1c8466687c6f04c142508a52d649d.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(TestController.class,\n\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"NB"}],"commitId":"7bee9dfc2202bc37116d8e4511f6301d82c5becd","commitMessage":"@@@Harmonize HTTP client metrics\n\nThis commit harmonizes the auto-configurations for RestTemplate and\nWebClient in a single `HttpClientMetricsAutoConfiguration`. Doing so\nallows to give a better scope for the shared `MeterFilter`.\n\nAs a result`WebClientMetricsAutoConfiguration` has moved to the `client`\npackage.\n\nCloses gh-14269\n","date":"2018-08-31 20:45:03","modifiedFileCount":"2","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-08-30 19:08:42","codes":[{"authorDate":"2018-08-31 20:44:46","commitOrder":3,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.out.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.out.toString())\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","date":"2018-08-31 20:45:17","endLine":87,"groupId":"11628","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ef/3c05647b33db7940117d1a46020a39ec99075a.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=10\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tWebClient.Builder builder = context.getBean(WebClient.Builder.class);\n\t\t\t\t\tWebClient webClient = builder.clientConnector(this.connector).build();\n\t\t\t\t\tMetricsProperties properties = context\n\t\t\t\t\t\t\t.getBean(MetricsProperties.class);\n\t\t\t\t\tint maxUriTags = properties.getWeb().getClient().getMaxUriTags();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tfor (int i = 0; i < maxUriTags + 10; i++) {\n\t\t\t\t\t\twebClient.get().uri(\"http://example.org/projects/\" + i).exchange()\n\t\t\t\t\t\t\t\t.block();\n\t\t\t\t\t}\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters())\n\t\t\t\t\t\t\t.hasSize(maxUriTags);\n\t\t\t\t\tassertThat(this.out.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.out.toString())\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2018-08-30 19:08:42","commitOrder":3,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(TestController.class,\n\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-08-30 19:08:42","endLine":124,"groupId":"11628","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/35/4f6671cda1c8466687c6f04c142508a52d649d.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(TestController.class,\n\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"N"}],"commitId":"4634811c7c71d5837327bd3db1e9359197c15f0d","commitMessage":"@@@Polish\n","date":"2018-08-31 20:45:17","modifiedFileCount":"2","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-09-04 21:04:02","codes":[{"authorDate":"2018-08-31 20:44:46","commitOrder":4,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.out.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.out.toString())\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","date":"2018-08-31 20:45:17","endLine":87,"groupId":"11628","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ef/3c05647b33db7940117d1a46020a39ec99075a.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.out.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.out.toString())\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"},{"authorDate":"2018-09-04 21:04:02","commitOrder":4,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-09-04 21:04:02","endLine":121,"groupId":"11628","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/19/99bd4c22bcb1aa1cddf22a11ad43d14baa587b.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(TestController.class,\n\t\t\t\t\t\tMeterRegistryConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"1ceb076035ac68369ddb7f68485ee23b61d8ea20","commitMessage":"@@@Harmonize Metrics test\n\nThis commit harmonizes metrics test to rely on `MetricRun.simple()`\nrather than configuring a simple `MeterRegistry` manually. Rather than\napplying related auto-configurations automatically.  `MetricsRun` only\nenable the absolute minimum.\n\nSee gh-14255\n","date":"2018-09-04 21:04:02","modifiedFileCount":"7","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-09-04 21:04:02","codes":[{"authorDate":"2018-12-06 05:56:29","commitOrder":5,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","date":"2018-12-06 09:49:09","endLine":88,"groupId":"11628","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/57/995da9aefcb99e8920b9e302db99d5a43c2d0f.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.out.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.out.toString())\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2018-09-04 21:04:02","commitOrder":5,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-09-04 21:04:02","endLine":121,"groupId":"11628","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/19/99bd4c22bcb1aa1cddf22a11ad43d14baa587b.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"N"}],"commitId":"59d2b0a3fb2e9f83345c23b32e5bbac47c74dbd2","commitMessage":"@@@Upgrade tests to Junit5\n\nSee gh-14737\n","date":"2018-12-06 09:49:09","modifiedFileCount":"800","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2018-09-04 21:04:02","codes":[{"authorDate":"2019-01-14 21:11:39","commitOrder":6,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","date":"2019-01-14 21:11:39","endLine":89,"groupId":"11628","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7d/525f1701443fb44172c6ecfb8d0c32cd89cc67.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2018-09-04 21:04:02","commitOrder":6,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-09-04 21:04:02","endLine":121,"groupId":"11628","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/19/99bd4c22bcb1aa1cddf22a11ad43d14baa587b.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"N"}],"commitId":"0fa38444800e0586d30393b9ef5b4f2fe781d8f4","commitMessage":"@@@Merge pull request #15695 from izeye\n\n* pr/15695:\n  Polish contribution\n  Polish\n","date":"2019-01-14 21:11:39","modifiedFileCount":"10","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-31 17:03:02","codes":[{"authorDate":"2019-05-31 17:03:02","commitOrder":7,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","date":"2019-06-01 01:33:10","endLine":90,"groupId":"11628","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e5/ca1169ad28fc76b87829c956081676ce7686e3.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString()).contains(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2019-05-31 17:03:02","commitOrder":7,"curCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-06-01 01:33:10","endLine":125,"groupId":"11628","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a7/2026551eb9ecad8f3fe8080c6fc88073f42199.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied() {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class,\n\t\t\t\t\t\tWebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \"\n\t\t\t\t\t\t\t\t\t+ \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"0644a7940108d6db7c352a807bfb2b8a34d544e2","commitMessage":"@@@Repackage output capture and always use extension declaratively\n\nCloses gh-17029\n","date":"2019-06-01 01:33:10","modifiedFileCount":"61","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":8,"curCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\").run((context) -> {\n\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\tassertThat(capturedOutput).contains(\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":84,"groupId":"11628","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d0/24660b9d0e1c844134953f64286718ad9feed5.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\").run((context) -> {\n\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\tassertThat(capturedOutput).contains(\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":8,"curCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, WebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \" + \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":116,"groupId":"11628","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f4/dbc4834c1452468cf608a205eec7c7b9616ea3.src","preCode":"\tpublic void afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, WebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \" + \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-15 01:07:47","codes":[{"authorDate":"2019-07-15 01:07:47","commitOrder":9,"curCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput output) {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\").run((context) -> {\n\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\tassertThat(output).contains(\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t});\n\t}\n","date":"2019-07-15 07:24:18","endLine":84,"groupId":"10947","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a0/2513398ff94620d334af671315dff8c5ca1ab3.src","preCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.max-uri-tags=2\").run((context) -> {\n\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(2);\n\t\t\tassertThat(capturedOutput).contains(\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t.contains(\"Are you using 'uriVariables'?\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2019-07-15 01:07:47","commitOrder":9,"curCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput output) {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, WebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(output).contains(\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-07-15 07:24:18","endLine":115,"groupId":"10947","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"afterMaxUrisReachedFurtherUrisAreDenied","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/b45e46826933dfa98220a82fc72956eac6b1ba.src","preCode":"\tvoid afterMaxUrisReachedFurtherUrisAreDenied(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withUserConfiguration(TestController.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, WebMvcAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=2\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(2);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.contains(\"Reached the maximum number of URI tags \" + \"for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"c3816bfe7be8cc1a042396b2b7d8d236aa585c52","commitMessage":"@@@Polish output capture names\n","date":"2019-07-15 07:24:18","modifiedFileCount":"73","status":"M","submitter":"Phillip Webb"}]
