[{"authorTime":"2018-03-19 03:46:13","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void bindToCollectionShouldAlsoCallSetterIfPresent() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.items\", \"a,b,c\");\n\t\tthis.sources.add(source);\n\t\tExampleCollectionBean result = this.binder\n\t\t\t\t.bind(\"foo\", ExampleCollectionBean.class).get();\n\t\tassertThat(result.getItems()).hasSize(4);\n\t\tassertThat(result.getItems()).containsExactly(\"a\", \"b\", \"c\", \"d\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":306,"groupId":"2605","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToCollectionShouldAlsoCallSetterIfPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/91/2409782fa790c57241a30e2b054fa4da84ba1b.src","preCode":"\tpublic void bindToCollectionShouldAlsoCallSetterIfPresent() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.items\", \"a,b,c\");\n\t\tthis.sources.add(source);\n\t\tExampleCollectionBean result = this.binder\n\t\t\t\t.bind(\"foo\", ExampleCollectionBean.class).get();\n\t\tassertThat(result.getItems()).hasSize(4);\n\t\tassertThat(result.getItems()).containsExactly(\"a\", \"b\", \"c\", \"d\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/CollectionBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"NB"},{"authorDate":"2018-03-19 03:46:13","commitOrder":3,"curCode":"\tpublic void bindToCollectionWithDefaultConstructor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.items\", \"a,b,c,c\");\n\t\tthis.sources.add(source);\n\t\tExampleCustomWithDefaultConstructorBean result = this.binder\n\t\t\t\t.bind(\"foo\", ExampleCustomWithDefaultConstructorBean.class).get();\n\t\tassertThat(result.getItems()).hasSize(4);\n\t\tassertThat(result.getItems()).containsExactly(\"a\", \"b\", \"c\", \"c\");\n\t}\n","date":"2018-03-19 03:46:13","endLine":327,"groupId":"2605","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToCollectionWithDefaultConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3c/eeff8dd792cd72898ad8888a79d2690c097f48.src","preCode":"\tpublic void bindToCollectionWithDefaultConstructor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.items\", \"a,b,c,c\");\n\t\tthis.sources.add(source);\n\t\tExampleCustomWithDefaultConstructorBean result = this.binder\n\t\t\t\t.bind(\"foo\", ExampleCustomWithDefaultConstructorBean.class).get();\n\t\tassertThat(result.getItems()).hasSize(4);\n\t\tassertThat(result.getItems()).containsExactly(\"a\", \"b\", \"c\", \"c\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/CollectionBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"B"}],"commitId":"c66781a3d31f3654008d355108cdab4af65f5130","commitMessage":"@@@Set using collection copies when possible\n\nUpdate `Map` and `Collection` binders to create a copy of the existing\ncollection whenever possible. Prior to this commit the binder would\nalways mutate the existing value and then call the setter with the\nsame instance. This could cause issues if the setter expected a\ndifferent instance.\n\nFixes gh-12322\n","date":"2018-03-19 03:46:13","modifiedFileCount":"4","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid bindToCollectionShouldAlsoCallSetterIfPresent() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.items\", \"a,b,c\");\n\t\tthis.sources.add(source);\n\t\tExampleCollectionBean result = this.binder.bind(\"foo\", ExampleCollectionBean.class).get();\n\t\tassertThat(result.getItems()).hasSize(4);\n\t\tassertThat(result.getItems()).containsExactly(\"a\", \"b\", \"c\", \"d\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":303,"groupId":"101410","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToCollectionShouldAlsoCallSetterIfPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c2/022252c53b76e3ffcb116feb8baa62bd6611cf.src","preCode":"\tpublic void bindToCollectionShouldAlsoCallSetterIfPresent() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.items\", \"a,b,c\");\n\t\tthis.sources.add(source);\n\t\tExampleCollectionBean result = this.binder.bind(\"foo\", ExampleCollectionBean.class).get();\n\t\tassertThat(result.getItems()).hasSize(4);\n\t\tassertThat(result.getItems()).containsExactly(\"a\", \"b\", \"c\", \"d\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/CollectionBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid bindToCollectionWithDefaultConstructor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.items\", \"a,b,c,c\");\n\t\tthis.sources.add(source);\n\t\tExampleCustomWithDefaultConstructorBean result = this.binder\n\t\t\t\t.bind(\"foo\", ExampleCustomWithDefaultConstructorBean.class).get();\n\t\tassertThat(result.getItems()).hasSize(4);\n\t\tassertThat(result.getItems()).containsExactly(\"a\", \"b\", \"c\", \"c\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":326,"groupId":"101410","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToCollectionWithDefaultConstructor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c2/022252c53b76e3ffcb116feb8baa62bd6611cf.src","preCode":"\tpublic void bindToCollectionWithDefaultConstructor() {\n\t\t\r\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.items\", \"a,b,c,c\");\n\t\tthis.sources.add(source);\n\t\tExampleCustomWithDefaultConstructorBean result = this.binder\n\t\t\t\t.bind(\"foo\", ExampleCustomWithDefaultConstructorBean.class).get();\n\t\tassertThat(result.getItems()).hasSize(4);\n\t\tassertThat(result.getItems()).containsExactly(\"a\", \"b\", \"c\", \"c\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/CollectionBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
