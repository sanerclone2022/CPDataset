[{"authorTime":"2018-02-06 20:56:28","codes":[{"authorDate":"2018-02-06 20:56:28","commitOrder":1,"curCode":"\t\tpublic Filter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request,\n\t\t\t\t\t\tHttpServletResponse response, FilterChain filterChain)\n\t\t\t\t\t\t\t\tthrows ServletException, IOException {\n\t\t\t\t\tfilterChain.doFilter(new HttpServletRequestWrapper(request) {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic Principal getUserPrincipal() {\n\n\t\t\t\t\t\t\treturn new Principal() {\n\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic String getName() {\n\t\t\t\t\t\t\t\t\treturn \"Alice\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, response);\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n","date":"2018-02-07 17:51:10","endLine":172,"groupId":"15671","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"securityFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b0/56702bd2f50fe70e4f6bd3d5c0225d3e56c750.src","preCode":"\t\tpublic Filter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request,\n\t\t\t\t\t\tHttpServletResponse response, FilterChain filterChain)\n\t\t\t\t\t\t\t\tthrows ServletException, IOException {\n\t\t\t\t\tfilterChain.doFilter(new HttpServletRequestWrapper(request) {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic Principal getUserPrincipal() {\n\n\t\t\t\t\t\t\treturn new Principal() {\n\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic String getName() {\n\t\t\t\t\t\t\t\t\treturn \"Alice\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, response);\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/MvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"},{"authorDate":"2018-02-06 20:56:28","commitOrder":1,"curCode":"\t\tpublic Filter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request,\n\t\t\t\t\t\tHttpServletResponse response, FilterChain filterChain)\n\t\t\t\t\t\t\t\tthrows ServletException, IOException {\n\t\t\t\t\tfilterChain.doFilter(new HttpServletRequestWrapper(request) {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic Principal getUserPrincipal() {\n\n\t\t\t\t\t\t\treturn new Principal() {\n\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic String getName() {\n\t\t\t\t\t\t\t\t\treturn \"Alice\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, response);\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n","date":"2018-02-07 17:51:10","endLine":156,"groupId":"15671","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"securityFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e0/b91c6f1cb8493830720da299ff66ee459977fc.src","preCode":"\t\tpublic Filter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request,\n\t\t\t\t\t\tHttpServletResponse response, FilterChain filterChain)\n\t\t\t\t\t\t\t\tthrows ServletException, IOException {\n\t\t\t\t\tfilterChain.doFilter(new HttpServletRequestWrapper(request) {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic Principal getUserPrincipal() {\n\n\t\t\t\t\t\t\treturn new Principal() {\n\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic String getName() {\n\t\t\t\t\t\t\t\t\treturn \"Alice\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, response);\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/jersey/JerseyWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"}],"commitId":"1975d511069af65f9d5ee609c3557fc0d9b92516","commitMessage":"@@@Add support for injecting a Principal into web endpoint operations\n\nCloses gh-11941\n","date":"2018-02-07 17:51:10","modifiedFileCount":"7","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2018-02-20 15:34:26","codes":[{"authorDate":"2018-02-20 15:34:26","commitOrder":2,"curCode":"\t\tpublic Filter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request,\n\t\t\t\t\t\tHttpServletResponse response, FilterChain filterChain)\n\t\t\t\t\t\tthrows ServletException, IOException {\n\t\t\t\t\tSecurityContext context = SecurityContextHolder.createEmptyContext();\n\t\t\t\t\tcontext.setAuthentication(new UsernamePasswordAuthenticationToken(\n\t\t\t\t\t\t\t\"Alice\", \"secret\",\n\t\t\t\t\t\t\tArrays.asList(new SimpleGrantedAuthority(\"ROLE_ACTUATOR\"))));\n\t\t\t\t\tSecurityContextHolder.setContext(context);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfilterChain.doFilter(new SecurityContextHolderAwareRequestWrapper(\n\t\t\t\t\t\t\t\trequest, \"ROLE_\"), response);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\tSecurityContextHolder.clearContext();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n","date":"2018-02-20 20:12:05","endLine":166,"groupId":"15751","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"securityFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/34ca75901fd9e59b0273e7a52976c05e8340ee.src","preCode":"\t\tpublic Filter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request,\n\t\t\t\t\t\tHttpServletResponse response, FilterChain filterChain)\n\t\t\t\t\t\tthrows ServletException, IOException {\n\t\t\t\t\tfilterChain.doFilter(new HttpServletRequestWrapper(request) {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic Principal getUserPrincipal() {\n\n\t\t\t\t\t\t\treturn new Principal() {\n\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic String getName() {\n\t\t\t\t\t\t\t\t\treturn \"Alice\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, response);\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/MvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2018-02-20 15:34:26","commitOrder":2,"curCode":"\t\tpublic Filter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request,\n\t\t\t\t\t\tHttpServletResponse response, FilterChain filterChain)\n\t\t\t\t\t\tthrows ServletException, IOException {\n\t\t\t\t\tSecurityContext context = SecurityContextHolder.createEmptyContext();\n\t\t\t\t\tcontext.setAuthentication(new UsernamePasswordAuthenticationToken(\n\t\t\t\t\t\t\t\"Alice\", \"secret\",\n\t\t\t\t\t\t\tArrays.asList(new SimpleGrantedAuthority(\"ROLE_ACTUATOR\"))));\n\t\t\t\t\tSecurityContextHolder.setContext(context);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfilterChain.doFilter(new SecurityContextHolderAwareRequestWrapper(\n\t\t\t\t\t\t\t\trequest, \"ROLE_\"), response);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\tSecurityContextHolder.clearContext();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n","date":"2018-02-20 20:12:05","endLine":153,"groupId":"15751","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"securityFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ed/7c28a1af9e6f5578814f9817bbb457d213b39a.src","preCode":"\t\tpublic Filter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request,\n\t\t\t\t\t\tHttpServletResponse response, FilterChain filterChain)\n\t\t\t\t\t\tthrows ServletException, IOException {\n\t\t\t\t\tfilterChain.doFilter(new HttpServletRequestWrapper(request) {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic Principal getUserPrincipal() {\n\n\t\t\t\t\t\t\treturn new Principal() {\n\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic String getName() {\n\t\t\t\t\t\t\t\t\treturn \"Alice\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, response);\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/jersey/JerseyWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"}],"commitId":"3e4baf744ea24ffa12eafa91db3cb5d69ebbb41a","commitMessage":"@@@Use role-based security to show details in the health endpoint\n\nCloses gh-11869\n","date":"2018-02-20 20:12:05","modifiedFileCount":"23","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-02 03:29:51","codes":[{"authorDate":"2019-07-02 03:29:51","commitOrder":3,"curCode":"\t\tFilter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,\n\t\t\t\t\t\tFilterChain filterChain) throws ServletException, IOException {\n\t\t\t\t\tSecurityContext context = SecurityContextHolder.createEmptyContext();\n\t\t\t\t\tcontext.setAuthentication(new UsernamePasswordAuthenticationToken(\"Alice\", \"secret\",\n\t\t\t\t\t\t\tArrays.asList(new SimpleGrantedAuthority(\"ROLE_ACTUATOR\"))));\n\t\t\t\t\tSecurityContextHolder.setContext(context);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfilterChain.doFilter(new SecurityContextHolderAwareRequestWrapper(request, \"ROLE_\"), response);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\tSecurityContextHolder.clearContext();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n","date":"2019-07-04 02:39:47","endLine":178,"groupId":"10464","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"securityFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/84/f82b400abceb17f098f3da395a5889b9227b21.src","preCode":"\t\tpublic Filter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,\n\t\t\t\t\t\tFilterChain filterChain) throws ServletException, IOException {\n\t\t\t\t\tSecurityContext context = SecurityContextHolder.createEmptyContext();\n\t\t\t\t\tcontext.setAuthentication(new UsernamePasswordAuthenticationToken(\"Alice\", \"secret\",\n\t\t\t\t\t\t\tArrays.asList(new SimpleGrantedAuthority(\"ROLE_ACTUATOR\"))));\n\t\t\t\t\tSecurityContextHolder.setContext(context);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfilterChain.doFilter(new SecurityContextHolderAwareRequestWrapper(request, \"ROLE_\"), response);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\tSecurityContextHolder.clearContext();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/MvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2019-07-02 03:29:51","commitOrder":3,"curCode":"\t\tFilter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,\n\t\t\t\t\t\tFilterChain filterChain) throws ServletException, IOException {\n\t\t\t\t\tSecurityContext context = SecurityContextHolder.createEmptyContext();\n\t\t\t\t\tcontext.setAuthentication(new UsernamePasswordAuthenticationToken(\"Alice\", \"secret\",\n\t\t\t\t\t\t\tArrays.asList(new SimpleGrantedAuthority(\"ROLE_ACTUATOR\"))));\n\t\t\t\t\tSecurityContextHolder.setContext(context);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfilterChain.doFilter(new SecurityContextHolderAwareRequestWrapper(request, \"ROLE_\"), response);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\tSecurityContextHolder.clearContext();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n","date":"2019-07-04 02:39:47","endLine":143,"groupId":"10464","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"securityFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a3/c7b90766fd198295891255302dad65f1c6cda1.src","preCode":"\t\tpublic Filter securityFilter() {\n\t\t\treturn new OncePerRequestFilter() {\n\n\t\t\t\t@Override\n\t\t\t\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,\n\t\t\t\t\t\tFilterChain filterChain) throws ServletException, IOException {\n\t\t\t\t\tSecurityContext context = SecurityContextHolder.createEmptyContext();\n\t\t\t\t\tcontext.setAuthentication(new UsernamePasswordAuthenticationToken(\"Alice\", \"secret\",\n\t\t\t\t\t\t\tArrays.asList(new SimpleGrantedAuthority(\"ROLE_ACTUATOR\"))));\n\t\t\t\t\tSecurityContextHolder.setContext(context);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfilterChain.doFilter(new SecurityContextHolderAwareRequestWrapper(request, \"ROLE_\"), response);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\tSecurityContextHolder.clearContext();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/jersey/JerseyWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"a66c4d3096877b33119366ea9ea165c892b462c8","commitMessage":"@@@Unify method visibility of private classes\n\nApply checkstyle rule to ensure that private and package private\nclasses do not have unnecessary public methods. Test classes have\nalso been unified as much as possible to use default scoped\ninner-classes.\n\nCloses gh-7316\n","date":"2019-07-04 02:39:47","modifiedFileCount":"906","status":"M","submitter":"Phillip Webb"}]
