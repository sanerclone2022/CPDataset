[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void rootUriShouldApply() throws Exception {\n\t\tRestTemplate restTemplate = this.builder.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();\n\t\tserver.expect(requestTo(\"http://example.com/hello\")).andRespond(withSuccess());\n\t\trestTemplate.getForEntity(\"/hello\", String.class);\n\t\tserver.verify();\n\t}\n","date":"2017-10-05 11:18:56","endLine":116,"groupId":"8582","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"rootUriShouldApply","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/dd8295966d40788c8389f0ce140121e983c2d2.src","preCode":"\tpublic void rootUriShouldApply() throws Exception {\n\t\tRestTemplate restTemplate = this.builder.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();\n\t\tserver.expect(requestTo(\"http://example.com/hello\")).andRespond(withSuccess());\n\t\trestTemplate.getForEntity(\"/hello\", String.class);\n\t\tserver.verify();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/client/RestTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri() {\n\t\tRestTemplate restTemplate = new RestTemplateBuilder()\n\t\t\t\t.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = RootUriRequestExpectationManager\n\t\t\t\t.bindTo(restTemplate);\n\t\tserver.expect(requestTo(\"/hello\")).andRespond(withSuccess());\n\t\tthis.thrown.expect(AssertionError.class);\n\t\tthis.thrown.expectMessage(\n\t\t\t\t\"expected:<http://example.com/hello> but was:<http://spring.io/hello>\");\n\t\trestTemplate.getForEntity(\"http://spring.io/hello\", String.class);\n\t}\n","date":"2017-10-05 11:18:56","endLine":193,"groupId":"10396","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/88/1a6aa9b8f593490148606c002d197cc2e0fd79.src","preCode":"\tpublic void boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri() {\n\t\tRestTemplate restTemplate = new RestTemplateBuilder()\n\t\t\t\t.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = RootUriRequestExpectationManager\n\t\t\t\t.bindTo(restTemplate);\n\t\tserver.expect(requestTo(\"/hello\")).andRespond(withSuccess());\n\t\tthis.thrown.expect(AssertionError.class);\n\t\tthis.thrown.expectMessage(\n\t\t\t\t\"expected:<http://example.com/hello> but was:<http://spring.io/hello>\");\n\t\trestTemplate.getForEntity(\"http://spring.io/hello\", String.class);\n\t}\n","realPath":"spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void rootUriShouldApply() {\n\t\tRestTemplate restTemplate = this.builder.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();\n\t\tserver.expect(requestTo(\"http://example.com/hello\")).andRespond(withSuccess());\n\t\trestTemplate.getForEntity(\"/hello\", String.class);\n\t\tserver.verify();\n\t}\n","date":"2017-12-12 18:57:30","endLine":116,"groupId":"8582","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"rootUriShouldApply","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ef/3faf4dfe628025f02b298fd391b5014e4f412c.src","preCode":"\tpublic void rootUriShouldApply() throws Exception {\n\t\tRestTemplate restTemplate = this.builder.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();\n\t\tserver.expect(requestTo(\"http://example.com/hello\")).andRespond(withSuccess());\n\t\trestTemplate.getForEntity(\"/hello\", String.class);\n\t\tserver.verify();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/client/RestTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tpublic void boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri() {\n\t\tRestTemplate restTemplate = new RestTemplateBuilder()\n\t\t\t\t.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = RootUriRequestExpectationManager\n\t\t\t\t.bindTo(restTemplate);\n\t\tserver.expect(requestTo(\"/hello\")).andRespond(withSuccess());\n\t\tthis.thrown.expect(AssertionError.class);\n\t\tthis.thrown.expectMessage(\n\t\t\t\t\"expected:<http://example.com/hello> but was:<http://spring.io/hello>\");\n\t\trestTemplate.getForEntity(\"http://spring.io/hello\", String.class);\n\t}\n","date":"2017-10-05 11:18:56","endLine":193,"groupId":"10396","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/88/1a6aa9b8f593490148606c002d197cc2e0fd79.src","preCode":"\tpublic void boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri() {\n\t\tRestTemplate restTemplate = new RestTemplateBuilder()\n\t\t\t\t.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = RootUriRequestExpectationManager\n\t\t\t\t.bindTo(restTemplate);\n\t\tserver.expect(requestTo(\"/hello\")).andRespond(withSuccess());\n\t\tthis.thrown.expect(AssertionError.class);\n\t\tthis.thrown.expectMessage(\n\t\t\t\t\"expected:<http://example.com/hello> but was:<http://spring.io/hello>\");\n\t\trestTemplate.getForEntity(\"http://spring.io/hello\", String.class);\n\t}\n","realPath":"spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"N"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-10-02 02:18:16","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void rootUriShouldApply() {\n\t\tRestTemplate restTemplate = this.builder.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();\n\t\tserver.expect(requestTo(\"http://example.com/hello\")).andRespond(withSuccess());\n\t\trestTemplate.getForEntity(\"/hello\", String.class);\n\t\tserver.verify();\n\t}\n","date":"2017-12-12 18:57:30","endLine":116,"groupId":"8582","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"rootUriShouldApply","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ef/3faf4dfe628025f02b298fd391b5014e4f412c.src","preCode":"\tpublic void rootUriShouldApply() {\n\t\tRestTemplate restTemplate = this.builder.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();\n\t\tserver.expect(requestTo(\"http://example.com/hello\")).andRespond(withSuccess());\n\t\trestTemplate.getForEntity(\"/hello\", String.class);\n\t\tserver.verify();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/client/RestTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"N"},{"authorDate":"2018-10-02 02:18:16","commitOrder":3,"curCode":"\tpublic void boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri() {\n\t\tRestTemplate restTemplate = new RestTemplateBuilder()\n\t\t\t\t.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = RootUriRequestExpectationManager\n\t\t\t\t.bindTo(restTemplate);\n\t\tserver.expect(requestTo(\"/hello\")).andRespond(withSuccess());\n\t\tassertThatExceptionOfType(AssertionError.class).isThrownBy(\n\t\t\t\t() -> restTemplate.getForEntity(\"http://spring.io/hello\", String.class))\n\t\t\t\t.withMessageContaining(\n\t\t\t\t\t\t\"expected:<http://example.com/hello> but was:<http://spring.io/hello>\");\n\t}\n","date":"2018-10-03 01:55:28","endLine":187,"groupId":"10396","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f2/9041db17706233f25ff63522c25f85326aa179.src","preCode":"\tpublic void boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri() {\n\t\tRestTemplate restTemplate = new RestTemplateBuilder()\n\t\t\t\t.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = RootUriRequestExpectationManager\n\t\t\t\t.bindTo(restTemplate);\n\t\tserver.expect(requestTo(\"/hello\")).andRespond(withSuccess());\n\t\tthis.thrown.expect(AssertionError.class);\n\t\tthis.thrown.expectMessage(\n\t\t\t\t\"expected:<http://example.com/hello> but was:<http://spring.io/hello>\");\n\t\trestTemplate.getForEntity(\"http://spring.io/hello\", String.class);\n\t}\n","realPath":"spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"d76bba5e6f5c702c8bf2aa86fee19ec7de8ed3cb","commitMessage":"@@@Migrate from ExpectedException rule to AssertJ\n\nReplace ExpectedException JUnit rules with AssertJ exception\nassertions.\n\nCloses gh-14336\n","date":"2018-10-03 01:55:28","modifiedFileCount":"271","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-03-28 19:48:47","codes":[{"authorDate":"2019-03-28 19:48:47","commitOrder":4,"curCode":"\tpublic void rootUriShouldApply() {\n\t\tRestTemplate restTemplate = this.builder.rootUri(\"https://example.com\").build();\n\t\tMockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();\n\t\tserver.expect(requestTo(\"https://example.com/hello\")).andRespond(withSuccess());\n\t\trestTemplate.getForEntity(\"/hello\", String.class);\n\t\tserver.verify();\n\t}\n","date":"2019-03-28 19:48:47","endLine":118,"groupId":"8582","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"rootUriShouldApply","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f2/070c7f9a29a06fc24c5de102136d2b04effc9b.src","preCode":"\tpublic void rootUriShouldApply() {\n\t\tRestTemplate restTemplate = this.builder.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();\n\t\tserver.expect(requestTo(\"http://example.com/hello\")).andRespond(withSuccess());\n\t\trestTemplate.getForEntity(\"/hello\", String.class);\n\t\tserver.verify();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/client/RestTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2019-03-28 19:48:47","commitOrder":4,"curCode":"\tpublic void boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri() {\n\t\tRestTemplate restTemplate = new RestTemplateBuilder()\n\t\t\t\t.rootUri(\"https://example.com\").build();\n\t\tMockRestServiceServer server = RootUriRequestExpectationManager\n\t\t\t\t.bindTo(restTemplate);\n\t\tserver.expect(requestTo(\"/hello\")).andRespond(withSuccess());\n\t\tassertThatExceptionOfType(AssertionError.class).isThrownBy(\n\t\t\t\t() -> restTemplate.getForEntity(\"https://spring.io/hello\", String.class))\n\t\t\t\t.withMessageContaining(\n\t\t\t\t\t\t\"expected:<https://example.com/hello> but was:<https://spring.io/hello>\");\n\t}\n","date":"2019-03-28 19:48:47","endLine":188,"groupId":"10396","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b2/aedfda42154771a32ee71864d394a8493fa7ce.src","preCode":"\tpublic void boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri() {\n\t\tRestTemplate restTemplate = new RestTemplateBuilder()\n\t\t\t\t.rootUri(\"http://example.com\").build();\n\t\tMockRestServiceServer server = RootUriRequestExpectationManager\n\t\t\t\t.bindTo(restTemplate);\n\t\tserver.expect(requestTo(\"/hello\")).andRespond(withSuccess());\n\t\tassertThatExceptionOfType(AssertionError.class).isThrownBy(\n\t\t\t\t() -> restTemplate.getForEntity(\"http://spring.io/hello\", String.class))\n\t\t\t\t.withMessageContaining(\n\t\t\t\t\t\t\"expected:<http://example.com/hello> but was:<http://spring.io/hello>\");\n\t}\n","realPath":"spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"}],"commitId":"878a635bfb6c28ee135b4f84e12fc09a42d1a3a9","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2019-03-28 19:48:47","modifiedFileCount":"67","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid rootUriShouldApply() {\n\t\tRestTemplate restTemplate = this.builder.rootUri(\"https://example.com\").build();\n\t\tMockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();\n\t\tserver.expect(requestTo(\"https://example.com/hello\")).andRespond(withSuccess());\n\t\trestTemplate.getForEntity(\"/hello\", String.class);\n\t\tserver.verify();\n\t}\n","date":"2019-06-07 19:25:54","endLine":117,"groupId":"101938","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"rootUriShouldApply","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c8/158b233dace65fd2a9392fad905b836d4ba13e.src","preCode":"\tpublic void rootUriShouldApply() {\n\t\tRestTemplate restTemplate = this.builder.rootUri(\"https://example.com\").build();\n\t\tMockRestServiceServer server = MockRestServiceServer.bindTo(restTemplate).build();\n\t\tserver.expect(requestTo(\"https://example.com/hello\")).andRespond(withSuccess());\n\t\trestTemplate.getForEntity(\"/hello\", String.class);\n\t\tserver.verify();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/client/RestTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri() {\n\t\tRestTemplate restTemplate = new RestTemplateBuilder().rootUri(\"https://example.com\").build();\n\t\tMockRestServiceServer server = RootUriRequestExpectationManager.bindTo(restTemplate);\n\t\tserver.expect(requestTo(\"/hello\")).andRespond(withSuccess());\n\t\tassertThatExceptionOfType(AssertionError.class)\n\t\t\t\t.isThrownBy(() -> restTemplate.getForEntity(\"https://spring.io/hello\", String.class))\n\t\t\t\t.withMessageContaining(\"expected:<https://example.com/hello> but was:<https://spring.io/hello>\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":172,"groupId":"101938","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/06/ed862fe4130a7df671e6d9eb8f7a14b05bb02f.src","preCode":"\tpublic void boundRestTemplateWhenUrlIncludesDomainShouldNotPrefixRootUri() {\n\t\tRestTemplate restTemplate = new RestTemplateBuilder().rootUri(\"https://example.com\").build();\n\t\tMockRestServiceServer server = RootUriRequestExpectationManager.bindTo(restTemplate);\n\t\tserver.expect(requestTo(\"/hello\")).andRespond(withSuccess());\n\t\tassertThatExceptionOfType(AssertionError.class)\n\t\t\t\t.isThrownBy(() -> restTemplate.getForEntity(\"https://spring.io/hello\", String.class))\n\t\t\t\t.withMessageContaining(\"expected:<https://example.com/hello> but was:<https://spring.io/hello>\");\n\t}\n","realPath":"spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
