[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void sslNeedsClientAuthenticationFailsWithoutClientCertificate()\n\t\t\tthrows Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.NEED, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(\n\t\t\t\thttpClient);\n\t\tgetResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory);\n\t}\n","date":"2017-10-05 11:18:56","endLine":538,"groupId":"15181","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sslNeedsClientAuthenticationFailsWithoutClientCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/779a44c49daf64ead469014da81e6f86fb0528.src","preCode":"\tpublic void sslNeedsClientAuthenticationFailsWithoutClientCertificate()\n\t\t\tthrows Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.NEED, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(\n\t\t\t\thttpClient);\n\t\tgetResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":523,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void sslWantsClientAuthenticationSucceedsWithoutClientCertificate()\n\t\t\tthrows Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.WANT, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(\n\t\t\t\thttpClient);\n\t\tassertThat(getResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory))\n\t\t\t\t.isEqualTo(\"test\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":580,"groupId":"7141","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sslWantsClientAuthenticationSucceedsWithoutClientCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/779a44c49daf64ead469014da81e6f86fb0528.src","preCode":"\tpublic void sslWantsClientAuthenticationSucceedsWithoutClientCertificate()\n\t\t\tthrows Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.WANT, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(\n\t\t\t\thttpClient);\n\t\tassertThat(getResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory))\n\t\t\t\t.isEqualTo(\"test\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":564,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2019-03-04 16:29:13","commitOrder":2,"curCode":"\tpublic void sslNeedsClientAuthenticationFailsWithoutClientCertificate()\n\t\t\tthrows Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.NEED, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(\n\t\t\t\thttpClient);\n\t\tString localUrl = getLocalUrl(\"https\", \"/test.txt\");\n\t\tassertThatIOException().isThrownBy(() -> getResponse(localUrl, requestFactory));\n\t}\n","date":"2019-03-04 16:29:13","endLine":552,"groupId":"15181","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sslNeedsClientAuthenticationFailsWithoutClientCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4b/b3ced71af4aef67651cbda224f122503b07131.src","preCode":"\tpublic void sslNeedsClientAuthenticationFailsWithoutClientCertificate()\n\t\t\tthrows Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.NEED, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(\n\t\t\t\thttpClient);\n\t\tgetResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":536,"status":"M"},{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tpublic void sslWantsClientAuthenticationSucceedsWithoutClientCertificate()\n\t\t\tthrows Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.WANT, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(\n\t\t\t\thttpClient);\n\t\tassertThat(getResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory))\n\t\t\t\t.isEqualTo(\"test\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":580,"groupId":"7141","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sslWantsClientAuthenticationSucceedsWithoutClientCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/779a44c49daf64ead469014da81e6f86fb0528.src","preCode":"\tpublic void sslWantsClientAuthenticationSucceedsWithoutClientCertificate()\n\t\t\tthrows Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.WANT, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(\n\t\t\t\thttpClient);\n\t\tassertThat(getResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory))\n\t\t\t\t.isEqualTo(\"test\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":564,"status":"N"}],"commitId":"7b8563a87722edb0acc59ee905f28c1d35e565f7","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2019-03-04 16:29:13","modifiedFileCount":"11","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid sslNeedsClientAuthenticationFailsWithoutClientCertificate() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.NEED, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);\n\t\tString localUrl = getLocalUrl(\"https\", \"/test.txt\");\n\t\tassertThatIOException().isThrownBy(() -> getResponse(localUrl, requestFactory));\n\t}\n","date":"2019-06-07 19:25:54","endLine":498,"groupId":"15181","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"sslNeedsClientAuthenticationFailsWithoutClientCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/d43aa3647fe43b229f82a62bb32039d0be8f53.src","preCode":"\tpublic void sslNeedsClientAuthenticationFailsWithoutClientCertificate() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.NEED, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);\n\t\tString localUrl = getLocalUrl(\"https\", \"/test.txt\");\n\t\tassertThatIOException().isThrownBy(() -> getResponse(localUrl, requestFactory));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid sslWantsClientAuthenticationSucceedsWithoutClientCertificate() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.WANT, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);\n\t\tassertThat(getResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory)).isEqualTo(\"test\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":530,"groupId":"7141","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"sslWantsClientAuthenticationSucceedsWithoutClientCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/d43aa3647fe43b229f82a62bb32039d0be8f53.src","preCode":"\tpublic void sslWantsClientAuthenticationSucceedsWithoutClientCertificate() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.WANT, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);\n\t\tassertThat(getResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory)).isEqualTo(\"test\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":519,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-01-10 21:48:43","codes":[{"authorDate":"2020-01-10 21:48:43","commitOrder":4,"curCode":"\tvoid sslNeedsClientAuthenticationFailsWithoutClientCertificate() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.NEED, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = this.httpClientBuilder.get().setSSLSocketFactory(socketFactory).build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);\n\t\tString localUrl = getLocalUrl(\"https\", \"/test.txt\");\n\t\tassertThatIOException().isThrownBy(() -> getResponse(localUrl, requestFactory));\n\t}\n","date":"2020-01-10 22:15:35","endLine":541,"groupId":"101998","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"sslNeedsClientAuthenticationFailsWithoutClientCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/db/f98c89b0ed1c62f1cfa8dea1de5df28d516f0b.src","preCode":"\tvoid sslNeedsClientAuthenticationFailsWithoutClientCertificate() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.NEED, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);\n\t\tString localUrl = getLocalUrl(\"https\", \"/test.txt\");\n\t\tassertThatIOException().isThrownBy(() -> getResponse(localUrl, requestFactory));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":529,"status":"M"},{"authorDate":"2020-01-10 21:48:43","commitOrder":4,"curCode":"\tvoid sslWantsClientAuthenticationSucceedsWithoutClientCertificate() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.WANT, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = this.httpClientBuilder.get().setSSLSocketFactory(socketFactory).build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);\n\t\tassertThat(getResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory)).isEqualTo(\"test\");\n\t}\n","date":"2020-01-10 22:15:35","endLine":573,"groupId":"101998","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"sslWantsClientAuthenticationSucceedsWithoutClientCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/db/f98c89b0ed1c62f1cfa8dea1de5df28d516f0b.src","preCode":"\tvoid sslWantsClientAuthenticationSucceedsWithoutClientCertificate() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\taddTestTxtFile(factory);\n\t\tfactory.setSsl(getSsl(ClientAuth.WANT, \"password\", \"classpath:test.jks\"));\n\t\tthis.webServer = factory.getWebServer();\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tHttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);\n\t\tassertThat(getResponse(getLocalUrl(\"https\", \"/test.txt\"), requestFactory)).isEqualTo(\"test\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":562,"status":"M"}],"commitId":"ce99db19028b54886ae99c1fd916e613a982b65f","commitMessage":"@@@Port the build to Gradle\n\nCloses gh-19609\nCloses gh-19608\n","date":"2020-01-10 22:15:35","modifiedFileCount":"46","status":"M","submitter":"Andy Wilkinson"}]
