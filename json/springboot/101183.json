[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void parentContextCreationThatIsRunDirectly() throws Exception {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tChildConfig.class).contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext())\n\t\t\t\t.setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook())\n\t\t\t\t.isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class)\n\t\t\t\t.getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":134,"groupId":"8049","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parentContextCreationThatIsRunDirectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e3/64aedc68f93bb69b87e13c8ef14309baaf523d.src","preCode":"\tpublic void parentContextCreationThatIsRunDirectly() throws Exception {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tChildConfig.class).contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext())\n\t\t\t\t.setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook())\n\t\t\t\t.isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class)\n\t\t\t\t.getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void parentContextCreationThatIsBuiltThenRun() throws Exception {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tChildConfig.class).contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext())\n\t\t\t\t.setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook())\n\t\t\t\t.isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class)\n\t\t\t\t.getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"b=bravo\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":150,"groupId":"8051","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parentContextCreationThatIsBuiltThenRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e3/64aedc68f93bb69b87e13c8ef14309baaf523d.src","preCode":"\tpublic void parentContextCreationThatIsBuiltThenRun() throws Exception {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tChildConfig.class).contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext())\n\t\t\t\t.setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook())\n\t\t\t\t.isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class)\n\t\t\t\t.getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"b=bravo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void parentContextCreationThatIsRunDirectly() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tChildConfig.class).contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext())\n\t\t\t\t.setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook())\n\t\t\t\t.isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class)\n\t\t\t\t.getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":134,"groupId":"8049","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parentContextCreationThatIsRunDirectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/69/857218fc9112c7b29f53e94d8e3ee47414318d.src","preCode":"\tpublic void parentContextCreationThatIsRunDirectly() throws Exception {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tChildConfig.class).contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext())\n\t\t\t\t.setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook())\n\t\t\t\t.isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class)\n\t\t\t\t.getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void parentContextCreationThatIsBuiltThenRun() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tChildConfig.class).contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext())\n\t\t\t\t.setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook())\n\t\t\t\t.isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class)\n\t\t\t\t.getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"b=bravo\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":150,"groupId":"8051","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parentContextCreationThatIsBuiltThenRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/69/857218fc9112c7b29f53e94d8e3ee47414318d.src","preCode":"\tpublic void parentContextCreationThatIsBuiltThenRun() throws Exception {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tChildConfig.class).contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext())\n\t\t\t\t.setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook())\n\t\t\t\t.isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class)\n\t\t\t\t.getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"b=bravo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid parentContextCreationThatIsRunDirectly() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":127,"groupId":"8049","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"parentContextCreationThatIsRunDirectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d9/8e84ed595eafaea6f64f84214beb582d8a0ead.src","preCode":"\tpublic void parentContextCreationThatIsRunDirectly() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid parentContextCreationThatIsBuiltThenRun() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"b=bravo\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":139,"groupId":"8051","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"parentContextCreationThatIsBuiltThenRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d9/8e84ed595eafaea6f64f84214beb582d8a0ead.src","preCode":"\tpublic void parentContextCreationThatIsBuiltThenRun() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"b=bravo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-07-14 21:26:39","codes":[{"authorDate":"2020-07-14 21:26:39","commitOrder":4,"curCode":"\tvoid parentContextCreationThatIsRunDirectly() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextFactory(ApplicationContextFactory.forContextClass(SpyApplicationContext.class));\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t}\n","date":"2020-07-16 22:03:08","endLine":139,"groupId":"8049","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"parentContextCreationThatIsRunDirectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/5ac4c5d5b63108af5c894b75fe0ffa479c5748.src","preCode":"\tvoid parentContextCreationThatIsRunDirectly() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"},{"authorDate":"2020-07-14 21:26:39","commitOrder":4,"curCode":"\tvoid parentContextCreationThatIsBuiltThenRun() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextFactory(ApplicationContextFactory.forContextClass(SpyApplicationContext.class));\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"b=bravo\");\n\t}\n","date":"2020-07-16 22:03:08","endLine":151,"groupId":"8051","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"parentContextCreationThatIsBuiltThenRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/5ac4c5d5b63108af5c894b75fe0ffa479c5748.src","preCode":"\tvoid parentContextCreationThatIsBuiltThenRun() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextClass(SpyApplicationContext.class);\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"b=bravo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"0c8e52e87718af385478cb6746821b3aa2ece44e","commitMessage":"@@@Avoid using reflection to create SpringApplication's context\n\nCloses gh-22322\n","date":"2020-07-16 22:03:08","modifiedFileCount":"7","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-07-23 08:59:38","codes":[{"authorDate":"2020-07-23 08:59:38","commitOrder":5,"curCode":"\tvoid parentContextCreationThatIsRunDirectly() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextFactory(ApplicationContextFactory.ofContextClass(SpyApplicationContext.class));\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t}\n","date":"2020-07-23 09:25:27","endLine":139,"groupId":"8049","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"parentContextCreationThatIsRunDirectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/43/b657ddf87e822482f0dcca3618a9b5442e73be.src","preCode":"\tvoid parentContextCreationThatIsRunDirectly() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextFactory(ApplicationContextFactory.forContextClass(SpyApplicationContext.class));\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"},{"authorDate":"2020-07-23 08:59:38","commitOrder":5,"curCode":"\tvoid parentContextCreationThatIsBuiltThenRun() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextFactory(ApplicationContextFactory.ofContextClass(SpyApplicationContext.class));\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"b=bravo\");\n\t}\n","date":"2020-07-23 09:25:27","endLine":151,"groupId":"8051","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"parentContextCreationThatIsBuiltThenRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/43/b657ddf87e822482f0dcca3618a9b5442e73be.src","preCode":"\tvoid parentContextCreationThatIsBuiltThenRun() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextFactory(ApplicationContextFactory.forContextClass(SpyApplicationContext.class));\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"b=bravo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"14c1b0938aa2a50d9c62a885288d7750b0ddbacf","commitMessage":"@@@Polish\n","date":"2020-07-23 09:25:27","modifiedFileCount":"9","status":"M","submitter":"Phillip Webb"},{"authorTime":"2021-06-10 00:00:48","codes":[{"authorDate":"2021-06-10 00:00:48","commitOrder":6,"curCode":"\tvoid parentContextCreationThatIsRunDirectly() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextFactory(ApplicationContextFactory.ofContextClass(SpyApplicationContext.class));\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(SpringApplicationShutdownHookInstance.get()).didNotRegisterApplicationContext(this.context);\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t}\n","date":"2021-06-10 22:56:48","endLine":141,"groupId":"101183","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"parentContextCreationThatIsRunDirectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c5/717794498ed05c3263ace33eb7140b0df0122b.src","preCode":"\tvoid parentContextCreationThatIsRunDirectly() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextFactory(ApplicationContextFactory.ofContextClass(SpyApplicationContext.class));\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.run(\"foo.bar=baz\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs())\n\t\t\t\t.contains(\"foo.bar=baz\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"foo.bar=baz\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2021-06-10 00:00:48","commitOrder":6,"curCode":"\tvoid parentContextCreationThatIsBuiltThenRun() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextFactory(ApplicationContextFactory.ofContextClass(SpyApplicationContext.class));\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(SpringApplicationShutdownHookInstance.get()).didNotRegisterApplicationContext(this.context);\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"b=bravo\");\n\t}\n","date":"2021-06-10 22:56:48","endLine":153,"groupId":"101183","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"parentContextCreationThatIsBuiltThenRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c5/717794498ed05c3263ace33eb7140b0df0122b.src","preCode":"\tvoid parentContextCreationThatIsBuiltThenRun() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ChildConfig.class)\n\t\t\t\t.contextFactory(ApplicationContextFactory.ofContextClass(SpyApplicationContext.class));\n\t\tapplication.parent(ExampleConfig.class);\n\t\tthis.context = application.build(\"a=alpha\").run(\"b=bravo\");\n\t\tverify(((SpyApplicationContext) this.context).getApplicationContext()).setParent(any(ApplicationContext.class));\n\t\tassertThat(((SpyApplicationContext) this.context).getRegisteredShutdownHook()).isFalse();\n\t\tassertThat(this.context.getParent().getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"a=alpha\");\n\t\tassertThat(this.context.getBean(ApplicationArguments.class).getNonOptionArgs()).contains(\"b=bravo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"f3f119b111d21785bca0772526aeb18a2e57f2f9","commitMessage":"@@@Don't shutdown logging system before contexts\n\nAdd `SpringApplicationShutdownHook` to manage orderly application\nshutdown.  specifically around the `LoggingSystem`. `SpringApplication`\nnow offers a `getShutdownHandlers()` method that can be used to add\nhandlers that are guaranteed to only run after the `ApplicationContext`\nhas been closed and is inactive.\n\nFixes gh-26660\n","date":"2021-06-10 22:56:48","modifiedFileCount":"5","status":"M","submitter":"Andy Wilkinson"}]
