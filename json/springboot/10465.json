[{"authorTime":"2018-01-19 12:52:35","codes":[{"authorDate":"2018-01-19 12:52:35","commitOrder":1,"curCode":"\tpublic void mappingWithNoPrefix() throws Exception {\n\t\tExposableControllerEndpoint first = firstEndpoint();\n\t\tExposableControllerEndpoint second = secondEndpoint();\n\t\tControllerEndpointHandlerMapping mapping = createMapping(\"\", first, second);\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/first\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(first.getController(), \"get\"));\n\t\tassertThat(mapping.getHandler(request(\"POST\", \"/second\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(second.getController(), \"save\"));\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/third\"))).isNull();\n\t}\n","date":"2018-01-20 13:06:32","endLine":63,"groupId":"7968","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mappingWithNoPrefix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/11/1952b3dd4e5ffd1085e19f771cad3f9fd39208.src","preCode":"\tpublic void mappingWithNoPrefix() throws Exception {\n\t\tExposableControllerEndpoint first = firstEndpoint();\n\t\tExposableControllerEndpoint second = secondEndpoint();\n\t\tControllerEndpointHandlerMapping mapping = createMapping(\"\", first, second);\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/first\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(first.getController(), \"get\"));\n\t\tassertThat(mapping.getHandler(request(\"POST\", \"/second\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(second.getController(), \"save\"));\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/third\"))).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/ControllerEndpointHandlerMappingTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2018-01-19 12:52:35","commitOrder":1,"curCode":"\tpublic void mappingWithPrefix() throws Exception {\n\t\tExposableControllerEndpoint first = firstEndpoint();\n\t\tExposableControllerEndpoint second = secondEndpoint();\n\t\tControllerEndpointHandlerMapping mapping = createMapping(\"actuator\", first,\n\t\t\t\tsecond);\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/actuator/first\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(first.getController(), \"get\"));\n\t\tassertThat(mapping.getHandler(request(\"POST\", \"/actuator/second\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(second.getController(), \"save\"));\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/first\"))).isNull();\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/second\"))).isNull();\n\t}\n","date":"2018-01-20 13:06:32","endLine":77,"groupId":"7968","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mappingWithPrefix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/11/1952b3dd4e5ffd1085e19f771cad3f9fd39208.src","preCode":"\tpublic void mappingWithPrefix() throws Exception {\n\t\tExposableControllerEndpoint first = firstEndpoint();\n\t\tExposableControllerEndpoint second = secondEndpoint();\n\t\tControllerEndpointHandlerMapping mapping = createMapping(\"actuator\", first,\n\t\t\t\tsecond);\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/actuator/first\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(first.getController(), \"get\"));\n\t\tassertThat(mapping.getHandler(request(\"POST\", \"/actuator/second\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(second.getController(), \"save\"));\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/first\"))).isNull();\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/second\"))).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/ControllerEndpointHandlerMappingTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"bda9b892b399d0b6b5d385b1d90f6011c09e8ec0","commitMessage":"@@@Add direct WebFlux and WebMvc endpoint support\n\nAdd `@ControllerEndpoint` and `@RestControllerEndpoint` annotations that\ncan be used to develop a Spring-only request mapped endpoint. Both\nSpring MVC and Spring WebFlux are supported.\n\nThis feature is primarily for use when deeper Spring integration is\nrequired or when existing Spring Boot 1.5 projects want to migrate to\nSpring Boot 2.0 without re-writing existing endpoints. It comes at the\nexpense of portability.  since such endpoints will be missing from\nJersey.\n\nFixes gh-10257\n","date":"2018-01-20 13:06:32","modifiedFileCount":"14","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid mappingWithNoPrefix() throws Exception {\n\t\tExposableControllerEndpoint first = firstEndpoint();\n\t\tExposableControllerEndpoint second = secondEndpoint();\n\t\tControllerEndpointHandlerMapping mapping = createMapping(\"\", first, second);\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/first\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(first.getController(), \"get\"));\n\t\tassertThat(mapping.getHandler(request(\"POST\", \"/second\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(second.getController(), \"save\"));\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/third\"))).isNull();\n\t}\n","date":"2019-06-07 19:25:54","endLine":60,"groupId":"10465","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mappingWithNoPrefix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/462ceca4cde74fd8369d32b47726469294e60d.src","preCode":"\tpublic void mappingWithNoPrefix() throws Exception {\n\t\tExposableControllerEndpoint first = firstEndpoint();\n\t\tExposableControllerEndpoint second = secondEndpoint();\n\t\tControllerEndpointHandlerMapping mapping = createMapping(\"\", first, second);\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/first\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(first.getController(), \"get\"));\n\t\tassertThat(mapping.getHandler(request(\"POST\", \"/second\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(second.getController(), \"save\"));\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/third\"))).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/ControllerEndpointHandlerMappingTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid mappingWithPrefix() throws Exception {\n\t\tExposableControllerEndpoint first = firstEndpoint();\n\t\tExposableControllerEndpoint second = secondEndpoint();\n\t\tControllerEndpointHandlerMapping mapping = createMapping(\"actuator\", first, second);\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/actuator/first\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(first.getController(), \"get\"));\n\t\tassertThat(mapping.getHandler(request(\"POST\", \"/actuator/second\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(second.getController(), \"save\"));\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/first\"))).isNull();\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/second\"))).isNull();\n\t}\n","date":"2019-06-07 19:25:54","endLine":73,"groupId":"10465","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mappingWithPrefix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/462ceca4cde74fd8369d32b47726469294e60d.src","preCode":"\tpublic void mappingWithPrefix() throws Exception {\n\t\tExposableControllerEndpoint first = firstEndpoint();\n\t\tExposableControllerEndpoint second = secondEndpoint();\n\t\tControllerEndpointHandlerMapping mapping = createMapping(\"actuator\", first, second);\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/actuator/first\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(first.getController(), \"get\"));\n\t\tassertThat(mapping.getHandler(request(\"POST\", \"/actuator/second\")).getHandler())\n\t\t\t\t.isEqualTo(handlerOf(second.getController(), \"save\"));\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/first\"))).isNull();\n\t\tassertThat(mapping.getHandler(request(\"GET\", \"/second\"))).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/ControllerEndpointHandlerMappingTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
