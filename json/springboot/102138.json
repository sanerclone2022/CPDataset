[{"authorTime":"2019-09-20 03:34:11","codes":[{"authorDate":"2019-12-14 03:31:24","commitOrder":2,"curCode":"\tstatic void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tGenericBeanDefinition definition = new GenericBeanDefinition();\n\t\t\tdefinition.setBeanClass(BoundConfigurationProperties.class);\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t}\n","date":"2019-12-14 04:47:01","endLine":89,"groupId":"2348","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"register","params":"(BeanDefinitionRegistryregistry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/02/33fee6154aa268e6dd3da2eee972236b8f4e36.src","preCode":"\tstatic void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tGenericBeanDefinition definition = new GenericBeanDefinition();\n\t\t\tdefinition.setBeanClass(BoundConfigurationProperties.class);\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/BoundConfigurationProperties.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2019-09-20 03:34:11","commitOrder":2,"curCode":"\tpublic static void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tGenericBeanDefinition definition = new GenericBeanDefinition();\n\t\t\tdefinition.setBeanClass(ConfigurationPropertiesBindingPostProcessor.class);\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t\tConfigurationPropertiesBinder.register(registry);\n\t}\n","date":"2019-09-21 04:42:33","endLine":128,"groupId":"12837","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(BeanDefinitionRegistryregistry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/01/a4ca37b9d007ee34cec16700d10816b6f2ac89.src","preCode":"\tpublic static void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tGenericBeanDefinition definition = new GenericBeanDefinition();\n\t\t\tdefinition.setBeanClass(ConfigurationPropertiesBindingPostProcessor.class);\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t\tConfigurationPropertiesBinder.register(registry);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"NB"}],"commitId":"695de2c6f50fea45f9f97d414ca59615e0c4811c","commitMessage":"@@@Polish end-to-end configuration properties tracing\n\nSee gh-14880\n","date":"2019-12-14 04:47:01","modifiedFileCount":"7","status":"M","submitter":"Phillip Webb"},{"authorTime":"2020-07-14 19:37:19","codes":[{"authorDate":"2020-07-14 19:37:19","commitOrder":3,"curCode":"\tstatic void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tBeanDefinition definition = BeanDefinitionBuilder\n\t\t\t\t\t.genericBeanDefinition(BoundConfigurationProperties.class, BoundConfigurationProperties::new)\n\t\t\t\t\t.getBeanDefinition();\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t}\n","date":"2020-07-14 21:11:51","endLine":90,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"register","params":"(BeanDefinitionRegistryregistry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fd/b806123a0167d8d03b9f15a1b46951e187ce6a.src","preCode":"\tstatic void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tGenericBeanDefinition definition = new GenericBeanDefinition();\n\t\t\tdefinition.setBeanClass(BoundConfigurationProperties.class);\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/BoundConfigurationProperties.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2020-07-14 19:37:19","commitOrder":3,"curCode":"\tpublic static void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tBeanDefinition definition = BeanDefinitionBuilder\n\t\t\t\t\t.genericBeanDefinition(ConfigurationPropertiesBindingPostProcessor.class,\n\t\t\t\t\t\t\tConfigurationPropertiesBindingPostProcessor::new)\n\t\t\t\t\t.getBeanDefinition();\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t\tConfigurationPropertiesBinder.register(registry);\n\t}\n","date":"2020-07-14 21:11:51","endLine":118,"groupId":"2883","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"register","params":"(BeanDefinitionRegistryregistry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/bf64219265b11925226f665b6c3867a373d6f2.src","preCode":"\tpublic static void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tGenericBeanDefinition definition = new GenericBeanDefinition();\n\t\t\tdefinition.setBeanClass(ConfigurationPropertiesBindingPostProcessor.class);\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t\tConfigurationPropertiesBinder.register(registry);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"2af550ef73b3d9d1506888ba9a58026743cedcc0","commitMessage":"@@@Avoid using reflection with manual bean definitions\n\nCloses gh-22318\n","date":"2020-07-14 21:11:51","modifiedFileCount":"9","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-09-06 16:25:00","codes":[{"authorDate":"2020-07-14 19:37:19","commitOrder":4,"curCode":"\tstatic void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tBeanDefinition definition = BeanDefinitionBuilder\n\t\t\t\t\t.genericBeanDefinition(BoundConfigurationProperties.class, BoundConfigurationProperties::new)\n\t\t\t\t\t.getBeanDefinition();\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t}\n","date":"2020-07-14 21:11:51","endLine":90,"groupId":"102138","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"register","params":"(BeanDefinitionRegistryregistry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fd/b806123a0167d8d03b9f15a1b46951e187ce6a.src","preCode":"\tstatic void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tBeanDefinition definition = BeanDefinitionBuilder\n\t\t\t\t\t.genericBeanDefinition(BoundConfigurationProperties.class, BoundConfigurationProperties::new)\n\t\t\t\t\t.getBeanDefinition();\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/BoundConfigurationProperties.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"N"},{"authorDate":"2021-09-06 16:25:00","commitOrder":4,"curCode":"\tpublic static void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tBeanDefinition definition = BeanDefinitionBuilder\n\t\t\t\t\t.rootBeanDefinition(ConfigurationPropertiesBindingPostProcessor.class,\n\t\t\t\t\t\t\tConfigurationPropertiesBindingPostProcessor::new)\n\t\t\t\t\t.getBeanDefinition();\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t\tConfigurationPropertiesBinder.register(registry);\n\t}\n","date":"2021-09-06 16:28:03","endLine":118,"groupId":"102138","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"register","params":"(BeanDefinitionRegistryregistry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a5/f57c6086c02dd27c4b47a8447e9097e1f68814.src","preCode":"\tpublic static void register(BeanDefinitionRegistry registry) {\n\t\tAssert.notNull(registry, \"Registry must not be null\");\n\t\tif (!registry.containsBeanDefinition(BEAN_NAME)) {\n\t\t\tBeanDefinition definition = BeanDefinitionBuilder\n\t\t\t\t\t.genericBeanDefinition(ConfigurationPropertiesBindingPostProcessor.class,\n\t\t\t\t\t\t\tConfigurationPropertiesBindingPostProcessor::new)\n\t\t\t\t\t.getBeanDefinition();\n\t\t\tdefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n\t\t\tregistry.registerBeanDefinition(BEAN_NAME, definition);\n\t\t}\n\t\tConfigurationPropertiesBinder.register(registry);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"b4b71ec015b4efd78db93d15996bb98ce803000f","commitMessage":"@@@Add bind method to ConfigurationProperties bean definition\n\nThis commit reworks the configuration properties registrar to use\nRootBeanDefinition and a standard attribute rather than relying on\na package private sub-class. This allows other components to inspect\nthe metadata if necessary.\n\nCloses gh-27821\n","date":"2021-09-06 16:28:03","modifiedFileCount":"5","status":"M","submitter":"Stephane Nicoll"}]
