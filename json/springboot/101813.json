[{"authorTime":"2018-02-18 00:21:49","codes":[{"authorDate":"2018-02-18 00:21:49","commitOrder":1,"curCode":"\tpublic void convertWhenHasNoElementTypeShouldReturnTrimmedString() {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor\n\t\t\t\t.nested(ReflectionUtils.findField(Values.class, \"noElementType\"), 0);\n\t\tCollection<String> converted = (Collection<String>) this.conversionService\n\t\t\t\t.convert(\" a |  b| c  \", sourceType, targetType);\n\t\tassertThat(converted).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","date":"2018-02-20 12:25:47","endLine":108,"groupId":"5229","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convertWhenHasNoElementTypeShouldReturnTrimmedString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4e/a3bbd16822f5724dc2a9a7b25f2a99a7d58382.src","preCode":"\tpublic void convertWhenHasNoElementTypeShouldReturnTrimmedString() {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor\n\t\t\t\t.nested(ReflectionUtils.findField(Values.class, \"noElementType\"), 0);\n\t\tCollection<String> converted = (Collection<String>) this.conversionService\n\t\t\t\t.convert(\" a |  b| c  \", sourceType, targetType);\n\t\tassertThat(converted).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/DelimitedStringToCollectionConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2018-02-18 00:21:49","commitOrder":1,"curCode":"\tpublic void convertWhenHasCollectionObjectTypeShouldUseCollectionObjectType() {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor\n\t\t\t\t.nested(ReflectionUtils.findField(Values.class, \"specificType\"), 0);\n\t\tObject converted = this.conversionService.convert(\"a*b\", sourceType, targetType);\n\t\tassertThat(converted).isInstanceOf(MyCustomList.class);\n\t}\n","date":"2018-02-20 12:25:47","endLine":141,"groupId":"3871","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convertWhenHasCollectionObjectTypeShouldUseCollectionObjectType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4e/a3bbd16822f5724dc2a9a7b25f2a99a7d58382.src","preCode":"\tpublic void convertWhenHasCollectionObjectTypeShouldUseCollectionObjectType() {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor\n\t\t\t\t.nested(ReflectionUtils.findField(Values.class, \"specificType\"), 0);\n\t\tObject converted = this.conversionService.convert(\"a*b\", sourceType, targetType);\n\t\tassertThat(converted).isInstanceOf(MyCustomList.class);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/DelimitedStringToCollectionConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"}],"commitId":"20109e27be24da74e884c14a03afc8f9561e4196","commitMessage":"@@@Add ApplicationConversionService and fix binder\n\nCreate a new `ApplicationConversionService` similar in design to the\nDefaultFormattingConversionService from Spring Framework. The new\nconversion service provides a central place for custom conversion logic\nsupported by Spring Boot.\n\nAlso replace the `BindingConversionService` with an internal\n`BindConverter` class that now invokes the `SimpleTypeConverter`\ndirectly. Binding for `@ConfigurationProperties` has been updated so\nthat any custom property editors registered with the BeanFactory can\nbe used.\n\nFixes gh-12095\n","date":"2018-02-20 12:25:47","modifiedFileCount":"29","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-05-11 16:01:30","codes":[{"authorDate":"2018-02-18 00:21:49","commitOrder":2,"curCode":"\tpublic void convertWhenHasNoElementTypeShouldReturnTrimmedString() {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor\n\t\t\t\t.nested(ReflectionUtils.findField(Values.class, \"noElementType\"), 0);\n\t\tCollection<String> converted = (Collection<String>) this.conversionService\n\t\t\t\t.convert(\" a |  b| c  \", sourceType, targetType);\n\t\tassertThat(converted).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","date":"2018-02-20 12:25:47","endLine":108,"groupId":"5229","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"convertWhenHasNoElementTypeShouldReturnTrimmedString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4e/a3bbd16822f5724dc2a9a7b25f2a99a7d58382.src","preCode":"\tpublic void convertWhenHasNoElementTypeShouldReturnTrimmedString() {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor\n\t\t\t\t.nested(ReflectionUtils.findField(Values.class, \"noElementType\"), 0);\n\t\tCollection<String> converted = (Collection<String>) this.conversionService\n\t\t\t\t.convert(\" a |  b| c  \", sourceType, targetType);\n\t\tassertThat(converted).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/DelimitedStringToCollectionConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"N"},{"authorDate":"2018-05-11 16:01:30","commitOrder":2,"curCode":"\tpublic void convertWhenHasCollectionObjectTypeShouldUseCollectionObjectType() {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor\n\t\t\t\t.nested(ReflectionUtils.findField(Values.class, \"specificType\"), 0);\n\t\tMyCustomList<String> converted = (MyCustomList<String>) this.conversionService.convert(\"a*b\", sourceType, targetType);\n\t\tassertThat(converted).containsExactly(\"a\", \"b\");\n\t}\n","date":"2018-05-11 16:01:30","endLine":136,"groupId":"3870","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"convertWhenHasCollectionObjectTypeShouldUseCollectionObjectType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/09/7bee0aaa771386f6474dcf61852b33e1194e2c.src","preCode":"\tpublic void convertWhenHasCollectionObjectTypeShouldUseCollectionObjectType() {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor\n\t\t\t\t.nested(ReflectionUtils.findField(Values.class, \"specificType\"), 0);\n\t\tObject converted = this.conversionService.convert(\"a*b\", sourceType, targetType);\n\t\tassertThat(converted).isInstanceOf(MyCustomList.class);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/DelimitedStringToCollectionConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"00a43d8f4d8e80c700bcbd79ef76b89330aa4d38","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-05-11 16:01:30","modifiedFileCount":"8","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid convertWhenHasNoElementTypeShouldReturnTrimmedString(ConversionService conversionService) {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor.nested(ReflectionUtils.findField(Values.class, \"noElementType\"), 0);\n\t\tCollection<String> converted = (Collection<String>) conversionService.convert(\" a |  b| c  \", sourceType,\n\t\t\t\ttargetType);\n\t\tassertThat(converted).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":78,"groupId":"101813","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"convertWhenHasNoElementTypeShouldReturnTrimmedString","params":"(ConversionServiceconversionService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f4/45f2db63ca26b1fa4c9c3e958fb7bcaabc3e5b.src","preCode":"\tpublic void convertWhenHasNoElementTypeShouldReturnTrimmedString() {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor.nested(ReflectionUtils.findField(Values.class, \"noElementType\"), 0);\n\t\tCollection<String> converted = (Collection<String>) this.conversionService.convert(\" a |  b| c  \", sourceType,\n\t\t\t\ttargetType);\n\t\tassertThat(converted).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/DelimitedStringToCollectionConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid convertWhenHasCollectionObjectTypeShouldUseCollectionObjectType(ConversionService conversionService) {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor.nested(ReflectionUtils.findField(Values.class, \"specificType\"), 0);\n\t\tMyCustomList<String> converted = (MyCustomList<String>) conversionService.convert(\"a*b\", sourceType,\n\t\t\t\ttargetType);\n\t\tassertThat(converted).containsExactly(\"a\", \"b\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":97,"groupId":"101813","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"convertWhenHasCollectionObjectTypeShouldUseCollectionObjectType","params":"(ConversionServiceconversionService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f4/45f2db63ca26b1fa4c9c3e958fb7bcaabc3e5b.src","preCode":"\tpublic void convertWhenHasCollectionObjectTypeShouldUseCollectionObjectType() {\n\t\tTypeDescriptor sourceType = TypeDescriptor.valueOf(String.class);\n\t\tTypeDescriptor targetType = TypeDescriptor.nested(ReflectionUtils.findField(Values.class, \"specificType\"), 0);\n\t\tMyCustomList<String> converted = (MyCustomList<String>) this.conversionService.convert(\"a*b\", sourceType,\n\t\t\t\ttargetType);\n\t\tassertThat(converted).containsExactly(\"a\", \"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/DelimitedStringToCollectionConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
