[{"authorTime":"2018-08-09 18:12:06","codes":[{"authorDate":"2018-08-09 18:12:06","commitOrder":1,"curCode":"\tpublic void flywayReportIsProduced() {\n\t\tnew ApplicationContextRunner().withUserConfiguration(Config.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMap<String, FlywayDescriptor> flywayBeans = context\n\t\t\t\t\t\t\t.getBean(FlywayEndpoint.class).flywayBeans().getContexts()\n\t\t\t\t\t\t\t.get(context.getId()).getFlywayBeans();\n\t\t\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations())\n\t\t\t\t\t\t\t.hasSize(3);\n\t\t\t\t});\n\t}\n","date":"2018-08-09 18:15:13","endLine":55,"groupId":"11917","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"flywayReportIsProduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6b/ea6e4b9acc83e41693949d37520e59876f4d24.src","preCode":"\tpublic void flywayReportIsProduced() {\n\t\tnew ApplicationContextRunner().withUserConfiguration(Config.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMap<String, FlywayDescriptor> flywayBeans = context\n\t\t\t\t\t\t\t.getBean(FlywayEndpoint.class).flywayBeans().getContexts()\n\t\t\t\t\t\t\t.get(context.getId()).getFlywayBeans();\n\t\t\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations())\n\t\t\t\t\t\t\t.hasSize(3);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/flyway/FlywayEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2018-08-09 18:12:06","commitOrder":1,"curCode":"\tpublic void whenFlywayHasBeenBaselinedFlywayReportIsProduced() {\n\t\tnew ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(BaselinedFlywayConfig.class, Config.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMap<String, FlywayDescriptor> flywayBeans = context\n\t\t\t\t\t\t\t.getBean(FlywayEndpoint.class).flywayBeans().getContexts()\n\t\t\t\t\t\t\t.get(context.getId()).getFlywayBeans();\n\t\t\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations())\n\t\t\t\t\t\t\t.hasSize(3);\n\t\t\t\t});\n\t}\n","date":"2018-08-09 18:15:13","endLine":69,"groupId":"11917","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"whenFlywayHasBeenBaselinedFlywayReportIsProduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6b/ea6e4b9acc83e41693949d37520e59876f4d24.src","preCode":"\tpublic void whenFlywayHasBeenBaselinedFlywayReportIsProduced() {\n\t\tnew ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(BaselinedFlywayConfig.class, Config.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMap<String, FlywayDescriptor> flywayBeans = context\n\t\t\t\t\t\t\t.getBean(FlywayEndpoint.class).flywayBeans().getContexts()\n\t\t\t\t\t\t\t.get(context.getId()).getFlywayBeans();\n\t\t\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations())\n\t\t\t\t\t\t\t.hasSize(3);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/flyway/FlywayEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"}],"commitId":"2756d87b3f49bb1b613c541d6ba53dd6e2fdf1b3","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-08-09 18:15:13","modifiedFileCount":"2","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2019-04-09 00:26:34","codes":[{"authorDate":"2019-04-09 00:26:34","commitOrder":2,"curCode":"\tpublic void flywayReportIsProduced() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tMap<String, FlywayDescriptor> flywayBeans = context\n\t\t\t\t\t.getBean(FlywayEndpoint.class).flywayBeans().getContexts()\n\t\t\t\t\t.get(context.getId()).getFlywayBeans();\n\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations()).hasSize(3);\n\t\t});\n\t}\n","date":"2019-04-09 18:15:05","endLine":55,"groupId":"11917","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"flywayReportIsProduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/df/97d7e1d979cd6845fb49488badd70ba3b9dd72.src","preCode":"\tpublic void flywayReportIsProduced() {\n\t\tnew ApplicationContextRunner().withUserConfiguration(Config.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMap<String, FlywayDescriptor> flywayBeans = context\n\t\t\t\t\t\t\t.getBean(FlywayEndpoint.class).flywayBeans().getContexts()\n\t\t\t\t\t\t\t.get(context.getId()).getFlywayBeans();\n\t\t\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations())\n\t\t\t\t\t\t\t.hasSize(3);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/flyway/FlywayEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2019-04-09 00:26:34","commitOrder":2,"curCode":"\tpublic void whenFlywayHasBeenBaselinedFlywayReportIsProduced() {\n\t\tthis.contextRunner.withBean(FlywayMigrationStrategy.class, () -> (flyway) -> {\n\t\t\tflyway.setBaselineVersionAsString(\"2\");\n\t\t\tflyway.baseline();\n\t\t\tflyway.migrate();\n\t\t}).run((context) -> {\n\t\t\tMap<String, FlywayDescriptor> flywayBeans = context\n\t\t\t\t\t.getBean(FlywayEndpoint.class).flywayBeans().getContexts()\n\t\t\t\t\t.get(context.getId()).getFlywayBeans();\n\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations()).hasSize(3);\n\t\t});\n\t}\n","date":"2019-04-09 18:15:05","endLine":71,"groupId":"11917","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"whenFlywayHasBeenBaselinedFlywayReportIsProduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/df/97d7e1d979cd6845fb49488badd70ba3b9dd72.src","preCode":"\tpublic void whenFlywayHasBeenBaselinedFlywayReportIsProduced() {\n\t\tnew ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(BaselinedFlywayConfig.class, Config.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMap<String, FlywayDescriptor> flywayBeans = context\n\t\t\t\t\t\t\t.getBean(FlywayEndpoint.class).flywayBeans().getContexts()\n\t\t\t\t\t\t\t.get(context.getId()).getFlywayBeans();\n\t\t\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations())\n\t\t\t\t\t\t\t.hasSize(3);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/flyway/FlywayEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"a82807213209443ec6db5a3760995fbabea02a33","commitMessage":"@@@Migrate tests to use withBean\n\nSee gh-16011\n","date":"2019-04-09 18:15:05","modifiedFileCount":"14","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid flywayReportIsProduced() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tMap<String, FlywayDescriptor> flywayBeans = context.getBean(FlywayEndpoint.class).flywayBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getFlywayBeans();\n\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations()).hasSize(3);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":53,"groupId":"11917","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"flywayReportIsProduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3e/92e00062104f4c9c551cbdb740f1e857e93f14.src","preCode":"\tpublic void flywayReportIsProduced() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tMap<String, FlywayDescriptor> flywayBeans = context.getBean(FlywayEndpoint.class).flywayBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getFlywayBeans();\n\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations()).hasSize(3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/flyway/FlywayEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid whenFlywayHasBeenBaselinedFlywayReportIsProduced() {\n\t\tthis.contextRunner.withBean(FlywayMigrationStrategy.class, () -> (flyway) -> {\n\t\t\tflyway.setBaselineVersionAsString(\"2\");\n\t\t\tflyway.baseline();\n\t\t\tflyway.migrate();\n\t\t}).run((context) -> {\n\t\t\tMap<String, FlywayDescriptor> flywayBeans = context.getBean(FlywayEndpoint.class).flywayBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getFlywayBeans();\n\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations()).hasSize(3);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":68,"groupId":"11917","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"whenFlywayHasBeenBaselinedFlywayReportIsProduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3e/92e00062104f4c9c551cbdb740f1e857e93f14.src","preCode":"\tpublic void whenFlywayHasBeenBaselinedFlywayReportIsProduced() {\n\t\tthis.contextRunner.withBean(FlywayMigrationStrategy.class, () -> (flyway) -> {\n\t\t\tflyway.setBaselineVersionAsString(\"2\");\n\t\t\tflyway.baseline();\n\t\t\tflyway.migrate();\n\t\t}).run((context) -> {\n\t\t\tMap<String, FlywayDescriptor> flywayBeans = context.getBean(FlywayEndpoint.class).flywayBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getFlywayBeans();\n\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations()).hasSize(3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/flyway/FlywayEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-08-30 15:26:12","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid flywayReportIsProduced() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tMap<String, FlywayDescriptor> flywayBeans = context.getBean(FlywayEndpoint.class).flywayBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getFlywayBeans();\n\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations()).hasSize(3);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":53,"groupId":"10345","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"flywayReportIsProduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3e/92e00062104f4c9c551cbdb740f1e857e93f14.src","preCode":"\tvoid flywayReportIsProduced() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tMap<String, FlywayDescriptor> flywayBeans = context.getBean(FlywayEndpoint.class).flywayBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getFlywayBeans();\n\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations()).hasSize(3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/flyway/FlywayEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"},{"authorDate":"2019-08-30 15:26:12","commitOrder":4,"curCode":"\tvoid whenFlywayHasBeenBaselinedFlywayReportIsProduced() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.flyway.baseline-version=2\")\n\t\t\t\t.withBean(FlywayMigrationStrategy.class, () -> (flyway) -> {\n\t\t\t\t\tflyway.baseline();\n\t\t\t\t\tflyway.migrate();\n\t\t\t\t}).run((context) -> {\n\t\t\t\t\tMap<String, FlywayDescriptor> flywayBeans = context.getBean(FlywayEndpoint.class).flywayBeans()\n\t\t\t\t\t\t\t.getContexts().get(context.getId()).getFlywayBeans();\n\t\t\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations()).hasSize(3);\n\t\t\t\t});\n\t}\n","date":"2019-08-30 15:26:12","endLine":67,"groupId":"10345","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"whenFlywayHasBeenBaselinedFlywayReportIsProduced","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7a/943253a96f9e1d1eba81507d525b11141f6775.src","preCode":"\tvoid whenFlywayHasBeenBaselinedFlywayReportIsProduced() {\n\t\tthis.contextRunner.withBean(FlywayMigrationStrategy.class, () -> (flyway) -> {\n\t\t\tflyway.setBaselineVersionAsString(\"2\");\n\t\t\tflyway.baseline();\n\t\t\tflyway.migrate();\n\t\t}).run((context) -> {\n\t\t\tMap<String, FlywayDescriptor> flywayBeans = context.getBean(FlywayEndpoint.class).flywayBeans()\n\t\t\t\t\t.getContexts().get(context.getId()).getFlywayBeans();\n\t\t\tassertThat(flywayBeans).hasSize(1);\n\t\t\tassertThat(flywayBeans.values().iterator().next().getMigrations()).hasSize(3);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/flyway/FlywayEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"82ea3b51b3a58a0ec68bd6ca44b96368d33c115d","commitMessage":"@@@Polish\n","date":"2019-08-30 15:26:12","modifiedFileCount":"1","status":"M","submitter":"Andy Wilkinson"}]
