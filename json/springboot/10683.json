[{"authorTime":"2019-11-20 04:10:22","codes":[{"authorDate":"2019-11-20 04:10:22","commitOrder":1,"curCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndPrincipalIsNullReturnsFalse() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tCollections.emptySet());\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(null);\n\t\tassertThat(group.showComponents(this.securityContext)).isFalse();\n\t}\n","date":"2019-11-20 04:10:22","endLine":184,"groupId":"14172","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"showComponentsWhenShowComponentsIsWhenAuthorizedAndPrincipalIsNullReturnsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3d/06379534d8916fab87586ac1393746eb34ea59.src","preCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndPrincipalIsNullReturnsFalse() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tCollections.emptySet());\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(null);\n\t\tassertThat(group.showComponents(this.securityContext)).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"B"},{"authorDate":"2019-11-20 04:10:22","commitOrder":1,"curCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndRolesAreEmptyReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tCollections.emptySet());\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tassertThat(group.showComponents(this.securityContext)).isTrue();\n\t}\n","date":"2019-11-20 04:10:22","endLine":193,"groupId":"14172","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"showComponentsWhenShowComponentsIsWhenAuthorizedAndRolesAreEmptyReturnsTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3d/06379534d8916fab87586ac1393746eb34ea59.src","preCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndRolesAreEmptyReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tCollections.emptySet());\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tassertThat(group.showComponents(this.securityContext)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"B"}],"commitId":"4b2c034f3d0c7a835a16f708f4887e639d89e397","commitMessage":"@@@Merge branch '2.2.x'\n","date":"2019-11-20 04:10:22","modifiedFileCount":"2","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2021-07-14 06:13:04","codes":[{"authorDate":"2021-07-14 06:13:04","commitOrder":2,"curCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndPrincipalIsNullReturnsFalse() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tCollections.emptySet(), null);\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(null);\n\t\tassertThat(group.showComponents(this.securityContext)).isFalse();\n\t}\n","date":"2021-08-12 10:25:25","endLine":184,"groupId":"10683","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"showComponentsWhenShowComponentsIsWhenAuthorizedAndPrincipalIsNullReturnsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7c/30ed2ed108f3f9bd9fe16350139d4c8d4907da.src","preCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndPrincipalIsNullReturnsFalse() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tCollections.emptySet());\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(null);\n\t\tassertThat(group.showComponents(this.securityContext)).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"},{"authorDate":"2021-07-14 06:13:04","commitOrder":2,"curCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndRolesAreEmptyReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tCollections.emptySet(), null);\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tassertThat(group.showComponents(this.securityContext)).isTrue();\n\t}\n","date":"2021-08-12 10:25:25","endLine":193,"groupId":"10683","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"showComponentsWhenShowComponentsIsWhenAuthorizedAndRolesAreEmptyReturnsTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7c/30ed2ed108f3f9bd9fe16350139d4c8d4907da.src","preCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndRolesAreEmptyReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tCollections.emptySet());\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tassertThat(group.showComponents(this.securityContext)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"}],"commitId":"49c86e6e1bef32e21bd2979aabddfcbacbe8ee89","commitMessage":"@@@Allow health groups to be configured at an additional path\n\nCloses gh-25471\n\nCo-authored-by: Phillip Webb <pwebb@vmware.com>\n","date":"2021-08-12 10:25:25","modifiedFileCount":"35","status":"M","submitter":"Madhura Bhave"}]
