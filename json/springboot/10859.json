[{"authorTime":"2020-05-13 02:50:16","codes":[{"authorDate":"2020-05-13 02:50:16","commitOrder":3,"curCode":"\tvoid errorEndpointIsUsedWithEndpoint() {\n\t\tthis.runner.run(withWebTestClient((client) -> {\n\t\t\tClientResponse response = client.get().uri(\"actuator/fail\").accept(MediaType.APPLICATION_JSON).exchange()\n\t\t\t\t\t.block();\n\t\t\tMap<String, ?> body = getResponseBody(response);\n\t\t\tassertThat(body).hasEntrySatisfying(\"exception\",\n\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"IllegalStateException\"));\n\t\t\tassertThat(body).hasEntrySatisfying(\"message\",\n\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"Epic Fail\"));\n\t\t}));\n\t}\n","date":"2020-05-13 02:50:16","endLine":85,"groupId":"10726","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"errorEndpointIsUsedWithEndpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3f/ffcd87bab9bf130eac9367e2528f3e853a9fba.src","preCode":"\tvoid errorEndpointIsUsedWithEndpoint() {\n\t\tthis.runner.run(withWebTestClient((client) -> {\n\t\t\tClientResponse response = client.get().uri(\"actuator/fail\").accept(MediaType.APPLICATION_JSON).exchange()\n\t\t\t\t\t.block();\n\t\t\tMap<String, ?> body = getResponseBody(response);\n\t\t\tassertThat(body).hasEntrySatisfying(\"exception\",\n\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"IllegalStateException\"));\n\t\t\tassertThat(body).hasEntrySatisfying(\"message\",\n\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"Epic Fail\"));\n\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfigurationIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2020-05-13 02:50:16","commitOrder":3,"curCode":"\tvoid errorPageAndErrorControllerIncludeDetails() {\n\t\tthis.runner.withPropertyValues(\"server.error.include-stacktrace=always\", \"server.error.include-message=always\")\n\t\t\t\t.run(withWebTestClient((client) -> {\n\t\t\t\t\tClientResponse response = client.get().uri(\"actuator/fail\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t\t.exchange().block();\n\t\t\t\t\tMap<String, ?> body = getResponseBody(response);\n\t\t\t\t\tassertThat(body).hasEntrySatisfying(\"message\",\n\t\t\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"Epic Fail\"));\n\t\t\t\t\tassertThat(body).hasEntrySatisfying(\"trace\", (value) -> assertThat(value).asString()\n\t\t\t\t\t\t\t.contains(\"java.lang.IllegalStateException: Epic Fail\"));\n\t\t\t\t}));\n\t}\n","date":"2020-05-13 02:50:16","endLine":99,"groupId":"3608","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"errorPageAndErrorControllerIncludeDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3f/ffcd87bab9bf130eac9367e2528f3e853a9fba.src","preCode":"\tvoid errorPageAndErrorControllerIncludeDetails() {\n\t\tthis.runner.withPropertyValues(\"server.error.include-stacktrace=always\", \"server.error.include-message=always\")\n\t\t\t\t.run(withWebTestClient((client) -> {\n\t\t\t\t\tClientResponse response = client.get().uri(\"actuator/fail\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t\t.exchange().block();\n\t\t\t\t\tMap<String, ?> body = getResponseBody(response);\n\t\t\t\t\tassertThat(body).hasEntrySatisfying(\"message\",\n\t\t\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"Epic Fail\"));\n\t\t\t\t\tassertThat(body).hasEntrySatisfying(\"trace\", (value) -> assertThat(value).asString()\n\t\t\t\t\t\t\t.contains(\"java.lang.IllegalStateException: Epic Fail\"));\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfigurationIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"MB"}],"commitId":"0d009477355bcf1980093bcb05bce5f5edc0c064","commitMessage":"@@@Closes gh-21428\n","date":"2020-05-13 02:50:16","modifiedFileCount":"3","status":"M","submitter":"Scott Frederick"},{"authorTime":"2020-09-30 19:21:16","codes":[{"authorDate":"2020-09-30 19:21:16","commitOrder":4,"curCode":"\tvoid errorEndpointIsUsedWithEndpoint() {\n\t\tthis.runner.run(withWebTestClient((client) -> {\n\t\t\tMap<String, ?> body = client.get().uri(\"actuator/fail\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t.exchangeToMono(toResponseBody()).block();\n\t\t\tassertThat(body).hasEntrySatisfying(\"exception\",\n\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"IllegalStateException\"));\n\t\t\tassertThat(body).hasEntrySatisfying(\"message\",\n\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"Epic Fail\"));\n\t\t}));\n\t}\n","date":"2020-09-30 19:46:57","endLine":87,"groupId":"10859","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"errorEndpointIsUsedWithEndpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3d/f8f0c3929f820afb4394f8e314f01763c658f3.src","preCode":"\tvoid errorEndpointIsUsedWithEndpoint() {\n\t\tthis.runner.run(withWebTestClient((client) -> {\n\t\t\tClientResponse response = client.get().uri(\"actuator/fail\").accept(MediaType.APPLICATION_JSON).exchange()\n\t\t\t\t\t.block();\n\t\t\tMap<String, ?> body = getResponseBody(response);\n\t\t\tassertThat(body).hasEntrySatisfying(\"exception\",\n\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"IllegalStateException\"));\n\t\t\tassertThat(body).hasEntrySatisfying(\"message\",\n\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"Epic Fail\"));\n\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfigurationIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2020-09-30 19:21:16","commitOrder":4,"curCode":"\tvoid errorPageAndErrorControllerIncludeDetails() {\n\t\tthis.runner.withPropertyValues(\"server.error.include-stacktrace=always\", \"server.error.include-message=always\")\n\t\t\t\t.run(withWebTestClient((client) -> {\n\t\t\t\t\tMap<String, ?> body = client.get().uri(\"actuator/fail\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t\t.exchangeToMono(toResponseBody()).block();\n\t\t\t\t\tassertThat(body).hasEntrySatisfying(\"message\",\n\t\t\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"Epic Fail\"));\n\t\t\t\t\tassertThat(body).hasEntrySatisfying(\"trace\", (value) -> assertThat(value).asString()\n\t\t\t\t\t\t\t.contains(\"java.lang.IllegalStateException: Epic Fail\"));\n\t\t\t\t}));\n\t}\n","date":"2020-09-30 19:46:57","endLine":100,"groupId":"10859","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"errorPageAndErrorControllerIncludeDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3d/f8f0c3929f820afb4394f8e314f01763c658f3.src","preCode":"\tvoid errorPageAndErrorControllerIncludeDetails() {\n\t\tthis.runner.withPropertyValues(\"server.error.include-stacktrace=always\", \"server.error.include-message=always\")\n\t\t\t\t.run(withWebTestClient((client) -> {\n\t\t\t\t\tClientResponse response = client.get().uri(\"actuator/fail\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t\t.exchange().block();\n\t\t\t\t\tMap<String, ?> body = getResponseBody(response);\n\t\t\t\t\tassertThat(body).hasEntrySatisfying(\"message\",\n\t\t\t\t\t\t\t(value) -> assertThat(value).asString().contains(\"Epic Fail\"));\n\t\t\t\t\tassertThat(body).hasEntrySatisfying(\"trace\", (value) -> assertThat(value).asString()\n\t\t\t\t\t\t\t.contains(\"java.lang.IllegalStateException: Epic Fail\"));\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfigurationIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"366fec33d06b6ab4ee4f1bc9513c07a227d207de","commitMessage":"@@@Adapt to API change in Spring Framework 5.3.0 snapshots\n\nSee gh-23534\n","date":"2020-09-30 19:46:57","modifiedFileCount":"9","status":"M","submitter":"Stephane Nicoll"}]
