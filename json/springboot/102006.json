[{"authorTime":"2019-06-14 06:11:18","codes":[{"authorDate":"2019-06-14 06:11:18","commitOrder":5,"curCode":"\tvoid portClashOfSecondaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\t\t\taddConnector(port, factory);\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer = factory.getWebServer();\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnSecondaryConnector(ex, port));\n\t\t});\n\t}\n","date":"2019-06-14 06:11:18","endLine":848,"groupId":"15765","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"portClashOfSecondaryConnectorResultsInPortInUseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1c/bb13ce32047e18ecdfe755e88400efa852d42a.src","preCode":"\tvoid portClashOfSecondaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\t\t\taddConnector(port, factory);\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer = factory.getWebServer();\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnSecondaryConnector(ex, port));\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":839,"status":"MB"},{"authorDate":"2019-06-14 06:11:18","commitOrder":5,"curCode":"\tprotected void portClashOfPrimaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\t\t\tfactory.setPort(port);\n\t\t\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\t\t\tthis.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnPrimaryConnector(ex, port));\n\t\t});\n\t}\n","date":"2019-06-14 06:11:18","endLine":209,"groupId":"11115","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"portClashOfPrimaryConnectorResultsInPortInUseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/34/8580b685ad4b3f3b86737525c0bea5d120b351.src","preCode":"\tprotected void portClashOfPrimaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\t\t\tfactory.setPort(port);\n\t\t\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\t\t\tthis.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnPrimaryConnector(ex, port));\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"B"}],"commitId":"4c7e457582c00aae351e2ad9a97b495c46a71dda","commitMessage":"@@@Improve analysis of tomcat bind exception\n\nUsing the throwOnFailure attribute on the tomcat connector.  we can now\ndetermine if the underlying exception was a BindException and throw\na PortInUseException instead of the generic WebServerException.\n\nCloses gh-7130\n","date":"2019-06-14 06:11:18","modifiedFileCount":"8","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-06-30 04:56:34","codes":[{"authorDate":"2019-06-14 06:11:18","commitOrder":6,"curCode":"\tvoid portClashOfSecondaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\t\t\taddConnector(port, factory);\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer = factory.getWebServer();\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnSecondaryConnector(ex, port));\n\t\t});\n\t}\n","date":"2019-06-14 06:11:18","endLine":848,"groupId":"15765","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"portClashOfSecondaryConnectorResultsInPortInUseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1c/bb13ce32047e18ecdfe755e88400efa852d42a.src","preCode":"\tvoid portClashOfSecondaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\t\t\taddConnector(port, factory);\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer = factory.getWebServer();\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnSecondaryConnector(ex, port));\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":839,"status":"N"},{"authorDate":"2019-06-30 04:56:34","commitOrder":6,"curCode":"\tvoid portClashOfPrimaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\t\t\tfactory.setPort(port);\n\t\t\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\t\t\tthis.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnPrimaryConnector(ex, port));\n\t\t});\n\t}\n","date":"2019-06-30 04:56:34","endLine":228,"groupId":"11115","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"portClashOfPrimaryConnectorResultsInPortInUseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/b30a7d2104089426ff4543f4abc84f48c127c5.src","preCode":"\tprotected void portClashOfPrimaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\t\t\tfactory.setPort(port);\n\t\t\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\t\t\tthis.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnPrimaryConnector(ex, port));\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"}],"commitId":"a8b7eecaa87563e419b65014eaa381aaef7a1b04","commitMessage":"@@@Merge pull request #17336 from izeye\n\n* gh-17336:\n  Polish TomcatReactiveWebServerFactoryTests\n\nCloses gh-17336\n","date":"2019-06-30 04:56:34","modifiedFileCount":"1","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-06-30 04:56:34","codes":[{"authorDate":"2019-12-20 23:28:40","commitOrder":7,"curCode":"\tvoid portClashOfSecondaryConnectorResultsInPortInUseException() throws Exception {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\t\t\taddConnector(port, factory);\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer = factory.getWebServer();\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnSecondaryConnector(ex, port));\n\t\t});\n\t}\n","date":"2019-12-20 23:28:40","endLine":851,"groupId":"102006","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"portClashOfSecondaryConnectorResultsInPortInUseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ba/b8246d9357645b595347d992afa88a8588c68f.src","preCode":"\tvoid portClashOfSecondaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\t\t\taddConnector(port, factory);\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer = factory.getWebServer();\n\t\t\t\tAbstractServletWebServerFactoryTests.this.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnSecondaryConnector(ex, port));\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":842,"status":"M"},{"authorDate":"2019-06-30 04:56:34","commitOrder":7,"curCode":"\tvoid portClashOfPrimaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\t\t\tfactory.setPort(port);\n\t\t\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\t\t\tthis.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnPrimaryConnector(ex, port));\n\t\t});\n\t}\n","date":"2019-06-30 04:56:34","endLine":228,"groupId":"102006","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"portClashOfPrimaryConnectorResultsInPortInUseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/b30a7d2104089426ff4543f4abc84f48c127c5.src","preCode":"\tvoid portClashOfPrimaryConnectorResultsInPortInUseException() throws IOException {\n\t\tdoWithBlockedPort((port) -> {\n\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> {\n\t\t\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\t\t\tfactory.setPort(port);\n\t\t\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\t\t\tthis.webServer.start();\n\t\t\t}).satisfies((ex) -> handleExceptionCausedByBlockedPortOnPrimaryConnector(ex, port));\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"N"}],"commitId":"07857f7f24232f52a108d4f30e93a3aefd43814c","commitMessage":"@@@Merge branch '2.2.x'\n\nCloses gh-19418\n","date":"2019-12-20 23:28:40","modifiedFileCount":"3","status":"M","submitter":"Andy Wilkinson"}]
