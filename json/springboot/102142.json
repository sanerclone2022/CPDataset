[{"authorTime":"2020-07-14 12:19:10","codes":[{"authorDate":"2020-07-14 12:19:10","commitOrder":1,"curCode":"\tprivate static String getMessage(PropertySource<?> propertySource, ConfigDataLocation location, String propertyName,\n\t\t\tOrigin origin) {\n\t\tStringBuilder message = new StringBuilder(\"Inactive property source '\");\n\t\tmessage.append(propertySource.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' cannot contain property '\");\n\t\tmessage.append(propertyName);\n\t\tmessage.append(\"'\");\n\t\tif (origin != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(origin);\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","date":"2020-07-23 12:02:32","endLine":78,"groupId":"693","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getMessage","params":"(PropertySource<?>propertySource@ConfigDataLocationlocation@StringpropertyName@Originorigin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6b/535117b5118acc6884c63c188fb42800e79a1c.src","preCode":"\tprivate static String getMessage(PropertySource<?> propertySource, ConfigDataLocation location, String propertyName,\n\t\t\tOrigin origin) {\n\t\tStringBuilder message = new StringBuilder(\"Inactive property source '\");\n\t\tmessage.append(propertySource.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' cannot contain property '\");\n\t\tmessage.append(propertyName);\n\t\tmessage.append(\"'\");\n\t\tif (origin != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(origin);\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/InactiveConfigDataAccessException.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2020-07-14 12:19:10","commitOrder":1,"curCode":"\tprivate static String getMessage(ConfigurationProperty property, ConfigurationPropertyName replacement,\n\t\t\tConfigDataLocation location) {\n\t\tStringBuilder message = new StringBuilder(\"Property '\");\n\t\tmessage.append(property.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' is invalid\");\n\t\tif (replacement != null) {\n\t\t\tmessage.append(\" and should be replaced with '\");\n\t\t\tmessage.append(replacement);\n\t\t\tmessage.append(\"'\");\n\t\t}\n\t\tif (property.getOrigin() != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(property.getOrigin());\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","date":"2020-07-23 12:02:32","endLine":132,"groupId":"14925","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getMessage","params":"(ConfigurationPropertyproperty@ConfigurationPropertyNamereplacement@ConfigDataLocationlocation)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/79/e3bba4ccdbfd9a055dc4a385f68993860c9049.src","preCode":"\tprivate static String getMessage(ConfigurationProperty property, ConfigurationPropertyName replacement,\n\t\t\tConfigDataLocation location) {\n\t\tStringBuilder message = new StringBuilder(\"Property '\");\n\t\tmessage.append(property.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' is invalid\");\n\t\tif (replacement != null) {\n\t\t\tmessage.append(\" and should be replaced with '\");\n\t\t\tmessage.append(replacement);\n\t\t\tmessage.append(\"'\");\n\t\t}\n\t\tif (property.getOrigin() != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(property.getOrigin());\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/InvalidConfigDataPropertyException.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"B"}],"commitId":"3352024b1ca641fa0beaaa4cd87788c190242eb0","commitMessage":"@@@Provide ConfigFileApplicationListener replacement\n\nDeprecate `ConfigFileApplicationListener` and provide a replacement\nmechanism that supports arbitrary config data imports.\n\nThis commit updates the following areas:\n\n- Extract `EnvironmentPostProcessor` invocation logic from the\n  `ConfigFileApplicationListener` to new dedicated listener. Also\n  providing support for `Log` injection.\n\n- Extract `RandomPropertySource` adding logic from the\n  `ConfigFileApplicationListener` to a dedicated class.\n\n- Migrate to the recently introduced `DefaultPropertiesPropertySource`\n  class when moving the defaultProperties `PropertySource`\n\n- Replace processing logic with a phased approach to ensure that\n  profile enablement happens in a distinct phase and that profiles\n  can no longer be activated on an ad-hoc basis.\n\n- Provide a more predictable and logical import order for processing\n  `application.properties` and `application.yml` files.\n\n- Add support for a `spring.config.import` property which can be used\n  to import additional config data. Also provide a pluggable API\n  allowing third-parties to resolve and load locations themselves.\n\n- Add `spring.config.activate.on-profile` support which replaces the\n  existing `spring.profiles` property.\n\n- Add `spring.config.activate.on-cloud-platform` support which allows\n  a config data document to be active only on a given cloud platform.\n\n- Support a `spring.config.use-legacy-processing` property allowing the\n  previous processing logic to be used.\n\nCloses gh-22497\n\nCo-authored-by: Madhura Bhave <mbhave@vmware.com>\n","date":"2020-07-23 12:02:32","modifiedFileCount":"17","status":"B","submitter":"Phillip Webb"},{"authorTime":"2020-10-14 05:43:34","codes":[{"authorDate":"2020-10-14 05:43:34","commitOrder":2,"curCode":"\tprivate static String getMessage(PropertySource<?> propertySource, ConfigDataResource location, String propertyName,\n\t\t\tOrigin origin) {\n\t\tStringBuilder message = new StringBuilder(\"Inactive property source '\");\n\t\tmessage.append(propertySource.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' cannot contain property '\");\n\t\tmessage.append(propertyName);\n\t\tmessage.append(\"'\");\n\t\tif (origin != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(origin);\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","date":"2020-10-16 02:33:57","endLine":78,"groupId":"693","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getMessage","params":"(PropertySource<?>propertySource@ConfigDataResourcelocation@StringpropertyName@Originorigin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/14/3e68932b50a82b187db1896ac1e9c739b15bf4.src","preCode":"\tprivate static String getMessage(PropertySource<?> propertySource, ConfigDataLocation location, String propertyName,\n\t\t\tOrigin origin) {\n\t\tStringBuilder message = new StringBuilder(\"Inactive property source '\");\n\t\tmessage.append(propertySource.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' cannot contain property '\");\n\t\tmessage.append(propertyName);\n\t\tmessage.append(\"'\");\n\t\tif (origin != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(origin);\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/InactiveConfigDataAccessException.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2020-10-14 05:43:34","commitOrder":2,"curCode":"\tprivate static String getMessage(ConfigurationProperty property, ConfigurationPropertyName replacement,\n\t\t\tConfigDataResource location) {\n\t\tStringBuilder message = new StringBuilder(\"Property '\");\n\t\tmessage.append(property.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' is invalid\");\n\t\tif (replacement != null) {\n\t\t\tmessage.append(\" and should be replaced with '\");\n\t\t\tmessage.append(replacement);\n\t\t\tmessage.append(\"'\");\n\t\t}\n\t\tif (property.getOrigin() != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(property.getOrigin());\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","date":"2020-10-16 02:33:57","endLine":126,"groupId":"14925","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getMessage","params":"(ConfigurationPropertyproperty@ConfigurationPropertyNamereplacement@ConfigDataResourcelocation)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fc/77435d70f1183136a99c15798b6541a9ed124a.src","preCode":"\tprivate static String getMessage(ConfigurationProperty property, ConfigurationPropertyName replacement,\n\t\t\tConfigDataLocation location) {\n\t\tStringBuilder message = new StringBuilder(\"Property '\");\n\t\tmessage.append(property.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' is invalid\");\n\t\tif (replacement != null) {\n\t\t\tmessage.append(\" and should be replaced with '\");\n\t\t\tmessage.append(replacement);\n\t\t\tmessage.append(\"'\");\n\t\t}\n\t\tif (property.getOrigin() != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(property.getOrigin());\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/InvalidConfigDataPropertyException.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"1cf9fc107e5ed29a44935688eaca2bf6fa85108b","commitMessage":"@@@Improve ConfigData processing code\n\nRefactor `ConfigData` processing code to make it less awkward to\nfollow.\n\nPrior to this commit the `ConfigDataLocationResolver` would take a\nString location and return a `ConfigDataLocation` instance. This was\na little confusing since sometimes we would refer to `location` as the\nString value.  and sometimes it would be the typed instance. We also\nhad nowhere sensible to put the `optional:` prefix logic and we needed\nto pass a `boolean` parameter to a number of methods. The recently\nintroduced `Orgin` support also didn't have a good home.\n\nTo solve this.  `ConfigDataLocation` has been renamed to\n`ConfigDataResource`. This frees up `ConfigDataLocation` to be used\nas a richer `location` type that holds the String value.  the `Orgin`\nand provides a home for the `optional:` logic.\n\nThis commit also cleans up a few other areas of the code.  including\nrenaming `ResourceConfigData...` to `StandardConfigData...`. It also\nintroduces a new exception hierarchy for `ConfigDataNotFoundExceptions`.\n\nCloses gh-23711\n","date":"2020-10-16 02:33:57","modifiedFileCount":"41","status":"M","submitter":"Phillip Webb"},{"authorTime":"2021-01-13 03:49:15","codes":[{"authorDate":"2020-10-14 05:43:34","commitOrder":3,"curCode":"\tprivate static String getMessage(PropertySource<?> propertySource, ConfigDataResource location, String propertyName,\n\t\t\tOrigin origin) {\n\t\tStringBuilder message = new StringBuilder(\"Inactive property source '\");\n\t\tmessage.append(propertySource.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' cannot contain property '\");\n\t\tmessage.append(propertyName);\n\t\tmessage.append(\"'\");\n\t\tif (origin != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(origin);\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","date":"2020-10-16 02:33:57","endLine":78,"groupId":"102142","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getMessage","params":"(PropertySource<?>propertySource@ConfigDataResourcelocation@StringpropertyName@Originorigin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/14/3e68932b50a82b187db1896ac1e9c739b15bf4.src","preCode":"\tprivate static String getMessage(PropertySource<?> propertySource, ConfigDataResource location, String propertyName,\n\t\t\tOrigin origin) {\n\t\tStringBuilder message = new StringBuilder(\"Inactive property source '\");\n\t\tmessage.append(propertySource.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' cannot contain property '\");\n\t\tmessage.append(propertyName);\n\t\tmessage.append(\"'\");\n\t\tif (origin != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(origin);\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/InactiveConfigDataAccessException.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"},{"authorDate":"2021-01-13 03:49:15","commitOrder":3,"curCode":"\tprivate static String getMessage(ConfigurationProperty property, boolean profileSpecific,\n\t\t\tConfigurationPropertyName replacement, ConfigDataResource location) {\n\t\tStringBuilder message = new StringBuilder(\"Property '\");\n\t\tmessage.append(property.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' is invalid\");\n\t\tif (profileSpecific) {\n\t\t\tmessage.append(\" in a profile specific resource\");\n\t\t}\n\t\tif (replacement != null) {\n\t\t\tmessage.append(\" and should be replaced with '\");\n\t\t\tmessage.append(replacement);\n\t\t\tmessage.append(\"'\");\n\t\t}\n\t\tif (property.getOrigin() != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(property.getOrigin());\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","date":"2021-01-13 03:49:15","endLine":151,"groupId":"102142","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getMessage","params":"(ConfigurationPropertyproperty@booleanprofileSpecific@ConfigurationPropertyNamereplacement@ConfigDataResourcelocation)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cc/85e435f3152e320bcb0fb96ac26497a6b38d79.src","preCode":"\tprivate static String getMessage(ConfigurationProperty property, ConfigurationPropertyName replacement,\n\t\t\tConfigDataResource location) {\n\t\tStringBuilder message = new StringBuilder(\"Property '\");\n\t\tmessage.append(property.getName());\n\t\tif (location != null) {\n\t\t\tmessage.append(\"' imported from location '\");\n\t\t\tmessage.append(location);\n\t\t}\n\t\tmessage.append(\"' is invalid\");\n\t\tif (replacement != null) {\n\t\t\tmessage.append(\" and should be replaced with '\");\n\t\t\tmessage.append(replacement);\n\t\t\tmessage.append(\"'\");\n\t\t}\n\t\tif (property.getOrigin() != null) {\n\t\t\tmessage.append(\" [origin: \");\n\t\t\tmessage.append(property.getOrigin());\n\t\t\tmessage.append(\"]\");\n\t\t}\n\t\treturn message.toString();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/InvalidConfigDataPropertyException.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"48e00fc7f4283f4a2b0277f1304386621d8bc5f0","commitMessage":"@@@Merge branch '2.4.x'\n\nCloses gh-24793\n","date":"2021-01-13 03:49:15","modifiedFileCount":"14","status":"M","submitter":"Phillip Webb"}]
