[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() throws Exception {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] listeners = new TomcatConnectorCustomizer[4];\n\t\tfor (int i = 0; i < listeners.length; i++) {\n\t\t\tlisteners[i] = mock(TomcatConnectorCustomizer.class);\n\t\t}\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addConnectorCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatConnectorCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(Connector.class));\n\t\t}\n\t}\n","date":"2017-10-05 11:18:56","endLine":94,"groupId":"4216","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatConnectorCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bb/ff214c0ff8d8ccc5841e6fb11538a64106a40f.src","preCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() throws Exception {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] listeners = new TomcatConnectorCustomizer[4];\n\t\tfor (int i = 0; i < listeners.length; i++) {\n\t\t\tlisteners[i] = mock(TomcatConnectorCustomizer.class);\n\t\t}\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addConnectorCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatConnectorCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(Connector.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void builderCustomizersShouldBeInvoked() throws Exception {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tfor (int i = 0; i < customizers.length; i++) {\n\t\t\tcustomizers[i] = mock(UndertowBuilderCustomizer.class);\n\t\t}\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","date":"2017-10-05 11:18:56","endLine":77,"groupId":"4216","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"builderCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/20/0e5839dc65fe44daa7e9f12341f735982f8493.src","preCode":"\tpublic void builderCustomizersShouldBeInvoked() throws Exception {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tfor (int i = 0; i < customizers.length; i++) {\n\t\t\tcustomizers[i] = mock(UndertowBuilderCustomizer.class);\n\t\t}\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] listeners = new TomcatConnectorCustomizer[4];\n\t\tfor (int i = 0; i < listeners.length; i++) {\n\t\t\tlisteners[i] = mock(TomcatConnectorCustomizer.class);\n\t\t}\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addConnectorCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatConnectorCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(Connector.class));\n\t\t}\n\t}\n","date":"2017-12-12 18:57:30","endLine":121,"groupId":"4216","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatConnectorCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/be/7cdb4c80276e1f95d5cc89dfe899e01aa9344c.src","preCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() throws Exception {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] listeners = new TomcatConnectorCustomizer[4];\n\t\tfor (int i = 0; i < listeners.length; i++) {\n\t\t\tlisteners[i] = mock(TomcatConnectorCustomizer.class);\n\t\t}\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addConnectorCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatConnectorCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(Connector.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tfor (int i = 0; i < customizers.length; i++) {\n\t\t\tcustomizers[i] = mock(UndertowBuilderCustomizer.class);\n\t\t}\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","date":"2017-12-12 18:57:30","endLine":77,"groupId":"4216","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"builderCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/87/3c2d1357c7e579b60390b4f731a0aa50022389.src","preCode":"\tpublic void builderCustomizersShouldBeInvoked() throws Exception {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tfor (int i = 0; i < customizers.length; i++) {\n\t\t\tcustomizers[i] = mock(UndertowBuilderCustomizer.class);\n\t\t}\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-08-20 16:26:21","codes":[{"authorDate":"2018-08-20 16:26:21","commitOrder":3,"curCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] listeners = new TomcatConnectorCustomizer[4];\n\t\tArrays.setAll(listeners, i -> mock(TomcatConnectorCustomizer.class));\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addConnectorCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatConnectorCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(Connector.class));\n\t\t}\n\t}\n","date":"2018-08-20 16:26:21","endLine":129,"groupId":"1122","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatConnectorCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e6/83290283221fda2dd718cda21a91556ed0e983.src","preCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] listeners = new TomcatConnectorCustomizer[4];\n\t\tfor (int i = 0; i < listeners.length; i++) {\n\t\t\tlisteners[i] = mock(TomcatConnectorCustomizer.class);\n\t\t}\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addConnectorCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatConnectorCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(Connector.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2018-08-20 16:26:21","commitOrder":3,"curCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, i -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","date":"2018-08-20 16:26:21","endLine":88,"groupId":"1122","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"builderCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e9/697c7807014075b0e30e16626d3c6c476d0a7b.src","preCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tfor (int i = 0; i < customizers.length; i++) {\n\t\t\tcustomizers[i] = mock(UndertowBuilderCustomizer.class);\n\t\t}\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"b26dedb5470d1b89e70560e84451a94ba4bbad87","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-08-20 16:26:21","modifiedFileCount":"9","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-08-20 17:23:39","codes":[{"authorDate":"2018-08-20 17:23:39","commitOrder":4,"curCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] listeners = new TomcatConnectorCustomizer[4];\n\t\tArrays.setAll(listeners, (i) -> mock(TomcatConnectorCustomizer.class));\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addConnectorCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatConnectorCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(Connector.class));\n\t\t}\n\t}\n","date":"2018-08-20 17:23:39","endLine":129,"groupId":"1122","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatConnectorCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/66/c94a9094c76f8383281202a0fb492719f8b7dd.src","preCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] listeners = new TomcatConnectorCustomizer[4];\n\t\tArrays.setAll(listeners, i -> mock(TomcatConnectorCustomizer.class));\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addConnectorCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatConnectorCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(Connector.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2018-08-20 17:23:39","commitOrder":4,"curCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","date":"2018-08-20 17:23:39","endLine":88,"groupId":"1122","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"builderCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/da/323af23e29784cd49b95e102acdfab872066d5.src","preCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, i -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"e95661876c6749b9f8d87329b1e88f63e11dd460","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-08-20 17:23:39","modifiedFileCount":"7","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-08-20 17:23:39","codes":[{"authorDate":"2019-04-19 16:02:56","commitOrder":5,"curCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] customizers = new TomcatConnectorCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(TomcatConnectorCustomizer.class));\n\t\tfactory.setTomcatConnectorCustomizers(\n\t\t\t\tArrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addConnectorCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (TomcatConnectorCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Connector.class));\n\t\t}\n\t}\n","date":"2019-04-19 16:02:56","endLine":159,"groupId":"1122","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatConnectorCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e6/cd176b1eedcfa7eabb37d26ae130fbb3a020c9.src","preCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] listeners = new TomcatConnectorCustomizer[4];\n\t\tArrays.setAll(listeners, (i) -> mock(TomcatConnectorCustomizer.class));\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addConnectorCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatConnectorCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(Connector.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2018-08-20 17:23:39","commitOrder":5,"curCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","date":"2018-08-20 17:23:39","endLine":88,"groupId":"1122","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"builderCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/da/323af23e29784cd49b95e102acdfab872066d5.src","preCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"cd3f4213c6fddef3de1645b0b26d1a4ab62828d5","commitMessage":"@@@Merge pull request #16597 from izeye\n\n* pr/16597:\n  Polish\n","date":"2019-04-19 16:02:56","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid tomcatConnectorCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] customizers = new TomcatConnectorCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(TomcatConnectorCustomizer.class));\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addConnectorCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (TomcatConnectorCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Connector.class));\n\t\t}\n\t}\n","date":"2019-06-07 19:25:54","endLine":152,"groupId":"102058","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatConnectorCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f2/07050aedf626955c2dfde55c58679a52173df4.src","preCode":"\tpublic void tomcatConnectorCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatConnectorCustomizer[] customizers = new TomcatConnectorCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(TomcatConnectorCustomizer.class));\n\t\tfactory.setTomcatConnectorCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addConnectorCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (TomcatConnectorCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Connector.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","date":"2019-06-07 19:25:54","endLine":87,"groupId":"102058","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"builderCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0a/3ec122d875cff05cfdd6c42ee7122ca488c301.src","preCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
