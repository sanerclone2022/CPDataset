[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void propertySourceAnnotationWithPlaceholder() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"source.location=specificlocation\");\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tWithPropertySourcePlaceholders.class);\n\t\tapplication.setEnvironment(this.environment);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"fromspecificlocation\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\n\t\t\t\t\"class path resource \" + \"[specificlocation.properties]\"));\n\t\tcontext.close();\n\t}\n","date":"2017-10-05 11:18:56","endLine":635,"groupId":"7582","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"propertySourceAnnotationWithPlaceholder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3c/8f189be0b15d1501efebaee1417acefb7397e1.src","preCode":"\tpublic void propertySourceAnnotationWithPlaceholder() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"source.location=specificlocation\");\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tWithPropertySourcePlaceholders.class);\n\t\tapplication.setEnvironment(this.environment);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"fromspecificlocation\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\n\t\t\t\t\"class path resource \" + \"[specificlocation.properties]\"));\n\t\tcontext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":622,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void propertySourceAnnotationMultipleLocationsAndName() throws Exception {\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tWithPropertySourceMultipleLocationsAndName.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"frommorepropertiesfile\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\"foo\"));\n\t\tcontext.close();\n\t}\n","date":"2017-10-05 11:18:56","endLine":701,"groupId":"4799","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"propertySourceAnnotationMultipleLocationsAndName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3c/8f189be0b15d1501efebaee1417acefb7397e1.src","preCode":"\tpublic void propertySourceAnnotationMultipleLocationsAndName() throws Exception {\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tWithPropertySourceMultipleLocationsAndName.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"frommorepropertiesfile\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\"foo\"));\n\t\tcontext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":692,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void propertySourceAnnotationWithPlaceholder() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"source.location=specificlocation\");\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tWithPropertySourcePlaceholders.class);\n\t\tapplication.setEnvironment(this.environment);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"fromspecificlocation\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\n\t\t\t\t\"class path resource \" + \"[specificlocation.properties]\"));\n\t\tcontext.close();\n\t}\n","date":"2017-12-12 18:57:30","endLine":659,"groupId":"7582","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"propertySourceAnnotationWithPlaceholder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/9315fa4cf410bac4dfbdabca74b970b9b497e6.src","preCode":"\tpublic void propertySourceAnnotationWithPlaceholder() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"source.location=specificlocation\");\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tWithPropertySourcePlaceholders.class);\n\t\tapplication.setEnvironment(this.environment);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"fromspecificlocation\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\n\t\t\t\t\"class path resource \" + \"[specificlocation.properties]\"));\n\t\tcontext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":646,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void propertySourceAnnotationMultipleLocationsAndName() {\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tWithPropertySourceMultipleLocationsAndName.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"frommorepropertiesfile\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\"foo\"));\n\t\tcontext.close();\n\t}\n","date":"2017-12-12 18:57:30","endLine":725,"groupId":"4799","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"propertySourceAnnotationMultipleLocationsAndName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/9315fa4cf410bac4dfbdabca74b970b9b497e6.src","preCode":"\tpublic void propertySourceAnnotationMultipleLocationsAndName() throws Exception {\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tWithPropertySourceMultipleLocationsAndName.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"frommorepropertiesfile\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\"foo\"));\n\t\tcontext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":716,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid propertySourceAnnotationWithPlaceholder() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment, \"source.location=specificlocation\");\n\t\tSpringApplication application = new SpringApplication(WithPropertySourcePlaceholders.class);\n\t\tapplication.setEnvironment(this.environment);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"fromspecificlocation\");\n\t\tassertThat(context.getEnvironment())\n\t\t\t\t.has(matchingPropertySource(\"class path resource \" + \"[specificlocation.properties]\"));\n\t\tcontext.close();\n\t}\n","date":"2019-06-07 19:25:54","endLine":728,"groupId":"7582","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"propertySourceAnnotationWithPlaceholder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/65/d5909c365ca1adbe9176d001117555481f02c6.src","preCode":"\tpublic void propertySourceAnnotationWithPlaceholder() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment, \"source.location=specificlocation\");\n\t\tSpringApplication application = new SpringApplication(WithPropertySourcePlaceholders.class);\n\t\tapplication.setEnvironment(this.environment);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"fromspecificlocation\");\n\t\tassertThat(context.getEnvironment())\n\t\t\t\t.has(matchingPropertySource(\"class path resource \" + \"[specificlocation.properties]\"));\n\t\tcontext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":717,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid propertySourceAnnotationMultipleLocationsAndName() {\n\t\tSpringApplication application = new SpringApplication(WithPropertySourceMultipleLocationsAndName.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"frommorepropertiesfile\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\"foo\"));\n\t\tcontext.close();\n\t}\n","date":"2019-06-07 19:25:54","endLine":788,"groupId":"4799","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"propertySourceAnnotationMultipleLocationsAndName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/65/d5909c365ca1adbe9176d001117555481f02c6.src","preCode":"\tpublic void propertySourceAnnotationMultipleLocationsAndName() {\n\t\tSpringApplication application = new SpringApplication(WithPropertySourceMultipleLocationsAndName.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"frommorepropertiesfile\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\"foo\"));\n\t\tcontext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":780,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-07-15 02:39:18","commitOrder":4,"curCode":"\tvoid propertySourceAnnotationWithPlaceholder() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment, \"source.location=specificlocation\");\n\t\tSpringApplication application = new SpringApplication(WithPropertySourcePlaceholders.class);\n\t\tapplication.setEnvironment(this.environment);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"fromspecificlocation\");\n\t\tassertThat(context.getEnvironment())\n\t\t\t\t.has(matchingPropertySource(\"class path resource [specificlocation.properties]\"));\n\t\tcontext.close();\n\t}\n","date":"2019-07-15 07:24:19","endLine":726,"groupId":"101575","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"propertySourceAnnotationWithPlaceholder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a4/a261fd974752ee48be235d6ea64d4fea8fe112.src","preCode":"\tvoid propertySourceAnnotationWithPlaceholder() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment, \"source.location=specificlocation\");\n\t\tSpringApplication application = new SpringApplication(WithPropertySourcePlaceholders.class);\n\t\tapplication.setEnvironment(this.environment);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"fromspecificlocation\");\n\t\tassertThat(context.getEnvironment())\n\t\t\t\t.has(matchingPropertySource(\"class path resource \" + \"[specificlocation.properties]\"));\n\t\tcontext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":715,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid propertySourceAnnotationMultipleLocationsAndName() {\n\t\tSpringApplication application = new SpringApplication(WithPropertySourceMultipleLocationsAndName.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"frommorepropertiesfile\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\"foo\"));\n\t\tcontext.close();\n\t}\n","date":"2019-06-07 19:25:54","endLine":788,"groupId":"101575","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"propertySourceAnnotationMultipleLocationsAndName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/65/d5909c365ca1adbe9176d001117555481f02c6.src","preCode":"\tvoid propertySourceAnnotationMultipleLocationsAndName() {\n\t\tSpringApplication application = new SpringApplication(WithPropertySourceMultipleLocationsAndName.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tConfigurableApplicationContext context = application.run();\n\t\tString property = context.getEnvironment().getProperty(\"the.property\");\n\t\tassertThat(property).isEqualTo(\"frommorepropertiesfile\");\n\t\tassertThat(context.getEnvironment()).has(matchingPropertySource(\"foo\"));\n\t\tcontext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":780,"status":"N"}],"commitId":"01933f9b064860e5bbca4e3ff71789dbcf615e19","commitMessage":"@@@Merge previously split strings\n\nMerge some string lines that were previously split because of the\n90 chars wide formatting.\n","date":"2019-07-15 07:24:19","modifiedFileCount":"173","status":"M","submitter":"Phillip Webb"}]
