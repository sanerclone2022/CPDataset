[{"authorTime":"2019-11-20 03:55:24","codes":[{"authorDate":"2019-09-26 04:45:25","commitOrder":2,"curCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUseIsInRoleReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tgiven(this.securityContext.isUserInRole(\"root\")).willReturn(true);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","date":"2019-09-27 07:17:28","endLine":114,"groupId":"14164","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"showDetailsWhenShowDetailsIsWhenAuthorizedAndUseIsInRoleReturnsTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8a/31c44361d8cd3762c864cb0cd71e23d96dd5f3.src","preCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUseIsInRoleReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tgiven(this.securityContext.isUserInRole(\"root\")).willReturn(true);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"NB"},{"authorDate":"2019-11-20 03:55:24","commitOrder":2,"curCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUserHasRightAuthorityReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tAuthentication principal = mock(Authentication.class);\n\t\tgiven(principal.getAuthorities())\n\t\t\t\t.willAnswer((invocation) -> Collections.singleton(new SimpleGrantedAuthority(\"admin\")));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(principal);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","date":"2019-11-20 03:55:24","endLine":139,"groupId":"11290","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"showDetailsWhenShowDetailsIsWhenAuthorizedAndUserHasRightAuthorityReturnsTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/06/125f1759e9beee5b1056decd394d4d893305b9.src","preCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUserHasRightAuthorityReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tAuthentication principal = mock(Authentication.class);\n\t\tgiven(principal.getAuthorities())\n\t\t\t\t.willAnswer((invocation) -> Collections.singleton(new SimpleGrantedAuthority(\"admin\")));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(principal);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"B"}],"commitId":"4e96c0ff1b1df520203abdf0cb4875bcf4357dd0","commitMessage":"@@@Merge branch '2.2.x'\n\nCloses gh-19060\n","date":"2019-11-20 03:55:24","modifiedFileCount":"4","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-11-20 03:55:24","codes":[{"authorDate":"2020-08-08 22:53:42","commitOrder":3,"curCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUseIsInRoleReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tgiven(this.securityContext.isUserInRole(\"admin\")).willReturn(false);\n\t\tgiven(this.securityContext.isUserInRole(\"root\")).willReturn(true);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","date":"2020-08-10 22:22:03","endLine":114,"groupId":"14164","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"showDetailsWhenShowDetailsIsWhenAuthorizedAndUseIsInRoleReturnsTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3c/22e80dae0dae4bced8c31acecbe511a0730f2a.src","preCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUseIsInRoleReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tgiven(this.securityContext.isUserInRole(\"root\")).willReturn(true);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2019-11-20 03:55:24","commitOrder":3,"curCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUserHasRightAuthorityReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tAuthentication principal = mock(Authentication.class);\n\t\tgiven(principal.getAuthorities())\n\t\t\t\t.willAnswer((invocation) -> Collections.singleton(new SimpleGrantedAuthority(\"admin\")));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(principal);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","date":"2019-11-20 03:55:24","endLine":139,"groupId":"11290","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"showDetailsWhenShowDetailsIsWhenAuthorizedAndUserHasRightAuthorityReturnsTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/06/125f1759e9beee5b1056decd394d4d893305b9.src","preCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUserHasRightAuthorityReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tAuthentication principal = mock(Authentication.class);\n\t\tgiven(principal.getAuthorities())\n\t\t\t\t.willAnswer((invocation) -> Collections.singleton(new SimpleGrantedAuthority(\"admin\")));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(principal);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"N"}],"commitId":"969dd35e456e6683dd5b767be2079085ccff3941","commitMessage":"@@@Upgrade to Mockito 3.4.6\n\nCloses gh-22838\n","date":"2020-08-10 22:22:03","modifiedFileCount":"68","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-07-14 06:13:04","codes":[{"authorDate":"2021-07-14 06:13:04","commitOrder":4,"curCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUseIsInRoleReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"), null);\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tgiven(this.securityContext.isUserInRole(\"admin\")).willReturn(false);\n\t\tgiven(this.securityContext.isUserInRole(\"root\")).willReturn(true);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","date":"2021-08-12 10:25:25","endLine":116,"groupId":"10678","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"showDetailsWhenShowDetailsIsWhenAuthorizedAndUseIsInRoleReturnsTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7c/30ed2ed108f3f9bd9fe16350139d4c8d4907da.src","preCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUseIsInRoleReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tgiven(this.securityContext.isUserInRole(\"admin\")).willReturn(false);\n\t\tgiven(this.securityContext.isUserInRole(\"root\")).willReturn(true);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"},{"authorDate":"2021-07-14 06:13:04","commitOrder":4,"curCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUserHasRightAuthorityReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"), null);\n\t\tAuthentication principal = mock(Authentication.class);\n\t\tgiven(principal.getAuthorities())\n\t\t\t\t.willAnswer((invocation) -> Collections.singleton(new SimpleGrantedAuthority(\"admin\")));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(principal);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","date":"2021-08-12 10:25:25","endLine":137,"groupId":"10678","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"showDetailsWhenShowDetailsIsWhenAuthorizedAndUserHasRightAuthorityReturnsTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7c/30ed2ed108f3f9bd9fe16350139d4c8d4907da.src","preCode":"\tvoid showDetailsWhenShowDetailsIsWhenAuthorizedAndUserHasRightAuthorityReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, null, Show.WHEN_AUTHORIZED,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tAuthentication principal = mock(Authentication.class);\n\t\tgiven(principal.getAuthorities())\n\t\t\t\t.willAnswer((invocation) -> Collections.singleton(new SimpleGrantedAuthority(\"admin\")));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(principal);\n\t\tassertThat(group.showDetails(this.securityContext)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"49c86e6e1bef32e21bd2979aabddfcbacbe8ee89","commitMessage":"@@@Allow health groups to be configured at an additional path\n\nCloses gh-25471\n\nCo-authored-by: Phillip Webb <pwebb@vmware.com>\n","date":"2021-08-12 10:25:25","modifiedFileCount":"35","status":"M","submitter":"Madhura Bhave"}]
