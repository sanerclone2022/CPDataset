[{"authorTime":"2018-01-19 12:52:35","codes":[{"authorDate":"2018-01-24 09:15:25","commitOrder":2,"curCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tload(WithRegularEndpointConfiguration.class, (discoverer) -> {\n\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\tList<String> ids = endpoints.stream().map(ExposableEndpoint::getId)\n\t\t\t\t\t.collect(Collectors.toList());\n\t\t\tassertThat(ids).containsOnly(\"testservlet\");\n\t\t});\n\t}\n","date":"2018-01-25 09:06:13","endLine":85,"groupId":"16414","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldNotDiscoverRegularEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/99/b52d5b95dbdf8d2c3bd0397905632e7c69e0a3.src","preCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tload(WithRegularEndpointConfiguration.class, (discoverer) -> {\n\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\tList<String> ids = endpoints.stream().map(ExposableEndpoint::getId)\n\t\t\t\t\t.collect(Collectors.toList());\n\t\t\tassertThat(ids).containsOnly(\"testservlet\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2018-01-19 12:52:35","commitOrder":2,"curCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tload(WithRegularEndpointConfiguration.class, (discoverer) -> {\n\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\tList<String> ids = endpoints.stream().map(ExposableEndpoint::getId)\n\t\t\t\t\t.collect(Collectors.toList());\n\t\t\tassertThat(ids).containsOnly(\"testcontroller\", \"testrestcontroller\");\n\t\t});\n\t}\n","date":"2018-01-20 13:06:32","endLine":87,"groupId":"16414","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointsShouldNotDiscoverRegularEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/00/eabebac787334fd9a8219c8201634a253317a0.src","preCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tload(WithRegularEndpointConfiguration.class, (discoverer) -> {\n\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\tList<String> ids = endpoints.stream().map(ExposableEndpoint::getId)\n\t\t\t\t\t.collect(Collectors.toList());\n\t\t\tassertThat(ids).containsOnly(\"testcontroller\", \"testrestcontroller\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"NB"}],"commitId":"017efda6ec276508ae64beb1b52ad606f5f03401","commitMessage":"@@@Add @EndpointServlet and migrate Jolokia\n\nAdd first class support for Servlet based endpoints and rework the\nJolokia endpoint to use it.\n\nFixes gh-10264\n","date":"2018-01-25 09:06:13","modifiedFileCount":"9","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-04-11 02:24:19","codes":[{"authorDate":"2018-04-11 02:24:19","commitOrder":3,"curCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tList<String> ids = endpoints.stream().map(ExposableEndpoint::getId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(\"testservlet\");\n\t\t\t\t}));\n\t}\n","date":"2018-04-11 02:24:19","endLine":110,"groupId":"16414","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldNotDiscoverRegularEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f2/b0a48c8b9561bbe985e7bd9b4efa7fc4e7f022.src","preCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tload(WithRegularEndpointConfiguration.class, (discoverer) -> {\n\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\tList<String> ids = endpoints.stream().map(ExposableEndpoint::getId)\n\t\t\t\t\t.collect(Collectors.toList());\n\t\t\tassertThat(ids).containsOnly(\"testservlet\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2018-04-11 02:24:19","commitOrder":3,"curCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tList<String> ids = endpoints.stream().map(ExposableEndpoint::getId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(\"testcontroller\", \"testrestcontroller\");\n\t\t\t\t}));\n\t}\n","date":"2018-04-11 02:24:19","endLine":133,"groupId":"16414","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointsShouldNotDiscoverRegularEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b1/ea4acc06f5be66e8bd944aeef02b1351f74f1d.src","preCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tload(WithRegularEndpointConfiguration.class, (discoverer) -> {\n\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\tList<String> ids = endpoints.stream().map(ExposableEndpoint::getId)\n\t\t\t\t\t.collect(Collectors.toList());\n\t\t\tassertThat(ids).containsOnly(\"testcontroller\", \"testrestcontroller\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"55ea9f796fff1ac03166ce1890cceb93916f34bf","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-04-11 02:24:19","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-10-15 04:53:28","codes":[{"authorDate":"2018-10-15 04:53:28","commitOrder":4,"curCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tList<EndpointId> ids = endpoints.stream()\n\t\t\t\t\t\t\t.map(ExposableEndpoint::getEndpointId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(EndpointId.of(\"testservlet\"));\n\t\t\t\t}));\n\t}\n","date":"2018-10-15 04:53:28","endLine":114,"groupId":"16414","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldNotDiscoverRegularEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/27/10477efc1c020a7da6f8f6c18f689324a6faa7.src","preCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tList<String> ids = endpoints.stream().map(ExposableEndpoint::getId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(\"testservlet\");\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2018-10-15 04:53:28","commitOrder":4,"curCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tList<EndpointId> ids = endpoints.stream()\n\t\t\t\t\t\t\t.map(ExposableEndpoint::getEndpointId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(EndpointId.of(\"testcontroller\"),\n\t\t\t\t\t\t\tEndpointId.of(\"testrestcontroller\"));\n\t\t\t\t}));\n\t}\n","date":"2018-10-15 04:53:28","endLine":141,"groupId":"16414","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointsShouldNotDiscoverRegularEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/20/b9ab00fc7e9e0e63d7dad11fb75ad0ddce7c01.src","preCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer\n\t\t\t\t\t\t\t.getEndpoints();\n\t\t\t\t\tList<String> ids = endpoints.stream().map(ExposableEndpoint::getId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(\"testcontroller\", \"testrestcontroller\");\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"1bf97e9b5e2187a04d8471ead73b629444ecc838","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-10-15 04:53:28","modifiedFileCount":"66","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tList<EndpointId> ids = endpoints.stream().map(ExposableEndpoint::getEndpointId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(EndpointId.of(\"testservlet\"));\n\t\t\t\t}));\n\t}\n","date":"2019-06-07 19:25:54","endLine":104,"groupId":"16414","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getEndpointsShouldNotDiscoverRegularEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/51/5ae926e3a3215f9de69a147eb9926cf9b288af.src","preCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tList<EndpointId> ids = endpoints.stream().map(ExposableEndpoint::getEndpointId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(EndpointId.of(\"testservlet\"));\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tList<EndpointId> ids = endpoints.stream().map(ExposableEndpoint::getEndpointId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(EndpointId.of(\"testcontroller\"), EndpointId.of(\"testrestcontroller\"));\n\t\t\t\t}));\n\t}\n","date":"2019-06-07 19:25:54","endLine":121,"groupId":"16414","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointsShouldNotDiscoverRegularEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/72/6fdec1443f899669409870703ca6b93ca207ae.src","preCode":"\tpublic void getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tList<EndpointId> ids = endpoints.stream().map(ExposableEndpoint::getEndpointId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(EndpointId.of(\"testcontroller\"), EndpointId.of(\"testrestcontroller\"));\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-06-16 19:52:17","codes":[{"authorDate":"2020-06-16 19:52:17","commitOrder":6,"curCode":"\tvoid getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tList<EndpointId> ids = endpoints.stream().map(ExposableServletEndpoint::getEndpointId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(EndpointId.of(\"testservlet\"));\n\t\t\t\t}));\n\t}\n","date":"2020-06-16 19:52:17","endLine":103,"groupId":"10459","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"getEndpointsShouldNotDiscoverRegularEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/74/5465ccae9359d7a8cdcb0d7582d636844e9d37.src","preCode":"\tvoid getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableServletEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tList<EndpointId> ids = endpoints.stream().map(ExposableEndpoint::getEndpointId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(EndpointId.of(\"testservlet\"));\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2020-06-16 19:52:17","commitOrder":6,"curCode":"\tvoid getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tList<EndpointId> ids = endpoints.stream().map(ExposableControllerEndpoint::getEndpointId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(EndpointId.of(\"testcontroller\"), EndpointId.of(\"testrestcontroller\"));\n\t\t\t\t}));\n\t}\n","date":"2020-06-16 19:52:17","endLine":120,"groupId":"10459","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"getEndpointsShouldNotDiscoverRegularEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/94/021c018c0a8a7003065ff6d7ef408e7325b0c5.src","preCode":"\tvoid getEndpointsShouldNotDiscoverRegularEndpoints() {\n\t\tthis.contextRunner.withUserConfiguration(WithRegularEndpointConfiguration.class)\n\t\t\t\t.run(assertDiscoverer((discoverer) -> {\n\t\t\t\t\tCollection<ExposableControllerEndpoint> endpoints = discoverer.getEndpoints();\n\t\t\t\t\tList<EndpointId> ids = endpoints.stream().map(ExposableEndpoint::getEndpointId)\n\t\t\t\t\t\t\t.collect(Collectors.toList());\n\t\t\t\t\tassertThat(ids).containsOnly(EndpointId.of(\"testcontroller\"), EndpointId.of(\"testrestcontroller\"));\n\t\t\t\t}));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscovererTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"9e08490522a2c5b35884db057c68a8349ca44c47","commitMessage":"@@@Merge branch 'gh-21271'\n\nCloses gh-21271\n","date":"2020-06-16 19:52:17","modifiedFileCount":"68","status":"M","submitter":"Andy Wilkinson"}]
