[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void closingContextCleansUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY,\n\t\t\t\tTestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(\n\t\t\t\tnew ApplicationStartingEvent(this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t}\n","date":"2017-10-05 11:18:56","endLine":456,"groupId":"10881","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"closingContextCleansUpLoggingSystem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/18cad9d3d6c7d929cd47660c22b3869a08ba76.src","preCode":"\tpublic void closingContextCleansUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY,\n\t\t\t\tTestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(\n\t\t\t\tnew ApplicationStartingEvent(this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":446,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void closingChildContextDoesNotCleanUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY,\n\t\t\t\tTestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(\n\t\t\t\tnew ApplicationStartingEvent(this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tGenericApplicationContext childContext = new GenericApplicationContext();\n\t\tchildContext.setParent(this.context);\n\t\tmulticastEvent(new ContextClosedEvent(childContext));\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t\tchildContext.close();\n\t}\n","date":"2017-10-05 11:18:56","endLine":474,"groupId":"14881","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"closingChildContextDoesNotCleanUpLoggingSystem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/18cad9d3d6c7d929cd47660c22b3869a08ba76.src","preCode":"\tpublic void closingChildContextDoesNotCleanUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY,\n\t\t\t\tTestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(\n\t\t\t\tnew ApplicationStartingEvent(this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tGenericApplicationContext childContext = new GenericApplicationContext();\n\t\tchildContext.setParent(this.context);\n\t\tmulticastEvent(new ContextClosedEvent(childContext));\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t\tchildContext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":459,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-07-15 07:34:21","codes":[{"authorDate":"2019-07-15 07:34:21","commitOrder":2,"curCode":"\tvoid closingContextCleansUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY, TestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t}\n","date":"2019-07-15 07:34:21","endLine":459,"groupId":"10881","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"closingContextCleansUpLoggingSystem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/74bfda6c8921743ec2d6bfb35093b3c6b0c9f5.src","preCode":"\tpublic void closingContextCleansUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY, TestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":451,"status":"M"},{"authorDate":"2019-07-15 07:34:21","commitOrder":2,"curCode":"\tvoid closingChildContextDoesNotCleanUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY, TestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tGenericApplicationContext childContext = new GenericApplicationContext();\n\t\tchildContext.setParent(this.context);\n\t\tmulticastEvent(new ContextClosedEvent(childContext));\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t\tchildContext.close();\n\t}\n","date":"2019-07-15 07:34:21","endLine":475,"groupId":"14881","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"closingChildContextDoesNotCleanUpLoggingSystem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/74bfda6c8921743ec2d6bfb35093b3c6b0c9f5.src","preCode":"\tpublic void closingChildContextDoesNotCleanUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY, TestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tGenericApplicationContext childContext = new GenericApplicationContext();\n\t\tchildContext.setParent(this.context);\n\t\tmulticastEvent(new ContextClosedEvent(childContext));\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t\tchildContext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":462,"status":"M"}],"commitId":"4b744bdfd1a74f29505fc191cc00c7a75a467041","commitMessage":"@@@Merge pull request #17491 from dreis2211\n\n* pr/17491:\n  Delete ModifiedClassPathRunner\n  Polish ModifiedClassPath support\n  Migrate ModifiedClassPath tests to JUnit 5\n  Add JUnit 5 ModifiedClassPathExtension\n  Extract ModifiedClassPathClass logic\n  Migrate to MockRestServiceServer\n  Polish LoggingApplicationListenerTests\n  Migrate to ApplicationContextRunner\n\nCloses gh-17491\n","date":"2019-07-15 07:34:21","modifiedFileCount":"38","status":"M","submitter":"Phillip Webb"},{"authorTime":"2020-09-17 15:09:41","codes":[{"authorDate":"2020-09-17 15:09:41","commitOrder":3,"curCode":"\tvoid closingContextCleansUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY, TestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(new ApplicationStartingEvent(this.bootstrapContext, this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t}\n","date":"2020-09-17 15:31:00","endLine":439,"groupId":"101252","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"closingContextCleansUpLoggingSystem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f7/2c008d3eaf6287ef8be011565e4268ca37cb88.src","preCode":"\tvoid closingContextCleansUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY, TestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":431,"status":"M"},{"authorDate":"2020-09-17 15:09:41","commitOrder":3,"curCode":"\tvoid closingChildContextDoesNotCleanUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY, TestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(new ApplicationStartingEvent(this.bootstrapContext, this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tGenericApplicationContext childContext = new GenericApplicationContext();\n\t\tchildContext.setParent(this.context);\n\t\tmulticastEvent(new ContextClosedEvent(childContext));\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t\tchildContext.close();\n\t}\n","date":"2020-09-17 15:31:00","endLine":455,"groupId":"101252","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"closingChildContextDoesNotCleanUpLoggingSystem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f7/2c008d3eaf6287ef8be011565e4268ca37cb88.src","preCode":"\tvoid closingChildContextDoesNotCleanUpLoggingSystem() {\n\t\tSystem.setProperty(LoggingSystem.SYSTEM_PROPERTY, TestCleanupLoggingSystem.class.getName());\n\t\tmulticastEvent(new ApplicationStartingEvent(this.springApplication, new String[0]));\n\t\tTestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils\n\t\t\t\t.getField(this.initializer, \"loggingSystem\");\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tGenericApplicationContext childContext = new GenericApplicationContext();\n\t\tchildContext.setParent(this.context);\n\t\tmulticastEvent(new ContextClosedEvent(childContext));\n\t\tassertThat(loggingSystem.cleanedUp).isFalse();\n\t\tmulticastEvent(new ContextClosedEvent(this.context));\n\t\tassertThat(loggingSystem.cleanedUp).isTrue();\n\t\tchildContext.close();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":442,"status":"M"}],"commitId":"1ae14362110360cc558bcd498fa67f70a35b8373","commitMessage":"@@@Refactor BootstrapRegistry support\n\nRefactor `BootstrapRegistry` support following initial prototype work\nwith the Spring Cloud team.\n\nThis update splits the `BootstrapRegistry` API into `BootstrapRegistry`. \n`BootstrapContext` and  `ConfigurableBootstrapContext` interfaces and\nmoves it to the same package as `SpringApplication`.\n\nA new `Bootstrapper` interface has been introduced that can be added\nto the `SpringApplication` to customize the `BootstrapRegistry` before\nit's used.\n\nCloses gh-23326\n","date":"2020-09-17 15:31:00","modifiedFileCount":"40","status":"M","submitter":"Phillip Webb"}]
