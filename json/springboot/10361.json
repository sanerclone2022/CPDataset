[{"authorTime":"2017-12-14 22:16:29","codes":[{"authorDate":"2017-12-14 22:16:29","commitOrder":1,"curCode":"\tpublic void influxDbIsUp() {\n\t\tPong pong = mock(Pong.class);\n\t\tgiven(pong.getVersion()).willReturn(\"0.9\");\n\t\tInfluxDB influxDB = mock(InfluxDB.class);\n\t\tgiven(influxDB.ping()).willReturn(pong);\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"version\")).isEqualTo(\"0.9\");\n\t\tverify(influxDB).ping();\n\t}\n","date":"2017-12-14 22:16:29","endLine":53,"groupId":"11035","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"influxDbIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/4a24d9680fc12e5ad8acf6688b6baad4888a71.src","preCode":"\tpublic void influxDbIsUp() {\n\t\tPong pong = mock(Pong.class);\n\t\tgiven(pong.getVersion()).willReturn(\"0.9\");\n\t\tInfluxDB influxDB = mock(InfluxDB.class);\n\t\tgiven(influxDB.ping()).willReturn(pong);\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"version\")).isEqualTo(\"0.9\");\n\t\tverify(influxDB).ping();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/influx/InfluxDbHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"},{"authorDate":"2017-12-14 22:16:29","commitOrder":1,"curCode":"\tpublic void influxDbIsDown() {\n\t\tInfluxDB influxDB = mock(InfluxDB.class);\n\t\tgiven(influxDB.ping()).willThrow(\n\t\t\t\tnew InfluxDBException(new IOException(\"Connection failed\")));\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat((String) health.getDetails().get(\"error\"))\n\t\t\t\t.contains(\"Connection failed\");\n\t\tverify(influxDB).ping();\n\t}\n","date":"2017-12-14 22:16:29","endLine":66,"groupId":"818","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"influxDbIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/4a24d9680fc12e5ad8acf6688b6baad4888a71.src","preCode":"\tpublic void influxDbIsDown() {\n\t\tInfluxDB influxDB = mock(InfluxDB.class);\n\t\tgiven(influxDB.ping()).willThrow(\n\t\t\t\tnew InfluxDBException(new IOException(\"Connection failed\")));\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat((String) health.getDetails().get(\"error\"))\n\t\t\t\t.contains(\"Connection failed\");\n\t\tverify(influxDB).ping();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/influx/InfluxDbHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"}],"commitId":"24f716ec47d42202be9fb369b11558b4c9c2738f","commitMessage":"@@@Merge pull request #11159 from eddumelendez:influxdb_health\n\n* pr/11159:\n  Polish \"Add InfluxDb health indicator\"\n  Add InfluxDb health indicator\n","date":"2017-12-14 22:16:29","modifiedFileCount":"0","status":"B","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid influxDbIsUp() {\n\t\tPong pong = mock(Pong.class);\n\t\tgiven(pong.getVersion()).willReturn(\"0.9\");\n\t\tInfluxDB influxDB = mock(InfluxDB.class);\n\t\tgiven(influxDB.ping()).willReturn(pong);\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"version\")).isEqualTo(\"0.9\");\n\t\tverify(influxDB).ping();\n\t}\n","date":"2019-06-07 19:25:54","endLine":52,"groupId":"11035","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"influxDbIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/94f0d11fcd4d5891a4806df178a7f3e5e3bc7e.src","preCode":"\tpublic void influxDbIsUp() {\n\t\tPong pong = mock(Pong.class);\n\t\tgiven(pong.getVersion()).willReturn(\"0.9\");\n\t\tInfluxDB influxDB = mock(InfluxDB.class);\n\t\tgiven(influxDB.ping()).willReturn(pong);\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"version\")).isEqualTo(\"0.9\");\n\t\tverify(influxDB).ping();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/influx/InfluxDbHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid influxDbIsDown() {\n\t\tInfluxDB influxDB = mock(InfluxDB.class);\n\t\tgiven(influxDB.ping()).willThrow(new InfluxDBException(new IOException(\"Connection failed\")));\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat((String) health.getDetails().get(\"error\")).contains(\"Connection failed\");\n\t\tverify(influxDB).ping();\n\t}\n","date":"2019-06-07 19:25:54","endLine":63,"groupId":"818","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"influxDbIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/94f0d11fcd4d5891a4806df178a7f3e5e3bc7e.src","preCode":"\tpublic void influxDbIsDown() {\n\t\tInfluxDB influxDB = mock(InfluxDB.class);\n\t\tgiven(influxDB.ping()).willThrow(new InfluxDBException(new IOException(\"Connection failed\")));\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat((String) health.getDetails().get(\"error\")).contains(\"Connection failed\");\n\t\tverify(influxDB).ping();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/influx/InfluxDbHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-02-27 18:23:17","codes":[{"authorDate":"2021-02-27 18:23:17","commitOrder":3,"curCode":"\tvoid influxDbIsUp() {\n\t\tPong pong = mock(Pong.class);\n\t\tgiven(pong.getVersion()).willReturn(\"0.9\");\n\t\tInfluxDB influxDb = mock(InfluxDB.class);\n\t\tgiven(influxDb.ping()).willReturn(pong);\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDb);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"version\")).isEqualTo(\"0.9\");\n\t\tverify(influxDb).ping();\n\t}\n","date":"2021-02-27 18:23:18","endLine":52,"groupId":"10361","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"influxDbIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/06/8f4c29d1d45873e0a595880de1254bf561ad0e.src","preCode":"\tvoid influxDbIsUp() {\n\t\tPong pong = mock(Pong.class);\n\t\tgiven(pong.getVersion()).willReturn(\"0.9\");\n\t\tInfluxDB influxDB = mock(InfluxDB.class);\n\t\tgiven(influxDB.ping()).willReturn(pong);\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"version\")).isEqualTo(\"0.9\");\n\t\tverify(influxDB).ping();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/influx/InfluxDbHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2021-02-27 18:23:17","commitOrder":3,"curCode":"\tvoid influxDbIsDown() {\n\t\tInfluxDB influxDb = mock(InfluxDB.class);\n\t\tgiven(influxDb.ping()).willThrow(new InfluxDBException(new IOException(\"Connection failed\")));\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDb);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat((String) health.getDetails().get(\"error\")).contains(\"Connection failed\");\n\t\tverify(influxDb).ping();\n\t}\n","date":"2021-02-27 18:23:18","endLine":63,"groupId":"10361","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"influxDbIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/06/8f4c29d1d45873e0a595880de1254bf561ad0e.src","preCode":"\tvoid influxDbIsDown() {\n\t\tInfluxDB influxDB = mock(InfluxDB.class);\n\t\tgiven(influxDB.ping()).willThrow(new InfluxDBException(new IOException(\"Connection failed\")));\n\t\tInfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat((String) health.getDetails().get(\"error\")).contains(\"Connection failed\");\n\t\tverify(influxDB).ping();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/influx/InfluxDbHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"67f10e585a16c35e84b9b4d96e4ca2c3cbe22f10","commitMessage":"@@@Merge pull request #25451 from izeye\n\n* pr/25451:\n  Upgrade copyright year of changed files\n  Polish\n\nCloses gh-25451\n","date":"2021-02-27 18:23:18","modifiedFileCount":"5","status":"M","submitter":"Stephane Nicoll"}]
