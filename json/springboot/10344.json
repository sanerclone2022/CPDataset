[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void jmsBrokerIsDown() throws JMSException {\n\t\tConnectionFactory connectionFactory = mock(ConnectionFactory.class);\n\t\tgiven(connectionFactory.createConnection())\n\t\t\t\t.willThrow(new JMSException(\"test\", \"123\"));\n\t\tJmsHealthIndicator indicator = new JmsHealthIndicator(connectionFactory);\n\t\tHealth health = indicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"provider\")).isNull();\n\t}\n","date":"2017-10-05 11:18:56","endLine":67,"groupId":"13260","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"jmsBrokerIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/91/91775a5f9c9e8ef99b23aaebb68955d65f4644.src","preCode":"\tpublic void jmsBrokerIsDown() throws JMSException {\n\t\tConnectionFactory connectionFactory = mock(ConnectionFactory.class);\n\t\tgiven(connectionFactory.createConnection())\n\t\t\t\t.willThrow(new JMSException(\"test\", \"123\"));\n\t\tJmsHealthIndicator indicator = new JmsHealthIndicator(connectionFactory);\n\t\tHealth health = indicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"provider\")).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/jms/JmsHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void jmsBrokerCouldNotRetrieveProviderMetadata() throws JMSException {\n\t\tConnectionMetaData connectionMetaData = mock(ConnectionMetaData.class);\n\t\tgiven(connectionMetaData.getJMSProviderName())\n\t\t\t\t.willThrow(new JMSException(\"test\", \"123\"));\n\t\tConnection connection = mock(Connection.class);\n\t\tgiven(connection.getMetaData()).willReturn(connectionMetaData);\n\t\tConnectionFactory connectionFactory = mock(ConnectionFactory.class);\n\t\tgiven(connectionFactory.createConnection()).willReturn(connection);\n\t\tJmsHealthIndicator indicator = new JmsHealthIndicator(connectionFactory);\n\t\tHealth health = indicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"provider\")).isNull();\n\t\tverify(connection, times(1)).close();\n\t}\n","date":"2017-10-05 11:18:56","endLine":83,"groupId":"16343","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"jmsBrokerCouldNotRetrieveProviderMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/91/91775a5f9c9e8ef99b23aaebb68955d65f4644.src","preCode":"\tpublic void jmsBrokerCouldNotRetrieveProviderMetadata() throws JMSException {\n\t\tConnectionMetaData connectionMetaData = mock(ConnectionMetaData.class);\n\t\tgiven(connectionMetaData.getJMSProviderName())\n\t\t\t\t.willThrow(new JMSException(\"test\", \"123\"));\n\t\tConnection connection = mock(Connection.class);\n\t\tgiven(connection.getMetaData()).willReturn(connectionMetaData);\n\t\tConnectionFactory connectionFactory = mock(ConnectionFactory.class);\n\t\tgiven(connectionFactory.createConnection()).willReturn(connection);\n\t\tJmsHealthIndicator indicator = new JmsHealthIndicator(connectionFactory);\n\t\tHealth health = indicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"provider\")).isNull();\n\t\tverify(connection, times(1)).close();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/jms/JmsHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid jmsBrokerIsDown() throws JMSException {\n\t\tConnectionFactory connectionFactory = mock(ConnectionFactory.class);\n\t\tgiven(connectionFactory.createConnection()).willThrow(new JMSException(\"test\", \"123\"));\n\t\tJmsHealthIndicator indicator = new JmsHealthIndicator(connectionFactory);\n\t\tHealth health = indicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"provider\")).isNull();\n\t}\n","date":"2019-06-07 19:25:54","endLine":69,"groupId":"10344","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"jmsBrokerIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/93/d39f95c678513ef74cb3902c4e69442e9eda99.src","preCode":"\tpublic void jmsBrokerIsDown() throws JMSException {\n\t\tConnectionFactory connectionFactory = mock(ConnectionFactory.class);\n\t\tgiven(connectionFactory.createConnection()).willThrow(new JMSException(\"test\", \"123\"));\n\t\tJmsHealthIndicator indicator = new JmsHealthIndicator(connectionFactory);\n\t\tHealth health = indicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"provider\")).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/jms/JmsHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid jmsBrokerCouldNotRetrieveProviderMetadata() throws JMSException {\n\t\tConnectionMetaData connectionMetaData = mock(ConnectionMetaData.class);\n\t\tgiven(connectionMetaData.getJMSProviderName()).willThrow(new JMSException(\"test\", \"123\"));\n\t\tConnection connection = mock(Connection.class);\n\t\tgiven(connection.getMetaData()).willReturn(connectionMetaData);\n\t\tConnectionFactory connectionFactory = mock(ConnectionFactory.class);\n\t\tgiven(connectionFactory.createConnection()).willReturn(connection);\n\t\tJmsHealthIndicator indicator = new JmsHealthIndicator(connectionFactory);\n\t\tHealth health = indicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"provider\")).isNull();\n\t\tverify(connection, times(1)).close();\n\t}\n","date":"2019-06-07 19:25:54","endLine":84,"groupId":"10344","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"jmsBrokerCouldNotRetrieveProviderMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/93/d39f95c678513ef74cb3902c4e69442e9eda99.src","preCode":"\tpublic void jmsBrokerCouldNotRetrieveProviderMetadata() throws JMSException {\n\t\tConnectionMetaData connectionMetaData = mock(ConnectionMetaData.class);\n\t\tgiven(connectionMetaData.getJMSProviderName()).willThrow(new JMSException(\"test\", \"123\"));\n\t\tConnection connection = mock(Connection.class);\n\t\tgiven(connection.getMetaData()).willReturn(connectionMetaData);\n\t\tConnectionFactory connectionFactory = mock(ConnectionFactory.class);\n\t\tgiven(connectionFactory.createConnection()).willReturn(connection);\n\t\tJmsHealthIndicator indicator = new JmsHealthIndicator(connectionFactory);\n\t\tHealth health = indicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails().get(\"provider\")).isNull();\n\t\tverify(connection, times(1)).close();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/jms/JmsHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
