[{"authorTime":"2018-02-18 00:21:49","codes":[{"authorDate":"2018-02-18 00:21:49","commitOrder":1,"curCode":"\tpublic void convertShouldConvertElements() {\n\t\tif (this.conversionService instanceof ApplicationConversionService) {\n\t\t\tData data = new Data();\n\t\t\tdata.type = new int[] { 1, 2, 3 };\n\t\t\tString converted = (String) this.conversionService.convert(\n\t\t\t\t\tdata.type, TypeDescriptor\n\t\t\t\t\t\t\t.nested(ReflectionUtils.findField(Data.class, \"type\"), 0),\n\t\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\t\tassertThat(converted).isEqualTo(\"1.2.3\");\n\t\t}\n\t}\n","date":"2018-02-20 12:25:47","endLine":84,"groupId":"13753","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convertShouldConvertElements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/75/387c5f67a0f38c10c520cf3ec5d318e6984966.src","preCode":"\tpublic void convertShouldConvertElements() {\n\t\tif (this.conversionService instanceof ApplicationConversionService) {\n\t\t\tData data = new Data();\n\t\t\tdata.type = new int[] { 1, 2, 3 };\n\t\t\tString converted = (String) this.conversionService.convert(\n\t\t\t\t\tdata.type, TypeDescriptor\n\t\t\t\t\t\t\t.nested(ReflectionUtils.findField(Data.class, \"type\"), 0),\n\t\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\t\tassertThat(converted).isEqualTo(\"1.2.3\");\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/ArrayToDelimitedStringConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"},{"authorDate":"2018-02-18 00:21:49","commitOrder":1,"curCode":"\tpublic void convertShouldConvertElements() {\n\t\tif (this.conversionService instanceof ApplicationConversionService) {\n\t\t\tData data = new Data();\n\t\t\tdata.type = Arrays.asList(1, 2, 3);\n\t\t\tString converted = (String) this.conversionService.convert(\n\t\t\t\t\tdata.type, TypeDescriptor\n\t\t\t\t\t\t\t.nested(ReflectionUtils.findField(Data.class, \"type\"), 0),\n\t\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\t\tassertThat(converted).isEqualTo(\"1.2.3\");\n\t\t}\n\t}\n","date":"2018-02-20 12:25:47","endLine":87,"groupId":"13753","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convertShouldConvertElements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/31/da09401761a7aa21066213703476321cd8f70c.src","preCode":"\tpublic void convertShouldConvertElements() {\n\t\tif (this.conversionService instanceof ApplicationConversionService) {\n\t\t\tData data = new Data();\n\t\t\tdata.type = Arrays.asList(1, 2, 3);\n\t\t\tString converted = (String) this.conversionService.convert(\n\t\t\t\t\tdata.type, TypeDescriptor\n\t\t\t\t\t\t\t.nested(ReflectionUtils.findField(Data.class, \"type\"), 0),\n\t\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\t\tassertThat(converted).isEqualTo(\"1.2.3\");\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/CollectionToDelimitedStringConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"20109e27be24da74e884c14a03afc8f9561e4196","commitMessage":"@@@Add ApplicationConversionService and fix binder\n\nCreate a new `ApplicationConversionService` similar in design to the\nDefaultFormattingConversionService from Spring Framework. The new\nconversion service provides a central place for custom conversion logic\nsupported by Spring Boot.\n\nAlso replace the `BindingConversionService` with an internal\n`BindConverter` class that now invokes the `SimpleTypeConverter`\ndirectly. Binding for `@ConfigurationProperties` has been updated so\nthat any custom property editors registered with the BeanFactory can\nbe used.\n\nFixes gh-12095\n","date":"2018-02-20 12:25:47","modifiedFileCount":"29","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid convertShouldConvertElements() {\n\t\tData data = new Data();\n\t\tdata.type = new int[] { 1, 2, 3 };\n\t\tString converted = (String) new ApplicationConversionService().convert(data.type,\n\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"type\"), 0),\n\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\tassertThat(converted).isEqualTo(\"1.2.3\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":79,"groupId":"101801","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"convertShouldConvertElements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/40/a7720a0b7240204e070d4b72d37f08046a79da.src","preCode":"\tpublic void convertShouldConvertElements() {\n\t\tif (this.conversionService instanceof ApplicationConversionService) {\n\t\t\tData data = new Data();\n\t\t\tdata.type = new int[] { 1, 2, 3 };\n\t\t\tString converted = (String) this.conversionService.convert(data.type,\n\t\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"type\"), 0),\n\t\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\t\tassertThat(converted).isEqualTo(\"1.2.3\");\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/ArrayToDelimitedStringConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid convertShouldConvertElements() {\n\t\tData data = new Data();\n\t\tdata.type = Arrays.asList(1, 2, 3);\n\t\tString converted = (String) new ApplicationConversionService().convert(data.type,\n\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"type\"), 0),\n\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\tassertThat(converted).isEqualTo(\"1.2.3\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":81,"groupId":"101801","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"convertShouldConvertElements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e7/5f1faf9da9e3939a0e473b003068bac71af0c5.src","preCode":"\tpublic void convertShouldConvertElements() {\n\t\tif (this.conversionService instanceof ApplicationConversionService) {\n\t\t\tData data = new Data();\n\t\t\tdata.type = Arrays.asList(1, 2, 3);\n\t\t\tString converted = (String) this.conversionService.convert(data.type,\n\t\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"type\"), 0),\n\t\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\t\tassertThat(converted).isEqualTo(\"1.2.3\");\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/CollectionToDelimitedStringConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
