[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tprivate Properties getPropertiesFromApplication(Environment environment) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_APPLICATION, \"{}\");\n\t\t\tMap<String, Object> map = this.parser.parseMap(property);\n\t\t\textractPropertiesFromApplication(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"Could not parse VCAP_APPLICATION\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","date":"2017-10-05 11:18:56","endLine":157,"groupId":"5329","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPropertiesFromApplication","params":"(Environmentenvironment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d0/1953d0162cf279392580d2a2f855f9a5a80b6c.src","preCode":"\tprivate Properties getPropertiesFromApplication(Environment environment) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_APPLICATION, \"{}\");\n\t\t\tMap<String, Object> map = this.parser.parseMap(property);\n\t\t\textractPropertiesFromApplication(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"Could not parse VCAP_APPLICATION\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/cloud/CloudFoundryVcapEnvironmentPostProcessor.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tprivate Properties getPropertiesFromServices(Environment environment) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_SERVICES, \"{}\");\n\t\t\tMap<String, Object> map = this.parser.parseMap(property);\n\t\t\textractPropertiesFromServices(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"Could not parse VCAP_SERVICES\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","date":"2017-10-05 11:18:56","endLine":170,"groupId":"5331","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPropertiesFromServices","params":"(Environmentenvironment)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d0/1953d0162cf279392580d2a2f855f9a5a80b6c.src","preCode":"\tprivate Properties getPropertiesFromServices(Environment environment) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_SERVICES, \"{}\");\n\t\t\tMap<String, Object> map = this.parser.parseMap(property);\n\t\t\textractPropertiesFromServices(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"Could not parse VCAP_SERVICES\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/cloud/CloudFoundryVcapEnvironmentPostProcessor.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-06-26 00:35:30","codes":[{"authorDate":"2018-06-26 00:35:30","commitOrder":2,"curCode":"\tprivate Properties getPropertiesFromApplication(Environment environment,\n\t\t\tJsonParser parser) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_APPLICATION, \"{}\");\n\t\t\tMap<String, Object> map = parser.parseMap(property);\n\t\t\textractPropertiesFromApplication(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"Could not parse VCAP_APPLICATION\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","date":"2018-06-26 00:35:30","endLine":157,"groupId":"2190","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getPropertiesFromApplication","params":"(Environmentenvironment@JsonParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/44/25eb29ba9110f318f9b6346a8cf861c8b2e213.src","preCode":"\tprivate Properties getPropertiesFromApplication(Environment environment) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_APPLICATION, \"{}\");\n\t\t\tMap<String, Object> map = this.parser.parseMap(property);\n\t\t\textractPropertiesFromApplication(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"Could not parse VCAP_APPLICATION\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/cloud/CloudFoundryVcapEnvironmentPostProcessor.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2018-06-26 00:35:30","commitOrder":2,"curCode":"\tprivate Properties getPropertiesFromServices(Environment environment,\n\t\t\tJsonParser parser) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_SERVICES, \"{}\");\n\t\t\tMap<String, Object> map = parser.parseMap(property);\n\t\t\textractPropertiesFromServices(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"Could not parse VCAP_SERVICES\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","date":"2018-06-26 00:35:30","endLine":171,"groupId":"2191","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPropertiesFromServices","params":"(Environmentenvironment@JsonParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/44/25eb29ba9110f318f9b6346a8cf861c8b2e213.src","preCode":"\tprivate Properties getPropertiesFromServices(Environment environment) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_SERVICES, \"{}\");\n\t\t\tMap<String, Object> map = this.parser.parseMap(property);\n\t\t\textractPropertiesFromServices(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"Could not parse VCAP_SERVICES\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/cloud/CloudFoundryVcapEnvironmentPostProcessor.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"9281e2a410bb493d59448f9c3249af0c3a34ed46","commitMessage":"@@@Avoid creating JsonParser for VCAP_* parsing when running outside CF\n\nCloses gh-13437\n","date":"2018-06-26 00:35:30","modifiedFileCount":"1","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-07-14 12:19:10","codes":[{"authorDate":"2020-07-14 12:19:10","commitOrder":3,"curCode":"\tprivate Properties getPropertiesFromApplication(Environment environment, JsonParser parser) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_APPLICATION, \"{}\");\n\t\t\tMap<String, Object> map = parser.parseMap(property);\n\t\t\textractPropertiesFromApplication(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthis.logger.error(\"Could not parse VCAP_APPLICATION\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","date":"2020-07-23 12:02:32","endLine":186,"groupId":"102153","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getPropertiesFromApplication","params":"(Environmentenvironment@JsonParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a0/460d4416bf6cc841548316236b7b2f56d19523.src","preCode":"\tprivate Properties getPropertiesFromApplication(Environment environment, JsonParser parser) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_APPLICATION, \"{}\");\n\t\t\tMap<String, Object> map = parser.parseMap(property);\n\t\t\textractPropertiesFromApplication(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"Could not parse VCAP_APPLICATION\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/cloud/CloudFoundryVcapEnvironmentPostProcessor.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"},{"authorDate":"2020-07-14 12:19:10","commitOrder":3,"curCode":"\tprivate Properties getPropertiesFromServices(Environment environment, JsonParser parser) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_SERVICES, \"{}\");\n\t\t\tMap<String, Object> map = parser.parseMap(property);\n\t\t\textractPropertiesFromServices(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthis.logger.error(\"Could not parse VCAP_SERVICES\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","date":"2020-07-23 12:02:32","endLine":199,"groupId":"102153","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getPropertiesFromServices","params":"(Environmentenvironment@JsonParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a0/460d4416bf6cc841548316236b7b2f56d19523.src","preCode":"\tprivate Properties getPropertiesFromServices(Environment environment, JsonParser parser) {\n\t\tProperties properties = new Properties();\n\t\ttry {\n\t\t\tString property = environment.getProperty(VCAP_SERVICES, \"{}\");\n\t\t\tMap<String, Object> map = parser.parseMap(property);\n\t\t\textractPropertiesFromServices(properties, map);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tlogger.error(\"Could not parse VCAP_SERVICES\", ex);\n\t\t}\n\t\treturn properties;\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/cloud/CloudFoundryVcapEnvironmentPostProcessor.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"}],"commitId":"3352024b1ca641fa0beaaa4cd87788c190242eb0","commitMessage":"@@@Provide ConfigFileApplicationListener replacement\n\nDeprecate `ConfigFileApplicationListener` and provide a replacement\nmechanism that supports arbitrary config data imports.\n\nThis commit updates the following areas:\n\n- Extract `EnvironmentPostProcessor` invocation logic from the\n  `ConfigFileApplicationListener` to new dedicated listener. Also\n  providing support for `Log` injection.\n\n- Extract `RandomPropertySource` adding logic from the\n  `ConfigFileApplicationListener` to a dedicated class.\n\n- Migrate to the recently introduced `DefaultPropertiesPropertySource`\n  class when moving the defaultProperties `PropertySource`\n\n- Replace processing logic with a phased approach to ensure that\n  profile enablement happens in a distinct phase and that profiles\n  can no longer be activated on an ad-hoc basis.\n\n- Provide a more predictable and logical import order for processing\n  `application.properties` and `application.yml` files.\n\n- Add support for a `spring.config.import` property which can be used\n  to import additional config data. Also provide a pluggable API\n  allowing third-parties to resolve and load locations themselves.\n\n- Add `spring.config.activate.on-profile` support which replaces the\n  existing `spring.profiles` property.\n\n- Add `spring.config.activate.on-cloud-platform` support which allows\n  a config data document to be active only on a given cloud platform.\n\n- Support a `spring.config.use-legacy-processing` property allowing the\n  previous processing logic to be used.\n\nCloses gh-22497\n\nCo-authored-by: Madhura Bhave <mbhave@vmware.com>\n","date":"2020-07-23 12:02:32","modifiedFileCount":"17","status":"M","submitter":"Phillip Webb"}]
