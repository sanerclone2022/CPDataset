[{"authorTime":"2017-10-28 19:33:52","codes":[{"authorDate":"2017-10-28 19:33:52","commitOrder":1,"curCode":"\tpublic void lastAdditionalLocationWins() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.additional-location=classpath:override.properties,\"\n\t\t\t\t\t\t+ \"classpath:some.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"spam\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isEqualTo(\"1234\");\n\t}\n","date":"2017-11-03 01:12:22","endLine":864,"groupId":"5281","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"lastAdditionalLocationWins","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/75/dc8aca811c8d4a6621a0123f5f395613cebef1.src","preCode":"\tpublic void lastAdditionalLocationWins() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.additional-location=classpath:override.properties,\"\n\t\t\t\t\t\t+ \"classpath:some.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"spam\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isEqualTo(\"1234\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":857,"status":"B"},{"authorDate":"2017-10-28 19:33:52","commitOrder":1,"curCode":"\tpublic void locationReplaceDefaultLocation() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.location=classpath:override.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isNull();\n\t}\n","date":"2017-11-03 01:12:22","endLine":873,"groupId":"7409","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"locationReplaceDefaultLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/75/dc8aca811c8d4a6621a0123f5f395613cebef1.src","preCode":"\tpublic void locationReplaceDefaultLocation() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.location=classpath:override.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":867,"status":"B"}],"commitId":"8eae37243367ad057b23179c08ea26003dca3c69","commitMessage":"@@@Change handling of spring.config.location so it replaces defaults\n\nPreviously.  spring.config.name was handled in such a way that its\nvalue would replace the defaults. By constrast.  spring.config.location\nwould add to the defaults.\n\nUpdate the handling of spring.config.location so that it replaces the\ndefaults. This aligns its behaviour with spring.config.name. To allow\nusers to add additional locations a new property. \nspring.config.additional-location.  has been introduced. It behaves as\nspring.config.location did prior to this change.\n\nCloses gh-10595\n","date":"2017-11-03 01:12:22","modifiedFileCount":"2","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void lastAdditionalLocationWins() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.additional-location=classpath:override.properties,\"\n\t\t\t\t\t\t+ \"classpath:some.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"spam\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isEqualTo(\"1234\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":859,"groupId":"5281","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"lastAdditionalLocationWins","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/9315fa4cf410bac4dfbdabca74b970b9b497e6.src","preCode":"\tpublic void lastAdditionalLocationWins() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.additional-location=classpath:override.properties,\"\n\t\t\t\t\t\t+ \"classpath:some.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"spam\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isEqualTo(\"1234\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":852,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void locationReplaceDefaultLocation() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.location=classpath:override.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isNull();\n\t}\n","date":"2017-12-12 18:57:30","endLine":868,"groupId":"7409","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"locationReplaceDefaultLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/9315fa4cf410bac4dfbdabca74b970b9b497e6.src","preCode":"\tpublic void locationReplaceDefaultLocation() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.location=classpath:override.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":862,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid lastAdditionalLocationWins() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.additional-location=classpath:override.properties,\" + \"classpath:some.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"spam\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isEqualTo(\"1234\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":915,"groupId":"5281","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"lastAdditionalLocationWins","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/65/d5909c365ca1adbe9176d001117555481f02c6.src","preCode":"\tpublic void lastAdditionalLocationWins() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.additional-location=classpath:override.properties,\" + \"classpath:some.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"spam\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isEqualTo(\"1234\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":909,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid locationReplaceDefaultLocation() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.location=classpath:override.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isNull();\n\t}\n","date":"2019-06-07 19:25:54","endLine":924,"groupId":"7409","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"locationReplaceDefaultLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/65/d5909c365ca1adbe9176d001117555481f02c6.src","preCode":"\tpublic void locationReplaceDefaultLocation() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.location=classpath:override.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":918,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-07-15 02:39:18","commitOrder":4,"curCode":"\tvoid lastAdditionalLocationWins() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.additional-location=classpath:override.properties,classpath:some.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"spam\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isEqualTo(\"1234\");\n\t}\n","date":"2019-07-15 07:24:19","endLine":913,"groupId":"101592","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"lastAdditionalLocationWins","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a4/a261fd974752ee48be235d6ea64d4fea8fe112.src","preCode":"\tvoid lastAdditionalLocationWins() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.additional-location=classpath:override.properties,\" + \"classpath:some.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"spam\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isEqualTo(\"1234\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":907,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid locationReplaceDefaultLocation() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.location=classpath:override.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isNull();\n\t}\n","date":"2019-06-07 19:25:54","endLine":924,"groupId":"101592","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"locationReplaceDefaultLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/65/d5909c365ca1adbe9176d001117555481f02c6.src","preCode":"\tvoid locationReplaceDefaultLocation() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\n\t\t\t\t\"spring.config.location=classpath:override.properties\");\n\t\tthis.initializer.postProcessEnvironment(this.environment, this.application);\n\t\tassertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"bar\");\n\t\tassertThat(this.environment.getProperty(\"value\")).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":918,"status":"N"}],"commitId":"01933f9b064860e5bbca4e3ff71789dbcf615e19","commitMessage":"@@@Merge previously split strings\n\nMerge some string lines that were previously split because of the\n90 chars wide formatting.\n","date":"2019-07-15 07:24:19","modifiedFileCount":"173","status":"M","submitter":"Phillip Webb"}]
