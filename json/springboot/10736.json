[{"authorTime":"2018-02-09 08:24:53","codes":[{"authorDate":"2018-02-09 08:24:53","commitOrder":1,"curCode":"\tpublic void skipSslValidation() {\n\t\tsetupContextWithCloudEnabled();\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\"cloudFoundrySecurityService\");\n\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block();\n\t}\n","date":"2018-02-10 00:46:29","endLine":262,"groupId":"8304","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"skipSslValidation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/34/86c712b9fb8212372e0eff815e1738691e2899.src","preCode":"\tpublic void skipSslValidation() {\n\t\tsetupContextWithCloudEnabled();\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\"cloudFoundrySecurityService\");\n\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"B"},{"authorDate":"2018-02-09 08:24:53","commitOrder":1,"curCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tsetupContextWithCloudEnabled();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\"cloudFoundrySecurityService\");\n\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\tthis.thrown.expectCause(instanceOf(SSLException.class));\n\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block();\n\t}\n","date":"2018-02-10 00:46:29","endLine":277,"groupId":"8304","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sslValidationNotSkippedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/34/86c712b9fb8212372e0eff815e1738691e2899.src","preCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tsetupContextWithCloudEnabled();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\"cloudFoundrySecurityService\");\n\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\tthis.thrown.expectCause(instanceOf(SSLException.class));\n\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"B"}],"commitId":"e9fe918d258ea058d331135630ca1068710d122d","commitMessage":"@@@Add option to skip ssl for reactive CF actuators\n\nFixes gh-10898\n","date":"2018-02-10 00:46:29","modifiedFileCount":"4","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2018-01-03 03:13:23","codes":[{"authorDate":"2018-01-03 03:13:23","commitOrder":2,"curCode":"\tpublic void skipSslValidation() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run(context -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block();\n\t\t\t\t});\n\t}\n","date":"2018-03-03 10:30:55","endLine":282,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"skipSslValidation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/f5777e431c7382be54b7cc937bd93608ceab3f.src","preCode":"\tpublic void skipSslValidation() {\n\t\tsetupContextWithCloudEnabled();\n\t\tTestPropertyValues.of(\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\"cloudFoundrySecurityService\");\n\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"M"},{"authorDate":"2018-01-03 03:13:23","commitOrder":2,"curCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\tthis.thrown.expectCause(instanceOf(SSLException.class));\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block();\n\t\t\t\t});\n\t}\n","date":"2018-03-03 10:30:55","endLine":300,"groupId":"8304","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sslValidationNotSkippedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/f5777e431c7382be54b7cc937bd93608ceab3f.src","preCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tsetupContextWithCloudEnabled();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\"cloudFoundrySecurityService\");\n\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\tthis.thrown.expectCause(instanceOf(SSLException.class));\n\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"}],"commitId":"1c27a8e6e271a86c8600fcfa2b1f221e9023efe9","commitMessage":"@@@Move tests to ApplicationContextRunner\n","date":"2018-03-03 10:30:55","modifiedFileCount":"2","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2018-03-13 07:30:55","codes":[{"authorDate":"2018-03-13 07:30:55","commitOrder":3,"curCode":"\tpublic void skipSslValidation() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t.block();\n\t\t\t\t});\n\t}\n","date":"2018-03-15 05:05:26","endLine":316,"groupId":"8487","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"skipSslValidation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/11/1366da84f09ee18009d12fa38e750b65df230c.src","preCode":"\tpublic void skipSslValidation() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run(context -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"},{"authorDate":"2018-03-13 07:30:55","commitOrder":3,"curCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\tthis.thrown.expectCause(instanceOf(SSLException.class));\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t.block();\n\t\t\t\t});\n\t}\n","date":"2018-03-15 05:05:26","endLine":339,"groupId":"8304","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"sslValidationNotSkippedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/11/1366da84f09ee18009d12fa38e750b65df230c.src","preCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\tthis.thrown.expectCause(instanceOf(SSLException.class));\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":319,"status":"M"}],"commitId":"a4b0be089da735c481ede50d66f8abc1d3d2cccd","commitMessage":"@@@Polish\n","date":"2018-03-15 05:05:26","modifiedFileCount":"29","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-10-02 02:18:16","codes":[{"authorDate":"2018-03-13 07:30:55","commitOrder":4,"curCode":"\tpublic void skipSslValidation() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t.block();\n\t\t\t\t});\n\t}\n","date":"2018-03-15 05:05:26","endLine":316,"groupId":"8487","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"skipSslValidation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/11/1366da84f09ee18009d12fa38e750b65df230c.src","preCode":"\tpublic void skipSslValidation() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t.block();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"N"},{"authorDate":"2018-10-02 02:18:16","commitOrder":4,"curCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class)\n\t\t\t\t\t\t\t.isThrownBy(\n\t\t\t\t\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\")\n\t\t\t\t\t\t\t\t\t\t\t.exchange()::block)\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","date":"2018-10-03 01:55:28","endLine":339,"groupId":"8304","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"sslValidationNotSkippedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8b/0da1274616d39aa9d98c29e9a124f6ffa5cc6e.src","preCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\tthis.thrown.expectCause(instanceOf(SSLException.class));\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t.block();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"M"}],"commitId":"d76bba5e6f5c702c8bf2aa86fee19ec7de8ed3cb","commitMessage":"@@@Migrate from ExpectedException rule to AssertJ\n\nReplace ExpectedException JUnit rules with AssertJ exception\nassertions.\n\nCloses gh-14336\n","date":"2018-10-03 01:55:28","modifiedFileCount":"271","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-12-20 23:30:51","codes":[{"authorDate":"2018-12-20 23:30:51","commitOrder":5,"curCode":"\tpublic void skipSslValidation() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t.block(Duration.ofSeconds(30));\n\t\t\t\t});\n\t}\n","date":"2018-12-20 23:30:51","endLine":319,"groupId":"8487","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"skipSslValidation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/76/fd2fe358478bf0e6ee5f110f344c04e5ad0b19.src","preCode":"\tpublic void skipSslValidation() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t.block();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"M"},{"authorDate":"2018-12-20 23:30:51","commitOrder":5,"curCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class)\n\t\t\t\t\t\t\t.isThrownBy(() -> webClient.get()\n\t\t\t\t\t\t\t\t\t.uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t\t\t.block(Duration.ofSeconds(30)))\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","date":"2018-12-20 23:30:51","endLine":344,"groupId":"8304","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"sslValidationNotSkippedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/76/fd2fe358478bf0e6ee5f110f344c04e5ad0b19.src","preCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class)\n\t\t\t\t\t\t\t.isThrownBy(\n\t\t\t\t\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\")\n\t\t\t\t\t\t\t\t\t\t\t.exchange()::block)\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"}],"commitId":"9d2d6d5812d34b0bc04da3a124b9c5c0da511c04","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2018-12-20 23:30:51","modifiedFileCount":"22","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-03-28 19:48:47","codes":[{"authorDate":"2019-03-28 19:48:47","commitOrder":6,"curCode":"\tpublic void skipSslValidation() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t.block(Duration.ofSeconds(30));\n\t\t\t\t});\n\t}\n","date":"2019-03-28 19:48:47","endLine":339,"groupId":"8487","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"skipSslValidation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/e52b48f3711d510072999b9d7d6357be766177.src","preCode":"\tpublic void skipSslValidation() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t.block(Duration.ofSeconds(30));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":319,"status":"M"},{"authorDate":"2019-03-28 19:48:47","commitOrder":6,"curCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class)\n\t\t\t\t\t\t\t.isThrownBy(() -> webClient.get()\n\t\t\t\t\t\t\t\t\t.uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t\t\t.block(Duration.ofSeconds(30)))\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","date":"2019-03-28 19:48:47","endLine":364,"groupId":"8304","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"sslValidationNotSkippedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/e52b48f3711d510072999b9d7d6357be766177.src","preCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptorSecurityService, \"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class)\n\t\t\t\t\t\t\t.isThrownBy(() -> webClient.get()\n\t\t\t\t\t\t\t\t\t.uri(\"https://self-signed.badssl.com/\").exchange()\n\t\t\t\t\t\t\t\t\t.block(Duration.ofSeconds(30)))\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":342,"status":"M"}],"commitId":"878a635bfb6c28ee135b4f84e12fc09a42d1a3a9","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2019-03-28 19:48:47","modifiedFileCount":"67","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":7,"curCode":"\tvoid skipSslValidation() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block(Duration.ofSeconds(30));\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":275,"groupId":"8487","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"skipSslValidation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/ac9ee8d9051b313821e885b1ad75293e602f47.src","preCode":"\tpublic void skipSslValidation() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block(Duration.ofSeconds(30));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":7,"curCode":"\tvoid sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> webClient.get()\n\t\t\t\t\t\t\t.uri(\"https://self-signed.badssl.com/\").exchange().block(Duration.ofSeconds(30)))\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":293,"groupId":"8304","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"sslValidationNotSkippedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/ac9ee8d9051b313821e885b1ad75293e602f47.src","preCode":"\tpublic void sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> webClient.get()\n\t\t\t\t\t\t\t.uri(\"https://self-signed.badssl.com/\").exchange().block(Duration.ofSeconds(30)))\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-09-30 19:21:16","codes":[{"authorDate":"2020-09-30 19:21:16","commitOrder":8,"curCode":"\tvoid skipSslValidation() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchangeToMono(ClientResponse::releaseBody)\n\t\t\t\t\t\t\t.block(Duration.ofSeconds(30));\n\t\t\t\t});\n\t}\n","date":"2020-09-30 19:46:57","endLine":276,"groupId":"8487","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"skipSslValidation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ec/0c11fd1da046297dd5e45c4607f228a20f2d18.src","preCode":"\tvoid skipSslValidation() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchange().block(Duration.ofSeconds(30));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"},{"authorDate":"2020-09-30 19:21:16","commitOrder":8,"curCode":"\tvoid sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class)\n\t\t\t\t\t\t\t.isThrownBy(() -> webClient.get().uri(\"https://self-signed.badssl.com/\")\n\t\t\t\t\t\t\t\t\t.exchangeToMono(ClientResponse::releaseBody).block(Duration.ofSeconds(30)))\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","date":"2020-09-30 19:46:57","endLine":295,"groupId":"8304","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"sslValidationNotSkippedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ec/0c11fd1da046297dd5e45c4607f228a20f2d18.src","preCode":"\tvoid sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> webClient.get()\n\t\t\t\t\t\t\t.uri(\"https://self-signed.badssl.com/\").exchange().block(Duration.ofSeconds(30)))\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"M"}],"commitId":"366fec33d06b6ab4ee4f1bc9513c07a227d207de","commitMessage":"@@@Adapt to API change in Spring Framework 5.3.0 snapshots\n\nSee gh-23534\n","date":"2020-09-30 19:46:57","modifiedFileCount":"9","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2020-09-30 22:03:33","codes":[{"authorDate":"2020-09-30 22:03:33","commitOrder":9,"curCode":"\tvoid skipSslValidation() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").retrieve().toBodilessEntity()\n\t\t\t\t\t\t\t.block(Duration.ofSeconds(30));\n\t\t\t\t});\n\t}\n","date":"2020-09-30 22:09:41","endLine":275,"groupId":"10736","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"skipSslValidation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/21/e2a6fa0a8d141ea0fbe97173f6dd9c32ef3c6b.src","preCode":"\tvoid skipSslValidation() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\",\n\t\t\t\t\t\t\"management.cloudfoundry.skip-ssl-validation:true\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\twebClient.get().uri(\"https://self-signed.badssl.com/\").exchangeToMono(ClientResponse::releaseBody)\n\t\t\t\t\t\t\t.block(Duration.ofSeconds(30));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"M"},{"authorDate":"2020-09-30 22:03:33","commitOrder":9,"curCode":"\tvoid sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class)\n\t\t\t\t\t\t\t.isThrownBy(() -> webClient.get().uri(\"https://self-signed.badssl.com/\").retrieve()\n\t\t\t\t\t\t\t\t\t.toBodilessEntity().block(Duration.ofSeconds(30)))\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","date":"2020-09-30 22:09:41","endLine":294,"groupId":"10736","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"sslValidationNotSkippedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/21/e2a6fa0a8d141ea0fbe97173f6dd9c32ef3c6b.src","preCode":"\tvoid sslValidationNotSkippedByDefault() {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HealthEndpointAutoConfiguration.class))\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tWebClient webClient = (WebClient) ReflectionTestUtils.getField(interceptorSecurityService,\n\t\t\t\t\t\t\t\"webClient\");\n\t\t\t\t\tassertThatExceptionOfType(RuntimeException.class)\n\t\t\t\t\t\t\t.isThrownBy(() -> webClient.get().uri(\"https://self-signed.badssl.com/\")\n\t\t\t\t\t\t\t\t\t.exchangeToMono(ClientResponse::releaseBody).block(Duration.ofSeconds(30)))\n\t\t\t\t\t\t\t.withCauseInstanceOf(SSLException.class);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"M"}],"commitId":"de32fab3249260616ce2b895e005bc7e98e4ef12","commitMessage":"@@@Adapt to API change in Spring Framework 5.3.0 snapshots\n\nSee gh-23534\n","date":"2020-09-30 22:09:41","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"}]
