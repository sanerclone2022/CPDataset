[{"authorTime":"2018-11-26 19:30:29","codes":[{"authorDate":"2018-11-26 19:30:29","commitOrder":2,"curCode":"\tpublic void asyncRequestThatThrowsUncheckedException() throws Exception {\n\t\tMvcResult result = this.mvc.perform(get(\"/api/c1/completableFutureException\"))\n\t\t\t\t.andExpect(request().asyncStarted()).andReturn();\n\t\tassertThat(this.registry.get(\"my.long.request.exception\").longTaskTimer()\n\t\t\t\t.activeTasks()).isEqualTo(1);\n\t\tassertThatExceptionOfType(NestedServletException.class)\n\t\t\t\t.isThrownBy(() -> this.mvc.perform(asyncDispatch(result)))\n\t\t\t\t.withRootCauseInstanceOf(RuntimeException.class);\n\t\tassertThat(this.registry.get(\"my.long.request.exception\").longTaskTimer()\n\t\t\t\t.activeTasks()).isEqualTo(0);\n\t}\n","date":"2018-11-26 19:41:55","endLine":97,"groupId":"8879","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"asyncRequestThatThrowsUncheckedException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/03/6e6f82e49f70bfce72d2accdf6b9f3826d9b0f.src","preCode":"\tpublic void asyncRequestThatThrowsUncheckedException() throws Exception {\n\t\tMvcResult result = this.mvc.perform(get(\"/api/c1/completableFutureException\"))\n\t\t\t\t.andExpect(request().asyncStarted()).andReturn();\n\t\tassertThat(this.registry.get(\"my.long.request.exception\").longTaskTimer()\n\t\t\t\t.activeTasks()).isEqualTo(1);\n\t\tassertThatExceptionOfType(NestedServletException.class)\n\t\t\t\t.isThrownBy(() -> this.mvc.perform(asyncDispatch(result)))\n\t\t\t\t.withRootCauseInstanceOf(RuntimeException.class);\n\t\tassertThat(this.registry.get(\"my.long.request.exception\").longTaskTimer()\n\t\t\t\t.activeTasks()).isEqualTo(0);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"},{"authorDate":"2018-11-26 19:30:29","commitOrder":2,"curCode":"\tpublic void asyncRequestThatThrowsUncheckedException() throws Exception {\n\t\tMvcResult result = this.mvc.perform(get(\"/api/c1/completableFutureException\"))\n\t\t\t\t.andExpect(request().asyncStarted()).andReturn();\n\t\tassertThatExceptionOfType(NestedServletException.class)\n\t\t\t\t.isThrownBy(() -> this.mvc.perform(asyncDispatch(result)))\n\t\t\t\t.withRootCauseInstanceOf(RuntimeException.class);\n\t\tassertThat(this.registry.get(\"http.server.requests\")\n\t\t\t\t.tags(\"uri\", \"/api/c1/completableFutureException\").timer().count())\n\t\t\t\t\t\t.isEqualTo(1);\n\t}\n","date":"2018-11-26 19:41:55","endLine":240,"groupId":"8879","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"asyncRequestThatThrowsUncheckedException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7b/53c2556902cb282d3ca83fef814832d6296194.src","preCode":"\tpublic void asyncRequestThatThrowsUncheckedException() throws Exception {\n\t\tMvcResult result = this.mvc.perform(get(\"/api/c1/completableFutureException\"))\n\t\t\t\t.andExpect(request().asyncStarted()).andReturn();\n\t\tassertThatExceptionOfType(NestedServletException.class)\n\t\t\t\t.isThrownBy(() -> this.mvc.perform(asyncDispatch(result)))\n\t\t\t\t.withRootCauseInstanceOf(RuntimeException.class);\n\t\tassertThat(this.registry.get(\"http.server.requests\")\n\t\t\t\t.tags(\"uri\", \"/api/c1/completableFutureException\").timer().count())\n\t\t\t\t\t\t.isEqualTo(1);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"MB"}],"commitId":"c1bbcb69083a820aa5da746e574fadff28266a8a","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-11-26 19:41:55","modifiedFileCount":"4","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid asyncRequestThatThrowsUncheckedException() throws Exception {\n\t\tMvcResult result = this.mvc.perform(get(\"/api/c1/completableFutureException\"))\n\t\t\t\t.andExpect(request().asyncStarted()).andReturn();\n\t\tassertThat(this.registry.get(\"my.long.request.exception\").longTaskTimer().activeTasks()).isEqualTo(1);\n\t\tassertThatExceptionOfType(NestedServletException.class)\n\t\t\t\t.isThrownBy(() -> this.mvc.perform(asyncDispatch(result)))\n\t\t\t\t.withRootCauseInstanceOf(RuntimeException.class);\n\t\tassertThat(this.registry.get(\"my.long.request.exception\").longTaskTimer().activeTasks()).isEqualTo(0);\n\t}\n","date":"2019-06-07 19:25:54","endLine":95,"groupId":"10515","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"asyncRequestThatThrowsUncheckedException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8e/59bbbb0261def1673b4997345e881d812db6ed.src","preCode":"\tpublic void asyncRequestThatThrowsUncheckedException() throws Exception {\n\t\tMvcResult result = this.mvc.perform(get(\"/api/c1/completableFutureException\"))\n\t\t\t\t.andExpect(request().asyncStarted()).andReturn();\n\t\tassertThat(this.registry.get(\"my.long.request.exception\").longTaskTimer().activeTasks()).isEqualTo(1);\n\t\tassertThatExceptionOfType(NestedServletException.class)\n\t\t\t\t.isThrownBy(() -> this.mvc.perform(asyncDispatch(result)))\n\t\t\t\t.withRootCauseInstanceOf(RuntimeException.class);\n\t\tassertThat(this.registry.get(\"my.long.request.exception\").longTaskTimer().activeTasks()).isEqualTo(0);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid asyncRequestThatThrowsUncheckedException() throws Exception {\n\t\tMvcResult result = this.mvc.perform(get(\"/api/c1/completableFutureException\"))\n\t\t\t\t.andExpect(request().asyncStarted()).andReturn();\n\t\tassertThatExceptionOfType(NestedServletException.class)\n\t\t\t\t.isThrownBy(() -> this.mvc.perform(asyncDispatch(result)))\n\t\t\t\t.withRootCauseInstanceOf(RuntimeException.class);\n\t\tassertThat(this.registry.get(\"http.server.requests\").tags(\"uri\", \"/api/c1/completableFutureException\").timer()\n\t\t\t\t.count()).isEqualTo(1);\n\t}\n","date":"2019-06-07 19:25:54","endLine":239,"groupId":"10515","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"asyncRequestThatThrowsUncheckedException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cf/7776aeaab90b826bdfe79e557e4d49db8efd35.src","preCode":"\tpublic void asyncRequestThatThrowsUncheckedException() throws Exception {\n\t\tMvcResult result = this.mvc.perform(get(\"/api/c1/completableFutureException\"))\n\t\t\t\t.andExpect(request().asyncStarted()).andReturn();\n\t\tassertThatExceptionOfType(NestedServletException.class)\n\t\t\t\t.isThrownBy(() -> this.mvc.perform(asyncDispatch(result)))\n\t\t\t\t.withRootCauseInstanceOf(RuntimeException.class);\n\t\tassertThat(this.registry.get(\"http.server.requests\").tags(\"uri\", \"/api/c1/completableFutureException\").timer()\n\t\t\t\t.count()).isEqualTo(1);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
