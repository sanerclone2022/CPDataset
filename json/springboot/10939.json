[{"authorTime":"2018-02-13 08:20:52","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tpublic void handlerAdaptersCreated() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tassertThat(context).getBeans(HandlerAdapter.class).hasSize(3);\n\t\t\tassertThat(context.getBean(RequestMappingHandlerAdapter.class)\n\t\t\t\t\t.getMessageConverters()).isNotEmpty().isEqualTo(\n\t\t\t\t\t\t\tcontext.getBean(HttpMessageConverters.class).getConverters());\n\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":133,"groupId":"12359","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handlerAdaptersCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/34/869163965d1b5a450e24a6d96bd4e9224464a4.src","preCode":"\tpublic void handlerAdaptersCreated() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tassertThat(context).getBeans(HandlerAdapter.class).hasSize(3);\n\t\t\tassertThat(context.getBean(RequestMappingHandlerAdapter.class)\n\t\t\t\t\t.getMessageConverters()).isNotEmpty().isEqualTo(\n\t\t\t\t\t\t\tcontext.getBean(HttpMessageConverters.class).getConverters());\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"NB"},{"authorDate":"2018-02-13 08:20:52","commitOrder":2,"curCode":"\tpublic void primaryExporterIsAllowed() {\n\t\tthis.contextRunner.withUserConfiguration(CustomMBeanExporter.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context).getBeans(MBeanExporter.class).hasSize(2);\n\t\t\t\t\tassertThat(context.getBean(MBeanExporter.class))\n\t\t\t\t\t\t\t.isSameAs(context.getBean(\"myMBeanExporter\"));\n\t\t\t\t});\n\t}\n","date":"2018-02-13 09:49:54","endLine":136,"groupId":"3078","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"primaryExporterIsAllowed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b6/b634caed7f02afaca8298c223760936bed2f9f.src","preCode":"\tpublic void primaryExporterIsAllowed() {\n\t\tthis.contextRunner.withUserConfiguration(CustomMBeanExporter.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context).getBeans(MBeanExporter.class).hasSize(2);\n\t\t\t\t\tassertThat(context.getBean(MBeanExporter.class))\n\t\t\t\t\t\t\t.isSameAs(context.getBean(\"myMBeanExporter\"));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/integration/IntegrationAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"}],"commitId":"74cede5cdcc56afae84e78f9fe10a1c71ad5595f","commitMessage":"@@@Migrate integration tests to context runner\n\nMigrate `IntegrationAutoConfigurationTests` to use the\n`ApplicationContextRunner`.\n","date":"2018-02-13 09:49:54","modifiedFileCount":"1","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-03-05 22:30:19","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":3,"curCode":"\tpublic void handlerAdaptersCreated() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tassertThat(context).getBeans(HandlerAdapter.class).hasSize(3);\n\t\t\tassertThat(context.getBean(RequestMappingHandlerAdapter.class)\n\t\t\t\t\t.getMessageConverters()).isNotEmpty().isEqualTo(\n\t\t\t\t\t\t\tcontext.getBean(HttpMessageConverters.class).getConverters());\n\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":133,"groupId":"12359","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handlerAdaptersCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/34/869163965d1b5a450e24a6d96bd4e9224464a4.src","preCode":"\tpublic void handlerAdaptersCreated() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tassertThat(context).getBeans(HandlerAdapter.class).hasSize(3);\n\t\t\tassertThat(context.getBean(RequestMappingHandlerAdapter.class)\n\t\t\t\t\t.getMessageConverters()).isNotEmpty().isEqualTo(\n\t\t\t\t\t\t\tcontext.getBean(HttpMessageConverters.class).getConverters());\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"N"},{"authorDate":"2019-03-05 22:30:19","commitOrder":3,"curCode":"\tpublic void primaryExporterIsAllowed() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.jmx.enabled=true\")\n\t\t\t\t.withUserConfiguration(CustomMBeanExporter.class).run((context) -> {\n\t\t\t\t\tassertThat(context).getBeans(MBeanExporter.class).hasSize(2);\n\t\t\t\t\tassertThat(context.getBean(MBeanExporter.class))\n\t\t\t\t\t\t\t.isSameAs(context.getBean(\"myMBeanExporter\"));\n\t\t\t\t});\n\t}\n","date":"2019-03-06 01:51:00","endLine":143,"groupId":"3078","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"primaryExporterIsAllowed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f4/2edc72c50bd8b75509573070801896ea089d67.src","preCode":"\tpublic void primaryExporterIsAllowed() {\n\t\tthis.contextRunner.withUserConfiguration(CustomMBeanExporter.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tassertThat(context).getBeans(MBeanExporter.class).hasSize(2);\n\t\t\t\t\tassertThat(context.getBean(MBeanExporter.class))\n\t\t\t\t\t\t\t.isSameAs(context.getBean(\"myMBeanExporter\"));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/integration/IntegrationAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"ce9626d00fcaf12621278ac0a008813f61cbbff3","commitMessage":"@@@Disable JMX by default\n\nThis commit switches the default value for the `spring.jmx.enabled`\nconfiguration property.\nJMX is now disabled by default and can be enabled with\n`spring.jmx.enabled=true`.\n\nCloses gh-16090\n","date":"2019-03-06 01:51:00","modifiedFileCount":"6","status":"M","submitter":"Brian Clozel"},{"authorTime":"2019-03-05 22:30:19","codes":[{"authorDate":"2019-03-21 21:31:38","commitOrder":4,"curCode":"\tpublic void handlerAdaptersCreated() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tassertThat(context).getBeans(HandlerAdapter.class).hasSize(4);\n\t\t\tassertThat(context.getBean(RequestMappingHandlerAdapter.class)\n\t\t\t\t\t.getMessageConverters()).isNotEmpty().isEqualTo(\n\t\t\t\t\t\t\tcontext.getBean(HttpMessageConverters.class).getConverters());\n\t\t});\n\t}\n","date":"2019-03-21 21:31:38","endLine":145,"groupId":"12359","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"handlerAdaptersCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4f/d5f8a87f0f298c3d94aea8f3ada02a4b944d9f.src","preCode":"\tpublic void handlerAdaptersCreated() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tassertThat(context).getBeans(HandlerAdapter.class).hasSize(3);\n\t\t\tassertThat(context.getBean(RequestMappingHandlerAdapter.class)\n\t\t\t\t\t.getMessageConverters()).isNotEmpty().isEqualTo(\n\t\t\t\t\t\t\tcontext.getBean(HttpMessageConverters.class).getConverters());\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"},{"authorDate":"2019-03-05 22:30:19","commitOrder":4,"curCode":"\tpublic void primaryExporterIsAllowed() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.jmx.enabled=true\")\n\t\t\t\t.withUserConfiguration(CustomMBeanExporter.class).run((context) -> {\n\t\t\t\t\tassertThat(context).getBeans(MBeanExporter.class).hasSize(2);\n\t\t\t\t\tassertThat(context.getBean(MBeanExporter.class))\n\t\t\t\t\t\t\t.isSameAs(context.getBean(\"myMBeanExporter\"));\n\t\t\t\t});\n\t}\n","date":"2019-03-06 01:51:00","endLine":143,"groupId":"3078","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"primaryExporterIsAllowed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f4/2edc72c50bd8b75509573070801896ea089d67.src","preCode":"\tpublic void primaryExporterIsAllowed() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.jmx.enabled=true\")\n\t\t\t\t.withUserConfiguration(CustomMBeanExporter.class).run((context) -> {\n\t\t\t\t\tassertThat(context).getBeans(MBeanExporter.class).hasSize(2);\n\t\t\t\t\tassertThat(context.getBean(MBeanExporter.class))\n\t\t\t\t\t\t\t.isSameAs(context.getBean(\"myMBeanExporter\"));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/integration/IntegrationAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"N"}],"commitId":"711169aa8ae4b8ff0e349cd2fb495ffd1db9c3b6","commitMessage":"@@@Adapt tests after Servlet.fn added to Spring Framework\n\nSince Servlet.fn support has been added in Spring Framework.  new\ninfrastructure beans (like `HandlerAdapter` and `HandlerMapping`) have\nbeen added.\n\nThis commit adapts the Spring MVC auto-configuration tests to reflect\nthose changes.\n","date":"2019-03-21 21:31:38","modifiedFileCount":"1","status":"M","submitter":"Brian Clozel"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid handlerAdaptersCreated() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tassertThat(context).getBeans(HandlerAdapter.class).hasSize(4);\n\t\t\tassertThat(context.getBean(RequestMappingHandlerAdapter.class).getMessageConverters()).isNotEmpty()\n\t\t\t\t\t.isEqualTo(context.getBean(HttpMessageConverters.class).getConverters());\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":143,"groupId":"10939","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"handlerAdaptersCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ab/7ee064f50f0b23977aee9fbd763fbaab31e709.src","preCode":"\tpublic void handlerAdaptersCreated() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tassertThat(context).getBeans(HandlerAdapter.class).hasSize(4);\n\t\t\tassertThat(context.getBean(RequestMappingHandlerAdapter.class).getMessageConverters()).isNotEmpty()\n\t\t\t\t\t.isEqualTo(context.getBean(HttpMessageConverters.class).getConverters());\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid primaryExporterIsAllowed() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.jmx.enabled=true\")\n\t\t\t\t.withUserConfiguration(CustomMBeanExporter.class).run((context) -> {\n\t\t\t\t\tassertThat(context).getBeans(MBeanExporter.class).hasSize(2);\n\t\t\t\t\tassertThat(context.getBean(MBeanExporter.class)).isSameAs(context.getBean(\"myMBeanExporter\"));\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":130,"groupId":"10939","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"primaryExporterIsAllowed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/88d96ca112cad98a44d00fdc5389647bc95702.src","preCode":"\tpublic void primaryExporterIsAllowed() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.jmx.enabled=true\")\n\t\t\t\t.withUserConfiguration(CustomMBeanExporter.class).run((context) -> {\n\t\t\t\t\tassertThat(context).getBeans(MBeanExporter.class).hasSize(2);\n\t\t\t\t\tassertThat(context.getBean(MBeanExporter.class)).isSameAs(context.getBean(\"myMBeanExporter\"));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/integration/IntegrationAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
