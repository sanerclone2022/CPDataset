[{"authorTime":"2019-06-27 06:40:09","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":9,"curCode":"\tvoid tomcatAdditionalConnectors() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tConnector[] connectors = new Connector[4];\n\t\tArrays.setAll(connectors, (i) -> new Connector());\n\t\tfactory.addAdditionalTomcatConnectors(connectors);\n\t\tthis.webServer = factory.getWebServer();\n\t\tMap<Service, Connector[]> connectorsByService = ((TomcatWebServer) this.webServer).getServiceConnectors();\n\t\tassertThat(connectorsByService.values().iterator().next().length).isEqualTo(connectors.length + 1);\n\t}\n","date":"2019-06-07 19:25:54","endLine":228,"groupId":"14333","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatAdditionalConnectors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/88/87e1c6c34af0369ec64d0f0d0b57de4bfc8798.src","preCode":"\tvoid tomcatAdditionalConnectors() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tConnector[] connectors = new Connector[4];\n\t\tArrays.setAll(connectors, (i) -> new Connector());\n\t\tfactory.addAdditionalTomcatConnectors(connectors);\n\t\tthis.webServer = factory.getWebServer();\n\t\tMap<Service, Connector[]> connectorsByService = ((TomcatWebServer) this.webServer).getServiceConnectors();\n\t\tassertThat(connectorsByService.values().iterator().next().length).isEqualTo(connectors.length + 1);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"NB"},{"authorDate":"2019-06-27 06:40:09","commitOrder":9,"curCode":"\tvoid tomcatAdditionalConnectors() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tConnector[] connectors = new Connector[4];\n\t\tArrays.setAll(connectors, (i) -> new Connector());\n\t\tfactory.addAdditionalTomcatConnectors(connectors);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tMap<Service, Connector[]> connectorsByService = ((TomcatWebServer) this.webServer).getServiceConnectors();\n\t\tassertThat(connectorsByService.values().iterator().next().length).isEqualTo(connectors.length + 1);\n\t}\n","date":"2019-06-27 06:42:13","endLine":189,"groupId":"10288","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"tomcatAdditionalConnectors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/84/a04166bec195aa619f87b803befa5597018f26.src","preCode":"\tvoid tomcatAdditionalConnectors() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tConnector[] connectors = new Connector[4];\n\t\tArrays.setAll(connectors, (i) -> new Connector());\n\t\tfactory.addAdditionalTomcatConnectors(connectors);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tMap<Service, Connector[]> connectorsByService = ((TomcatWebServer) this.webServer).getServiceConnectors();\n\t\tassertThat(connectorsByService.values().iterator().next().length).isEqualTo(connectors.length + 1);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"B"}],"commitId":"8730f32a78b9d8e6abbf099ed042d7e0257b2213","commitMessage":"@@@Merge pull request #17323 from htztomic\n\n* pr/17323:\n  Provide ability to add additional connectors on reactive Tomcat\n\nCloses gh-17323\n","date":"2019-06-27 06:42:13","modifiedFileCount":"2","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-08-17 12:39:51","codes":[{"authorDate":"2019-08-17 12:39:51","commitOrder":10,"curCode":"\tvoid tomcatAdditionalConnectors() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tConnector[] connectors = new Connector[4];\n\t\tArrays.setAll(connectors, (i) -> new Connector());\n\t\tfactory.addAdditionalTomcatConnectors(connectors);\n\t\tthis.webServer = factory.getWebServer();\n\t\tMap<Service, Connector[]> connectorsByService = ((TomcatWebServer) this.webServer).getServiceConnectors();\n\t\tassertThat(connectorsByService.values().iterator().next()).hasSize(connectors.length + 1);\n\t}\n","date":"2019-08-17 12:39:52","endLine":229,"groupId":"102048","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatAdditionalConnectors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4b/9b9472090ad9f494f00b803d7e4b2fb1b679fd.src","preCode":"\tvoid tomcatAdditionalConnectors() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tConnector[] connectors = new Connector[4];\n\t\tArrays.setAll(connectors, (i) -> new Connector());\n\t\tfactory.addAdditionalTomcatConnectors(connectors);\n\t\tthis.webServer = factory.getWebServer();\n\t\tMap<Service, Connector[]> connectorsByService = ((TomcatWebServer) this.webServer).getServiceConnectors();\n\t\tassertThat(connectorsByService.values().iterator().next().length).isEqualTo(connectors.length + 1);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"},{"authorDate":"2019-08-17 12:39:51","commitOrder":10,"curCode":"\tvoid tomcatAdditionalConnectors() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tConnector[] connectors = new Connector[4];\n\t\tArrays.setAll(connectors, (i) -> new Connector());\n\t\tfactory.addAdditionalTomcatConnectors(connectors);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tMap<Service, Connector[]> connectorsByService = ((TomcatWebServer) this.webServer).getServiceConnectors();\n\t\tassertThat(connectorsByService.values().iterator().next()).hasSize(connectors.length + 1);\n\t}\n","date":"2019-08-17 12:39:52","endLine":189,"groupId":"102048","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"tomcatAdditionalConnectors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/20/0c573ea1391ac0357fcc1a95b027174242f6ce.src","preCode":"\tvoid tomcatAdditionalConnectors() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tConnector[] connectors = new Connector[4];\n\t\tArrays.setAll(connectors, (i) -> new Connector());\n\t\tfactory.addAdditionalTomcatConnectors(connectors);\n\t\tthis.webServer = factory.getWebServer(mock(HttpHandler.class));\n\t\tMap<Service, Connector[]> connectorsByService = ((TomcatWebServer) this.webServer).getServiceConnectors();\n\t\tassertThat(connectorsByService.values().iterator().next().length).isEqualTo(connectors.length + 1);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"326f68957fd98f228f992f6ba980841045c10c85","commitMessage":"@@@Merge pull request #17874 from dreis2211\n\n* pr/17874:\n  Use hasSize() assertion in favor of length checks\n\nCloses gh-17874\n","date":"2019-08-17 12:39:52","modifiedFileCount":"17","status":"M","submitter":"Stephane Nicoll"}]
