[{"authorTime":"2018-07-26 20:23:07","codes":[{"authorDate":"2018-07-28 03:23:51","commitOrder":4,"curCode":"\tpublic void toAnyEndpointShouldMatchEndpointPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/foo/zoo/\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/bar/baz\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator\");\n\t}\n","date":"2018-07-28 03:23:51","endLine":61,"groupId":"1136","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toAnyEndpointShouldMatchEndpointPath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/20/cdb11c0adbe3b2482301f70492791eba4fbf6c.src","preCode":"\tpublic void toAnyEndpointShouldMatchEndpointPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/foo/zoo/\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/bar/baz\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequestTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2018-07-26 20:23:07","commitOrder":4,"curCode":"\tpublic void toAnyEndpointWhenDispatcherServletPathProviderNotAvailableUsesEmptyPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\", null).matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\", null).matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\", null).matches(\"/actuator\");\n\t\tassertMatcher(matcher, \"/actuator\", null).doesNotMatch(\"/actuator/baz\");\n\t}\n","date":"2018-07-26 20:23:07","endLine":96,"groupId":"13158","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toAnyEndpointWhenDispatcherServletPathProviderNotAvailableUsesEmptyPath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d2/682e30ea09e5e7cd52b9eb0b93aa0bda4f8198.src","preCode":"\tpublic void toAnyEndpointWhenDispatcherServletPathProviderNotAvailableUsesEmptyPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\", null).matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\", null).matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\", null).matches(\"/actuator\");\n\t\tassertMatcher(matcher, \"/actuator\", null).doesNotMatch(\"/actuator/baz\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequestTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"NB"}],"commitId":"f2a903078878e4fa7aec6c52d393dba6bddcb069","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-07-28 03:23:51","modifiedFileCount":"3","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2018-10-16 20:31:35","codes":[{"authorDate":"2018-10-16 20:31:35","commitOrder":5,"curCode":"\tpublic void toAnyEndpointShouldMatchEndpointPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/foo/zoo/\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/bar/baz\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator\");\n\t}\n","date":"2018-10-16 20:31:35","endLine":63,"groupId":"8409","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toAnyEndpointShouldMatchEndpointPath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/3d9e60d0a671417f879bdcf9db3adfaa0155d5.src","preCode":"\tpublic void toAnyEndpointShouldMatchEndpointPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/foo/zoo/\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator/bar/baz\");\n\t\tassertMatcher(matcher, \"/actuator\", \"/\").matches(\"/actuator\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequestTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2018-10-16 20:31:35","commitOrder":5,"curCode":"\tpublic void toAnyEndpointWhenDispatcherServletPathProviderNotAvailableUsesEmptyPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator\");\n\t\tassertMatcher(matcher, \"/actuator\").doesNotMatch(\"/actuator/baz\");\n\t}\n","date":"2018-10-16 20:31:35","endLine":95,"groupId":"8409","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"toAnyEndpointWhenDispatcherServletPathProviderNotAvailableUsesEmptyPath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/3d9e60d0a671417f879bdcf9db3adfaa0155d5.src","preCode":"\tpublic void toAnyEndpointWhenDispatcherServletPathProviderNotAvailableUsesEmptyPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\", null).matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\", null).matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\", null).matches(\"/actuator\");\n\t\tassertMatcher(matcher, \"/actuator\", null).doesNotMatch(\"/actuator/baz\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequestTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"bd0a41d82de5f69f98af586cd4e61d1c2894f442","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-10-16 20:31:35","modifiedFileCount":"3","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid toAnyEndpointShouldMatchEndpointPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/foo/zoo/\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/bar/baz\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":62,"groupId":"10693","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"toAnyEndpointShouldMatchEndpointPath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bb/31be525d072a7cdc6ee15c193d1d66bf611be4.src","preCode":"\tpublic void toAnyEndpointShouldMatchEndpointPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/foo/zoo/\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/bar/baz\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequestTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid toAnyEndpointWhenDispatcherServletPathProviderNotAvailableUsesEmptyPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator\");\n\t\tassertMatcher(matcher, \"/actuator\").doesNotMatch(\"/actuator/baz\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":94,"groupId":"10693","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"toAnyEndpointWhenDispatcherServletPathProviderNotAvailableUsesEmptyPath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bb/31be525d072a7cdc6ee15c193d1d66bf611be4.src","preCode":"\tpublic void toAnyEndpointWhenDispatcherServletPathProviderNotAvailableUsesEmptyPath() {\n\t\tRequestMatcher matcher = EndpointRequest.toAnyEndpoint();\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/foo\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator/bar\");\n\t\tassertMatcher(matcher, \"/actuator\").matches(\"/actuator\");\n\t\tassertMatcher(matcher, \"/actuator\").doesNotMatch(\"/actuator/baz\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequestTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
