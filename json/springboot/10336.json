[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void sensitiveKeysHaveTheirValuesSanitized() {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"dbPassword=123456\", \"apiKey=123456\", \"mySecret=123456\",\n\t\t\t\t\t\t\"myCredentials=123456\", \"VCAP_SERVICES=123456\")\n\t\t\t\t.applyToSystemProperties(() -> {\n\t\t\t\t\tEnvironmentDescriptor descriptor = new EnvironmentEndpoint(\n\t\t\t\t\t\t\tnew StandardEnvironment()).environment(null);\n\t\t\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(\n\t\t\t\t\t\t\tdescriptor).get(\"systemProperties\").getProperties();\n\t\t\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"mySecret\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"myCredentials\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"VCAP_SERVICES\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":117,"groupId":"14812","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sensitiveKeysHaveTheirValuesSanitized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2d/1a3a7ab716190b919c929596276cc3cf43eb0b.src","preCode":"\tpublic void sensitiveKeysHaveTheirValuesSanitized() {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"dbPassword=123456\", \"apiKey=123456\", \"mySecret=123456\",\n\t\t\t\t\t\t\"myCredentials=123456\", \"VCAP_SERVICES=123456\")\n\t\t\t\t.applyToSystemProperties(() -> {\n\t\t\t\t\tEnvironmentDescriptor descriptor = new EnvironmentEndpoint(\n\t\t\t\t\t\t\tnew StandardEnvironment()).environment(null);\n\t\t\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(\n\t\t\t\t\t\t\tdescriptor).get(\"systemProperties\").getProperties();\n\t\t\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"mySecret\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"myCredentials\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"VCAP_SERVICES\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/env/EnvironmentEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void sensitiveKeysMatchingCustomPatternHaveTheirValuesSanitized() {\n\t\tTestPropertyValues.of(\"dbPassword=123456\", \"apiKey=123456\")\n\t\t\t\t.applyToSystemProperties(() -> {\n\t\t\t\t\tEnvironmentEndpoint endpoint = new EnvironmentEndpoint(\n\t\t\t\t\t\t\tnew StandardEnvironment());\n\t\t\t\t\tendpoint.setKeysToSanitize(\".*pass.*\");\n\t\t\t\t\tEnvironmentDescriptor descriptor = endpoint.environment(null);\n\t\t\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(\n\t\t\t\t\t\t\tdescriptor).get(\"systemProperties\").getProperties();\n\t\t\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"123456\");\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":178,"groupId":"13881","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sensitiveKeysMatchingCustomPatternHaveTheirValuesSanitized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2d/1a3a7ab716190b919c929596276cc3cf43eb0b.src","preCode":"\tpublic void sensitiveKeysMatchingCustomPatternHaveTheirValuesSanitized() {\n\t\tTestPropertyValues.of(\"dbPassword=123456\", \"apiKey=123456\")\n\t\t\t\t.applyToSystemProperties(() -> {\n\t\t\t\t\tEnvironmentEndpoint endpoint = new EnvironmentEndpoint(\n\t\t\t\t\t\t\tnew StandardEnvironment());\n\t\t\t\t\tendpoint.setKeysToSanitize(\".*pass.*\");\n\t\t\t\t\tEnvironmentDescriptor descriptor = endpoint.environment(null);\n\t\t\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(\n\t\t\t\t\t\t\tdescriptor).get(\"systemProperties\").getProperties();\n\t\t\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"123456\");\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/env/EnvironmentEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2018-04-10 00:59:53","commitOrder":2,"curCode":"\tpublic void sensitiveKeysHaveTheirValuesSanitized() {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"dbPassword=123456\", \"apiKey=123456\", \"mySecret=123456\",\n\t\t\t\t\t\t\"myCredentials=123456\", \"VCAP_SERVICES=123456\")\n\t\t\t\t.applyToSystemProperties(() -> {\n\t\t\t\t\tEnvironmentDescriptor descriptor = new EnvironmentEndpoint(\n\t\t\t\t\t\t\tnew StandardEnvironment()).environment(null);\n\t\t\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(\n\t\t\t\t\t\t\tdescriptor).get(\"systemProperties\").getProperties();\n\t\t\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"mySecret\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"myCredentials\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"VCAP_SERVICES\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tPropertyValueDescriptor command = systemProperties\n\t\t\t\t\t\t\t.get(\"sun.java.command\");\n\t\t\t\t\tif (command != null) {\n\t\t\t\t\t\tassertThat(command.getValue()).isEqualTo(\"******\");\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t}\n","date":"2018-04-10 00:59:53","endLine":122,"groupId":"14812","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sensitiveKeysHaveTheirValuesSanitized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c1/85ec1404288cee87c7484b352d20190fd97d7a.src","preCode":"\tpublic void sensitiveKeysHaveTheirValuesSanitized() {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"dbPassword=123456\", \"apiKey=123456\", \"mySecret=123456\",\n\t\t\t\t\t\t\"myCredentials=123456\", \"VCAP_SERVICES=123456\")\n\t\t\t\t.applyToSystemProperties(() -> {\n\t\t\t\t\tEnvironmentDescriptor descriptor = new EnvironmentEndpoint(\n\t\t\t\t\t\t\tnew StandardEnvironment()).environment(null);\n\t\t\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(\n\t\t\t\t\t\t\tdescriptor).get(\"systemProperties\").getProperties();\n\t\t\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"mySecret\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"myCredentials\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"VCAP_SERVICES\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/env/EnvironmentEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tpublic void sensitiveKeysMatchingCustomPatternHaveTheirValuesSanitized() {\n\t\tTestPropertyValues.of(\"dbPassword=123456\", \"apiKey=123456\")\n\t\t\t\t.applyToSystemProperties(() -> {\n\t\t\t\t\tEnvironmentEndpoint endpoint = new EnvironmentEndpoint(\n\t\t\t\t\t\t\tnew StandardEnvironment());\n\t\t\t\t\tendpoint.setKeysToSanitize(\".*pass.*\");\n\t\t\t\t\tEnvironmentDescriptor descriptor = endpoint.environment(null);\n\t\t\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(\n\t\t\t\t\t\t\tdescriptor).get(\"systemProperties\").getProperties();\n\t\t\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"123456\");\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":178,"groupId":"13881","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sensitiveKeysMatchingCustomPatternHaveTheirValuesSanitized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2d/1a3a7ab716190b919c929596276cc3cf43eb0b.src","preCode":"\tpublic void sensitiveKeysMatchingCustomPatternHaveTheirValuesSanitized() {\n\t\tTestPropertyValues.of(\"dbPassword=123456\", \"apiKey=123456\")\n\t\t\t\t.applyToSystemProperties(() -> {\n\t\t\t\t\tEnvironmentEndpoint endpoint = new EnvironmentEndpoint(\n\t\t\t\t\t\t\tnew StandardEnvironment());\n\t\t\t\t\tendpoint.setKeysToSanitize(\".*pass.*\");\n\t\t\t\t\tEnvironmentDescriptor descriptor = endpoint.environment(null);\n\t\t\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(\n\t\t\t\t\t\t\tdescriptor).get(\"systemProperties\").getProperties();\n\t\t\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue())\n\t\t\t\t\t\t\t.isEqualTo(\"123456\");\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/env/EnvironmentEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"N"}],"commitId":"8d5b9f37d5f5daf14bf38866047fb006c789e3dd","commitMessage":"@@@Merge branch '1.5.x'\n","date":"2018-04-10 00:59:53","modifiedFileCount":"3","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid sensitiveKeysHaveTheirValuesSanitized() {\n\t\tTestPropertyValues.of(\"dbPassword=123456\", \"apiKey=123456\", \"mySecret=123456\", \"myCredentials=123456\",\n\t\t\t\t\"VCAP_SERVICES=123456\").applyToSystemProperties(() -> {\n\t\t\t\t\tEnvironmentDescriptor descriptor = new EnvironmentEndpoint(new StandardEnvironment())\n\t\t\t\t\t\t\t.environment(null);\n\t\t\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(descriptor)\n\t\t\t\t\t\t\t.get(\"systemProperties\").getProperties();\n\t\t\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue()).isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue()).isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"mySecret\").getValue()).isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"myCredentials\").getValue()).isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"VCAP_SERVICES\").getValue()).isEqualTo(\"******\");\n\t\t\t\t\tPropertyValueDescriptor command = systemProperties.get(\"sun.java.command\");\n\t\t\t\t\tif (command != null) {\n\t\t\t\t\t\tassertThat(command.getValue()).isEqualTo(\"******\");\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":106,"groupId":"10336","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"sensitiveKeysHaveTheirValuesSanitized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/91/17649fb0343e2860e8d3025f67fd792912199c.src","preCode":"\tpublic void sensitiveKeysHaveTheirValuesSanitized() {\n\t\tTestPropertyValues.of(\"dbPassword=123456\", \"apiKey=123456\", \"mySecret=123456\", \"myCredentials=123456\",\n\t\t\t\t\"VCAP_SERVICES=123456\").applyToSystemProperties(() -> {\n\t\t\t\t\tEnvironmentDescriptor descriptor = new EnvironmentEndpoint(new StandardEnvironment())\n\t\t\t\t\t\t\t.environment(null);\n\t\t\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(descriptor)\n\t\t\t\t\t\t\t.get(\"systemProperties\").getProperties();\n\t\t\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue()).isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue()).isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"mySecret\").getValue()).isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"myCredentials\").getValue()).isEqualTo(\"******\");\n\t\t\t\t\tassertThat(systemProperties.get(\"VCAP_SERVICES\").getValue()).isEqualTo(\"******\");\n\t\t\t\t\tPropertyValueDescriptor command = systemProperties.get(\"sun.java.command\");\n\t\t\t\t\tif (command != null) {\n\t\t\t\t\t\tassertThat(command.getValue()).isEqualTo(\"******\");\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/env/EnvironmentEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid sensitiveKeysMatchingCustomPatternHaveTheirValuesSanitized() {\n\t\tTestPropertyValues.of(\"dbPassword=123456\", \"apiKey=123456\").applyToSystemProperties(() -> {\n\t\t\tEnvironmentEndpoint endpoint = new EnvironmentEndpoint(new StandardEnvironment());\n\t\t\tendpoint.setKeysToSanitize(\".*pass.*\");\n\t\t\tEnvironmentDescriptor descriptor = endpoint.environment(null);\n\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(descriptor).get(\"systemProperties\")\n\t\t\t\t\t.getProperties();\n\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue()).isEqualTo(\"******\");\n\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue()).isEqualTo(\"123456\");\n\t\t\treturn null;\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":154,"groupId":"10336","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"sensitiveKeysMatchingCustomPatternHaveTheirValuesSanitized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/91/17649fb0343e2860e8d3025f67fd792912199c.src","preCode":"\tpublic void sensitiveKeysMatchingCustomPatternHaveTheirValuesSanitized() {\n\t\tTestPropertyValues.of(\"dbPassword=123456\", \"apiKey=123456\").applyToSystemProperties(() -> {\n\t\t\tEnvironmentEndpoint endpoint = new EnvironmentEndpoint(new StandardEnvironment());\n\t\t\tendpoint.setKeysToSanitize(\".*pass.*\");\n\t\t\tEnvironmentDescriptor descriptor = endpoint.environment(null);\n\t\t\tMap<String, PropertyValueDescriptor> systemProperties = propertySources(descriptor).get(\"systemProperties\")\n\t\t\t\t\t.getProperties();\n\t\t\tassertThat(systemProperties.get(\"dbPassword\").getValue()).isEqualTo(\"******\");\n\t\t\tassertThat(systemProperties.get(\"apiKey\").getValue()).isEqualTo(\"123456\");\n\t\t\treturn null;\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/env/EnvironmentEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
