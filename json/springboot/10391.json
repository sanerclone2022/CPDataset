[{"authorTime":"2018-02-12 18:44:28","codes":[{"authorDate":"2018-02-12 18:44:28","commitOrder":1,"curCode":"\tpublic void invokeShouldInvokeMethod() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target,\n\t\t\t\tthis.operationMethod, this.parameterValueMapper);\n\t\tObject result = invoker.invoke(\n\t\t\t\tnew InvocationContext(null, Collections.singletonMap(\"name\", \"boot\")));\n\t\tassertThat(result).isEqualTo(\"toob\");\n\t}\n","date":"2018-02-12 18:46:19","endLine":90,"groupId":"4502","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeShouldInvokeMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ba/425dfeb31e272f800a7600479c01d836d8772e.src","preCode":"\tpublic void invokeShouldInvokeMethod() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target,\n\t\t\t\tthis.operationMethod, this.parameterValueMapper);\n\t\tObject result = invoker.invoke(\n\t\t\t\tnew InvocationContext(null, Collections.singletonMap(\"name\", \"boot\")));\n\t\tassertThat(result).isEqualTo(\"toob\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoke/reflect/ReflectiveOperationInvokerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2018-02-12 18:44:28","commitOrder":1,"curCode":"\tpublic void invokeShouldResolveParameters() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target,\n\t\t\t\tthis.operationMethod, this.parameterValueMapper);\n\t\tObject result = invoker.invoke(\n\t\t\t\tnew InvocationContext(null, Collections.singletonMap(\"name\", 1234)));\n\t\tassertThat(result).isEqualTo(\"4321\");\n\t}\n","date":"2018-02-12 18:46:19","endLine":119,"groupId":"4502","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeShouldResolveParameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ba/425dfeb31e272f800a7600479c01d836d8772e.src","preCode":"\tpublic void invokeShouldResolveParameters() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target,\n\t\t\t\tthis.operationMethod, this.parameterValueMapper);\n\t\tObject result = invoker.invoke(\n\t\t\t\tnew InvocationContext(null, Collections.singletonMap(\"name\", 1234)));\n\t\tassertThat(result).isEqualTo(\"4321\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoke/reflect/ReflectiveOperationInvokerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"bc814d203937e59ba2c48318c12289fb272db4ab","commitMessage":"@@@Prevent authenticated principal from clashing with argument of same name\n\nCloses gh-11988\n","date":"2018-02-12 18:46:19","modifiedFileCount":"18","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2018-02-20 15:34:26","codes":[{"authorDate":"2018-02-20 15:34:26","commitOrder":2,"curCode":"\tpublic void invokeShouldInvokeMethod() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target,\n\t\t\t\tthis.operationMethod, this.parameterValueMapper);\n\t\tObject result = invoker.invoke(new InvocationContext(mock(SecurityContext.class),\n\t\t\t\tCollections.singletonMap(\"name\", \"boot\")));\n\t\tassertThat(result).isEqualTo(\"toob\");\n\t}\n","date":"2018-02-20 20:12:05","endLine":92,"groupId":"4382","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeShouldInvokeMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9b/b76d960af5035d4c15684c4e8a800fce35ee52.src","preCode":"\tpublic void invokeShouldInvokeMethod() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target,\n\t\t\t\tthis.operationMethod, this.parameterValueMapper);\n\t\tObject result = invoker.invoke(\n\t\t\t\tnew InvocationContext(null, Collections.singletonMap(\"name\", \"boot\")));\n\t\tassertThat(result).isEqualTo(\"toob\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoke/reflect/ReflectiveOperationInvokerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2018-02-20 15:34:26","commitOrder":2,"curCode":"\tpublic void invokeShouldResolveParameters() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target,\n\t\t\t\tthis.operationMethod, this.parameterValueMapper);\n\t\tObject result = invoker.invoke(new InvocationContext(mock(SecurityContext.class),\n\t\t\t\tCollections.singletonMap(\"name\", 1234)));\n\t\tassertThat(result).isEqualTo(\"4321\");\n\t}\n","date":"2018-02-20 20:12:05","endLine":121,"groupId":"4382","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeShouldResolveParameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9b/b76d960af5035d4c15684c4e8a800fce35ee52.src","preCode":"\tpublic void invokeShouldResolveParameters() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target,\n\t\t\t\tthis.operationMethod, this.parameterValueMapper);\n\t\tObject result = invoker.invoke(\n\t\t\t\tnew InvocationContext(null, Collections.singletonMap(\"name\", 1234)));\n\t\tassertThat(result).isEqualTo(\"4321\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoke/reflect/ReflectiveOperationInvokerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"}],"commitId":"3e4baf744ea24ffa12eafa91db3cb5d69ebbb41a","commitMessage":"@@@Use role-based security to show details in the health endpoint\n\nCloses gh-11869\n","date":"2018-02-20 20:12:05","modifiedFileCount":"23","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid invokeShouldInvokeMethod() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target, this.operationMethod,\n\t\t\t\tthis.parameterValueMapper);\n\t\tObject result = invoker\n\t\t\t\t.invoke(new InvocationContext(mock(SecurityContext.class), Collections.singletonMap(\"name\", \"boot\")));\n\t\tassertThat(result).isEqualTo(\"toob\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":86,"groupId":"10391","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeShouldInvokeMethod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/f1a9a3bb3c0257c0625ba8af873666e757a51e.src","preCode":"\tpublic void invokeShouldInvokeMethod() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target, this.operationMethod,\n\t\t\t\tthis.parameterValueMapper);\n\t\tObject result = invoker\n\t\t\t\t.invoke(new InvocationContext(mock(SecurityContext.class), Collections.singletonMap(\"name\", \"boot\")));\n\t\tassertThat(result).isEqualTo(\"toob\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoke/reflect/ReflectiveOperationInvokerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid invokeShouldResolveParameters() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target, this.operationMethod,\n\t\t\t\tthis.parameterValueMapper);\n\t\tObject result = invoker\n\t\t\t\t.invoke(new InvocationContext(mock(SecurityContext.class), Collections.singletonMap(\"name\", 1234)));\n\t\tassertThat(result).isEqualTo(\"4321\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":114,"groupId":"10391","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeShouldResolveParameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/f1a9a3bb3c0257c0625ba8af873666e757a51e.src","preCode":"\tpublic void invokeShouldResolveParameters() {\n\t\tReflectiveOperationInvoker invoker = new ReflectiveOperationInvoker(this.target, this.operationMethod,\n\t\t\t\tthis.parameterValueMapper);\n\t\tObject result = invoker\n\t\t\t\t.invoke(new InvocationContext(mock(SecurityContext.class), Collections.singletonMap(\"name\", 1234)));\n\t\tassertThat(result).isEqualTo(\"4321\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoke/reflect/ReflectiveOperationInvokerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
