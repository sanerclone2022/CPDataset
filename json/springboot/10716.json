[{"authorTime":"2018-07-13 07:54:43","codes":[{"authorDate":"2018-07-13 07:54:43","commitOrder":1,"curCode":"\tpublic void securesEverythingElse() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tint status = getResponseStatus(context, \"/actuator\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_UNAUTHORIZED);\n\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_UNAUTHORIZED);\n\t\t});\n\t}\n","date":"2018-07-14 04:35:52","endLine":86,"groupId":"9818","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"securesEverythingElse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8a/853bc742618eca4d733f0397b19370b8c540ee.src","preCode":"\tpublic void securesEverythingElse() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tint status = getResponseStatus(context, \"/actuator\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_UNAUTHORIZED);\n\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_UNAUTHORIZED);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/ManagementWebSecurityAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"},{"authorDate":"2018-07-13 07:54:43","commitOrder":1,"curCode":"\tpublic void backOffIfCustomSecurityIsAdded() {\n\t\tthis.contextRunner.withUserConfiguration(CustomSecurityConfiguration.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tint status = getResponseStatus(context, \"/actuator/health\");\n\t\t\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_UNAUTHORIZED);\n\t\t\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_OK);\n\t\t\t\t});\n\t}\n","date":"2018-07-14 04:35:52","endLine":106,"groupId":"63","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"backOffIfCustomSecurityIsAdded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8a/853bc742618eca4d733f0397b19370b8c540ee.src","preCode":"\tpublic void backOffIfCustomSecurityIsAdded() {\n\t\tthis.contextRunner.withUserConfiguration(CustomSecurityConfiguration.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tint status = getResponseStatus(context, \"/actuator/health\");\n\t\t\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_UNAUTHORIZED);\n\t\t\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_OK);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/ManagementWebSecurityAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"}],"commitId":"d1b85584308cc615a5a3e68be69130b3199fdd14","commitMessage":"@@@Make /health and /info insecure by default\n\nCloses gh-13722\n","date":"2018-07-14 04:35:52","modifiedFileCount":"2","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2018-12-03 21:01:56","codes":[{"authorDate":"2018-12-03 21:01:56","commitOrder":2,"curCode":"\tpublic void securesEverythingElse() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tHttpStatus status = getResponseStatus(context, \"/actuator\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t\t});\n\t}\n","date":"2018-12-03 21:01:56","endLine":87,"groupId":"9818","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"securesEverythingElse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4d/13263971080e551fdefcc325b3fc8a6124a0a8.src","preCode":"\tpublic void securesEverythingElse() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tint status = getResponseStatus(context, \"/actuator\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_UNAUTHORIZED);\n\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_UNAUTHORIZED);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/ManagementWebSecurityAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2018-12-03 21:01:56","commitOrder":2,"curCode":"\tpublic void backOffIfCustomSecurityIsAdded() {\n\t\tthis.contextRunner.withUserConfiguration(CustomSecurityConfiguration.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tHttpStatus status = getResponseStatus(context, \"/actuator/health\");\n\t\t\t\t\tassertThat(status).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t\t\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\t\t\tassertThat(status).isEqualTo(HttpStatus.OK);\n\t\t\t\t});\n\t}\n","date":"2018-12-03 21:01:56","endLine":107,"groupId":"2842","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"backOffIfCustomSecurityIsAdded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4d/13263971080e551fdefcc325b3fc8a6124a0a8.src","preCode":"\tpublic void backOffIfCustomSecurityIsAdded() {\n\t\tthis.contextRunner.withUserConfiguration(CustomSecurityConfiguration.class)\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tint status = getResponseStatus(context, \"/actuator/health\");\n\t\t\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_UNAUTHORIZED);\n\t\t\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\t\t\tassertThat(status).isEqualTo(HttpStatus.SC_OK);\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/ManagementWebSecurityAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"0f474ec08f382a957aaea1ea2ba002ab4b58cb27","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2018-12-03 21:01:56","modifiedFileCount":"1","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid securesEverythingElse() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tHttpStatus status = getResponseStatus(context, \"/actuator\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":84,"groupId":"10716","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"securesEverythingElse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/27/4cb8ff9c2cf1e4e3566e2026b2baa9adf0a6ea.src","preCode":"\tpublic void securesEverythingElse() {\n\t\tthis.contextRunner.run((context) -> {\n\t\t\tHttpStatus status = getResponseStatus(context, \"/actuator\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/ManagementWebSecurityAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid backOffIfCustomSecurityIsAdded() {\n\t\tthis.contextRunner.withUserConfiguration(CustomSecurityConfiguration.class).run((context) -> {\n\t\t\tHttpStatus status = getResponseStatus(context, \"/actuator/health\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.OK);\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":102,"groupId":"10716","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"backOffIfCustomSecurityIsAdded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/27/4cb8ff9c2cf1e4e3566e2026b2baa9adf0a6ea.src","preCode":"\tpublic void backOffIfCustomSecurityIsAdded() {\n\t\tthis.contextRunner.withUserConfiguration(CustomSecurityConfiguration.class).run((context) -> {\n\t\t\tHttpStatus status = getResponseStatus(context, \"/actuator/health\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t\t\tstatus = getResponseStatus(context, \"/foo\");\n\t\t\tassertThat(status).isEqualTo(HttpStatus.OK);\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/ManagementWebSecurityAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
