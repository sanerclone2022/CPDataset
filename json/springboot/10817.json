[{"authorTime":"2021-02-10 03:36:29","codes":[{"authorDate":"2021-02-10 03:36:29","commitOrder":3,"curCode":"\tvoid linksPageIsNotAvailableWhenDisabled() {\n\t\tgetContextRunner(new Class[] { EndpointsConfiguration.class, ResourceConfigConfiguration.class })\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.discovery.enabled:false\").run((context) -> {\n\t\t\t\t\tint port = context\n\t\t\t\t\t\t\t.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t\t\t.getWebServer().getPort();\n\t\t\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port).build();\n\t\t\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isNotFound();\n\t\t\t\t});\n\t}\n","date":"2021-02-10 03:36:29","endLine":63,"groupId":"15335","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"linksPageIsNotAvailableWhenDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b2/75a6729ce028c0ae97fbcc21aec18668c41e0e.src","preCode":"\tvoid linksPageIsNotAvailableWhenDisabled() {\n\t\tgetContextRunner(new Class[] { EndpointsConfiguration.class, ResourceConfigConfiguration.class })\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.discovery.enabled:false\").run((context) -> {\n\t\t\t\t\tint port = context\n\t\t\t\t\t\t\t.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t\t\t.getWebServer().getPort();\n\t\t\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port).build();\n\t\t\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isNotFound();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JerseyEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2021-02-10 03:36:29","commitOrder":3,"curCode":"\tprotected void testJerseyEndpoints(Class<?>[] userConfigurations) {\n\t\tgetContextRunner(userConfigurations).run((context) -> {\n\t\t\tint port = context.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t.getWebServer().getPort();\n\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port).build();\n\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isOk().expectBody().jsonPath(\"_links.beans\")\n\t\t\t\t\t.isNotEmpty().jsonPath(\"_links.restcontroller\").doesNotExist().jsonPath(\"_links.controller\")\n\t\t\t\t\t.doesNotExist();\n\t\t});\n\t}\n","date":"2021-02-10 03:36:29","endLine":79,"groupId":"15335","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJerseyEndpoints","params":"(Class<?>[]userConfigurations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b2/75a6729ce028c0ae97fbcc21aec18668c41e0e.src","preCode":"\tprotected void testJerseyEndpoints(Class<?>[] userConfigurations) {\n\t\tgetContextRunner(userConfigurations).run((context) -> {\n\t\t\tint port = context.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t.getWebServer().getPort();\n\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port).build();\n\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isOk().expectBody().jsonPath(\"_links.beans\")\n\t\t\t\t\t.isNotEmpty().jsonPath(\"_links.restcontroller\").doesNotExist().jsonPath(\"_links.controller\")\n\t\t\t\t\t.doesNotExist();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JerseyEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"MB"}],"commitId":"c05cb21ab7839048432b9b0616500d921843c21e","commitMessage":"@@@Add a property to disable the `/actuator` discovery page\n\nCloses gh-24693\n","date":"2021-02-10 03:36:29","modifiedFileCount":"7","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2021-02-10 03:36:29","codes":[{"authorDate":"2021-02-10 06:15:08","commitOrder":4,"curCode":"\tvoid linksPageIsNotAvailableWhenDisabled() {\n\t\tgetContextRunner(new Class<?>[] { EndpointsConfiguration.class, ResourceConfigConfiguration.class })\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.discovery.enabled:false\").run((context) -> {\n\t\t\t\t\tint port = context\n\t\t\t\t\t\t\t.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t\t\t.getWebServer().getPort();\n\t\t\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port).build();\n\t\t\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isNotFound();\n\t\t\t\t});\n\t}\n","date":"2021-02-10 06:15:08","endLine":63,"groupId":"15335","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"linksPageIsNotAvailableWhenDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b2/0f9310875d4092b0a8cc51f55b9b9ee2b95170.src","preCode":"\tvoid linksPageIsNotAvailableWhenDisabled() {\n\t\tgetContextRunner(new Class[] { EndpointsConfiguration.class, ResourceConfigConfiguration.class })\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.discovery.enabled:false\").run((context) -> {\n\t\t\t\t\tint port = context\n\t\t\t\t\t\t\t.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t\t\t.getWebServer().getPort();\n\t\t\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port).build();\n\t\t\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isNotFound();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JerseyEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2021-02-10 03:36:29","commitOrder":4,"curCode":"\tprotected void testJerseyEndpoints(Class<?>[] userConfigurations) {\n\t\tgetContextRunner(userConfigurations).run((context) -> {\n\t\t\tint port = context.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t.getWebServer().getPort();\n\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port).build();\n\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isOk().expectBody().jsonPath(\"_links.beans\")\n\t\t\t\t\t.isNotEmpty().jsonPath(\"_links.restcontroller\").doesNotExist().jsonPath(\"_links.controller\")\n\t\t\t\t\t.doesNotExist();\n\t\t});\n\t}\n","date":"2021-02-10 03:36:29","endLine":79,"groupId":"15335","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testJerseyEndpoints","params":"(Class<?>[]userConfigurations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b2/75a6729ce028c0ae97fbcc21aec18668c41e0e.src","preCode":"\tprotected void testJerseyEndpoints(Class<?>[] userConfigurations) {\n\t\tgetContextRunner(userConfigurations).run((context) -> {\n\t\t\tint port = context.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t.getWebServer().getPort();\n\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port).build();\n\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isOk().expectBody().jsonPath(\"_links.beans\")\n\t\t\t\t\t.isNotEmpty().jsonPath(\"_links.restcontroller\").doesNotExist().jsonPath(\"_links.controller\")\n\t\t\t\t\t.doesNotExist();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JerseyEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"N"}],"commitId":"301e80be8c4da73dd734d93f915088de4997c88c","commitMessage":"@@@Fix raw types error\n","date":"2021-02-10 06:15:08","modifiedFileCount":"1","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2021-07-23 20:09:37","codes":[{"authorDate":"2021-07-23 20:09:37","commitOrder":5,"curCode":"\tvoid linksPageIsNotAvailableWhenDisabled() {\n\t\tgetContextRunner(new Class<?>[] { EndpointsConfiguration.class, ResourceConfigConfiguration.class })\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.discovery.enabled:false\").run((context) -> {\n\t\t\t\t\tint port = context\n\t\t\t\t\t\t\t.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t\t\t.getWebServer().getPort();\n\t\t\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port)\n\t\t\t\t\t\t\t.responseTimeout(Duration.ofMinutes(5)).build();\n\t\t\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isNotFound();\n\t\t\t\t});\n\t}\n","date":"2021-07-23 20:09:37","endLine":71,"groupId":"10817","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"linksPageIsNotAvailableWhenDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c6/0196cebfde659e10faf5bc8045e1071992b129.src","preCode":"\tvoid linksPageIsNotAvailableWhenDisabled() {\n\t\tgetContextRunner(new Class<?>[] { EndpointsConfiguration.class, ResourceConfigConfiguration.class })\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.discovery.enabled:false\").run((context) -> {\n\t\t\t\t\tint port = context\n\t\t\t\t\t\t\t.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t\t\t.getWebServer().getPort();\n\t\t\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port).build();\n\t\t\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isNotFound();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JerseyEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2021-07-23 20:09:37","commitOrder":5,"curCode":"\tprotected void testJerseyEndpoints(Class<?>[] userConfigurations) {\n\t\tgetContextRunner(userConfigurations).run((context) -> {\n\t\t\tint port = context.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t.getWebServer().getPort();\n\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port)\n\t\t\t\t\t.responseTimeout(Duration.ofMinutes(5)).build();\n\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isOk().expectBody().jsonPath(\"_links.beans\")\n\t\t\t\t\t.isNotEmpty().jsonPath(\"_links.restcontroller\").doesNotExist().jsonPath(\"_links.controller\")\n\t\t\t\t\t.doesNotExist();\n\t\t});\n\t}\n","date":"2021-07-23 20:09:37","endLine":103,"groupId":"10817","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testJerseyEndpoints","params":"(Class<?>[]userConfigurations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c6/0196cebfde659e10faf5bc8045e1071992b129.src","preCode":"\tprotected void testJerseyEndpoints(Class<?>[] userConfigurations) {\n\t\tgetContextRunner(userConfigurations).run((context) -> {\n\t\t\tint port = context.getSourceApplicationContext(AnnotationConfigServletWebServerApplicationContext.class)\n\t\t\t\t\t.getWebServer().getPort();\n\t\t\tWebTestClient client = WebTestClient.bindToServer().baseUrl(\"http://localhost:\" + port).build();\n\t\t\tclient.get().uri(\"/actuator\").exchange().expectStatus().isOk().expectBody().jsonPath(\"_links.beans\")\n\t\t\t\t\t.isNotEmpty().jsonPath(\"_links.restcontroller\").doesNotExist().jsonPath(\"_links.controller\")\n\t\t\t\t\t.doesNotExist();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JerseyEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"355226c21e06f7957975764d8fdc60d2ca269c29","commitMessage":"@@@Merge branch '2.5.x'\n\nCloses gh-27474\n","date":"2021-07-23 20:09:37","modifiedFileCount":"13","status":"M","submitter":"Andy Wilkinson"}]
