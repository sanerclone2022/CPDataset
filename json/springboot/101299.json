[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void mapFromStringShouldReturnBestGuess() throws Exception {\n\t\tassertThat(namesFromString(\"SERVER\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).containsExactly(\"s-erver\");\n\t\tassertThat(namesFromString(\"SERVERS__\", \"1,2,3\")).containsExactly(\"servers[0]\",\n\t\t\t\t\"servers[1]\", \"servers[2]\");\n\t\tassertThat(namesFromString(\"SERVERS_0__\", \"1,2,3\"))\n\t\t\t\t.containsExactly(\"servers[0][0]\", \"servers[0][1]\", \"servers[0][2]\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":57,"groupId":"13700","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8c/e18f1992dda81dfb3ef8bad9a34b6540f1a37b.src","preCode":"\tpublic void mapFromStringShouldReturnBestGuess() throws Exception {\n\t\tassertThat(namesFromString(\"SERVER\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).containsExactly(\"s-erver\");\n\t\tassertThat(namesFromString(\"SERVERS__\", \"1,2,3\")).containsExactly(\"servers[0]\",\n\t\t\t\t\"servers[1]\", \"servers[2]\");\n\t\tassertThat(namesFromString(\"SERVERS_0__\", \"1,2,3\"))\n\t\t\t\t.containsExactly(\"servers[0][0]\", \"servers[0][1]\", \"servers[0][2]\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SystemEnvironmentPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void mapFromStringShouldReturnBestGuess() throws Exception {\n\t\tassertThat(namesFromString(\"server\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\"))\n\t\t\t\t.containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":50,"groupId":"14637","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/81/54ee8e14aae78944d35a61a14a589fca68767f.src","preCode":"\tpublic void mapFromStringShouldReturnBestGuess() throws Exception {\n\t\tassertThat(namesFromString(\"server\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\"))\n\t\t\t\t.containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/DefaultPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"SERVER\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).containsExactly(\"s-erver\");\n\t\tassertThat(namesFromString(\"SERVERS__\", \"1,2,3\")).containsExactly(\"servers[0]\",\n\t\t\t\t\"servers[1]\", \"servers[2]\");\n\t\tassertThat(namesFromString(\"SERVERS_0__\", \"1,2,3\"))\n\t\t\t\t.containsExactly(\"servers[0][0]\", \"servers[0][1]\", \"servers[0][2]\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":57,"groupId":"13700","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a9/9ddab42e806996aa90fe7d505adf7789f744f0.src","preCode":"\tpublic void mapFromStringShouldReturnBestGuess() throws Exception {\n\t\tassertThat(namesFromString(\"SERVER\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).containsExactly(\"s-erver\");\n\t\tassertThat(namesFromString(\"SERVERS__\", \"1,2,3\")).containsExactly(\"servers[0]\",\n\t\t\t\t\"servers[1]\", \"servers[2]\");\n\t\tassertThat(namesFromString(\"SERVERS_0__\", \"1,2,3\"))\n\t\t\t\t.containsExactly(\"servers[0][0]\", \"servers[0][1]\", \"servers[0][2]\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SystemEnvironmentPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"server\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\"))\n\t\t\t\t.containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":50,"groupId":"14637","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7a/9e7b4e9b84a82969554c30cb31592e1a7800f6.src","preCode":"\tpublic void mapFromStringShouldReturnBestGuess() throws Exception {\n\t\tassertThat(namesFromString(\"server\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\"))\n\t\t\t\t.containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/DefaultPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-23 04:15:12","commitOrder":3,"curCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"SERVER\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).containsExactly(\"s-erver\");\n\t}\n","date":"2017-12-23 04:15:12","endLine":47,"groupId":"13700","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5e/52530473a3e39e46a7f86330f73cf9c1deeb57.src","preCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"SERVER\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).containsExactly(\"s-erver\");\n\t\tassertThat(namesFromString(\"SERVERS__\", \"1,2,3\")).containsExactly(\"servers[0]\",\n\t\t\t\t\"servers[1]\", \"servers[2]\");\n\t\tassertThat(namesFromString(\"SERVERS_0__\", \"1,2,3\"))\n\t\t\t\t.containsExactly(\"servers[0][0]\", \"servers[0][1]\", \"servers[0][2]\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SystemEnvironmentPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"server\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\"))\n\t\t\t\t.containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":50,"groupId":"14637","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7a/9e7b4e9b84a82969554c30cb31592e1a7800f6.src","preCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"server\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\"))\n\t\t\t\t.containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/DefaultPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"N"}],"commitId":"c024313141ce4be61151e220e7acbbf469c1d283","commitMessage":"@@@Drop environment variable \"__\" list support\n\nRemove support for the `__` environment variable list shortcut in order\nto reduce complexity. The shortcut was developed before the new `Binder`\ncode was fully formed and isn't really necessary now since comma-lists\ncan be converted automatically.\n\nFixes gh-11410\n","date":"2017-12-23 04:15:12","modifiedFileCount":"11","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-03-06 22:38:17","codes":[{"authorDate":"2019-03-06 22:38:17","commitOrder":4,"curCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"SERVER\")).toIterable().containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).toIterable()\n\t\t\t\t.containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).toIterable().containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).toIterable()\n\t\t\t\t.containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).toIterable()\n\t\t\t\t.containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).toIterable()\n\t\t\t\t.containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).toIterable().containsExactly(\"s-erver\");\n\t}\n","date":"2019-03-06 22:38:17","endLine":49,"groupId":"12701","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/48/9bc1797c02329ab6887551d5f0af3624369783.src","preCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"SERVER\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).containsExactly(\"s-erver\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SystemEnvironmentPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2019-03-06 22:38:17","commitOrder":4,"curCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"server\")).toIterable().containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).toIterable()\n\t\t\t\t.containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).toIterable().containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).toIterable()\n\t\t\t\t.containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).toIterable()\n\t\t\t\t.containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).toIterable()\n\t\t\t\t.containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).toIterable()\n\t\t\t\t.containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).toIterable()\n\t\t\t\t.containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).toIterable()\n\t\t\t\t.containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\")).toIterable()\n\t\t\t\t.containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).toIterable()\n\t\t\t\t.containsExactly(\"host[FOO].name\");\n\t}\n","date":"2019-03-06 22:38:17","endLine":58,"groupId":"12701","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/da/e75cbbe3067e461815eece50759b1ec75f55e2.src","preCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"server\")).containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\"))\n\t\t\t\t.containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/DefaultPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"87d696d6971c8bbd28be4fa885f9cf5719309c99","commitMessage":"@@@Align with breaking API change in AssertJ 3.12\n\nCloses gh-16145\n","date":"2019-03-06 22:38:17","modifiedFileCount":"9","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"SERVER\")).toIterable().containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).toIterable().containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).toIterable().containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).toIterable().containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).toIterable().containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).toIterable().containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).toIterable().containsExactly(\"s-erver\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":45,"groupId":"12701","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/64/f03abaac80522b4d09ce0248673c801a685623.src","preCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"SERVER\")).toIterable().containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).toIterable().containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).toIterable().containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).toIterable().containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).toIterable().containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).toIterable().containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).toIterable().containsExactly(\"s-erver\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SystemEnvironmentPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"server\")).toIterable().containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).toIterable().containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).toIterable().containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).toIterable().containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).toIterable().containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).toIterable().containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).toIterable().containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).toIterable().containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).toIterable().containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\")).toIterable().containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).toIterable().containsExactly(\"host[FOO].name\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":49,"groupId":"12701","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3e/e430b52275acf2758ebb95f1c1f2a700328288.src","preCode":"\tpublic void mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"server\")).toIterable().containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).toIterable().containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).toIterable().containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).toIterable().containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).toIterable().containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).toIterable().containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).toIterable().containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).toIterable().containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).toIterable().containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\")).toIterable().containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).toIterable().containsExactly(\"host[FOO].name\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/DefaultPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-05-05 13:40:48","codes":[{"authorDate":"2020-05-05 13:40:48","commitOrder":6,"curCode":"\tvoid mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(mapPropertySourceName(\"SERVER\")).isEqualTo(\"server\");\n\t\tassertThat(mapPropertySourceName(\"SERVER_PORT\")).isEqualTo(\"server.port\");\n\t\tassertThat(mapPropertySourceName(\"HOST_0\")).isEqualTo(\"host[0]\");\n\t\tassertThat(mapPropertySourceName(\"HOST_0_1\")).isEqualTo(\"host[0][1]\");\n\t\tassertThat(mapPropertySourceName(\"HOST_0_NAME\")).isEqualTo(\"host[0].name\");\n\t\tassertThat(mapPropertySourceName(\"HOST_F00_NAME\")).isEqualTo(\"host.f00.name\");\n\t\tassertThat(mapPropertySourceName(\"S-ERVER\")).isEqualTo(\"s-erver\");\n\t}\n","date":"2020-05-08 06:22:24","endLine":45,"groupId":"101299","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ee/33af9c0c1ed3f40c2763826f020beed64e46da.src","preCode":"\tvoid mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"SERVER\")).toIterable().containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"SERVER_PORT\")).toIterable().containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"HOST_0\")).toIterable().containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"HOST_0_1\")).toIterable().containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"HOST_0_NAME\")).toIterable().containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"HOST_F00_NAME\")).toIterable().containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"S-ERVER\")).toIterable().containsExactly(\"s-erver\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SystemEnvironmentPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2020-05-05 13:40:48","commitOrder":6,"curCode":"\tvoid mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(mapPropertySourceName(\"server\")).isEqualTo(\"server\");\n\t\tassertThat(mapPropertySourceName(\"server.port\")).isEqualTo(\"server.port\");\n\t\tassertThat(mapPropertySourceName(\"host[0]\")).isEqualTo(\"host[0]\");\n\t\tassertThat(mapPropertySourceName(\"host[0][1]\")).isEqualTo(\"host[0][1]\");\n\t\tassertThat(mapPropertySourceName(\"host[0].name\")).isEqualTo(\"host[0].name\");\n\t\tassertThat(mapPropertySourceName(\"host.f00.name\")).isEqualTo(\"host.f00.name\");\n\t\tassertThat(mapPropertySourceName(\"my.host-name\")).isEqualTo(\"my.host-name\");\n\t\tassertThat(mapPropertySourceName(\"my.hostName\")).isEqualTo(\"my.hostname\");\n\t\tassertThat(mapPropertySourceName(\"my.HOST_NAME\")).isEqualTo(\"my.hostname\");\n\t\tassertThat(mapPropertySourceName(\"s[!@#$%^&*()=+]e-rVeR\")).isEqualTo(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(mapPropertySourceName(\"host[FOO].name\")).isEqualTo(\"host[FOO].name\");\n\t}\n","date":"2020-05-08 06:22:24","endLine":49,"groupId":"101299","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"mapFromStringShouldReturnBestGuess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9b/bf84e1b9e407a95afff2c69dd1a12f1fd8cbe8.src","preCode":"\tvoid mapFromStringShouldReturnBestGuess() {\n\t\tassertThat(namesFromString(\"server\")).toIterable().containsExactly(\"server\");\n\t\tassertThat(namesFromString(\"server.port\")).toIterable().containsExactly(\"server.port\");\n\t\tassertThat(namesFromString(\"host[0]\")).toIterable().containsExactly(\"host[0]\");\n\t\tassertThat(namesFromString(\"host[0][1]\")).toIterable().containsExactly(\"host[0][1]\");\n\t\tassertThat(namesFromString(\"host[0].name\")).toIterable().containsExactly(\"host[0].name\");\n\t\tassertThat(namesFromString(\"host.f00.name\")).toIterable().containsExactly(\"host.f00.name\");\n\t\tassertThat(namesFromString(\"my.host-name\")).toIterable().containsExactly(\"my.host-name\");\n\t\tassertThat(namesFromString(\"my.hostName\")).toIterable().containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"my.HOST_NAME\")).toIterable().containsExactly(\"my.hostname\");\n\t\tassertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\")).toIterable().containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n\t\tassertThat(namesFromString(\"host[FOO].name\")).toIterable().containsExactly(\"host[FOO].name\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/DefaultPropertyMapperTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"7afd25fc9a30e4e439791504eb8105acfde1d0cc","commitMessage":"@@@Add ConfigurationPropertyCaching support\n\nAdd a `ConfigurationPropertyCaching` utility interface that can be\nused to control the property source caching.\n\nPrior to this commit.  a `ConfigurationPropertySource` that was backed\nby a mutable `EnumerablePropertySource` would need to call the\n`getPropertyNames()` method each time a property was accessed. Since\nthis this operation can be expensive.  we now provide a way to cache\nthe results for a specific length of time.\n\nThis commit also improves the performance of immutable property sources\nby limiting the number of candidates that need to be searched.\nPreviously.  all mapped names would be enumerated. Now.  mappings are\ngrouped by `ConfigurationPropertyName`. This is especially helpful when\nthe `ConfigurationPropertyName` isn't mapped at all since the hash based\nmap lookup will be very fast and the resulting mappings will be empty.\n\nCloses gh-20625\n","date":"2020-05-08 06:22:24","modifiedFileCount":"14","status":"M","submitter":"Phillip Webb"}]
