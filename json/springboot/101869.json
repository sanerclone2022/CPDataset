[{"authorTime":"2018-01-09 02:57:19","codes":[{"authorDate":"2018-01-12 18:40:35","commitOrder":3,"curCode":"\tpublic void analysisWithKnownProperty() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\",\n\t\t\t\tCollections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources()\n\t\t\t\t.addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", \"This is not valid.\");\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertCommonParts(failure, analysis);\n\t\tassertThat(analysis.getDescription())\n\t\t\t\t.contains(\"Validation failed for the following reason\")\n\t\t\t\t.contains(\"This is not valid.\")\n\t\t\t\t.doesNotContain(\"Additionally, this property is also set\");\n\t}\n","date":"2018-01-12 18:40:35","endLine":65,"groupId":"11415","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"analysisWithKnownProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6e/ab25b83f42ed8d0d646c964f2396059f77e1ba.src","preCode":"\tpublic void analysisWithKnownProperty() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\",\n\t\t\t\tCollections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources()\n\t\t\t\t.addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", \"This is not valid.\");\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertCommonParts(failure, analysis);\n\t\tassertThat(analysis.getDescription())\n\t\t\t\t.contains(\"Validation failed for the following reason\")\n\t\t\t\t.contains(\"This is not valid.\")\n\t\t\t\t.doesNotContain(\"Additionally, this property is also set\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"MB"},{"authorDate":"2018-01-09 02:57:19","commitOrder":3,"curCode":"\tpublic void analysisWithKnownPropertyAndNoReason() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\",\n\t\t\t\tCollections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources()\n\t\t\t\t.addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", null);\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertCommonParts(failure, analysis);\n\t\tassertThat(analysis.getDescription()).contains(\"No reason was provided.\")\n\t\t\t\t.doesNotContain(\"Additionally, this property is also set\");\n\t}\n","date":"2018-01-09 07:05:52","endLine":80,"groupId":"9463","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"analysisWithKnownPropertyAndNoReason","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4c/37b066310714131a6ed62e87608db38e7dc066.src","preCode":"\tpublic void analysisWithKnownPropertyAndNoReason() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\",\n\t\t\t\tCollections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources()\n\t\t\t\t.addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", null);\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertCommonParts(failure, analysis);\n\t\tassertThat(analysis.getDescription()).contains(\"No reason was provided.\")\n\t\t\t\t.doesNotContain(\"Additionally, this property is also set\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"NB"}],"commitId":"8aaf95b792582df452330b56f78fa9c674283491","commitMessage":"@@@Polish\n","date":"2018-01-12 18:40:35","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-01-26 17:04:29","codes":[{"authorDate":"2018-01-26 17:04:29","commitOrder":4,"curCode":"\tpublic void analysisWithKnownProperty() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\",\n\t\t\t\tCollections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources()\n\t\t\t\t.addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", \"This is not valid.\");\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertCommonParts(failure, analysis);\n\t\tassertThat(analysis.getAction())\n\t\t\t\t.contains(\"Review the value of the property with the provided reason.\");\n\t\tassertThat(analysis.getDescription())\n\t\t\t\t.contains(\"Validation failed for the following reason\")\n\t\t\t\t.contains(\"This is not valid.\")\n\t\t\t\t.doesNotContain(\"Additionally, this property is also set\");\n\t}\n","date":"2018-01-26 17:04:29","endLine":67,"groupId":"11415","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"analysisWithKnownProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/56/3fe7d675fb757d5ae7228de80c32ed8582ff4e.src","preCode":"\tpublic void analysisWithKnownProperty() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\",\n\t\t\t\tCollections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources()\n\t\t\t\t.addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", \"This is not valid.\");\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertCommonParts(failure, analysis);\n\t\tassertThat(analysis.getDescription())\n\t\t\t\t.contains(\"Validation failed for the following reason\")\n\t\t\t\t.contains(\"This is not valid.\")\n\t\t\t\t.doesNotContain(\"Additionally, this property is also set\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2018-01-26 17:04:29","commitOrder":4,"curCode":"\tpublic void analysisWithKnownPropertyAndNoReason() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\",\n\t\t\t\tCollections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources()\n\t\t\t\t.addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", null);\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertThat(analysis.getAction())\n\t\t\t\t.contains(\"Review the value of the property.\");\n\t\tassertThat(analysis.getDescription()).contains(\"No reason was provided.\")\n\t\t\t\t.doesNotContain(\"Additionally, this property is also set\");\n\t}\n","date":"2018-01-26 17:04:29","endLine":82,"groupId":"6709","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"analysisWithKnownPropertyAndNoReason","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/56/3fe7d675fb757d5ae7228de80c32ed8582ff4e.src","preCode":"\tpublic void analysisWithKnownPropertyAndNoReason() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\",\n\t\t\t\tCollections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources()\n\t\t\t\t.addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", null);\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertCommonParts(failure, analysis);\n\t\tassertThat(analysis.getDescription()).contains(\"No reason was provided.\")\n\t\t\t\t.doesNotContain(\"Additionally, this property is also set\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"777cbe3c549b27763180b6150e659659dbb0b14b","commitMessage":"@@@Merge pull request #11783 from rajadilipkolli:patch-2\n\n* pr/11783:\n  Polish contribution\n  Polish\n","date":"2018-01-26 17:04:29","modifiedFileCount":"3","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid analysisWithKnownProperty() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\", Collections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources().addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", \"This is not valid.\");\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertCommonParts(failure, analysis);\n\t\tassertThat(analysis.getAction()).contains(\"Review the value of the property with the provided reason.\");\n\t\tassertThat(analysis.getDescription()).contains(\"Validation failed for the following reason\")\n\t\t\t\t.contains(\"This is not valid.\").doesNotContain(\"Additionally, this property is also set\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":61,"groupId":"101869","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"analysisWithKnownProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/29/b46485355f062e1a7c17a0bdbebc041026fcbd.src","preCode":"\tpublic void analysisWithKnownProperty() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\", Collections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources().addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", \"This is not valid.\");\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertCommonParts(failure, analysis);\n\t\tassertThat(analysis.getAction()).contains(\"Review the value of the property with the provided reason.\");\n\t\tassertThat(analysis.getDescription()).contains(\"Validation failed for the following reason\")\n\t\t\t\t.contains(\"This is not valid.\").doesNotContain(\"Additionally, this property is also set\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid analysisWithKnownPropertyAndNoReason() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\", Collections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources().addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", null);\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertThat(analysis.getAction()).contains(\"Review the value of the property.\");\n\t\tassertThat(analysis.getDescription()).contains(\"No reason was provided.\")\n\t\t\t\t.doesNotContain(\"Additionally, this property is also set\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":73,"groupId":"101869","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"analysisWithKnownPropertyAndNoReason","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/29/b46485355f062e1a7c17a0bdbebc041026fcbd.src","preCode":"\tpublic void analysisWithKnownPropertyAndNoReason() {\n\t\tMapPropertySource source = new MapPropertySource(\"test\", Collections.singletonMap(\"test.property\", \"invalid\"));\n\t\tthis.environment.getPropertySources().addFirst(OriginCapablePropertySource.get(source));\n\t\tInvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\n\t\t\t\t\"test.property\", \"invalid\", null);\n\t\tFailureAnalysis analysis = performAnalysis(failure);\n\t\tassertThat(analysis.getAction()).contains(\"Review the value of the property.\");\n\t\tassertThat(analysis.getDescription()).contains(\"No reason was provided.\")\n\t\t\t\t.doesNotContain(\"Additionally, this property is also set\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
