[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void getLoggerShouldReturnLogLevels() throws Exception {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"ROOT\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"ROOT\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/application/loggers/ROOT\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":98,"groupId":"14673","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getLoggerShouldReturnLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/48/e88e047285af78d0f0f886ab0ec2730421f79b.src","preCode":"\tpublic void getLoggerShouldReturnLogLevels() throws Exception {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"ROOT\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"ROOT\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/application/loggers/ROOT\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LoggersEndpointWebIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension()\n\t\t\tthrows Exception {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"com.png\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"com.png\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/application/loggers/com.png\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":159,"groupId":"14509","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/48/e88e047285af78d0f0f886ab0ec2730421f79b.src","preCode":"\tpublic void logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension()\n\t\t\tthrows Exception {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"com.png\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"com.png\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/application/loggers/com.png\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LoggersEndpointWebIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-11-23 14:32:11","codes":[{"authorDate":"2017-11-23 14:32:11","commitOrder":2,"curCode":"\tpublic void getLoggerShouldReturnLogLevels() throws Exception {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"ROOT\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"ROOT\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/actuator/loggers/ROOT\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","date":"2017-11-23 15:18:22","endLine":96,"groupId":"14673","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getLoggerShouldReturnLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7a/2815c4e5c39bd4ace793a953bb96837bd11e82.src","preCode":"\tpublic void getLoggerShouldReturnLogLevels() throws Exception {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"ROOT\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"ROOT\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/application/loggers/ROOT\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LoggersEndpointWebIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2017-11-23 14:32:11","commitOrder":2,"curCode":"\tpublic void logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension()\n\t\t\tthrows Exception {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"com.png\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"com.png\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/actuator/loggers/com.png\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","date":"2017-11-23 15:18:22","endLine":157,"groupId":"14509","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7a/2815c4e5c39bd4ace793a953bb96837bd11e82.src","preCode":"\tpublic void logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension()\n\t\t\tthrows Exception {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"com.png\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"com.png\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/application/loggers/com.png\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LoggersEndpointWebIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"}],"commitId":"07f71e889eb2e83cfb8c024791ff348dd13261a4","commitMessage":"@@@Move `/application` to `/actuator`\n\nChange the endpoint default path from `/application` to `/actuator`.\n\nFixes gh-10970\n","date":"2017-11-23 15:18:22","modifiedFileCount":"57","status":"M","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void getLoggerShouldReturnLogLevels() {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"ROOT\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"ROOT\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/actuator/loggers/ROOT\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":96,"groupId":"14673","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getLoggerShouldReturnLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/12/81006fbd471349056bb92a2c42268de42ad1b7.src","preCode":"\tpublic void getLoggerShouldReturnLogLevels() throws Exception {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"ROOT\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"ROOT\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/actuator/loggers/ROOT\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LoggersEndpointWebIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension() {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"com.png\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"com.png\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/actuator/loggers/com.png\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":156,"groupId":"14509","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/12/81006fbd471349056bb92a2c42268de42ad1b7.src","preCode":"\tpublic void logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension()\n\t\t\tthrows Exception {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"com.png\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"com.png\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/actuator/loggers/com.png\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LoggersEndpointWebIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid getLoggerShouldReturnLogLevels() {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"ROOT\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"ROOT\", null, LogLevel.DEBUG));\n\t\tthis.client.get().uri(\"/actuator/loggers/ROOT\").exchange().expectStatus().isOk().expectBody()\n\t\t\t\t.jsonPath(\"$.length()\").isEqualTo(2).jsonPath(\"configuredLevel\").isEqualTo(null)\n\t\t\t\t.jsonPath(\"effectiveLevel\").isEqualTo(\"DEBUG\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":88,"groupId":"2666","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getLoggerShouldReturnLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d0/ced02224cd74eea4f5911038c62ec9a3d022b0.src","preCode":"\tpublic void getLoggerShouldReturnLogLevels() {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"ROOT\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"ROOT\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/actuator/loggers/ROOT\").exchange().expectStatus().isOk()\n\t\t\t\t.expectBody().jsonPath(\"$.length()\").isEqualTo(2)\n\t\t\t\t.jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\")\n\t\t\t\t.isEqualTo(\"DEBUG\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LoggersEndpointWebIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension() {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"com.png\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"com.png\", null, LogLevel.DEBUG));\n\t\tthis.client.get().uri(\"/actuator/loggers/com.png\").exchange().expectStatus().isOk().expectBody()\n\t\t\t\t.jsonPath(\"$.length()\").isEqualTo(2).jsonPath(\"configuredLevel\").isEqualTo(null)\n\t\t\t\t.jsonPath(\"effectiveLevel\").isEqualTo(\"DEBUG\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":141,"groupId":"8282","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d0/ced02224cd74eea4f5911038c62ec9a3d022b0.src","preCode":"\tpublic void logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension() {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"com.png\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"com.png\", null, LogLevel.DEBUG));\n\t\tclient.get().uri(\"/actuator/loggers/com.png\").exchange().expectStatus().isOk().expectBody()\n\t\t\t\t.jsonPath(\"$.length()\").isEqualTo(2).jsonPath(\"configuredLevel\").isEqualTo(null)\n\t\t\t\t.jsonPath(\"effectiveLevel\").isEqualTo(\"DEBUG\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LoggersEndpointWebIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-07-31 02:58:39","commitOrder":5,"curCode":"\tvoid getLoggerShouldReturnLogLevels() {\n\t\tsetLogLevelToDebug(\"test\");\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"ROOT\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"ROOT\", null, LogLevel.DEBUG));\n\t\tthis.client.get().uri(\"/actuator/loggers/ROOT\").exchange().expectStatus().isOk().expectBody()\n\t\t\t\t.jsonPath(\"$.length()\").isEqualTo(2).jsonPath(\"configuredLevel\").isEqualTo(null)\n\t\t\t\t.jsonPath(\"effectiveLevel\").isEqualTo(\"DEBUG\");\n\t}\n","date":"2019-07-31 02:58:39","endLine":102,"groupId":"10269","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getLoggerShouldReturnLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a3/b857c6d3bba2cdef706788cd818bb957868158.src","preCode":"\tvoid getLoggerShouldReturnLogLevels() {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"ROOT\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"ROOT\", null, LogLevel.DEBUG));\n\t\tthis.client.get().uri(\"/actuator/loggers/ROOT\").exchange().expectStatus().isOk().expectBody()\n\t\t\t\t.jsonPath(\"$.length()\").isEqualTo(2).jsonPath(\"configuredLevel\").isEqualTo(null)\n\t\t\t\t.jsonPath(\"effectiveLevel\").isEqualTo(\"DEBUG\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LoggersEndpointWebIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension() {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"com.png\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"com.png\", null, LogLevel.DEBUG));\n\t\tthis.client.get().uri(\"/actuator/loggers/com.png\").exchange().expectStatus().isOk().expectBody()\n\t\t\t\t.jsonPath(\"$.length()\").isEqualTo(2).jsonPath(\"configuredLevel\").isEqualTo(null)\n\t\t\t\t.jsonPath(\"effectiveLevel\").isEqualTo(\"DEBUG\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":141,"groupId":"10269","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d0/ced02224cd74eea4f5911038c62ec9a3d022b0.src","preCode":"\tvoid logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension() {\n\t\tgiven(this.loggingSystem.getLoggerConfiguration(\"com.png\"))\n\t\t\t\t.willReturn(new LoggerConfiguration(\"com.png\", null, LogLevel.DEBUG));\n\t\tthis.client.get().uri(\"/actuator/loggers/com.png\").exchange().expectStatus().isOk().expectBody()\n\t\t\t\t.jsonPath(\"$.length()\").isEqualTo(2).jsonPath(\"configuredLevel\").isEqualTo(null)\n\t\t\t\t.jsonPath(\"effectiveLevel\").isEqualTo(\"DEBUG\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LoggersEndpointWebIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"N"}],"commitId":"6e1fb5a1c69ed760b99b69fca70ea2e20d2d8e75","commitMessage":"@@@Merge pull request #17515 from htztomic\n\n* pr/17515:\n  Polish \"Add support for configuring logging groups\"\n  Add support for configuring logging groups via endpoint\n\nCloses gh-17515\n","date":"2019-07-31 02:58:39","modifiedFileCount":"7","status":"M","submitter":"Madhura Bhave"}]
