[{"authorTime":"2018-02-08 21:07:06","codes":[{"authorDate":"2018-02-08 21:07:06","commitOrder":1,"curCode":"\tpublic void mixedCaseAuthorizationHeaderCanBeIncluded() {\n\t\tHttpTrace trace = new HttpExchangeTracer(\n\t\t\t\tEnumSet.of(Include.REQUEST_HEADERS, Include.AUTHORIZATION_HEADER))\n\t\t\t\t\t\t.receivedRequest(createRequest(Collections.singletonMap(\n\t\t\t\t\t\t\t\tmixedCase(HttpHeaders.AUTHORIZATION),\n\t\t\t\t\t\t\t\tArrays.asList(\"secret\"))));\n\t\tRequest request = trace.getRequest();\n\t\tassertThat(request.getHeaders())\n\t\t\t\t.containsOnlyKeys(mixedCase(HttpHeaders.AUTHORIZATION));\n\t}\n","date":"2018-02-08 21:08:27","endLine":130,"groupId":"12796","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mixedCaseAuthorizationHeaderCanBeIncluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a2/ab44f2e495e1505e3b9d8821853c3dcf59df9c.src","preCode":"\tpublic void mixedCaseAuthorizationHeaderCanBeIncluded() {\n\t\tHttpTrace trace = new HttpExchangeTracer(\n\t\t\t\tEnumSet.of(Include.REQUEST_HEADERS, Include.AUTHORIZATION_HEADER))\n\t\t\t\t\t\t.receivedRequest(createRequest(Collections.singletonMap(\n\t\t\t\t\t\t\t\tmixedCase(HttpHeaders.AUTHORIZATION),\n\t\t\t\t\t\t\t\tArrays.asList(\"secret\"))));\n\t\tRequest request = trace.getRequest();\n\t\tassertThat(request.getHeaders())\n\t\t\t\t.containsOnlyKeys(mixedCase(HttpHeaders.AUTHORIZATION));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/HttpExchangeTracerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2018-02-08 21:07:06","commitOrder":1,"curCode":"\tpublic void mixedCaseCookieHeaderCanBeIncluded() {\n\t\tHttpTrace trace = new HttpExchangeTracer(\n\t\t\t\tEnumSet.of(Include.REQUEST_HEADERS, Include.COOKIE_HEADERS))\n\t\t\t\t\t\t.receivedRequest(createRequest(Collections.singletonMap(\n\t\t\t\t\t\t\t\tmixedCase(HttpHeaders.COOKIE), Arrays.asList(\"value\"))));\n\t\tRequest request = trace.getRequest();\n\t\tassertThat(request.getHeaders()).containsOnlyKeys(mixedCase(HttpHeaders.COOKIE));\n\t}\n","date":"2018-02-08 21:08:27","endLine":168,"groupId":"3381","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mixedCaseCookieHeaderCanBeIncluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a2/ab44f2e495e1505e3b9d8821853c3dcf59df9c.src","preCode":"\tpublic void mixedCaseCookieHeaderCanBeIncluded() {\n\t\tHttpTrace trace = new HttpExchangeTracer(\n\t\t\t\tEnumSet.of(Include.REQUEST_HEADERS, Include.COOKIE_HEADERS))\n\t\t\t\t\t\t.receivedRequest(createRequest(Collections.singletonMap(\n\t\t\t\t\t\t\t\tmixedCase(HttpHeaders.COOKIE), Arrays.asList(\"value\"))));\n\t\tRequest request = trace.getRequest();\n\t\tassertThat(request.getHeaders()).containsOnlyKeys(mixedCase(HttpHeaders.COOKIE));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/HttpExchangeTracerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"B"}],"commitId":"4beb6be179ff8c4d83ea2638b65f4bede99922d6","commitMessage":"@@@Rename HTTP trace properties and packages\n\nCloses gh-11934\n","date":"2018-02-08 21:08:27","modifiedFileCount":"14","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid mixedCaseAuthorizationHeaderCanBeIncluded() {\n\t\tHttpTrace trace = new HttpExchangeTracer(EnumSet.of(Include.REQUEST_HEADERS, Include.AUTHORIZATION_HEADER))\n\t\t\t\t.receivedRequest(createRequest(\n\t\t\t\t\t\tCollections.singletonMap(mixedCase(HttpHeaders.AUTHORIZATION), Arrays.asList(\"secret\"))));\n\t\tRequest request = trace.getRequest();\n\t\tassertThat(request.getHeaders()).containsOnlyKeys(mixedCase(HttpHeaders.AUTHORIZATION));\n\t}\n","date":"2019-06-07 19:25:54","endLine":132,"groupId":"10358","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mixedCaseAuthorizationHeaderCanBeIncluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f3/b213f2ad1ec1fb01995ca52533aa8db01cc46e.src","preCode":"\tpublic void mixedCaseAuthorizationHeaderCanBeIncluded() {\n\t\tHttpTrace trace = new HttpExchangeTracer(EnumSet.of(Include.REQUEST_HEADERS, Include.AUTHORIZATION_HEADER))\n\t\t\t\t.receivedRequest(createRequest(\n\t\t\t\t\t\tCollections.singletonMap(mixedCase(HttpHeaders.AUTHORIZATION), Arrays.asList(\"secret\"))));\n\t\tRequest request = trace.getRequest();\n\t\tassertThat(request.getHeaders()).containsOnlyKeys(mixedCase(HttpHeaders.AUTHORIZATION));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/HttpExchangeTracerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid mixedCaseCookieHeaderCanBeIncluded() {\n\t\tHttpTrace trace = new HttpExchangeTracer(EnumSet.of(Include.REQUEST_HEADERS, Include.COOKIE_HEADERS))\n\t\t\t\t.receivedRequest(\n\t\t\t\t\t\tcreateRequest(Collections.singletonMap(mixedCase(HttpHeaders.COOKIE), Arrays.asList(\"value\"))));\n\t\tRequest request = trace.getRequest();\n\t\tassertThat(request.getHeaders()).containsOnlyKeys(mixedCase(HttpHeaders.COOKIE));\n\t}\n","date":"2019-06-07 19:25:54","endLine":165,"groupId":"10358","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mixedCaseCookieHeaderCanBeIncluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f3/b213f2ad1ec1fb01995ca52533aa8db01cc46e.src","preCode":"\tpublic void mixedCaseCookieHeaderCanBeIncluded() {\n\t\tHttpTrace trace = new HttpExchangeTracer(EnumSet.of(Include.REQUEST_HEADERS, Include.COOKIE_HEADERS))\n\t\t\t\t.receivedRequest(\n\t\t\t\t\t\tcreateRequest(Collections.singletonMap(mixedCase(HttpHeaders.COOKIE), Arrays.asList(\"value\"))));\n\t\tRequest request = trace.getRequest();\n\t\tassertThat(request.getHeaders()).containsOnlyKeys(mixedCase(HttpHeaders.COOKIE));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/HttpExchangeTracerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
