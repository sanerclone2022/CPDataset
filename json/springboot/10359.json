[{"authorTime":"2018-02-08 21:07:06","codes":[{"authorDate":"2018-02-08 21:07:06","commitOrder":1,"curCode":"\tpublic void setCookieHeaderIsNotIncludedByDefault() {\n\t\tHttpTrace trace = new HttpTrace(createRequest());\n\t\tnew HttpExchangeTracer(EnumSet.of(Include.RESPONSE_HEADERS)).sendingResponse(\n\t\t\t\ttrace, createResponse(Collections.singletonMap(HttpHeaders.SET_COOKIE,\n\t\t\t\t\t\tArrays.asList(\"test=test\"))),\n\t\t\t\tnull, null);\n\t\tassertThat(trace.getResponse().getHeaders()).isEmpty();\n\t}\n","date":"2018-02-08 21:08:27","endLine":203,"groupId":"7084","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setCookieHeaderIsNotIncludedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a2/ab44f2e495e1505e3b9d8821853c3dcf59df9c.src","preCode":"\tpublic void setCookieHeaderIsNotIncludedByDefault() {\n\t\tHttpTrace trace = new HttpTrace(createRequest());\n\t\tnew HttpExchangeTracer(EnumSet.of(Include.RESPONSE_HEADERS)).sendingResponse(\n\t\t\t\ttrace, createResponse(Collections.singletonMap(HttpHeaders.SET_COOKIE,\n\t\t\t\t\t\tArrays.asList(\"test=test\"))),\n\t\t\t\tnull, null);\n\t\tassertThat(trace.getResponse().getHeaders()).isEmpty();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/HttpExchangeTracerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"B"},{"authorDate":"2018-02-08 21:07:06","commitOrder":1,"curCode":"\tpublic void mixedCaseSetCookieHeaderIsNotIncludedByDefault() {\n\t\tHttpTrace trace = new HttpTrace(createRequest());\n\t\tnew HttpExchangeTracer(EnumSet.of(Include.RESPONSE_HEADERS)).sendingResponse(\n\t\t\t\ttrace,\n\t\t\t\tcreateResponse(Collections.singletonMap(mixedCase(HttpHeaders.SET_COOKIE),\n\t\t\t\t\t\tArrays.asList(\"test=test\"))),\n\t\t\t\tnull, null);\n\t\tassertThat(trace.getResponse().getHeaders()).isEmpty();\n\t}\n","date":"2018-02-08 21:08:27","endLine":214,"groupId":"5487","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mixedCaseSetCookieHeaderIsNotIncludedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a2/ab44f2e495e1505e3b9d8821853c3dcf59df9c.src","preCode":"\tpublic void mixedCaseSetCookieHeaderIsNotIncludedByDefault() {\n\t\tHttpTrace trace = new HttpTrace(createRequest());\n\t\tnew HttpExchangeTracer(EnumSet.of(Include.RESPONSE_HEADERS)).sendingResponse(\n\t\t\t\ttrace,\n\t\t\t\tcreateResponse(Collections.singletonMap(mixedCase(HttpHeaders.SET_COOKIE),\n\t\t\t\t\t\tArrays.asList(\"test=test\"))),\n\t\t\t\tnull, null);\n\t\tassertThat(trace.getResponse().getHeaders()).isEmpty();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/HttpExchangeTracerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"B"}],"commitId":"4beb6be179ff8c4d83ea2638b65f4bede99922d6","commitMessage":"@@@Rename HTTP trace properties and packages\n\nCloses gh-11934\n","date":"2018-02-08 21:08:27","modifiedFileCount":"14","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid setCookieHeaderIsNotIncludedByDefault() {\n\t\tHttpTrace trace = new HttpTrace(createRequest());\n\t\tnew HttpExchangeTracer(EnumSet.of(Include.RESPONSE_HEADERS)).sendingResponse(trace,\n\t\t\t\tcreateResponse(Collections.singletonMap(HttpHeaders.SET_COOKIE, Arrays.asList(\"test=test\"))), null,\n\t\t\t\tnull);\n\t\tassertThat(trace.getResponse().getHeaders()).isEmpty();\n\t}\n","date":"2019-06-07 19:25:54","endLine":196,"groupId":"10359","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setCookieHeaderIsNotIncludedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f3/b213f2ad1ec1fb01995ca52533aa8db01cc46e.src","preCode":"\tpublic void setCookieHeaderIsNotIncludedByDefault() {\n\t\tHttpTrace trace = new HttpTrace(createRequest());\n\t\tnew HttpExchangeTracer(EnumSet.of(Include.RESPONSE_HEADERS)).sendingResponse(trace,\n\t\t\t\tcreateResponse(Collections.singletonMap(HttpHeaders.SET_COOKIE, Arrays.asList(\"test=test\"))), null,\n\t\t\t\tnull);\n\t\tassertThat(trace.getResponse().getHeaders()).isEmpty();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/HttpExchangeTracerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid mixedCaseSetCookieHeaderIsNotIncludedByDefault() {\n\t\tHttpTrace trace = new HttpTrace(createRequest());\n\t\tnew HttpExchangeTracer(EnumSet.of(Include.RESPONSE_HEADERS)).sendingResponse(trace,\n\t\t\t\tcreateResponse(Collections.singletonMap(mixedCase(HttpHeaders.SET_COOKIE), Arrays.asList(\"test=test\"))),\n\t\t\t\tnull, null);\n\t\tassertThat(trace.getResponse().getHeaders()).isEmpty();\n\t}\n","date":"2019-06-07 19:25:54","endLine":205,"groupId":"10359","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mixedCaseSetCookieHeaderIsNotIncludedByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f3/b213f2ad1ec1fb01995ca52533aa8db01cc46e.src","preCode":"\tpublic void mixedCaseSetCookieHeaderIsNotIncludedByDefault() {\n\t\tHttpTrace trace = new HttpTrace(createRequest());\n\t\tnew HttpExchangeTracer(EnumSet.of(Include.RESPONSE_HEADERS)).sendingResponse(trace,\n\t\t\t\tcreateResponse(Collections.singletonMap(mixedCase(HttpHeaders.SET_COOKIE), Arrays.asList(\"test=test\"))),\n\t\t\t\tnull, null);\n\t\tassertThat(trace.getResponse().getHeaders()).isEmpty();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/HttpExchangeTracerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
