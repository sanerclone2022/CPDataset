[{"authorTime":"2018-10-06 09:15:43","codes":[{"authorDate":"2018-10-06 09:15:43","commitOrder":1,"curCode":"\tpublic void createShouldSchedulePushAsFixedRate() throws Exception {\n\t\tnew PrometheusPushGatewayManager(this.pushGateway, this.registry, this.scheduler,\n\t\t\t\tthis.pushRate, \"job\", this.groupingKey, null);\n\t\tverify(this.scheduler).scheduleAtFixedRate(this.task.capture(),\n\t\t\t\teq(this.pushRate));\n\t\tthis.task.getValue().run();\n\t\tverify(this.pushGateway).pushAdd(this.registry, \"job\", this.groupingKey);\n\t}\n","date":"2018-10-06 09:15:43","endLine":128,"groupId":"7684","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createShouldSchedulePushAsFixedRate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/b382213a006c06c5f020730812828281f3b0e9.src","preCode":"\tpublic void createShouldSchedulePushAsFixedRate() throws Exception {\n\t\tnew PrometheusPushGatewayManager(this.pushGateway, this.registry, this.scheduler,\n\t\t\t\tthis.pushRate, \"job\", this.groupingKey, null);\n\t\tverify(this.scheduler).scheduleAtFixedRate(this.task.capture(),\n\t\t\t\teq(this.pushRate));\n\t\tthis.task.getValue().run();\n\t\tverify(this.pushGateway).pushAdd(this.registry, \"job\", this.groupingKey);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/prometheus/PrometheusPushGatewayManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2018-10-06 09:15:43","commitOrder":1,"curCode":"\tpublic void pushDoesNotThrowException() throws Exception {\n\t\tnew PrometheusPushGatewayManager(this.pushGateway, this.registry, this.scheduler,\n\t\t\t\tthis.pushRate, \"job\", this.groupingKey, null);\n\t\tverify(this.scheduler).scheduleAtFixedRate(this.task.capture(),\n\t\t\t\teq(this.pushRate));\n\t\twillThrow(RuntimeException.class).given(this.pushGateway).pushAdd(this.registry,\n\t\t\t\t\"job\", this.groupingKey);\n\t\tthis.task.getValue().run();\n\t}\n","date":"2018-10-06 09:15:43","endLine":205,"groupId":"7384","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"pushDoesNotThrowException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/b382213a006c06c5f020730812828281f3b0e9.src","preCode":"\tpublic void pushDoesNotThrowException() throws Exception {\n\t\tnew PrometheusPushGatewayManager(this.pushGateway, this.registry, this.scheduler,\n\t\t\t\tthis.pushRate, \"job\", this.groupingKey, null);\n\t\tverify(this.scheduler).scheduleAtFixedRate(this.task.capture(),\n\t\t\t\teq(this.pushRate));\n\t\twillThrow(RuntimeException.class).given(this.pushGateway).pushAdd(this.registry,\n\t\t\t\t\"job\", this.groupingKey);\n\t\tthis.task.getValue().run();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/prometheus/PrometheusPushGatewayManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"B"}],"commitId":"f4cc3ade88ceed3cd64c3bc19dbf046b95b90f49","commitMessage":"@@@Merge pull request #14353 from davidkarlsen\n\n* pr/14353:\n  Polish \"Add Prometheus push gateway support\"\n  Add Prometheus push gateway support\n","date":"2018-10-06 09:15:43","modifiedFileCount":"3","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid createShouldSchedulePushAsFixedRate() throws Exception {\n\t\tnew PrometheusPushGatewayManager(this.pushGateway, this.registry, this.scheduler, this.pushRate, \"job\",\n\t\t\t\tthis.groupingKey, null);\n\t\tverify(this.scheduler).scheduleAtFixedRate(this.task.capture(), eq(this.pushRate));\n\t\tthis.task.getValue().run();\n\t\tverify(this.pushGateway).pushAdd(this.registry, \"job\", this.groupingKey);\n\t}\n","date":"2019-06-07 19:25:54","endLine":121,"groupId":"10522","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createShouldSchedulePushAsFixedRate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b8/41bad39533ff8d38b5cf0b5a0318821eac8bec.src","preCode":"\tpublic void createShouldSchedulePushAsFixedRate() throws Exception {\n\t\tnew PrometheusPushGatewayManager(this.pushGateway, this.registry, this.scheduler, this.pushRate, \"job\",\n\t\t\t\tthis.groupingKey, null);\n\t\tverify(this.scheduler).scheduleAtFixedRate(this.task.capture(), eq(this.pushRate));\n\t\tthis.task.getValue().run();\n\t\tverify(this.pushGateway).pushAdd(this.registry, \"job\", this.groupingKey);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/prometheus/PrometheusPushGatewayManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid pushDoesNotThrowException() throws Exception {\n\t\tnew PrometheusPushGatewayManager(this.pushGateway, this.registry, this.scheduler, this.pushRate, \"job\",\n\t\t\t\tthis.groupingKey, null);\n\t\tverify(this.scheduler).scheduleAtFixedRate(this.task.capture(), eq(this.pushRate));\n\t\twillThrow(RuntimeException.class).given(this.pushGateway).pushAdd(this.registry, \"job\", this.groupingKey);\n\t\tthis.task.getValue().run();\n\t}\n","date":"2019-06-07 19:25:54","endLine":186,"groupId":"10522","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"pushDoesNotThrowException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b8/41bad39533ff8d38b5cf0b5a0318821eac8bec.src","preCode":"\tpublic void pushDoesNotThrowException() throws Exception {\n\t\tnew PrometheusPushGatewayManager(this.pushGateway, this.registry, this.scheduler, this.pushRate, \"job\",\n\t\t\t\tthis.groupingKey, null);\n\t\tverify(this.scheduler).scheduleAtFixedRate(this.task.capture(), eq(this.pushRate));\n\t\twillThrow(RuntimeException.class).given(this.pushGateway).pushAdd(this.registry, \"job\", this.groupingKey);\n\t\tthis.task.getValue().run();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/prometheus/PrometheusPushGatewayManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
