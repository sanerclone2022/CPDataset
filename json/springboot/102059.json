[{"authorTime":"2018-08-20 17:23:39","codes":[{"authorDate":"2019-04-05 03:41:15","commitOrder":5,"curCode":"\tpublic void tomcatProtocolHandlerCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatProtocolHandlerCustomizer<AbstractHttp11Protocol>[] listeners = new TomcatProtocolHandlerCustomizer[4];\n\t\tArrays.setAll(listeners, (i) -> mock(TomcatProtocolHandlerCustomizer.class));\n\t\tfactory.setTomcatProtocolHandlerCustomizers(\n\t\t\t\tArrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addProtocolHandlerCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatProtocolHandlerCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(ProtocolHandler.class));\n\t\t}\n\t}\n","date":"2019-04-05 03:41:15","endLine":173,"groupId":"1122","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatProtocolHandlerCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0a/c70a498cfb78854c129dbff637022132c5ca42.src","preCode":"\tpublic void tomcatProtocolHandlerCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatProtocolHandlerCustomizer<AbstractHttp11Protocol>[] listeners = new TomcatProtocolHandlerCustomizer[4];\n\t\tArrays.setAll(listeners, (i) -> mock(TomcatProtocolHandlerCustomizer.class));\n\t\tfactory.setTomcatProtocolHandlerCustomizers(\n\t\t\t\tArrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addProtocolHandlerCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatProtocolHandlerCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(ProtocolHandler.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"},{"authorDate":"2018-08-20 17:23:39","commitOrder":5,"curCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","date":"2018-08-20 17:23:39","endLine":88,"groupId":"1122","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"builderCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/da/323af23e29784cd49b95e102acdfab872066d5.src","preCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"NB"}],"commitId":"7587af343d29fdaabf71bffee60ee4e93ad2d6f9","commitMessage":"@@@Merge pull request #16342 Pascal Zwick\n\n* pr/16342:\n  Polish \"Simplify the configuration of the ProtocolHandler\"\n  Simplify the configuration of the ProtocolHandler\n","date":"2019-04-05 03:41:15","modifiedFileCount":"9","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2018-08-20 17:23:39","codes":[{"authorDate":"2019-04-19 16:02:56","commitOrder":6,"curCode":"\tpublic void tomcatProtocolHandlerCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatProtocolHandlerCustomizer<AbstractHttp11Protocol>[] customizers = new TomcatProtocolHandlerCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(TomcatProtocolHandlerCustomizer.class));\n\t\tfactory.setTomcatProtocolHandlerCustomizers(\n\t\t\t\tArrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addProtocolHandlerCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (TomcatProtocolHandlerCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(ProtocolHandler.class));\n\t\t}\n\t}\n","date":"2019-04-19 16:02:56","endLine":175,"groupId":"1122","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatProtocolHandlerCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e6/cd176b1eedcfa7eabb37d26ae130fbb3a020c9.src","preCode":"\tpublic void tomcatProtocolHandlerCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatProtocolHandlerCustomizer<AbstractHttp11Protocol>[] listeners = new TomcatProtocolHandlerCustomizer[4];\n\t\tArrays.setAll(listeners, (i) -> mock(TomcatProtocolHandlerCustomizer.class));\n\t\tfactory.setTomcatProtocolHandlerCustomizers(\n\t\t\t\tArrays.asList(listeners[0], listeners[1]));\n\t\tfactory.addProtocolHandlerCustomizers(listeners[2], listeners[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) listeners);\n\t\tfor (TomcatProtocolHandlerCustomizer listener : listeners) {\n\t\t\tordered.verify(listener).customize(any(ProtocolHandler.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2018-08-20 17:23:39","commitOrder":6,"curCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","date":"2018-08-20 17:23:39","endLine":88,"groupId":"1122","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"builderCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/da/323af23e29784cd49b95e102acdfab872066d5.src","preCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"cd3f4213c6fddef3de1645b0b26d1a4ab62828d5","commitMessage":"@@@Merge pull request #16597 from izeye\n\n* pr/16597:\n  Polish\n","date":"2019-04-19 16:02:56","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-08-20 17:23:39","codes":[{"authorDate":"2019-04-25 05:33:18","commitOrder":7,"curCode":"\tpublic void tomcatProtocolHandlerCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatProtocolHandlerCustomizer<AbstractHttp11Protocol<?>>[] customizers = new TomcatProtocolHandlerCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(TomcatProtocolHandlerCustomizer.class));\n\t\tfactory.setTomcatProtocolHandlerCustomizers(\n\t\t\t\tArrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addProtocolHandlerCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (TomcatProtocolHandlerCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(ProtocolHandler.class));\n\t\t}\n\t}\n","date":"2019-04-25 10:37:42","endLine":176,"groupId":"1122","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatProtocolHandlerCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ea/ba76e449416ca6dd21620dfe49a1aea298c692.src","preCode":"\tpublic void tomcatProtocolHandlerCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatProtocolHandlerCustomizer<AbstractHttp11Protocol>[] customizers = new TomcatProtocolHandlerCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(TomcatProtocolHandlerCustomizer.class));\n\t\tfactory.setTomcatProtocolHandlerCustomizers(\n\t\t\t\tArrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addProtocolHandlerCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (TomcatProtocolHandlerCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(ProtocolHandler.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2018-08-20 17:23:39","commitOrder":7,"curCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","date":"2018-08-20 17:23:39","endLine":88,"groupId":"1122","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"builderCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/da/323af23e29784cd49b95e102acdfab872066d5.src","preCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"1e44aba7723293615d2a43c89ddc736e096db2b6","commitMessage":"@@@Fix compiler warnings and polish\n\nFix various compiler warnings and apply a little polish.\n","date":"2019-04-25 10:37:42","modifiedFileCount":"53","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":8,"curCode":"\tvoid tomcatProtocolHandlerCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatProtocolHandlerCustomizer<AbstractHttp11Protocol<?>>[] customizers = new TomcatProtocolHandlerCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(TomcatProtocolHandlerCustomizer.class));\n\t\tfactory.setTomcatProtocolHandlerCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addProtocolHandlerCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (TomcatProtocolHandlerCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(ProtocolHandler.class));\n\t\t}\n\t}\n","date":"2019-06-07 19:25:54","endLine":168,"groupId":"102059","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"tomcatProtocolHandlerCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f2/07050aedf626955c2dfde55c58679a52173df4.src","preCode":"\tpublic void tomcatProtocolHandlerCustomizersShouldBeInvoked() {\n\t\tTomcatReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tTomcatProtocolHandlerCustomizer<AbstractHttp11Protocol<?>>[] customizers = new TomcatProtocolHandlerCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(TomcatProtocolHandlerCustomizer.class));\n\t\tfactory.setTomcatProtocolHandlerCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addProtocolHandlerCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (TomcatProtocolHandlerCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(ProtocolHandler.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":8,"curCode":"\tvoid builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","date":"2019-06-07 19:25:54","endLine":87,"groupId":"102059","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"builderCustomizersShouldBeInvoked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0a/3ec122d875cff05cfdd6c42ee7122ca488c301.src","preCode":"\tpublic void builderCustomizersShouldBeInvoked() {\n\t\tUndertowReactiveWebServerFactory factory = getFactory();\n\t\tHttpHandler handler = mock(HttpHandler.class);\n\t\tUndertowBuilderCustomizer[] customizers = new UndertowBuilderCustomizer[4];\n\t\tArrays.setAll(customizers, (i) -> mock(UndertowBuilderCustomizer.class));\n\t\tfactory.setBuilderCustomizers(Arrays.asList(customizers[0], customizers[1]));\n\t\tfactory.addBuilderCustomizers(customizers[2], customizers[3]);\n\t\tthis.webServer = factory.getWebServer(handler);\n\t\tInOrder ordered = inOrder((Object[]) customizers);\n\t\tfor (UndertowBuilderCustomizer customizer : customizers) {\n\t\t\tordered.verify(customizer).customize(any(Undertow.Builder.class));\n\t\t}\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
