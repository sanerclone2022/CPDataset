[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void requestsWithDisallowedHeadersAreRejected() throws Exception {\n\t\tTestPropertyValues.of(\"management.endpoints.cors.allowed-origins:foo.example.com\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/application/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isForbidden());\n\t}\n","date":"2017-10-05 11:18:56","endLine":120,"groupId":"16116","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"requestsWithDisallowedHeadersAreRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dd/3e6cb33fdc6b135103347df1807e9ee7da62ec.src","preCode":"\tpublic void requestsWithDisallowedHeadersAreRejected() throws Exception {\n\t\tTestPropertyValues.of(\"management.endpoints.cors.allowed-origins:foo.example.com\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/application/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isForbidden());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointCorsIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void allowedHeadersCanBeConfigured() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.cors.allowed-origins:foo.example.com\",\n\t\t\t\t\t\t\"management.endpoints.cors.allowed-headers:Alpha,Bravo\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/application/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isOk()).andExpect(header()\n\t\t\t\t\t\t.string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, \"Alpha\"));\n\t}\n","date":"2017-10-05 11:18:56","endLine":134,"groupId":"16116","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"allowedHeadersCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dd/3e6cb33fdc6b135103347df1807e9ee7da62ec.src","preCode":"\tpublic void allowedHeadersCanBeConfigured() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.cors.allowed-origins:foo.example.com\",\n\t\t\t\t\t\t\"management.endpoints.cors.allowed-headers:Alpha,Bravo\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/application/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isOk()).andExpect(header()\n\t\t\t\t\t\t.string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, \"Alpha\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointCorsIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-10-14 00:14:27","codes":[{"authorDate":"2017-10-14 00:14:27","commitOrder":2,"curCode":"\tpublic void requestsWithDisallowedHeadersAreRejected() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.cors.allowed-origins:foo.example.com\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/application/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isForbidden());\n\t}\n","date":"2017-11-16 06:41:38","endLine":127,"groupId":"16116","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"requestsWithDisallowedHeadersAreRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bd/4e150a62e230ca3a638bf4831822c194b89ad7.src","preCode":"\tpublic void requestsWithDisallowedHeadersAreRejected() throws Exception {\n\t\tTestPropertyValues.of(\"management.endpoints.cors.allowed-origins:foo.example.com\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/application/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isForbidden());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointCorsIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2017-10-14 00:14:27","commitOrder":2,"curCode":"\tpublic void allowedHeadersCanBeConfigured() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.cors.allowed-origins:foo.example.com\",\n\t\t\t\t\t\t\"management.endpoints.web.cors.allowed-headers:Alpha,Bravo\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/application/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isOk()).andExpect(header()\n\t\t\t\t\t\t.string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, \"Alpha\"));\n\t}\n","date":"2017-11-16 06:41:38","endLine":141,"groupId":"16116","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"allowedHeadersCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bd/4e150a62e230ca3a638bf4831822c194b89ad7.src","preCode":"\tpublic void allowedHeadersCanBeConfigured() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.cors.allowed-origins:foo.example.com\",\n\t\t\t\t\t\t\"management.endpoints.cors.allowed-headers:Alpha,Bravo\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/application/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isOk()).andExpect(header()\n\t\t\t\t\t\t.string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, \"Alpha\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointCorsIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"fd5c43cdc97a3b17234a139b566a96eabd282639","commitMessage":"@@@Separate endpoint concerns\n\nUpdate endpoint code to provide cleaner separation of concerns.\nSpecifically.  the top level endpoint package is no longer aware of\nthe fact that JMX and HTTP are ultimately used to expose endpoints.\nCaching concerns have also been abstracted behind a general purpose\n`OperationMethodInvokerAdvisor` interface.\n\nConfiguration properties have been refined to further enforce\nseparation. The `management.endpoint.<name>` prefix provides\nconfiguration for a  single endpoint (including enable and cache\ntime-to-live). These  properties are now technology agnostic (they\ndon't include `web` or `jmx` sub properties).\n\nThe `management.endpoints.<technology>` prefix provide exposure specific\nconfiguration. For example.  `management.endpoints.web.path-mapping`\nallow endpoint URLs to be changed.\n\nEndpoint enabled/disabled logic has been simplified so that endpoints\ncan't be disabled per exposure technology. Instead a filter based\napproach is used to allow refinement of what endpoints are exposed over\na given technology.\n\nFixes gh-10176\n","date":"2017-11-16 06:41:38","modifiedFileCount":"108","status":"M","submitter":"Phillip Webb"},{"authorTime":"2017-11-23 14:32:11","codes":[{"authorDate":"2017-11-23 14:32:11","commitOrder":3,"curCode":"\tpublic void requestsWithDisallowedHeadersAreRejected() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.cors.allowed-origins:foo.example.com\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/actuator/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isForbidden());\n\t}\n","date":"2017-11-23 15:18:22","endLine":127,"groupId":"16116","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"requestsWithDisallowedHeadersAreRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6c/d895944e1eff13b2f6aca2ca1f1769bea6a312.src","preCode":"\tpublic void requestsWithDisallowedHeadersAreRejected() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.cors.allowed-origins:foo.example.com\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/application/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isForbidden());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointCorsIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2017-11-23 14:32:11","commitOrder":3,"curCode":"\tpublic void allowedHeadersCanBeConfigured() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.cors.allowed-origins:foo.example.com\",\n\t\t\t\t\t\t\"management.endpoints.web.cors.allowed-headers:Alpha,Bravo\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/actuator/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isOk()).andExpect(header()\n\t\t\t\t\t\t.string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, \"Alpha\"));\n\t}\n","date":"2017-11-23 15:18:22","endLine":141,"groupId":"16116","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"allowedHeadersCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6c/d895944e1eff13b2f6aca2ca1f1769bea6a312.src","preCode":"\tpublic void allowedHeadersCanBeConfigured() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.cors.allowed-origins:foo.example.com\",\n\t\t\t\t\t\t\"management.endpoints.web.cors.allowed-headers:Alpha,Bravo\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/application/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isOk()).andExpect(header()\n\t\t\t\t\t\t.string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, \"Alpha\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointCorsIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"07f71e889eb2e83cfb8c024791ff348dd13261a4","commitMessage":"@@@Move `/application` to `/actuator`\n\nChange the endpoint default path from `/application` to `/actuator`.\n\nFixes gh-10970\n","date":"2017-11-23 15:18:22","modifiedFileCount":"57","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-04-07 00:00:13","codes":[{"authorDate":"2019-04-07 00:00:13","commitOrder":4,"curCode":"\tpublic void requestsWithDisallowedHeadersAreRejected() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\n\t\t\t\t\t\t\"management.endpoints.web.cors.allowed-origins:foo.example.com\")\n\t\t\t\t.run(withMockMvc((mockMvc) ->\n\n\t\t\t\tmockMvc.perform(options(\"/actuator/beans\")\n\t\t\t\t\t\t.header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t\t\t.andExpect(status().isForbidden())));\n\t}\n","date":"2019-04-07 00:00:13","endLine":120,"groupId":"16116","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"requestsWithDisallowedHeadersAreRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ba/d30cb295014d3db093c8cdea1000f6119fdb77.src","preCode":"\tpublic void requestsWithDisallowedHeadersAreRejected() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.cors.allowed-origins:foo.example.com\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/actuator/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isForbidden());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointCorsIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2019-04-07 00:00:13","commitOrder":4,"curCode":"\tpublic void allowedHeadersCanBeConfigured() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\n\t\t\t\t\t\t\"management.endpoints.web.cors.allowed-origins:foo.example.com\",\n\t\t\t\t\t\t\"management.endpoints.web.cors.allowed-headers:Alpha,Bravo\")\n\t\t\t\t.run(withMockMvc((mockMvc) -> mockMvc.perform(options(\"/actuator/beans\")\n\t\t\t\t\t\t.header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t\t\t.andExpect(status().isOk()).andExpect(header().string(\n\t\t\t\t\t\t\t\tHttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, \"Alpha\"))));\n\t}\n","date":"2019-04-07 00:00:13","endLine":134,"groupId":"16116","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"allowedHeadersCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ba/d30cb295014d3db093c8cdea1000f6119fdb77.src","preCode":"\tpublic void allowedHeadersCanBeConfigured() throws Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"management.endpoints.web.cors.allowed-origins:foo.example.com\",\n\t\t\t\t\t\t\"management.endpoints.web.cors.allowed-headers:Alpha,Bravo\")\n\t\t\t\t.applyTo(this.context);\n\t\tcreateMockMvc()\n\t\t\t\t.perform(options(\"/actuator/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t.andExpect(status().isOk()).andExpect(header()\n\t\t\t\t\t\t.string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, \"Alpha\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointCorsIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"84735f58f337975ef1b5dfb4bff9fdbf29e4287e","commitMessage":"@@@Fix build failure\n","date":"2019-04-07 00:00:13","modifiedFileCount":"2","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid requestsWithDisallowedHeadersAreRejected() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.web.cors.allowed-origins:foo.example.com\")\n\t\t\t\t.run(withMockMvc((mockMvc) ->\n\n\t\t\t\tmockMvc.perform(options(\"/actuator/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t\t\t.andExpect(status().isForbidden())));\n\t}\n","date":"2019-06-07 19:25:54","endLine":105,"groupId":"10820","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"requestsWithDisallowedHeadersAreRejected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0e/3598a1aa339f4e7a4909f0189bdd1e6d1cb94d.src","preCode":"\tpublic void requestsWithDisallowedHeadersAreRejected() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.web.cors.allowed-origins:foo.example.com\")\n\t\t\t\t.run(withMockMvc((mockMvc) ->\n\n\t\t\t\tmockMvc.perform(options(\"/actuator/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t\t\t.andExpect(status().isForbidden())));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointCorsIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid allowedHeadersCanBeConfigured() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.cors.allowed-origins:foo.example.com\",\n\t\t\t\t\t\t\"management.endpoints.web.cors.allowed-headers:Alpha,Bravo\")\n\t\t\t\t.run(withMockMvc((mockMvc) -> mockMvc\n\t\t\t\t\t\t.perform(options(\"/actuator/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t\t\t.andExpect(status().isOk())\n\t\t\t\t\t\t.andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, \"Alpha\"))));\n\t}\n","date":"2019-06-07 19:25:54","endLine":118,"groupId":"10820","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"allowedHeadersCanBeConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0e/3598a1aa339f4e7a4909f0189bdd1e6d1cb94d.src","preCode":"\tpublic void allowedHeadersCanBeConfigured() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.cors.allowed-origins:foo.example.com\",\n\t\t\t\t\t\t\"management.endpoints.web.cors.allowed-headers:Alpha,Bravo\")\n\t\t\t\t.run(withMockMvc((mockMvc) -> mockMvc\n\t\t\t\t\t\t.perform(options(\"/actuator/beans\").header(\"Origin\", \"foo.example.com\")\n\t\t\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"GET\")\n\t\t\t\t\t\t\t\t.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, \"Alpha\"))\n\t\t\t\t\t\t.andExpect(status().isOk())\n\t\t\t\t\t\t.andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, \"Alpha\"))));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointCorsIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
