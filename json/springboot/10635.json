[{"authorTime":"2020-01-10 21:48:43","codes":[{"authorDate":"2020-01-10 21:48:43","commitOrder":1,"curCode":"\tvoid noSources() throws Exception {\n\t\tInvocation invocation = this.cli.invoke(\"jar\", \"test-app.jar\");\n\t\tinvocation.await();\n\t\tassertThat(invocation.getStandardOutput()).isEqualTo(\"\");\n\t\tassertThat(invocation.getErrorOutput())\n\t\t\t\t.contains(\"The name of the \" + \"resulting jar and at least one source file must be specified\");\n\t}\n","date":"2020-01-10 22:15:35","endLine":68,"groupId":"4258","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"noSources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/fb01739d37f56816e94ae32bc9bdecfc2d8aa9.src","preCode":"\tvoid noSources() throws Exception {\n\t\tInvocation invocation = this.cli.invoke(\"jar\", \"test-app.jar\");\n\t\tinvocation.await();\n\t\tassertThat(invocation.getStandardOutput()).isEqualTo(\"\");\n\t\tassertThat(invocation.getErrorOutput())\n\t\t\t\t.contains(\"The name of the \" + \"resulting jar and at least one source file must be specified\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/intTest/java/org/springframework/boot/cli/JarCommandIT.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2020-01-10 21:48:43","commitOrder":1,"curCode":"\tvoid jarCreationWithIncludes() throws Exception {\n\t\tFile jar = new File(this.tempDir, \"test-app.jar\");\n\t\tInvocation invocation = this.cli.invoke(\"jar\", jar.getAbsolutePath(), \"--include\", \"-public/**,-resources/**\",\n\t\t\t\t\"jar.groovy\");\n\t\tinvocation.await();\n\t\tif (!JAVA_9_OR_LATER) {\n\t\t\tassertThat(invocation.getErrorOutput()).isEmpty();\n\t\t}\n\t\tassertThat(jar).exists();\n\n\t\tProcess process = new JavaExecutable().processBuilder(\"-jar\", jar.getAbsolutePath()).start();\n\t\tinvocation = new Invocation(process);\n\t\tinvocation.await();\n\n\t\tif (!JAVA_9_OR_LATER) {\n\t\t\tassertThat(invocation.getErrorOutput()).isEqualTo(\"\");\n\t\t}\n\t\tassertThat(invocation.getStandardOutput()).contains(\"Hello World!\").doesNotContain(\"/public/public.txt\")\n\t\t\t\t.doesNotContain(\"/resources/resource.txt\").contains(\"/static/static.txt\")\n\t\t\t\t.contains(\"/templates/template.txt\").contains(\"Goodbye Mama\");\n\t}\n","date":"2020-01-10 22:15:35","endLine":138,"groupId":"15469","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"jarCreationWithIncludes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/fb01739d37f56816e94ae32bc9bdecfc2d8aa9.src","preCode":"\tvoid jarCreationWithIncludes() throws Exception {\n\t\tFile jar = new File(this.tempDir, \"test-app.jar\");\n\t\tInvocation invocation = this.cli.invoke(\"jar\", jar.getAbsolutePath(), \"--include\", \"-public/**,-resources/**\",\n\t\t\t\t\"jar.groovy\");\n\t\tinvocation.await();\n\t\tif (!JAVA_9_OR_LATER) {\n\t\t\tassertThat(invocation.getErrorOutput()).isEmpty();\n\t\t}\n\t\tassertThat(jar).exists();\n\n\t\tProcess process = new JavaExecutable().processBuilder(\"-jar\", jar.getAbsolutePath()).start();\n\t\tinvocation = new Invocation(process);\n\t\tinvocation.await();\n\n\t\tif (!JAVA_9_OR_LATER) {\n\t\t\tassertThat(invocation.getErrorOutput()).isEqualTo(\"\");\n\t\t}\n\t\tassertThat(invocation.getStandardOutput()).contains(\"Hello World!\").doesNotContain(\"/public/public.txt\")\n\t\t\t\t.doesNotContain(\"/resources/resource.txt\").contains(\"/static/static.txt\")\n\t\t\t\t.contains(\"/templates/template.txt\").contains(\"Goodbye Mama\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/intTest/java/org/springframework/boot/cli/JarCommandIT.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"}],"commitId":"ce99db19028b54886ae99c1fd916e613a982b65f","commitMessage":"@@@Port the build to Gradle\n\nCloses gh-19609\nCloses gh-19608\n","date":"2020-01-10 22:15:35","modifiedFileCount":"46","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2020-01-10 21:48:43","codes":[{"authorDate":"2020-02-04 00:42:43","commitOrder":2,"curCode":"\tvoid noSources() throws Exception {\n\t\tInvocation invocation = this.cli.invoke(\"jar\", \"test-app.jar\");\n\t\tinvocation.await();\n\t\tassertThat(invocation.getStandardOutput()).isEqualTo(\"\");\n\t\tassertThat(invocation.getErrorOutput())\n\t\t\t\t.contains(\"The name of the resulting jar and at least one source file must be specified\");\n\t}\n","date":"2020-02-04 00:42:44","endLine":68,"groupId":"10635","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"noSources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5b/b7857eaddeb069297a1c7d6648717307c4c4fd.src","preCode":"\tvoid noSources() throws Exception {\n\t\tInvocation invocation = this.cli.invoke(\"jar\", \"test-app.jar\");\n\t\tinvocation.await();\n\t\tassertThat(invocation.getStandardOutput()).isEqualTo(\"\");\n\t\tassertThat(invocation.getErrorOutput())\n\t\t\t\t.contains(\"The name of the \" + \"resulting jar and at least one source file must be specified\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/intTest/java/org/springframework/boot/cli/JarCommandIT.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2020-01-10 21:48:43","commitOrder":2,"curCode":"\tvoid jarCreationWithIncludes() throws Exception {\n\t\tFile jar = new File(this.tempDir, \"test-app.jar\");\n\t\tInvocation invocation = this.cli.invoke(\"jar\", jar.getAbsolutePath(), \"--include\", \"-public/**,-resources/**\",\n\t\t\t\t\"jar.groovy\");\n\t\tinvocation.await();\n\t\tif (!JAVA_9_OR_LATER) {\n\t\t\tassertThat(invocation.getErrorOutput()).isEmpty();\n\t\t}\n\t\tassertThat(jar).exists();\n\n\t\tProcess process = new JavaExecutable().processBuilder(\"-jar\", jar.getAbsolutePath()).start();\n\t\tinvocation = new Invocation(process);\n\t\tinvocation.await();\n\n\t\tif (!JAVA_9_OR_LATER) {\n\t\t\tassertThat(invocation.getErrorOutput()).isEqualTo(\"\");\n\t\t}\n\t\tassertThat(invocation.getStandardOutput()).contains(\"Hello World!\").doesNotContain(\"/public/public.txt\")\n\t\t\t\t.doesNotContain(\"/resources/resource.txt\").contains(\"/static/static.txt\")\n\t\t\t\t.contains(\"/templates/template.txt\").contains(\"Goodbye Mama\");\n\t}\n","date":"2020-01-10 22:15:35","endLine":138,"groupId":"10635","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"jarCreationWithIncludes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/fb01739d37f56816e94ae32bc9bdecfc2d8aa9.src","preCode":"\tvoid jarCreationWithIncludes() throws Exception {\n\t\tFile jar = new File(this.tempDir, \"test-app.jar\");\n\t\tInvocation invocation = this.cli.invoke(\"jar\", jar.getAbsolutePath(), \"--include\", \"-public/**,-resources/**\",\n\t\t\t\t\"jar.groovy\");\n\t\tinvocation.await();\n\t\tif (!JAVA_9_OR_LATER) {\n\t\t\tassertThat(invocation.getErrorOutput()).isEmpty();\n\t\t}\n\t\tassertThat(jar).exists();\n\n\t\tProcess process = new JavaExecutable().processBuilder(\"-jar\", jar.getAbsolutePath()).start();\n\t\tinvocation = new Invocation(process);\n\t\tinvocation.await();\n\n\t\tif (!JAVA_9_OR_LATER) {\n\t\t\tassertThat(invocation.getErrorOutput()).isEqualTo(\"\");\n\t\t}\n\t\tassertThat(invocation.getStandardOutput()).contains(\"Hello World!\").doesNotContain(\"/public/public.txt\")\n\t\t\t\t.doesNotContain(\"/resources/resource.txt\").contains(\"/static/static.txt\")\n\t\t\t\t.contains(\"/templates/template.txt\").contains(\"Goodbye Mama\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/intTest/java/org/springframework/boot/cli/JarCommandIT.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"N"}],"commitId":"bed8ff68e37207f00d8022c7831a23453b6c5d9f","commitMessage":"@@@Merge pull request #20020 from izeye\n\n* pr/20020:\n  Update copyright year of changed files\n  Polish\n\nCloses gh-20020\n","date":"2020-02-04 00:42:44","modifiedFileCount":"7","status":"M","submitter":"Stephane Nicoll"}]
