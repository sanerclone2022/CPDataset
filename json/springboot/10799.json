[{"authorTime":"2017-11-03 09:00:55","codes":[{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\tpublic void operationWithSecurityInterceptorForbidden() throws Exception {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\")))\n\t\t\t\t.willReturn(AccessLevel.RESTRICTED);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\")\n\t\t\t\t\t\t.accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange()\n\t\t\t\t\t\t.expectStatus().isEqualTo(HttpStatus.FORBIDDEN));\n\t}\n","date":"2017-11-03 09:00:55","endLine":83,"groupId":"4418","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"operationWithSecurityInterceptorForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/49/4740038210eae929385f6cac62b5788e7e4f23.src","preCode":"\tpublic void operationWithSecurityInterceptorForbidden() throws Exception {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\")))\n\t\t\t\t.willReturn(AccessLevel.RESTRICTED);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\")\n\t\t\t\t\t\t.accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange()\n\t\t\t\t\t\t.expectStatus().isEqualTo(HttpStatus.FORBIDDEN));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\tpublic void operationWithSecurityInterceptorSuccess() throws Exception {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\")))\n\t\t\t\t.willReturn(AccessLevel.FULL);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\")\n\t\t\t\t\t\t.accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange()\n\t\t\t\t\t\t.expectStatus().isEqualTo(HttpStatus.OK));\n\t}\n","date":"2017-11-03 09:00:55","endLine":94,"groupId":"4418","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"operationWithSecurityInterceptorSuccess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/49/4740038210eae929385f6cac62b5788e7e4f23.src","preCode":"\tpublic void operationWithSecurityInterceptorSuccess() throws Exception {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\")))\n\t\t\t\t.willReturn(AccessLevel.FULL);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\")\n\t\t\t\t\t\t.accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange()\n\t\t\t\t\t\t.expectStatus().isEqualTo(HttpStatus.OK));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"d50fe8874fa442cbd3ea380754e7b412a77aed9a","commitMessage":"@@@Add CF support for reactive actuators\n\nCloses gh-10780\n","date":"2017-11-03 09:00:55","modifiedFileCount":"5","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void operationWithSecurityInterceptorForbidden() {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\")))\n\t\t\t\t.willReturn(AccessLevel.RESTRICTED);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\")\n\t\t\t\t\t\t.accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange()\n\t\t\t\t\t\t.expectStatus().isEqualTo(HttpStatus.FORBIDDEN));\n\t}\n","date":"2017-12-12 18:57:30","endLine":84,"groupId":"4418","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"operationWithSecurityInterceptorForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/17/4d44b193f097fa2c11e8a1d04277485aa7239e.src","preCode":"\tpublic void operationWithSecurityInterceptorForbidden() throws Exception {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\")))\n\t\t\t\t.willReturn(AccessLevel.RESTRICTED);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\")\n\t\t\t\t\t\t.accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange()\n\t\t\t\t\t\t.expectStatus().isEqualTo(HttpStatus.FORBIDDEN));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void operationWithSecurityInterceptorSuccess() {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\")))\n\t\t\t\t.willReturn(AccessLevel.FULL);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\")\n\t\t\t\t\t\t.accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange()\n\t\t\t\t\t\t.expectStatus().isEqualTo(HttpStatus.OK));\n\t}\n","date":"2017-12-12 18:57:30","endLine":95,"groupId":"4418","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"operationWithSecurityInterceptorSuccess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/17/4d44b193f097fa2c11e8a1d04277485aa7239e.src","preCode":"\tpublic void operationWithSecurityInterceptorSuccess() throws Exception {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\")))\n\t\t\t\t.willReturn(AccessLevel.FULL);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\")\n\t\t\t\t\t\t.accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange()\n\t\t\t\t\t\t.expectStatus().isEqualTo(HttpStatus.OK));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid operationWithSecurityInterceptorForbidden() {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\"))).willReturn(AccessLevel.RESTRICTED);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange().expectStatus()\n\t\t\t\t\t\t.isEqualTo(HttpStatus.FORBIDDEN));\n\t}\n","date":"2019-06-07 19:25:54","endLine":79,"groupId":"10799","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"operationWithSecurityInterceptorForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e1/0f46a35c27e2e427b03ba681e3ca001d147091.src","preCode":"\tpublic void operationWithSecurityInterceptorForbidden() {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\"))).willReturn(AccessLevel.RESTRICTED);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange().expectStatus()\n\t\t\t\t\t\t.isEqualTo(HttpStatus.FORBIDDEN));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid operationWithSecurityInterceptorSuccess() {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\"))).willReturn(AccessLevel.FULL);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange().expectStatus()\n\t\t\t\t\t\t.isEqualTo(HttpStatus.OK));\n\t}\n","date":"2019-06-07 19:25:54","endLine":88,"groupId":"10799","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"operationWithSecurityInterceptorSuccess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e1/0f46a35c27e2e427b03ba681e3ca001d147091.src","preCode":"\tpublic void operationWithSecurityInterceptorSuccess() {\n\t\tgiven(securityService.getAccessLevel(any(), eq(\"app-id\"))).willReturn(AccessLevel.FULL);\n\t\tload(TestEndpointConfiguration.class,\n\t\t\t\t(client) -> client.get().uri(\"/cfApplication/test\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"bearer \" + mockAccessToken()).exchange().expectStatus()\n\t\t\t\t\t\t.isEqualTo(HttpStatus.OK));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryMvcWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
