[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void shouldAdaptPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(new MapPropertySource(\"test\",\n\t\t\t\tCollections.<String, Object>singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-10-05 11:18:56","endLine":64,"groupId":"14268","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAdaptPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/78/6020ca758fec56556e559992fa6694e322b036.src","preCode":"\tpublic void shouldAdaptPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(new MapPropertySource(\"test\",\n\t\t\t\tCollections.<String, Object>singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.<String, Object>singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-10-05 11:18:56","endLine":77,"groupId":"13160","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAdaptSystemEnvironmentPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/78/6020ca758fec56556e559992fa6694e322b036.src","preCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.<String, Object>singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-10-24 21:48:49","codes":[{"authorDate":"2017-10-24 21:48:49","commitOrder":2,"curCode":"\tpublic void shouldAdaptPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(\n\t\t\t\tnew MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-10-24 21:48:49","endLine":64,"groupId":"14268","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAdaptPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/0235abd400f2f0ac5f90dd7ee5593d6aadd4ea.src","preCode":"\tpublic void shouldAdaptPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(new MapPropertySource(\"test\",\n\t\t\t\tCollections.<String, Object>singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2017-10-24 21:48:49","commitOrder":2,"curCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-10-24 21:48:49","endLine":77,"groupId":"13160","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAdaptSystemEnvironmentPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/0235abd400f2f0ac5f90dd7ee5593d6aadd4ea.src","preCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.<String, Object>singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"35c6b83fce86a83e4b2b9ec9fb5cbe0646eb23a5","commitMessage":"@@@Merge pull request #10494 from Johnny Lim\n\n* gh-10494:\n  Polish ?Remove explicit type arguments?\n  Remove explicit type arguments\n","date":"2017-10-24 21:48:49","modifiedFileCount":"61","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2017-11-07 05:12:25","codes":[{"authorDate":"2017-10-24 21:48:49","commitOrder":3,"curCode":"\tpublic void shouldAdaptPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(\n\t\t\t\tnew MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-10-24 21:48:49","endLine":64,"groupId":"14268","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAdaptPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/0235abd400f2f0ac5f90dd7ee5593d6aadd4ea.src","preCode":"\tpublic void shouldAdaptPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(\n\t\t\t\tnew MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"},{"authorDate":"2017-11-07 05:12:25","commitOrder":3,"curCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\n\t\t\t\tStandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-11-07 05:12:25","endLine":78,"groupId":"13160","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAdaptSystemEnvironmentPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/67/a169439906115e076ec4df0225c9e06bcdbaea.src","preCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"06b1b453a6561abfcdf50cf182c8bb6965362d6d","commitMessage":"@@@Limit when SystemEnvironment mapping is used\n\nUpdate `SpringConfigurationPropertySource` so that the\n`SystemEnvironmentPropertyMapper` is only used for the \"actual\" system\nenvironment property source. This allows SystemEnvironmentProperySource\nclass to be used for other purposes (for example.  Spring Cloud uses it\nto as an override source providing decryption).\n\nOnly property sources named `systemEnvironment` or ending with\n`-systemEnvironment` now have the `SystemEnvironmentPropertyMapper`\napplied. The `TestPropertyValues` has been retrofitted to name the\nsource it adds appropriately.\n\nFixes gh-10840\n","date":"2017-11-07 05:12:25","modifiedFileCount":"7","status":"M","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":4,"curCode":"\tpublic void shouldAdaptPropertySource() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(\n\t\t\t\tnew MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-12-12 18:57:30","endLine":64,"groupId":"14268","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAdaptPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d7/53c78e84dba4e2fddd0d3fb0577444eaf31b4d.src","preCode":"\tpublic void shouldAdaptPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(\n\t\t\t\tnew MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":4,"curCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySource() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\n\t\t\t\tStandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-12-12 18:57:30","endLine":78,"groupId":"13160","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAdaptSystemEnvironmentPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d7/53c78e84dba4e2fddd0d3fb0577444eaf31b4d.src","preCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySource() throws Exception {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\n\t\t\t\tStandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid shouldAdaptPropertySource() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(new MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2019-06-07 19:25:54","endLine":56,"groupId":"101357","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAdaptPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/ed843b7c895bdebb8e4c96c648b80290a90d4d.src","preCode":"\tpublic void shouldAdaptPropertySource() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addFirst(new MapPropertySource(\"test\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid shouldAdaptSystemEnvironmentPropertySource() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"1234\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2019-06-07 19:25:54","endLine":67,"groupId":"101357","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAdaptSystemEnvironmentPropertySource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/ed843b7c895bdebb8e4c96c648b80290a90d4d.src","preCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySource() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"1234\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
