[{"authorTime":"2018-08-14 03:23:48","codes":[{"authorDate":"2018-08-14 03:23:48","commitOrder":1,"curCode":"\tpublic void servletPropertySourcesAreNotCopiedOverIfNotWebEnvironment() {\n\t\tStandardServletEnvironment standardServletEnvironment = new StandardServletEnvironment();\n\t\tStandardEnvironment convertedEnvironment = this.environmentConverter\n\t\t\t\t.convertEnvironmentIfNecessary(standardServletEnvironment,\n\t\t\t\t\t\tStandardEnvironment.class);\n\t\tassertThat(convertedEnvironment).isNotSameAs(standardServletEnvironment);\n\t\tSet<String> names = new HashSet<>();\n\t\tfor (PropertySource<?> propertySource : convertedEnvironment\n\t\t\t\t.getPropertySources()) {\n\t\t\tnames.add(propertySource.getName());\n\t\t}\n\t\tassertThat(names).doesNotContain(\n\t\t\t\tStandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.JNDI_PROPERTY_SOURCE_NAME);\n\t}\n","date":"2018-08-14 03:23:48","endLine":104,"groupId":"314","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"servletPropertySourcesAreNotCopiedOverIfNotWebEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/73/234b9b0254ba8abcfb9d1afaa358b24d877108.src","preCode":"\tpublic void servletPropertySourcesAreNotCopiedOverIfNotWebEnvironment() {\n\t\tStandardServletEnvironment standardServletEnvironment = new StandardServletEnvironment();\n\t\tStandardEnvironment convertedEnvironment = this.environmentConverter\n\t\t\t\t.convertEnvironmentIfNecessary(standardServletEnvironment,\n\t\t\t\t\t\tStandardEnvironment.class);\n\t\tassertThat(convertedEnvironment).isNotSameAs(standardServletEnvironment);\n\t\tSet<String> names = new HashSet<>();\n\t\tfor (PropertySource<?> propertySource : convertedEnvironment\n\t\t\t\t.getPropertySources()) {\n\t\t\tnames.add(propertySource.getName());\n\t\t}\n\t\tassertThat(names).doesNotContain(\n\t\t\t\tStandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.JNDI_PROPERTY_SOURCE_NAME);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/EnvironmentConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"},{"authorDate":"2018-08-14 03:23:48","commitOrder":1,"curCode":"\tpublic void servletPropertySourcesArePresentWhenTypeToConvertIsWeb() {\n\t\tStandardEnvironment standardEnvironment = new StandardEnvironment();\n\t\tStandardEnvironment convertedEnvironment = this.environmentConverter\n\t\t\t\t.convertEnvironmentIfNecessary(standardEnvironment,\n\t\t\t\t\t\tStandardServletEnvironment.class);\n\t\tassertThat(convertedEnvironment).isNotSameAs(standardEnvironment);\n\t\tSet<String> names = new HashSet<>();\n\t\tfor (PropertySource<?> propertySource : convertedEnvironment\n\t\t\t\t.getPropertySources()) {\n\t\t\tnames.add(propertySource.getName());\n\t\t}\n\t\tassertThat(names).contains(\n\t\t\t\tStandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME);\n\t}\n","date":"2018-08-14 03:23:48","endLine":130,"groupId":"314","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"servletPropertySourcesArePresentWhenTypeToConvertIsWeb","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/73/234b9b0254ba8abcfb9d1afaa358b24d877108.src","preCode":"\tpublic void servletPropertySourcesArePresentWhenTypeToConvertIsWeb() {\n\t\tStandardEnvironment standardEnvironment = new StandardEnvironment();\n\t\tStandardEnvironment convertedEnvironment = this.environmentConverter\n\t\t\t\t.convertEnvironmentIfNecessary(standardEnvironment,\n\t\t\t\t\t\tStandardServletEnvironment.class);\n\t\tassertThat(convertedEnvironment).isNotSameAs(standardEnvironment);\n\t\tSet<String> names = new HashSet<>();\n\t\tfor (PropertySource<?> propertySource : convertedEnvironment\n\t\t\t\t.getPropertySources()) {\n\t\t\tnames.add(propertySource.getName());\n\t\t}\n\t\tassertThat(names).contains(\n\t\t\t\tStandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/EnvironmentConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"}],"commitId":"727e9c6b0f2da9c99ee5377e6e07cd25f858d58f","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-08-14 03:23:48","modifiedFileCount":"4","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid servletPropertySourcesAreNotCopiedOverIfNotWebEnvironment() {\n\t\tStandardServletEnvironment standardServletEnvironment = new StandardServletEnvironment();\n\t\tStandardEnvironment convertedEnvironment = this.environmentConverter\n\t\t\t\t.convertEnvironmentIfNecessary(standardServletEnvironment, StandardEnvironment.class);\n\t\tassertThat(convertedEnvironment).isNotSameAs(standardServletEnvironment);\n\t\tSet<String> names = new HashSet<>();\n\t\tfor (PropertySource<?> propertySource : convertedEnvironment.getPropertySources()) {\n\t\t\tnames.add(propertySource.getName());\n\t\t}\n\t\tassertThat(names).doesNotContain(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.JNDI_PROPERTY_SOURCE_NAME);\n\t}\n","date":"2019-06-07 19:25:54","endLine":93,"groupId":"102104","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"servletPropertySourcesAreNotCopiedOverIfNotWebEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a7/f814080d258294f0816bc75c999e38a150f481.src","preCode":"\tpublic void servletPropertySourcesAreNotCopiedOverIfNotWebEnvironment() {\n\t\tStandardServletEnvironment standardServletEnvironment = new StandardServletEnvironment();\n\t\tStandardEnvironment convertedEnvironment = this.environmentConverter\n\t\t\t\t.convertEnvironmentIfNecessary(standardServletEnvironment, StandardEnvironment.class);\n\t\tassertThat(convertedEnvironment).isNotSameAs(standardServletEnvironment);\n\t\tSet<String> names = new HashSet<>();\n\t\tfor (PropertySource<?> propertySource : convertedEnvironment.getPropertySources()) {\n\t\t\tnames.add(propertySource.getName());\n\t\t}\n\t\tassertThat(names).doesNotContain(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.JNDI_PROPERTY_SOURCE_NAME);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/EnvironmentConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid servletPropertySourcesArePresentWhenTypeToConvertIsWeb() {\n\t\tStandardEnvironment standardEnvironment = new StandardEnvironment();\n\t\tStandardEnvironment convertedEnvironment = this.environmentConverter\n\t\t\t\t.convertEnvironmentIfNecessary(standardEnvironment, StandardServletEnvironment.class);\n\t\tassertThat(convertedEnvironment).isNotSameAs(standardEnvironment);\n\t\tSet<String> names = new HashSet<>();\n\t\tfor (PropertySource<?> propertySource : convertedEnvironment.getPropertySources()) {\n\t\t\tnames.add(propertySource.getName());\n\t\t}\n\t\tassertThat(names).contains(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME);\n\t}\n","date":"2019-06-07 19:25:54","endLine":115,"groupId":"102104","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"servletPropertySourcesArePresentWhenTypeToConvertIsWeb","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a7/f814080d258294f0816bc75c999e38a150f481.src","preCode":"\tpublic void servletPropertySourcesArePresentWhenTypeToConvertIsWeb() {\n\t\tStandardEnvironment standardEnvironment = new StandardEnvironment();\n\t\tStandardEnvironment convertedEnvironment = this.environmentConverter\n\t\t\t\t.convertEnvironmentIfNecessary(standardEnvironment, StandardServletEnvironment.class);\n\t\tassertThat(convertedEnvironment).isNotSameAs(standardEnvironment);\n\t\tSet<String> names = new HashSet<>();\n\t\tfor (PropertySource<?> propertySource : convertedEnvironment.getPropertySources()) {\n\t\t\tnames.add(propertySource.getName());\n\t\t}\n\t\tassertThat(names).contains(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME,\n\t\t\t\tStandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/EnvironmentConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
