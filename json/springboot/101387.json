[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void bindToMapNonScalarCollectionShouldPopulateMap() throws Exception {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class,\n\t\t\t\tvalueType.getType());\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar[0].value\", \"a\");\n\t\tsource.put(\"foo.bar[1].value\", \"b\");\n\t\tsource.put(\"foo.bar[2].value\", \"c\");\n\t\tthis.sources.add(source);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar\").stream().map(JavaBean::getValue)\n\t\t\t\t.collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\n\t}\n","date":"2017-10-05 11:18:56","endLine":393,"groupId":"14348","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToMapNonScalarCollectionShouldPopulateMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c9/62c042e104d1f72847861212a3759a4c4319b0.src","preCode":"\tpublic void bindToMapNonScalarCollectionShouldPopulateMap() throws Exception {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class,\n\t\t\t\tvalueType.getType());\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar[0].value\", \"a\");\n\t\tsource.put(\"foo.bar[1].value\", \"b\");\n\t\tsource.put(\"foo.bar[2].value\", \"c\");\n\t\tthis.sources.add(source);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar\").stream().map(JavaBean::getValue)\n\t\t\t\t.collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":379,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void bindToMapNonScalarCollectionWithDotKeysShouldBind() throws Exception {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class,\n\t\t\t\tvalueType.getType());\n\t\tMockConfigurationPropertySource mockSource = new MockConfigurationPropertySource();\n\t\tmockSource.put(\"foo.bar.baz[0].value\", \"a\");\n\t\tmockSource.put(\"foo.bar.baz[1].value\", \"b\");\n\t\tmockSource.put(\"foo.bar.baz[2].value\", \"c\");\n\t\tthis.sources.add(mockSource);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar.baz\").stream().map(JavaBean::getValue)\n\t\t\t\t.collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":464,"groupId":"14348","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToMapNonScalarCollectionWithDotKeysShouldBind","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c9/62c042e104d1f72847861212a3759a4c4319b0.src","preCode":"\tpublic void bindToMapNonScalarCollectionWithDotKeysShouldBind() throws Exception {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class,\n\t\t\t\tvalueType.getType());\n\t\tMockConfigurationPropertySource mockSource = new MockConfigurationPropertySource();\n\t\tmockSource.put(\"foo.bar.baz[0].value\", \"a\");\n\t\tmockSource.put(\"foo.bar.baz[1].value\", \"b\");\n\t\tmockSource.put(\"foo.bar.baz[2].value\", \"c\");\n\t\tthis.sources.add(mockSource);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar.baz\").stream().map(JavaBean::getValue)\n\t\t\t\t.collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":451,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void bindToMapNonScalarCollectionShouldPopulateMap() {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class,\n\t\t\t\tvalueType.getType());\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar[0].value\", \"a\");\n\t\tsource.put(\"foo.bar[1].value\", \"b\");\n\t\tsource.put(\"foo.bar[2].value\", \"c\");\n\t\tthis.sources.add(source);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar\").stream().map(JavaBean::getValue)\n\t\t\t\t.collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\n\t}\n","date":"2017-12-12 18:57:30","endLine":391,"groupId":"14348","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToMapNonScalarCollectionShouldPopulateMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/be/7c39de7bba2dd03c538fff9ecc598f2ca502e3.src","preCode":"\tpublic void bindToMapNonScalarCollectionShouldPopulateMap() throws Exception {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class,\n\t\t\t\tvalueType.getType());\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar[0].value\", \"a\");\n\t\tsource.put(\"foo.bar[1].value\", \"b\");\n\t\tsource.put(\"foo.bar[2].value\", \"c\");\n\t\tthis.sources.add(source);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar\").stream().map(JavaBean::getValue)\n\t\t\t\t.collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void bindToMapNonScalarCollectionWithDotKeysShouldBind() {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class,\n\t\t\t\tvalueType.getType());\n\t\tMockConfigurationPropertySource mockSource = new MockConfigurationPropertySource();\n\t\tmockSource.put(\"foo.bar.baz[0].value\", \"a\");\n\t\tmockSource.put(\"foo.bar.baz[1].value\", \"b\");\n\t\tmockSource.put(\"foo.bar.baz[2].value\", \"c\");\n\t\tthis.sources.add(mockSource);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar.baz\").stream().map(JavaBean::getValue)\n\t\t\t\t.collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":460,"groupId":"14348","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToMapNonScalarCollectionWithDotKeysShouldBind","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/be/7c39de7bba2dd03c538fff9ecc598f2ca502e3.src","preCode":"\tpublic void bindToMapNonScalarCollectionWithDotKeysShouldBind() throws Exception {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class,\n\t\t\t\tvalueType.getType());\n\t\tMockConfigurationPropertySource mockSource = new MockConfigurationPropertySource();\n\t\tmockSource.put(\"foo.bar.baz[0].value\", \"a\");\n\t\tmockSource.put(\"foo.bar.baz[1].value\", \"b\");\n\t\tmockSource.put(\"foo.bar.baz[2].value\", \"c\");\n\t\tthis.sources.add(mockSource);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar.baz\").stream().map(JavaBean::getValue)\n\t\t\t\t.collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":447,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid bindToMapNonScalarCollectionShouldPopulateMap() {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class, valueType.getType());\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar[0].value\", \"a\");\n\t\tsource.put(\"foo.bar[1].value\", \"b\");\n\t\tsource.put(\"foo.bar[2].value\", \"c\");\n\t\tthis.sources.add(source);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar\").stream().map(JavaBean::getValue).collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\n\t}\n","date":"2019-06-07 19:25:54","endLine":367,"groupId":"101387","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToMapNonScalarCollectionShouldPopulateMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/b30f26577f68c3eb5e6c18d90cca4b6a62f01d.src","preCode":"\tpublic void bindToMapNonScalarCollectionShouldPopulateMap() {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class, valueType.getType());\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar[0].value\", \"a\");\n\t\tsource.put(\"foo.bar[1].value\", \"b\");\n\t\tsource.put(\"foo.bar[2].value\", \"c\");\n\t\tthis.sources.add(source);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar\").stream().map(JavaBean::getValue).collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid bindToMapNonScalarCollectionWithDotKeysShouldBind() {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class, valueType.getType());\n\t\tMockConfigurationPropertySource mockSource = new MockConfigurationPropertySource();\n\t\tmockSource.put(\"foo.bar.baz[0].value\", \"a\");\n\t\tmockSource.put(\"foo.bar.baz[1].value\", \"b\");\n\t\tmockSource.put(\"foo.bar.baz[2].value\", \"c\");\n\t\tthis.sources.add(mockSource);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar.baz\").stream().map(JavaBean::getValue).collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":431,"groupId":"101387","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToMapNonScalarCollectionWithDotKeysShouldBind","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/b30f26577f68c3eb5e6c18d90cca4b6a62f01d.src","preCode":"\tpublic void bindToMapNonScalarCollectionWithDotKeysShouldBind() {\n\t\tBindable<List<JavaBean>> valueType = Bindable.listOf(JavaBean.class);\n\t\tBindable<Map<String, List<JavaBean>>> target = getMapBindable(String.class, valueType.getType());\n\t\tMockConfigurationPropertySource mockSource = new MockConfigurationPropertySource();\n\t\tmockSource.put(\"foo.bar.baz[0].value\", \"a\");\n\t\tmockSource.put(\"foo.bar.baz[1].value\", \"b\");\n\t\tmockSource.put(\"foo.bar.baz[2].value\", \"c\");\n\t\tthis.sources.add(mockSource);\n\t\tMap<String, List<JavaBean>> map = this.binder.bind(\"foo\", target).get();\n\t\tList<String> values = map.get(\"bar.baz\").stream().map(JavaBean::getValue).collect(Collectors.toList());\n\t\tassertThat(values).containsExactly(\"a\", \"b\", \"c\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":420,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
