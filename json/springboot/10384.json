[{"authorTime":"2021-07-15 00:19:59","codes":[{"authorDate":"2020-07-28 22:42:01","commitOrder":2,"curCode":"\tprivate Driver mockDriver(ResultSummary resultSummary, String edition) {\n\t\tResult statementResult = mockStatementResult(resultSummary, edition);\n\t\tSession session = mock(Session.class);\n\t\tgiven(session.run(anyString())).willReturn(statementResult);\n\t\tDriver driver = mock(Driver.class);\n\t\tgiven(driver.session(any(SessionConfig.class))).willReturn(session);\n\t\treturn driver;\n\t}\n","date":"2020-07-28 22:42:01","endLine":131,"groupId":"1343","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mockDriver","params":"(ResultSummaryresultSummary@Stringedition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a7/2f1fa8fd7a8106f166cf7e8f3dd56a908037f4.src","preCode":"\tprivate Driver mockDriver(ResultSummary resultSummary, String edition) {\n\t\tResult statementResult = mockStatementResult(resultSummary, edition);\n\t\tSession session = mock(Session.class);\n\t\tgiven(session.run(anyString())).willReturn(statementResult);\n\t\tDriver driver = mock(Driver.class);\n\t\tgiven(driver.session(any(SessionConfig.class))).willReturn(session);\n\t\treturn driver;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/neo4j/Neo4jHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"NB"},{"authorDate":"2021-07-15 00:19:59","commitOrder":2,"curCode":"\tprivate Driver mockDriver(ResultSummary resultSummary, String edition) {\n\t\tRxResult statementResult = mockStatementResult(resultSummary, edition);\n\t\tRxSession session = mock(RxSession.class);\n\t\tgiven(session.run(anyString())).willReturn(statementResult);\n\t\tDriver driver = mock(Driver.class);\n\t\tgiven(driver.rxSession(any(SessionConfig.class))).willReturn(session);\n\t\treturn driver;\n\t}\n","date":"2021-07-15 00:19:59","endLine":114,"groupId":"1343","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mockDriver","params":"(ResultSummaryresultSummary@Stringedition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/61/b721b2ac3ffccd720a49bee7c9a5bffc451ac5.src","preCode":"\tprivate Driver mockDriver(ResultSummary resultSummary, String edition) {\n\t\tRxResult statementResult = mockStatementResult(resultSummary, edition);\n\t\tRxSession session = mock(RxSession.class);\n\t\tgiven(session.run(anyString())).willReturn(statementResult);\n\t\tDriver driver = mock(Driver.class);\n\t\tgiven(driver.rxSession(any(SessionConfig.class))).willReturn(session);\n\t\treturn driver;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/neo4j/Neo4jReactiveHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"B"}],"commitId":"8db63db56459e5724e3edb8b148dce18608045ee","commitMessage":"@@@Merge branch '2.5.x'\n\nCloses gh-27333\n","date":"2021-07-15 00:19:59","modifiedFileCount":"0","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-07-15 00:53:46","codes":[{"authorDate":"2021-07-15 00:53:46","commitOrder":3,"curCode":"\tprivate Driver mockDriver(ResultSummary resultSummary, String version, String edition) {\n\t\tResult statementResult = mockStatementResult(resultSummary, version, edition);\n\t\tSession session = mock(Session.class);\n\t\tgiven(session.run(anyString())).willReturn(statementResult);\n\t\tDriver driver = mock(Driver.class);\n\t\tgiven(driver.session(any(SessionConfig.class))).willReturn(session);\n\t\treturn driver;\n\t}\n","date":"2021-07-15 00:53:47","endLine":132,"groupId":"10384","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"mockDriver","params":"(ResultSummaryresultSummary@Stringversion@Stringedition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dd/89d5b6cfe50f12c7ae536c6eae3d57b967a0b0.src","preCode":"\tprivate Driver mockDriver(ResultSummary resultSummary, String edition) {\n\t\tResult statementResult = mockStatementResult(resultSummary, edition);\n\t\tSession session = mock(Session.class);\n\t\tgiven(session.run(anyString())).willReturn(statementResult);\n\t\tDriver driver = mock(Driver.class);\n\t\tgiven(driver.session(any(SessionConfig.class))).willReturn(session);\n\t\treturn driver;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/neo4j/Neo4jHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2021-07-15 00:53:46","commitOrder":3,"curCode":"\tprivate Driver mockDriver(ResultSummary resultSummary, String version, String edition) {\n\t\tRxResult statementResult = mockStatementResult(resultSummary, version, edition);\n\t\tRxSession session = mock(RxSession.class);\n\t\tgiven(session.run(anyString())).willReturn(statementResult);\n\t\tDriver driver = mock(Driver.class);\n\t\tgiven(driver.rxSession(any(SessionConfig.class))).willReturn(session);\n\t\treturn driver;\n\t}\n","date":"2021-07-15 00:53:47","endLine":115,"groupId":"10384","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"mockDriver","params":"(ResultSummaryresultSummary@Stringversion@Stringedition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/48/af288c9d28ef222218efa4da87d4147a21f5ef.src","preCode":"\tprivate Driver mockDriver(ResultSummary resultSummary, String edition) {\n\t\tRxResult statementResult = mockStatementResult(resultSummary, edition);\n\t\tRxSession session = mock(RxSession.class);\n\t\tgiven(session.run(anyString())).willReturn(statementResult);\n\t\tDriver driver = mock(Driver.class);\n\t\tgiven(driver.rxSession(any(SessionConfig.class))).willReturn(session);\n\t\treturn driver;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/neo4j/Neo4jReactiveHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"b39ed7f0867ca0ce8f6dc28a09ab794779168904","commitMessage":"@@@Merge pull request #27294 from meistermeier\n\n* gh-27294:\n  Polish \"Use server version from database in Neo4j health details\"\n  Use server version from database in Neo4j health details\n\nCloses gh-27294\n","date":"2021-07-15 00:53:47","modifiedFileCount":"6","status":"M","submitter":"Andy Wilkinson"}]
