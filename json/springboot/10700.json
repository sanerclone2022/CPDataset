[{"authorTime":"2018-10-16 20:31:35","codes":[{"authorDate":"2018-11-29 09:41:11","commitOrder":2,"curCode":"\tpublic void toAnyEndpointWhenApplicationPathSetShouldMatch() {\n\t\tgetContextRunner().withPropertyValues(\"spring.jersey.application-path=/admin\",\n\t\t\t\t\"spring.security.user.password=password\").run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\").exchange()\n\t\t\t\t\t\t\t.expectStatus().isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\")\n\t\t\t\t\t\t\t.header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","date":"2018-11-29 09:41:11","endLine":110,"groupId":"14904","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toAnyEndpointWhenApplicationPathSetShouldMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cb/e20fb8554fe93dbe0757a724c4398fdb92a5ac.src","preCode":"\tpublic void toAnyEndpointWhenApplicationPathSetShouldMatch() {\n\t\tgetContextRunner().withPropertyValues(\"spring.jersey.application-path=/admin\",\n\t\t\t\t\"spring.security.user.password=password\").run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\").exchange()\n\t\t\t\t\t\t\t.expectStatus().isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\")\n\t\t\t\t\t\t\t.header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/JerseyEndpointRequestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2018-10-16 20:31:35","commitOrder":2,"curCode":"\tpublic void toAllEndpointsShouldMatch() {\n\t\tgetContextRunner()\n\t\t\t\t.withInitializer(\n\t\t\t\t\t\tnew ConditionEvaluationReportLoggingListener(LogLevel.INFO))\n\t\t\t\t.withPropertyValues(\"spring.security.user.password=password\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/actuator/e2\").exchange().expectStatus()\n\t\t\t\t\t\t\t.isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/actuator/e2\")\n\t\t\t\t\t\t\t.header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","date":"2018-10-16 20:31:35","endLine":77,"groupId":"14904","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toAllEndpointsShouldMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1a/ab2766083f62c14809ccfcd1453c04ebbf5b59.src","preCode":"\tpublic void toAllEndpointsShouldMatch() {\n\t\tgetContextRunner()\n\t\t\t\t.withInitializer(\n\t\t\t\t\t\tnew ConditionEvaluationReportLoggingListener(LogLevel.INFO))\n\t\t\t\t.withPropertyValues(\"spring.security.user.password=password\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/actuator/e2\").exchange().expectStatus()\n\t\t\t\t\t\t\t.isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/actuator/e2\")\n\t\t\t\t\t\t\t.header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/AbstractEndpointRequestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"NB"}],"commitId":"fc6c07ad3c18718df7cf89370f44e19ce4293631","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-11-29 09:41:11","modifiedFileCount":"6","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid toAnyEndpointWhenApplicationPathSetShouldMatch() {\n\t\tgetContextRunner()\n\t\t\t\t.withPropertyValues(\"spring.jersey.application-path=/admin\", \"spring.security.user.password=password\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\").exchange().expectStatus().isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\").header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":100,"groupId":"14904","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toAnyEndpointWhenApplicationPathSetShouldMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c4/23e7bca813162242c61d3406140ce63ebcd5e4.src","preCode":"\tpublic void toAnyEndpointWhenApplicationPathSetShouldMatch() {\n\t\tgetContextRunner()\n\t\t\t\t.withPropertyValues(\"spring.jersey.application-path=/admin\", \"spring.security.user.password=password\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\").exchange().expectStatus().isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\").header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/JerseyEndpointRequestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid toAllEndpointsShouldMatch() {\n\t\tgetContextRunner().withInitializer(new ConditionEvaluationReportLoggingListener(LogLevel.INFO))\n\t\t\t\t.withPropertyValues(\"spring.security.user.password=password\").run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/actuator/e2\").exchange().expectStatus().isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/actuator/e2\").header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":71,"groupId":"14904","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"toAllEndpointsShouldMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d3/fe2413a7db6aa86a8e43188c1ff12fb80304d7.src","preCode":"\tpublic void toAllEndpointsShouldMatch() {\n\t\tgetContextRunner().withInitializer(new ConditionEvaluationReportLoggingListener(LogLevel.INFO))\n\t\t\t\t.withPropertyValues(\"spring.security.user.password=password\").run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/actuator/e2\").exchange().expectStatus().isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/actuator/e2\").header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/AbstractEndpointRequestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-11-27 20:50:50","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid toAnyEndpointWhenApplicationPathSetShouldMatch() {\n\t\tgetContextRunner()\n\t\t\t\t.withPropertyValues(\"spring.jersey.application-path=/admin\", \"spring.security.user.password=password\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\").exchange().expectStatus().isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\").header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":100,"groupId":"10700","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"toAnyEndpointWhenApplicationPathSetShouldMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c4/23e7bca813162242c61d3406140ce63ebcd5e4.src","preCode":"\tvoid toAnyEndpointWhenApplicationPathSetShouldMatch() {\n\t\tgetContextRunner()\n\t\t\t\t.withPropertyValues(\"spring.jersey.application-path=/admin\", \"spring.security.user.password=password\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\").exchange().expectStatus().isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/admin/actuator/e2\").header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/JerseyEndpointRequestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2019-11-27 20:50:50","commitOrder":4,"curCode":"\tvoid toAllEndpointsShouldMatch() {\n\t\tgetContextRunner().withPropertyValues(\"spring.security.user.password=password\").run((context) -> {\n\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\twebTestClient.get().uri(\"/actuator/e2\").exchange().expectStatus().isUnauthorized();\n\t\t\twebTestClient.get().uri(\"/actuator/e2\").header(\"Authorization\", getBasicAuth()).exchange().expectStatus()\n\t\t\t\t\t.isOk();\n\t\t});\n\t}\n","date":"2019-11-27 20:50:50","endLine":67,"groupId":"10700","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"toAllEndpointsShouldMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2e/8d242442d64d7bec7594bd887a731bde492b49.src","preCode":"\tvoid toAllEndpointsShouldMatch() {\n\t\tgetContextRunner().withInitializer(new ConditionEvaluationReportLoggingListener(LogLevel.INFO))\n\t\t\t\t.withPropertyValues(\"spring.security.user.password=password\").run((context) -> {\n\t\t\t\t\tWebTestClient webTestClient = getWebTestClient(context);\n\t\t\t\t\twebTestClient.get().uri(\"/actuator/e2\").exchange().expectStatus().isUnauthorized();\n\t\t\t\t\twebTestClient.get().uri(\"/actuator/e2\").header(\"Authorization\", getBasicAuth()).exchange()\n\t\t\t\t\t\t\t.expectStatus().isOk();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/AbstractEndpointRequestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"cde9c2e853894e5d9d01d073f67f5f76fd935d31","commitMessage":"@@@Merge branch '2.2.x'\n\nCloses gh-19161\n","date":"2019-11-27 20:50:50","modifiedFileCount":"5","status":"M","submitter":"Stephane Nicoll"}]
