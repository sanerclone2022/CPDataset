[{"authorTime":"2017-11-03 05:42:26","codes":[{"authorDate":"2017-11-03 05:42:26","commitOrder":1,"curCode":"\tpublic void sslEnabledMultipleProtocolsConfiguration() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\n\t\tssl.setEnabledProtocols(new String[] {\"TLSv1.1\", \"TLSv1.2\"});\n\t\tssl.setCiphers(new String[] {\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"BRAVO\"});\n\n\t\tSslConnectorCustomizer customizer = new SslConnectorCustomizer(ssl, null);\n\t\tConnector connector = this.tomcat.getConnector();\n\t\tcustomizer.customize(connector);\n\t\tthis.tomcat.start();\n\n\t\tSSLHostConfig sslHostConfig = connector.getProtocolHandler()\n\t\t\t\t.findSslHostConfigs()[0];\n\t\tassertThat(sslHostConfig.getSslProtocol()).isEqualTo(\"TLS\");\n\t\tassertThat(sslHostConfig.getEnabledProtocols())\n\t\t\t\t.containsExactlyInAnyOrder(\"TLSv1.1\", \"TLSv1.2\");\n\t}\n","date":"2017-11-03 20:56:06","endLine":90,"groupId":"13711","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sslEnabledMultipleProtocolsConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/65/5797f3f7a2af98fd2b86efacf099753999f942.src","preCode":"\tpublic void sslEnabledMultipleProtocolsConfiguration() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\n\t\tssl.setEnabledProtocols(new String[] {\"TLSv1.1\", \"TLSv1.2\"});\n\t\tssl.setCiphers(new String[] {\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"BRAVO\"});\n\n\t\tSslConnectorCustomizer customizer = new SslConnectorCustomizer(ssl, null);\n\t\tConnector connector = this.tomcat.getConnector();\n\t\tcustomizer.customize(connector);\n\t\tthis.tomcat.start();\n\n\t\tSSLHostConfig sslHostConfig = connector.getProtocolHandler()\n\t\t\t\t.findSslHostConfigs()[0];\n\t\tassertThat(sslHostConfig.getSslProtocol()).isEqualTo(\"TLS\");\n\t\tassertThat(sslHostConfig.getEnabledProtocols())\n\t\t\t\t.containsExactlyInAnyOrder(\"TLSv1.1\", \"TLSv1.2\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/SslConnectorCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"},{"authorDate":"2017-11-03 05:42:26","commitOrder":1,"curCode":"\tpublic void sslEnabledProtocolsConfiguration() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\n\t\tssl.setEnabledProtocols(new String[] {\"TLSv1.2\"});\n\t\tssl.setCiphers(new String[] {\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"BRAVO\"});\n\n\t\tSslConnectorCustomizer customizer = new SslConnectorCustomizer(ssl, null);\n\t\tConnector connector = this.tomcat.getConnector();\n\t\tcustomizer.customize(connector);\n\t\tthis.tomcat.start();\n\n\t\tSSLHostConfig sslHostConfig = connector.getProtocolHandler()\n\t\t\t\t.findSslHostConfigs()[0];\n\t\tassertThat(sslHostConfig.getSslProtocol()).isEqualTo(\"TLS\");\n\t\tassertThat(sslHostConfig.getEnabledProtocols()).containsExactly(\"TLSv1.2\");\n\t}\n","date":"2017-11-03 20:56:06","endLine":110,"groupId":"13711","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sslEnabledProtocolsConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/65/5797f3f7a2af98fd2b86efacf099753999f942.src","preCode":"\tpublic void sslEnabledProtocolsConfiguration() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\n\t\tssl.setEnabledProtocols(new String[] {\"TLSv1.2\"});\n\t\tssl.setCiphers(new String[] {\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"BRAVO\"});\n\n\t\tSslConnectorCustomizer customizer = new SslConnectorCustomizer(ssl, null);\n\t\tConnector connector = this.tomcat.getConnector();\n\t\tcustomizer.customize(connector);\n\t\tthis.tomcat.start();\n\n\t\tSSLHostConfig sslHostConfig = connector.getProtocolHandler()\n\t\t\t\t.findSslHostConfigs()[0];\n\t\tassertThat(sslHostConfig.getSslProtocol()).isEqualTo(\"TLS\");\n\t\tassertThat(sslHostConfig.getEnabledProtocols()).containsExactly(\"TLSv1.2\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/SslConnectorCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"}],"commitId":"7f58db7d0e9084881f4171a9cc5ac4ae19647598","commitMessage":"@@@Apply TLS configuration to reactive web servers\n\nThis commit applies the SSL configuration to the following reactive web\nservers: Jetty.  Tomcat.  Undertow.  Reactor Netty.\n\nCloses gh-9431\n","date":"2017-11-03 20:56:06","modifiedFileCount":"10","status":"B","submitter":"Brian Clozel"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid sslEnabledMultipleProtocolsConfiguration() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setEnabledProtocols(new String[] { \"TLSv1.1\", \"TLSv1.2\" });\n\t\tssl.setCiphers(new String[] { \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"BRAVO\" });\n\t\tSslConnectorCustomizer customizer = new SslConnectorCustomizer(ssl, null);\n\t\tConnector connector = this.tomcat.getConnector();\n\t\tcustomizer.customize(connector);\n\t\tthis.tomcat.start();\n\t\tSSLHostConfig sslHostConfig = connector.getProtocolHandler().findSslHostConfigs()[0];\n\t\tassertThat(sslHostConfig.getSslProtocol()).isEqualTo(\"TLS\");\n\t\tassertThat(sslHostConfig.getEnabledProtocols()).containsExactlyInAnyOrder(\"TLSv1.1\", \"TLSv1.2\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":107,"groupId":"102051","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sslEnabledMultipleProtocolsConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bf/a1f9101abedaf607a3b2bb2a3dcbb2b3df0a17.src","preCode":"\tpublic void sslEnabledMultipleProtocolsConfiguration() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setEnabledProtocols(new String[] { \"TLSv1.1\", \"TLSv1.2\" });\n\t\tssl.setCiphers(new String[] { \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"BRAVO\" });\n\t\tSslConnectorCustomizer customizer = new SslConnectorCustomizer(ssl, null);\n\t\tConnector connector = this.tomcat.getConnector();\n\t\tcustomizer.customize(connector);\n\t\tthis.tomcat.start();\n\t\tSSLHostConfig sslHostConfig = connector.getProtocolHandler().findSslHostConfigs()[0];\n\t\tassertThat(sslHostConfig.getSslProtocol()).isEqualTo(\"TLS\");\n\t\tassertThat(sslHostConfig.getEnabledProtocols()).containsExactlyInAnyOrder(\"TLSv1.1\", \"TLSv1.2\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/SslConnectorCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid sslEnabledProtocolsConfiguration() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setEnabledProtocols(new String[] { \"TLSv1.2\" });\n\t\tssl.setCiphers(new String[] { \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"BRAVO\" });\n\t\tSslConnectorCustomizer customizer = new SslConnectorCustomizer(ssl, null);\n\t\tConnector connector = this.tomcat.getConnector();\n\t\tcustomizer.customize(connector);\n\t\tthis.tomcat.start();\n\t\tSSLHostConfig sslHostConfig = connector.getProtocolHandler().findSslHostConfigs()[0];\n\t\tassertThat(sslHostConfig.getSslProtocol()).isEqualTo(\"TLS\");\n\t\tassertThat(sslHostConfig.getEnabledProtocols()).containsExactly(\"TLSv1.2\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":123,"groupId":"102051","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sslEnabledProtocolsConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bf/a1f9101abedaf607a3b2bb2a3dcbb2b3df0a17.src","preCode":"\tpublic void sslEnabledProtocolsConfiguration() throws Exception {\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyPassword(\"password\");\n\t\tssl.setKeyStore(\"src/test/resources/test.jks\");\n\t\tssl.setEnabledProtocols(new String[] { \"TLSv1.2\" });\n\t\tssl.setCiphers(new String[] { \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"BRAVO\" });\n\t\tSslConnectorCustomizer customizer = new SslConnectorCustomizer(ssl, null);\n\t\tConnector connector = this.tomcat.getConnector();\n\t\tcustomizer.customize(connector);\n\t\tthis.tomcat.start();\n\t\tSSLHostConfig sslHostConfig = connector.getProtocolHandler().findSslHostConfigs()[0];\n\t\tassertThat(sslHostConfig.getSslProtocol()).isEqualTo(\"TLS\");\n\t\tassertThat(sslHostConfig.getEnabledProtocols()).containsExactly(\"TLSv1.2\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/SslConnectorCustomizerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
