[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void parentFirstWithDifferentProfile() throws Exception {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\")\n\t\t\t\t\t\t.child(ChildConfig.class).profiles(\"admin\")\n\t\t\t\t\t\t.web(WebApplicationType.NONE);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(\"node\", \"admin\"))\n\t\t\t\t.isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\"))\n\t\t\t\t.isFalse();\n\t}\n","date":"2017-10-05 11:18:56","endLine":230,"groupId":"10204","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parentFirstWithDifferentProfile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e3/64aedc68f93bb69b87e13c8ef14309baaf523d.src","preCode":"\tpublic void parentFirstWithDifferentProfile() throws Exception {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\")\n\t\t\t\t\t\t.child(ChildConfig.class).profiles(\"admin\")\n\t\t\t\t\t\t.web(WebApplicationType.NONE);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(\"node\", \"admin\"))\n\t\t\t\t.isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\"))\n\t\t\t\t.isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void parentWithDifferentProfile() throws Exception {\n\t\tSpringApplicationBuilder shared = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\");\n\t\tSpringApplicationBuilder application = shared.child(ChildConfig.class)\n\t\t\t\t.profiles(\"admin\").web(WebApplicationType.NONE);\n\t\tshared.profiles(\"parent\");\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(\"node\", \"admin\"))\n\t\t\t\t.isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"node\",\n\t\t\t\t\"parent\")).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\"))\n\t\t\t\t.isFalse();\n\t}\n","date":"2017-10-05 11:18:56","endLine":246,"groupId":"10202","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parentWithDifferentProfile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e3/64aedc68f93bb69b87e13c8ef14309baaf523d.src","preCode":"\tpublic void parentWithDifferentProfile() throws Exception {\n\t\tSpringApplicationBuilder shared = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\");\n\t\tSpringApplicationBuilder application = shared.child(ChildConfig.class)\n\t\t\t\t.profiles(\"admin\").web(WebApplicationType.NONE);\n\t\tshared.profiles(\"parent\");\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(\"node\", \"admin\"))\n\t\t\t\t.isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"node\",\n\t\t\t\t\"parent\")).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\"))\n\t\t\t\t.isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void parentFirstWithDifferentProfile() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\")\n\t\t\t\t\t\t.child(ChildConfig.class).profiles(\"admin\")\n\t\t\t\t\t\t.web(WebApplicationType.NONE);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(\"node\", \"admin\"))\n\t\t\t\t.isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\"))\n\t\t\t\t.isFalse();\n\t}\n","date":"2017-12-12 18:57:30","endLine":230,"groupId":"10204","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parentFirstWithDifferentProfile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/69/857218fc9112c7b29f53e94d8e3ee47414318d.src","preCode":"\tpublic void parentFirstWithDifferentProfile() throws Exception {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\")\n\t\t\t\t\t\t.child(ChildConfig.class).profiles(\"admin\")\n\t\t\t\t\t\t.web(WebApplicationType.NONE);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(\"node\", \"admin\"))\n\t\t\t\t.isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\"))\n\t\t\t\t.isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void parentWithDifferentProfile() {\n\t\tSpringApplicationBuilder shared = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\");\n\t\tSpringApplicationBuilder application = shared.child(ChildConfig.class)\n\t\t\t\t.profiles(\"admin\").web(WebApplicationType.NONE);\n\t\tshared.profiles(\"parent\");\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(\"node\", \"admin\"))\n\t\t\t\t.isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"node\",\n\t\t\t\t\"parent\")).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\"))\n\t\t\t\t.isFalse();\n\t}\n","date":"2017-12-12 18:57:30","endLine":246,"groupId":"10202","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parentWithDifferentProfile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/69/857218fc9112c7b29f53e94d8e3ee47414318d.src","preCode":"\tpublic void parentWithDifferentProfile() throws Exception {\n\t\tSpringApplicationBuilder shared = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\");\n\t\tSpringApplicationBuilder application = shared.child(ChildConfig.class)\n\t\t\t\t.profiles(\"admin\").web(WebApplicationType.NONE);\n\t\tshared.profiles(\"parent\");\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(\"node\", \"admin\"))\n\t\t\t\t.isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"node\",\n\t\t\t\t\"parent\")).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\"))\n\t\t\t\t.isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-06-15 22:29:40","codes":[{"authorDate":"2018-06-15 22:29:40","commitOrder":3,"curCode":"\tpublic void parentFirstWithDifferentProfile() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\")\n\t\t\t\t\t\t.child(ChildConfig.class).profiles(\"admin\")\n\t\t\t\t\t\t.web(WebApplicationType.NONE);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment()\n\t\t\t\t.acceptsProfiles(Profiles.of(\"node\", \"admin\"))).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment()\n\t\t\t\t.acceptsProfiles(Profiles.of(\"admin\"))).isFalse();\n\t}\n","date":"2018-06-18 19:05:52","endLine":233,"groupId":"5574","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"parentFirstWithDifferentProfile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2e/e328983e4722b2f61f1c098f155c555a56d96a.src","preCode":"\tpublic void parentFirstWithDifferentProfile() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\")\n\t\t\t\t\t\t.child(ChildConfig.class).profiles(\"admin\")\n\t\t\t\t\t\t.web(WebApplicationType.NONE);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(\"node\", \"admin\"))\n\t\t\t\t.isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\"))\n\t\t\t\t.isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"},{"authorDate":"2018-06-15 22:29:40","commitOrder":3,"curCode":"\tpublic void parentWithDifferentProfile() {\n\t\tSpringApplicationBuilder shared = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\");\n\t\tSpringApplicationBuilder application = shared.child(ChildConfig.class)\n\t\t\t\t.profiles(\"admin\").web(WebApplicationType.NONE);\n\t\tshared.profiles(\"parent\");\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment()\n\t\t\t\t.acceptsProfiles(Profiles.of(\"node\", \"admin\"))).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment()\n\t\t\t\t.acceptsProfiles(Profiles.of(\"node\", \"parent\"))).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment()\n\t\t\t\t.acceptsProfiles(Profiles.of(\"admin\"))).isFalse();\n\t}\n","date":"2018-06-18 19:05:52","endLine":249,"groupId":"4377","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"parentWithDifferentProfile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2e/e328983e4722b2f61f1c098f155c555a56d96a.src","preCode":"\tpublic void parentWithDifferentProfile() {\n\t\tSpringApplicationBuilder shared = new SpringApplicationBuilder(\n\t\t\t\tExampleConfig.class).profiles(\"node\").properties(\"transport=redis\");\n\t\tSpringApplicationBuilder application = shared.child(ChildConfig.class)\n\t\t\t\t.profiles(\"admin\").web(WebApplicationType.NONE);\n\t\tshared.profiles(\"parent\");\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(\"node\", \"admin\"))\n\t\t\t\t.isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"node\",\n\t\t\t\t\"parent\")).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\"))\n\t\t\t\t.isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"}],"commitId":"a89b2ae46ea6cb40846cd547085f636e31232272","commitMessage":"@@@Support profile expression in yml profile matching\n\nCloses gh-12469\n","date":"2018-06-18 19:05:52","modifiedFileCount":"5","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid parentFirstWithDifferentProfile() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ExampleConfig.class).profiles(\"node\")\n\t\t\t\t.properties(\"transport=redis\").child(ChildConfig.class).profiles(\"admin\").web(WebApplicationType.NONE);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(Profiles.of(\"node\", \"admin\"))).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(Profiles.of(\"admin\"))).isFalse();\n\t}\n","date":"2019-06-07 19:25:54","endLine":202,"groupId":"101191","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"parentFirstWithDifferentProfile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d9/8e84ed595eafaea6f64f84214beb582d8a0ead.src","preCode":"\tpublic void parentFirstWithDifferentProfile() {\n\t\tSpringApplicationBuilder application = new SpringApplicationBuilder(ExampleConfig.class).profiles(\"node\")\n\t\t\t\t.properties(\"transport=redis\").child(ChildConfig.class).profiles(\"admin\").web(WebApplicationType.NONE);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(Profiles.of(\"node\", \"admin\"))).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(Profiles.of(\"admin\"))).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid parentWithDifferentProfile() {\n\t\tSpringApplicationBuilder shared = new SpringApplicationBuilder(ExampleConfig.class).profiles(\"node\")\n\t\t\t\t.properties(\"transport=redis\");\n\t\tSpringApplicationBuilder application = shared.child(ChildConfig.class).profiles(\"admin\")\n\t\t\t\t.web(WebApplicationType.NONE);\n\t\tshared.profiles(\"parent\");\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(Profiles.of(\"node\", \"admin\"))).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(Profiles.of(\"node\", \"parent\"))).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(Profiles.of(\"admin\"))).isFalse();\n\t}\n","date":"2019-06-07 19:25:54","endLine":215,"groupId":"101191","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"parentWithDifferentProfile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d9/8e84ed595eafaea6f64f84214beb582d8a0ead.src","preCode":"\tpublic void parentWithDifferentProfile() {\n\t\tSpringApplicationBuilder shared = new SpringApplicationBuilder(ExampleConfig.class).profiles(\"node\")\n\t\t\t\t.properties(\"transport=redis\");\n\t\tSpringApplicationBuilder application = shared.child(ChildConfig.class).profiles(\"admin\")\n\t\t\t\t.web(WebApplicationType.NONE);\n\t\tshared.profiles(\"parent\");\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(Profiles.of(\"node\", \"admin\"))).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(Profiles.of(\"node\", \"parent\"))).isTrue();\n\t\tassertThat(this.context.getParent().getEnvironment().acceptsProfiles(Profiles.of(\"admin\"))).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
