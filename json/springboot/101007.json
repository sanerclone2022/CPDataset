[{"authorTime":"2018-08-30 19:08:42","codes":[{"authorDate":"2018-08-30 19:08:42","commitOrder":1,"curCode":"\tpublic MeterFilter metricsHttpServerUriTagFilter() {\n\t\tString metricName = this.properties.getWeb().getServer().getRequestsMetricName();\n\t\tMeterFilter filter = new OnlyOnceLoggingDenyMeterFilter(() -> String\n\t\t\t\t.format(\"Reached the maximum number of URI tags for '%s'.\", metricName));\n\t\treturn MeterFilter.maximumAllowableTags(metricName, \"uri\",\n\t\t\t\tthis.properties.getWeb().getServer().getMaxUriTags(), filter);\n\t}\n","date":"2018-08-30 19:08:42","endLine":80,"groupId":"7550","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"metricsHttpServerUriTagFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/40/d79038d6e2903f1cc47ca52c23845ea0bc24b3.src","preCode":"\tpublic MeterFilter metricsHttpServerUriTagFilter() {\n\t\tString metricName = this.properties.getWeb().getServer().getRequestsMetricName();\n\t\tMeterFilter filter = new OnlyOnceLoggingDenyMeterFilter(() -> String\n\t\t\t\t.format(\"Reached the maximum number of URI tags for '%s'.\", metricName));\n\t\treturn MeterFilter.maximumAllowableTags(metricName, \"uri\",\n\t\t\t\tthis.properties.getWeb().getServer().getMaxUriTags(), filter);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfiguration.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"},{"authorDate":"2018-08-30 19:08:42","commitOrder":1,"curCode":"\tpublic MeterFilter metricsHttpServerUriTagFilter() {\n\t\tString metricName = this.properties.getWeb().getServer().getRequestsMetricName();\n\t\tMeterFilter filter = new OnlyOnceLoggingDenyMeterFilter(() -> String\n\t\t\t\t.format(\"Reached the maximum number of URI tags for '%s'.\", metricName));\n\t\treturn MeterFilter.maximumAllowableTags(metricName, \"uri\",\n\t\t\t\tthis.properties.getWeb().getServer().getMaxUriTags(), filter);\n\t}\n","date":"2018-08-30 19:08:42","endLine":99,"groupId":"7550","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"metricsHttpServerUriTagFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a6/4036b673d284b6cc08d008423c768546ea1f01.src","preCode":"\tpublic MeterFilter metricsHttpServerUriTagFilter() {\n\t\tString metricName = this.properties.getWeb().getServer().getRequestsMetricName();\n\t\tMeterFilter filter = new OnlyOnceLoggingDenyMeterFilter(() -> String\n\t\t\t\t.format(\"Reached the maximum number of URI tags for '%s'.\", metricName));\n\t\treturn MeterFilter.maximumAllowableTags(metricName, \"uri\",\n\t\t\t\tthis.properties.getWeb().getServer().getMaxUriTags(), filter);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfiguration.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"}],"commitId":"6c26315cd196dea6251933daabf2963952005b08","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-08-30 19:08:42","modifiedFileCount":"6","status":"B","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-01 14:17:42","codes":[{"authorDate":"2019-05-01 14:17:42","commitOrder":2,"curCode":"\tpublic MeterFilter metricsHttpServerUriTagFilter() {\n\t\tString metricName = this.properties.getWeb().getServer().getRequest()\n\t\t\t\t.getMetricName();\n\t\tMeterFilter filter = new OnlyOnceLoggingDenyMeterFilter(() -> String\n\t\t\t\t.format(\"Reached the maximum number of URI tags for '%s'.\", metricName));\n\t\treturn MeterFilter.maximumAllowableTags(metricName, \"uri\",\n\t\t\t\tthis.properties.getWeb().getServer().getMaxUriTags(), filter);\n\t}\n","date":"2019-05-01 14:17:42","endLine":83,"groupId":"101007","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"metricsHttpServerUriTagFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fc/9327ee32598619defbb7eae2c0ede78dcdfc1e.src","preCode":"\tpublic MeterFilter metricsHttpServerUriTagFilter() {\n\t\tString metricName = this.properties.getWeb().getServer().getRequestsMetricName();\n\t\tMeterFilter filter = new OnlyOnceLoggingDenyMeterFilter(() -> String\n\t\t\t\t.format(\"Reached the maximum number of URI tags for '%s'.\", metricName));\n\t\treturn MeterFilter.maximumAllowableTags(metricName, \"uri\",\n\t\t\t\tthis.properties.getWeb().getServer().getMaxUriTags(), filter);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfiguration.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2019-05-01 14:17:42","commitOrder":2,"curCode":"\tpublic MeterFilter metricsHttpServerUriTagFilter() {\n\t\tString metricName = this.properties.getWeb().getServer().getRequest()\n\t\t\t\t.getMetricName();\n\t\tMeterFilter filter = new OnlyOnceLoggingDenyMeterFilter(() -> String\n\t\t\t\t.format(\"Reached the maximum number of URI tags for '%s'.\", metricName));\n\t\treturn MeterFilter.maximumAllowableTags(metricName, \"uri\",\n\t\t\t\tthis.properties.getWeb().getServer().getMaxUriTags(), filter);\n\t}\n","date":"2019-05-01 14:17:42","endLine":100,"groupId":"101007","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"metricsHttpServerUriTagFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7f/20381eadde413785ca941462f7690ad611ddad.src","preCode":"\tpublic MeterFilter metricsHttpServerUriTagFilter() {\n\t\tString metricName = this.properties.getWeb().getServer().getRequestsMetricName();\n\t\tMeterFilter filter = new OnlyOnceLoggingDenyMeterFilter(() -> String\n\t\t\t\t.format(\"Reached the maximum number of URI tags for '%s'.\", metricName));\n\t\treturn MeterFilter.maximumAllowableTags(metricName, \"uri\",\n\t\t\t\tthis.properties.getWeb().getServer().getMaxUriTags(), filter);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfiguration.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"eb028fa77db248e46f9c17ee1fd2f488a0af6a2c","commitMessage":"@@@Merge pull request #15988 from ttddyy\n\n* pr/15988:\n  Polish \"Allow configuration of auto-timed metrics\"\n  Allow configuration of auto-timed metrics\n","date":"2019-05-01 14:17:42","modifiedFileCount":"24","status":"M","submitter":"Stephane Nicoll"}]
