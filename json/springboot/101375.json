[{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2018-09-21 00:49:55","commitOrder":4,"curCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySourceWithUnderscoreValue() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\n\t\t\t\tStandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n\t\t\t\tCollections.singletonMap(\"_\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"bar\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name)).isNull();\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2018-09-21 13:27:06","endLine":118,"groupId":"352","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAdaptSystemEnvironmentPropertySourceWithUnderscoreValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b1/586b537a2627263f187071741e7e6ca7ffcf21.src","preCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySourceWithUnderscoreValue() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\n\t\t\t\tStandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n\t\t\t\tCollections.singletonMap(\"_\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"bar\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name)).isNull();\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"},{"authorDate":"2017-12-12 18:57:24","commitOrder":4,"curCode":"\tpublic void shouldAdaptMultiplePropertySources() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tsources.addLast(new MapPropertySource(\"test1\",\n\t\t\t\tCollections.singletonMap(\"server.po-rt\", \"4567\")));\n\t\tsources.addLast(\n\t\t\t\tnew MapPropertySource(\"test2\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"4567\");\n\t\tassertThat(iterator.next()\n\t\t\t\t.getConfigurationProperty(ConfigurationPropertyName.of(\"a\")).getValue())\n\t\t\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2017-12-12 18:57:30","endLine":127,"groupId":"950","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAdaptMultiplePropertySources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d7/53c78e84dba4e2fddd0d3fb0577444eaf31b4d.src","preCode":"\tpublic void shouldAdaptMultiplePropertySources() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\",\n\t\t\t\tCollections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tsources.addLast(new MapPropertySource(\"test1\",\n\t\t\t\tCollections.singletonMap(\"server.po-rt\", \"4567\")));\n\t\tsources.addLast(\n\t\t\t\tnew MapPropertySource(\"test2\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(\n\t\t\t\tsources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"1234\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue())\n\t\t\t\t.isEqualTo(\"4567\");\n\t\tassertThat(iterator.next()\n\t\t\t\t.getConfigurationProperty(ConfigurationPropertyName.of(\"a\")).getValue())\n\t\t\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"NB"}],"commitId":"d0de4657d4fa7c0b181a2d6ef05402deee5b5785","commitMessage":"@@@Reduce ConfigurationPropertyName GC pressure\n\nRewrite `ConfigurationPropertyName` in an attempt to consume less memory\nand to reduce GC pressure from `toString()`.\n\nPrior to this commit the `toString()` method would always construct a\nnew value from the name elements. This is sub-optimal since on on many\noccasions the `ConfigurationPropertyName` is created from an already\nwell-formed String. The updated code now attempts to directly use the\noriginal value for both `toString` and `equals` whenever possible.\n\nFurther refinements have also been made to the way that elements are\nstored. Rather than a list or objects.  we now use arrays that contains\nthe split points and types. This helps to reduce the amount of memory\nrequired to store the name.\n\nCloses gh-13414\n","date":"2018-09-21 13:27:06","modifiedFileCount":"4","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid shouldAdaptSystemEnvironmentPropertySourceWithUnderscoreValue() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n\t\t\t\tCollections.singletonMap(\"_\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"bar\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name)).isNull();\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2019-06-07 19:25:54","endLine":101,"groupId":"101375","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldAdaptSystemEnvironmentPropertySourceWithUnderscoreValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/ed843b7c895bdebb8e4c96c648b80290a90d4d.src","preCode":"\tpublic void shouldAdaptSystemEnvironmentPropertySourceWithUnderscoreValue() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n\t\t\t\tCollections.singletonMap(\"_\", \"1234\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"bar\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name)).isNull();\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid shouldAdaptMultiplePropertySources() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\", Collections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tsources.addLast(new MapPropertySource(\"test1\", Collections.singletonMap(\"server.po-rt\", \"4567\")));\n\t\tsources.addLast(new MapPropertySource(\"test2\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"1234\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"4567\");\n\t\tassertThat(iterator.next().getConfigurationProperty(ConfigurationPropertyName.of(\"a\")).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","date":"2019-06-07 19:25:54","endLine":116,"groupId":"101375","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldAdaptMultiplePropertySources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/ed843b7c895bdebb8e4c96c648b80290a90d4d.src","preCode":"\tpublic void shouldAdaptMultiplePropertySources() {\n\t\tMutablePropertySources sources = new MutablePropertySources();\n\t\tsources.addLast(new SystemEnvironmentPropertySource(\"system\", Collections.singletonMap(\"SERVER_PORT\", \"1234\")));\n\t\tsources.addLast(new MapPropertySource(\"test1\", Collections.singletonMap(\"server.po-rt\", \"4567\")));\n\t\tsources.addLast(new MapPropertySource(\"test2\", Collections.singletonMap(\"a\", \"b\")));\n\t\tIterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator();\n\t\tConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"1234\");\n\t\tassertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"4567\");\n\t\tassertThat(iterator.next().getConfigurationProperty(ConfigurationPropertyName.of(\"a\")).getValue())\n\t\t\t\t.isEqualTo(\"b\");\n\t\tassertThat(iterator.hasNext()).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySourcesTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
