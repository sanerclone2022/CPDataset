[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void customDefaultProfileAndActiveFromFile() throws Exception {\n\t\t\r\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tthis.context = application.run(\"--spring.config.name=customprofile\",\n\t\t\t\t\"--spring.profiles.default=customdefault\");\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"customprofile\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-specific\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-customdefault\")).isTrue();\n\t\tassertThat(environment.acceptsProfiles(\"customdefault\")).isTrue();\n\t}\n","date":"2017-10-05 11:18:56","endLine":783,"groupId":"16403","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"customDefaultProfileAndActiveFromFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3c/8f189be0b15d1501efebaee1417acefb7397e1.src","preCode":"\tpublic void customDefaultProfileAndActiveFromFile() throws Exception {\n\t\t\r\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tthis.context = application.run(\"--spring.config.name=customprofile\",\n\t\t\t\t\"--spring.profiles.default=customdefault\");\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"customprofile\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-specific\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-customdefault\")).isTrue();\n\t\tassertThat(environment.acceptsProfiles(\"customdefault\")).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":772,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void localPortIsAvailable() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tnew ServerPortInfoApplicationContextInitializer().initialize(this.context);\n\t\tthis.context.refresh();\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"local.server.port\")).isTrue();\n\t\tassertThat(environment.getProperty(\"local.server.port\")).isEqualTo(\"8080\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":165,"groupId":"4309","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"localPortIsAvailable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e4/320681e82e437aa1d8ddd837f60f992e659d96.src","preCode":"\tpublic void localPortIsAvailable() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tnew ServerPortInfoApplicationContextInitializer().initialize(this.context);\n\t\tthis.context.refresh();\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"local.server.port\")).isTrue();\n\t\tassertThat(environment.getProperty(\"local.server.port\")).isEqualTo(\"8080\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void customDefaultProfileAndActiveFromFile() {\n\t\t\r\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tthis.context = application.run(\"--spring.config.name=customprofile\",\n\t\t\t\t\"--spring.profiles.default=customdefault\");\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"customprofile\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-specific\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-customdefault\")).isTrue();\n\t\tassertThat(environment.acceptsProfiles(\"customdefault\")).isTrue();\n\t}\n","date":"2017-12-12 18:57:30","endLine":806,"groupId":"16403","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"customDefaultProfileAndActiveFromFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/9315fa4cf410bac4dfbdabca74b970b9b497e6.src","preCode":"\tpublic void customDefaultProfileAndActiveFromFile() throws Exception {\n\t\t\r\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tthis.context = application.run(\"--spring.config.name=customprofile\",\n\t\t\t\t\"--spring.profiles.default=customdefault\");\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"customprofile\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-specific\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-customdefault\")).isTrue();\n\t\tassertThat(environment.acceptsProfiles(\"customdefault\")).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":795,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void localPortIsAvailable() {\n\t\taddWebServerFactoryBean();\n\t\tnew ServerPortInfoApplicationContextInitializer().initialize(this.context);\n\t\tthis.context.refresh();\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"local.server.port\")).isTrue();\n\t\tassertThat(environment.getProperty(\"local.server.port\")).isEqualTo(\"8080\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":163,"groupId":"4309","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"localPortIsAvailable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0b/dfdead68209afc728f7b3272774c5180865672.src","preCode":"\tpublic void localPortIsAvailable() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tnew ServerPortInfoApplicationContextInitializer().initialize(this.context);\n\t\tthis.context.refresh();\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"local.server.port\")).isTrue();\n\t\tassertThat(environment.getProperty(\"local.server.port\")).isEqualTo(\"8080\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2018-06-15 22:29:40","commitOrder":3,"curCode":"\tpublic void customDefaultProfileAndActiveFromFile() {\n\t\t\r\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tthis.context = application.run(\"--spring.config.name=customprofile\",\n\t\t\t\t\"--spring.profiles.default=customdefault\");\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"customprofile\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-specific\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-customdefault\")).isTrue();\n\t\tassertThat(environment.acceptsProfiles(Profiles.of(\"customdefault\"))).isTrue();\n\t}\n","date":"2018-06-18 19:05:52","endLine":855,"groupId":"16403","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"customDefaultProfileAndActiveFromFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/48/b80669a572232d6632dbce2b9ce2139c3be6ad.src","preCode":"\tpublic void customDefaultProfileAndActiveFromFile() {\n\t\t\r\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tthis.context = application.run(\"--spring.config.name=customprofile\",\n\t\t\t\t\"--spring.profiles.default=customdefault\");\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"customprofile\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-specific\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-customdefault\")).isTrue();\n\t\tassertThat(environment.acceptsProfiles(\"customdefault\")).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":844,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void localPortIsAvailable() {\n\t\taddWebServerFactoryBean();\n\t\tnew ServerPortInfoApplicationContextInitializer().initialize(this.context);\n\t\tthis.context.refresh();\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"local.server.port\")).isTrue();\n\t\tassertThat(environment.getProperty(\"local.server.port\")).isEqualTo(\"8080\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":163,"groupId":"4309","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"localPortIsAvailable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0b/dfdead68209afc728f7b3272774c5180865672.src","preCode":"\tpublic void localPortIsAvailable() {\n\t\taddWebServerFactoryBean();\n\t\tnew ServerPortInfoApplicationContextInitializer().initialize(this.context);\n\t\tthis.context.refresh();\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"local.server.port\")).isTrue();\n\t\tassertThat(environment.getProperty(\"local.server.port\")).isEqualTo(\"8080\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"}],"commitId":"a89b2ae46ea6cb40846cd547085f636e31232272","commitMessage":"@@@Support profile expression in yml profile matching\n\nCloses gh-12469\n","date":"2018-06-18 19:05:52","modifiedFileCount":"5","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid customDefaultProfileAndActiveFromFile() {\n\t\t\r\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tthis.context = application.run(\"--spring.config.name=customprofile\", \"--spring.profiles.default=customdefault\");\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"customprofile\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-specific\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-customdefault\")).isTrue();\n\t\tassertThat(environment.acceptsProfiles(Profiles.of(\"customdefault\"))).isTrue();\n\t}\n","date":"2019-06-07 19:25:54","endLine":867,"groupId":"101584","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"customDefaultProfileAndActiveFromFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/65/d5909c365ca1adbe9176d001117555481f02c6.src","preCode":"\tpublic void customDefaultProfileAndActiveFromFile() {\n\t\t\r\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tthis.context = application.run(\"--spring.config.name=customprofile\", \"--spring.profiles.default=customdefault\");\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"customprofile\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-specific\")).isTrue();\n\t\tassertThat(environment.containsProperty(\"customprofile-customdefault\")).isTrue();\n\t\tassertThat(environment.acceptsProfiles(Profiles.of(\"customdefault\"))).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":857,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid localPortIsAvailable() {\n\t\taddWebServerFactoryBean();\n\t\tnew ServerPortInfoApplicationContextInitializer().initialize(this.context);\n\t\tthis.context.refresh();\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"local.server.port\")).isTrue();\n\t\tassertThat(environment.getProperty(\"local.server.port\")).isEqualTo(\"8080\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":153,"groupId":"101584","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"localPortIsAvailable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/3fee8ddaf0799dd411d1c235b44bbb2716025e.src","preCode":"\tpublic void localPortIsAvailable() {\n\t\taddWebServerFactoryBean();\n\t\tnew ServerPortInfoApplicationContextInitializer().initialize(this.context);\n\t\tthis.context.refresh();\n\t\tConfigurableEnvironment environment = this.context.getEnvironment();\n\t\tassertThat(environment.containsProperty(\"local.server.port\")).isTrue();\n\t\tassertThat(environment.getProperty(\"local.server.port\")).isEqualTo(\"8080\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
