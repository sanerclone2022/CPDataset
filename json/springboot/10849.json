[{"authorTime":"2019-05-20 19:52:59","codes":[{"authorDate":"2019-05-20 19:52:59","commitOrder":1,"curCode":"\tpublic void outcomeWhenIncludeAllWebAndExcludeMatchesShouldNotMatch() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.exposure.include=*\",\n\t\t\t\t\t\t\"management.endpoints.web.exposure.exclude=spring,info\")\n\t\t\t\t.run((context) -> assertThat(context).hasBean(\"health\").hasBean(\"test\")\n\t\t\t\t\t\t.doesNotHaveBean(\"info\").doesNotHaveBean(\"spring\")\n\t\t\t\t\t\t.doesNotHaveBean(\"shutdown\"));\n\t}\n","date":"2019-05-20 19:52:59","endLine":121,"groupId":"5463","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"outcomeWhenIncludeAllWebAndExcludeMatchesShouldNotMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/40/068d18e573b420b935cbf5ba6e2aad9565f4f6.src","preCode":"\tpublic void outcomeWhenIncludeAllWebAndExcludeMatchesShouldNotMatch() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.exposure.include=*\",\n\t\t\t\t\t\t\"management.endpoints.web.exposure.exclude=spring,info\")\n\t\t\t\t.run((context) -> assertThat(context).hasBean(\"health\").hasBean(\"test\")\n\t\t\t\t\t\t.doesNotHaveBean(\"info\").doesNotHaveBean(\"spring\")\n\t\t\t\t\t\t.doesNotHaveBean(\"shutdown\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnAvailableEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"},{"authorDate":"2019-05-20 19:52:59","commitOrder":1,"curCode":"\tpublic void outcomeWhenIncludeMatchesAndExcludeMatchesShouldNotMatch() {\n\t\tthis.contextRunner.withPropertyValues(\n\t\t\t\t\"management.endpoints.web.exposure.include=info,health,spring,test\",\n\t\t\t\t\"management.endpoints.web.exposure.exclude=spring,info\")\n\t\t\t\t.run((context) -> assertThat(context).hasBean(\"health\").hasBean(\"test\")\n\t\t\t\t\t\t.doesNotHaveBean(\"info\").doesNotHaveBean(\"spring\")\n\t\t\t\t\t\t.doesNotHaveBean(\"shutdown\"));\n\t}\n","date":"2019-05-20 19:52:59","endLine":131,"groupId":"5463","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"outcomeWhenIncludeMatchesAndExcludeMatchesShouldNotMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/40/068d18e573b420b935cbf5ba6e2aad9565f4f6.src","preCode":"\tpublic void outcomeWhenIncludeMatchesAndExcludeMatchesShouldNotMatch() {\n\t\tthis.contextRunner.withPropertyValues(\n\t\t\t\t\"management.endpoints.web.exposure.include=info,health,spring,test\",\n\t\t\t\t\"management.endpoints.web.exposure.exclude=spring,info\")\n\t\t\t\t.run((context) -> assertThat(context).hasBean(\"health\").hasBean(\"test\")\n\t\t\t\t\t\t.doesNotHaveBean(\"info\").doesNotHaveBean(\"spring\")\n\t\t\t\t\t\t.doesNotHaveBean(\"shutdown\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnAvailableEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"26df55761d8483438d8d5a47d9c57c3b3642a73d","commitMessage":"@@@Merge enablement and exposure conditions for Actuator endpoints\n\nThis commit merges the conditions for determining if an endpoint is\navailable in a single condition.  deprecating\n`ConditionalOnEnabledEndpoint` in the process.\n\nCloses gh-16169\n","date":"2019-05-20 19:52:59","modifiedFileCount":"30","status":"B","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid outcomeWhenIncludeAllWebAndExcludeMatchesShouldNotMatch() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.exposure.include=*\",\n\t\t\t\t\t\t\"management.endpoints.web.exposure.exclude=spring,info\")\n\t\t\t\t.run((context) -> assertThat(context).hasBean(\"health\").hasBean(\"test\").doesNotHaveBean(\"info\")\n\t\t\t\t\t\t.doesNotHaveBean(\"spring\").doesNotHaveBean(\"shutdown\"));\n\t}\n","date":"2019-06-07 19:25:54","endLine":109,"groupId":"10849","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"outcomeWhenIncludeAllWebAndExcludeMatchesShouldNotMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cd/40883e76edbd1fe92176af13195c4a3188ed68.src","preCode":"\tpublic void outcomeWhenIncludeAllWebAndExcludeMatchesShouldNotMatch() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.exposure.include=*\",\n\t\t\t\t\t\t\"management.endpoints.web.exposure.exclude=spring,info\")\n\t\t\t\t.run((context) -> assertThat(context).hasBean(\"health\").hasBean(\"test\").doesNotHaveBean(\"info\")\n\t\t\t\t\t\t.doesNotHaveBean(\"spring\").doesNotHaveBean(\"shutdown\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnAvailableEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid outcomeWhenIncludeMatchesAndExcludeMatchesShouldNotMatch() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.exposure.include=info,health,spring,test\",\n\t\t\t\t\t\t\"management.endpoints.web.exposure.exclude=spring,info\")\n\t\t\t\t.run((context) -> assertThat(context).hasBean(\"health\").hasBean(\"test\").doesNotHaveBean(\"info\")\n\t\t\t\t\t\t.doesNotHaveBean(\"spring\").doesNotHaveBean(\"shutdown\"));\n\t}\n","date":"2019-06-07 19:25:54","endLine":118,"groupId":"10849","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"outcomeWhenIncludeMatchesAndExcludeMatchesShouldNotMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cd/40883e76edbd1fe92176af13195c4a3188ed68.src","preCode":"\tpublic void outcomeWhenIncludeMatchesAndExcludeMatchesShouldNotMatch() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.endpoints.web.exposure.include=info,health,spring,test\",\n\t\t\t\t\t\t\"management.endpoints.web.exposure.exclude=spring,info\")\n\t\t\t\t.run((context) -> assertThat(context).hasBean(\"health\").hasBean(\"test\").doesNotHaveBean(\"info\")\n\t\t\t\t\t\t.doesNotHaveBean(\"spring\").doesNotHaveBean(\"shutdown\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnAvailableEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
