[{"authorTime":"2018-04-30 22:34:36","codes":[{"authorDate":"2018-04-30 22:34:36","commitOrder":1,"curCode":"\tpublic void clearCache() {\n\t\tCache a = mockCache(\"a\");\n\t\tCache b = mockCache(\"b\");\n\t\tCachesEndpoint endpoint = new CachesEndpoint(Collections.singletonMap(\n\t\t\t\t\"test\", cacheManager(a, b)));\n\t\tassertThat(endpoint.clearCache(\"a\", null)).isTrue();\n\t\tverify(a).clear();\n\t\tverify(b, never()).clear();\n\t}\n","date":"2018-04-30 22:34:36","endLine":154,"groupId":"8578","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"clearCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/be/ed1adc32393fd36bbcda3da983c4af1aed00c1.src","preCode":"\tpublic void clearCache() {\n\t\tCache a = mockCache(\"a\");\n\t\tCache b = mockCache(\"b\");\n\t\tCachesEndpoint endpoint = new CachesEndpoint(Collections.singletonMap(\n\t\t\t\t\"test\", cacheManager(a, b)));\n\t\tassertThat(endpoint.clearCache(\"a\", null)).isTrue();\n\t\tverify(a).clear();\n\t\tverify(b, never()).clear();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cache/CachesEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2018-04-30 22:34:36","commitOrder":1,"curCode":"\tpublic void clearCacheWithSeveralCacheManagersWithCacheManagerFilter() {\n\t\tMap<String, CacheManager> cacheManagers = new LinkedHashMap<>();\n\t\tCache a = mockCache(\"a\");\n\t\tCache b = mockCache(\"b\");\n\t\tcacheManagers.put(\"test\", cacheManager(a, b));\n\t\tCache anotherA = mockCache(\"a\");\n\t\tcacheManagers.put(\"another\", cacheManager(anotherA));\n\t\tCachesEndpoint endpoint = new CachesEndpoint(cacheManagers);\n\t\tassertThat(endpoint.clearCache(\"a\", \"another\")).isTrue();\n\t\tverify(a, never()).clear();\n\t\tverify(anotherA).clear();\n\t\tverify(b, never()).clear();\n\t}\n","date":"2018-04-30 22:34:36","endLine":182,"groupId":"8581","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"clearCacheWithSeveralCacheManagersWithCacheManagerFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/be/ed1adc32393fd36bbcda3da983c4af1aed00c1.src","preCode":"\tpublic void clearCacheWithSeveralCacheManagersWithCacheManagerFilter() {\n\t\tMap<String, CacheManager> cacheManagers = new LinkedHashMap<>();\n\t\tCache a = mockCache(\"a\");\n\t\tCache b = mockCache(\"b\");\n\t\tcacheManagers.put(\"test\", cacheManager(a, b));\n\t\tCache anotherA = mockCache(\"a\");\n\t\tcacheManagers.put(\"another\", cacheManager(anotherA));\n\t\tCachesEndpoint endpoint = new CachesEndpoint(cacheManagers);\n\t\tassertThat(endpoint.clearCache(\"a\", \"another\")).isTrue();\n\t\tverify(a, never()).clear();\n\t\tverify(anotherA).clear();\n\t\tverify(b, never()).clear();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cache/CachesEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"}],"commitId":"bb614b5968fb52aaadcdf7c9fd6e1c3a39d12a12","commitMessage":"@@@Merge pull request #12216 from Mon\n\n* pr/12216:\n  Polish \"Add cache actuator endpoint\"\n  Add cache actuator endpoint\n","date":"2018-04-30 22:34:36","modifiedFileCount":"1","status":"B","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid clearCache() {\n\t\tCache a = mockCache(\"a\");\n\t\tCache b = mockCache(\"b\");\n\t\tCachesEndpoint endpoint = new CachesEndpoint(Collections.singletonMap(\"test\", cacheManager(a, b)));\n\t\tassertThat(endpoint.clearCache(\"a\", null)).isTrue();\n\t\tverify(a).clear();\n\t\tverify(b, never()).clear();\n\t}\n","date":"2019-06-07 19:25:54","endLine":141,"groupId":"10375","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"clearCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e0/5af5ad1e7f4450817b48d3653b15979f8f0329.src","preCode":"\tpublic void clearCache() {\n\t\tCache a = mockCache(\"a\");\n\t\tCache b = mockCache(\"b\");\n\t\tCachesEndpoint endpoint = new CachesEndpoint(Collections.singletonMap(\"test\", cacheManager(a, b)));\n\t\tassertThat(endpoint.clearCache(\"a\", null)).isTrue();\n\t\tverify(a).clear();\n\t\tverify(b, never()).clear();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cache/CachesEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid clearCacheWithSeveralCacheManagersWithCacheManagerFilter() {\n\t\tMap<String, CacheManager> cacheManagers = new LinkedHashMap<>();\n\t\tCache a = mockCache(\"a\");\n\t\tCache b = mockCache(\"b\");\n\t\tcacheManagers.put(\"test\", cacheManager(a, b));\n\t\tCache anotherA = mockCache(\"a\");\n\t\tcacheManagers.put(\"another\", cacheManager(anotherA));\n\t\tCachesEndpoint endpoint = new CachesEndpoint(cacheManagers);\n\t\tassertThat(endpoint.clearCache(\"a\", \"another\")).isTrue();\n\t\tverify(a, never()).clear();\n\t\tverify(anotherA).clear();\n\t\tverify(b, never()).clear();\n\t}\n","date":"2019-06-07 19:25:54","endLine":167,"groupId":"10375","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"clearCacheWithSeveralCacheManagersWithCacheManagerFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e0/5af5ad1e7f4450817b48d3653b15979f8f0329.src","preCode":"\tpublic void clearCacheWithSeveralCacheManagersWithCacheManagerFilter() {\n\t\tMap<String, CacheManager> cacheManagers = new LinkedHashMap<>();\n\t\tCache a = mockCache(\"a\");\n\t\tCache b = mockCache(\"b\");\n\t\tcacheManagers.put(\"test\", cacheManager(a, b));\n\t\tCache anotherA = mockCache(\"a\");\n\t\tcacheManagers.put(\"another\", cacheManager(anotherA));\n\t\tCachesEndpoint endpoint = new CachesEndpoint(cacheManagers);\n\t\tassertThat(endpoint.clearCache(\"a\", \"another\")).isTrue();\n\t\tverify(a, never()).clear();\n\t\tverify(anotherA).clear();\n\t\tverify(b, never()).clear();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cache/CachesEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
