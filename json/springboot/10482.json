[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void lessThanCapacity() throws Exception {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"b\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null);\n\t\tassertThat(events.size()).isEqualTo(2);\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t\tassertThat(events.get(1).getType()).isEqualTo(\"b\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":52,"groupId":"3439","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"lessThanCapacity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f9/ed23c02be5e771374c0cde3e0bb76e72bd00cd.src","preCode":"\tpublic void lessThanCapacity() throws Exception {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"b\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null);\n\t\tassertThat(events.size()).isEqualTo(2);\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t\tassertThat(events.get(1).getType()).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/audit/InMemoryAuditEventRepositoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void findByPrincipalAndType() throws Exception {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"b\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"c\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"d\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, \"a\");\n\t\tassertThat(events.size()).isEqualTo(1);\n\t\tassertThat(events.get(0).getPrincipal()).isEqualTo(\"dave\");\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":98,"groupId":"8707","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findByPrincipalAndType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f9/ed23c02be5e771374c0cde3e0bb76e72bd00cd.src","preCode":"\tpublic void findByPrincipalAndType() throws Exception {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"b\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"c\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"d\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, \"a\");\n\t\tassertThat(events.size()).isEqualTo(1);\n\t\tassertThat(events.get(0).getPrincipal()).isEqualTo(\"dave\");\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/audit/InMemoryAuditEventRepositoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void lessThanCapacity() {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"b\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null);\n\t\tassertThat(events.size()).isEqualTo(2);\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t\tassertThat(events.get(1).getType()).isEqualTo(\"b\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":52,"groupId":"3439","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"lessThanCapacity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b2/1f8e3522c1a298e3dfe0f61f5456294c9813d6.src","preCode":"\tpublic void lessThanCapacity() throws Exception {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"b\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null);\n\t\tassertThat(events.size()).isEqualTo(2);\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t\tassertThat(events.get(1).getType()).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/audit/InMemoryAuditEventRepositoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void findByPrincipalAndType() {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"b\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"c\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"d\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, \"a\");\n\t\tassertThat(events.size()).isEqualTo(1);\n\t\tassertThat(events.get(0).getPrincipal()).isEqualTo(\"dave\");\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":98,"groupId":"8707","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findByPrincipalAndType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b2/1f8e3522c1a298e3dfe0f61f5456294c9813d6.src","preCode":"\tpublic void findByPrincipalAndType() throws Exception {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"b\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"c\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"d\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, \"a\");\n\t\tassertThat(events.size()).isEqualTo(1);\n\t\tassertThat(events.get(0).getPrincipal()).isEqualTo(\"dave\");\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/audit/InMemoryAuditEventRepositoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2018-01-11 17:54:07","commitOrder":3,"curCode":"\tpublic void lessThanCapacity() {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"b\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, null);\n\t\tassertThat(events.size()).isEqualTo(2);\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t\tassertThat(events.get(1).getType()).isEqualTo(\"b\");\n\t}\n","date":"2018-01-11 17:54:07","endLine":52,"groupId":"8703","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"lessThanCapacity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/93/365ed9292dc4fe1083c8a6d829766c17c5e220.src","preCode":"\tpublic void lessThanCapacity() {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"b\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null);\n\t\tassertThat(events.size()).isEqualTo(2);\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t\tassertThat(events.get(1).getType()).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/audit/InMemoryAuditEventRepositoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void findByPrincipalAndType() {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"b\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"c\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"d\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, \"a\");\n\t\tassertThat(events.size()).isEqualTo(1);\n\t\tassertThat(events.get(0).getPrincipal()).isEqualTo(\"dave\");\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":98,"groupId":"8707","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"findByPrincipalAndType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b2/1f8e3522c1a298e3dfe0f61f5456294c9813d6.src","preCode":"\tpublic void findByPrincipalAndType() {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"b\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"c\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"d\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, \"a\");\n\t\tassertThat(events.size()).isEqualTo(1);\n\t\tassertThat(events.get(0).getPrincipal()).isEqualTo(\"dave\");\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/audit/InMemoryAuditEventRepositoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"}],"commitId":"4b59d5f517a47b7fc024395c01fcb7dee496b9a0","commitMessage":"@@@Rationalize AuditEventRepository contract\n\nCloses gh-11331\n","date":"2018-01-11 17:54:07","modifiedFileCount":"3","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid lessThanCapacity() {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"b\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, null);\n\t\tassertThat(events.size()).isEqualTo(2);\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t\tassertThat(events.get(1).getType()).isEqualTo(\"b\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":48,"groupId":"10482","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"lessThanCapacity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1c/332729d4101590b9d3395fda2ada3c4f622bb1.src","preCode":"\tpublic void lessThanCapacity() {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"b\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, null);\n\t\tassertThat(events.size()).isEqualTo(2);\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t\tassertThat(events.get(1).getType()).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/audit/InMemoryAuditEventRepositoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid findByPrincipalAndType() {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"b\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"c\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"d\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, \"a\");\n\t\tassertThat(events.size()).isEqualTo(1);\n\t\tassertThat(events.get(0).getPrincipal()).isEqualTo(\"dave\");\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":93,"groupId":"10482","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"findByPrincipalAndType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1c/332729d4101590b9d3395fda2ada3c4f622bb1.src","preCode":"\tpublic void findByPrincipalAndType() {\n\t\tInMemoryAuditEventRepository repository = new InMemoryAuditEventRepository();\n\t\trepository.add(new AuditEvent(\"dave\", \"a\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"b\"));\n\t\trepository.add(new AuditEvent(\"dave\", \"c\"));\n\t\trepository.add(new AuditEvent(\"phil\", \"d\"));\n\t\tList<AuditEvent> events = repository.find(\"dave\", null, \"a\");\n\t\tassertThat(events.size()).isEqualTo(1);\n\t\tassertThat(events.get(0).getPrincipal()).isEqualTo(\"dave\");\n\t\tassertThat(events.get(0).getType()).isEqualTo(\"a\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/audit/InMemoryAuditEventRepositoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
