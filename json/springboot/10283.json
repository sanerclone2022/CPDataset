[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void testNaming() throws Exception {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(FooConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = properties.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(2);\n\t\t\tassertThat(map.get(\"name\")).isEqualTo(\"foo\");\n\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":66,"groupId":"5795","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNaming","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/e38d66fd2c4dfa12c04fe0e7393bde5fa8b0a0.src","preCode":"\tpublic void testNaming() throws Exception {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(FooConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = properties.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(2);\n\t\t\tassertThat(map.get(\"name\")).isEqualTo(\"foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointSerializationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void testList() throws Exception {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(ListConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.list[0]:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = properties.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(3);\n\t\t\tassertThat(((List<String>) map.get(\"list\")).get(0)).isEqualTo(\"foo\");\n\t\t});\n\t}\n","date":"2017-10-05 11:18:56","endLine":170,"groupId":"5795","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/e38d66fd2c4dfa12c04fe0e7393bde5fa8b0a0.src","preCode":"\tpublic void testList() throws Exception {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(ListConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.list[0]:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = properties.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(3);\n\t\t\tassertThat(((List<String>) map.get(\"list\")).get(0)).isEqualTo(\"foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointSerializationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(FooConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = properties.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(2);\n\t\t\tassertThat(map.get(\"name\")).isEqualTo(\"foo\");\n\t\t});\n\t}\n","date":"2017-12-12 18:57:30","endLine":68,"groupId":"5795","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNaming","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3b/2f39854d89fa557d863fcb97e52c7885d3f96f.src","preCode":"\tpublic void testNaming() throws Exception {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(FooConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = properties.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(2);\n\t\t\tassertThat(map.get(\"name\")).isEqualTo(\"foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointSerializationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void testList() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(ListConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.list[0]:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = properties.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(3);\n\t\t\tassertThat(((List<String>) map.get(\"list\")).get(0)).isEqualTo(\"foo\");\n\t\t});\n\t}\n","date":"2017-12-12 18:57:30","endLine":195,"groupId":"5795","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3b/2f39854d89fa557d863fcb97e52c7885d3f96f.src","preCode":"\tpublic void testList() throws Exception {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(ListConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.list[0]:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = properties.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(3);\n\t\t\tassertThat(((List<String>) map.get(\"list\")).get(0)).isEqualTo(\"foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointSerializationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-01-15 21:36:20","codes":[{"authorDate":"2018-01-15 21:36:20","commitOrder":3,"curCode":"\tpublic void testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(FooConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = applicationProperties\n\t\t\t\t\t.getContexts().get(context.getId()).getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(2);\n\t\t\tassertThat(map.get(\"name\")).isEqualTo(\"foo\");\n\t\t});\n\t}\n","date":"2018-01-16 17:53:52","endLine":69,"groupId":"5795","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNaming","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e9/752550c9461dddc37247cb9d2a7cb5081ed88a.src","preCode":"\tpublic void testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(FooConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = properties.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(2);\n\t\t\tassertThat(map.get(\"name\")).isEqualTo(\"foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointSerializationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2018-01-15 21:36:20","commitOrder":3,"curCode":"\tpublic void testList() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(ListConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.list[0]:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = applicationProperties\n\t\t\t\t\t.getContexts().get(context.getId()).getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(3);\n\t\t\tassertThat(((List<String>) map.get(\"list\")).get(0)).isEqualTo(\"foo\");\n\t\t});\n\t}\n","date":"2018-01-16 17:53:52","endLine":200,"groupId":"5795","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e9/752550c9461dddc37247cb9d2a7cb5081ed88a.src","preCode":"\tpublic void testList() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner()\n\t\t\t\t.withUserConfiguration(ListConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.list[0]:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tConfigurationPropertiesDescriptor properties = endpoint\n\t\t\t\t\t.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = properties.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(3);\n\t\t\tassertThat(((List<String>) map.get(\"list\")).get(0)).isEqualTo(\"foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointSerializationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"5b8a2f96750c969c06b0765546312c37b22f0282","commitMessage":"@@@Improve context hierarchy handling in Actuator endpoints\n\nPreviously.  a number of Actuator endpoints ignored a context hierarchy\nor assumed that it would always be linear. This commit reworks the\naffected endpoints so that the no longer assume a linear hierarchy.\n\nA side-effect of a non-linear hierarchy is that there may be multiple\ndifferent beans with the same name (in a linear hierarchy.  a bean\nwith the same name as one in an ancestor context.  replaces that bean).\nThe affected endpoints have also been updated so that.  when bean names\nare used as keys.  those keys are grouped by application context. This\nprevents a bean in one context from accidentially overwriting a bean\nin another context.\n\nCloses gh-11019\n","date":"2018-01-16 17:53:52","modifiedFileCount":"25","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner().withUserConfiguration(FooConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = applicationProperties.getContexts().get(context.getId())\n\t\t\t\t\t.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(2);\n\t\t\tassertThat(map.get(\"name\")).isEqualTo(\"foo\");\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":66,"groupId":"10283","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNaming","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b6/d365f9c2e494ae154a6bcf16f7fd07a45e02a6.src","preCode":"\tpublic void testNaming() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner().withUserConfiguration(FooConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.name:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = applicationProperties.getContexts().get(context.getId())\n\t\t\t\t\t.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(2);\n\t\t\tassertThat(map.get(\"name\")).isEqualTo(\"foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointSerializationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid testList() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner().withUserConfiguration(ListConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.list[0]:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = applicationProperties.getContexts().get(context.getId())\n\t\t\t\t\t.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(3);\n\t\t\tassertThat(((List<String>) map.get(\"list\")).get(0)).isEqualTo(\"foo\");\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":183,"groupId":"10283","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b6/d365f9c2e494ae154a6bcf16f7fd07a45e02a6.src","preCode":"\tpublic void testList() {\n\t\tApplicationContextRunner contextRunner = new ApplicationContextRunner().withUserConfiguration(ListConfig.class)\n\t\t\t\t.withPropertyValues(\"foo.list[0]:foo\");\n\t\tcontextRunner.run((context) -> {\n\t\t\tConfigurationPropertiesReportEndpoint endpoint = context\n\t\t\t\t\t.getBean(ConfigurationPropertiesReportEndpoint.class);\n\t\t\tApplicationConfigurationProperties applicationProperties = endpoint.configurationProperties();\n\t\t\tConfigurationPropertiesBeanDescriptor foo = applicationProperties.getContexts().get(context.getId())\n\t\t\t\t\t.getBeans().get(\"foo\");\n\t\t\tassertThat(foo).isNotNull();\n\t\t\tassertThat(foo.getPrefix()).isEqualTo(\"foo\");\n\t\t\tMap<String, Object> map = foo.getProperties();\n\t\t\tassertThat(map).isNotNull();\n\t\t\tassertThat(map).hasSize(3);\n\t\t\tassertThat(((List<String>) map.get(\"list\")).get(0)).isEqualTo(\"foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointSerializationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
