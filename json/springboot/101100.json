[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void getLoggingConfiguration() throws Exception {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem\n\t\t\t\t.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration).isEqualTo(new LoggerConfiguration(getClass().getName(),\n\t\t\t\tLogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","date":"2017-10-05 11:18:56","endLine":199,"groupId":"2140","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getLoggingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4f/9b6f36aba24e999d4bc345404ec6d19332fc65.src","preCode":"\tpublic void getLoggingConfiguration() throws Exception {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem\n\t\t\t\t.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration).isEqualTo(new LoggerConfiguration(getClass().getName(),\n\t\t\t\tLogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/java/JavaLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void getLoggingConfiguration() throws Exception {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem\n\t\t\t\t.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration).isEqualTo(new LoggerConfiguration(getClass().getName(),\n\t\t\t\tLogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","date":"2017-10-05 11:18:56","endLine":221,"groupId":"2140","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getLoggingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2c/5b047bd6727c93556a231337b7b5cc5aaed4f7.src","preCode":"\tpublic void getLoggingConfiguration() throws Exception {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem\n\t\t\t\t.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration).isEqualTo(new LoggerConfiguration(getClass().getName(),\n\t\t\t\tLogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void getLoggingConfiguration() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem\n\t\t\t\t.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration).isEqualTo(new LoggerConfiguration(getClass().getName(),\n\t\t\t\tLogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","date":"2017-12-12 18:57:30","endLine":199,"groupId":"2140","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getLoggingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/02/8a73813cbbaa40e88f1298406f079f7842c6e3.src","preCode":"\tpublic void getLoggingConfiguration() throws Exception {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem\n\t\t\t\t.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration).isEqualTo(new LoggerConfiguration(getClass().getName(),\n\t\t\t\tLogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/java/JavaLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void getLoggingConfiguration() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem\n\t\t\t\t.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration).isEqualTo(new LoggerConfiguration(getClass().getName(),\n\t\t\t\tLogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","date":"2017-12-12 18:57:30","endLine":229,"groupId":"2140","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getLoggingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b8/b7eff226367b8579f475509901f6dc826afa5a.src","preCode":"\tpublic void getLoggingConfiguration() throws Exception {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem\n\t\t\t\t.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration).isEqualTo(new LoggerConfiguration(getClass().getName(),\n\t\t\t\tLogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-06-30 06:53:56","codes":[{"authorDate":"2019-06-30 06:53:56","commitOrder":3,"curCode":"\tvoid getLoggingConfiguration() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration)\n\t\t\t\t.isEqualTo(new LoggerConfiguration(getClass().getName(), LogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","date":"2019-06-30 06:53:56","endLine":185,"groupId":"2140","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getLoggingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/5768e10e00f2b772884e3e6cfac49f4389ad6d.src","preCode":"\tpublic void getLoggingConfiguration() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration)\n\t\t\t\t.isEqualTo(new LoggerConfiguration(getClass().getName(), LogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/java/JavaLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"},{"authorDate":"2019-06-30 06:53:56","commitOrder":3,"curCode":"\tvoid getLoggingConfiguration() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration)\n\t\t\t\t.isEqualTo(new LoggerConfiguration(getClass().getName(), LogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","date":"2019-06-30 06:53:56","endLine":206,"groupId":"2140","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getLoggingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/14/f71ae79ea54790e38db9ccd6e440fc1cfb6154.src","preCode":"\tpublic void getLoggingConfiguration() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration)\n\t\t\t\t.isEqualTo(new LoggerConfiguration(getClass().getName(), LogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"}],"commitId":"a5f430264968166c80f2a3d88bc0f96d0c3c2521","commitMessage":"@@@Merge pull request #17107 from L00kian\n\n* gh-17107:\n  Polish \"Migrate LogbackLoggingSystemTests to JUnit 5\"\n  Migrate LogbackLoggingSystemTests to JUnit 5\n\nCloses gh-17107\n","date":"2019-06-30 06:53:56","modifiedFileCount":"4","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-10-22 07:05:14","codes":[{"authorDate":"2019-06-30 06:53:56","commitOrder":4,"curCode":"\tvoid getLoggingConfiguration() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration)\n\t\t\t\t.isEqualTo(new LoggerConfiguration(getClass().getName(), LogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","date":"2019-06-30 06:53:56","endLine":185,"groupId":"101100","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getLoggingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/5768e10e00f2b772884e3e6cfac49f4389ad6d.src","preCode":"\tvoid getLoggingConfiguration() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration)\n\t\t\t\t.isEqualTo(new LoggerConfiguration(getClass().getName(), LogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/java/JavaLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"N"},{"authorDate":"2020-10-22 07:05:14","commitOrder":4,"curCode":"\tvoid getLoggingConfiguration() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tinitialize(this.initializationContext, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration)\n\t\t\t\t.isEqualTo(new LoggerConfiguration(getClass().getName(), LogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","date":"2020-10-23 03:55:02","endLine":222,"groupId":"101100","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getLoggingConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/64/e8170081155f450b4c996aaaadd19b5ab5346c.src","preCode":"\tvoid getLoggingConfiguration() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n\t\tLoggerConfiguration configuration = this.loggingSystem.getLoggerConfiguration(getClass().getName());\n\t\tassertThat(configuration)\n\t\t\t\t.isEqualTo(new LoggerConfiguration(getClass().getName(), LogLevel.DEBUG, LogLevel.DEBUG));\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"}],"commitId":"1725594a0edae57a50614210f094e59b6edca305","commitMessage":"@@@Rationalize Logback logging properties\n\nDeprecate and provide alternatives for logging properties that are\nspecific to Logback.\n\nThe following Spring Boot properties have been changed:\n\n  * logging.pattern.rolling-file-name ->\n    logging.logback.rollingpolicy.file-name-pattern\n\n  * logging.file.clean-history-on-start ->\n    logging.logback.rollingpolicy.clean-history-on-start\n\n  * logging.file.max-size ->\n    logging.logback.rollingpolicy.max-file-size\n\n  * logging.file.total-size-cap ->\n    logging.logback.rollingpolicy.total-size-cap\n\n  * logging.file.max-history ->\n    logging.logback.rollingpolicy.max-history\n\nAs have the system environment properties that they map to:\n\n  * ROLLING_FILE_NAME_PATTERN ->\n    LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN\n\n  * LOG_FILE_CLEAN_HISTORY_ON_START ->\n    LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START\n\n  * LOG_FILE_MAX_SIZE ->\n    LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE\n\n  * LOG_FILE_TOTAL_SIZE_CAP ->\n    LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP\n\n  * LOG_FILE_MAX_HISTORY ->\n    LOGBACK_ROLLINGPOLICY_MAX_HISTORY\n\nThis commit also cleans up and simplifies `DefaultLogbackConfiguration`.\n\nCloses gh-23609\n","date":"2020-10-23 03:55:02","modifiedFileCount":"8","status":"M","submitter":"Phillip Webb"}]
