[{"authorTime":"2018-10-06 09:15:43","codes":[{"authorDate":"2018-10-06 09:15:43","commitOrder":1,"curCode":"\tpublic void shutdownWhenOwnsSchedulerDoesShutdownScheduler() {\n\t\tPushGatewayTaskScheduler ownedScheduler = mockScheduler(\n\t\t\t\tPushGatewayTaskScheduler.class);\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(\n\t\t\t\tthis.pushGateway, this.registry, ownedScheduler, this.pushRate, \"job\",\n\t\t\t\tthis.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(ownedScheduler).shutdown();\n\t}\n","date":"2018-10-06 09:15:43","endLine":139,"groupId":"9738","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shutdownWhenOwnsSchedulerDoesShutdownScheduler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/b382213a006c06c5f020730812828281f3b0e9.src","preCode":"\tpublic void shutdownWhenOwnsSchedulerDoesShutdownScheduler() {\n\t\tPushGatewayTaskScheduler ownedScheduler = mockScheduler(\n\t\t\t\tPushGatewayTaskScheduler.class);\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(\n\t\t\t\tthis.pushGateway, this.registry, ownedScheduler, this.pushRate, \"job\",\n\t\t\t\tthis.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(ownedScheduler).shutdown();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/prometheus/PrometheusPushGatewayManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"},{"authorDate":"2018-10-06 09:15:43","commitOrder":1,"curCode":"\tpublic void shutdownWhenDoesNotOwnSchedulerDoesNotShutdownScheduler() {\n\t\tThreadPoolTaskScheduler otherScheduler = mockScheduler(\n\t\t\t\tThreadPoolTaskScheduler.class);\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(\n\t\t\t\tthis.pushGateway, this.registry, otherScheduler, this.pushRate, \"job\",\n\t\t\t\tthis.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(otherScheduler, never()).shutdown();\n\t}\n","date":"2018-10-06 09:15:43","endLine":150,"groupId":"9738","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shutdownWhenDoesNotOwnSchedulerDoesNotShutdownScheduler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/b382213a006c06c5f020730812828281f3b0e9.src","preCode":"\tpublic void shutdownWhenDoesNotOwnSchedulerDoesNotShutdownScheduler() {\n\t\tThreadPoolTaskScheduler otherScheduler = mockScheduler(\n\t\t\t\tThreadPoolTaskScheduler.class);\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(\n\t\t\t\tthis.pushGateway, this.registry, otherScheduler, this.pushRate, \"job\",\n\t\t\t\tthis.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(otherScheduler, never()).shutdown();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/prometheus/PrometheusPushGatewayManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"}],"commitId":"f4cc3ade88ceed3cd64c3bc19dbf046b95b90f49","commitMessage":"@@@Merge pull request #14353 from davidkarlsen\n\n* pr/14353:\n  Polish \"Add Prometheus push gateway support\"\n  Add Prometheus push gateway support\n","date":"2018-10-06 09:15:43","modifiedFileCount":"3","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid shutdownWhenOwnsSchedulerDoesShutdownScheduler() {\n\t\tPushGatewayTaskScheduler ownedScheduler = mockScheduler(PushGatewayTaskScheduler.class);\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(this.pushGateway, this.registry,\n\t\t\t\townedScheduler, this.pushRate, \"job\", this.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(ownedScheduler).shutdown();\n\t}\n","date":"2019-06-07 19:25:54","endLine":130,"groupId":"9738","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shutdownWhenOwnsSchedulerDoesShutdownScheduler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b8/41bad39533ff8d38b5cf0b5a0318821eac8bec.src","preCode":"\tpublic void shutdownWhenOwnsSchedulerDoesShutdownScheduler() {\n\t\tPushGatewayTaskScheduler ownedScheduler = mockScheduler(PushGatewayTaskScheduler.class);\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(this.pushGateway, this.registry,\n\t\t\t\townedScheduler, this.pushRate, \"job\", this.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(ownedScheduler).shutdown();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/prometheus/PrometheusPushGatewayManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid shutdownWhenDoesNotOwnSchedulerDoesNotShutdownScheduler() {\n\t\tThreadPoolTaskScheduler otherScheduler = mockScheduler(ThreadPoolTaskScheduler.class);\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(this.pushGateway, this.registry,\n\t\t\t\totherScheduler, this.pushRate, \"job\", this.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(otherScheduler, never()).shutdown();\n\t}\n","date":"2019-06-07 19:25:54","endLine":139,"groupId":"9738","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shutdownWhenDoesNotOwnSchedulerDoesNotShutdownScheduler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b8/41bad39533ff8d38b5cf0b5a0318821eac8bec.src","preCode":"\tpublic void shutdownWhenDoesNotOwnSchedulerDoesNotShutdownScheduler() {\n\t\tThreadPoolTaskScheduler otherScheduler = mockScheduler(ThreadPoolTaskScheduler.class);\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(this.pushGateway, this.registry,\n\t\t\t\totherScheduler, this.pushRate, \"job\", this.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(otherScheduler, never()).shutdown();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/prometheus/PrometheusPushGatewayManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-08-08 22:53:42","codes":[{"authorDate":"2020-08-08 22:53:42","commitOrder":3,"curCode":"\tvoid shutdownWhenOwnsSchedulerDoesShutdownScheduler() {\n\t\tPushGatewayTaskScheduler ownedScheduler = givenScheduleAtFixedRateWillReturnFuture(\n\t\t\t\tmock(PushGatewayTaskScheduler.class));\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(this.pushGateway, this.registry,\n\t\t\t\townedScheduler, this.pushRate, \"job\", this.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(ownedScheduler).shutdown();\n\t}\n","date":"2020-08-10 22:22:03","endLine":127,"groupId":"10523","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shutdownWhenOwnsSchedulerDoesShutdownScheduler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/16/7558f59de7a98fd6e73b28b319fff1190541f4.src","preCode":"\tvoid shutdownWhenOwnsSchedulerDoesShutdownScheduler() {\n\t\tPushGatewayTaskScheduler ownedScheduler = mockScheduler(PushGatewayTaskScheduler.class);\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(this.pushGateway, this.registry,\n\t\t\t\townedScheduler, this.pushRate, \"job\", this.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(ownedScheduler).shutdown();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/prometheus/PrometheusPushGatewayManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2020-08-08 22:53:42","commitOrder":3,"curCode":"\tvoid shutdownWhenDoesNotOwnSchedulerDoesNotShutdownScheduler() {\n\t\tThreadPoolTaskScheduler otherScheduler = givenScheduleAtFixedRateWillReturnFuture(\n\t\t\t\tmock(ThreadPoolTaskScheduler.class));\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(this.pushGateway, this.registry,\n\t\t\t\totherScheduler, this.pushRate, \"job\", this.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(otherScheduler, never()).shutdown();\n\t}\n","date":"2020-08-10 22:22:03","endLine":137,"groupId":"10523","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shutdownWhenDoesNotOwnSchedulerDoesNotShutdownScheduler","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/16/7558f59de7a98fd6e73b28b319fff1190541f4.src","preCode":"\tvoid shutdownWhenDoesNotOwnSchedulerDoesNotShutdownScheduler() {\n\t\tThreadPoolTaskScheduler otherScheduler = mockScheduler(ThreadPoolTaskScheduler.class);\n\t\tPrometheusPushGatewayManager manager = new PrometheusPushGatewayManager(this.pushGateway, this.registry,\n\t\t\t\totherScheduler, this.pushRate, \"job\", this.groupingKey, null);\n\t\tmanager.shutdown();\n\t\tverify(otherScheduler, never()).shutdown();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/prometheus/PrometheusPushGatewayManagerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"969dd35e456e6683dd5b767be2079085ccff3941","commitMessage":"@@@Upgrade to Mockito 3.4.6\n\nCloses gh-22838\n","date":"2020-08-10 22:22:03","modifiedFileCount":"68","status":"M","submitter":"Andy Wilkinson"}]
