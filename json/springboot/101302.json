[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void createWhenMapHasEntriesShouldAdaptMap() throws Exception {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(ConfigurationPropertyName.of(\"foo.baz\"), \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":54,"groupId":"14525","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createWhenMapHasEntriesShouldAdaptMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/d2161631fc1995ee9b93213dc6df593eef4c72.src","preCode":"\tpublic void createWhenMapHasEntriesShouldAdaptMap() throws Exception {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(ConfigurationPropertyName.of(\"foo.baz\"), \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/MapConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void putAllShouldPutEntries() throws Exception {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(\"foo.baz\", \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.putAll(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":73,"groupId":"14525","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"putAllShouldPutEntries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/d2161631fc1995ee9b93213dc6df593eef4c72.src","preCode":"\tpublic void putAllShouldPutEntries() throws Exception {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(\"foo.baz\", \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.putAll(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/MapConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void createWhenMapHasEntriesShouldAdaptMap() {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(ConfigurationPropertyName.of(\"foo.baz\"), \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":54,"groupId":"14525","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createWhenMapHasEntriesShouldAdaptMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/db/0027ba9723f4b0d2ab369814ad5f54e33d44b6.src","preCode":"\tpublic void createWhenMapHasEntriesShouldAdaptMap() throws Exception {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(ConfigurationPropertyName.of(\"foo.baz\"), \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/MapConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void putAllShouldPutEntries() {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(\"foo.baz\", \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.putAll(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":73,"groupId":"14525","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"putAllShouldPutEntries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/db/0027ba9723f4b0d2ab369814ad5f54e33d44b6.src","preCode":"\tpublic void putAllShouldPutEntries() throws Exception {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(\"foo.baz\", \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.putAll(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/MapConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid createWhenMapHasEntriesShouldAdaptMap() {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(ConfigurationPropertyName.of(\"foo.baz\"), \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":49,"groupId":"101302","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"createWhenMapHasEntriesShouldAdaptMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c7/b4b2798ee2e4efb4c92f825de273b60a840bc4.src","preCode":"\tpublic void createWhenMapHasEntriesShouldAdaptMap() {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(ConfigurationPropertyName.of(\"foo.baz\"), \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/MapConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid putAllShouldPutEntries() {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(\"foo.baz\", \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.putAll(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":67,"groupId":"101302","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"putAllShouldPutEntries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c7/b4b2798ee2e4efb4c92f825de273b60a840bc4.src","preCode":"\tpublic void putAllShouldPutEntries() {\n\t\tMap<Object, Object> map = new LinkedHashMap<>();\n\t\tmap.put(\"foo.BAR\", \"spring\");\n\t\tmap.put(\"foo.baz\", \"boot\");\n\t\tMapConfigurationPropertySource source = new MapConfigurationPropertySource();\n\t\tsource.putAll(map);\n\t\tassertThat(getValue(source, \"foo.bar\")).isEqualTo(\"spring\");\n\t\tassertThat(getValue(source, \"foo.baz\")).isEqualTo(\"boot\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/MapConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
