[{"authorTime":"2020-03-21 06:49:28","codes":[{"authorDate":"2020-05-05 19:45:24","commitOrder":5,"curCode":"\tvoid whenContextIsRefreshedThenReactiveWebServerInitializedEventIsPublished() {\n\t\taddWebServerFactoryBean();\n\t\taddHttpHandlerBean();\n\t\tTestApplicationListener listener = new TestApplicationListener();\n\t\tthis.context.addApplicationListener(listener);\n\t\tthis.context.refresh();\n\t\tList<ApplicationEvent> events = listener.receivedEvents();\n\t\tassertThat(events).hasSize(2).extracting(\"class\").containsExactly(ContextRefreshedEvent.class,\n\t\t\t\tReactiveWebServerInitializedEvent.class);\n\t\tReactiveWebServerInitializedEvent initializedEvent = (ReactiveWebServerInitializedEvent) events.get(1);\n\t\tassertThat(initializedEvent.getSource().getPort()).isGreaterThanOrEqualTo(0);\n\t\tassertThat(initializedEvent.getApplicationContext()).isEqualTo(this.context);\n\t}\n","date":"2020-05-05 19:45:24","endLine":105,"groupId":"8097","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"whenContextIsRefreshedThenReactiveWebServerInitializedEventIsPublished","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/87/c5728a7b9eabff6232e8a670eae2219cb68f94.src","preCode":"\tvoid whenContextIsRefreshedThenReactiveWebServerInitializedEventIsPublished() {\n\t\taddWebServerFactoryBean();\n\t\taddHttpHandlerBean();\n\t\tTestApplicationListener listener = new TestApplicationListener();\n\t\tthis.context.addApplicationListener(listener);\n\t\tthis.context.refresh();\n\t\tList<ApplicationEvent> events = listener.receivedEvents();\n\t\tassertThat(events).hasSize(2).extracting(\"class\").containsExactly(ContextRefreshedEvent.class,\n\t\t\t\tReactiveWebServerInitializedEvent.class);\n\t\tReactiveWebServerInitializedEvent initializedEvent = (ReactiveWebServerInitializedEvent) events.get(1);\n\t\tassertThat(initializedEvent.getSource().getPort()).isGreaterThanOrEqualTo(0);\n\t\tassertThat(initializedEvent.getApplicationContext()).isEqualTo(this.context);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"},{"authorDate":"2020-03-21 06:49:28","commitOrder":5,"curCode":"\tvoid ServletWebServerInitializedEventPublished() {\n\t\taddWebServerFactoryBean();\n\t\tthis.context.registerBeanDefinition(\"listener\", new RootBeanDefinition(TestApplicationListener.class));\n\t\tthis.context.refresh();\n\t\tList<ApplicationEvent> events = this.context.getBean(TestApplicationListener.class).receivedEvents();\n\t\tassertThat(events).hasSize(2).extracting(\"class\").contains(ContextRefreshedEvent.class,\n\t\t\t\tServletWebServerInitializedEvent.class);\n\t\tServletWebServerInitializedEvent initializedEvent = (ServletWebServerInitializedEvent) events.get(1);\n\t\tassertThat(initializedEvent.getSource().getPort() >= 0).isTrue();\n\t\tassertThat(initializedEvent.getApplicationContext()).isEqualTo(this.context);\n\t}\n","date":"2020-03-21 06:54:00","endLine":153,"groupId":"2139","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ServletWebServerInitializedEventPublished","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ce/6927d4d867e380f40bac5c07c1b2b990d538b4.src","preCode":"\tvoid ServletWebServerInitializedEventPublished() {\n\t\taddWebServerFactoryBean();\n\t\tthis.context.registerBeanDefinition(\"listener\", new RootBeanDefinition(TestApplicationListener.class));\n\t\tthis.context.refresh();\n\t\tList<ApplicationEvent> events = this.context.getBean(TestApplicationListener.class).receivedEvents();\n\t\tassertThat(events).hasSize(2).extracting(\"class\").contains(ContextRefreshedEvent.class,\n\t\t\t\tServletWebServerInitializedEvent.class);\n\t\tServletWebServerInitializedEvent initializedEvent = (ServletWebServerInitializedEvent) events.get(1);\n\t\tassertThat(initializedEvent.getSource().getPort() >= 0).isTrue();\n\t\tassertThat(initializedEvent.getApplicationContext()).isEqualTo(this.context);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"NB"}],"commitId":"a688ac3f64f3d75a3e0ed3d7e8b58ef941a7ccef","commitMessage":"@@@Improve testing of ReactiveWebServerApplicationContext\n\nCloses gh-21314\n","date":"2020-05-05 19:45:24","modifiedFileCount":"0","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-05-08 01:02:28","codes":[{"authorDate":"2020-05-08 01:02:28","commitOrder":6,"curCode":"\tvoid whenContextIsRefreshedThenReactiveWebServerInitializedEventIsPublished() {\n\t\taddWebServerFactoryBean();\n\t\taddHttpHandlerBean();\n\t\tTestApplicationListener listener = new TestApplicationListener();\n\t\tthis.context.addApplicationListener(listener);\n\t\tthis.context.refresh();\n\t\tList<ApplicationEvent> events = listener.receivedEvents();\n\t\tassertThat(events).hasSize(2).extracting(\"class\").containsExactly(ReactiveWebServerInitializedEvent.class,\n\t\t\t\tContextRefreshedEvent.class);\n\t\tReactiveWebServerInitializedEvent initializedEvent = (ReactiveWebServerInitializedEvent) events.get(0);\n\t\tassertThat(initializedEvent.getSource().getPort()).isGreaterThanOrEqualTo(0);\n\t\tassertThat(initializedEvent.getApplicationContext()).isEqualTo(this.context);\n\t}\n","date":"2020-05-13 02:59:52","endLine":105,"groupId":"101891","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"whenContextIsRefreshedThenReactiveWebServerInitializedEventIsPublished","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a2/17123c4fca151cd65f89fdbbe6558e07d0f96d.src","preCode":"\tvoid whenContextIsRefreshedThenReactiveWebServerInitializedEventIsPublished() {\n\t\taddWebServerFactoryBean();\n\t\taddHttpHandlerBean();\n\t\tTestApplicationListener listener = new TestApplicationListener();\n\t\tthis.context.addApplicationListener(listener);\n\t\tthis.context.refresh();\n\t\tList<ApplicationEvent> events = listener.receivedEvents();\n\t\tassertThat(events).hasSize(2).extracting(\"class\").containsExactly(ContextRefreshedEvent.class,\n\t\t\t\tReactiveWebServerInitializedEvent.class);\n\t\tReactiveWebServerInitializedEvent initializedEvent = (ReactiveWebServerInitializedEvent) events.get(1);\n\t\tassertThat(initializedEvent.getSource().getPort()).isGreaterThanOrEqualTo(0);\n\t\tassertThat(initializedEvent.getApplicationContext()).isEqualTo(this.context);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2020-05-08 01:02:28","commitOrder":6,"curCode":"\tvoid ServletWebServerInitializedEventPublished() {\n\t\taddWebServerFactoryBean();\n\t\tthis.context.registerBeanDefinition(\"listener\", new RootBeanDefinition(TestApplicationListener.class));\n\t\tthis.context.refresh();\n\t\tList<ApplicationEvent> events = this.context.getBean(TestApplicationListener.class).receivedEvents();\n\t\tassertThat(events).hasSize(2).extracting(\"class\").containsExactly(ServletWebServerInitializedEvent.class,\n\t\t\t\tContextRefreshedEvent.class);\n\t\tServletWebServerInitializedEvent initializedEvent = (ServletWebServerInitializedEvent) events.get(0);\n\t\tassertThat(initializedEvent.getSource().getPort() >= 0).isTrue();\n\t\tassertThat(initializedEvent.getApplicationContext()).isEqualTo(this.context);\n\t}\n","date":"2020-05-13 02:59:52","endLine":153,"groupId":"101891","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ServletWebServerInitializedEventPublished","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/26/f30ad358896273a8eda16446c5610255fa1837.src","preCode":"\tvoid ServletWebServerInitializedEventPublished() {\n\t\taddWebServerFactoryBean();\n\t\tthis.context.registerBeanDefinition(\"listener\", new RootBeanDefinition(TestApplicationListener.class));\n\t\tthis.context.refresh();\n\t\tList<ApplicationEvent> events = this.context.getBean(TestApplicationListener.class).receivedEvents();\n\t\tassertThat(events).hasSize(2).extracting(\"class\").contains(ContextRefreshedEvent.class,\n\t\t\t\tServletWebServerInitializedEvent.class);\n\t\tServletWebServerInitializedEvent initializedEvent = (ServletWebServerInitializedEvent) events.get(1);\n\t\tassertThat(initializedEvent.getSource().getPort() >= 0).isTrue();\n\t\tassertThat(initializedEvent.getApplicationContext()).isEqualTo(this.context);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"}],"commitId":"240898121ff8a06d5e3fdc53f992b1130f81cc96","commitMessage":"@@@Use SmartLifecycle for graceful web server shutdown\n\nCloses gh-21325\n","date":"2020-05-13 02:59:52","modifiedFileCount":"32","status":"M","submitter":"Andy Wilkinson"}]
