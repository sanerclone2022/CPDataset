[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void customServerHeader() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setServerHeader(\"MyServer\");\n\t\tthis.webServer = factory.getWebServer(exampleServletRegistration());\n\t\tthis.webServer.start();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"/hello\"));\n\t\tassertThat(response.getHeaders().getFirst(\"server\")).isEqualTo(\"MyServer\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":852,"groupId":"2694","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"customServerHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/779a44c49daf64ead469014da81e6f86fb0528.src","preCode":"\tpublic void customServerHeader() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setServerHeader(\"MyServer\");\n\t\tthis.webServer = factory.getWebServer(exampleServletRegistration());\n\t\tthis.webServer.start();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"/hello\"));\n\t\tassertThat(response.getHeaders().getFirst(\"server\")).isEqualTo(\"MyServer\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":845,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void serverHeaderIsDisabledByDefault() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory.getWebServer(exampleServletRegistration());\n\t\tthis.webServer.start();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"/hello\"));\n\t\tassertThat(response.getHeaders().getFirst(\"server\")).isNull();\n\t}\n","date":"2017-10-05 11:18:56","endLine":861,"groupId":"2694","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"serverHeaderIsDisabledByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/779a44c49daf64ead469014da81e6f86fb0528.src","preCode":"\tpublic void serverHeaderIsDisabledByDefault() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory.getWebServer(exampleServletRegistration());\n\t\tthis.webServer.start();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"/hello\"));\n\t\tassertThat(response.getHeaders().getFirst(\"server\")).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":855,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid customServerHeader() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setServerHeader(\"MyServer\");\n\t\tthis.webServer = factory.getWebServer(exampleServletRegistration());\n\t\tthis.webServer.start();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"/hello\"));\n\t\tassertThat(response.getHeaders().getFirst(\"server\")).isEqualTo(\"MyServer\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":815,"groupId":"102003","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"customServerHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/d43aa3647fe43b229f82a62bb32039d0be8f53.src","preCode":"\tpublic void customServerHeader() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setServerHeader(\"MyServer\");\n\t\tthis.webServer = factory.getWebServer(exampleServletRegistration());\n\t\tthis.webServer.start();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"/hello\"));\n\t\tassertThat(response.getHeaders().getFirst(\"server\")).isEqualTo(\"MyServer\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":808,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid serverHeaderIsDisabledByDefault() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory.getWebServer(exampleServletRegistration());\n\t\tthis.webServer.start();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"/hello\"));\n\t\tassertThat(response.getHeaders().getFirst(\"server\")).isNull();\n\t}\n","date":"2019-06-07 19:25:54","endLine":824,"groupId":"102003","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"serverHeaderIsDisabledByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/d43aa3647fe43b229f82a62bb32039d0be8f53.src","preCode":"\tpublic void serverHeaderIsDisabledByDefault() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory.getWebServer(exampleServletRegistration());\n\t\tthis.webServer.start();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"/hello\"));\n\t\tassertThat(response.getHeaders().getFirst(\"server\")).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":818,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
