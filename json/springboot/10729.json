[{"authorTime":"2017-11-03 09:00:55","codes":[{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\tpublic void cloudFoundryPlatformActive() throws Exception {\n\t\tsetupContextWithCloudEnabled();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils.getField(handlerMapping, \"endpointMapping\");\n\t\tassertThat(endpointMapping.getPath())\n\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","date":"2017-11-03 09:00:55","endLine":93,"groupId":"2195","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0e/e4e385a1cc584858db764f4c98ec3d2a6406b3.src","preCode":"\tpublic void cloudFoundryPlatformActive() throws Exception {\n\t\tsetupContextWithCloudEnabled();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils.getField(handlerMapping, \"endpointMapping\");\n\t\tassertThat(endpointMapping.getPath())\n\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"},{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\tpublic void cloudFoundryPlatformActive() throws Exception {\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping();\n\t\tassertThat(handlerMapping.getEndpointMapping().getPath())\n\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","date":"2017-11-03 09:00:55","endLine":105,"groupId":"2195","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/77d3e16c13b6a119d620f77d7dd7d1bc158f1c.src","preCode":"\tpublic void cloudFoundryPlatformActive() throws Exception {\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping();\n\t\tassertThat(handlerMapping.getEndpointMapping().getPath())\n\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"}],"commitId":"d50fe8874fa442cbd3ea380754e7b412a77aed9a","commitMessage":"@@@Add CF support for reactive actuators\n\nCloses gh-10780\n","date":"2017-11-03 09:00:55","modifiedFileCount":"5","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tsetupContextWithCloudEnabled();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","date":"2017-12-12 18:57:30","endLine":100,"groupId":"2195","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d3/cc6613edffba459f5bd671dc53602e315a294d.src","preCode":"\tpublic void cloudFoundryPlatformActive() throws Exception {\n\t\tsetupContextWithCloudEnabled();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping();\n\t\tassertThat(handlerMapping.getEndpointMapping().getPath())\n\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","date":"2017-12-12 18:57:30","endLine":112,"groupId":"2195","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9e/f59344cf611c5d241148eeaadc40ccfde4aec5.src","preCode":"\tpublic void cloudFoundryPlatformActive() throws Exception {\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping();\n\t\tassertThat(handlerMapping.getEndpointMapping().getPath())\n\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-01-10 12:57:10","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tsetupContextWithCloudEnabled();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","date":"2017-12-12 18:57:30","endLine":100,"groupId":"2195","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d3/cc6613edffba459f5bd671dc53602e315a294d.src","preCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tsetupContextWithCloudEnabled();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"N"},{"authorDate":"2018-01-10 12:57:10","commitOrder":3,"curCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping();\n\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","date":"2018-01-20 12:44:24","endLine":111,"groupId":"2195","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e7/288da5e65a07abed095d1293e6dbb490e739bd.src","preCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping();\n\t\tassertThat(handlerMapping.getEndpointMapping().getPath())\n\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"1d39feffeabf4b94e3f900b941b58e0443d5887a","commitMessage":"@@@Overhaul actuator endpoint code\n\nRefactor several areas of the actuator endpoint code in order to make\nfuture extensions easier. The primary goal is to introduce the concept\nof an `ExposableEndpoint` that has technology specific subclasses and\ncan carry additional data for filters to use. Many other changes have\nbeen made along the way including:\n\n* A new EndpointSupplier interface that allows cleaner separation of\n  supplying vs discovering endpoints. This allows cleaner class names\n  and allows for better auto-configuration since a user can choose to\n  provide their own supplier entirely.\n\n* A `DiscoveredEndpoint` interface that allows the `EndpointFilter`\n  to be greatly simplified. A filter now doesn't need to know about\n  discovery concerns unless absolutely necessary.\n\n* Improved naming and package structure. Many technology specific\n  concerns are now grouped in a better way. Related concerns are\n  co-located and concepts from one area no longer leakage into another.\n\n* Simplified `HandlerMapping` implementations. Many common concerns have\n  been pulled up helping to create simpler subclasses.\n\n* Simplified JMX adapters. Many of the intermediary `Info` classes have\n  been removed. The `DiscoveredJmxOperation` is now responsible for\n  mapping methods to operations.\n\n* A specific @`HealthEndpointCloudFoundryExtension` for Cloud Foundry.\n  The extension logic used to create a \"full\" health endpoint extension\n  has been made explicit.\n\nFixes gh-11428\nFixes gh-11581\n","date":"2018-01-20 12:44:24","modifiedFileCount":"63","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-01-03 03:13:23","codes":[{"authorDate":"2018-01-03 03:13:23","commitOrder":4,"curCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t});\n\t}\n","date":"2018-03-03 10:30:55","endLine":114,"groupId":"2195","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/f5777e431c7382be54b7cc937bd93608ceab3f.src","preCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tsetupContextWithCloudEnabled();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping();\n\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2018-01-03 03:13:23","commitOrder":4,"curCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t});\n\t}\n","date":"2018-03-03 10:30:55","endLine":99,"groupId":"2195","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c9/100d317a86cf8ef992a6e0b5a741387b1d9dea.src","preCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping();\n\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"1c27a8e6e271a86c8600fcfa2b1f221e9023efe9","commitMessage":"@@@Move tests to ApplicationContextRunner\n","date":"2018-03-03 10:30:55","modifiedFileCount":"2","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2018-03-13 07:30:55","codes":[{"authorDate":"2018-03-13 07:30:55","commitOrder":5,"curCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\t\t\t\tassertThat(endpointMapping.getPath())\n\t\t\t\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\t\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedHeaders())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(\"Authorization\",\n\t\t\t\t\t\t\t\t\t\"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t\t\t});\n\t}\n","date":"2018-03-15 05:05:26","endLine":120,"groupId":"2195","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/11/1366da84f09ee18009d12fa38e750b65df230c.src","preCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2018-03-13 07:30:55","commitOrder":5,"curCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\t\t\t\tassertThat(endpointMapping.getPath())\n\t\t\t\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\t\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedHeaders())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(\"Authorization\",\n\t\t\t\t\t\t\t\t\t\"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t\t\t});\n\t}\n","date":"2018-03-15 05:05:26","endLine":103,"groupId":"2195","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/94/e6afde968ca3c3032e3fdea386bf0e8c19026e.src","preCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\tassertThat(corsConfiguration.getAllowedHeaders()).containsAll(\n\t\t\t\t\tArrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"a4b0be089da735c481ede50d66f8abc1d3d2cccd","commitMessage":"@@@Polish\n","date":"2018-03-15 05:05:26","modifiedFileCount":"29","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-03-28 19:48:47","codes":[{"authorDate":"2019-03-28 19:48:47","commitOrder":6,"curCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\t\t\t\tassertThat(endpointMapping.getPath())\n\t\t\t\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\t\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedHeaders())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(\"Authorization\",\n\t\t\t\t\t\t\t\t\t\"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t\t\t});\n\t}\n","date":"2019-03-28 19:48:47","endLine":127,"groupId":"2195","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/e52b48f3711d510072999b9d7d6357be766177.src","preCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\t\t\t\tassertThat(endpointMapping.getPath())\n\t\t\t\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\t\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedHeaders())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(\"Authorization\",\n\t\t\t\t\t\t\t\t\t\"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2019-03-28 19:48:47","commitOrder":6,"curCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\t\t\t\tassertThat(endpointMapping.getPath())\n\t\t\t\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\t\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedHeaders())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(\"Authorization\",\n\t\t\t\t\t\t\t\t\t\"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t\t\t});\n\t}\n","date":"2019-03-28 19:48:47","endLine":105,"groupId":"2195","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/60d415603be0262c4d922a1be7920a98ca5b52.src","preCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"endpointMapping\");\n\t\t\t\t\tassertThat(endpointMapping.getPath())\n\t\t\t\t\t\t\t.isEqualTo(\"/cloudfoundryapplication\");\n\t\t\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedMethods()).containsAll(\n\t\t\t\t\t\t\tArrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedHeaders())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(\"Authorization\",\n\t\t\t\t\t\t\t\t\t\"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"878a635bfb6c28ee135b4f84e12fc09a42d1a3a9","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2019-03-28 19:48:47","modifiedFileCount":"67","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":7,"curCode":"\tvoid cloudFoundryPlatformActive() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\").run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"endpointMapping\");\n\t\t\t\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\t\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedMethods())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedHeaders())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":115,"groupId":"10729","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/ac9ee8d9051b313821e885b1ad75293e602f47.src","preCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\").run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"endpointMapping\");\n\t\t\t\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\t\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedMethods())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedHeaders())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":7,"curCode":"\tvoid cloudFoundryPlatformActive() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\").run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"endpointMapping\");\n\t\t\t\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\t\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedMethods())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedHeaders())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":93,"groupId":"10729","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f9/4072091366163790d53977168bcb9b5a12dd29.src","preCode":"\tpublic void cloudFoundryPlatformActive() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\").run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tEndpointMapping endpointMapping = (EndpointMapping) ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"endpointMapping\");\n\t\t\t\t\tassertThat(endpointMapping.getPath()).isEqualTo(\"/cloudfoundryapplication\");\n\t\t\t\t\tCorsConfiguration corsConfiguration = (CorsConfiguration) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"corsConfiguration\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedOrigins()).contains(\"*\");\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedMethods())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(HttpMethod.GET.name(), HttpMethod.POST.name()));\n\t\t\t\t\tassertThat(corsConfiguration.getAllowedHeaders())\n\t\t\t\t\t\t\t.containsAll(Arrays.asList(\"Authorization\", \"X-Cf-App-Instance\", \"Content-Type\"));\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
