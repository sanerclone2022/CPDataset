[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void ldapIsUp() {\n\t\tLdapTemplate ldapTemplate = mock(LdapTemplate.class);\n\t\tgiven(ldapTemplate.executeReadOnly((ContextExecutor<String>) any()))\n\t\t\t\t.willReturn(\"3\");\n\t\tLdapHealthIndicator healthIndicator = new LdapHealthIndicator(ldapTemplate);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"version\")).isEqualTo(\"3\");\n\t\tverify(ldapTemplate).executeReadOnly((ContextExecutor<String>) any());\n\t}\n","date":"2017-10-05 11:18:56","endLine":68,"groupId":"3000","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ldapIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/f3eb80facc165f4b6c37059efadaa4b6e86b67.src","preCode":"\tpublic void ldapIsUp() {\n\t\tLdapTemplate ldapTemplate = mock(LdapTemplate.class);\n\t\tgiven(ldapTemplate.executeReadOnly((ContextExecutor<String>) any()))\n\t\t\t\t.willReturn(\"3\");\n\t\tLdapHealthIndicator healthIndicator = new LdapHealthIndicator(ldapTemplate);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"version\")).isEqualTo(\"3\");\n\t\tverify(ldapTemplate).executeReadOnly((ContextExecutor<String>) any());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/ldap/LdapHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void ldapIsDown() {\n\t\tLdapTemplate ldapTemplate = mock(LdapTemplate.class);\n\t\tgiven(ldapTemplate.executeReadOnly((ContextExecutor<String>) any()))\n\t\t\t\t.willThrow(new CommunicationException(\n\t\t\t\t\t\tnew javax.naming.CommunicationException(\"Connection failed\")));\n\t\tLdapHealthIndicator healthIndicator = new LdapHealthIndicator(ldapTemplate);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat((String) health.getDetails().get(\"error\"))\n\t\t\t\t.contains(\"Connection failed\");\n\t\tverify(ldapTemplate).executeReadOnly((ContextExecutor<String>) any());\n\t}\n","date":"2017-10-05 11:18:56","endLine":83,"groupId":"7977","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ldapIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/f3eb80facc165f4b6c37059efadaa4b6e86b67.src","preCode":"\tpublic void ldapIsDown() {\n\t\tLdapTemplate ldapTemplate = mock(LdapTemplate.class);\n\t\tgiven(ldapTemplate.executeReadOnly((ContextExecutor<String>) any()))\n\t\t\t\t.willThrow(new CommunicationException(\n\t\t\t\t\t\tnew javax.naming.CommunicationException(\"Connection failed\")));\n\t\tLdapHealthIndicator healthIndicator = new LdapHealthIndicator(ldapTemplate);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat((String) health.getDetails().get(\"error\"))\n\t\t\t\t.contains(\"Connection failed\");\n\t\tverify(ldapTemplate).executeReadOnly((ContextExecutor<String>) any());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/ldap/LdapHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid ldapIsUp() {\n\t\tLdapTemplate ldapTemplate = mock(LdapTemplate.class);\n\t\tgiven(ldapTemplate.executeReadOnly((ContextExecutor<String>) any())).willReturn(\"3\");\n\t\tLdapHealthIndicator healthIndicator = new LdapHealthIndicator(ldapTemplate);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"version\")).isEqualTo(\"3\");\n\t\tverify(ldapTemplate).executeReadOnly((ContextExecutor<String>) any());\n\t}\n","date":"2019-06-07 19:25:54","endLine":50,"groupId":"10486","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"ldapIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/76/e93fe1779fe03782d67d83182d37f5e5ad54be.src","preCode":"\tpublic void ldapIsUp() {\n\t\tLdapTemplate ldapTemplate = mock(LdapTemplate.class);\n\t\tgiven(ldapTemplate.executeReadOnly((ContextExecutor<String>) any())).willReturn(\"3\");\n\t\tLdapHealthIndicator healthIndicator = new LdapHealthIndicator(ldapTemplate);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails().get(\"version\")).isEqualTo(\"3\");\n\t\tverify(ldapTemplate).executeReadOnly((ContextExecutor<String>) any());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/ldap/LdapHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid ldapIsDown() {\n\t\tLdapTemplate ldapTemplate = mock(LdapTemplate.class);\n\t\tgiven(ldapTemplate.executeReadOnly((ContextExecutor<String>) any()))\n\t\t\t\t.willThrow(new CommunicationException(new javax.naming.CommunicationException(\"Connection failed\")));\n\t\tLdapHealthIndicator healthIndicator = new LdapHealthIndicator(ldapTemplate);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat((String) health.getDetails().get(\"error\")).contains(\"Connection failed\");\n\t\tverify(ldapTemplate).executeReadOnly((ContextExecutor<String>) any());\n\t}\n","date":"2019-06-07 19:25:54","endLine":63,"groupId":"10486","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"ldapIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/76/e93fe1779fe03782d67d83182d37f5e5ad54be.src","preCode":"\tpublic void ldapIsDown() {\n\t\tLdapTemplate ldapTemplate = mock(LdapTemplate.class);\n\t\tgiven(ldapTemplate.executeReadOnly((ContextExecutor<String>) any()))\n\t\t\t\t.willThrow(new CommunicationException(new javax.naming.CommunicationException(\"Connection failed\")));\n\t\tLdapHealthIndicator healthIndicator = new LdapHealthIndicator(ldapTemplate);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat((String) health.getDetails().get(\"error\")).contains(\"Connection failed\");\n\t\tverify(ldapTemplate).executeReadOnly((ContextExecutor<String>) any());\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/ldap/LdapHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
