[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2018-01-11 18:15:02","commitOrder":2,"curCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\"));\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","date":"2018-01-11 18:15:02","endLine":114,"groupId":"10219","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getWebServer","params":"(HttpHandlerhttpHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7b/9b86162f6556b734d93b9fe19455d9f9d0629b.src","preCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\"));\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\"));\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","date":"2017-10-05 11:18:56","endLine":186,"groupId":"10219","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getWebServer","params":"(ServletContextInitializer...initializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f8/40905b425dd60da61e7c43bda32a35f2a80b16.src","preCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\"));\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"NB"}],"commitId":"d264af8142440fb071a87229184045d0cf405c4a","commitMessage":"@@@Apply server.tomcat.* config to reactive servers\n\nThis commit applies most `server.tomcat.*` configuration\nproperties to Tomcat when set up as a reactive web server.\n\nSome Servlet-specific properties are not applied:\n\n* server.tomcat.additional-tld-skip-patterns\n* server.tomcat.redirect-context-root\n* server.tomcat.use-relative-redirects\n\nFixes gh-11334\n","date":"2018-01-11 18:15:02","modifiedFileCount":"8","status":"M","submitter":"Brian Clozel"},{"authorTime":"2018-07-28 08:35:43","codes":[{"authorDate":"2018-07-28 08:35:43","commitOrder":3,"curCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","date":"2018-07-28 08:35:43","endLine":113,"groupId":"10219","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getWebServer","params":"(HttpHandlerhttpHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b7/6f1f37bd6450da824383d6c9e7e7bbcceb8cbc.src","preCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\"));\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2018-07-28 08:35:43","commitOrder":3,"curCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","date":"2018-07-28 08:35:43","endLine":175,"groupId":"10219","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getWebServer","params":"(ServletContextInitializer...initializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/64/6b756f8ace017d8af2df44d8fb95d8b9b9098b.src","preCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\"));\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"a6c9c92f2e17251137e3f59899266ead2274d6f7","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-07-28 08:35:43","modifiedFileCount":"358","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-29 03:49:07","codes":[{"authorDate":"2019-05-29 03:49:07","commitOrder":4,"curCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","date":"2019-05-29 03:49:07","endLine":128,"groupId":"10219","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getWebServer","params":"(HttpHandlerhttpHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cd/d7b48ace9aed1bafbaec44f60318d6a52124bb.src","preCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2019-05-29 03:49:07","commitOrder":4,"curCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","date":"2019-05-29 03:49:07","endLine":191,"groupId":"10219","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getWebServer","params":"(ServletContextInitializer...initializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/01/bc47be1e824e5d62645fb4fb964a6deb554530.src","preCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory\n\t\t\t\t: createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"0eb6c0ddd30b3195962f9774342aa19d9a1bbb5e","commitMessage":"@@@Defer disabling registry until Tomcat server is being created\n\nCloses gh-16498\n","date":"2019-05-29 03:49:07","modifiedFileCount":"6","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-06-14 06:11:18","codes":[{"authorDate":"2019-06-14 06:11:18","commitOrder":5,"curCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\tconnector.setThrowOnFailure(true);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","date":"2019-06-14 06:11:18","endLine":127,"groupId":"11650","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getWebServer","params":"(HttpHandlerhttpHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/63/18105b87628fde346f28ecb140a432db928ed5.src","preCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2019-06-14 06:11:18","commitOrder":5,"curCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\tconnector.setThrowOnFailure(true);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","date":"2019-06-14 06:11:18","endLine":190,"groupId":"11650","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getWebServer","params":"(ServletContextInitializer...initializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8b/d3dc7e285be88b58dce973512fddad154f44e5.src","preCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"}],"commitId":"4c7e457582c00aae351e2ad9a97b495c46a71dda","commitMessage":"@@@Improve analysis of tomcat bind exception\n\nUsing the throwOnFailure attribute on the tomcat connector.  we can now\ndetermine if the underlying exception was a BindException and throw\na PortInUseException instead of the generic WebServerException.\n\nCloses gh-7130\n","date":"2019-06-14 06:11:18","modifiedFileCount":"8","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-06-14 06:11:18","codes":[{"authorDate":"2019-06-27 06:40:09","commitOrder":6,"curCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\tconnector.setThrowOnFailure(true);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","date":"2019-06-27 06:42:13","endLine":133,"groupId":"11650","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getWebServer","params":"(HttpHandlerhttpHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/29/32474b528fcd81e35978444511ce0bb7f31ac7.src","preCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\tconnector.setThrowOnFailure(true);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2019-06-14 06:11:18","commitOrder":6,"curCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\tconnector.setThrowOnFailure(true);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","date":"2019-06-14 06:11:18","endLine":190,"groupId":"11650","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getWebServer","params":"(ServletContextInitializer...initializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8b/d3dc7e285be88b58dce973512fddad154f44e5.src","preCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\tconnector.setThrowOnFailure(true);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"N"}],"commitId":"8730f32a78b9d8e6abbf099ed042d7e0257b2213","commitMessage":"@@@Merge pull request #17323 from htztomic\n\n* pr/17323:\n  Provide ability to add additional connectors on reactive Tomcat\n\nCloses gh-17323\n","date":"2019-06-27 06:42:13","modifiedFileCount":"2","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-06-14 06:11:18","codes":[{"authorDate":"2020-03-09 23:55:02","commitOrder":7,"curCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\tconnector.setThrowOnFailure(true);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","date":"2020-03-10 02:12:20","endLine":135,"groupId":"102176","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getWebServer","params":"(HttpHandlerhttpHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4e/22f32a5924d8a4a8bf792fe5b638c0cb4b2425.src","preCode":"\tpublic WebServer getWebServer(HttpHandler httpHandler) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\tconnector.setThrowOnFailure(true);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tTomcatHttpHandlerAdapter servlet = new TomcatHttpHandlerAdapter(httpHandler);\n\t\tprepareContext(tomcat.getHost(), servlet);\n\t\treturn new TomcatWebServer(tomcat, getPort() >= 0);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2019-06-14 06:11:18","commitOrder":7,"curCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\tconnector.setThrowOnFailure(true);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","date":"2019-06-14 06:11:18","endLine":190,"groupId":"102176","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getWebServer","params":"(ServletContextInitializer...initializers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8b/d3dc7e285be88b58dce973512fddad154f44e5.src","preCode":"\tpublic WebServer getWebServer(ServletContextInitializer... initializers) {\n\t\tif (this.disableMBeanRegistry) {\n\t\t\tRegistry.disableRegistry();\n\t\t}\n\t\tTomcat tomcat = new Tomcat();\n\t\tFile baseDir = (this.baseDirectory != null) ? this.baseDirectory : createTempDir(\"tomcat\");\n\t\ttomcat.setBaseDir(baseDir.getAbsolutePath());\n\t\tConnector connector = new Connector(this.protocol);\n\t\tconnector.setThrowOnFailure(true);\n\t\ttomcat.getService().addConnector(connector);\n\t\tcustomizeConnector(connector);\n\t\ttomcat.setConnector(connector);\n\t\ttomcat.getHost().setAutoDeploy(false);\n\t\tconfigureEngine(tomcat.getEngine());\n\t\tfor (Connector additionalConnector : this.additionalTomcatConnectors) {\n\t\t\ttomcat.getService().addConnector(additionalConnector);\n\t\t}\n\t\tprepareContext(tomcat.getHost(), initializers);\n\t\treturn getTomcatWebServer(tomcat);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"N"}],"commitId":"308e1d36759db12f3e49fa158514e6d0c8fd66ed","commitMessage":"@@@Add support for gracefully shutting down the web server\n\nThis commit adds support for gracefully shutting down the embedded\nweb server. When a grace period is configured\n(server.shutdown.grace-period).  upon shutdown.  the web server will no\nlonger permit new requests and will wait for up to the grace period\nfor active requests to complete.\n\nCloses gh-4657\n","date":"2020-03-10 02:12:20","modifiedFileCount":"32","status":"M","submitter":"Andy Wilkinson"}]
