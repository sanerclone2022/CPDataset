[{"authorTime":"2018-10-12 13:24:43","codes":[{"authorDate":"2018-10-12 13:24:43","commitOrder":1,"curCode":"\tpublic void exceptionThrownOnLoadFailureIsRethrown() {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory.getWebServer((context) -> {\n\t\t\tcontext.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0);\n\t\t});\n\t\tassertThatExceptionOfType(WebServerException.class)\n\t\t\t\t.isThrownBy(this.webServer::start)\n\t\t\t\t.satisfies(this::wrapsFailingServletException);\n\t}\n","date":"2018-10-12 13:31:40","endLine":1058,"groupId":"675","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"exceptionThrownOnLoadFailureIsRethrown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/87/1c373fc66ef5f1cc2953d7f86fcc421f3f04b7.src","preCode":"\tpublic void exceptionThrownOnLoadFailureIsRethrown() {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory.getWebServer((context) -> {\n\t\t\tcontext.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0);\n\t\t});\n\t\tassertThatExceptionOfType(WebServerException.class)\n\t\t\t\t.isThrownBy(this.webServer::start)\n\t\t\t\t.satisfies(this::wrapsFailingServletException);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":1050,"status":"B"},{"authorDate":"2018-10-12 13:24:43","commitOrder":1,"curCode":"\tpublic void exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tfactory.addContextCustomizers((context) -> {\n\t\t\tif (context instanceof StandardContext) {\n\t\t\t\t((StandardContext) context).setFailCtxIfServletStartFails(false);\n\t\t\t}\n\t\t});\n\t\tthis.webServer = factory.getWebServer((context) -> {\n\t\t\tcontext.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0);\n\t\t});\n\t\tthis.webServer.start();\n\t}\n","date":"2018-10-12 13:31:40","endLine":454,"groupId":"13410","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f7/a866a4b293b83d84866bca82e6d78838cd885d.src","preCode":"\tpublic void exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tfactory.addContextCustomizers((context) -> {\n\t\t\tif (context instanceof StandardContext) {\n\t\t\t\t((StandardContext) context).setFailCtxIfServletStartFails(false);\n\t\t\t}\n\t\t});\n\t\tthis.webServer = factory.getWebServer((context) -> {\n\t\t\tcontext.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0);\n\t\t});\n\t\tthis.webServer.start();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"B"}],"commitId":"683e9532d62d270ba5fa37b57bc0c000a7670e27","commitMessage":"@@@Handle servlet startup failures consistently\n\nEnsure that all servlet containers handle servlet startup failures\nconsistently and throw a `WebServerException` that wraps the original\ncause.\n\nBoth Undertow and Jetty already dealt with startup failures in this\nway.  but Tomcat did not. The `TomcatEmbeddedContext` has now been\nchanged to no longer call `super.loadOnStartup` but instead re-implement\na version of that method that wraps and rethrows the original exception\n(as long as `failCtxIfServletStartFails` is `true`.  which it now is by\ndefault).\n\nCloses gh-14790\n","date":"2018-10-12 13:31:40","modifiedFileCount":"5","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-11-28 04:37:35","codes":[{"authorDate":"2018-10-12 13:24:43","commitOrder":2,"curCode":"\tpublic void exceptionThrownOnLoadFailureIsRethrown() {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory.getWebServer((context) -> {\n\t\t\tcontext.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0);\n\t\t});\n\t\tassertThatExceptionOfType(WebServerException.class)\n\t\t\t\t.isThrownBy(this.webServer::start)\n\t\t\t\t.satisfies(this::wrapsFailingServletException);\n\t}\n","date":"2018-10-12 13:31:40","endLine":1058,"groupId":"675","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"exceptionThrownOnLoadFailureIsRethrown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/87/1c373fc66ef5f1cc2953d7f86fcc421f3f04b7.src","preCode":"\tpublic void exceptionThrownOnLoadFailureIsRethrown() {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory.getWebServer((context) -> {\n\t\t\tcontext.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0);\n\t\t});\n\t\tassertThatExceptionOfType(WebServerException.class)\n\t\t\t\t.isThrownBy(this.webServer::start)\n\t\t\t\t.satisfies(this::wrapsFailingServletException);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":1050,"status":"N"},{"authorDate":"2018-11-28 04:37:35","commitOrder":2,"curCode":"\tpublic void exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tfactory.addContextCustomizers((context) -> {\n\t\t\tif (context instanceof StandardContext) {\n\t\t\t\t((StandardContext) context).setFailCtxIfServletStartFails(false);\n\t\t\t}\n\t\t});\n\t\tthis.webServer = factory.getWebServer((context) -> context\n\t\t\t\t.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0));\n\t\tthis.webServer.start();\n\t}\n","date":"2018-11-28 04:37:35","endLine":452,"groupId":"13410","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/69/0f0d0e94375886877d8d1ba1ef58f15e0daeb3.src","preCode":"\tpublic void exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tfactory.addContextCustomizers((context) -> {\n\t\t\tif (context instanceof StandardContext) {\n\t\t\t\t((StandardContext) context).setFailCtxIfServletStartFails(false);\n\t\t\t}\n\t\t});\n\t\tthis.webServer = factory.getWebServer((context) -> {\n\t\t\tcontext.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0);\n\t\t});\n\t\tthis.webServer.start();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":442,"status":"M"}],"commitId":"dad6d4becaa1fbe60fedd82f6a02307fe4c2de88","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-11-28 04:37:35","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2018-11-28 04:37:35","codes":[{"authorDate":"2018-11-28 04:54:41","commitOrder":3,"curCode":"\tpublic void exceptionThrownOnLoadFailureIsRethrown() {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory.getWebServer((context) -> context\n\t\t\t\t.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0));\n\t\tassertThatExceptionOfType(WebServerException.class)\n\t\t\t\t.isThrownBy(this.webServer::start)\n\t\t\t\t.satisfies(this::wrapsFailingServletException);\n\t}\n","date":"2018-11-28 04:54:41","endLine":1057,"groupId":"675","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"exceptionThrownOnLoadFailureIsRethrown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/93/ce49fc3e71d066a0b1439f10116cee63c7b25a.src","preCode":"\tpublic void exceptionThrownOnLoadFailureIsRethrown() {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory.getWebServer((context) -> {\n\t\t\tcontext.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0);\n\t\t});\n\t\tassertThatExceptionOfType(WebServerException.class)\n\t\t\t\t.isThrownBy(this.webServer::start)\n\t\t\t\t.satisfies(this::wrapsFailingServletException);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":1050,"status":"M"},{"authorDate":"2018-11-28 04:37:35","commitOrder":3,"curCode":"\tpublic void exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tfactory.addContextCustomizers((context) -> {\n\t\t\tif (context instanceof StandardContext) {\n\t\t\t\t((StandardContext) context).setFailCtxIfServletStartFails(false);\n\t\t\t}\n\t\t});\n\t\tthis.webServer = factory.getWebServer((context) -> context\n\t\t\t\t.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0));\n\t\tthis.webServer.start();\n\t}\n","date":"2018-11-28 04:37:35","endLine":452,"groupId":"13410","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/69/0f0d0e94375886877d8d1ba1ef58f15e0daeb3.src","preCode":"\tpublic void exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tfactory.addContextCustomizers((context) -> {\n\t\t\tif (context instanceof StandardContext) {\n\t\t\t\t((StandardContext) context).setFailCtxIfServletStartFails(false);\n\t\t\t}\n\t\t});\n\t\tthis.webServer = factory.getWebServer((context) -> context\n\t\t\t\t.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0));\n\t\tthis.webServer.start();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":442,"status":"N"}],"commitId":"2dc8f49f8a3a2b7b321836f96cc6aea40840e2df","commitMessage":"@@@Polish\n","date":"2018-11-28 04:54:41","modifiedFileCount":"7","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid exceptionThrownOnLoadFailureIsRethrown() {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory\n\t\t\t\t.getWebServer((context) -> context.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0));\n\t\tassertThatExceptionOfType(WebServerException.class).isThrownBy(this.webServer::start)\n\t\t\t\t.satisfies(this::wrapsFailingServletException);\n\t}\n","date":"2019-06-07 19:25:54","endLine":949,"groupId":"102008","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"exceptionThrownOnLoadFailureIsRethrown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/d43aa3647fe43b229f82a62bb32039d0be8f53.src","preCode":"\tpublic void exceptionThrownOnLoadFailureIsRethrown() {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tthis.webServer = factory\n\t\t\t\t.getWebServer((context) -> context.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0));\n\t\tassertThatExceptionOfType(WebServerException.class).isThrownBy(this.webServer::start)\n\t\t\t\t.satisfies(this::wrapsFailingServletException);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":943,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tfactory.addContextCustomizers((context) -> {\n\t\t\tif (context instanceof StandardContext) {\n\t\t\t\t((StandardContext) context).setFailCtxIfServletStartFails(false);\n\t\t\t}\n\t\t});\n\t\tthis.webServer = factory\n\t\t\t\t.getWebServer((context) -> context.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0));\n\t\tthis.webServer.start();\n\t}\n","date":"2019-06-07 19:25:54","endLine":488,"groupId":"102008","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/88/87e1c6c34af0369ec64d0f0d0b57de4bfc8798.src","preCode":"\tpublic void exceptionThrownOnLoadFailureWhenFailCtxIfServletStartFailsIsFalse() {\n\t\tTomcatServletWebServerFactory factory = getFactory();\n\t\tfactory.addContextCustomizers((context) -> {\n\t\t\tif (context instanceof StandardContext) {\n\t\t\t\t((StandardContext) context).setFailCtxIfServletStartFails(false);\n\t\t\t}\n\t\t});\n\t\tthis.webServer = factory\n\t\t\t\t.getWebServer((context) -> context.addServlet(\"failing\", FailingServlet.class).setLoadOnStartup(0));\n\t\tthis.webServer.start();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":478,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
