[{"authorTime":"2018-02-03 05:48:27","codes":[{"authorDate":"2018-01-09 01:12:49","commitOrder":2,"curCode":"\tpublic void bindToMapWithCustomConverter() {\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService);\n\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"a,b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isNotNull();\n\t\tassertThat(map.get(\"b\")).isNotNull();\n\t}\n","date":"2018-01-09 02:17:55","endLine":542,"groupId":"6068","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToMapWithCustomConverter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b3/f125d87b8842d4e54429a259a7713bfce71fba.src","preCode":"\tpublic void bindToMapWithCustomConverter() {\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService);\n\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"a,b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isNotNull();\n\t\tassertThat(map.get(\"b\")).isNotNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":531,"status":"NB"},{"authorDate":"2018-02-03 05:48:27","commitOrder":2,"curCode":"\tpublic void bindToMapWithCustomConverterAndChildElements() {\n\t\t\r\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService);\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"boom\");\n\t\tsource.put(\"foo.a\", \"a\");\n\t\tsource.put(\"foo.b\", \"b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(map.get(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2018-02-03 11:00:35","endLine":562,"groupId":"6071","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToMapWithCustomConverterAndChildElements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b5/83fa1967f814b6644bcbf8a092cdbe155f1721.src","preCode":"\tpublic void bindToMapWithCustomConverterAndChildElements() {\n\t\t\r\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService);\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"boom\");\n\t\tsource.put(\"foo.a\", \"a\");\n\t\tsource.put(\"foo.b\", \"b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(map.get(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":549,"status":"B"}],"commitId":"16b7dbf487f2fb033fb43b0fe2f2c52d53e87d82","commitMessage":"@@@Only use Map converter binding when no descendants\n\nUpdate `MapBinder` to only attempt conversion based binding when there\nare no know descendant elements.\n\nSee gh-11892\n","date":"2018-02-03 11:00:35","modifiedFileCount":"2","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-02-18 00:21:49","codes":[{"authorDate":"2018-02-18 00:21:49","commitOrder":3,"curCode":"\tpublic void bindToMapWithCustomConverter() {\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService, null);\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"a,b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isNotNull();\n\t\tassertThat(map.get(\"b\")).isNotNull();\n\t}\n","date":"2018-02-20 12:25:47","endLine":546,"groupId":"6068","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToMapWithCustomConverter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/aa/009fb7d37fd4f18af9e6ed076bb98d25c97729.src","preCode":"\tpublic void bindToMapWithCustomConverter() {\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService);\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"a,b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isNotNull();\n\t\tassertThat(map.get(\"b\")).isNotNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":536,"status":"M"},{"authorDate":"2018-02-18 00:21:49","commitOrder":3,"curCode":"\tpublic void bindToMapWithCustomConverterAndChildElements() {\n\t\t\r\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService, null);\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"boom\");\n\t\tsource.put(\"foo.a\", \"a\");\n\t\tsource.put(\"foo.b\", \"b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(map.get(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2018-02-20 12:25:47","endLine":562,"groupId":"6071","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToMapWithCustomConverterAndChildElements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/aa/009fb7d37fd4f18af9e6ed076bb98d25c97729.src","preCode":"\tpublic void bindToMapWithCustomConverterAndChildElements() {\n\t\t\r\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService);\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"boom\");\n\t\tsource.put(\"foo.a\", \"a\");\n\t\tsource.put(\"foo.b\", \"b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(map.get(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":549,"status":"M"}],"commitId":"20109e27be24da74e884c14a03afc8f9561e4196","commitMessage":"@@@Add ApplicationConversionService and fix binder\n\nCreate a new `ApplicationConversionService` similar in design to the\nDefaultFormattingConversionService from Spring Framework. The new\nconversion service provides a central place for custom conversion logic\nsupported by Spring Boot.\n\nAlso replace the `BindingConversionService` with an internal\n`BindConverter` class that now invokes the `SimpleTypeConverter`\ndirectly. Binding for `@ConfigurationProperties` has been updated so\nthat any custom property editors registered with the BeanFactory can\nbe used.\n\nFixes gh-12095\n","date":"2018-02-20 12:25:47","modifiedFileCount":"29","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid bindToMapWithCustomConverter() {\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService, null);\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"a,b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isNotNull();\n\t\tassertThat(map.get(\"b\")).isNotNull();\n\t}\n","date":"2019-06-07 19:25:54","endLine":505,"groupId":"101390","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToMapWithCustomConverter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/b30f26577f68c3eb5e6c18d90cca4b6a62f01d.src","preCode":"\tpublic void bindToMapWithCustomConverter() {\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService, null);\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"a,b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isNotNull();\n\t\tassertThat(map.get(\"b\")).isNotNull();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":495,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid bindToMapWithCustomConverterAndChildElements() {\n\t\t\r\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService, null);\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"boom\");\n\t\tsource.put(\"foo.a\", \"a\");\n\t\tsource.put(\"foo.b\", \"b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(map.get(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":521,"groupId":"101390","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToMapWithCustomConverterAndChildElements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/b30f26577f68c3eb5e6c18d90cca4b6a62f01d.src","preCode":"\tpublic void bindToMapWithCustomConverterAndChildElements() {\n\t\t\r\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\tconversionService.addConverter(new MapConverter());\n\t\tBinder binder = new Binder(this.sources, null, conversionService, null);\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo\", \"boom\");\n\t\tsource.put(\"foo.a\", \"a\");\n\t\tsource.put(\"foo.b\", \"b\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> map = binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(map.get(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(map.get(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
