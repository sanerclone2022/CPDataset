[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void loadXmlResource() throws Exception {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.xml\",\n\t\t\t\tgetClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myXmlComponent\")).isTrue();\n\n\t}\n","date":"2017-10-05 11:18:56","endLine":65,"groupId":"9228","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadXmlResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f0/31562ff8568cc7d6ca7da4232e9f86d2a0f3ec.src","preCode":"\tpublic void loadXmlResource() throws Exception {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.xml\",\n\t\t\t\tgetClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myXmlComponent\")).isTrue();\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BeanDefinitionLoaderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void loadGroovyResource() throws Exception {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.groovy\",\n\t\t\t\tgetClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myGroovyComponent\")).isTrue();\n\n\t}\n","date":"2017-10-05 11:18:56","endLine":75,"groupId":"9228","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadGroovyResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f0/31562ff8568cc7d6ca7da4232e9f86d2a0f3ec.src","preCode":"\tpublic void loadGroovyResource() throws Exception {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.groovy\",\n\t\t\t\tgetClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myGroovyComponent\")).isTrue();\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BeanDefinitionLoaderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void loadXmlResource() {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.xml\",\n\t\t\t\tgetClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myXmlComponent\")).isTrue();\n\n\t}\n","date":"2017-12-12 18:57:30","endLine":65,"groupId":"9228","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"loadXmlResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/18/9a706d0a9df168609f7b293fa27fadc7f5a8aa.src","preCode":"\tpublic void loadXmlResource() throws Exception {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.xml\",\n\t\t\t\tgetClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myXmlComponent\")).isTrue();\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BeanDefinitionLoaderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void loadGroovyResource() {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.groovy\",\n\t\t\t\tgetClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myGroovyComponent\")).isTrue();\n\n\t}\n","date":"2017-12-12 18:57:30","endLine":75,"groupId":"9228","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"loadGroovyResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/18/9a706d0a9df168609f7b293fa27fadc7f5a8aa.src","preCode":"\tpublic void loadGroovyResource() throws Exception {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.groovy\",\n\t\t\t\tgetClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myGroovyComponent\")).isTrue();\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BeanDefinitionLoaderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid loadXmlResource() {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.xml\", getClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myXmlComponent\")).isTrue();\n\n\t}\n","date":"2019-06-07 19:25:54","endLine":63,"groupId":"9228","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"loadXmlResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/54c8ec4fccf4e4414698249fa9a3df250d7401.src","preCode":"\tpublic void loadXmlResource() {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.xml\", getClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myXmlComponent\")).isTrue();\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BeanDefinitionLoaderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid loadGroovyResource() {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.groovy\", getClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myGroovyComponent\")).isTrue();\n\n\t}\n","date":"2019-06-07 19:25:54","endLine":72,"groupId":"9228","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"loadGroovyResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/96/54c8ec4fccf4e4414698249fa9a3df250d7401.src","preCode":"\tpublic void loadGroovyResource() {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.groovy\", getClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myGroovyComponent\")).isTrue();\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BeanDefinitionLoaderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-06-25 18:33:09","codes":[{"authorDate":"2020-06-25 18:33:09","commitOrder":4,"curCode":"\tvoid loadXmlResource() {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.xml\", getClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(load(loader)).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myXmlComponent\")).isTrue();\n\n\t}\n","date":"2020-06-25 18:33:09","endLine":81,"groupId":"101776","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"loadXmlResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8f/64b6602e79acfa35ad737dd5dad3a441902007.src","preCode":"\tvoid loadXmlResource() {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.xml\", getClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myXmlComponent\")).isTrue();\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BeanDefinitionLoaderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2020-06-25 18:33:09","commitOrder":4,"curCode":"\tvoid loadGroovyResource() {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.groovy\", getClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(load(loader)).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myGroovyComponent\")).isTrue();\n\n\t}\n","date":"2020-06-25 18:33:09","endLine":90,"groupId":"101776","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"loadGroovyResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8f/64b6602e79acfa35ad737dd5dad3a441902007.src","preCode":"\tvoid loadGroovyResource() {\n\t\tClassPathResource resource = new ClassPathResource(\"sample-beans.groovy\", getClass());\n\t\tBeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry, resource);\n\t\tassertThat(loader.load()).isEqualTo(1);\n\t\tassertThat(this.registry.containsBean(\"myGroovyComponent\")).isTrue();\n\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BeanDefinitionLoaderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"16263e342c7947d7adaecb40e6e8abd562988486","commitMessage":"@@@Move bean definition counting only used in tests into test code\n\nCloses gh-22105\n","date":"2020-06-25 18:33:09","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"}]
