[{"authorTime":"2020-04-17 05:48:22","codes":[{"authorDate":"2020-04-17 05:48:22","commitOrder":1,"curCode":"\tvoid errorResponseAlwaysDetails() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeStacktrace.ALWAYS);\n\t\tthis.errorProperties.setIncludeDetails(ErrorProperties.IncludeDetails.ALWAYS);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"details\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"test exception\");\n\t\tassertThat(response).hasEntrySatisfying(\"trace\",\n\t\t\t\t(value) -> assertThat(value).asString().startsWith(\"java.lang.RuntimeException: test exception\"));\n\t}\n","date":"2020-04-17 05:48:22","endLine":69,"groupId":"11445","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"errorResponseAlwaysDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7c/4362626a1ec79b157c170dd17d2427a0e58fef.src","preCode":"\tvoid errorResponseAlwaysDetails() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeStacktrace.ALWAYS);\n\t\tthis.errorProperties.setIncludeDetails(ErrorProperties.IncludeDetails.ALWAYS);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"details\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"test exception\");\n\t\tassertThat(response).hasEntrySatisfying(\"trace\",\n\t\t\t\t(value) -> assertThat(value).asString().startsWith(\"java.lang.RuntimeException: test exception\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ManagementErrorEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"},{"authorDate":"2020-04-17 05:48:22","commitOrder":1,"curCode":"\tvoid errorResponseParamsFalse() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeStacktrace.ON_TRACE_PARAM);\n\t\tthis.errorProperties.setIncludeDetails(ErrorProperties.IncludeDetails.ON_DETAILS_PARAM);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"details\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"An error occurred while processing the request\");\n\t\tassertThat(response).doesNotContainKey(\"trace\");\n\t}\n","date":"2020-04-17 05:48:22","endLine":104,"groupId":"11445","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"errorResponseParamsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7c/4362626a1ec79b157c170dd17d2427a0e58fef.src","preCode":"\tvoid errorResponseParamsFalse() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeStacktrace.ON_TRACE_PARAM);\n\t\tthis.errorProperties.setIncludeDetails(ErrorProperties.IncludeDetails.ON_DETAILS_PARAM);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"details\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"An error occurred while processing the request\");\n\t\tassertThat(response).doesNotContainKey(\"trace\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ManagementErrorEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"f4c2714139c4d53d241156e270d2b118707e4923","commitMessage":"@@@Support server.error config in management context\n\nPrior to this commit.  the ManagementErrorEndpoint used to handle error\nresponses for the management servlet excluded stacktrace and exception\nmessage details from the response unconditionally.\n\nWith this commit.  the endpoint honors the\n`server.error.include-stacktrace` and `server.error.include-details`\nproperties to conditionally include error details for consistency\nwith non-management error handling.\n\nFixes gh-20989\n","date":"2020-04-17 05:48:22","modifiedFileCount":"3","status":"B","submitter":"Scott Frederick"},{"authorTime":"2020-04-30 06:56:47","codes":[{"authorDate":"2020-04-30 06:56:47","commitOrder":2,"curCode":"\tvoid errorResponseAlwaysDetails() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeStacktrace.ALWAYS);\n\t\tthis.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ALWAYS);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"message\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"test exception\");\n\t\tassertThat(response).hasEntrySatisfying(\"trace\",\n\t\t\t\t(value) -> assertThat(value).asString().startsWith(\"java.lang.RuntimeException: test exception\"));\n\t}\n","date":"2020-04-30 06:56:47","endLine":69,"groupId":"11445","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"errorResponseAlwaysDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e9/ace84d8d8bd3b071defb881f873921276cffb2.src","preCode":"\tvoid errorResponseAlwaysDetails() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeStacktrace.ALWAYS);\n\t\tthis.errorProperties.setIncludeDetails(ErrorProperties.IncludeDetails.ALWAYS);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"details\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"test exception\");\n\t\tassertThat(response).hasEntrySatisfying(\"trace\",\n\t\t\t\t(value) -> assertThat(value).asString().startsWith(\"java.lang.RuntimeException: test exception\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ManagementErrorEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-04-30 06:56:47","commitOrder":2,"curCode":"\tvoid errorResponseParamsFalse() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeStacktrace.ON_PARAM);\n\t\tthis.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ON_PARAM);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"message\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"\");\n\t\tassertThat(response).doesNotContainKey(\"trace\");\n\t}\n","date":"2020-04-30 06:56:47","endLine":104,"groupId":"11445","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"errorResponseParamsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e9/ace84d8d8bd3b071defb881f873921276cffb2.src","preCode":"\tvoid errorResponseParamsFalse() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeStacktrace.ON_TRACE_PARAM);\n\t\tthis.errorProperties.setIncludeDetails(ErrorProperties.IncludeDetails.ON_DETAILS_PARAM);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"details\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"An error occurred while processing the request\");\n\t\tassertThat(response).doesNotContainKey(\"trace\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ManagementErrorEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"a30740f8d2e590c1f3adc20fbc4ea9c653c5a94b","commitMessage":"@@@Separate server properties for message and errors\n\nPrior to this commit.  there was a property server.error.include-details\nthat allowed configuration of the message and errors attributes in a\nserver error response.\n\nThis commit separates the control of the message and errors attributes\ninto two separate properties named server.error.include-message and\nserver.error.include-binding-errors. When the message attribute is\nexcluded from a servlet response.  the value is changed from a\nhard-coded text value to an empty value.\n\nFixes gh-20505\n","date":"2020-04-30 06:56:47","modifiedFileCount":"25","status":"M","submitter":"Scott Frederick"},{"authorTime":"2020-12-24 16:33:48","codes":[{"authorDate":"2020-12-24 16:33:48","commitOrder":3,"curCode":"\tvoid errorResponseAlwaysDetails() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeAttribute.ALWAYS);\n\t\tthis.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ALWAYS);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"message\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"test exception\");\n\t\tassertThat(response).hasEntrySatisfying(\"trace\",\n\t\t\t\t(value) -> assertThat(value).asString().startsWith(\"java.lang.RuntimeException: test exception\"));\n\t}\n","date":"2020-12-24 17:35:04","endLine":73,"groupId":"11445","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"errorResponseAlwaysDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c7/2b31655b2cf30f5cbb3837f85cb766218fbc15.src","preCode":"\tvoid errorResponseAlwaysDetails() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeStacktrace.ALWAYS);\n\t\tthis.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ALWAYS);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"message\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"test exception\");\n\t\tassertThat(response).hasEntrySatisfying(\"trace\",\n\t\t\t\t(value) -> assertThat(value).asString().startsWith(\"java.lang.RuntimeException: test exception\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ManagementErrorEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-12-24 16:33:48","commitOrder":3,"curCode":"\tvoid errorResponseParamsFalse() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeAttribute.ON_PARAM);\n\t\tthis.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ON_PARAM);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"message\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"\");\n\t\tassertThat(response).doesNotContainKey(\"trace\");\n\t}\n","date":"2020-12-24 17:35:04","endLine":108,"groupId":"11445","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"errorResponseParamsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c7/2b31655b2cf30f5cbb3837f85cb766218fbc15.src","preCode":"\tvoid errorResponseParamsFalse() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeStacktrace.ON_PARAM);\n\t\tthis.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ON_PARAM);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"message\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"\");\n\t\tassertThat(response).doesNotContainKey(\"trace\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ManagementErrorEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"e4618cfb8d2f1a7452831891be2c7fd190d72e13","commitMessage":"@@@Delete ErrorProperties.IncludeStacktrace\n\nCloses gh-21286\n","date":"2020-12-24 17:35:04","modifiedFileCount":"8","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2021-01-22 22:10:02","codes":[{"authorDate":"2020-12-24 16:33:48","commitOrder":4,"curCode":"\tvoid errorResponseAlwaysDetails() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeAttribute.ALWAYS);\n\t\tthis.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ALWAYS);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"message\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"test exception\");\n\t\tassertThat(response).hasEntrySatisfying(\"trace\",\n\t\t\t\t(value) -> assertThat(value).asString().startsWith(\"java.lang.RuntimeException: test exception\"));\n\t}\n","date":"2020-12-24 17:35:04","endLine":73,"groupId":"10863","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"errorResponseAlwaysDetails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c7/2b31655b2cf30f5cbb3837f85cb766218fbc15.src","preCode":"\tvoid errorResponseAlwaysDetails() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeAttribute.ALWAYS);\n\t\tthis.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ALWAYS);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"message\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"test exception\");\n\t\tassertThat(response).hasEntrySatisfying(\"trace\",\n\t\t\t\t(value) -> assertThat(value).asString().startsWith(\"java.lang.RuntimeException: test exception\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ManagementErrorEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"},{"authorDate":"2021-01-22 22:10:02","commitOrder":4,"curCode":"\tvoid errorResponseParamsFalse() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeAttribute.ON_PARAM);\n\t\tthis.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ON_PARAM);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"message\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).doesNotContainKey(\"message\");\n\t\tassertThat(response).doesNotContainKey(\"trace\");\n\t}\n","date":"2021-01-22 22:10:02","endLine":108,"groupId":"10863","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"errorResponseParamsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a1/1e090e4ff7bde974d2e6d6fb28b3f85e6178d4.src","preCode":"\tvoid errorResponseParamsFalse() {\n\t\tthis.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeAttribute.ON_PARAM);\n\t\tthis.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ON_PARAM);\n\t\tthis.request.addParameter(\"trace\", \"false\");\n\t\tthis.request.addParameter(\"message\", \"false\");\n\t\tManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes, this.errorProperties);\n\t\tMap<String, Object> response = endpoint.invoke(new ServletWebRequest(this.request));\n\t\tassertThat(response).containsEntry(\"message\", \"\");\n\t\tassertThat(response).doesNotContainKey(\"trace\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ManagementErrorEndpointTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"5a56f8864f9400ef843b69c81bd7ea2fd61a5b51","commitMessage":"@@@Remove error message attribute instead of blanking it when not included\n\nCloses gh-24712\n","date":"2021-01-22 22:10:02","modifiedFileCount":"7","status":"M","submitter":"Andy Wilkinson"}]
