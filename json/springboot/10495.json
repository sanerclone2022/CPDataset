[{"authorTime":"2018-02-06 20:01:45","codes":[{"authorDate":"2018-02-06 20:01:45","commitOrder":2,"curCode":"\tpublic void jCacheCacheProvider() throws URISyntaxException {\n\t\tjavax.cache.CacheManager cacheManager = mock(javax.cache.CacheManager.class);\n\t\tgiven(cacheManager.getURI()).willReturn(new URI(\"/test\"));\n\t\tgiven(this.nativeCache.getCacheManager()).willReturn(cacheManager);\n\t\tgiven(this.nativeCache.getName()).willReturn(\"test\");\n\t\tJCacheCache cache = new JCacheCache(this.nativeCache);\n\t\tMeterBinder meterBinder = new JCacheCacheMeterBinderProvider()\n\t\t\t\t.getMeterBinder(cache, Collections.emptyList());\n\t\tassertThat(meterBinder).isInstanceOf(JCacheMetrics.class);\n\t}\n","date":"2018-02-06 20:01:45","endLine":57,"groupId":"8117","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"jCacheCacheProvider","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c1/da8494249abcbd35f7126b5ce48e0912ed6049.src","preCode":"\tpublic void jCacheCacheProvider() throws URISyntaxException {\n\t\tjavax.cache.CacheManager cacheManager = mock(javax.cache.CacheManager.class);\n\t\tgiven(cacheManager.getURI()).willReturn(new URI(\"/test\"));\n\t\tgiven(this.nativeCache.getCacheManager()).willReturn(cacheManager);\n\t\tgiven(this.nativeCache.getName()).willReturn(\"test\");\n\t\tJCacheCache cache = new JCacheCache(this.nativeCache);\n\t\tMeterBinder meterBinder = new JCacheCacheMeterBinderProvider()\n\t\t\t\t.getMeterBinder(cache, Collections.emptyList());\n\t\tassertThat(meterBinder).isInstanceOf(JCacheMetrics.class);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/cache/JCacheCacheMeterBinderProviderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"MB"},{"authorDate":"2018-02-06 20:01:45","commitOrder":2,"curCode":"\tpublic void hazelcastCacheProvider() {\n\t\tIMap<Object, Object> nativeCache = mock(IMap.class);\n\t\tgiven(nativeCache.getName()).willReturn(\"test\");\n\t\tHazelcastCache cache = new HazelcastCache(nativeCache);\n\t\tMeterBinder meterBinder = new HazelcastCacheMeterBinderProvider()\n\t\t\t\t.getMeterBinder(cache, Collections.emptyList());\n\t\tassertThat(meterBinder).isInstanceOf(HazelcastCacheMetrics.class);\n\t}\n","date":"2018-02-06 20:01:45","endLine":50,"groupId":"13696","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"hazelcastCacheProvider","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/12/6ebd3a1e4cc36940a2ee57bfec3986b901dfe3.src","preCode":"\tpublic void hazelcastCacheProvider() {\n\t\tIMap<Object, Object> nativeCache = mock(IMap.class);\n\t\tgiven(nativeCache.getName()).willReturn(\"test\");\n\t\tHazelcastCache cache = new HazelcastCache(nativeCache);\n\t\tMeterBinder meterBinder = new HazelcastCacheMeterBinderProvider()\n\t\t\t\t.getMeterBinder(cache, Collections.emptyList());\n\t\tassertThat(meterBinder).isInstanceOf(HazelcastCacheMetrics.class);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/cache/HazelcastCacheMeterBinderProviderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"}],"commitId":"6b70c96e372db2047af3deaa43768049128c38de","commitMessage":"@@@Merge pull request #11918 from Jon Schneider\n\n* gh-11918:\n  Polish \"Align with Micrometer's standardized cache metrics\"\n  Align with Micrometer's standardized cache metrics\n","date":"2018-02-06 20:01:45","modifiedFileCount":"14","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid jCacheCacheProvider() throws URISyntaxException {\n\t\tjavax.cache.CacheManager cacheManager = mock(javax.cache.CacheManager.class);\n\t\tgiven(cacheManager.getURI()).willReturn(new URI(\"/test\"));\n\t\tgiven(this.nativeCache.getCacheManager()).willReturn(cacheManager);\n\t\tgiven(this.nativeCache.getName()).willReturn(\"test\");\n\t\tJCacheCache cache = new JCacheCache(this.nativeCache);\n\t\tMeterBinder meterBinder = new JCacheCacheMeterBinderProvider().getMeterBinder(cache, Collections.emptyList());\n\t\tassertThat(meterBinder).isInstanceOf(JCacheMetrics.class);\n\t}\n","date":"2019-06-07 19:25:54","endLine":56,"groupId":"10495","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"jCacheCacheProvider","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2e/1b97ad955776c12e39921364a9398ae9f9dd02.src","preCode":"\tpublic void jCacheCacheProvider() throws URISyntaxException {\n\t\tjavax.cache.CacheManager cacheManager = mock(javax.cache.CacheManager.class);\n\t\tgiven(cacheManager.getURI()).willReturn(new URI(\"/test\"));\n\t\tgiven(this.nativeCache.getCacheManager()).willReturn(cacheManager);\n\t\tgiven(this.nativeCache.getName()).willReturn(\"test\");\n\t\tJCacheCache cache = new JCacheCache(this.nativeCache);\n\t\tMeterBinder meterBinder = new JCacheCacheMeterBinderProvider().getMeterBinder(cache, Collections.emptyList());\n\t\tassertThat(meterBinder).isInstanceOf(JCacheMetrics.class);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/cache/JCacheCacheMeterBinderProviderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid hazelcastCacheProvider() {\n\t\tIMap<Object, Object> nativeCache = mock(IMap.class);\n\t\tgiven(nativeCache.getName()).willReturn(\"test\");\n\t\tHazelcastCache cache = new HazelcastCache(nativeCache);\n\t\tMeterBinder meterBinder = new HazelcastCacheMeterBinderProvider().getMeterBinder(cache,\n\t\t\t\tCollections.emptyList());\n\t\tassertThat(meterBinder).isInstanceOf(HazelcastCacheMetrics.class);\n\t}\n","date":"2019-06-07 19:25:54","endLine":47,"groupId":"10495","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"hazelcastCacheProvider","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6b/d2b383cf74aa53c25b77b771caa561acfca19c.src","preCode":"\tpublic void hazelcastCacheProvider() {\n\t\tIMap<Object, Object> nativeCache = mock(IMap.class);\n\t\tgiven(nativeCache.getName()).willReturn(\"test\");\n\t\tHazelcastCache cache = new HazelcastCache(nativeCache);\n\t\tMeterBinder meterBinder = new HazelcastCacheMeterBinderProvider().getMeterBinder(cache,\n\t\t\t\tCollections.emptyList());\n\t\tassertThat(meterBinder).isInstanceOf(HazelcastCacheMetrics.class);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/cache/HazelcastCacheMeterBinderProviderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
