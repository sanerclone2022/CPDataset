[{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2018-09-12 05:21:56","commitOrder":3,"curCode":"\tpublic void contextWhenHasAddConversionServiceFalseUsesRegularConversionService() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setAddConversionService(false);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getBeanFactory().getConversionService()).isNull();\n\t\tassertThat(this.context.getEnvironment().getConversionService())\n\t\t\t\t.isNotInstanceOf(ApplicationConversionService.class);\n\t}\n","date":"2018-09-12 05:24:27","endLine":621,"groupId":"6085","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"contextWhenHasAddConversionServiceFalseUsesRegularConversionService","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8f/d562e5f940711120b7f2b0f764ff4869126eda.src","preCode":"\tpublic void contextWhenHasAddConversionServiceFalseUsesRegularConversionService() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setAddConversionService(false);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getBeanFactory().getConversionService()).isNull();\n\t\tassertThat(this.context.getEnvironment().getConversionService())\n\t\t\t\t.isNotInstanceOf(ApplicationConversionService.class);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":613,"status":"B"},{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void headlessFalse() {\n\t\tTestSpringApplication application = new TestSpringApplication(\n\t\t\t\tExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setHeadless(false);\n\t\tthis.context = application.run();\n\t\tassertThat(System.getProperty(\"java.awt.headless\")).isEqualTo(\"false\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":924,"groupId":"3168","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"headlessFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1e/de3d5a84ed0656d647a5905984c4106b295996.src","preCode":"\tpublic void headlessFalse() {\n\t\tTestSpringApplication application = new TestSpringApplication(\n\t\t\t\tExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setHeadless(false);\n\t\tthis.context = application.run();\n\t\tassertThat(System.getProperty(\"java.awt.headless\")).isEqualTo(\"false\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":917,"status":"NB"}],"commitId":"0c00508b3cdec4d30641dd26d8503299e0391fd3","commitMessage":"@@@Register ApplicationConversionService for context\n\nUpdate `SpringApplication` to automatically register the shared\n`ApplicationConversionService` instance with the `BeanFactory` and\n`Environment`.\n\nCloses gh-12148\n","date":"2018-09-12 05:24:27","modifiedFileCount":"6","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid contextWhenHasAddConversionServiceFalseUsesRegularConversionService() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setAddConversionService(false);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getBeanFactory().getConversionService()).isNull();\n\t\tassertThat(this.context.getEnvironment().getConversionService())\n\t\t\t\t.isNotInstanceOf(ApplicationConversionService.class);\n\t}\n","date":"2019-06-07 19:25:54","endLine":608,"groupId":"101856","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"contextWhenHasAddConversionServiceFalseUsesRegularConversionService","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/98/b7ed11c647d2d175a7e722635161ed6ad25db5.src","preCode":"\tpublic void contextWhenHasAddConversionServiceFalseUsesRegularConversionService() {\n\t\tSpringApplication application = new SpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setAddConversionService(false);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.getBeanFactory().getConversionService()).isNull();\n\t\tassertThat(this.context.getEnvironment().getConversionService())\n\t\t\t\t.isNotInstanceOf(ApplicationConversionService.class);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":600,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid headlessFalse() {\n\t\tTestSpringApplication application = new TestSpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setHeadless(false);\n\t\tthis.context = application.run();\n\t\tassertThat(System.getProperty(\"java.awt.headless\")).isEqualTo(\"false\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":970,"groupId":"101856","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"headlessFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/98/b7ed11c647d2d175a7e722635161ed6ad25db5.src","preCode":"\tpublic void headlessFalse() {\n\t\tTestSpringApplication application = new TestSpringApplication(ExampleConfig.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setHeadless(false);\n\t\tthis.context = application.run();\n\t\tassertThat(System.getProperty(\"java.awt.headless\")).isEqualTo(\"false\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":964,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
