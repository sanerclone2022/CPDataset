[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void testRepository() {\n\t\tPersonHash personHash = new PersonHash();\n\t\tpersonHash.setDescription(\"Look, new @DataRedisTest!\");\n\t\tassertThat(personHash.getId()).isNull();\n\t\tPersonHash savedEntity = this.exampleRepository.save(personHash);\n\t\tassertThat(savedEntity.getId()).isNotNull();\n\t\tassertThat(this.operations.execute((RedisConnection connection) -> connection\n\t\t\t\t.exists((\"persons:\" + savedEntity.getId()).getBytes(CHARSET)))).isTrue();\n\t\tthis.exampleRepository.deleteAll();\n\t}\n","date":"2017-10-05 11:18:56","endLine":72,"groupId":"2573","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRepository","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e6/0ca1f17135e48da447b9a72fdc090be55f3aea.src","preCode":"\tpublic void testRepository() {\n\t\tPersonHash personHash = new PersonHash();\n\t\tpersonHash.setDescription(\"Look, new @DataRedisTest!\");\n\t\tassertThat(personHash.getId()).isNull();\n\t\tPersonHash savedEntity = this.exampleRepository.save(personHash);\n\t\tassertThat(savedEntity.getId()).isNotNull();\n\t\tassertThat(this.operations.execute((RedisConnection connection) -> connection\n\t\t\t\t.exists((\"persons:\" + savedEntity.getId()).getBytes(CHARSET)))).isTrue();\n\t\tthis.exampleRepository.deleteAll();\n\t}\n","realPath":"spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/redis/DataRedisTestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void testService() {\n\t\tPersonHash personHash = new PersonHash();\n\t\tpersonHash.setDescription(\"Look, new @DataRedisTest!\");\n\t\tassertThat(personHash.getId()).isNull();\n\t\tPersonHash savedEntity = this.exampleRepository.save(personHash);\n\t\tassertThat(this.service.hasRecord(savedEntity)).isTrue();\n\t}\n","date":"2017-10-05 11:18:56","endLine":56,"groupId":"2573","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testService","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/13/146cb7d78fbd4437245b87d851f5da382bb051.src","preCode":"\tpublic void testService() {\n\t\tPersonHash personHash = new PersonHash();\n\t\tpersonHash.setDescription(\"Look, new @DataRedisTest!\");\n\t\tassertThat(personHash.getId()).isNull();\n\t\tPersonHash savedEntity = this.exampleRepository.save(personHash);\n\t\tassertThat(this.service.hasRecord(savedEntity)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/redis/DataRedisTestWithIncludeFilterIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid testRepository() {\n\t\tPersonHash personHash = new PersonHash();\n\t\tpersonHash.setDescription(\"Look, new @DataRedisTest!\");\n\t\tassertThat(personHash.getId()).isNull();\n\t\tPersonHash savedEntity = this.exampleRepository.save(personHash);\n\t\tassertThat(savedEntity.getId()).isNotNull();\n\t\tassertThat(this.operations.execute((RedisConnection connection) -> connection\n\t\t\t\t.exists((\"persons:\" + savedEntity.getId()).getBytes(CHARSET)))).isTrue();\n\t\tthis.exampleRepository.deleteAll();\n\t}\n","date":"2019-06-07 19:25:54","endLine":74,"groupId":"101019","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRepository","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/46/800292a6269682b3c61cd1090675434a9cca3d.src","preCode":"\tpublic void testRepository() {\n\t\tPersonHash personHash = new PersonHash();\n\t\tpersonHash.setDescription(\"Look, new @DataRedisTest!\");\n\t\tassertThat(personHash.getId()).isNull();\n\t\tPersonHash savedEntity = this.exampleRepository.save(personHash);\n\t\tassertThat(savedEntity.getId()).isNotNull();\n\t\tassertThat(this.operations.execute((RedisConnection connection) -> connection\n\t\t\t\t.exists((\"persons:\" + savedEntity.getId()).getBytes(CHARSET)))).isTrue();\n\t\tthis.exampleRepository.deleteAll();\n\t}\n","realPath":"spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/redis/DataRedisTestIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid testService() {\n\t\tPersonHash personHash = new PersonHash();\n\t\tpersonHash.setDescription(\"Look, new @DataRedisTest!\");\n\t\tassertThat(personHash.getId()).isNull();\n\t\tPersonHash savedEntity = this.exampleRepository.save(personHash);\n\t\tassertThat(this.service.hasRecord(savedEntity)).isTrue();\n\t}\n","date":"2019-06-07 19:25:54","endLine":60,"groupId":"101019","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testService","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b6/d10f36ee485f89426a7b8ee9de3bc8de90dd2a.src","preCode":"\tpublic void testService() {\n\t\tPersonHash personHash = new PersonHash();\n\t\tpersonHash.setDescription(\"Look, new @DataRedisTest!\");\n\t\tassertThat(personHash.getId()).isNull();\n\t\tPersonHash savedEntity = this.exampleRepository.save(personHash);\n\t\tassertThat(this.service.hasRecord(savedEntity)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/redis/DataRedisTestWithIncludeFilterIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
