[{"authorTime":"2019-12-11 05:55:23","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tprivate List<Object> sanitize(String prefix, List<Object> list) {\n\t\tList<Object> sanitized = new ArrayList<>();\n\t\tfor (Object item : list) {\n\t\t\tif (item instanceof Map) {\n\t\t\t\tsanitized.add(sanitize(prefix, (Map<String, Object>) item));\n\t\t\t}\n\t\t\telse if (item instanceof List) {\n\t\t\t\tsanitized.add(sanitize(prefix, (List<Object>) item));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsanitized.add(this.sanitizer.sanitize(prefix, item));\n\t\t\t}\n\t\t}\n\t\treturn sanitized;\n\t}\n","date":"2017-10-05 11:18:56","endLine":264,"groupId":"1051","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sanitize","params":"(Stringprefix@List<Object>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fd/af881c516f9056afc45cc322f318d388fc5f03.src","preCode":"\tprivate List<Object> sanitize(String prefix, List<Object> list) {\n\t\tList<Object> sanitized = new ArrayList<>();\n\t\tfor (Object item : list) {\n\t\t\tif (item instanceof Map) {\n\t\t\t\tsanitized.add(sanitize(prefix, (Map<String, Object>) item));\n\t\t\t}\n\t\t\telse if (item instanceof List) {\n\t\t\t\tsanitized.add(sanitize(prefix, (List<Object>) item));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsanitized.add(this.sanitizer.sanitize(prefix, item));\n\t\t\t}\n\t\t}\n\t\treturn sanitized;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpoint.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"NB"},{"authorDate":"2019-12-11 05:55:23","commitOrder":2,"curCode":"\tprivate List<Object> getInputs(String prefix, List<Object> list) {\n\t\tList<Object> augmented = new ArrayList<>();\n\t\tint index = 0;\n\t\tfor (Object item : list) {\n\t\t\tString name = prefix + \"[\" + index++ + \"]\";\n\t\t\tif (item instanceof Map) {\n\t\t\t\taugmented.add(getInputs(name, (Map<String, Object>) item));\n\t\t\t}\n\t\t\telse if (item instanceof List) {\n\t\t\t\taugmented.add(getInputs(name, (List<Object>) item));\n\t\t\t}\n\t\t\telse {\n\t\t\t\taugmented.add(applyInput(name));\n\t\t\t}\n\t\t}\n\t\treturn augmented;\n\t}\n","date":"2019-12-13 09:02:46","endLine":274,"groupId":"5892","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getInputs","params":"(Stringprefix@List<Object>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fd/5bca8b6633776771ec5e6335b46611d6a1a3fc.src","preCode":"\tprivate List<Object> getInputs(String prefix, List<Object> list) {\n\t\tList<Object> augmented = new ArrayList<>();\n\t\tint index = 0;\n\t\tfor (Object item : list) {\n\t\t\tString name = prefix + \"[\" + index++ + \"]\";\n\t\t\tif (item instanceof Map) {\n\t\t\t\taugmented.add(getInputs(name, (Map<String, Object>) item));\n\t\t\t}\n\t\t\telse if (item instanceof List) {\n\t\t\t\taugmented.add(getInputs(name, (List<Object>) item));\n\t\t\t}\n\t\t\telse {\n\t\t\t\taugmented.add(applyInput(name));\n\t\t\t}\n\t\t}\n\t\treturn augmented;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpoint.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"B"}],"commitId":"8dcf1e4033eb1b453447fe48d2cbc9aa8c674d97","commitMessage":"@@@Provide end-to-end traceability for config properties\n\nCloses gh-14880\n\nCo-authored-by: Andy Wilkinson <awilkinson@pivotal.io>\n","date":"2019-12-13 09:02:46","modifiedFileCount":"12","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-12-11 05:55:23","codes":[{"authorDate":"2021-08-28 07:57:18","commitOrder":3,"curCode":"\tprivate List<Object> sanitize(String prefix, List<Object> list) {\n\t\tList<Object> sanitized = new ArrayList<>();\n\t\tint index = 0;\n\t\tfor (Object item : list) {\n\t\t\tString name = prefix + \"[\" + index++ + \"]\";\n\t\t\tif (item instanceof Map) {\n\t\t\t\tsanitized.add(sanitize(name, (Map<String, Object>) item));\n\t\t\t}\n\t\t\telse if (item instanceof List) {\n\t\t\t\tsanitized.add(sanitize(name, (List<Object>) item));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsanitized.add(sanitizeWithPropertySourceIfPresent(name, item));\n\t\t\t}\n\t\t}\n\t\treturn sanitized;\n\t}\n","date":"2021-08-31 12:31:15","endLine":311,"groupId":"12569","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"sanitize","params":"(Stringprefix@List<Object>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b5/78584c8810a02c606cd395624d9a5a29918b94.src","preCode":"\tprivate List<Object> sanitize(String prefix, List<Object> list) {\n\t\tList<Object> sanitized = new ArrayList<>();\n\t\tfor (Object item : list) {\n\t\t\tif (item instanceof Map) {\n\t\t\t\tsanitized.add(sanitize(prefix, (Map<String, Object>) item));\n\t\t\t}\n\t\t\telse if (item instanceof List) {\n\t\t\t\tsanitized.add(sanitize(prefix, (List<Object>) item));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsanitized.add(this.sanitizer.sanitize(prefix, item));\n\t\t\t}\n\t\t}\n\t\treturn sanitized;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpoint.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"M"},{"authorDate":"2019-12-11 05:55:23","commitOrder":3,"curCode":"\tprivate List<Object> getInputs(String prefix, List<Object> list) {\n\t\tList<Object> augmented = new ArrayList<>();\n\t\tint index = 0;\n\t\tfor (Object item : list) {\n\t\t\tString name = prefix + \"[\" + index++ + \"]\";\n\t\t\tif (item instanceof Map) {\n\t\t\t\taugmented.add(getInputs(name, (Map<String, Object>) item));\n\t\t\t}\n\t\t\telse if (item instanceof List) {\n\t\t\t\taugmented.add(getInputs(name, (List<Object>) item));\n\t\t\t}\n\t\t\telse {\n\t\t\t\taugmented.add(applyInput(name));\n\t\t\t}\n\t\t}\n\t\treturn augmented;\n\t}\n","date":"2019-12-13 09:02:46","endLine":274,"groupId":"12569","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getInputs","params":"(Stringprefix@List<Object>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fd/5bca8b6633776771ec5e6335b46611d6a1a3fc.src","preCode":"\tprivate List<Object> getInputs(String prefix, List<Object> list) {\n\t\tList<Object> augmented = new ArrayList<>();\n\t\tint index = 0;\n\t\tfor (Object item : list) {\n\t\t\tString name = prefix + \"[\" + index++ + \"]\";\n\t\t\tif (item instanceof Map) {\n\t\t\t\taugmented.add(getInputs(name, (Map<String, Object>) item));\n\t\t\t}\n\t\t\telse if (item instanceof List) {\n\t\t\t\taugmented.add(getInputs(name, (List<Object>) item));\n\t\t\t}\n\t\t\telse {\n\t\t\t\taugmented.add(applyInput(name));\n\t\t\t}\n\t\t}\n\t\treturn augmented;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpoint.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"N"}],"commitId":"253f98c3e7ae577618ca7d16d9116205f1fb4215","commitMessage":"@@@Add pluggable abstraction for applying custom sanitization rules\n\nCloses gh-27840\n","date":"2021-08-31 12:31:15","modifiedFileCount":"16","status":"M","submitter":"Madhura Bhave"}]
