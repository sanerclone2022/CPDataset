[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void generateProjectNoContent() throws Exception {\n\t\tmockSuccessfulMetadataGet(false);\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockStatus(response, 500);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tthis.thrown.expect(ReportableException.class);\n\t\tthis.thrown.expectMessage(\"No content received from server\");\n\t\tthis.invoker.generate(request);\n\t}\n","date":"2017-10-05 11:18:56","endLine":108,"groupId":"14403","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"generateProjectNoContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/42/7805f1556207cbc6b703f1b081edaa75259851.src","preCode":"\tpublic void generateProjectNoContent() throws Exception {\n\t\tmockSuccessfulMetadataGet(false);\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockStatus(response, 500);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tthis.thrown.expect(ReportableException.class);\n\t\tthis.thrown.expectMessage(\"No content received from server\");\n\t\tthis.invoker.generate(request);\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/InitializrServiceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void loadMetadataInvalidJson() throws Exception {\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockHttpEntity(response, \"Foo-Bar-Not-JSON\".getBytes(), \"application/json\");\n\t\tmockStatus(response, 200);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tthis.thrown.expect(ReportableException.class);\n\t\tthis.thrown.expectMessage(\"Invalid content received from server\");\n\t\tthis.invoker.generate(request);\n\t}\n","date":"2017-10-05 11:18:56","endLine":130,"groupId":"14403","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadMetadataInvalidJson","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/42/7805f1556207cbc6b703f1b081edaa75259851.src","preCode":"\tpublic void loadMetadataInvalidJson() throws Exception {\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockHttpEntity(response, \"Foo-Bar-Not-JSON\".getBytes(), \"application/json\");\n\t\tmockStatus(response, 200);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tthis.thrown.expect(ReportableException.class);\n\t\tthis.thrown.expectMessage(\"Invalid content received from server\");\n\t\tthis.invoker.generate(request);\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/InitializrServiceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-10-02 02:18:16","codes":[{"authorDate":"2018-10-02 02:18:16","commitOrder":2,"curCode":"\tpublic void generateProjectNoContent() throws Exception {\n\t\tmockSuccessfulMetadataGet(false);\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockStatus(response, 500);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tassertThatExceptionOfType(ReportableException.class)\n\t\t\t\t.isThrownBy(() -> this.invoker.generate(request))\n\t\t\t\t.withMessageContaining(\"No content received from server\");\n\t}\n","date":"2018-10-03 01:55:28","endLine":104,"groupId":"14382","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"generateProjectNoContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c7/28637dff4ffc55464a2cecd1e2b8913708cd26.src","preCode":"\tpublic void generateProjectNoContent() throws Exception {\n\t\tmockSuccessfulMetadataGet(false);\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockStatus(response, 500);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tthis.thrown.expect(ReportableException.class);\n\t\tthis.thrown.expectMessage(\"No content received from server\");\n\t\tthis.invoker.generate(request);\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/InitializrServiceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2018-10-02 02:18:16","commitOrder":2,"curCode":"\tpublic void loadMetadataInvalidJson() throws Exception {\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockHttpEntity(response, \"Foo-Bar-Not-JSON\".getBytes(), \"application/json\");\n\t\tmockStatus(response, 200);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tassertThatExceptionOfType(ReportableException.class)\n\t\t\t\t.isThrownBy(() -> this.invoker.generate(request))\n\t\t\t\t.withMessageContaining(\"Invalid content received from server\");\n\t}\n","date":"2018-10-03 01:55:28","endLine":126,"groupId":"14382","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"loadMetadataInvalidJson","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c7/28637dff4ffc55464a2cecd1e2b8913708cd26.src","preCode":"\tpublic void loadMetadataInvalidJson() throws Exception {\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockHttpEntity(response, \"Foo-Bar-Not-JSON\".getBytes(), \"application/json\");\n\t\tmockStatus(response, 200);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tthis.thrown.expect(ReportableException.class);\n\t\tthis.thrown.expectMessage(\"Invalid content received from server\");\n\t\tthis.invoker.generate(request);\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/InitializrServiceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"d76bba5e6f5c702c8bf2aa86fee19ec7de8ed3cb","commitMessage":"@@@Migrate from ExpectedException rule to AssertJ\n\nReplace ExpectedException JUnit rules with AssertJ exception\nassertions.\n\nCloses gh-14336\n","date":"2018-10-03 01:55:28","modifiedFileCount":"271","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid generateProjectNoContent() throws Exception {\n\t\tmockSuccessfulMetadataGet(false);\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockStatus(response, 500);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tassertThatExceptionOfType(ReportableException.class).isThrownBy(() -> this.invoker.generate(request))\n\t\t\t\t.withMessageContaining(\"No content received from server\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":100,"groupId":"10606","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"generateProjectNoContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/40/06c15602d522285545a7f3a1dd235ceb969726.src","preCode":"\tpublic void generateProjectNoContent() throws Exception {\n\t\tmockSuccessfulMetadataGet(false);\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockStatus(response, 500);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tassertThatExceptionOfType(ReportableException.class).isThrownBy(() -> this.invoker.generate(request))\n\t\t\t\t.withMessageContaining(\"No content received from server\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/InitializrServiceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid loadMetadataInvalidJson() throws Exception {\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockHttpEntity(response, \"Foo-Bar-Not-JSON\".getBytes(), \"application/json\");\n\t\tmockStatus(response, 200);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tassertThatExceptionOfType(ReportableException.class).isThrownBy(() -> this.invoker.generate(request))\n\t\t\t\t.withMessageContaining(\"Invalid content received from server\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":120,"groupId":"10606","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"loadMetadataInvalidJson","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/40/06c15602d522285545a7f3a1dd235ceb969726.src","preCode":"\tpublic void loadMetadataInvalidJson() throws Exception {\n\t\tCloseableHttpResponse response = mock(CloseableHttpResponse.class);\n\t\tmockHttpEntity(response, \"Foo-Bar-Not-JSON\".getBytes(), \"application/json\");\n\t\tmockStatus(response, 200);\n\t\tgiven(this.http.execute(isA(HttpGet.class))).willReturn(response);\n\t\tProjectGenerationRequest request = new ProjectGenerationRequest();\n\t\tassertThatExceptionOfType(ReportableException.class).isThrownBy(() -> this.invoker.generate(request))\n\t\t\t\t.withMessageContaining(\"Invalid content received from server\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/InitializrServiceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
