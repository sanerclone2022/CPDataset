[{"authorTime":"2018-08-31 20:44:46","codes":[{"authorDate":"2018-08-30 19:08:42","commitOrder":2,"curCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-08-30 19:08:42","endLine":99,"groupId":"11628","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/970367fc445a139a51114098f0481c6b7c2ac2.src","preCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"NB"},{"authorDate":"2018-08-31 20:44:46","commitOrder":2,"curCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.out.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.out.toString())\n\t\t\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","date":"2018-08-31 20:45:17","endLine":101,"groupId":"11628","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ef/3c05647b33db7940117d1a46020a39ec99075a.src","preCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.out.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.out.toString())\n\t\t\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"}],"commitId":"4634811c7c71d5837327bd3db1e9359197c15f0d","commitMessage":"@@@Polish\n","date":"2018-08-31 20:45:17","modifiedFileCount":"2","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-12-06 05:56:29","codes":[{"authorDate":"2018-08-30 19:08:42","commitOrder":3,"curCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-08-30 19:08:42","endLine":99,"groupId":"11628","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/970367fc445a139a51114098f0481c6b7c2ac2.src","preCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"},{"authorDate":"2018-12-06 05:56:29","commitOrder":3,"curCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","date":"2018-12-06 09:49:09","endLine":102,"groupId":"11628","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/57/995da9aefcb99e8920b9e302db99d5a43c2d0f.src","preCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.out.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.out.toString())\n\t\t\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"59d2b0a3fb2e9f83345c23b32e5bbac47c74dbd2","commitMessage":"@@@Upgrade tests to Junit5\n\nSee gh-14737\n","date":"2018-12-06 09:49:09","modifiedFileCount":"800","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2019-01-14 21:11:39","codes":[{"authorDate":"2018-08-30 19:08:42","commitOrder":4,"curCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2018-08-30 19:08:42","endLine":99,"groupId":"11628","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ff/970367fc445a139a51114098f0481c6b7c2ac2.src","preCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"},{"authorDate":"2019-01-14 21:11:39","commitOrder":4,"curCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","date":"2019-01-14 21:11:39","endLine":102,"groupId":"11628","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7d/525f1701443fb44172c6ecfb8d0c32cd89cc67.src","preCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\");\n\t\t\t\t\tassertThat(this.output.toString())\n\t\t\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"0fa38444800e0586d30393b9ef5b4f2fe781d8f4","commitMessage":"@@@Merge pull request #15695 from izeye\n\n* pr/15695:\n  Polish contribution\n  Polish\n","date":"2019-01-14 21:11:39","modifiedFileCount":"10","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-31 17:03:02","codes":[{"authorDate":"2019-05-31 17:03:02","commitOrder":5,"curCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(capturedOutput).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-06-01 01:33:10","endLine":96,"groupId":"11628","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/49/e919c5740cab3edac3a1f7a392ea10873a050c.src","preCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2019-05-31 17:03:02","commitOrder":5,"curCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(capturedOutput).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","date":"2019-06-01 01:33:10","endLine":103,"groupId":"11628","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e5/ca1169ad28fc76b87829c956081676ce7686e3.src","preCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(this.output.toString()).doesNotContain(\n\t\t\t\t\t\t\t\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"0644a7940108d6db7c352a807bfb2b8a34d544e2","commitMessage":"@@@Repackage output capture and always use extension declaratively\n\nCloses gh-17029\n","date":"2019-06-01 01:33:10","modifiedFileCount":"61","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid shouldNotDenyNorLogIfMaxUrisIsNotReached(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.doesNotContain(\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":90,"groupId":"11628","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1c/38188347b624ef1cf8385e22a836ba825148bb.src","preCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.doesNotContain(\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid shouldNotDenyNorLogIfMaxUrisIsNotReached(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\").run((context) -> {\n\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t.doesNotContain(\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":95,"groupId":"11628","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"(CapturedOutputcapturedOutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d0/24660b9d0e1c844134953f64286718ad9feed5.src","preCode":"\tpublic void shouldNotDenyNorLogIfMaxUrisIsNotReached(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\").run((context) -> {\n\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t.doesNotContain(\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-15 01:07:47","codes":[{"authorDate":"2019-07-15 01:07:47","commitOrder":7,"curCode":"\tvoid shouldNotDenyNorLogIfMaxUrisIsNotReached(CapturedOutput output) {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(output)\n\t\t\t\t\t\t\t.doesNotContain(\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","date":"2019-07-15 07:24:18","endLine":89,"groupId":"10949","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c5/bfe12c5ece705454703eb277ae53e91d887591.src","preCode":"\tvoid shouldNotDenyNorLogIfMaxUrisIsNotReached(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(WebFluxAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(TestController.class)\n\t\t\t\t.withPropertyValues(\"management.metrics.web.server.max-uri-tags=5\").run((context) -> {\n\t\t\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\t\t\tassertThat(registry.get(\"http.server.requests\").meters()).hasSize(3);\n\t\t\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t\t\t.doesNotContain(\"Reached the maximum number of URI tags for 'http.server.requests'\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2019-07-15 01:07:47","commitOrder":7,"curCode":"\tvoid shouldNotDenyNorLogIfMaxUrisIsNotReached(CapturedOutput output) {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\").run((context) -> {\n\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\tassertThat(output)\n\t\t\t\t\t.doesNotContain(\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t});\n\t}\n","date":"2019-07-15 07:24:18","endLine":95,"groupId":"10949","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldNotDenyNorLogIfMaxUrisIsNotReached","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a0/2513398ff94620d334af671315dff8c5ca1ab3.src","preCode":"\tvoid shouldNotDenyNorLogIfMaxUrisIsNotReached(CapturedOutput capturedOutput) {\n\t\tthis.contextRunner.withPropertyValues(\"management.metrics.web.client.max-uri-tags=5\").run((context) -> {\n\t\t\tMeterRegistry registry = getInitializedMeterRegistry(context);\n\t\t\tassertThat(registry.get(\"http.client.requests\").meters()).hasSize(3);\n\t\t\tassertThat(capturedOutput)\n\t\t\t\t\t.doesNotContain(\"Reached the maximum number of URI tags for 'http.client.requests'.\")\n\t\t\t\t\t.doesNotContain(\"Are you using 'uriVariables'?\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"c3816bfe7be8cc1a042396b2b7d8d236aa585c52","commitMessage":"@@@Polish output capture names\n","date":"2019-07-15 07:24:18","modifiedFileCount":"73","status":"M","submitter":"Phillip Webb"}]
