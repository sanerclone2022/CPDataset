[{"authorTime":"2018-01-23 21:57:13","codes":[{"authorDate":"2018-01-23 21:57:13","commitOrder":1,"curCode":"\tpublic void readOperationWithMappingFailureProducesBadRequestResponse() {\n\t\tload(QueryEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get()\n\t\t\t\t\t.uri(\"/query?two=two\").exchange().expectStatus().isBadRequest()\n\t\t\t\t\t.expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST, \"/endpoints/query\",\n\t\t\t\t\t\"Missing parameters: one\");\n\t\t});\n\t}\n","date":"2018-01-23 21:57:13","endLine":168,"groupId":"6508","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"readOperationWithMappingFailureProducesBadRequestResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1a/b71f71b34b05c9c57df6610d77287992dce8ef.src","preCode":"\tpublic void readOperationWithMappingFailureProducesBadRequestResponse() {\n\t\tload(QueryEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get()\n\t\t\t\t\t.uri(\"/query?two=two\").exchange().expectStatus().isBadRequest()\n\t\t\t\t\t.expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST, \"/endpoints/query\",\n\t\t\t\t\t\"Missing parameters: one\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"},{"authorDate":"2018-01-23 21:57:13","commitOrder":1,"curCode":"\tpublic void readOperationWithMissingRequiredParametersReturnsBadRequestResponse() {\n\t\tload(RequiredParameterEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get()\n\t\t\t\t\t.uri(\"/requiredparameters\").exchange().expectStatus().isBadRequest()\n\t\t\t\t\t.expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST,\n\t\t\t\t\t\"/endpoints/requiredparameters\", \"Missing parameters: foo\");\n\t\t});\n\t}\n","date":"2018-01-23 21:57:13","endLine":291,"groupId":"4957","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"readOperationWithMissingRequiredParametersReturnsBadRequestResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1a/b71f71b34b05c9c57df6610d77287992dce8ef.src","preCode":"\tpublic void readOperationWithMissingRequiredParametersReturnsBadRequestResponse() {\n\t\tload(RequiredParameterEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get()\n\t\t\t\t\t.uri(\"/requiredparameters\").exchange().expectStatus().isBadRequest()\n\t\t\t\t\t.expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST,\n\t\t\t\t\t\"/endpoints/requiredparameters\", \"Missing parameters: foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"B"}],"commitId":"1f4a32f0ad9f4e156c558d42169b9490d698643c","commitMessage":"@@@Add a way to signal that an endpoint request is invalid\n\nThis commit adds InvalidEndpointRequestException as a technology\nagnostic way to signal that an endpoint request is invalid. When such\nexception is thrown.  the web layer translates that to a 400.\n\nRather than overriding the reason.  this commit makes sure to reuse the\nerror infrastructure.\n\nCloses gh-10618\n","date":"2018-01-23 21:57:13","modifiedFileCount":"10","status":"B","submitter":"Stephane Nicoll"},{"authorTime":"2018-03-18 03:28:41","codes":[{"authorDate":"2018-03-18 03:28:41","commitOrder":2,"curCode":"\tpublic void readOperationWithMappingFailureProducesBadRequestResponse() {\n\t\tload(QueryEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get().uri(\"/query?two=two\")\n\t\t\t\t\t.accept(MediaType.APPLICATION_JSON).exchange().expectStatus()\n\t\t\t\t\t.isBadRequest().expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST, \"/endpoints/query\",\n\t\t\t\t\t\"Missing parameters: one\");\n\t\t});\n\t}\n","date":"2018-03-18 03:29:39","endLine":176,"groupId":"13481","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"readOperationWithMappingFailureProducesBadRequestResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/af/dc9f86cf9450ffa8aaf10dafc675bdf2e1e7f0.src","preCode":"\tpublic void readOperationWithMappingFailureProducesBadRequestResponse() {\n\t\tload(QueryEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get().uri(\"/query?two=two\")\n\t\t\t\t\t.exchange().expectStatus().isBadRequest().expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST, \"/endpoints/query\",\n\t\t\t\t\t\"Missing parameters: one\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"},{"authorDate":"2018-03-18 03:28:41","commitOrder":2,"curCode":"\tpublic void readOperationWithMissingRequiredParametersReturnsBadRequestResponse() {\n\t\tload(RequiredParameterEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get().uri(\"/requiredparameters\")\n\t\t\t\t\t.accept(MediaType.APPLICATION_JSON).exchange().expectStatus()\n\t\t\t\t\t.isBadRequest().expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST,\n\t\t\t\t\t\"/endpoints/requiredparameters\", \"Missing parameters: foo\");\n\t\t});\n\t}\n","date":"2018-03-18 03:29:39","endLine":299,"groupId":"6144","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"readOperationWithMissingRequiredParametersReturnsBadRequestResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/af/dc9f86cf9450ffa8aaf10dafc675bdf2e1e7f0.src","preCode":"\tpublic void readOperationWithMissingRequiredParametersReturnsBadRequestResponse() {\n\t\tload(RequiredParameterEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get().uri(\"/requiredparameters\")\n\t\t\t\t\t.exchange().expectStatus().isBadRequest().expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST,\n\t\t\t\t\t\"/endpoints/requiredparameters\", \"Missing parameters: foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"M"}],"commitId":"6e2ecb8a43e5a1a3cbf40fbc1ec7c7df2cabc991","commitMessage":"@@@Fix broken endpoint integration tests\n\nEnsure that JSON response is returned when extracting data from the\nerror details.\n\nSee gh-12513\n","date":"2018-03-18 03:29:39","modifiedFileCount":"1","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid readOperationWithMappingFailureProducesBadRequestResponse() {\n\t\tload(QueryEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get().uri(\"/query?two=two\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t.exchange().expectStatus().isBadRequest().expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST, \"/endpoints/query\", \"Missing parameters: one\");\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":158,"groupId":"10430","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"readOperationWithMappingFailureProducesBadRequestResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3d/034bfd52f13ce3b84dc8c60e6f4ef7b682d8b2.src","preCode":"\tpublic void readOperationWithMappingFailureProducesBadRequestResponse() {\n\t\tload(QueryEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get().uri(\"/query?two=two\").accept(MediaType.APPLICATION_JSON)\n\t\t\t\t\t.exchange().expectStatus().isBadRequest().expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST, \"/endpoints/query\", \"Missing parameters: one\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid readOperationWithMissingRequiredParametersReturnsBadRequestResponse() {\n\t\tload(RequiredParameterEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get().uri(\"/requiredparameters\")\n\t\t\t\t\t.accept(MediaType.APPLICATION_JSON).exchange().expectStatus().isBadRequest().expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST, \"/endpoints/requiredparameters\", \"Missing parameters: foo\");\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":268,"groupId":"10430","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"readOperationWithMissingRequiredParametersReturnsBadRequestResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3d/034bfd52f13ce3b84dc8c60e6f4ef7b682d8b2.src","preCode":"\tpublic void readOperationWithMissingRequiredParametersReturnsBadRequestResponse() {\n\t\tload(RequiredParameterEndpointConfiguration.class, (client) -> {\n\t\t\tWebTestClient.BodyContentSpec body = client.get().uri(\"/requiredparameters\")\n\t\t\t\t\t.accept(MediaType.APPLICATION_JSON).exchange().expectStatus().isBadRequest().expectBody();\n\t\t\tvalidateErrorBody(body, HttpStatus.BAD_REQUEST, \"/endpoints/requiredparameters\", \"Missing parameters: foo\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/annotation/AbstractWebEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
