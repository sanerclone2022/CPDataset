[{"authorTime":"2018-01-10 12:57:10","codes":[{"authorDate":"2018-01-10 12:57:10","commitOrder":1,"curCode":"\t\tprivate ResponseEntity<Object> toResponseEntity(Object response) {\n\t\t\tif (!(response instanceof WebEndpointResponse)) {\n\t\t\t\treturn new ResponseEntity<>(response, HttpStatus.OK);\n\t\t\t}\n\t\t\tWebEndpointResponse<?> webEndpointResponse = (WebEndpointResponse<?>) response;\n\t\t\treturn new ResponseEntity<>(webEndpointResponse.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(webEndpointResponse.getStatus()));\n\t\t}\n","date":"2018-01-20 12:44:24","endLine":305,"groupId":"15738","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toResponseEntity","params":"(Objectresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d4/947364281e389b027cef1a2deb7d6bded33cd5.src","preCode":"\t\tprivate ResponseEntity<Object> toResponseEntity(Object response) {\n\t\t\tif (!(response instanceof WebEndpointResponse)) {\n\t\t\t\treturn new ResponseEntity<>(response, HttpStatus.OK);\n\t\t\t}\n\t\t\tWebEndpointResponse<?> webEndpointResponse = (WebEndpointResponse<?>) response;\n\t\t\treturn new ResponseEntity<>(webEndpointResponse.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(webEndpointResponse.getStatus()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"B"},{"authorDate":"2018-01-10 12:57:10","commitOrder":1,"curCode":"\t\tprivate Object handleResult(Object result, HttpMethod httpMethod) {\n\t\t\tif (result == null) {\n\t\t\t\treturn new ResponseEntity<>(httpMethod == HttpMethod.GET\n\t\t\t\t\t\t? HttpStatus.NOT_FOUND : HttpStatus.NO_CONTENT);\n\t\t\t}\n\t\t\tif (!(result instanceof WebEndpointResponse)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tWebEndpointResponse<?> response = (WebEndpointResponse<?>) result;\n\t\t\treturn new ResponseEntity<Object>(response.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(response.getStatus()));\n\t\t}\n","date":"2018-01-20 12:44:24","endLine":282,"groupId":"8575","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handleResult","params":"(Objectresult@HttpMethodhttpMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e7/dae1a292dd1e40867715561fd172b87c039d00.src","preCode":"\t\tprivate Object handleResult(Object result, HttpMethod httpMethod) {\n\t\t\tif (result == null) {\n\t\t\t\treturn new ResponseEntity<>(httpMethod == HttpMethod.GET\n\t\t\t\t\t\t? HttpStatus.NOT_FOUND : HttpStatus.NO_CONTENT);\n\t\t\t}\n\t\t\tif (!(result instanceof WebEndpointResponse)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tWebEndpointResponse<?> response = (WebEndpointResponse<?>) result;\n\t\t\treturn new ResponseEntity<Object>(response.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(response.getStatus()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"B"}],"commitId":"1d39feffeabf4b94e3f900b941b58e0443d5887a","commitMessage":"@@@Overhaul actuator endpoint code\n\nRefactor several areas of the actuator endpoint code in order to make\nfuture extensions easier. The primary goal is to introduce the concept\nof an `ExposableEndpoint` that has technology specific subclasses and\ncan carry additional data for filters to use. Many other changes have\nbeen made along the way including:\n\n* A new EndpointSupplier interface that allows cleaner separation of\n  supplying vs discovering endpoints. This allows cleaner class names\n  and allows for better auto-configuration since a user can choose to\n  provide their own supplier entirely.\n\n* A `DiscoveredEndpoint` interface that allows the `EndpointFilter`\n  to be greatly simplified. A filter now doesn't need to know about\n  discovery concerns unless absolutely necessary.\n\n* Improved naming and package structure. Many technology specific\n  concerns are now grouped in a better way. Related concerns are\n  co-located and concepts from one area no longer leakage into another.\n\n* Simplified `HandlerMapping` implementations. Many common concerns have\n  been pulled up helping to create simpler subclasses.\n\n* Simplified JMX adapters. Many of the intermediary `Info` classes have\n  been removed. The `DiscoveredJmxOperation` is now responsible for\n  mapping methods to operations.\n\n* A specific @`HealthEndpointCloudFoundryExtension` for Cloud Foundry.\n  The extension logic used to create a \"full\" health endpoint extension\n  has been made explicit.\n\nFixes gh-11428\nFixes gh-11581\n","date":"2018-01-20 12:44:24","modifiedFileCount":"63","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-05-04 14:54:42","codes":[{"authorDate":"2018-01-10 12:57:10","commitOrder":2,"curCode":"\t\tprivate ResponseEntity<Object> toResponseEntity(Object response) {\n\t\t\tif (!(response instanceof WebEndpointResponse)) {\n\t\t\t\treturn new ResponseEntity<>(response, HttpStatus.OK);\n\t\t\t}\n\t\t\tWebEndpointResponse<?> webEndpointResponse = (WebEndpointResponse<?>) response;\n\t\t\treturn new ResponseEntity<>(webEndpointResponse.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(webEndpointResponse.getStatus()));\n\t\t}\n","date":"2018-01-20 12:44:24","endLine":305,"groupId":"15738","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toResponseEntity","params":"(Objectresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d4/947364281e389b027cef1a2deb7d6bded33cd5.src","preCode":"\t\tprivate ResponseEntity<Object> toResponseEntity(Object response) {\n\t\t\tif (!(response instanceof WebEndpointResponse)) {\n\t\t\t\treturn new ResponseEntity<>(response, HttpStatus.OK);\n\t\t\t}\n\t\t\tWebEndpointResponse<?> webEndpointResponse = (WebEndpointResponse<?>) response;\n\t\t\treturn new ResponseEntity<>(webEndpointResponse.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(webEndpointResponse.getStatus()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"N"},{"authorDate":"2018-05-04 14:54:42","commitOrder":2,"curCode":"\t\tprivate Object handleResult(Object result, HttpMethod httpMethod) {\n\t\t\tif (result == null) {\n\t\t\t\treturn new ResponseEntity<>(httpMethod != HttpMethod.GET\n\t\t\t\t\t\t? HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND);\n\t\t\t}\n\t\t\tif (!(result instanceof WebEndpointResponse)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tWebEndpointResponse<?> response = (WebEndpointResponse<?>) result;\n\t\t\treturn new ResponseEntity<Object>(response.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(response.getStatus()));\n\t\t}\n","date":"2018-05-04 14:54:42","endLine":281,"groupId":"15485","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handleResult","params":"(Objectresult@HttpMethodhttpMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/20/dc83ea4e3ccfce34a195b34c34f27b7f8398cb.src","preCode":"\t\tprivate Object handleResult(Object result, HttpMethod httpMethod) {\n\t\t\tif (result == null) {\n\t\t\t\treturn new ResponseEntity<>(httpMethod == HttpMethod.GET\n\t\t\t\t\t\t? HttpStatus.NOT_FOUND : HttpStatus.NO_CONTENT);\n\t\t\t}\n\t\t\tif (!(result instanceof WebEndpointResponse)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tWebEndpointResponse<?> response = (WebEndpointResponse<?>) result;\n\t\t\treturn new ResponseEntity<Object>(response.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(response.getStatus()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"}],"commitId":"b6a2a46f78fc2d13d0fae60c945167e0dbeae17e","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-05-04 14:54:42","modifiedFileCount":"138","status":"M","submitter":"Phillip Webb"},{"authorTime":"2018-07-28 08:35:43","codes":[{"authorDate":"2018-01-10 12:57:10","commitOrder":3,"curCode":"\t\tprivate ResponseEntity<Object> toResponseEntity(Object response) {\n\t\t\tif (!(response instanceof WebEndpointResponse)) {\n\t\t\t\treturn new ResponseEntity<>(response, HttpStatus.OK);\n\t\t\t}\n\t\t\tWebEndpointResponse<?> webEndpointResponse = (WebEndpointResponse<?>) response;\n\t\t\treturn new ResponseEntity<>(webEndpointResponse.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(webEndpointResponse.getStatus()));\n\t\t}\n","date":"2018-01-20 12:44:24","endLine":305,"groupId":"15738","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"toResponseEntity","params":"(Objectresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d4/947364281e389b027cef1a2deb7d6bded33cd5.src","preCode":"\t\tprivate ResponseEntity<Object> toResponseEntity(Object response) {\n\t\t\tif (!(response instanceof WebEndpointResponse)) {\n\t\t\t\treturn new ResponseEntity<>(response, HttpStatus.OK);\n\t\t\t}\n\t\t\tWebEndpointResponse<?> webEndpointResponse = (WebEndpointResponse<?>) response;\n\t\t\treturn new ResponseEntity<>(webEndpointResponse.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(webEndpointResponse.getStatus()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"N"},{"authorDate":"2018-07-28 08:35:43","commitOrder":3,"curCode":"\t\tprivate Object handleResult(Object result, HttpMethod httpMethod) {\n\t\t\tif (result == null) {\n\t\t\t\treturn new ResponseEntity<>((httpMethod != HttpMethod.GET)\n\t\t\t\t\t\t? HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND);\n\t\t\t}\n\t\t\tif (!(result instanceof WebEndpointResponse)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tWebEndpointResponse<?> response = (WebEndpointResponse<?>) result;\n\t\t\treturn new ResponseEntity<Object>(response.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(response.getStatus()));\n\t\t}\n","date":"2018-07-28 08:35:43","endLine":281,"groupId":"15485","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"handleResult","params":"(Objectresult@HttpMethodhttpMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a6/89ec4d0dbcb8a230e1b37bc9753af1b0e8195d.src","preCode":"\t\tprivate Object handleResult(Object result, HttpMethod httpMethod) {\n\t\t\tif (result == null) {\n\t\t\t\treturn new ResponseEntity<>(httpMethod != HttpMethod.GET\n\t\t\t\t\t\t? HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND);\n\t\t\t}\n\t\t\tif (!(result instanceof WebEndpointResponse)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tWebEndpointResponse<?> response = (WebEndpointResponse<?>) result;\n\t\t\treturn new ResponseEntity<Object>(response.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(response.getStatus()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"}],"commitId":"a6c9c92f2e17251137e3f59899266ead2274d6f7","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-07-28 08:35:43","modifiedFileCount":"358","status":"M","submitter":"Phillip Webb"},{"authorTime":"2020-11-20 19:48:51","codes":[{"authorDate":"2020-11-20 19:48:51","commitOrder":4,"curCode":"\t\tprivate ResponseEntity<Object> toResponseEntity(Object response) {\n\t\t\tif (!(response instanceof WebEndpointResponse)) {\n\t\t\t\treturn new ResponseEntity<>(response, HttpStatus.OK);\n\t\t\t}\n\t\t\tWebEndpointResponse<?> webEndpointResponse = (WebEndpointResponse<?>) response;\n\t\t\treturn ResponseEntity.status(webEndpointResponse.getStatus()).body(webEndpointResponse.getBody());\n\t\t}\n","date":"2020-11-20 19:48:51","endLine":365,"groupId":"6002","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"toResponseEntity","params":"(Objectresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/76/dd55d8453d7892e6e0bcac36186dd738e9b91c.src","preCode":"\t\tprivate ResponseEntity<Object> toResponseEntity(Object response) {\n\t\t\tif (!(response instanceof WebEndpointResponse)) {\n\t\t\t\treturn new ResponseEntity<>(response, HttpStatus.OK);\n\t\t\t}\n\t\t\tWebEndpointResponse<?> webEndpointResponse = (WebEndpointResponse<?>) response;\n\t\t\treturn new ResponseEntity<>(webEndpointResponse.getBody(),\n\t\t\t\t\tHttpStatus.valueOf(webEndpointResponse.getStatus()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"M"},{"authorDate":"2020-11-20 19:48:51","commitOrder":4,"curCode":"\t\tprivate Object handleResult(Object result, HttpMethod httpMethod) {\n\t\t\tif (result == null) {\n\t\t\t\treturn new ResponseEntity<>(\n\t\t\t\t\t\t(httpMethod != HttpMethod.GET) ? HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND);\n\t\t\t}\n\t\t\tif (!(result instanceof WebEndpointResponse)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tWebEndpointResponse<?> response = (WebEndpointResponse<?>) result;\n\t\t\treturn ResponseEntity.status(response.getStatus()).body(response.getBody());\n\t\t}\n","date":"2020-11-20 19:48:51","endLine":356,"groupId":"15485","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"handleResult","params":"(Objectresult@HttpMethodhttpMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/78/a3925b2e51530f1495b57253450e89a4c5668a.src","preCode":"\t\tprivate Object handleResult(Object result, HttpMethod httpMethod) {\n\t\t\tif (result == null) {\n\t\t\t\treturn new ResponseEntity<>(\n\t\t\t\t\t\t(httpMethod != HttpMethod.GET) ? HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND);\n\t\t\t}\n\t\t\tif (!(result instanceof WebEndpointResponse)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tWebEndpointResponse<?> response = (WebEndpointResponse<?>) result;\n\t\t\treturn new ResponseEntity<Object>(response.getBody(), HttpStatus.valueOf(response.getStatus()));\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"M"}],"commitId":"11c81ad2455b3d8494785cedc72054100ccef973","commitMessage":"@@@Merge branch '2.3.x'\n\nCloses gh-24223\n","date":"2020-11-20 19:48:51","modifiedFileCount":"3","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-03-19 10:11:14","codes":[{"authorDate":"2021-03-19 10:11:14","commitOrder":5,"curCode":"\t\tprivate ResponseEntity<Object> toResponseEntity(Object response) {\n\t\t\tif (!(response instanceof WebEndpointResponse)) {\n\t\t\t\treturn new ResponseEntity<>(response, HttpStatus.OK);\n\t\t\t}\n\t\t\tWebEndpointResponse<?> webEndpointResponse = (WebEndpointResponse<?>) response;\n\t\t\tMediaType contentType = (webEndpointResponse.getContentType() != null)\n\t\t\t\t\t? new MediaType(webEndpointResponse.getContentType()) : null;\n\t\t\treturn ResponseEntity.status(webEndpointResponse.getStatus()).contentType(contentType)\n\t\t\t\t\t.body(webEndpointResponse.getBody());\n\t\t}\n","date":"2021-03-19 11:36:18","endLine":357,"groupId":"10587","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"toResponseEntity","params":"(Objectresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8b/f3c3b907f8df929ed07d516e94f571c45a7015.src","preCode":"\t\tprivate ResponseEntity<Object> toResponseEntity(Object response) {\n\t\t\tif (!(response instanceof WebEndpointResponse)) {\n\t\t\t\treturn new ResponseEntity<>(response, HttpStatus.OK);\n\t\t\t}\n\t\t\tWebEndpointResponse<?> webEndpointResponse = (WebEndpointResponse<?>) response;\n\t\t\treturn ResponseEntity.status(webEndpointResponse.getStatus()).body(webEndpointResponse.getBody());\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"M"},{"authorDate":"2021-03-19 10:11:14","commitOrder":5,"curCode":"\t\tprivate Object handleResult(Object result, HttpMethod httpMethod) {\n\t\t\tif (result == null) {\n\t\t\t\treturn new ResponseEntity<>(\n\t\t\t\t\t\t(httpMethod != HttpMethod.GET) ? HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND);\n\t\t\t}\n\t\t\tif (!(result instanceof WebEndpointResponse)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tWebEndpointResponse<?> response = (WebEndpointResponse<?>) result;\n\t\t\tMediaType contentType = (response.getContentType() != null) ? new MediaType(response.getContentType())\n\t\t\t\t\t: null;\n\t\t\treturn ResponseEntity.status(response.getStatus()).contentType(contentType).body(response.getBody());\n\t\t}\n","date":"2021-03-19 11:36:18","endLine":359,"groupId":"10587","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"handleResult","params":"(Objectresult@HttpMethodhttpMethod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9b/330fc9280b2201de3837d8f5b5ae713e0d9067.src","preCode":"\t\tprivate Object handleResult(Object result, HttpMethod httpMethod) {\n\t\t\tif (result == null) {\n\t\t\t\treturn new ResponseEntity<>(\n\t\t\t\t\t\t(httpMethod != HttpMethod.GET) ? HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND);\n\t\t\t}\n\t\t\tif (!(result instanceof WebEndpointResponse)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tWebEndpointResponse<?> response = (WebEndpointResponse<?>) result;\n\t\t\treturn ResponseEntity.status(response.getStatus()).body(response.getBody());\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"M"}],"commitId":"1ec49cee8be3d3b48524b4b2264e3c5bd8d5cdc8","commitMessage":"@@@Allow operations to produce different output\n\nUpdate the actuator @Enpoint` infrastructure code so that operations\nmay inject enums that indicate the type of output to produce. A new\n`Producible` interface can be implemented by any enum that indicates\nthe mime-type that an enum value produces.\n\nThe new `OperationArgumentResolver` provides a general strategy for\nresolving operation arguments with `ProducibleOperationArgumentResolver`\nproviding support for `Producible` enums. Existing injection support has\nbeen refactored to use the new resolver.\n\nSee gh-25738\n","date":"2021-03-19 11:36:18","modifiedFileCount":"11","status":"M","submitter":"Andy Wilkinson"}]
