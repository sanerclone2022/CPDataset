[{"authorTime":"2017-10-14 00:14:27","codes":[{"authorDate":"2017-10-14 00:14:27","commitOrder":1,"curCode":"\tpublic void jmxEndpointsCanBeExcluded() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.exclude:*\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[0],\n\t\t\t\t\t\t\tnew String[] { \"beans\", \"conditions\", \"configprops\", \"env\",\n\t\t\t\t\t\t\t\t\t\"health\", \"mappings\", \"shutdown\", \"threaddump\",\n\t\t\t\t\t\t\t\t\t\"trace\" });\n\n\t\t\t\t});\n\t}\n","date":"2017-11-16 06:41:38","endLine":74,"groupId":"1291","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"jmxEndpointsCanBeExcluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6e/8d9afd7ab3c22f5d51df010492867f6f7325c3.src","preCode":"\tpublic void jmxEndpointsCanBeExcluded() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.exclude:*\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[0],\n\t\t\t\t\t\t\tnew String[] { \"beans\", \"conditions\", \"configprops\", \"env\",\n\t\t\t\t\t\t\t\t\t\"health\", \"mappings\", \"shutdown\", \"threaddump\",\n\t\t\t\t\t\t\t\t\t\"trace\" });\n\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JmxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2017-10-14 00:14:27","commitOrder":1,"curCode":"\tpublic void singleJmxEndpointCanBeExposed() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.expose=beans\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[] { \"beans\" },\n\t\t\t\t\t\t\tnew String[] { \"conditions\", \"configprops\", \"env\", \"health\",\n\t\t\t\t\t\t\t\t\t\"mappings\", \"shutdown\", \"threaddump\", \"trace\" });\n\t\t\t\t});\n\t}\n","date":"2017-11-16 06:41:38","endLine":85,"groupId":"9661","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"singleJmxEndpointCanBeExposed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6e/8d9afd7ab3c22f5d51df010492867f6f7325c3.src","preCode":"\tpublic void singleJmxEndpointCanBeExposed() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.expose=beans\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[] { \"beans\" },\n\t\t\t\t\t\t\tnew String[] { \"conditions\", \"configprops\", \"env\", \"health\",\n\t\t\t\t\t\t\t\t\t\"mappings\", \"shutdown\", \"threaddump\", \"trace\" });\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JmxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"fd5c43cdc97a3b17234a139b566a96eabd282639","commitMessage":"@@@Separate endpoint concerns\n\nUpdate endpoint code to provide cleaner separation of concerns.\nSpecifically.  the top level endpoint package is no longer aware of\nthe fact that JMX and HTTP are ultimately used to expose endpoints.\nCaching concerns have also been abstracted behind a general purpose\n`OperationMethodInvokerAdvisor` interface.\n\nConfiguration properties have been refined to further enforce\nseparation. The `management.endpoint.<name>` prefix provides\nconfiguration for a  single endpoint (including enable and cache\ntime-to-live). These  properties are now technology agnostic (they\ndon't include `web` or `jmx` sub properties).\n\nThe `management.endpoints.<technology>` prefix provide exposure specific\nconfiguration. For example.  `management.endpoints.web.path-mapping`\nallow endpoint URLs to be changed.\n\nEndpoint enabled/disabled logic has been simplified so that endpoints\ncan't be disabled per exposure technology. Instead a filter based\napproach is used to allow refinement of what endpoints are exposed over\na given technology.\n\nFixes gh-10176\n","date":"2017-11-16 06:41:38","modifiedFileCount":"108","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-01-30 20:54:52","codes":[{"authorDate":"2018-01-30 20:54:52","commitOrder":2,"curCode":"\tpublic void jmxEndpointsCanBeExcluded() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.exclude:*\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[0],\n\t\t\t\t\t\t\tnew String[] { \"beans\", \"conditions\", \"configprops\", \"env\",\n\t\t\t\t\t\t\t\t\t\"health\", \"mappings\", \"shutdown\", \"threaddump\",\n\t\t\t\t\t\t\t\t\t\"httptrace\" });\n\n\t\t\t\t});\n\t}\n","date":"2018-01-30 20:55:27","endLine":76,"groupId":"1291","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"jmxEndpointsCanBeExcluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/2d7ac2a2a4ce9d6305204d986937f3d6858c2b.src","preCode":"\tpublic void jmxEndpointsCanBeExcluded() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.exclude:*\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[0],\n\t\t\t\t\t\t\tnew String[] { \"beans\", \"conditions\", \"configprops\", \"env\",\n\t\t\t\t\t\t\t\t\t\"health\", \"mappings\", \"shutdown\", \"threaddump\",\n\t\t\t\t\t\t\t\t\t\"trace\" });\n\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JmxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2018-01-30 20:54:52","commitOrder":2,"curCode":"\tpublic void singleJmxEndpointCanBeExposed() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.expose=beans\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[] { \"beans\" },\n\t\t\t\t\t\t\tnew String[] { \"conditions\", \"configprops\", \"env\", \"health\",\n\t\t\t\t\t\t\t\t\t\"mappings\", \"shutdown\", \"threaddump\", \"httptrace\" });\n\t\t\t\t});\n\t}\n","date":"2018-01-30 20:55:27","endLine":87,"groupId":"9661","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"singleJmxEndpointCanBeExposed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/2d7ac2a2a4ce9d6305204d986937f3d6858c2b.src","preCode":"\tpublic void singleJmxEndpointCanBeExposed() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.expose=beans\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[] { \"beans\" },\n\t\t\t\t\t\t\tnew String[] { \"conditions\", \"configprops\", \"env\", \"health\",\n\t\t\t\t\t\t\t\t\t\"mappings\", \"shutdown\", \"threaddump\", \"trace\" });\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JmxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"356efaa7c87acda5d3b54f8fce44078944283db2","commitMessage":"@@@Rename trace to httptrace\n\nCloses gh-11806\n","date":"2018-01-30 20:55:27","modifiedFileCount":"6","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2018-02-12 21:00:40","codes":[{"authorDate":"2018-02-12 21:00:40","commitOrder":3,"curCode":"\tpublic void jmxEndpointsCanBeExcluded() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.endpoints.jmx.exposure.exclude:*\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[0],\n\t\t\t\t\t\t\tnew String[] { \"beans\", \"conditions\", \"configprops\", \"env\",\n\t\t\t\t\t\t\t\t\t\"health\", \"mappings\", \"shutdown\", \"threaddump\",\n\t\t\t\t\t\t\t\t\t\"httptrace\" });\n\n\t\t\t\t});\n\t}\n","date":"2018-02-12 21:00:40","endLine":77,"groupId":"1291","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"jmxEndpointsCanBeExcluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/a24d3dbff144cc78e46998dd1c2990a1827c4b.src","preCode":"\tpublic void jmxEndpointsCanBeExcluded() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.exclude:*\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[0],\n\t\t\t\t\t\t\tnew String[] { \"beans\", \"conditions\", \"configprops\", \"env\",\n\t\t\t\t\t\t\t\t\t\"health\", \"mappings\", \"shutdown\", \"threaddump\",\n\t\t\t\t\t\t\t\t\t\"httptrace\" });\n\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JmxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2018-02-12 21:00:40","commitOrder":3,"curCode":"\tpublic void singleJmxEndpointCanBeExposed() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"management.endpoints.jmx.exposure.include=beans\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[] { \"beans\" },\n\t\t\t\t\t\t\tnew String[] { \"conditions\", \"configprops\", \"env\", \"health\",\n\t\t\t\t\t\t\t\t\t\"mappings\", \"shutdown\", \"threaddump\", \"httptrace\" });\n\t\t\t\t});\n\t}\n","date":"2018-02-12 21:00:40","endLine":89,"groupId":"9661","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"singleJmxEndpointCanBeExposed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/a24d3dbff144cc78e46998dd1c2990a1827c4b.src","preCode":"\tpublic void singleJmxEndpointCanBeExposed() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.expose=beans\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\t\t\tcheckEndpointMBeans(mBeanServer, new String[] { \"beans\" },\n\t\t\t\t\t\t\tnew String[] { \"conditions\", \"configprops\", \"env\", \"health\",\n\t\t\t\t\t\t\t\t\t\"mappings\", \"shutdown\", \"threaddump\", \"httptrace\" });\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JmxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"7473642f5852900166d4dfa754b9362612e2db32","commitMessage":"@@@Harmonize endpoints exclude property\n\nCloses gh-11914\n","date":"2018-02-12 21:00:40","modifiedFileCount":"19","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid jmxEndpointsCanBeExcluded() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.exposure.exclude:*\").run((context) -> {\n\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\tcheckEndpointMBeans(mBeanServer, new String[0], new String[] { \"beans\", \"conditions\", \"configprops\", \"env\",\n\t\t\t\t\t\"health\", \"mappings\", \"shutdown\", \"threaddump\", \"httptrace\" });\n\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":77,"groupId":"10821","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"jmxEndpointsCanBeExcluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6b/c4a40d321cc368aed92b93b89a43597ca75003.src","preCode":"\tpublic void jmxEndpointsCanBeExcluded() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.exposure.exclude:*\").run((context) -> {\n\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\tcheckEndpointMBeans(mBeanServer, new String[0], new String[] { \"beans\", \"conditions\", \"configprops\", \"env\",\n\t\t\t\t\t\"health\", \"mappings\", \"shutdown\", \"threaddump\", \"httptrace\" });\n\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JmxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid singleJmxEndpointCanBeExposed() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.exposure.include=beans\").run((context) -> {\n\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\tcheckEndpointMBeans(mBeanServer, new String[] { \"beans\" }, new String[] { \"conditions\", \"configprops\",\n\t\t\t\t\t\"env\", \"health\", \"mappings\", \"shutdown\", \"threaddump\", \"httptrace\" });\n\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":86,"groupId":"10821","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"singleJmxEndpointCanBeExposed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6b/c4a40d321cc368aed92b93b89a43597ca75003.src","preCode":"\tpublic void singleJmxEndpointCanBeExposed() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoints.jmx.exposure.include=beans\").run((context) -> {\n\t\t\tMBeanServer mBeanServer = context.getBean(MBeanServer.class);\n\t\t\tcheckEndpointMBeans(mBeanServer, new String[] { \"beans\" }, new String[] { \"conditions\", \"configprops\",\n\t\t\t\t\t\"env\", \"health\", \"mappings\", \"shutdown\", \"threaddump\", \"httptrace\" });\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/JmxEndpointIntegrationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
