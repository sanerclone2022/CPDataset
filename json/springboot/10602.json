[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void installAndUninstall() throws Exception {\n\t\tFile foo = createTemporaryFile(\"foo.jar\");\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"foo\"))).willReturn(Arrays.asList(foo));\n\t\tthis.installer.install(Arrays.asList(\"foo\"));\n\t\tthis.installer.uninstall(Arrays.asList(\"foo\"));\n\t\tassertThat(getNamesOfFilesInLibExt()).contains(\".installed\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":79,"groupId":"8144","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"installAndUninstall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8a/79cd723730ecd54414423d57fd5c5e75c0ccfe.src","preCode":"\tpublic void installAndUninstall() throws Exception {\n\t\tFile foo = createTemporaryFile(\"foo.jar\");\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"foo\"))).willReturn(Arrays.asList(foo));\n\t\tthis.installer.install(Arrays.asList(\"foo\"));\n\t\tthis.installer.uninstall(Arrays.asList(\"foo\"));\n\t\tassertThat(getNamesOfFilesInLibExt()).contains(\".installed\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/install/InstallerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void uninstallAll() throws Exception {\n\t\tFile alpha = createTemporaryFile(\"alpha.jar\");\n\t\tFile bravo = createTemporaryFile(\"bravo.jar\");\n\t\tFile charlie = createTemporaryFile(\"charlie.jar\");\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"bravo\")))\n\t\t\t\t.willReturn(Arrays.asList(bravo, alpha));\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"charlie\")))\n\t\t\t\t.willReturn(Arrays.asList(charlie, alpha));\n\t\tthis.installer.install(Arrays.asList(\"bravo\"));\n\t\tthis.installer.install(Arrays.asList(\"charlie\"));\n\t\tassertThat(getNamesOfFilesInLibExt()).containsOnly(\"alpha.jar\", \"bravo.jar\",\n\t\t\t\t\"charlie.jar\", \".installed\");\n\t\tthis.installer.uninstallAll();\n\t\tassertThat(getNamesOfFilesInLibExt()).containsOnly(\".installed\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":118,"groupId":"8145","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"uninstallAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8a/79cd723730ecd54414423d57fd5c5e75c0ccfe.src","preCode":"\tpublic void uninstallAll() throws Exception {\n\t\tFile alpha = createTemporaryFile(\"alpha.jar\");\n\t\tFile bravo = createTemporaryFile(\"bravo.jar\");\n\t\tFile charlie = createTemporaryFile(\"charlie.jar\");\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"bravo\")))\n\t\t\t\t.willReturn(Arrays.asList(bravo, alpha));\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"charlie\")))\n\t\t\t\t.willReturn(Arrays.asList(charlie, alpha));\n\t\tthis.installer.install(Arrays.asList(\"bravo\"));\n\t\tthis.installer.install(Arrays.asList(\"charlie\"));\n\t\tassertThat(getNamesOfFilesInLibExt()).containsOnly(\"alpha.jar\", \"bravo.jar\",\n\t\t\t\t\"charlie.jar\", \".installed\");\n\t\tthis.installer.uninstallAll();\n\t\tassertThat(getNamesOfFilesInLibExt()).containsOnly(\".installed\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/install/InstallerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid installAndUninstall() throws Exception {\n\t\tFile foo = createTemporaryFile(\"foo.jar\");\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"foo\"))).willReturn(Arrays.asList(foo));\n\t\tthis.installer.install(Arrays.asList(\"foo\"));\n\t\tthis.installer.uninstall(Arrays.asList(\"foo\"));\n\t\tassertThat(getNamesOfFilesInLibExt()).contains(\".installed\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":74,"groupId":"10602","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"installAndUninstall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c4/7ba964001bb9487a7e7197adb54bcdf8922050.src","preCode":"\tpublic void installAndUninstall() throws Exception {\n\t\tFile foo = createTemporaryFile(\"foo.jar\");\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"foo\"))).willReturn(Arrays.asList(foo));\n\t\tthis.installer.install(Arrays.asList(\"foo\"));\n\t\tthis.installer.uninstall(Arrays.asList(\"foo\"));\n\t\tassertThat(getNamesOfFilesInLibExt()).contains(\".installed\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/install/InstallerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid uninstallAll() throws Exception {\n\t\tFile alpha = createTemporaryFile(\"alpha.jar\");\n\t\tFile bravo = createTemporaryFile(\"bravo.jar\");\n\t\tFile charlie = createTemporaryFile(\"charlie.jar\");\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"bravo\"))).willReturn(Arrays.asList(bravo, alpha));\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"charlie\"))).willReturn(Arrays.asList(charlie, alpha));\n\t\tthis.installer.install(Arrays.asList(\"bravo\"));\n\t\tthis.installer.install(Arrays.asList(\"charlie\"));\n\t\tassertThat(getNamesOfFilesInLibExt()).containsOnly(\"alpha.jar\", \"bravo.jar\", \"charlie.jar\", \".installed\");\n\t\tthis.installer.uninstallAll();\n\t\tassertThat(getNamesOfFilesInLibExt()).containsOnly(\".installed\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":105,"groupId":"10602","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"uninstallAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c4/7ba964001bb9487a7e7197adb54bcdf8922050.src","preCode":"\tpublic void uninstallAll() throws Exception {\n\t\tFile alpha = createTemporaryFile(\"alpha.jar\");\n\t\tFile bravo = createTemporaryFile(\"bravo.jar\");\n\t\tFile charlie = createTemporaryFile(\"charlie.jar\");\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"bravo\"))).willReturn(Arrays.asList(bravo, alpha));\n\t\tgiven(this.resolver.resolve(Arrays.asList(\"charlie\"))).willReturn(Arrays.asList(charlie, alpha));\n\t\tthis.installer.install(Arrays.asList(\"bravo\"));\n\t\tthis.installer.install(Arrays.asList(\"charlie\"));\n\t\tassertThat(getNamesOfFilesInLibExt()).containsOnly(\"alpha.jar\", \"bravo.jar\", \"charlie.jar\", \".installed\");\n\t\tthis.installer.uninstallAll();\n\t\tassertThat(getNamesOfFilesInLibExt()).containsOnly(\".installed\");\n\t}\n","realPath":"spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/install/InstallerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
