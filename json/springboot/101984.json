[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void multipleServletBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"servletBean1\", beanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"servletBean1\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean1/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean2/\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":264,"groupId":"11269","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"multipleServletBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e4/320681e82e437aa1d8ddd837f60f992e659d96.src","preCode":"\tpublic void multipleServletBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"servletBean1\", beanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"servletBean1\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean1/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean2/\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void multipleServletBeansWithMainDispatcher() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"dispatcherServlet\",\n\t\t\t\tbeanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"dispatcherServlet\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean2/\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":287,"groupId":"4312","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"multipleServletBeansWithMainDispatcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e4/320681e82e437aa1d8ddd837f60f992e659d96.src","preCode":"\tpublic void multipleServletBeansWithMainDispatcher() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"dispatcherServlet\",\n\t\t\t\tbeanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"dispatcherServlet\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean2/\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void multipleServletBeans() {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"servletBean1\", beanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"servletBean1\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean1/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean2/\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":262,"groupId":"11269","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"multipleServletBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0b/dfdead68209afc728f7b3272774c5180865672.src","preCode":"\tpublic void multipleServletBeans() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"servletBean1\", beanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"servletBean1\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean1/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean2/\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void multipleServletBeansWithMainDispatcher() {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"dispatcherServlet\",\n\t\t\t\tbeanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"dispatcherServlet\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean2/\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":285,"groupId":"4312","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"multipleServletBeansWithMainDispatcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0b/dfdead68209afc728f7b3272774c5180865672.src","preCode":"\tpublic void multipleServletBeansWithMainDispatcher() throws Exception {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class,\n\t\t\t\twithSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"dispatcherServlet\",\n\t\t\t\tbeanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"dispatcherServlet\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration())\n\t\t\t\t.addMapping(\"/servletBean2/\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid multipleServletBeans() {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"servletBean1\", beanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"servletBean1\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/servletBean1/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration()).addMapping(\"/servletBean2/\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":242,"groupId":"101984","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"multipleServletBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/3fee8ddaf0799dd411d1c235b44bbb2716025e.src","preCode":"\tpublic void multipleServletBeans() {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"servletBean1\", beanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"servletBean1\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/servletBean1/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration()).addMapping(\"/servletBean2/\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid multipleServletBeansWithMainDispatcher() {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"dispatcherServlet\", beanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"dispatcherServlet\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration()).addMapping(\"/servletBean2/\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":261,"groupId":"101984","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"multipleServletBeansWithMainDispatcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/41/3fee8ddaf0799dd411d1c235b44bbb2716025e.src","preCode":"\tpublic void multipleServletBeansWithMainDispatcher() {\n\t\taddWebServerFactoryBean();\n\t\tServlet servlet1 = mock(Servlet.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet1).getOrder()).willReturn(1);\n\t\tServlet servlet2 = mock(Servlet.class, withSettings().extraInterfaces(Ordered.class));\n\t\tgiven(((Ordered) servlet2).getOrder()).willReturn(2);\n\t\tthis.context.registerBeanDefinition(\"servletBean2\", beanDefinition(servlet2));\n\t\tthis.context.registerBeanDefinition(\"dispatcherServlet\", beanDefinition(servlet1));\n\t\tthis.context.refresh();\n\t\tMockServletWebServerFactory factory = getWebServerFactory();\n\t\tServletContext servletContext = factory.getServletContext();\n\t\tInOrder ordered = inOrder(servletContext);\n\t\tordered.verify(servletContext).addServlet(\"dispatcherServlet\", servlet1);\n\t\tordered.verify(servletContext).addServlet(\"servletBean2\", servlet2);\n\t\tverify(factory.getRegisteredServlet(0).getRegistration()).addMapping(\"/\");\n\t\tverify(factory.getRegisteredServlet(1).getRegistration()).addMapping(\"/servletBean2/\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContextTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
