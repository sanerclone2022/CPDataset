[{"authorTime":"2018-01-11 18:15:29","codes":[{"authorDate":"2018-01-11 18:15:29","commitOrder":3,"curCode":"\tprotected final void testBasicSslWithKeyStore(String keyStore, String keyPassword) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyStore(keyStore);\n\t\tssl.setKeyPassword(keyPassword);\n\t\tfactory.setSsl(ssl);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tReactorClientHttpConnector connector = buildTrustAllSslConnector();\n\t\tWebClient client = WebClient.builder()\n\t\t\t\t.baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(connector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromObject(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block()).isEqualTo(\"Hello World\");\n\t}\n","date":"2018-01-11 18:15:29","endLine":127,"groupId":"11024","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSslWithKeyStore","params":"(StringkeyStore@StringkeyPassword)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1c/2b433fa9fa702fbe60054845fe4475700ecdbc.src","preCode":"\tprotected final void testBasicSslWithKeyStore(String keyStore, String keyPassword) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyStore(keyStore);\n\t\tssl.setKeyPassword(keyPassword);\n\t\tfactory.setSsl(ssl);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tReactorClientHttpConnector connector = buildTrustAllSslConnector();\n\t\tWebClient client = WebClient.builder()\n\t\t\t\t.baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(connector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromObject(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block()).isEqualTo(\"Hello World\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"MB"},{"authorDate":"2018-01-11 18:15:29","commitOrder":3,"curCode":"\tprotected void testClientAuthSuccess(Ssl sslConfiguration, ReactorClientHttpConnector clientConnector) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(sslConfiguration);\n\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\n\t\tWebClient client = WebClient.builder()\n\t\t\t\t.baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(clientConnector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromObject(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block()).isEqualTo(\"Hello World\");\n\t}\n","date":"2018-01-11 18:15:29","endLine":189,"groupId":"11024","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientAuthSuccess","params":"(SslsslConfiguration@ReactorClientHttpConnectorclientConnector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1c/2b433fa9fa702fbe60054845fe4475700ecdbc.src","preCode":"\tprotected void testClientAuthSuccess(Ssl sslConfiguration, ReactorClientHttpConnector clientConnector) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(sslConfiguration);\n\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\n\t\tWebClient client = WebClient.builder()\n\t\t\t\t.baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(clientConnector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromObject(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block()).isEqualTo(\"Hello World\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"}],"commitId":"6ecdd6e9c131740bd34db1f92f8c0875f0bc84f5","commitMessage":"@@@Add SSL client Auth support with Reactor Netty\n\nThis commit adds SSL client Authentication support\nto Reactor Netty and adds the relevant tests to\n`AbstractReactiveWebServerFactoryTests` for all servers.\n\nFixes gh-11488\n","date":"2018-01-11 18:15:29","modifiedFileCount":"2","status":"M","submitter":"Brian Clozel"},{"authorTime":"2018-12-20 23:30:51","codes":[{"authorDate":"2018-12-20 23:30:51","commitOrder":4,"curCode":"\tprotected final void testBasicSslWithKeyStore(String keyStore, String keyPassword) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyStore(keyStore);\n\t\tssl.setKeyPassword(keyPassword);\n\t\tfactory.setSsl(ssl);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tReactorClientHttpConnector connector = buildTrustAllSslConnector();\n\t\tWebClient client = WebClient.builder()\n\t\t\t\t.baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(connector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromObject(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","date":"2018-12-20 23:30:51","endLine":133,"groupId":"11024","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSslWithKeyStore","params":"(StringkeyStore@StringkeyPassword)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9e/efb072bf19178cd3bf5a868ea286c7a541560c.src","preCode":"\tprotected final void testBasicSslWithKeyStore(String keyStore, String keyPassword) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyStore(keyStore);\n\t\tssl.setKeyPassword(keyPassword);\n\t\tfactory.setSsl(ssl);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tReactorClientHttpConnector connector = buildTrustAllSslConnector();\n\t\tWebClient client = WebClient.builder()\n\t\t\t\t.baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(connector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromObject(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block()).isEqualTo(\"Hello World\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2018-12-20 23:30:51","commitOrder":4,"curCode":"\tprotected void testClientAuthSuccess(Ssl sslConfiguration,\n\t\t\tReactorClientHttpConnector clientConnector) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(sslConfiguration);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tWebClient client = WebClient.builder()\n\t\t\t\t.baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(clientConnector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromObject(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","date":"2018-12-20 23:30:51","endLine":195,"groupId":"11024","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientAuthSuccess","params":"(SslsslConfiguration@ReactorClientHttpConnectorclientConnector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9e/efb072bf19178cd3bf5a868ea286c7a541560c.src","preCode":"\tprotected void testClientAuthSuccess(Ssl sslConfiguration,\n\t\t\tReactorClientHttpConnector clientConnector) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(sslConfiguration);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tWebClient client = WebClient.builder()\n\t\t\t\t.baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(clientConnector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromObject(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block()).isEqualTo(\"Hello World\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"9d2d6d5812d34b0bc04da3a124b9c5c0da511c04","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2018-12-20 23:30:51","modifiedFileCount":"22","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-09-25 20:57:33","codes":[{"authorDate":"2019-09-25 20:57:33","commitOrder":5,"curCode":"\tprotected final void testBasicSslWithKeyStore(String keyStore, String keyPassword) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyStore(keyStore);\n\t\tssl.setKeyPassword(keyPassword);\n\t\tfactory.setSsl(ssl);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tReactorClientHttpConnector connector = buildTrustAllSslConnector();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(connector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromValue(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","date":"2019-09-25 20:57:33","endLine":128,"groupId":"11024","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSslWithKeyStore","params":"(StringkeyStore@StringkeyPassword)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/33/9a4beef872ac33577a12f400e9ea075125c2a1.src","preCode":"\tprotected final void testBasicSslWithKeyStore(String keyStore, String keyPassword) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyStore(keyStore);\n\t\tssl.setKeyPassword(keyPassword);\n\t\tfactory.setSsl(ssl);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tReactorClientHttpConnector connector = buildTrustAllSslConnector();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(connector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromObject(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2019-09-25 20:57:33","commitOrder":5,"curCode":"\tprotected void testClientAuthSuccess(Ssl sslConfiguration, ReactorClientHttpConnector clientConnector) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(sslConfiguration);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(clientConnector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromValue(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","date":"2019-09-25 20:57:33","endLine":182,"groupId":"11024","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientAuthSuccess","params":"(SslsslConfiguration@ReactorClientHttpConnectorclientConnector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/33/9a4beef872ac33577a12f400e9ea075125c2a1.src","preCode":"\tprotected void testClientAuthSuccess(Ssl sslConfiguration, ReactorClientHttpConnector clientConnector) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(sslConfiguration);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(clientConnector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromObject(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"}],"commitId":"7548da1b400fe5feac6be7c8e094bfad2f7d5fee","commitMessage":"@@@Merge pull request #18349 from dreis2211\n\n* gh-18349:\n  Fix deprecation warnings caused by BodyInserters.fromObject\n\nCloses gh-18349\n","date":"2019-09-25 20:57:33","modifiedFileCount":"3","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-09-30 19:21:16","codes":[{"authorDate":"2020-09-30 19:21:16","commitOrder":6,"curCode":"\tprotected final void testBasicSslWithKeyStore(String keyStore, String keyPassword) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyStore(keyStore);\n\t\tssl.setKeyPassword(keyPassword);\n\t\tfactory.setSsl(ssl);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tReactorClientHttpConnector connector = buildTrustAllSslConnector();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(connector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromValue(\"Hello World\")).retrieve().bodyToMono(String.class);\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","date":"2020-09-30 19:46:57","endLine":145,"groupId":"11024","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSslWithKeyStore","params":"(StringkeyStore@StringkeyPassword)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1a/7ed7191ac2d8b055dd714c69dbf65005365e00.src","preCode":"\tprotected final void testBasicSslWithKeyStore(String keyStore, String keyPassword) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyStore(keyStore);\n\t\tssl.setKeyPassword(keyPassword);\n\t\tfactory.setSsl(ssl);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tReactorClientHttpConnector connector = buildTrustAllSslConnector();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(connector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromValue(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2020-09-30 19:21:16","commitOrder":6,"curCode":"\tprotected void testClientAuthSuccess(Ssl sslConfiguration, ReactorClientHttpConnector clientConnector) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(sslConfiguration);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(clientConnector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromValue(\"Hello World\")).retrieve().bodyToMono(String.class);\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","date":"2020-09-30 19:46:57","endLine":238,"groupId":"11024","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientAuthSuccess","params":"(SslsslConfiguration@ReactorClientHttpConnectorclientConnector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1a/7ed7191ac2d8b055dd714c69dbf65005365e00.src","preCode":"\tprotected void testClientAuthSuccess(Ssl sslConfiguration, ReactorClientHttpConnector clientConnector) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(sslConfiguration);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(clientConnector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromValue(\"Hello World\")).exchange()\n\t\t\t\t.flatMap((response) -> response.bodyToMono(String.class));\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"M"}],"commitId":"366fec33d06b6ab4ee4f1bc9513c07a227d207de","commitMessage":"@@@Adapt to API change in Spring Framework 5.3.0 snapshots\n\nSee gh-23534\n","date":"2020-09-30 19:46:57","modifiedFileCount":"9","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2020-09-30 19:21:16","codes":[{"authorDate":"2020-11-05 19:40:07","commitOrder":7,"curCode":"\tprotected final void testBasicSslWithKeyStore(String keyStore, String keyPassword) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyStore(keyStore);\n\t\tssl.setKeyPassword(keyPassword);\n\t\tssl.setKeyStorePassword(\"secret\");\n\t\tfactory.setSsl(ssl);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tReactorClientHttpConnector connector = buildTrustAllSslConnector();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(connector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromValue(\"Hello World\")).retrieve().bodyToMono(String.class);\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","date":"2020-11-05 19:40:07","endLine":144,"groupId":"101899","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSslWithKeyStore","params":"(StringkeyStore@StringkeyPassword)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5d/b51932a15f6620f1c63e91b0ed2547bccf62d1.src","preCode":"\tprotected final void testBasicSslWithKeyStore(String keyStore, String keyPassword) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tSsl ssl = new Ssl();\n\t\tssl.setKeyStore(keyStore);\n\t\tssl.setKeyPassword(keyPassword);\n\t\tfactory.setSsl(ssl);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tReactorClientHttpConnector connector = buildTrustAllSslConnector();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(connector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromValue(\"Hello World\")).retrieve().bodyToMono(String.class);\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"},{"authorDate":"2020-09-30 19:21:16","commitOrder":7,"curCode":"\tprotected void testClientAuthSuccess(Ssl sslConfiguration, ReactorClientHttpConnector clientConnector) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(sslConfiguration);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(clientConnector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromValue(\"Hello World\")).retrieve().bodyToMono(String.class);\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","date":"2020-09-30 19:46:57","endLine":238,"groupId":"101899","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientAuthSuccess","params":"(SslsslConfiguration@ReactorClientHttpConnectorclientConnector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/1a/7ed7191ac2d8b055dd714c69dbf65005365e00.src","preCode":"\tprotected void testClientAuthSuccess(Ssl sslConfiguration, ReactorClientHttpConnector clientConnector) {\n\t\tAbstractReactiveWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(sslConfiguration);\n\t\tthis.webServer = factory.getWebServer(new EchoHandler());\n\t\tthis.webServer.start();\n\t\tWebClient client = WebClient.builder().baseUrl(\"https://localhost:\" + this.webServer.getPort())\n\t\t\t\t.clientConnector(clientConnector).build();\n\t\tMono<String> result = client.post().uri(\"/test\").contentType(MediaType.TEXT_PLAIN)\n\t\t\t\t.body(BodyInserters.fromValue(\"Hello World\")).retrieve().bodyToMono(String.class);\n\t\tassertThat(result.block(Duration.ofSeconds(30))).isEqualTo(\"Hello World\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"N"}],"commitId":"06f37f429543da621cfff37c094478c1fc6939f7","commitMessage":"@@@Merge branch '2.3.x'\n\nCloses gh-24053\n","date":"2020-11-05 19:40:07","modifiedFileCount":"3","status":"M","submitter":"Andy Wilkinson"}]
