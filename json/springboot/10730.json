[{"authorTime":"2018-01-03 03:13:23","codes":[{"authorDate":"2018-01-03 03:13:23","commitOrder":3,"curCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\"securityInterceptor\");\n\t\t\tString applicationId = (String) ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\"applicationId\");\n\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t});\n\t}\n","date":"2018-03-03 10:30:55","endLine":142,"groupId":"9638","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveSetsApplicationId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/f5777e431c7382be54b7cc937bd93608ceab3f.src","preCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\"securityInterceptor\");\n\t\t\tString applicationId = (String) ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\"applicationId\");\n\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"MB"},{"authorDate":"2018-01-03 03:13:23","commitOrder":3,"curCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","date":"2018-03-03 10:30:55","endLine":126,"groupId":"9638","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveSetsApplicationId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c9/100d317a86cf8ef992a6e0b5a741387b1d9dea.src","preCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"}],"commitId":"1c27a8e6e271a86c8600fcfa2b1f221e9023efe9","commitMessage":"@@@Move tests to ApplicationContextRunner\n","date":"2018-03-03 10:30:55","modifiedFileCount":"2","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2018-03-13 07:30:55","codes":[{"authorDate":"2018-03-13 07:30:55","commitOrder":4,"curCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","date":"2018-03-15 05:05:26","endLine":151,"groupId":"9638","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveSetsApplicationId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/11/1366da84f09ee18009d12fa38e750b65df230c.src","preCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\"securityInterceptor\");\n\t\t\tString applicationId = (String) ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\"applicationId\");\n\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"},{"authorDate":"2018-03-13 07:30:55","commitOrder":4,"curCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","date":"2018-03-15 05:05:26","endLine":134,"groupId":"9638","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveSetsApplicationId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/94/e6afde968ca3c3032e3fdea386bf0e8c19026e.src","preCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run(context -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils.getField(interceptor,\n\t\t\t\t\t\t\t\"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"a4b0be089da735c481ede50d66f8abc1d3d2cccd","commitMessage":"@@@Polish\n","date":"2018-03-15 05:05:26","modifiedFileCount":"29","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-03-28 19:48:47","codes":[{"authorDate":"2019-03-28 19:48:47","commitOrder":5,"curCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","date":"2019-03-28 19:48:47","endLine":158,"groupId":"9638","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveSetsApplicationId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2f/e52b48f3711d510072999b9d7d6357be766177.src","preCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2019-03-28 19:48:47","commitOrder":5,"curCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","date":"2019-03-28 19:48:47","endLine":136,"groupId":"9638","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveSetsApplicationId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/60d415603be0262c4d922a1be7920a98ca5b52.src","preCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\t\t\"vcap.application.application_id:my-app-id\",\n\t\t\t\t\t\t\"vcap.application.cf_api:http://my-cloud-controller.com\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(interceptor, \"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"878a635bfb6c28ee135b4f84e12fc09a42d1a3a9","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2019-03-28 19:48:47","modifiedFileCount":"67","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\").run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils.getField(interceptor, \"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":136,"groupId":"10730","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveSetsApplicationId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/ac9ee8d9051b313821e885b1ad75293e602f47.src","preCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\").run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils.getField(interceptor, \"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\").run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils.getField(interceptor, \"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":114,"groupId":"10730","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveSetsApplicationId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f9/4072091366163790d53977168bcb9b5a12dd29.src","preCode":"\tpublic void cloudFoundryPlatformActiveSetsApplicationId() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\",\n\t\t\t\t\"vcap.application.cf_api:https://my-cloud-controller.com\").run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject interceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tString applicationId = (String) ReflectionTestUtils.getField(interceptor, \"applicationId\");\n\t\t\t\t\tassertThat(applicationId).isEqualTo(\"my-app-id\");\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
