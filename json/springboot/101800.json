[{"authorTime":"2018-02-18 00:21:49","codes":[{"authorDate":"2018-02-18 00:21:49","commitOrder":1,"curCode":"\tpublic void convertWhenHasDelimiterDashShouldConvert() {\n\t\tData data = new Data();\n\t\tdata.dash = new String[] { \"1\", \"2\", \"3\" };\n\t\tString converted = (String) this.conversionService.convert(data.dash,\n\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"dash\"), 0),\n\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\tassertThat(converted).isEqualTo(\"1-2-3\");\n\t}\n","date":"2018-02-20 12:25:47","endLine":71,"groupId":"13751","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convertWhenHasDelimiterDashShouldConvert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/75/387c5f67a0f38c10c520cf3ec5d318e6984966.src","preCode":"\tpublic void convertWhenHasDelimiterDashShouldConvert() {\n\t\tData data = new Data();\n\t\tdata.dash = new String[] { \"1\", \"2\", \"3\" };\n\t\tString converted = (String) this.conversionService.convert(data.dash,\n\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"dash\"), 0),\n\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\tassertThat(converted).isEqualTo(\"1-2-3\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/ArrayToDelimitedStringConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"},{"authorDate":"2018-02-18 00:21:49","commitOrder":1,"curCode":"\tpublic void convertWhenHasDelimiterDashShouldConvert() {\n\t\tData data = new Data();\n\t\tdata.dash = Arrays.asList(\"1\", \"2\", \"3\");\n\t\tString converted = (String) this.conversionService.convert(data.dash,\n\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"dash\"), 0),\n\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\tassertThat(converted).isEqualTo(\"1-2-3\");\n\t}\n","date":"2018-02-20 12:25:47","endLine":74,"groupId":"13751","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convertWhenHasDelimiterDashShouldConvert","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/31/da09401761a7aa21066213703476321cd8f70c.src","preCode":"\tpublic void convertWhenHasDelimiterDashShouldConvert() {\n\t\tData data = new Data();\n\t\tdata.dash = Arrays.asList(\"1\", \"2\", \"3\");\n\t\tString converted = (String) this.conversionService.convert(data.dash,\n\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"dash\"), 0),\n\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\tassertThat(converted).isEqualTo(\"1-2-3\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/CollectionToDelimitedStringConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"}],"commitId":"20109e27be24da74e884c14a03afc8f9561e4196","commitMessage":"@@@Add ApplicationConversionService and fix binder\n\nCreate a new `ApplicationConversionService` similar in design to the\nDefaultFormattingConversionService from Spring Framework. The new\nconversion service provides a central place for custom conversion logic\nsupported by Spring Boot.\n\nAlso replace the `BindingConversionService` with an internal\n`BindConverter` class that now invokes the `SimpleTypeConverter`\ndirectly. Binding for `@ConfigurationProperties` has been updated so\nthat any custom property editors registered with the BeanFactory can\nbe used.\n\nFixes gh-12095\n","date":"2018-02-20 12:25:47","modifiedFileCount":"29","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid convertWhenHasDelimiterDashShouldConvert(ConversionService conversionService) {\n\t\tData data = new Data();\n\t\tdata.dash = new String[] { \"1\", \"2\", \"3\" };\n\t\tString converted = (String) conversionService.convert(data.dash,\n\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"dash\"), 0),\n\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\tassertThat(converted).isEqualTo(\"1-2-3\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":62,"groupId":"101800","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"convertWhenHasDelimiterDashShouldConvert","params":"(ConversionServiceconversionService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/40/a7720a0b7240204e070d4b72d37f08046a79da.src","preCode":"\tpublic void convertWhenHasDelimiterDashShouldConvert() {\n\t\tData data = new Data();\n\t\tdata.dash = new String[] { \"1\", \"2\", \"3\" };\n\t\tString converted = (String) this.conversionService.convert(data.dash,\n\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"dash\"), 0),\n\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\tassertThat(converted).isEqualTo(\"1-2-3\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/ArrayToDelimitedStringConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid convertWhenHasDelimiterDashShouldConvert(ConversionService conversionService) {\n\t\tData data = new Data();\n\t\tdata.dash = Arrays.asList(\"1\", \"2\", \"3\");\n\t\tString converted = (String) conversionService.convert(data.dash,\n\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"dash\"), 0),\n\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\tassertThat(converted).isEqualTo(\"1-2-3\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":64,"groupId":"101800","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"convertWhenHasDelimiterDashShouldConvert","params":"(ConversionServiceconversionService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e7/5f1faf9da9e3939a0e473b003068bac71af0c5.src","preCode":"\tpublic void convertWhenHasDelimiterDashShouldConvert() {\n\t\tData data = new Data();\n\t\tdata.dash = Arrays.asList(\"1\", \"2\", \"3\");\n\t\tString converted = (String) this.conversionService.convert(data.dash,\n\t\t\t\tTypeDescriptor.nested(ReflectionUtils.findField(Data.class, \"dash\"), 0),\n\t\t\t\tTypeDescriptor.valueOf(String.class));\n\t\tassertThat(converted).isEqualTo(\"1-2-3\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/convert/CollectionToDelimitedStringConverterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
