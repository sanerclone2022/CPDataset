[{"authorTime":"2018-01-10 12:57:10","codes":[{"authorDate":"2018-01-10 12:57:10","commitOrder":1,"curCode":"\tpublic void applyWhenTimeToLiveReturnsNullShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(null);\n\t\tOperationInvoker advised = this.advisor.apply(\"foo\", OperationType.READ,\n\t\t\t\tparameters, this.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(\"foo\");\n\t}\n","date":"2018-01-20 12:44:24","endLine":84,"groupId":"14784","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"applyWhenTimeToLiveReturnsNullShouldNotAddAdvise","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cb/edccee0af22ce0d404489492f51e9deaacb365.src","preCode":"\tpublic void applyWhenTimeToLiveReturnsNullShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(null);\n\t\tOperationInvoker advised = this.advisor.apply(\"foo\", OperationType.READ,\n\t\t\t\tparameters, this.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(\"foo\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoker/cache/CachingOperationInvokerAdvisorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2018-01-10 12:57:10","commitOrder":1,"curCode":"\tpublic void applyWhenTimeToLiveIsZeroShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(0L);\n\t\tOperationInvoker advised = this.advisor.apply(\"foo\", OperationType.READ,\n\t\t\t\tparameters, this.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(\"foo\");\n\t}\n","date":"2018-01-20 12:44:24","endLine":94,"groupId":"14787","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"applyWhenTimeToLiveIsZeroShouldNotAddAdvise","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cb/edccee0af22ce0d404489492f51e9deaacb365.src","preCode":"\tpublic void applyWhenTimeToLiveIsZeroShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(0L);\n\t\tOperationInvoker advised = this.advisor.apply(\"foo\", OperationType.READ,\n\t\t\t\tparameters, this.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(\"foo\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoker/cache/CachingOperationInvokerAdvisorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"}],"commitId":"1d39feffeabf4b94e3f900b941b58e0443d5887a","commitMessage":"@@@Overhaul actuator endpoint code\n\nRefactor several areas of the actuator endpoint code in order to make\nfuture extensions easier. The primary goal is to introduce the concept\nof an `ExposableEndpoint` that has technology specific subclasses and\ncan carry additional data for filters to use. Many other changes have\nbeen made along the way including:\n\n* A new EndpointSupplier interface that allows cleaner separation of\n  supplying vs discovering endpoints. This allows cleaner class names\n  and allows for better auto-configuration since a user can choose to\n  provide their own supplier entirely.\n\n* A `DiscoveredEndpoint` interface that allows the `EndpointFilter`\n  to be greatly simplified. A filter now doesn't need to know about\n  discovery concerns unless absolutely necessary.\n\n* Improved naming and package structure. Many technology specific\n  concerns are now grouped in a better way. Related concerns are\n  co-located and concepts from one area no longer leakage into another.\n\n* Simplified `HandlerMapping` implementations. Many common concerns have\n  been pulled up helping to create simpler subclasses.\n\n* Simplified JMX adapters. Many of the intermediary `Info` classes have\n  been removed. The `DiscoveredJmxOperation` is now responsible for\n  mapping methods to operations.\n\n* A specific @`HealthEndpointCloudFoundryExtension` for Cloud Foundry.\n  The extension logic used to create a \"full\" health endpoint extension\n  has been made explicit.\n\nFixes gh-11428\nFixes gh-11581\n","date":"2018-01-20 12:44:24","modifiedFileCount":"63","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-10-15 04:53:28","codes":[{"authorDate":"2018-10-15 04:53:28","commitOrder":2,"curCode":"\tpublic void applyWhenTimeToLiveReturnsNullShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(null);\n\t\tOperationInvoker advised = this.advisor.apply(EndpointId.of(\"foo\"),\n\t\t\t\tOperationType.READ, parameters, this.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(EndpointId.of(\"foo\"));\n\t}\n","date":"2018-10-15 04:53:28","endLine":88,"groupId":"14787","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"applyWhenTimeToLiveReturnsNullShouldNotAddAdvise","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bf/0abc6aa98dd1596b4ec6e224a07ffa22d89d93.src","preCode":"\tpublic void applyWhenTimeToLiveReturnsNullShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(null);\n\t\tOperationInvoker advised = this.advisor.apply(\"foo\", OperationType.READ,\n\t\t\t\tparameters, this.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(\"foo\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoker/cache/CachingOperationInvokerAdvisorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2018-10-15 04:53:28","commitOrder":2,"curCode":"\tpublic void applyWhenTimeToLiveIsZeroShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(0L);\n\t\tOperationInvoker advised = this.advisor.apply(EndpointId.of(\"foo\"),\n\t\t\t\tOperationType.READ, parameters, this.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(EndpointId.of(\"foo\"));\n\t}\n","date":"2018-10-15 04:53:28","endLine":98,"groupId":"13610","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"applyWhenTimeToLiveIsZeroShouldNotAddAdvise","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bf/0abc6aa98dd1596b4ec6e224a07ffa22d89d93.src","preCode":"\tpublic void applyWhenTimeToLiveIsZeroShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(0L);\n\t\tOperationInvoker advised = this.advisor.apply(\"foo\", OperationType.READ,\n\t\t\t\tparameters, this.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(\"foo\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoker/cache/CachingOperationInvokerAdvisorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"1bf97e9b5e2187a04d8471ead73b629444ecc838","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-10-15 04:53:28","modifiedFileCount":"66","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid applyWhenTimeToLiveReturnsNullShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(null);\n\t\tOperationInvoker advised = this.advisor.apply(EndpointId.of(\"foo\"), OperationType.READ, parameters,\n\t\t\t\tthis.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(EndpointId.of(\"foo\"));\n\t}\n","date":"2019-06-07 19:25:54","endLine":87,"groupId":"10389","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"applyWhenTimeToLiveReturnsNullShouldNotAddAdvise","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/2c0d690927f28b59c184e7b102b08e24c56324.src","preCode":"\tpublic void applyWhenTimeToLiveReturnsNullShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(null);\n\t\tOperationInvoker advised = this.advisor.apply(EndpointId.of(\"foo\"), OperationType.READ, parameters,\n\t\t\t\tthis.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(EndpointId.of(\"foo\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoker/cache/CachingOperationInvokerAdvisorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid applyWhenTimeToLiveIsZeroShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(0L);\n\t\tOperationInvoker advised = this.advisor.apply(EndpointId.of(\"foo\"), OperationType.READ, parameters,\n\t\t\t\tthis.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(EndpointId.of(\"foo\"));\n\t}\n","date":"2019-06-07 19:25:54","endLine":97,"groupId":"10389","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"applyWhenTimeToLiveIsZeroShouldNotAddAdvise","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/2c0d690927f28b59c184e7b102b08e24c56324.src","preCode":"\tpublic void applyWhenTimeToLiveIsZeroShouldNotAddAdvise() {\n\t\tOperationParameters parameters = getParameters(\"get\");\n\t\tgiven(this.timeToLive.apply(any())).willReturn(0L);\n\t\tOperationInvoker advised = this.advisor.apply(EndpointId.of(\"foo\"), OperationType.READ, parameters,\n\t\t\t\tthis.invoker);\n\t\tassertThat(advised).isSameAs(this.invoker);\n\t\tverify(this.timeToLive).apply(EndpointId.of(\"foo\"));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/invoker/cache/CachingOperationInvokerAdvisorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
