[{"authorTime":"2019-09-11 11:54:22","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid websocketTransport() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.TRANSPORT.WEBSOCKET);\n\t\tthis.rSocketServer = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.rSocketServer.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\t\tassertThat(response).isEqualTo(payload);\n\t}\n","date":"2019-06-07 19:25:54","endLine":110,"groupId":"15136","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"websocketTransport","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b1/94364e9a73dd9b14d21731fdc28b70d1338fce.src","preCode":"\tvoid websocketTransport() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.TRANSPORT.WEBSOCKET);\n\t\tthis.rSocketServer = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.rSocketServer.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\t\tassertThat(response).isEqualTo(payload);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"NB"},{"authorDate":"2019-09-11 11:54:22","commitOrder":4,"curCode":"\tvoid websocketTransportWithReactorResource() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.TRANSPORT.WEBSOCKET);\n\t\tReactorResourceFactory resourceFactory = new ReactorResourceFactory();\n\t\tresourceFactory.afterPropertiesSet();\n\t\tfactory.setResourceFactory(resourceFactory);\n\t\tint specificPort = SocketUtils.findAvailableTcpPort(41000);\n\t\tfactory.setPort(specificPort);\n\t\tthis.rSocketServer = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.rSocketServer.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\n\t\tassertThat(response).isEqualTo(payload);\n\t\tassertThat(this.rSocketServer.address().getPort()).isEqualTo(specificPort);\n\t}\n","date":"2019-09-16 15:53:10","endLine":133,"groupId":"15136","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"websocketTransportWithReactorResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b8/11018c504f2f5d5e2e70696f169bd469783548.src","preCode":"\tvoid websocketTransportWithReactorResource() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.TRANSPORT.WEBSOCKET);\n\t\tReactorResourceFactory resourceFactory = new ReactorResourceFactory();\n\t\tresourceFactory.afterPropertiesSet();\n\t\tfactory.setResourceFactory(resourceFactory);\n\t\tint specificPort = SocketUtils.findAvailableTcpPort(41000);\n\t\tfactory.setPort(specificPort);\n\t\tthis.rSocketServer = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.rSocketServer.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\n\t\tassertThat(response).isEqualTo(payload);\n\t\tassertThat(this.rSocketServer.address().getPort()).isEqualTo(specificPort);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"}],"commitId":"a0d2721e3318a74e60d8f3047093c70c80ad2f6c","commitMessage":"@@@Use custom port for RSocket server over websocket\n\nPrior to this change.  the custom port configured for the RSocket\nserver would not be used if the server factory is using the\nwebsocket transport and is provided with a custom\n`ReactorResourceFactory`.\n\nFixes gh-18200\n","date":"2019-09-16 15:53:10","modifiedFileCount":"2","status":"M","submitter":"leoli"},{"authorTime":"2019-09-28 12:35:59","codes":[{"authorDate":"2019-09-28 12:35:59","commitOrder":5,"curCode":"\tvoid websocketTransport() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.Transport.WEBSOCKET);\n\t\tthis.server = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.server.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\t\tassertThat(response).isEqualTo(payload);\n\t}\n","date":"2019-09-29 13:04:30","endLine":112,"groupId":"15136","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"websocketTransport","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/01/78c64772141ce2a5bd6516a6bd36833ccd330b.src","preCode":"\tvoid websocketTransport() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.TRANSPORT.WEBSOCKET);\n\t\tthis.rSocketServer = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.rSocketServer.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\n\t\tassertThat(response).isEqualTo(payload);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2019-09-28 12:35:59","commitOrder":5,"curCode":"\tvoid websocketTransportWithReactorResource() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.Transport.WEBSOCKET);\n\t\tReactorResourceFactory resourceFactory = new ReactorResourceFactory();\n\t\tresourceFactory.afterPropertiesSet();\n\t\tfactory.setResourceFactory(resourceFactory);\n\t\tint specificPort = SocketUtils.findAvailableTcpPort(41000);\n\t\tfactory.setPort(specificPort);\n\t\tthis.server = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.server.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\t\tassertThat(response).isEqualTo(payload);\n\t\tassertThat(this.server.address().getPort()).isEqualTo(specificPort);\n\t}\n","date":"2019-09-29 13:04:30","endLine":130,"groupId":"15136","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"websocketTransportWithReactorResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/01/78c64772141ce2a5bd6516a6bd36833ccd330b.src","preCode":"\tvoid websocketTransportWithReactorResource() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.TRANSPORT.WEBSOCKET);\n\t\tReactorResourceFactory resourceFactory = new ReactorResourceFactory();\n\t\tresourceFactory.afterPropertiesSet();\n\t\tfactory.setResourceFactory(resourceFactory);\n\t\tint specificPort = SocketUtils.findAvailableTcpPort(41000);\n\t\tfactory.setPort(specificPort);\n\t\tthis.rSocketServer = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.rSocketServer.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\n\t\tassertThat(response).isEqualTo(payload);\n\t\tassertThat(this.rSocketServer.address().getPort()).isEqualTo(specificPort);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"}],"commitId":"615c6d4e8668a64a7ebe7781e8d601faa935051f","commitMessage":"@@@Restructure RSocket packages and polish\n\nPolish code and relocate `RSocketServerBootstrap` from `server` to\n`context` since it's really an `ApplicationContext` concern.\n\nCloses gh-18391\n","date":"2019-09-29 13:04:30","modifiedFileCount":"11","status":"M","submitter":"Phillip Webb"},{"authorTime":"2020-01-18 20:23:44","codes":[{"authorDate":"2019-09-28 12:35:59","commitOrder":6,"curCode":"\tvoid websocketTransport() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.Transport.WEBSOCKET);\n\t\tthis.server = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.server.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\t\tassertThat(response).isEqualTo(payload);\n\t}\n","date":"2019-09-29 13:04:30","endLine":112,"groupId":"15136","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"websocketTransport","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/01/78c64772141ce2a5bd6516a6bd36833ccd330b.src","preCode":"\tvoid websocketTransport() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.Transport.WEBSOCKET);\n\t\tthis.server = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.server.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\t\tassertThat(response).isEqualTo(payload);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"},{"authorDate":"2020-01-18 20:23:44","commitOrder":6,"curCode":"\tvoid websocketTransportWithReactorResource() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.Transport.WEBSOCKET);\n\t\tReactorResourceFactory resourceFactory = new ReactorResourceFactory();\n\t\tresourceFactory.afterPropertiesSet();\n\t\tfactory.setResourceFactory(resourceFactory);\n\t\tthis.server = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.server.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\t\tassertThat(response).isEqualTo(payload);\n\t}\n","date":"2020-01-18 20:25:13","endLine":130,"groupId":"15136","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"websocketTransportWithReactorResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/72/036bcd3c033221f2acddb16e8f47503f277560.src","preCode":"\tvoid websocketTransportWithReactorResource() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.Transport.WEBSOCKET);\n\t\tReactorResourceFactory resourceFactory = new ReactorResourceFactory();\n\t\tresourceFactory.afterPropertiesSet();\n\t\tfactory.setResourceFactory(resourceFactory);\n\t\tint specificPort = SocketUtils.findAvailableTcpPort(41000);\n\t\tfactory.setPort(specificPort);\n\t\tthis.server = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.server.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\t\tassertThat(response).isEqualTo(payload);\n\t\tassertThat(this.server.address().getPort()).isEqualTo(specificPort);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"bfdb49f2a2b24b4f38e96f252ba052e298159f21","commitMessage":"@@@Retry when findAvailableTcpPort returns an unavailable port\n\nCloses gh-19801\n","date":"2020-01-18 20:25:13","modifiedFileCount":"1","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-09-10 21:26:51","codes":[{"authorDate":"2020-09-10 21:26:51","commitOrder":7,"curCode":"\tvoid websocketTransport() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.Transport.WEBSOCKET);\n\t\tthis.server = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.server.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tcheckEchoRequest();\n\t}\n","date":"2020-09-10 21:27:03","endLine":118,"groupId":"101079","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"websocketTransport","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/30/cc5bfb67fa245cbaa6a451a86ca5e4c86757af.src","preCode":"\tvoid websocketTransport() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.Transport.WEBSOCKET);\n\t\tthis.server = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.server.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\t\tassertThat(response).isEqualTo(payload);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2020-09-10 21:26:51","commitOrder":7,"curCode":"\tvoid websocketTransportWithReactorResource() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.Transport.WEBSOCKET);\n\t\tReactorResourceFactory resourceFactory = new ReactorResourceFactory();\n\t\tresourceFactory.afterPropertiesSet();\n\t\tfactory.setResourceFactory(resourceFactory);\n\t\tthis.server = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.server.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tcheckEchoRequest();\n\t}\n","date":"2020-09-10 21:27:03","endLine":131,"groupId":"101079","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"websocketTransportWithReactorResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/30/cc5bfb67fa245cbaa6a451a86ca5e4c86757af.src","preCode":"\tvoid websocketTransportWithReactorResource() {\n\t\tNettyRSocketServerFactory factory = getFactory();\n\t\tfactory.setTransport(RSocketServer.Transport.WEBSOCKET);\n\t\tReactorResourceFactory resourceFactory = new ReactorResourceFactory();\n\t\tresourceFactory.afterPropertiesSet();\n\t\tfactory.setResourceFactory(resourceFactory);\n\t\tthis.server = factory.create(new EchoRequestResponseAcceptor());\n\t\tthis.server.start();\n\t\tthis.requester = createRSocketWebSocketClient();\n\t\tString payload = \"test payload\";\n\t\tString response = this.requester.route(\"test\").data(payload).retrieveMono(String.class).block(TIMEOUT);\n\t\tassertThat(response).isEqualTo(payload);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"53607ea777a6854e891ac48f3c58dab274bfb9fd","commitMessage":"@@@Merge pull request #19399 from bono007\n\n* gh-19205:\n  Polish \"Add SSL support to RSocketServer\"\n  Add SSL support to RSocketServer\n\nCloses gh-19399\n","date":"2020-09-10 21:27:03","modifiedFileCount":"6","status":"M","submitter":"Brian Clozel"}]
