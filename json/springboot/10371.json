[{"authorTime":"2018-10-15 20:58:17","codes":[{"authorDate":"2018-10-15 20:58:17","commitOrder":1,"curCode":"\tpublic void couchbaseClusterIsUp() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tList<EndpointHealth> endpoints = Arrays.asList(new EndpointHealth(\n\t\t\t\tServiceType.BINARY, LifecycleState.CONNECTED, new InetSocketAddress(0),\n\t\t\t\tnew InetSocketAddress(0), 1234, \"endpoint-1\"));\n\t\tDiagnosticsReport diagnostics = new DiagnosticsReport(endpoints, \"test-sdk\",\n\t\t\t\t\"test-id\", null);\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\"))\n\t\t\t\t.hasSize(1);\n\t\tverify(cluster).diagnostics();\n\t}\n","date":"2018-10-15 20:58:17","endLine":65,"groupId":"15893","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"couchbaseClusterIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/70/1e46206f6eea8f41de70cd2ac4ae82a3190761.src","preCode":"\tpublic void couchbaseClusterIsUp() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tList<EndpointHealth> endpoints = Arrays.asList(new EndpointHealth(\n\t\t\t\tServiceType.BINARY, LifecycleState.CONNECTED, new InetSocketAddress(0),\n\t\t\t\tnew InetSocketAddress(0), 1234, \"endpoint-1\"));\n\t\tDiagnosticsReport diagnostics = new DiagnosticsReport(endpoints, \"test-sdk\",\n\t\t\t\t\"test-id\", null);\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\"))\n\t\t\t\t.hasSize(1);\n\t\tverify(cluster).diagnostics();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/couchbase/CouchbaseHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"},{"authorDate":"2018-10-15 20:58:17","commitOrder":1,"curCode":"\tpublic void couchbaseClusterIsDown() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tList<EndpointHealth> endpoints = Arrays.asList(\n\t\t\t\tnew EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTED,\n\t\t\t\t\t\tnew InetSocketAddress(0), new InetSocketAddress(0), 1234,\n\t\t\t\t\t\t\"endpoint-1\"),\n\t\t\t\tnew EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTING,\n\t\t\t\t\t\tnew InetSocketAddress(0), new InetSocketAddress(0), 1234,\n\t\t\t\t\t\t\"endpoint-2\"));\n\t\tDiagnosticsReport diagnostics = new DiagnosticsReport(endpoints, \"test-sdk\",\n\t\t\t\t\"test-id\", null);\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\"))\n\t\t\t\t.hasSize(2);\n\t\tverify(cluster).diagnostics();\n\t}\n","date":"2018-10-15 20:58:17","endLine":89,"groupId":"15895","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"couchbaseClusterIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/70/1e46206f6eea8f41de70cd2ac4ae82a3190761.src","preCode":"\tpublic void couchbaseClusterIsDown() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tList<EndpointHealth> endpoints = Arrays.asList(\n\t\t\t\tnew EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTED,\n\t\t\t\t\t\tnew InetSocketAddress(0), new InetSocketAddress(0), 1234,\n\t\t\t\t\t\t\"endpoint-1\"),\n\t\t\t\tnew EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTING,\n\t\t\t\t\t\tnew InetSocketAddress(0), new InetSocketAddress(0), 1234,\n\t\t\t\t\t\t\"endpoint-2\"));\n\t\tDiagnosticsReport diagnostics = new DiagnosticsReport(endpoints, \"test-sdk\",\n\t\t\t\t\"test-id\", null);\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\"))\n\t\t\t\t.hasSize(2);\n\t\tverify(cluster).diagnostics();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/couchbase/CouchbaseHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"a4eb63691333b96703e7936737296c6994ca0a66","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-10-15 20:58:17","modifiedFileCount":"8","status":"B","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid couchbaseClusterIsUp() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tList<EndpointHealth> endpoints = Arrays.asList(new EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTED,\n\t\t\t\tnew InetSocketAddress(0), new InetSocketAddress(0), 1234, \"endpoint-1\"));\n\t\tDiagnosticsReport diagnostics = new DiagnosticsReport(endpoints, \"test-sdk\", \"test-id\", null);\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\")).hasSize(1);\n\t\tverify(cluster).diagnostics();\n\t}\n","date":"2019-06-07 19:25:54","endLine":62,"groupId":"15893","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"couchbaseClusterIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c6/f00adcbdf76771f11d397ef0ad2c9921cd18a1.src","preCode":"\tpublic void couchbaseClusterIsUp() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tList<EndpointHealth> endpoints = Arrays.asList(new EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTED,\n\t\t\t\tnew InetSocketAddress(0), new InetSocketAddress(0), 1234, \"endpoint-1\"));\n\t\tDiagnosticsReport diagnostics = new DiagnosticsReport(endpoints, \"test-sdk\", \"test-id\", null);\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\")).hasSize(1);\n\t\tverify(cluster).diagnostics();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/couchbase/CouchbaseHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid couchbaseClusterIsDown() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tList<EndpointHealth> endpoints = Arrays.asList(\n\t\t\t\tnew EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTED, new InetSocketAddress(0),\n\t\t\t\t\t\tnew InetSocketAddress(0), 1234, \"endpoint-1\"),\n\t\t\t\tnew EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTING, new InetSocketAddress(0),\n\t\t\t\t\t\tnew InetSocketAddress(0), 1234, \"endpoint-2\"));\n\t\tDiagnosticsReport diagnostics = new DiagnosticsReport(endpoints, \"test-sdk\", \"test-id\", null);\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\")).hasSize(2);\n\t\tverify(cluster).diagnostics();\n\t}\n","date":"2019-06-07 19:25:54","endLine":82,"groupId":"15895","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"couchbaseClusterIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c6/f00adcbdf76771f11d397ef0ad2c9921cd18a1.src","preCode":"\tpublic void couchbaseClusterIsDown() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tList<EndpointHealth> endpoints = Arrays.asList(\n\t\t\t\tnew EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTED, new InetSocketAddress(0),\n\t\t\t\t\t\tnew InetSocketAddress(0), 1234, \"endpoint-1\"),\n\t\t\t\tnew EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTING, new InetSocketAddress(0),\n\t\t\t\t\t\tnew InetSocketAddress(0), 1234, \"endpoint-2\"));\n\t\tDiagnosticsReport diagnostics = new DiagnosticsReport(endpoints, \"test-sdk\", \"test-id\", null);\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\")).hasSize(2);\n\t\tverify(cluster).diagnostics();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/couchbase/CouchbaseHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-03-17 21:58:22","codes":[{"authorDate":"2020-03-17 21:58:22","commitOrder":3,"curCode":"\tvoid couchbaseClusterIsUp() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tMap<ServiceType, List<EndpointDiagnostics>> endpoints = Collections.singletonMap(ServiceType.KV,\n\t\t\t\tCollections.singletonList(new EndpointDiagnostics(ServiceType.KV, EndpointState.CONNECTED, \"127.0.0.1\",\n\t\t\t\t\t\t\"127.0.0.1\", Optional.empty(), Optional.of(1234L), Optional.of(\"endpoint-1\"))));\n\n\t\tDiagnosticsResult diagnostics = new DiagnosticsResult(endpoints, \"test-sdk\", \"test-id\");\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\")).hasSize(1);\n\t\tverify(cluster).diagnostics();\n\t}\n","date":"2020-03-18 00:00:09","endLine":65,"groupId":"10371","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"couchbaseClusterIsUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5a/3928d3925061164861aad7b3984c1159eebb91.src","preCode":"\tvoid couchbaseClusterIsUp() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tList<EndpointHealth> endpoints = Arrays.asList(new EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTED,\n\t\t\t\tnew InetSocketAddress(0), new InetSocketAddress(0), 1234, \"endpoint-1\"));\n\t\tDiagnosticsReport diagnostics = new DiagnosticsReport(endpoints, \"test-sdk\", \"test-id\", null);\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.UP);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\")).hasSize(1);\n\t\tverify(cluster).diagnostics();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/couchbase/CouchbaseHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2020-03-17 21:58:22","commitOrder":3,"curCode":"\tvoid couchbaseClusterIsDown() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tMap<ServiceType, List<EndpointDiagnostics>> endpoints = Collections.singletonMap(ServiceType.KV,\n\t\t\t\tArrays.asList(\n\t\t\t\t\t\tnew EndpointDiagnostics(ServiceType.KV, EndpointState.CONNECTED, \"127.0.0.1\", \"127.0.0.1\",\n\t\t\t\t\t\t\t\tOptional.empty(), Optional.of(1234L), Optional.of(\"endpoint-1\")),\n\t\t\t\t\t\tnew EndpointDiagnostics(ServiceType.KV, EndpointState.CONNECTING, \"127.0.0.1\", \"127.0.0.1\",\n\t\t\t\t\t\t\t\tOptional.empty(), Optional.of(1234L), Optional.of(\"endpoint-2\"))));\n\t\tDiagnosticsResult diagnostics = new DiagnosticsResult(endpoints, \"test-sdk\", \"test-id\");\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\")).hasSize(2);\n\t\tverify(cluster).diagnostics();\n\t}\n","date":"2020-03-18 00:00:09","endLine":86,"groupId":"10371","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"couchbaseClusterIsDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5a/3928d3925061164861aad7b3984c1159eebb91.src","preCode":"\tvoid couchbaseClusterIsDown() {\n\t\tCluster cluster = mock(Cluster.class);\n\t\tCouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster);\n\t\tList<EndpointHealth> endpoints = Arrays.asList(\n\t\t\t\tnew EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTED, new InetSocketAddress(0),\n\t\t\t\t\t\tnew InetSocketAddress(0), 1234, \"endpoint-1\"),\n\t\t\t\tnew EndpointHealth(ServiceType.BINARY, LifecycleState.CONNECTING, new InetSocketAddress(0),\n\t\t\t\t\t\tnew InetSocketAddress(0), 1234, \"endpoint-2\"));\n\t\tDiagnosticsReport diagnostics = new DiagnosticsReport(endpoints, \"test-sdk\", \"test-id\", null);\n\t\tgiven(cluster.diagnostics()).willReturn(diagnostics);\n\t\tHealth health = healthIndicator.health();\n\t\tassertThat(health.getStatus()).isEqualTo(Status.DOWN);\n\t\tassertThat(health.getDetails()).containsEntry(\"sdk\", \"test-sdk\");\n\t\tassertThat(health.getDetails()).containsKey(\"endpoints\");\n\t\tassertThat((List<Map<String, Object>>) health.getDetails().get(\"endpoints\")).hasSize(2);\n\t\tverify(cluster).diagnostics();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/couchbase/CouchbaseHealthIndicatorTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"abe43b2e83713591bc23821add3763cc2c41e3bd","commitMessage":"@@@Upgrade to Couchbase SDK v3\n\nThis commit upgrades to the Couchbase SDK v3 which brings the following\nbreaking changes:\n\n* Bootstrap hosts have been replaced by a connection string and the\nauthentication is now mandatory.\n* A `Bucket` is no longer auto-configured. The\n`spring.couchbase.bucket.*` properties have been removed\n* `ClusterInfo` no longer exists and has been replaced by a dedicated\nAPI on `Cluster`.\n* `CouchbaseEnvironment` no longer exist in favour of\n`ClusterEnvironment`.  the customizer has been renamed accordingly.\n* The bootstrap-related properties have been removed. Users requiring\ncustom ports should supply the seed nodes and initialize a Cluster\nthemselves.\n* The endpoints-related configuration has been consolidated in a\nsingle IO configuration.\n\nThe Spring Data Couchbase provides an integration with the new SDK. This\nleads to the following changes:\n\n* A convenient `CouchbaseClientFactory` is auto-configured.\n* Repositories are configured against a bucket and a scope. Those can\nbe set via configuration in `spring.data.couchbase.*`.\n* The default consistency property has been removed in favour of a more\nflexible annotation on the repository query methods instead. You can now\nspecify different query consistency on a per method basis.\n* The `CacheManager` implementation is provided.  as do other stores for\nconsistency so a dependency on `couchbase-spring-cache` is no longer\nrequired.\n\nSee gh-19893\n\nCo-authored-by: Michael Nitschinger <michael@nitschinger.at>\n","date":"2020-03-18 00:00:09","modifiedFileCount":"27","status":"M","submitter":"Stephane Nicoll"}]
