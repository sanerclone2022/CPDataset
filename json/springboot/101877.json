[{"authorTime":"2021-04-30 19:32:56","codes":[{"authorDate":"2019-07-15 02:39:18","commitOrder":4,"curCode":"\tvoid cycleReferencedViaOtherBeans() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CycleReferencedViaOtherBeansConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(12);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).contains(\"refererOne (field \" + RefererTwo.class.getName());\n\t\tassertThat(lines.get(3)).isEqualTo(\"      ���������\");\n\t\tassertThat(lines.get(4)).contains(\"refererTwo (field \" + BeanOne.class.getName());\n\t\tassertThat(lines.get(5)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(6))\n\t\t\t\t.startsWith(\"|  one defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(7)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(8))\n\t\t\t\t.startsWith(\"|  two defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(9)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(10))\n\t\t\t\t.startsWith(\"|  three defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(11)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","date":"2019-07-15 07:24:19","endLine":110,"groupId":"5774","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cycleReferencedViaOtherBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/54/1b5c9a53ac17f3d88457e217bb4c71e09fabff.src","preCode":"\tvoid cycleReferencedViaOtherBeans() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CycleReferencedViaOtherBeansConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(12);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).contains(\"refererOne (field \" + RefererTwo.class.getName());\n\t\tassertThat(lines.get(3)).isEqualTo(\"      ���������\");\n\t\tassertThat(lines.get(4)).contains(\"refererTwo (field \" + BeanOne.class.getName());\n\t\tassertThat(lines.get(5)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(6))\n\t\t\t\t.startsWith(\"|  one defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(7)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(8))\n\t\t\t\t.startsWith(\"|  two defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(9)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(10))\n\t\t\t\t.startsWith(\"|  three defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(11)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"NB"},{"authorDate":"2021-04-30 19:32:56","commitOrder":4,"curCode":"\tvoid testSelfReferenceCycle() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(SelfReferenceBeanConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(5);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������->���������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  bean defined in \" + SelfReferenceBeanConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������������������������<-���������������������������\");\n\t}\n","date":"2021-04-30 19:32:56","endLine":123,"groupId":"5774","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelfReferenceCycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7a/828feadcfbb957813c6a7f7a90d3147d2893a1.src","preCode":"\tvoid testSelfReferenceCycle() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(SelfReferenceBeanConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(5);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������->���������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  bean defined in \" + SelfReferenceBeanConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������������������������<-���������������������������\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"3475e01cdadbf453f11d87667a8996a97772e249","commitMessage":"@@@Merge branch '2.4.x'\n\nCloses gh-26323\n","date":"2021-04-30 19:32:56","modifiedFileCount":"2","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2021-07-15 18:51:24","codes":[{"authorDate":"2021-07-15 18:51:24","commitOrder":5,"curCode":"\tvoid cycleReferencedViaOtherBeans() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CycleReferencedViaOtherBeansConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(12);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).contains(\"refererOne (field \" + RefererTwo.class.getName());\n\t\tassertThat(lines.get(3)).isEqualTo(\"      ���������\");\n\t\tassertThat(lines.get(4)).contains(\"refererTwo (field \" + BeanOne.class.getName());\n\t\tassertThat(lines.get(5)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(6))\n\t\t\t\t.startsWith(\"|  one defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(7)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(8))\n\t\t\t\t.startsWith(\"|  two defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(9)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(10))\n\t\t\t\t.startsWith(\"|  three defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(11)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(analysis.getAction()).isNotNull();\n\t}\n","date":"2021-08-17 21:51:39","endLine":113,"groupId":"101877","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"cycleReferencedViaOtherBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b7/b34bcbcb8a71cd970baadf604f1c6f47aeca55.src","preCode":"\tvoid cycleReferencedViaOtherBeans() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(CycleReferencedViaOtherBeansConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(12);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).contains(\"refererOne (field \" + RefererTwo.class.getName());\n\t\tassertThat(lines.get(3)).isEqualTo(\"      ���������\");\n\t\tassertThat(lines.get(4)).contains(\"refererTwo (field \" + BeanOne.class.getName());\n\t\tassertThat(lines.get(5)).isEqualTo(\"���������������������������������������������������������������\");\n\t\tassertThat(lines.get(6))\n\t\t\t\t.startsWith(\"|  one defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(7)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(8))\n\t\t\t\t.startsWith(\"|  two defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(9)).isEqualTo(\"���������     ���������\");\n\t\tassertThat(lines.get(10))\n\t\t\t\t.startsWith(\"|  three defined in \" + CycleReferencedViaOtherBeansConfiguration.class.getName());\n\t\tassertThat(lines.get(11)).isEqualTo(\"���������������������������������������������������������������\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2021-07-15 18:51:24","commitOrder":5,"curCode":"\tvoid testSelfReferenceCycle() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(SelfReferenceBeanConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(5);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������->���������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  bean defined in \" + SelfReferenceBeanConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������������������������<-���������������������������\");\n\t\tassertThat(analysis.getAction()).isNotNull();\n\t}\n","date":"2021-08-17 21:51:39","endLine":127,"groupId":"101877","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testSelfReferenceCycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b7/b34bcbcb8a71cd970baadf604f1c6f47aeca55.src","preCode":"\tvoid testSelfReferenceCycle() throws IOException {\n\t\tFailureAnalysis analysis = performAnalysis(SelfReferenceBeanConfiguration.class);\n\t\tList<String> lines = readDescriptionLines(analysis);\n\t\tassertThat(lines).hasSize(5);\n\t\tassertThat(lines.get(0))\n\t\t\t\t.isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n\t\tassertThat(lines.get(1)).isEqualTo(\"\");\n\t\tassertThat(lines.get(2)).isEqualTo(\"���������������������������->���������������������������\");\n\t\tassertThat(lines.get(3)).startsWith(\"|  bean defined in \" + SelfReferenceBeanConfiguration.class.getName());\n\t\tassertThat(lines.get(4)).isEqualTo(\"���������������������������<-���������������������������\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"01e741d7039b626054911e0797872776ce28c120","commitMessage":"@@@Prohibit circular references by default\n\nCloses gh-27652\n","date":"2021-08-17 21:51:39","modifiedFileCount":"7","status":"M","submitter":"Andy Wilkinson"}]
