[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void serverHeaderIsDisabledByDefaultWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(\n\t\t\t\tnew ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"),\n\t\t\t\tHttpMethod.GET, new HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).isNullOrEmpty();\n\t}\n","date":"2017-10-05 11:18:56","endLine":438,"groupId":"10786","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"serverHeaderIsDisabledByDefaultWhenUsingSsl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/779a44c49daf64ead469014da81e6f86fb0528.src","preCode":"\tpublic void serverHeaderIsDisabledByDefaultWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(\n\t\t\t\tnew ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"),\n\t\t\t\tHttpMethod.GET, new HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).isNullOrEmpty();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":424,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void serverHeaderCanBeCustomizedWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setServerHeader(\"MyServer\");\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(\n\t\t\t\tnew ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"),\n\t\t\t\tHttpMethod.GET, new HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).containsExactly(\"MyServer\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":456,"groupId":"10786","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"serverHeaderCanBeCustomizedWhenUsingSsl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ca/779a44c49daf64ead469014da81e6f86fb0528.src","preCode":"\tpublic void serverHeaderCanBeCustomizedWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setServerHeader(\"MyServer\");\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(\n\t\t\t\tnew ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder()\n\t\t\t\t\t\t.loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory)\n\t\t\t\t.build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"),\n\t\t\t\tHttpMethod.GET, new HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).containsExactly(\"MyServer\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":441,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid serverHeaderIsDisabledByDefaultWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(new ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"), HttpMethod.GET,\n\t\t\t\tnew HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).isNullOrEmpty();\n\t}\n","date":"2019-06-07 19:25:54","endLine":421,"groupId":"10786","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"serverHeaderIsDisabledByDefaultWhenUsingSsl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/d43aa3647fe43b229f82a62bb32039d0be8f53.src","preCode":"\tpublic void serverHeaderIsDisabledByDefaultWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(new ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"), HttpMethod.GET,\n\t\t\t\tnew HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).isNullOrEmpty();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":410,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid serverHeaderCanBeCustomizedWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setServerHeader(\"MyServer\");\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(new ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"), HttpMethod.GET,\n\t\t\t\tnew HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).containsExactly(\"MyServer\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":436,"groupId":"10786","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"serverHeaderCanBeCustomizedWhenUsingSsl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/d43aa3647fe43b229f82a62bb32039d0be8f53.src","preCode":"\tpublic void serverHeaderCanBeCustomizedWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setServerHeader(\"MyServer\");\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(new ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"), HttpMethod.GET,\n\t\t\t\tnew HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).containsExactly(\"MyServer\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":424,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-01-10 21:48:43","codes":[{"authorDate":"2020-01-10 21:48:43","commitOrder":3,"curCode":"\tvoid serverHeaderIsDisabledByDefaultWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(new ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = this.httpClientBuilder.get().setSSLSocketFactory(socketFactory).build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"), HttpMethod.GET,\n\t\t\t\tnew HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).isNullOrEmpty();\n\t}\n","date":"2020-01-10 22:15:35","endLine":463,"groupId":"101995","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"serverHeaderIsDisabledByDefaultWhenUsingSsl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/db/f98c89b0ed1c62f1cfa8dea1de5df28d516f0b.src","preCode":"\tvoid serverHeaderIsDisabledByDefaultWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(new ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"), HttpMethod.GET,\n\t\t\t\tnew HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).isNullOrEmpty();\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"M"},{"authorDate":"2020-01-10 21:48:43","commitOrder":3,"curCode":"\tvoid serverHeaderCanBeCustomizedWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setServerHeader(\"MyServer\");\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(new ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = this.httpClientBuilder.get().setSSLSocketFactory(socketFactory)\n\t\t\t\t.setRetryHandler(new DefaultHttpRequestRetryHandler(10, false)).build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"), HttpMethod.GET,\n\t\t\t\tnew HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).containsExactly(\"MyServer\");\n\t}\n","date":"2020-01-10 22:15:35","endLine":479,"groupId":"101995","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"serverHeaderCanBeCustomizedWhenUsingSsl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/db/f98c89b0ed1c62f1cfa8dea1de5df28d516f0b.src","preCode":"\tvoid serverHeaderCanBeCustomizedWhenUsingSsl() throws Exception {\n\t\tAbstractServletWebServerFactory factory = getFactory();\n\t\tfactory.setServerHeader(\"MyServer\");\n\t\tfactory.setSsl(getSsl(null, \"password\", \"src/test/resources/test.jks\"));\n\t\tthis.webServer = factory.getWebServer(new ServletRegistrationBean<>(new ExampleServlet(true, false), \"/hello\"));\n\t\tthis.webServer.start();\n\t\tSSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(\n\t\t\t\tnew SSLContextBuilder().loadTrustMaterial(null, new TrustSelfSignedStrategy()).build());\n\t\tHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build();\n\t\tClientHttpResponse response = getClientResponse(getLocalUrl(\"https\", \"/hello\"), HttpMethod.GET,\n\t\t\t\tnew HttpComponentsClientHttpRequestFactory(httpClient));\n\t\tassertThat(response.getHeaders().get(\"Server\")).containsExactly(\"MyServer\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":466,"status":"M"}],"commitId":"ce99db19028b54886ae99c1fd916e613a982b65f","commitMessage":"@@@Port the build to Gradle\n\nCloses gh-19609\nCloses gh-19608\n","date":"2020-01-10 22:15:35","modifiedFileCount":"46","status":"M","submitter":"Andy Wilkinson"}]
