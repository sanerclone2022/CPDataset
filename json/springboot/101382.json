[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void bindToMapShouldReturnPopulatedMap() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> result = this.binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", \"1\");\n\t\tassertThat(result).containsEntry(\"baz\", \"2\");\n\t\tassertThat(result).containsEntry(\"BiNg\", \"3\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":95,"groupId":"901","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToMapShouldReturnPopulatedMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c9/62c042e104d1f72847861212a3759a4c4319b0.src","preCode":"\tpublic void bindToMapShouldReturnPopulatedMap() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> result = this.binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", \"1\");\n\t\tassertThat(result).containsEntry(\"baz\", \"2\");\n\t\tassertThat(result).containsEntry(\"BiNg\", \"3\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void bindToMapShouldConvertMapValue() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tsource.put(\"faf.bar\", \"x\");\n\t\tthis.sources.add(source);\n\t\tMap<String, Integer> result = this.binder.bind(\"foo\", STRING_INTEGER_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", 1);\n\t\tassertThat(result).containsEntry(\"baz\", 2);\n\t\tassertThat(result).containsEntry(\"BiNg\", 3);\n\t}\n","date":"2017-10-05 11:18:56","endLine":120,"groupId":"3363","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToMapShouldConvertMapValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c9/62c042e104d1f72847861212a3759a4c4319b0.src","preCode":"\tpublic void bindToMapShouldConvertMapValue() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tsource.put(\"faf.bar\", \"x\");\n\t\tthis.sources.add(source);\n\t\tMap<String, Integer> result = this.binder.bind(\"foo\", STRING_INTEGER_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", 1);\n\t\tassertThat(result).containsEntry(\"baz\", 2);\n\t\tassertThat(result).containsEntry(\"BiNg\", 3);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void bindToMapShouldReturnPopulatedMap() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> result = this.binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", \"1\");\n\t\tassertThat(result).containsEntry(\"baz\", \"2\");\n\t\tassertThat(result).containsEntry(\"BiNg\", \"3\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":96,"groupId":"901","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToMapShouldReturnPopulatedMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/be/7c39de7bba2dd03c538fff9ecc598f2ca502e3.src","preCode":"\tpublic void bindToMapShouldReturnPopulatedMap() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> result = this.binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", \"1\");\n\t\tassertThat(result).containsEntry(\"baz\", \"2\");\n\t\tassertThat(result).containsEntry(\"BiNg\", \"3\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void bindToMapShouldConvertMapValue() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tsource.put(\"faf.bar\", \"x\");\n\t\tthis.sources.add(source);\n\t\tMap<String, Integer> result = this.binder.bind(\"foo\", STRING_INTEGER_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", 1);\n\t\tassertThat(result).containsEntry(\"baz\", 2);\n\t\tassertThat(result).containsEntry(\"BiNg\", 3);\n\t}\n","date":"2017-12-12 18:57:30","endLine":121,"groupId":"3363","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToMapShouldConvertMapValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/be/7c39de7bba2dd03c538fff9ecc598f2ca502e3.src","preCode":"\tpublic void bindToMapShouldConvertMapValue() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tsource.put(\"faf.bar\", \"x\");\n\t\tthis.sources.add(source);\n\t\tMap<String, Integer> result = this.binder.bind(\"foo\", STRING_INTEGER_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", 1);\n\t\tassertThat(result).containsEntry(\"baz\", 2);\n\t\tassertThat(result).containsEntry(\"BiNg\", 3);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid bindToMapShouldReturnPopulatedMap() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> result = this.binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", \"1\");\n\t\tassertThat(result).containsEntry(\"baz\", \"2\");\n\t\tassertThat(result).containsEntry(\"BiNg\", \"3\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":92,"groupId":"101382","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"bindToMapShouldReturnPopulatedMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/b30f26577f68c3eb5e6c18d90cca4b6a62f01d.src","preCode":"\tpublic void bindToMapShouldReturnPopulatedMap() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tthis.sources.add(source);\n\t\tMap<String, String> result = this.binder.bind(\"foo\", STRING_STRING_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", \"1\");\n\t\tassertThat(result).containsEntry(\"baz\", \"2\");\n\t\tassertThat(result).containsEntry(\"BiNg\", \"3\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid bindToMapShouldConvertMapValue() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tsource.put(\"faf.bar\", \"x\");\n\t\tthis.sources.add(source);\n\t\tMap<String, Integer> result = this.binder.bind(\"foo\", STRING_INTEGER_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", 1);\n\t\tassertThat(result).containsEntry(\"baz\", 2);\n\t\tassertThat(result).containsEntry(\"BiNg\", 3);\n\t}\n","date":"2019-06-07 19:25:54","endLine":117,"groupId":"101382","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"bindToMapShouldConvertMapValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/b30f26577f68c3eb5e6c18d90cca4b6a62f01d.src","preCode":"\tpublic void bindToMapShouldConvertMapValue() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"1\");\n\t\tsource.put(\"foo.[baz]\", \"2\");\n\t\tsource.put(\"foo[BiNg]\", \"3\");\n\t\tsource.put(\"faf.bar\", \"x\");\n\t\tthis.sources.add(source);\n\t\tMap<String, Integer> result = this.binder.bind(\"foo\", STRING_INTEGER_MAP).get();\n\t\tassertThat(result).hasSize(3);\n\t\tassertThat(result).containsEntry(\"bar\", 1);\n\t\tassertThat(result).containsEntry(\"baz\", 2);\n\t\tassertThat(result).containsEntry(\"BiNg\", 3);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/MapBinderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
