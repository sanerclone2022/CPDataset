[{"authorTime":"2017-11-03 09:00:55","codes":[{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent()\n\t\t\tthrows Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.applyTo(this.context);\n\t\tsetupContext();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = this.context.getBean(\"cloudFoundryWebFluxEndpointHandlerMapping\",\n\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping.class);\n\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\tassertThat(interceptorSecurityService).isNull();\n\t}\n","date":"2017-11-03 09:00:55","endLine":145,"groupId":"3861","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0e/e4e385a1cc584858db764f4c98ec3d2a6406b3.src","preCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent()\n\t\t\tthrows Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.applyTo(this.context);\n\t\tsetupContext();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = this.context.getBean(\"cloudFoundryWebFluxEndpointHandlerMapping\",\n\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping.class);\n\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\tassertThat(interceptorSecurityService).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"},{"authorDate":"2017-11-03 09:00:55","commitOrder":1,"curCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent()\n\t\t\tthrows Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = this.context\n\t\t\t\t.getBean(\"cloudFoundryWebEndpointServletHandlerMapping\",\n\t\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping.class);\n\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\tassertThat(interceptorSecurityService).isNull();\n\t}\n","date":"2017-11-03 09:00:55","endLine":173,"groupId":"3861","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9d/77d3e16c13b6a119d620f77d7dd7d1bc158f1c.src","preCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent()\n\t\t\tthrows Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = this.context\n\t\t\t\t.getBean(\"cloudFoundryWebEndpointServletHandlerMapping\",\n\t\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping.class);\n\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\tassertThat(interceptorSecurityService).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"}],"commitId":"d50fe8874fa442cbd3ea380754e7b412a77aed9a","commitMessage":"@@@Add CF support for reactive actuators\n\nCloses gh-10780\n","date":"2017-11-03 09:00:55","modifiedFileCount":"5","status":"B","submitter":"Madhura Bhave"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.applyTo(this.context);\n\t\tsetupContext();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = this.context.getBean(\n\t\t\t\t\"cloudFoundryWebFluxEndpointHandlerMapping\",\n\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping.class);\n\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\tassertThat(interceptorSecurityService).isNull();\n\t}\n","date":"2017-12-12 18:57:30","endLine":153,"groupId":"3861","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d3/cc6613edffba459f5bd671dc53602e315a294d.src","preCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent()\n\t\t\tthrows Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.applyTo(this.context);\n\t\tsetupContext();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = this.context.getBean(\n\t\t\t\t\"cloudFoundryWebFluxEndpointHandlerMapping\",\n\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping.class);\n\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\tassertThat(interceptorSecurityService).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = this.context\n\t\t\t\t.getBean(\"cloudFoundryWebEndpointServletHandlerMapping\",\n\t\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping.class);\n\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\tassertThat(interceptorSecurityService).isNull();\n\t}\n","date":"2017-12-12 18:57:30","endLine":179,"groupId":"3861","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9e/f59344cf611c5d241148eeaadc40ccfde4aec5.src","preCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent()\n\t\t\tthrows Exception {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = this.context\n\t\t\t\t.getBean(\"cloudFoundryWebEndpointServletHandlerMapping\",\n\t\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping.class);\n\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\tassertThat(interceptorSecurityService).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-01-03 03:13:23","codes":[{"authorDate":"2018-01-03 03:13:23","commitOrder":3,"curCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.run(context -> {\n\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = context.getBean(\n\t\t\t\t\t\"cloudFoundryWebFluxEndpointHandlerMapping\",\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping.class);\n\t\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\"securityInterceptor\");\n\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\t\tassertThat(interceptorSecurityService).isNull();\n\t\t});\n\t}\n","date":"2018-03-03 10:30:55","endLine":175,"groupId":"27","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fe/f5777e431c7382be54b7cc937bd93608ceab3f.src","preCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.applyTo(this.context);\n\t\tsetupContext();\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = this.context.getBean(\n\t\t\t\t\"cloudFoundryWebFluxEndpointHandlerMapping\",\n\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping.class);\n\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\tassertThat(interceptorSecurityService).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2018-01-03 03:13:23","commitOrder":3,"curCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.run(context -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tassertThat(interceptorSecurityService).isNull();\n\t\t\t\t});\n\t}\n","date":"2018-03-03 10:30:55","endLine":175,"groupId":"6090","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c9/100d317a86cf8ef992a6e0b5a741387b1d9dea.src","preCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tTestPropertyValues\n\t\t\t\t.of(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = this.context\n\t\t\t\t.getBean(\"cloudFoundryWebEndpointServletHandlerMapping\",\n\t\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping.class);\n\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\"securityInterceptor\");\n\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\tassertThat(interceptorSecurityService).isNull();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"1c27a8e6e271a86c8600fcfa2b1f221e9023efe9","commitMessage":"@@@Move tests to ApplicationContextRunner\n","date":"2018-03-03 10:30:55","modifiedFileCount":"2","status":"M","submitter":"Madhura Bhave"},{"authorTime":"2018-03-13 07:30:55","codes":[{"authorDate":"2018-03-13 07:30:55","commitOrder":4,"curCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\"vcap.application.application_id:my-app-id\").run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = context\n\t\t\t\t\t\t\t.getBean(\"cloudFoundryWebFluxEndpointHandlerMapping\",\n\t\t\t\t\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping.class);\n\t\t\t\t\tObject securityInterceptor = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tassertThat(interceptorSecurityService).isNull();\n\t\t\t\t});\n\t}\n","date":"2018-03-15 05:05:26","endLine":186,"groupId":"27","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/11/1366da84f09ee18009d12fa38e750b65df230c.src","preCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.run(context -> {\n\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = context.getBean(\n\t\t\t\t\t\"cloudFoundryWebFluxEndpointHandlerMapping\",\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping.class);\n\t\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\"securityInterceptor\");\n\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\t\tassertThat(interceptorSecurityService).isNull();\n\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2018-03-13 07:30:55","commitOrder":4,"curCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\",\n\t\t\t\t\"vcap.application.application_id:my-app-id\").run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(\n\t\t\t\t\t\t\tcontext);\n\t\t\t\t\tObject securityInterceptor = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tassertThat(interceptorSecurityService).isNull();\n\t\t\t\t});\n\t}\n","date":"2018-03-15 05:05:26","endLine":189,"groupId":"6090","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/94/e6afde968ca3c3032e3fdea386bf0e8c19026e.src","preCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tthis.contextRunner\n\t\t\t\t.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.run(context -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping,\n\t\t\t\t\t\t\t\"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils\n\t\t\t\t\t\t\t.getField(securityInterceptor, \"cloudFoundrySecurityService\");\n\t\t\t\t\tassertThat(interceptorSecurityService).isNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"}],"commitId":"a4b0be089da735c481ede50d66f8abc1d3d2cccd","commitMessage":"@@@Polish\n","date":"2018-03-15 05:05:26","modifiedFileCount":"29","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = context.getBean(\n\t\t\t\t\t\t\t\"cloudFoundryWebFluxEndpointHandlerMapping\",\n\t\t\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping.class);\n\t\t\t\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(securityInterceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tassertThat(interceptorSecurityService).isNull();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":164,"groupId":"10732","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/dc/ac9ee8d9051b313821e885b1ad75293e602f47.src","preCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping handlerMapping = context.getBean(\n\t\t\t\t\t\t\t\"cloudFoundryWebFluxEndpointHandlerMapping\",\n\t\t\t\t\t\t\tCloudFoundryWebFluxEndpointHandlerMapping.class);\n\t\t\t\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(securityInterceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tassertThat(interceptorSecurityService).isNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":5,"curCode":"\tvoid cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(securityInterceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tassertThat(interceptorSecurityService).isNull();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":156,"groupId":"10732","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f9/4072091366163790d53977168bcb9b5a12dd29.src","preCode":"\tpublic void cloudFoundryPlatformActiveAndCloudControllerUrlNotPresent() {\n\t\tthis.contextRunner.withPropertyValues(\"VCAP_APPLICATION:---\", \"vcap.application.application_id:my-app-id\")\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tCloudFoundryWebEndpointServletHandlerMapping handlerMapping = getHandlerMapping(context);\n\t\t\t\t\tObject securityInterceptor = ReflectionTestUtils.getField(handlerMapping, \"securityInterceptor\");\n\t\t\t\t\tObject interceptorSecurityService = ReflectionTestUtils.getField(securityInterceptor,\n\t\t\t\t\t\t\t\"cloudFoundrySecurityService\");\n\t\t\t\t\tassertThat(interceptorSecurityService).isNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
