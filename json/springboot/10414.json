[{"authorTime":"2018-01-19 12:52:35","codes":[{"authorDate":"2018-01-19 12:52:35","commitOrder":1,"curCode":"\tprivate ExposableControllerEndpoint mockEndpoint(String id, Object controller) {\n\t\tExposableControllerEndpoint endpoint = mock(ExposableControllerEndpoint.class);\n\t\tgiven(endpoint.getId()).willReturn(id);\n\t\tgiven(endpoint.getController()).willReturn(controller);\n\t\tgiven(endpoint.getRootPath()).willReturn(id);\n\t\treturn endpoint;\n\t}\n","date":"2018-01-20 13:06:32","endLine":127,"groupId":"8476","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mockEndpoint","params":"(Stringid@Objectcontroller)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a1/c554f9739a28be27403fafad373ae46be5f3ec.src","preCode":"\tprivate ExposableControllerEndpoint mockEndpoint(String id, Object controller) {\n\t\tExposableControllerEndpoint endpoint = mock(ExposableControllerEndpoint.class);\n\t\tgiven(endpoint.getId()).willReturn(id);\n\t\tgiven(endpoint.getController()).willReturn(controller);\n\t\tgiven(endpoint.getRootPath()).willReturn(id);\n\t\treturn endpoint;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/reactive/ControllerEndpointHandlerMappingTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2018-01-19 12:52:35","commitOrder":1,"curCode":"\tprivate ExposableControllerEndpoint mockEndpoint(String id, Object controller) {\n\t\tExposableControllerEndpoint endpoint = mock(ExposableControllerEndpoint.class);\n\t\tgiven(endpoint.getId()).willReturn(id);\n\t\tgiven(endpoint.getController()).willReturn(controller);\n\t\tgiven(endpoint.getRootPath()).willReturn(id);\n\t\treturn endpoint;\n\t}\n","date":"2018-01-20 13:06:32","endLine":119,"groupId":"8476","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mockEndpoint","params":"(Stringid@Objectcontroller)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/11/1952b3dd4e5ffd1085e19f771cad3f9fd39208.src","preCode":"\tprivate ExposableControllerEndpoint mockEndpoint(String id, Object controller) {\n\t\tExposableControllerEndpoint endpoint = mock(ExposableControllerEndpoint.class);\n\t\tgiven(endpoint.getId()).willReturn(id);\n\t\tgiven(endpoint.getController()).willReturn(controller);\n\t\tgiven(endpoint.getRootPath()).willReturn(id);\n\t\treturn endpoint;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/ControllerEndpointHandlerMappingTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"bda9b892b399d0b6b5d385b1d90f6011c09e8ec0","commitMessage":"@@@Add direct WebFlux and WebMvc endpoint support\n\nAdd `@ControllerEndpoint` and `@RestControllerEndpoint` annotations that\ncan be used to develop a Spring-only request mapped endpoint. Both\nSpring MVC and Spring WebFlux are supported.\n\nThis feature is primarily for use when deeper Spring integration is\nrequired or when existing Spring Boot 1.5 projects want to migrate to\nSpring Boot 2.0 without re-writing existing endpoints. It comes at the\nexpense of portability.  since such endpoints will be missing from\nJersey.\n\nFixes gh-10257\n","date":"2018-01-20 13:06:32","modifiedFileCount":"14","status":"B","submitter":"Phillip Webb"},{"authorTime":"2018-10-15 04:53:28","codes":[{"authorDate":"2018-10-15 04:53:28","commitOrder":2,"curCode":"\tprivate ExposableControllerEndpoint mockEndpoint(EndpointId id, Object controller) {\n\t\tExposableControllerEndpoint endpoint = mock(ExposableControllerEndpoint.class);\n\t\tgiven(endpoint.getEndpointId()).willReturn(id);\n\t\tgiven(endpoint.getController()).willReturn(controller);\n\t\tgiven(endpoint.getRootPath()).willReturn(id.toString());\n\t\treturn endpoint;\n\t}\n","date":"2018-10-15 04:53:28","endLine":138,"groupId":"10414","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mockEndpoint","params":"(EndpointIdid@Objectcontroller)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/49/a0289d0f7e745e7ded166265f36227c416c785.src","preCode":"\tprivate ExposableControllerEndpoint mockEndpoint(String id, Object controller) {\n\t\tExposableControllerEndpoint endpoint = mock(ExposableControllerEndpoint.class);\n\t\tgiven(endpoint.getId()).willReturn(id);\n\t\tgiven(endpoint.getController()).willReturn(controller);\n\t\tgiven(endpoint.getRootPath()).willReturn(id);\n\t\treturn endpoint;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/reactive/ControllerEndpointHandlerMappingTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2018-10-15 04:53:28","commitOrder":2,"curCode":"\tprivate ExposableControllerEndpoint mockEndpoint(EndpointId id, Object controller) {\n\t\tExposableControllerEndpoint endpoint = mock(ExposableControllerEndpoint.class);\n\t\tgiven(endpoint.getEndpointId()).willReturn(id);\n\t\tgiven(endpoint.getController()).willReturn(controller);\n\t\tgiven(endpoint.getRootPath()).willReturn(id.toString());\n\t\treturn endpoint;\n\t}\n","date":"2018-10-15 04:53:28","endLine":130,"groupId":"10414","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mockEndpoint","params":"(EndpointIdid@Objectcontroller)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/05/cc8f3965eb96e3ceb27fa8a7d3e1c3352a6701.src","preCode":"\tprivate ExposableControllerEndpoint mockEndpoint(String id, Object controller) {\n\t\tExposableControllerEndpoint endpoint = mock(ExposableControllerEndpoint.class);\n\t\tgiven(endpoint.getId()).willReturn(id);\n\t\tgiven(endpoint.getController()).willReturn(controller);\n\t\tgiven(endpoint.getRootPath()).willReturn(id);\n\t\treturn endpoint;\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/ControllerEndpointHandlerMappingTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"1bf97e9b5e2187a04d8471ead73b629444ecc838","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-10-15 04:53:28","modifiedFileCount":"66","status":"M","submitter":"Phillip Webb"}]
