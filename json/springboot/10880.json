[{"authorTime":"2018-11-28 17:23:44","codes":[{"authorDate":"2018-06-02 00:58:03","commitOrder":3,"curCode":"\tpublic void allHikariDataSourcesCanBeInstrumented() {\n\t\tthis.contextRunner.withUserConfiguration(TwoHikariDataSourcesConfiguration.class)\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(DataSourceAutoConfiguration.class))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(\"firstDataSource\", DataSource.class).getConnection();\n\t\t\t\t\tcontext.getBean(\"secondOne\", DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"firstDataSource\")\n\t\t\t\t\t\t\t.meter();\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"secondOne\")\n\t\t\t\t\t\t\t.meter();\n\t\t\t\t});\n\t}\n","date":"2018-06-02 00:58:03","endLine":171,"groupId":"7168","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"allHikariDataSourcesCanBeInstrumented","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/36/44314fc1a4523ace388ddf4fbb5dda63b1acda.src","preCode":"\tpublic void allHikariDataSourcesCanBeInstrumented() {\n\t\tthis.contextRunner.withUserConfiguration(TwoHikariDataSourcesConfiguration.class)\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(DataSourceAutoConfiguration.class))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(\"firstDataSource\", DataSource.class).getConnection();\n\t\t\t\t\tcontext.getBean(\"secondOne\", DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"firstDataSource\")\n\t\t\t\t\t\t\t.meter();\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"secondOne\")\n\t\t\t\t\t\t\t.meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"NB"},{"authorDate":"2018-11-28 17:23:44","commitOrder":3,"curCode":"\tpublic void hikariProxiedDataSourceCanBeInstrumented() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(ProxiedHikariDataSourcesConfiguration.class)\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(DataSourceAutoConfiguration.class))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(\"proxiedDataSource\", DataSource.class)\n\t\t\t\t\t\t\t.getConnection();\n\t\t\t\t\tcontext.getBean(\"delegateDataSource\", DataSource.class)\n\t\t\t\t\t\t\t.getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"firstDataSource\")\n\t\t\t\t\t\t\t.meter();\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"secondOne\")\n\t\t\t\t\t\t\t.meter();\n\t\t\t\t});\n\t}\n","date":"2018-11-28 17:23:44","endLine":207,"groupId":"7168","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"hikariProxiedDataSourceCanBeInstrumented","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/26/aa383afe7069c6942348a9bfcc197dfac4c6b9.src","preCode":"\tpublic void hikariProxiedDataSourceCanBeInstrumented() {\n\t\tthis.contextRunner\n\t\t\t\t.withUserConfiguration(ProxiedHikariDataSourcesConfiguration.class)\n\t\t\t\t.withConfiguration(\n\t\t\t\t\t\tAutoConfigurations.of(DataSourceAutoConfiguration.class))\n\t\t\t\t.run((context) -> {\n\t\t\t\t\tcontext.getBean(\"proxiedDataSource\", DataSource.class)\n\t\t\t\t\t\t\t.getConnection();\n\t\t\t\t\tcontext.getBean(\"delegateDataSource\", DataSource.class)\n\t\t\t\t\t\t\t.getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"firstDataSource\")\n\t\t\t\t\t\t\t.meter();\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"secondOne\")\n\t\t\t\t\t\t\t.meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"B"}],"commitId":"5f145ac4825ee6dcad09534954d9e8d89ac8bf74","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-11-28 17:23:44","modifiedFileCount":"2","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid allHikariDataSourcesCanBeInstrumented() {\n\t\tthis.contextRunner.withUserConfiguration(TwoHikariDataSourcesConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(\"firstDataSource\", DataSource.class).getConnection();\n\t\t\t\t\tcontext.getBean(\"secondOne\", DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"firstDataSource\").meter();\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"secondOne\").meter();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":144,"groupId":"10880","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"allHikariDataSourcesCanBeInstrumented","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/50/f1361fa141a8e125bc0750bf24c115864db8df.src","preCode":"\tpublic void allHikariDataSourcesCanBeInstrumented() {\n\t\tthis.contextRunner.withUserConfiguration(TwoHikariDataSourcesConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(\"firstDataSource\", DataSource.class).getConnection();\n\t\t\t\t\tcontext.getBean(\"secondOne\", DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"firstDataSource\").meter();\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"secondOne\").meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid hikariProxiedDataSourceCanBeInstrumented() {\n\t\tthis.contextRunner.withUserConfiguration(ProxiedHikariDataSourcesConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(\"proxiedDataSource\", DataSource.class).getConnection();\n\t\t\t\t\tcontext.getBean(\"delegateDataSource\", DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"firstDataSource\").meter();\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"secondOne\").meter();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":168,"groupId":"10880","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"hikariProxiedDataSourceCanBeInstrumented","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/50/f1361fa141a8e125bc0750bf24c115864db8df.src","preCode":"\tpublic void hikariProxiedDataSourceCanBeInstrumented() {\n\t\tthis.contextRunner.withUserConfiguration(ProxiedHikariDataSourcesConfiguration.class)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(DataSourceAutoConfiguration.class)).run((context) -> {\n\t\t\t\t\tcontext.getBean(\"proxiedDataSource\", DataSource.class).getConnection();\n\t\t\t\t\tcontext.getBean(\"delegateDataSource\", DataSource.class).getConnection();\n\t\t\t\t\tMeterRegistry registry = context.getBean(MeterRegistry.class);\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"firstDataSource\").meter();\n\t\t\t\t\tregistry.get(\"hikaricp.connections\").tags(\"pool\", \"secondOne\").meter();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
