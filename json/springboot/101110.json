[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void loggingThatUsesJulIsCaptured() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger\n\t\t\t\t.getLogger(getClass().getName());\n\t\tjulLogger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":255,"groupId":"2510","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loggingThatUsesJulIsCaptured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2c/5b047bd6727c93556a231337b7b5cc5aaed4f7.src","preCode":"\tpublic void loggingThatUsesJulIsCaptured() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger\n\t\t\t\t.getLogger(getClass().getName());\n\t\tjulLogger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void loggingThatUsesJulIsCaptured() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger\n\t\t\t\t.getLogger(getClass().getName());\n\t\tjulLogger.severe(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":201,"groupId":"2510","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loggingThatUsesJulIsCaptured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d9/78de8ce7310dcfa1059d840b3f6d960b515207.src","preCode":"\tpublic void loggingThatUsesJulIsCaptured() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger\n\t\t\t\t.getLogger(getClass().getName());\n\t\tjulLogger.severe(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-06-30 06:53:56","codes":[{"authorDate":"2019-06-30 06:53:56","commitOrder":2,"curCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.info(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","date":"2019-06-30 06:53:56","endLine":235,"groupId":"2510","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"loggingThatUsesJulIsCaptured","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/14/f71ae79ea54790e38db9ccd6e440fc1cfb6154.src","preCode":"\tpublic void loggingThatUsesJulIsCaptured() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.info(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"},{"authorDate":"2019-06-30 06:53:56","commitOrder":2,"curCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.severe(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","date":"2019-06-30 06:53:56","endLine":188,"groupId":"2510","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"loggingThatUsesJulIsCaptured","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6c/6320253e6a02add53321fb3ed1bf80ff820f24.src","preCode":"\tpublic void loggingThatUsesJulIsCaptured() {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.severe(\"Hello world\");\n\t\tString output = this.output.toString().trim();\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"a5f430264968166c80f2a3d88bc0f96d0c3c2521","commitMessage":"@@@Merge pull request #17107 from L00kian\n\n* gh-17107:\n  Polish \"Migrate LogbackLoggingSystemTests to JUnit 5\"\n  Migrate LogbackLoggingSystemTests to JUnit 5\n\nCloses gh-17107\n","date":"2019-06-30 06:53:56","modifiedFileCount":"4","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-01-10 21:48:43","codes":[{"authorDate":"2019-06-30 06:53:56","commitOrder":3,"curCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.info(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","date":"2019-06-30 06:53:56","endLine":235,"groupId":"2510","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"loggingThatUsesJulIsCaptured","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/14/f71ae79ea54790e38db9ccd6e440fc1cfb6154.src","preCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.info(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"N"},{"authorDate":"2020-01-10 21:48:43","commitOrder":3,"curCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.setLevel(Level.INFO);\n\t\tjulLogger.severe(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","date":"2020-01-10 22:15:35","endLine":200,"groupId":"13547","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"loggingThatUsesJulIsCaptured","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2a/92a97bfcb5c772ffb54a1c7baa10c6aa0f4327.src","preCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.severe(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"}],"commitId":"ce99db19028b54886ae99c1fd916e613a982b65f","commitMessage":"@@@Port the build to Gradle\n\nCloses gh-19609\nCloses gh-19608\n","date":"2020-01-10 22:15:35","modifiedFileCount":"46","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2020-01-10 21:48:43","codes":[{"authorDate":"2020-10-22 07:05:14","commitOrder":4,"curCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tinitialize(this.initializationContext, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.info(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","date":"2020-10-23 03:55:02","endLine":259,"groupId":"2510","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"loggingThatUsesJulIsCaptured","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/64/e8170081155f450b4c996aaaadd19b5ab5346c.src","preCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.info(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"},{"authorDate":"2020-01-10 21:48:43","commitOrder":4,"curCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.setLevel(Level.INFO);\n\t\tjulLogger.severe(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","date":"2020-01-10 22:15:35","endLine":200,"groupId":"13547","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"loggingThatUsesJulIsCaptured","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2a/92a97bfcb5c772ffb54a1c7baa10c6aa0f4327.src","preCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.setLevel(Level.INFO);\n\t\tjulLogger.severe(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"N"}],"commitId":"1725594a0edae57a50614210f094e59b6edca305","commitMessage":"@@@Rationalize Logback logging properties\n\nDeprecate and provide alternatives for logging properties that are\nspecific to Logback.\n\nThe following Spring Boot properties have been changed:\n\n  * logging.pattern.rolling-file-name ->\n    logging.logback.rollingpolicy.file-name-pattern\n\n  * logging.file.clean-history-on-start ->\n    logging.logback.rollingpolicy.clean-history-on-start\n\n  * logging.file.max-size ->\n    logging.logback.rollingpolicy.max-file-size\n\n  * logging.file.total-size-cap ->\n    logging.logback.rollingpolicy.total-size-cap\n\n  * logging.file.max-history ->\n    logging.logback.rollingpolicy.max-history\n\nAs have the system environment properties that they map to:\n\n  * ROLLING_FILE_NAME_PATTERN ->\n    LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN\n\n  * LOG_FILE_CLEAN_HISTORY_ON_START ->\n    LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START\n\n  * LOG_FILE_MAX_SIZE ->\n    LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE\n\n  * LOG_FILE_TOTAL_SIZE_CAP ->\n    LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP\n\n  * LOG_FILE_MAX_HISTORY ->\n    LOGBACK_ROLLINGPOLICY_MAX_HISTORY\n\nThis commit also cleans up and simplifies `DefaultLogbackConfiguration`.\n\nCloses gh-23609\n","date":"2020-10-23 03:55:02","modifiedFileCount":"8","status":"M","submitter":"Phillip Webb"},{"authorTime":"2020-12-10 13:21:31","codes":[{"authorDate":"2020-10-22 07:05:14","commitOrder":5,"curCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tinitialize(this.initializationContext, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.info(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","date":"2020-10-23 03:55:02","endLine":259,"groupId":"101110","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"loggingThatUsesJulIsCaptured","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/64/e8170081155f450b4c996aaaadd19b5ab5346c.src","preCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tinitialize(this.initializationContext, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.info(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2020-12-10 13:21:31","commitOrder":5,"curCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.setLevel(java.util.logging.Level.INFO);\n\t\tjulLogger.severe(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","date":"2021-04-16 03:22:24","endLine":247,"groupId":"101110","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"loggingThatUsesJulIsCaptured","params":"(CapturedOutputoutput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/58f22c5163db67244c698f9d4d66fdfa9ce9a2.src","preCode":"\tvoid loggingThatUsesJulIsCaptured(CapturedOutput output) {\n\t\tthis.loggingSystem.beforeInitialize();\n\t\tthis.loggingSystem.initialize(null, null, null);\n\t\tjava.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(getClass().getName());\n\t\tjulLogger.setLevel(Level.INFO);\n\t\tjulLogger.severe(\"Hello world\");\n\t\tassertThat(output).contains(\"Hello world\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystemTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"}],"commitId":"238d0fed71772ee732a7d1fe75e324f7d1fc2da8","commitMessage":"@@@Improve Log4J log level reset support\n\nUpdate `Log4J2LoggingSystem` so that call to `setLevel` with a `null`\nlevel with remove the logger if it was previously configured by a\n`LoggingSystem` call.\n\nTo track which loggers have been configured by us.  and which have been\nconfigure directly by the user.  a custom `LoggerConfig` subclass is\nused. We'll only remove `LevelSetLoggerConfig` classes.  for any others\nwe'll call `setLevel(null)` on the config.\n\nPrior to this commit.  it was impossible to set then reset a logger\nlevel using the actuator endpoint. This is because Log4J doesn't provide\na way to get the actual configured level. If the `setLevel(null)` has\nbeen applied.  then `getLevel()` will return the value of the parent\nlogger or a default value of `ERROR`.\n\nFixes gh-24298\n","date":"2021-04-16 03:22:24","modifiedFileCount":"2","status":"M","submitter":"Phillip Webb"}]
