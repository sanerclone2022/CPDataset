[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tprivate void onAuthenticationFailureEvent(AbstractAuthenticationFailureEvent event) {\n\t\tMap<String, Object> data = new HashMap<>();\n\t\tdata.put(\"type\", event.getException().getClass().getName());\n\t\tdata.put(\"message\", event.getException().getMessage());\n\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t}\n\t\tpublish(new AuditEvent(event.getAuthentication().getName(),\n\t\t\t\tAUTHENTICATION_FAILURE, data));\n\t}\n","date":"2017-10-05 11:18:56","endLine":85,"groupId":"7642","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onAuthenticationFailureEvent","params":"(AbstractAuthenticationFailureEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/32/8ef92416036f70b3fbd872c5e02d5ff2e55be7.src","preCode":"\tprivate void onAuthenticationFailureEvent(AbstractAuthenticationFailureEvent event) {\n\t\tMap<String, Object> data = new HashMap<>();\n\t\tdata.put(\"type\", event.getException().getClass().getName());\n\t\tdata.put(\"message\", event.getException().getMessage());\n\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t}\n\t\tpublish(new AuditEvent(event.getAuthentication().getName(),\n\t\t\t\tAUTHENTICATION_FAILURE, data));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\t\tpublic void process(AuthenticationAuditListener listener,\n\t\t\t\tAbstractAuthenticationEvent input) {\n\t\t\tif (listener != null) {\n\t\t\t\tAuthenticationSwitchUserEvent event = (AuthenticationSwitchUserEvent) input;\n\t\t\t\tMap<String, Object> data = new HashMap<>();\n\t\t\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t\t\t}\n\t\t\t\tdata.put(\"target\", event.getTargetUser().getUsername());\n\t\t\t\tlistener.publish(new AuditEvent(event.getAuthentication().getName(),\n\t\t\t\t\t\tAUTHENTICATION_SWITCH, data));\n\t\t\t}\n\n\t\t}\n","date":"2017-10-05 11:18:56","endLine":111,"groupId":"7642","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(AuthenticationAuditListenerlistener@AbstractAuthenticationEventinput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/32/8ef92416036f70b3fbd872c5e02d5ff2e55be7.src","preCode":"\t\tpublic void process(AuthenticationAuditListener listener,\n\t\t\t\tAbstractAuthenticationEvent input) {\n\t\t\tif (listener != null) {\n\t\t\t\tAuthenticationSwitchUserEvent event = (AuthenticationSwitchUserEvent) input;\n\t\t\t\tMap<String, Object> data = new HashMap<>();\n\t\t\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t\t\t}\n\t\t\t\tdata.put(\"target\", event.getTargetUser().getUsername());\n\t\t\t\tlistener.publish(new AuditEvent(event.getAuthentication().getName(),\n\t\t\t\t\t\tAUTHENTICATION_SWITCH, data));\n\t\t\t}\n\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-02-13 00:26:46","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":2,"curCode":"\tprivate void onAuthenticationFailureEvent(AbstractAuthenticationFailureEvent event) {\n\t\tMap<String, Object> data = new HashMap<>();\n\t\tdata.put(\"type\", event.getException().getClass().getName());\n\t\tdata.put(\"message\", event.getException().getMessage());\n\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t}\n\t\tpublish(new AuditEvent(event.getAuthentication().getName(),\n\t\t\t\tAUTHENTICATION_FAILURE, data));\n\t}\n","date":"2017-10-05 11:18:56","endLine":85,"groupId":"7642","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onAuthenticationFailureEvent","params":"(AbstractAuthenticationFailureEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/32/8ef92416036f70b3fbd872c5e02d5ff2e55be7.src","preCode":"\tprivate void onAuthenticationFailureEvent(AbstractAuthenticationFailureEvent event) {\n\t\tMap<String, Object> data = new HashMap<>();\n\t\tdata.put(\"type\", event.getException().getClass().getName());\n\t\tdata.put(\"message\", event.getException().getMessage());\n\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t}\n\t\tpublish(new AuditEvent(event.getAuthentication().getName(),\n\t\t\t\tAUTHENTICATION_FAILURE, data));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"},{"authorDate":"2019-02-13 00:26:46","commitOrder":2,"curCode":"\t\tpublic void process(AuthenticationAuditListener listener,\n\t\t\t\tAbstractAuthenticationEvent input) {\n\t\t\tif (listener != null) {\n\t\t\t\tAuthenticationSwitchUserEvent event = (AuthenticationSwitchUserEvent) input;\n\t\t\t\tMap<String, Object> data = new HashMap<>();\n\t\t\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t\t\t}\n\t\t\t\tif (event.getTargetUser() != null) {\n\t\t\t\t\tdata.put(\"target\", event.getTargetUser().getUsername());\n\t\t\t\t}\n\t\t\t\tlistener.publish(new AuditEvent(event.getAuthentication().getName(),\n\t\t\t\t\t\tAUTHENTICATION_SWITCH, data));\n\t\t\t}\n\n\t\t}\n","date":"2019-02-13 00:26:46","endLine":113,"groupId":"7642","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(AuthenticationAuditListenerlistener@AbstractAuthenticationEventinput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/97/1a67a2bf06816c9305b780e2f910174061cec1.src","preCode":"\t\tpublic void process(AuthenticationAuditListener listener,\n\t\t\t\tAbstractAuthenticationEvent input) {\n\t\t\tif (listener != null) {\n\t\t\t\tAuthenticationSwitchUserEvent event = (AuthenticationSwitchUserEvent) input;\n\t\t\t\tMap<String, Object> data = new HashMap<>();\n\t\t\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t\t\t}\n\t\t\t\tdata.put(\"target\", event.getTargetUser().getUsername());\n\t\t\t\tlistener.publish(new AuditEvent(event.getAuthentication().getName(),\n\t\t\t\t\t\tAUTHENTICATION_SWITCH, data));\n\t\t\t}\n\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"1aa7b30b70ca622b31e65756168b78f7ad16e36a","commitMessage":"@@@Merge branch '2.1.x'\n","date":"2019-02-13 00:26:46","modifiedFileCount":"2","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-07-02 03:29:51","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":3,"curCode":"\tprivate void onAuthenticationFailureEvent(AbstractAuthenticationFailureEvent event) {\n\t\tMap<String, Object> data = new HashMap<>();\n\t\tdata.put(\"type\", event.getException().getClass().getName());\n\t\tdata.put(\"message\", event.getException().getMessage());\n\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t}\n\t\tpublish(new AuditEvent(event.getAuthentication().getName(),\n\t\t\t\tAUTHENTICATION_FAILURE, data));\n\t}\n","date":"2017-10-05 11:18:56","endLine":85,"groupId":"10578","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onAuthenticationFailureEvent","params":"(AbstractAuthenticationFailureEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/32/8ef92416036f70b3fbd872c5e02d5ff2e55be7.src","preCode":"\tprivate void onAuthenticationFailureEvent(AbstractAuthenticationFailureEvent event) {\n\t\tMap<String, Object> data = new HashMap<>();\n\t\tdata.put(\"type\", event.getException().getClass().getName());\n\t\tdata.put(\"message\", event.getException().getMessage());\n\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t}\n\t\tpublish(new AuditEvent(event.getAuthentication().getName(),\n\t\t\t\tAUTHENTICATION_FAILURE, data));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"},{"authorDate":"2019-07-02 03:29:51","commitOrder":3,"curCode":"\t\tvoid process(AuthenticationAuditListener listener, AbstractAuthenticationEvent input) {\n\t\t\tif (listener != null) {\n\t\t\t\tAuthenticationSwitchUserEvent event = (AuthenticationSwitchUserEvent) input;\n\t\t\t\tMap<String, Object> data = new HashMap<>();\n\t\t\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t\t\t}\n\t\t\t\tif (event.getTargetUser() != null) {\n\t\t\t\t\tdata.put(\"target\", event.getTargetUser().getUsername());\n\t\t\t\t}\n\t\t\t\tlistener.publish(new AuditEvent(event.getAuthentication().getName(), AUTHENTICATION_SWITCH, data));\n\t\t\t}\n\n\t\t}\n","date":"2019-07-04 02:39:47","endLine":110,"groupId":"10578","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"process","params":"(AuthenticationAuditListenerlistener@AbstractAuthenticationEventinput)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/bb/4a3e96abb925e7976e243dcc66251568571d16.src","preCode":"\t\tpublic void process(AuthenticationAuditListener listener, AbstractAuthenticationEvent input) {\n\t\t\tif (listener != null) {\n\t\t\t\tAuthenticationSwitchUserEvent event = (AuthenticationSwitchUserEvent) input;\n\t\t\t\tMap<String, Object> data = new HashMap<>();\n\t\t\t\tif (event.getAuthentication().getDetails() != null) {\n\t\t\t\t\tdata.put(\"details\", event.getAuthentication().getDetails());\n\t\t\t\t}\n\t\t\t\tif (event.getTargetUser() != null) {\n\t\t\t\t\tdata.put(\"target\", event.getTargetUser().getUsername());\n\t\t\t\t}\n\t\t\t\tlistener.publish(new AuditEvent(event.getAuthentication().getName(), AUTHENTICATION_SWITCH, data));\n\t\t\t}\n\n\t\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"a66c4d3096877b33119366ea9ea165c892b462c8","commitMessage":"@@@Unify method visibility of private classes\n\nApply checkstyle rule to ensure that private and package private\nclasses do not have unnecessary public methods. Test classes have\nalso been unified as much as possible to use default scoped\ninner-classes.\n\nCloses gh-7316\n","date":"2019-07-04 02:39:47","modifiedFileCount":"906","status":"M","submitter":"Phillip Webb"}]
