[{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2018-06-04 18:28:41","commitOrder":3,"curCode":"\tpublic void customizersShouldReplaceExisting() {\n\t\tWebServiceTemplateCustomizer customizer1 = mock(\n\t\t\t\tWebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplateCustomizer customizer2 = mock(\n\t\t\t\tWebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplate template = this.builder.customizers(customizer1)\n\t\t\t\t.customizers(Collections.singleton(customizer2)).build();\n\t\tverifyZeroInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","date":"2018-06-04 18:28:41","endLine":268,"groupId":"1985","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"customizersShouldReplaceExisting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/82/480b57b5116abc65ac1c935ee83e439f295d00.src","preCode":"\tpublic void customizersShouldReplaceExisting() {\n\t\tWebServiceTemplateCustomizer customizer1 = mock(\n\t\t\t\tWebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplateCustomizer customizer2 = mock(\n\t\t\t\tWebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplate template = this.builder.customizers(customizer1)\n\t\t\t\t.customizers(Collections.singleton(customizer2)).build();\n\t\tverifyZeroInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/webservices/client/WebServiceTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"B"},{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void customizersShouldReplaceExisting() {\n\t\tRestTemplateCustomizer customizer1 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplateCustomizer customizer2 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplate template = this.builder.customizers(customizer1)\n\t\t\t\t.customizers(Collections.singleton(customizer2)).build();\n\t\tverifyZeroInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","date":"2017-12-12 18:57:30","endLine":364,"groupId":"1985","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"customizersShouldReplaceExisting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ef/3faf4dfe628025f02b298fd391b5014e4f412c.src","preCode":"\tpublic void customizersShouldReplaceExisting() {\n\t\tRestTemplateCustomizer customizer1 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplateCustomizer customizer2 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplate template = this.builder.customizers(customizer1)\n\t\t\t\t.customizers(Collections.singleton(customizer2)).build();\n\t\tverifyZeroInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/client/RestTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":357,"status":"NB"}],"commitId":"c973488c7045d0f78a15c4c6867c92a8980e1884","commitMessage":"@@@Merge pull request #12707 from nosan:feature/web-service-template\n\n* pr/12707:\n  Polish \"Add auto-configuration for WebServiceTemplate\"\n  Extract ClientHttpRequestFactory detection to its own class\n  Add auto-configuration for WebServiceTemplate\n","date":"2018-06-04 18:28:41","modifiedFileCount":"1","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid customizersShouldReplaceExisting() {\n\t\tWebServiceTemplateCustomizer customizer1 = mock(WebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplateCustomizer customizer2 = mock(WebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplate template = this.builder.customizers(customizer1)\n\t\t\t\t.customizers(Collections.singleton(customizer2)).build();\n\t\tverifyZeroInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","date":"2019-06-07 19:25:54","endLine":247,"groupId":"1985","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"customizersShouldReplaceExisting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/87/314337599ae2add8ca471dd5f145f68a967b63.src","preCode":"\tpublic void customizersShouldReplaceExisting() {\n\t\tWebServiceTemplateCustomizer customizer1 = mock(WebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplateCustomizer customizer2 = mock(WebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplate template = this.builder.customizers(customizer1)\n\t\t\t\t.customizers(Collections.singleton(customizer2)).build();\n\t\tverifyZeroInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/webservices/client/WebServiceTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid customizersShouldReplaceExisting() {\n\t\tRestTemplateCustomizer customizer1 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplateCustomizer customizer2 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplate template = this.builder.customizers(customizer1).customizers(Collections.singleton(customizer2))\n\t\t\t\t.build();\n\t\tverifyZeroInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","date":"2019-06-07 19:25:54","endLine":345,"groupId":"1985","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"customizersShouldReplaceExisting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/c8/158b233dace65fd2a9392fad905b836d4ba13e.src","preCode":"\tpublic void customizersShouldReplaceExisting() {\n\t\tRestTemplateCustomizer customizer1 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplateCustomizer customizer2 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplate template = this.builder.customizers(customizer1).customizers(Collections.singleton(customizer2))\n\t\t\t\t.build();\n\t\tverifyZeroInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/client/RestTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-10-23 15:49:46","codes":[{"authorDate":"2019-10-23 15:49:46","commitOrder":5,"curCode":"\tvoid customizersShouldReplaceExisting() {\n\t\tWebServiceTemplateCustomizer customizer1 = mock(WebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplateCustomizer customizer2 = mock(WebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplate template = this.builder.customizers(customizer1)\n\t\t\t\t.customizers(Collections.singleton(customizer2)).build();\n\t\tverifyNoInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","date":"2019-10-23 15:49:46","endLine":246,"groupId":"101214","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"customizersShouldReplaceExisting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/31/d18d94ed8808717ab36fecbb5dfe0a05234851.src","preCode":"\tvoid customizersShouldReplaceExisting() {\n\t\tWebServiceTemplateCustomizer customizer1 = mock(WebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplateCustomizer customizer2 = mock(WebServiceTemplateCustomizer.class);\n\t\tWebServiceTemplate template = this.builder.customizers(customizer1)\n\t\t\t\t.customizers(Collections.singleton(customizer2)).build();\n\t\tverifyZeroInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/webservices/client/WebServiceTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"},{"authorDate":"2019-10-23 15:49:46","commitOrder":5,"curCode":"\tvoid customizersShouldReplaceExisting() {\n\t\tRestTemplateCustomizer customizer1 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplateCustomizer customizer2 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplate template = this.builder.customizers(customizer1).customizers(Collections.singleton(customizer2))\n\t\t\t\t.build();\n\t\tverifyNoInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","date":"2019-10-23 15:49:46","endLine":396,"groupId":"101214","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"customizersShouldReplaceExisting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/57/eb724caeab61ca2447e970b74b953e0948f522.src","preCode":"\tvoid customizersShouldReplaceExisting() {\n\t\tRestTemplateCustomizer customizer1 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplateCustomizer customizer2 = mock(RestTemplateCustomizer.class);\n\t\tRestTemplate template = this.builder.customizers(customizer1).customizers(Collections.singleton(customizer2))\n\t\t\t\t.build();\n\t\tverifyZeroInteractions(customizer1);\n\t\tverify(customizer2).customize(template);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/client/RestTemplateBuilderTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"M"}],"commitId":"ce8360dc95cd028e788cb00b6ddcfbd432e72e04","commitMessage":"@@@Merge pull request #18689 from dreis2211\n\n* pr/18689:\n  Fix Mockito deprecations\n\nCloses gh-18689\n","date":"2019-10-23 15:49:46","modifiedFileCount":"19","status":"M","submitter":"Stephane Nicoll"}]
