[{"authorTime":"2020-08-08 22:53:42","codes":[{"authorDate":"2020-08-08 22:53:42","commitOrder":2,"curCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndUseIsInRoleReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tgiven(this.securityContext.isUserInRole(\"admin\")).willReturn(false);\n\t\tgiven(this.securityContext.isUserInRole(\"root\")).willReturn(true);\n\t\tassertThat(group.showComponents(this.securityContext)).isTrue();\n\t}\n","date":"2020-08-10 22:22:03","endLine":200,"groupId":"14167","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"showComponentsWhenShowComponentsIsWhenAuthorizedAndUseIsInRoleReturnsTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3c/22e80dae0dae4bced8c31acecbe511a0730f2a.src","preCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndUseIsInRoleReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tgiven(this.securityContext.isUserInRole(\"admin\")).willReturn(false);\n\t\tgiven(this.securityContext.isUserInRole(\"root\")).willReturn(true);\n\t\tassertThat(group.showComponents(this.securityContext)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"MB"},{"authorDate":"2020-08-08 22:53:42","commitOrder":2,"curCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndUserIsNotInRoleReturnsFalse() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tArrays.asList(\"admin\", \"rot\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tassertThat(group.showComponents(this.securityContext)).isFalse();\n\t}\n","date":"2020-08-10 22:22:03","endLine":209,"groupId":"14167","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"showComponentsWhenShowComponentsIsWhenAuthorizedAndUserIsNotInRoleReturnsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3c/22e80dae0dae4bced8c31acecbe511a0730f2a.src","preCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndUserIsNotInRoleReturnsFalse() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tArrays.asList(\"admin\", \"rot\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tassertThat(group.showComponents(this.securityContext)).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"B"}],"commitId":"969dd35e456e6683dd5b767be2079085ccff3941","commitMessage":"@@@Upgrade to Mockito 3.4.6\n\nCloses gh-22838\n","date":"2020-08-10 22:22:03","modifiedFileCount":"68","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-07-14 06:13:04","codes":[{"authorDate":"2021-07-14 06:13:04","commitOrder":3,"curCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndUseIsInRoleReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"), null);\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tgiven(this.securityContext.isUserInRole(\"admin\")).willReturn(false);\n\t\tgiven(this.securityContext.isUserInRole(\"root\")).willReturn(true);\n\t\tassertThat(group.showComponents(this.securityContext)).isTrue();\n\t}\n","date":"2021-08-12 10:25:25","endLine":204,"groupId":"10684","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"showComponentsWhenShowComponentsIsWhenAuthorizedAndUseIsInRoleReturnsTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7c/30ed2ed108f3f9bd9fe16350139d4c8d4907da.src","preCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndUseIsInRoleReturnsTrue() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tArrays.asList(\"admin\", \"root\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tgiven(this.securityContext.isUserInRole(\"admin\")).willReturn(false);\n\t\tgiven(this.securityContext.isUserInRole(\"root\")).willReturn(true);\n\t\tassertThat(group.showComponents(this.securityContext)).isTrue();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"},{"authorDate":"2021-07-14 06:13:04","commitOrder":3,"curCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndUserIsNotInRoleReturnsFalse() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tArrays.asList(\"admin\", \"rot\", \"bossmode\"), null);\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tassertThat(group.showComponents(this.securityContext)).isFalse();\n\t}\n","date":"2021-08-12 10:25:25","endLine":213,"groupId":"10684","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"showComponentsWhenShowComponentsIsWhenAuthorizedAndUserIsNotInRoleReturnsFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7c/30ed2ed108f3f9bd9fe16350139d4c8d4907da.src","preCode":"\tvoid showComponentsWhenShowComponentsIsWhenAuthorizedAndUserIsNotInRoleReturnsFalse() {\n\t\tAutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup((name) -> true,\n\t\t\t\tthis.statusAggregator, this.httpCodeStatusMapper, Show.WHEN_AUTHORIZED, Show.NEVER,\n\t\t\t\tArrays.asList(\"admin\", \"rot\", \"bossmode\"));\n\t\tgiven(this.securityContext.getPrincipal()).willReturn(this.principal);\n\t\tassertThat(group.showComponents(this.securityContext)).isFalse();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroupTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"49c86e6e1bef32e21bd2979aabddfcbacbe8ee89","commitMessage":"@@@Allow health groups to be configured at an additional path\n\nCloses gh-25471\n\nCo-authored-by: Phillip Webb <pwebb@vmware.com>\n","date":"2021-08-12 10:25:25","modifiedFileCount":"35","status":"M","submitter":"Madhura Bhave"}]
