[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void getConfigurationPropertyShouldConsiderAliases() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.bar\")).isEqualTo(\"bing\");\n\t\tassertThat(getValue(aliased, \"foo.bar1\")).isEqualTo(\"bing\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":44,"groupId":"5948","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getConfigurationPropertyShouldConsiderAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/2782a6d6973364094b067da803c6e73478501a.src","preCode":"\tpublic void getConfigurationPropertyShouldConsiderAliases() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.bar\")).isEqualTo(\"bing\");\n\t\tassertThat(getValue(aliased, \"foo.bar1\")).isEqualTo(\"bing\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/AliasedConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void getConfigurationPropertyWhenNotAliasesShouldReturnValue()\n\t\t\tthrows Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.baz\")).isEqualTo(\"biff\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":55,"groupId":"5948","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getConfigurationPropertyWhenNotAliasesShouldReturnValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/5f/2782a6d6973364094b067da803c6e73478501a.src","preCode":"\tpublic void getConfigurationPropertyWhenNotAliasesShouldReturnValue()\n\t\t\tthrows Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.baz\")).isEqualTo(\"biff\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/AliasedConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void getConfigurationPropertyShouldConsiderAliases() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.bar\")).isEqualTo(\"bing\");\n\t\tassertThat(getValue(aliased, \"foo.bar1\")).isEqualTo(\"bing\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":44,"groupId":"5948","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getConfigurationPropertyShouldConsiderAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/da/563758c5b7cab418f55bbca34e482c441fd420.src","preCode":"\tpublic void getConfigurationPropertyShouldConsiderAliases() throws Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.bar\")).isEqualTo(\"bing\");\n\t\tassertThat(getValue(aliased, \"foo.bar1\")).isEqualTo(\"bing\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/AliasedConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void getConfigurationPropertyWhenNotAliasesShouldReturnValue() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.baz\")).isEqualTo(\"biff\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":54,"groupId":"5948","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getConfigurationPropertyWhenNotAliasesShouldReturnValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/da/563758c5b7cab418f55bbca34e482c441fd420.src","preCode":"\tpublic void getConfigurationPropertyWhenNotAliasesShouldReturnValue()\n\t\t\tthrows Exception {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.baz\")).isEqualTo(\"biff\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/AliasedConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid getConfigurationPropertyShouldConsiderAliases() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.bar\")).isEqualTo(\"bing\");\n\t\tassertThat(getValue(aliased, \"foo.bar1\")).isEqualTo(\"bing\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":45,"groupId":"101282","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"getConfigurationPropertyShouldConsiderAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/55/78dcd30b127d6e7068211ef8c2a6934a3b9d29.src","preCode":"\tpublic void getConfigurationPropertyShouldConsiderAliases() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.bar\")).isEqualTo(\"bing\");\n\t\tassertThat(getValue(aliased, \"foo.bar1\")).isEqualTo(\"bing\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/AliasedConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid getConfigurationPropertyWhenNotAliasesShouldReturnValue() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.baz\")).isEqualTo(\"biff\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":55,"groupId":"101282","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"getConfigurationPropertyWhenNotAliasesShouldReturnValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/55/78dcd30b127d6e7068211ef8c2a6934a3b9d29.src","preCode":"\tpublic void getConfigurationPropertyWhenNotAliasesShouldReturnValue() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"foo.bar\", \"bing\");\n\t\tsource.put(\"foo.baz\", \"biff\");\n\t\tConfigurationPropertySource aliased = source.nonIterable()\n\t\t\t\t.withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\", \"foo.bar1\"));\n\t\tassertThat(getValue(aliased, \"foo.baz\")).isEqualTo(\"biff\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/AliasedConfigurationPropertySourceTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
