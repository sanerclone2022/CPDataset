[{"authorTime":"2018-03-09 07:32:57","codes":[{"authorDate":"2018-05-02 22:13:31","commitOrder":2,"curCode":"\tpublic void bindWhenExceptionNotIgnorableShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"1\");\n\t\tthis.sources.add(source);\n\t\tthis.thrown.expectCause(instanceOf(IllegalStateException.class));\n\t\tthis.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\tnew IgnoreTopLevelConverterNotFoundBindHandler());\n\t}\n","date":"2018-05-02 22:13:31","endLine":79,"groupId":"3273","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bindWhenExceptionNotIgnorableShouldFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cd/f9e5e407f75799ca1afd7c6930bfe7cd9e1b4f.src","preCode":"\tpublic void bindWhenExceptionNotIgnorableShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"1\");\n\t\tthis.sources.add(source);\n\t\tthis.thrown.expectCause(instanceOf(IllegalStateException.class));\n\t\tthis.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\tnew IgnoreTopLevelConverterNotFoundBindHandler());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/IgnoreTopLevelConverterNotFoundBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"},{"authorDate":"2018-03-09 07:32:57","commitOrder":2,"curCode":"\tpublic void bindWhenExceptionInNestedContextShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.map\", \"hello\");\n\t\tthis.sources.add(source);\n\t\tthis.thrown.expect(BindException.class);\n\t\tthis.thrown.expectCause(instanceOf(ConverterNotFoundException.class));\n\t\tthis.binder.bind(\"example\", Bindable.of(Example.class), new IgnoreTopLevelConverterNotFoundBindHandler());\n\t}\n","date":"2018-03-10 02:36:36","endLine":93,"groupId":"3273","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bindWhenExceptionInNestedContextShouldFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/d0/8d38a9829a40ff1ebeb0cf9475be0c06d36646.src","preCode":"\tpublic void bindWhenExceptionInNestedContextShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.map\", \"hello\");\n\t\tthis.sources.add(source);\n\t\tthis.thrown.expect(BindException.class);\n\t\tthis.thrown.expectCause(instanceOf(ConverterNotFoundException.class));\n\t\tthis.binder.bind(\"example\", Bindable.of(Example.class), new IgnoreTopLevelConverterNotFoundBindHandler());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/IgnoreTopLevelConverterNotFoundBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"NB"}],"commitId":"eab2d4a4047029a5a358bf42b5236772f149b9f6","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-05-02 22:13:31","modifiedFileCount":"2","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-10-02 02:18:16","codes":[{"authorDate":"2018-10-02 02:18:16","commitOrder":3,"curCode":"\tpublic void bindWhenExceptionNotIgnorableShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"1\");\n\t\tthis.sources.add(source);\n\t\tassertThatExceptionOfType(BindException.class)\n\t\t\t\t.isThrownBy(() -> this.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\t\t\tnew IgnoreTopLevelConverterNotFoundBindHandler()))\n\t\t\t\t.withCauseInstanceOf(IllegalStateException.class);\n\t}\n","date":"2018-10-03 01:55:28","endLine":76,"groupId":"11018","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bindWhenExceptionNotIgnorableShouldFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/97/582ca0c3cab6687857d567b08f379e4fb1461e.src","preCode":"\tpublic void bindWhenExceptionNotIgnorableShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"1\");\n\t\tthis.sources.add(source);\n\t\tthis.thrown.expectCause(instanceOf(IllegalStateException.class));\n\t\tthis.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\tnew IgnoreTopLevelConverterNotFoundBindHandler());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/IgnoreTopLevelConverterNotFoundBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2018-10-02 02:18:16","commitOrder":3,"curCode":"\tpublic void bindWhenExceptionInNestedContextShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.map\", \"hello\");\n\t\tthis.sources.add(source);\n\t\tassertThatExceptionOfType(BindException.class)\n\t\t\t\t.isThrownBy(() -> this.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\t\t\tnew IgnoreTopLevelConverterNotFoundBindHandler()))\n\t\t\t\t.withCauseInstanceOf(ConverterNotFoundException.class);\n\t}\n","date":"2018-10-03 01:55:28","endLine":87,"groupId":"11018","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bindWhenExceptionInNestedContextShouldFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/97/582ca0c3cab6687857d567b08f379e4fb1461e.src","preCode":"\tpublic void bindWhenExceptionInNestedContextShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.map\", \"hello\");\n\t\tthis.sources.add(source);\n\t\tthis.thrown.expect(BindException.class);\n\t\tthis.thrown.expectCause(instanceOf(ConverterNotFoundException.class));\n\t\tthis.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\tnew IgnoreTopLevelConverterNotFoundBindHandler());\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/IgnoreTopLevelConverterNotFoundBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"d76bba5e6f5c702c8bf2aa86fee19ec7de8ed3cb","commitMessage":"@@@Migrate from ExpectedException rule to AssertJ\n\nReplace ExpectedException JUnit rules with AssertJ exception\nassertions.\n\nCloses gh-14336\n","date":"2018-10-03 01:55:28","modifiedFileCount":"271","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid bindWhenExceptionNotIgnorableShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"1\");\n\t\tthis.sources.add(source);\n\t\tassertThatExceptionOfType(BindException.class)\n\t\t\t\t.isThrownBy(() -> this.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\t\t\tnew IgnoreTopLevelConverterNotFoundBindHandler()))\n\t\t\t\t.withCauseInstanceOf(IllegalStateException.class);\n\t}\n","date":"2019-06-07 19:25:54","endLine":75,"groupId":"101422","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"bindWhenExceptionNotIgnorableShouldFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/c50763b960542e33582d860e0fb7e13dc9a420.src","preCode":"\tpublic void bindWhenExceptionNotIgnorableShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.foo\", \"1\");\n\t\tthis.sources.add(source);\n\t\tassertThatExceptionOfType(BindException.class)\n\t\t\t\t.isThrownBy(() -> this.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\t\t\tnew IgnoreTopLevelConverterNotFoundBindHandler()))\n\t\t\t\t.withCauseInstanceOf(IllegalStateException.class);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/IgnoreTopLevelConverterNotFoundBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid bindWhenExceptionInNestedContextShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.map\", \"hello\");\n\t\tthis.sources.add(source);\n\t\tassertThatExceptionOfType(BindException.class)\n\t\t\t\t.isThrownBy(() -> this.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\t\t\tnew IgnoreTopLevelConverterNotFoundBindHandler()))\n\t\t\t\t.withCauseInstanceOf(ConverterNotFoundException.class);\n\t}\n","date":"2019-06-07 19:25:54","endLine":86,"groupId":"101422","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"bindWhenExceptionInNestedContextShouldFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/ac/c50763b960542e33582d860e0fb7e13dc9a420.src","preCode":"\tpublic void bindWhenExceptionInNestedContextShouldFail() {\n\t\tMockConfigurationPropertySource source = new MockConfigurationPropertySource();\n\t\tsource.put(\"example.map\", \"hello\");\n\t\tthis.sources.add(source);\n\t\tassertThatExceptionOfType(BindException.class)\n\t\t\t\t.isThrownBy(() -> this.binder.bind(\"example\", Bindable.of(Example.class),\n\t\t\t\t\t\tnew IgnoreTopLevelConverterNotFoundBindHandler()))\n\t\t\t\t.withCauseInstanceOf(ConverterNotFoundException.class);\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/handler/IgnoreTopLevelConverterNotFoundBindHandlerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
