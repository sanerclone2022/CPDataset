[{"authorTime":"2018-04-13 22:29:44","codes":[{"authorDate":"2018-04-13 22:29:44","commitOrder":1,"curCode":"\tpublic void invokeWhenOperationFailedShouldTranslateException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new FatalBeanException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, endpoint);\n\t\tthis.thrown.expect(MBeanException.class);\n\t\tthis.thrown.expectCause(instanceOf(IllegalStateException.class));\n\t\tthis.thrown.expectMessage(\"test failure\");\n\t\tbean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE);\n\t}\n","date":"2018-04-13 22:29:44","endLine":101,"groupId":"4871","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeWhenOperationFailedShouldTranslateException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4c/0cd5d32aeebeefb33b7d115225e5d12dd09073.src","preCode":"\tpublic void invokeWhenOperationFailedShouldTranslateException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new FatalBeanException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, endpoint);\n\t\tthis.thrown.expect(MBeanException.class);\n\t\tthis.thrown.expectCause(instanceOf(IllegalStateException.class));\n\t\tthis.thrown.expectMessage(\"test failure\");\n\t\tbean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"},{"authorDate":"2018-04-13 22:29:44","commitOrder":1,"curCode":"\tpublic void invokeWhenOperationFailedWithJdkExceptionShouldReuseException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new UnsupportedOperationException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, endpoint);\n\t\tthis.thrown.expect(MBeanException.class);\n\t\tthis.thrown.expectCause(instanceOf(UnsupportedOperationException.class));\n\t\tthis.thrown.expectMessage(\"test failure\");\n\t\tbean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE);\n\t}\n","date":"2018-04-13 22:29:44","endLine":115,"groupId":"4871","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeWhenOperationFailedWithJdkExceptionShouldReuseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4c/0cd5d32aeebeefb33b7d115225e5d12dd09073.src","preCode":"\tpublic void invokeWhenOperationFailedWithJdkExceptionShouldReuseException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new UnsupportedOperationException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, endpoint);\n\t\tthis.thrown.expect(MBeanException.class);\n\t\tthis.thrown.expectCause(instanceOf(UnsupportedOperationException.class));\n\t\tthis.thrown.expectMessage(\"test failure\");\n\t\tbean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"}],"commitId":"d0b2b9b1a5ccdb9d99ecf032a24582d5c4bc089d","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-04-13 22:29:44","modifiedFileCount":"2","status":"B","submitter":"Stephane Nicoll"},{"authorTime":"2018-05-14 23:42:15","codes":[{"authorDate":"2018-05-14 23:42:15","commitOrder":2,"curCode":"\tpublic void invokeWhenOperationFailedShouldTranslateException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new FatalBeanException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tthis.thrown.expect(MBeanException.class);\n\t\tthis.thrown.expectCause(instanceOf(IllegalStateException.class));\n\t\tthis.thrown.expectMessage(\"test failure\");\n\t\tbean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE);\n\t}\n","date":"2018-05-14 23:42:15","endLine":107,"groupId":"417","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeWhenOperationFailedShouldTranslateException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/68/13552892a678749857b4910e330810531eca74.src","preCode":"\tpublic void invokeWhenOperationFailedShouldTranslateException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new FatalBeanException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, endpoint);\n\t\tthis.thrown.expect(MBeanException.class);\n\t\tthis.thrown.expectCause(instanceOf(IllegalStateException.class));\n\t\tthis.thrown.expectMessage(\"test failure\");\n\t\tbean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2018-05-14 23:42:15","commitOrder":2,"curCode":"\tpublic void invokeWhenOperationFailedWithJdkExceptionShouldReuseException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new UnsupportedOperationException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tthis.thrown.expect(MBeanException.class);\n\t\tthis.thrown.expectCause(instanceOf(UnsupportedOperationException.class));\n\t\tthis.thrown.expectMessage(\"test failure\");\n\t\tbean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE);\n\t}\n","date":"2018-05-14 23:42:15","endLine":121,"groupId":"417","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeWhenOperationFailedWithJdkExceptionShouldReuseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/68/13552892a678749857b4910e330810531eca74.src","preCode":"\tpublic void invokeWhenOperationFailedWithJdkExceptionShouldReuseException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new UnsupportedOperationException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, endpoint);\n\t\tthis.thrown.expect(MBeanException.class);\n\t\tthis.thrown.expectCause(instanceOf(UnsupportedOperationException.class));\n\t\tthis.thrown.expectMessage(\"test failure\");\n\t\tbean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"24024b00da2611458d12f7cee220aa10c01dd2fc","commitMessage":"@@@Merge branch '2.0.x'\n","date":"2018-05-14 23:42:15","modifiedFileCount":"3","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2018-10-02 02:18:16","codes":[{"authorDate":"2018-10-02 02:18:16","commitOrder":3,"curCode":"\tpublic void invokeWhenOperationFailedShouldTranslateException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new FatalBeanException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tassertThatExceptionOfType(MBeanException.class)\n\t\t\t\t.isThrownBy(() -> bean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE))\n\t\t\t\t.withCauseInstanceOf(IllegalStateException.class)\n\t\t\t\t.withMessageContaining(\"test failure\");\n\n\t}\n","date":"2018-10-03 01:55:28","endLine":105,"groupId":"16295","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeWhenOperationFailedShouldTranslateException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f6/66a78a405a2a939718c665214a2bc85a9d0892.src","preCode":"\tpublic void invokeWhenOperationFailedShouldTranslateException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new FatalBeanException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tthis.thrown.expect(MBeanException.class);\n\t\tthis.thrown.expectCause(instanceOf(IllegalStateException.class));\n\t\tthis.thrown.expectMessage(\"test failure\");\n\t\tbean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2018-10-02 02:18:16","commitOrder":3,"curCode":"\tpublic void invokeWhenOperationFailedWithJdkExceptionShouldReuseException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new UnsupportedOperationException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tassertThatExceptionOfType(MBeanException.class)\n\t\t\t\t.isThrownBy(() -> bean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE))\n\t\t\t\t.withCauseInstanceOf(UnsupportedOperationException.class)\n\t\t\t\t.withMessageContaining(\"test failure\");\n\t}\n","date":"2018-10-03 01:55:28","endLine":119,"groupId":"16295","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeWhenOperationFailedWithJdkExceptionShouldReuseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f6/66a78a405a2a939718c665214a2bc85a9d0892.src","preCode":"\tpublic void invokeWhenOperationFailedWithJdkExceptionShouldReuseException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(\n\t\t\t\tnew TestJmxOperation((arguments) -> {\n\t\t\t\t\tthrow new UnsupportedOperationException(\"test failure\");\n\t\t\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tthis.thrown.expect(MBeanException.class);\n\t\tthis.thrown.expectCause(instanceOf(UnsupportedOperationException.class));\n\t\tthis.thrown.expectMessage(\"test failure\");\n\t\tbean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE);\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"d76bba5e6f5c702c8bf2aa86fee19ec7de8ed3cb","commitMessage":"@@@Migrate from ExpectedException rule to AssertJ\n\nReplace ExpectedException JUnit rules with AssertJ exception\nassertions.\n\nCloses gh-14336\n","date":"2018-10-03 01:55:28","modifiedFileCount":"271","status":"M","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid invokeWhenOperationFailedShouldTranslateException() throws MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(new TestJmxOperation((arguments) -> {\n\t\t\tthrow new FatalBeanException(\"test failure\");\n\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tassertThatExceptionOfType(MBeanException.class)\n\t\t\t\t.isThrownBy(() -> bean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE))\n\t\t\t\t.withCauseInstanceOf(IllegalStateException.class).withMessageContaining(\"test failure\");\n\n\t}\n","date":"2019-06-07 19:25:54","endLine":99,"groupId":"16295","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"invokeWhenOperationFailedShouldTranslateException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fa/32a928a7fd5a614dcf0b7aefa46716b714d04d.src","preCode":"\tpublic void invokeWhenOperationFailedShouldTranslateException() throws MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(new TestJmxOperation((arguments) -> {\n\t\t\tthrow new FatalBeanException(\"test failure\");\n\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tassertThatExceptionOfType(MBeanException.class)\n\t\t\t\t.isThrownBy(() -> bean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE))\n\t\t\t\t.withCauseInstanceOf(IllegalStateException.class).withMessageContaining(\"test failure\");\n\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid invokeWhenOperationFailedWithJdkExceptionShouldReuseException() throws MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(new TestJmxOperation((arguments) -> {\n\t\t\tthrow new UnsupportedOperationException(\"test failure\");\n\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tassertThatExceptionOfType(MBeanException.class)\n\t\t\t\t.isThrownBy(() -> bean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE))\n\t\t\t\t.withCauseInstanceOf(UnsupportedOperationException.class).withMessageContaining(\"test failure\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":110,"groupId":"16295","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"invokeWhenOperationFailedWithJdkExceptionShouldReuseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/fa/32a928a7fd5a614dcf0b7aefa46716b714d04d.src","preCode":"\tpublic void invokeWhenOperationFailedWithJdkExceptionShouldReuseException()\n\t\t\tthrows MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(new TestJmxOperation((arguments) -> {\n\t\t\tthrow new UnsupportedOperationException(\"test failure\");\n\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tassertThatExceptionOfType(MBeanException.class)\n\t\t\t\t.isThrownBy(() -> bean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE))\n\t\t\t\t.withCauseInstanceOf(UnsupportedOperationException.class).withMessageContaining(\"test failure\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-05-17 16:15:00","codes":[{"authorDate":"2021-05-17 16:15:00","commitOrder":5,"curCode":"\tvoid invokeWhenOperationFailedShouldTranslateException() {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(new TestJmxOperation((arguments) -> {\n\t\t\tthrow new FatalBeanException(\"test failure\");\n\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tassertThatExceptionOfType(MBeanException.class)\n\t\t\t\t.isThrownBy(() -> bean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE))\n\t\t\t\t.withCauseInstanceOf(IllegalStateException.class).withMessageContaining(\"test failure\");\n\n\t}\n","date":"2021-05-17 16:15:00","endLine":98,"groupId":"10472","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"invokeWhenOperationFailedShouldTranslateException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/21/f7f7ce841b1d25c016c04576048dd4dd26f8e8.src","preCode":"\tvoid invokeWhenOperationFailedShouldTranslateException() throws MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(new TestJmxOperation((arguments) -> {\n\t\t\tthrow new FatalBeanException(\"test failure\");\n\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tassertThatExceptionOfType(MBeanException.class)\n\t\t\t\t.isThrownBy(() -> bean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE))\n\t\t\t\t.withCauseInstanceOf(IllegalStateException.class).withMessageContaining(\"test failure\");\n\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-05-17 16:15:00","commitOrder":5,"curCode":"\tvoid invokeWhenOperationFailedWithJdkExceptionShouldReuseException() {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(new TestJmxOperation((arguments) -> {\n\t\t\tthrow new UnsupportedOperationException(\"test failure\");\n\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tassertThatExceptionOfType(MBeanException.class)\n\t\t\t\t.isThrownBy(() -> bean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE))\n\t\t\t\t.withCauseInstanceOf(UnsupportedOperationException.class).withMessageContaining(\"test failure\");\n\t}\n","date":"2021-05-17 16:15:00","endLine":109,"groupId":"10472","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"invokeWhenOperationFailedWithJdkExceptionShouldReuseException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/21/f7f7ce841b1d25c016c04576048dd4dd26f8e8.src","preCode":"\tvoid invokeWhenOperationFailedWithJdkExceptionShouldReuseException() throws MBeanException, ReflectionException {\n\t\tTestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(new TestJmxOperation((arguments) -> {\n\t\t\tthrow new UnsupportedOperationException(\"test failure\");\n\t\t}));\n\t\tEndpointMBean bean = new EndpointMBean(this.responseMapper, null, endpoint);\n\t\tassertThatExceptionOfType(MBeanException.class)\n\t\t\t\t.isThrownBy(() -> bean.invoke(\"testOperation\", NO_PARAMS, NO_SIGNATURE))\n\t\t\t\t.withCauseInstanceOf(UnsupportedOperationException.class).withMessageContaining(\"test failure\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"21a3f03d20a24934e38a26843872778598da7ad3","commitMessage":"@@@Merge pull request #26441 from weixsun\n\n* pr/26441:\n  Polish \"Remove unnecessary throws declaration in tests\"\n  Remove unnecessary throws declaration in tests\n\nCloses gh-26441\n","date":"2021-05-17 16:15:00","modifiedFileCount":"172","status":"M","submitter":"Stephane Nicoll"}]
