[{"authorTime":"2018-01-10 12:57:10","codes":[{"authorDate":"2018-01-10 12:57:10","commitOrder":1,"curCode":"\tpublic void afterPropertiesSetShouldRegisterMBeans() throws Exception {\n\t\tthis.endpoints.add(new TestExposableJmxEndpoint(new TestJmxOperation()));\n\t\tthis.exporter.afterPropertiesSet();\n\t\tverify(this.mBeanServer).registerMBean(this.objectCaptor.capture(),\n\t\t\t\tthis.objectNameCaptor.capture());\n\t\tassertThat(this.objectCaptor.getValue()).isInstanceOf(EndpointMBean.class);\n\t\tassertThat(this.objectNameCaptor.getValue().getKeyProperty(\"name\"))\n\t\t\t\t.isEqualTo(\"test\");\n\t}\n","date":"2018-01-20 12:44:24","endLine":124,"groupId":"12362","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"afterPropertiesSetShouldRegisterMBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/29/d9af6ca329f46d38f570777eb0b121b11b0354.src","preCode":"\tpublic void afterPropertiesSetShouldRegisterMBeans() throws Exception {\n\t\tthis.endpoints.add(new TestExposableJmxEndpoint(new TestJmxOperation()));\n\t\tthis.exporter.afterPropertiesSet();\n\t\tverify(this.mBeanServer).registerMBean(this.objectCaptor.capture(),\n\t\t\t\tthis.objectNameCaptor.capture());\n\t\tassertThat(this.objectCaptor.getValue()).isInstanceOf(EndpointMBean.class);\n\t\tassertThat(this.objectNameCaptor.getValue().getKeyProperty(\"name\"))\n\t\t\t\t.isEqualTo(\"test\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/JmxEndpointExporterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"},{"authorDate":"2018-01-10 12:57:10","commitOrder":1,"curCode":"\tpublic void destroyShouldUnregisterMBeans() throws Exception {\n\t\tthis.endpoints.add(new TestExposableJmxEndpoint(new TestJmxOperation()));\n\t\tthis.exporter.afterPropertiesSet();\n\t\tthis.exporter.destroy();\n\t\tverify(this.mBeanServer).unregisterMBean(this.objectNameCaptor.capture());\n\t\tassertThat(this.objectNameCaptor.getValue().getKeyProperty(\"name\"))\n\t\t\t\t.isEqualTo(\"test\");\n\t}\n","date":"2018-01-20 12:44:24","endLine":161,"groupId":"12362","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"destroyShouldUnregisterMBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/29/d9af6ca329f46d38f570777eb0b121b11b0354.src","preCode":"\tpublic void destroyShouldUnregisterMBeans() throws Exception {\n\t\tthis.endpoints.add(new TestExposableJmxEndpoint(new TestJmxOperation()));\n\t\tthis.exporter.afterPropertiesSet();\n\t\tthis.exporter.destroy();\n\t\tverify(this.mBeanServer).unregisterMBean(this.objectNameCaptor.capture());\n\t\tassertThat(this.objectNameCaptor.getValue().getKeyProperty(\"name\"))\n\t\t\t\t.isEqualTo(\"test\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/JmxEndpointExporterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"}],"commitId":"1d39feffeabf4b94e3f900b941b58e0443d5887a","commitMessage":"@@@Overhaul actuator endpoint code\n\nRefactor several areas of the actuator endpoint code in order to make\nfuture extensions easier. The primary goal is to introduce the concept\nof an `ExposableEndpoint` that has technology specific subclasses and\ncan carry additional data for filters to use. Many other changes have\nbeen made along the way including:\n\n* A new EndpointSupplier interface that allows cleaner separation of\n  supplying vs discovering endpoints. This allows cleaner class names\n  and allows for better auto-configuration since a user can choose to\n  provide their own supplier entirely.\n\n* A `DiscoveredEndpoint` interface that allows the `EndpointFilter`\n  to be greatly simplified. A filter now doesn't need to know about\n  discovery concerns unless absolutely necessary.\n\n* Improved naming and package structure. Many technology specific\n  concerns are now grouped in a better way. Related concerns are\n  co-located and concepts from one area no longer leakage into another.\n\n* Simplified `HandlerMapping` implementations. Many common concerns have\n  been pulled up helping to create simpler subclasses.\n\n* Simplified JMX adapters. Many of the intermediary `Info` classes have\n  been removed. The `DiscoveredJmxOperation` is now responsible for\n  mapping methods to operations.\n\n* A specific @`HealthEndpointCloudFoundryExtension` for Cloud Foundry.\n  The extension logic used to create a \"full\" health endpoint extension\n  has been made explicit.\n\nFixes gh-11428\nFixes gh-11581\n","date":"2018-01-20 12:44:24","modifiedFileCount":"63","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid afterPropertiesSetShouldRegisterMBeans() throws Exception {\n\t\tthis.endpoints.add(new TestExposableJmxEndpoint(new TestJmxOperation()));\n\t\tthis.exporter.afterPropertiesSet();\n\t\tverify(this.mBeanServer).registerMBean(this.objectCaptor.capture(), this.objectNameCaptor.capture());\n\t\tassertThat(this.objectCaptor.getValue()).isInstanceOf(EndpointMBean.class);\n\t\tassertThat(this.objectNameCaptor.getValue().getKeyProperty(\"name\")).isEqualTo(\"test\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":116,"groupId":"10471","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"afterPropertiesSetShouldRegisterMBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cd/5643ffa1cd8fcbb54f101c736d8c02fc686762.src","preCode":"\tpublic void afterPropertiesSetShouldRegisterMBeans() throws Exception {\n\t\tthis.endpoints.add(new TestExposableJmxEndpoint(new TestJmxOperation()));\n\t\tthis.exporter.afterPropertiesSet();\n\t\tverify(this.mBeanServer).registerMBean(this.objectCaptor.capture(), this.objectNameCaptor.capture());\n\t\tassertThat(this.objectCaptor.getValue()).isInstanceOf(EndpointMBean.class);\n\t\tassertThat(this.objectNameCaptor.getValue().getKeyProperty(\"name\")).isEqualTo(\"test\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/JmxEndpointExporterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid destroyShouldUnregisterMBeans() throws Exception {\n\t\tthis.endpoints.add(new TestExposableJmxEndpoint(new TestJmxOperation()));\n\t\tthis.exporter.afterPropertiesSet();\n\t\tthis.exporter.destroy();\n\t\tverify(this.mBeanServer).unregisterMBean(this.objectNameCaptor.capture());\n\t\tassertThat(this.objectNameCaptor.getValue().getKeyProperty(\"name\")).isEqualTo(\"test\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":150,"groupId":"10471","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"destroyShouldUnregisterMBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cd/5643ffa1cd8fcbb54f101c736d8c02fc686762.src","preCode":"\tpublic void destroyShouldUnregisterMBeans() throws Exception {\n\t\tthis.endpoints.add(new TestExposableJmxEndpoint(new TestJmxOperation()));\n\t\tthis.exporter.afterPropertiesSet();\n\t\tthis.exporter.destroy();\n\t\tverify(this.mBeanServer).unregisterMBean(this.objectNameCaptor.capture());\n\t\tassertThat(this.objectNameCaptor.getValue().getKeyProperty(\"name\")).isEqualTo(\"test\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/JmxEndpointExporterTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
