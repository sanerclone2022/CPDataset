[{"authorTime":"2021-07-13 21:01:23","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":6,"curCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","date":"2019-06-07 19:25:54","endLine":71,"groupId":"5514","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/90/909ea787ba051710a3503ac83821bdf20f4763.src","preCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"NB"},{"authorDate":"2021-07-13 21:01:23","commitOrder":6,"curCode":"\tvoid doesNotAutoConfigureSslHandshakeMetricsWhenSslEnabledPropertyNotSpecified() {\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(JettyMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(JettySslHandshakeMetricsBinder.class));\n\t}\n","date":"2021-07-13 21:01:23","endLine":204,"groupId":"16345","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doesNotAutoConfigureSslHandshakeMetricsWhenSslEnabledPropertyNotSpecified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6a/f671e9506f358a4561c9e5ddbee8bbf18a0e7d.src","preCode":"\tvoid doesNotAutoConfigureSslHandshakeMetricsWhenSslEnabledPropertyNotSpecified() {\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(JettyMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(JettySslHandshakeMetricsBinder.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/jetty/JettyMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"}],"commitId":"4f3fdaed812550107359400525077a77ca787d67","commitMessage":"@@@Merge pull request #26418 from bono007\n\n* gh-26418:\n  Polish \"Auto-configure Jetty connection and SSL metrics\"\n  Auto-configure Jetty connection and SSL metrics\n\nCloses gh-26418\n","date":"2021-07-13 21:01:23","modifiedFileCount":"3","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2021-07-13 21:01:23","codes":[{"authorDate":"2021-09-16 20:08:56","commitOrder":7,"curCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(createApplicationStartedEvent(context.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","date":"2021-09-16 20:08:57","endLine":71,"groupId":"10912","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"autoConfiguresTomcatMetricsWithEmbeddedServletTomcat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/e9/5cda900ab4d1b34c6f89a8f240b23097d0e463.src","preCode":"\tvoid autoConfiguresTomcatMetricsWithEmbeddedServletTomcat() {\n\t\tresetTomcatState();\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(TomcatMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.withPropertyValues(\"server.tomcat.mbeanregistry.enabled=true\").run((context) -> {\n\t\t\t\t\tcontext.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null,\n\t\t\t\t\t\t\tcontext.getSourceApplicationContext()));\n\t\t\t\t\tassertThat(context).hasSingleBean(TomcatMetricsBinder.class);\n\t\t\t\t\tSimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class);\n\t\t\t\t\tassertThat(registry.find(\"tomcat.sessions.active.max\").meter()).isNotNull();\n\t\t\t\t\tassertThat(registry.find(\"tomcat.threads.current\").meter()).isNotNull();\n\t\t\t\t});\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2021-07-13 21:01:23","commitOrder":7,"curCode":"\tvoid doesNotAutoConfigureSslHandshakeMetricsWhenSslEnabledPropertyNotSpecified() {\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(JettyMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(JettySslHandshakeMetricsBinder.class));\n\t}\n","date":"2021-07-13 21:01:23","endLine":204,"groupId":"10912","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doesNotAutoConfigureSslHandshakeMetricsWhenSslEnabledPropertyNotSpecified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6a/f671e9506f358a4561c9e5ddbee8bbf18a0e7d.src","preCode":"\tvoid doesNotAutoConfigureSslHandshakeMetricsWhenSslEnabledPropertyNotSpecified() {\n\t\tnew WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new)\n\t\t\t\t.withConfiguration(AutoConfigurations.of(JettyMetricsAutoConfiguration.class,\n\t\t\t\t\t\tServletWebServerFactoryAutoConfiguration.class))\n\t\t\t\t.withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class)\n\t\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(JettySslHandshakeMetricsBinder.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/jetty/JettyMetricsAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"N"}],"commitId":"ce95e093087d591626762089095705826b5adab8","commitMessage":"@@@Merge pull request #27878 from bono007\n\n* pr/27878:\n  Polish \"Add startup time metrics\"\n  Add startup time metrics\n\nCloses gh-27878\n","date":"2021-09-16 20:08:57","modifiedFileCount":"15","status":"M","submitter":"Stephane Nicoll"}]
