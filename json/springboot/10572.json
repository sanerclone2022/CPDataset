[{"authorTime":"2019-08-21 05:18:27","codes":[{"authorDate":"2019-08-21 05:18:27","commitOrder":1,"curCode":"\tprivate static String getUniformCode(String code) {\n\t\tif (code == null) {\n\t\t\treturn null;\n\t\t}\n\t\tStringBuilder builder = new StringBuilder();\n\t\tfor (char ch : code.toCharArray()) {\n\t\t\tif (Character.isAlphabetic(ch) || Character.isDigit(ch)) {\n\t\t\t\tbuilder.append(Character.toLowerCase(ch));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t}\n","date":"2019-08-22 09:43:25","endLine":94,"groupId":"7843","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getUniformCode","params":"(Stringcode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/6f/c5d82b6bd38fc94e9f87f0a88a8e8d63f35293.src","preCode":"\tprivate static String getUniformCode(String code) {\n\t\tif (code == null) {\n\t\t\treturn null;\n\t\t}\n\t\tStringBuilder builder = new StringBuilder();\n\t\tfor (char ch : code.toCharArray()) {\n\t\t\tif (Character.isAlphabetic(ch) || Character.isDigit(ch)) {\n\t\t\t\tbuilder.append(Character.toLowerCase(ch));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleStatusAggregator.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"},{"authorDate":"2019-08-21 05:18:27","commitOrder":1,"curCode":"\tprivate static String getUniformCode(String code) {\n\t\tif (code == null) {\n\t\t\treturn null;\n\t\t}\n\t\tStringBuilder builder = new StringBuilder();\n\t\tfor (char ch : code.toCharArray()) {\n\t\t\tif (Character.isAlphabetic(ch) || Character.isDigit(ch)) {\n\t\t\t\tbuilder.append(Character.toLowerCase(ch));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t}\n","date":"2019-08-22 09:43:25","endLine":90,"groupId":"7843","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getUniformCode","params":"(Stringcode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/0c/6616b8ab79a2b34e54021886d0e017d8d7fae2.src","preCode":"\tprivate static String getUniformCode(String code) {\n\t\tif (code == null) {\n\t\t\treturn null;\n\t\t}\n\t\tStringBuilder builder = new StringBuilder();\n\t\tfor (char ch : code.toCharArray()) {\n\t\t\tif (Character.isAlphabetic(ch) || Character.isDigit(ch)) {\n\t\t\t\tbuilder.append(Character.toLowerCase(ch));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHttpCodeStatusMapper.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"}],"commitId":"3c535e0de340a718d6cf0d863a6529b314a38f42","commitMessage":"@@@Add HealthContributor and refactor HealthEndpoint\n\nOverhaul `HealthEndpoint` support to make it easier to support health\ngroups. Prior to this commit the `HealthIndicator` interface was used\nfor both regular indicators and composite indicators. In addition the\n`Health` result was used to both represent individual.  system and\ncomposite health. This design unfortunately means that all health\ncontributors need to be aware of the `HealthAggregator` and could not\neasily support heath groups if per-group aggregation is required.\n\nThis commit reworks many aspects of the health support in order to\nprovide a cleaner separation between a `HealthIndicator`and a\ncomposite. The following changes have been made:\n\n- A `HealthContributor` interface has been introduced to represent\n  the general concept of something that contributes health information.\n  A contributor can either be a `HealthIndicator` or a\n  `CompositeHealthContributor`.\n\n- A `HealthComponent` class has been introduced to mirror the\n  contributor arrangement. The component can be either\n  `CompositeHealth` or `Health`.\n\n- The `HealthAggregator` interface has been replaced with a more\n  focused `StatusAggregator` interface which only deals with `Status`\n  results.\n\n- `CompositeHealthIndicator` has been replaced with\n  `CompositeHealthContributor` which only provides access to other\n  contributors. A composite can no longer directly return `Health`.\n\n- `HealthIndicatorRegistry` has been replaced with\n  `HealthContributorRegistry` and the default implementation now\n  uses a copy-on-write strategy.\n\n- `HealthEndpoint`.  `HealthEndpointWebExtension` and\n  `ReactiveHealthEndpointWebExtension` now extend a common\n  `HealthEndpointSupport` class. They are now driven by a\n  health contributor registry and `HealthEndpointSettings`.\n\n- The `HealthStatusHttpMapper` class has been replaced by a\n  `HttpCodeStatusMapper` interface.\n\n- The `HealthWebEndpointResponseMapper` class has been replaced\n  by a `HealthEndpointSettings` strategy. This allows us to move\n  role related logic and `ShowDetails` to the auto-configure module.\n\n- `SimpleHttpCodeStatusMapper` and `SimpleStatusAggregator`\n  implementations have been added which are configured via constructor\n  arguments rather than setters.\n\n- Endpoint auto-configuration has been reworked and the\n  `CompositeHealthIndicatorConfiguration` class has been replaced\n  by `CompositeHealthContributorConfiguration`.\n\n- The endpoint JSON has been changed make `details` distinct from\n  `components`.\n\nSee gh-17926\n","date":"2019-08-22 09:43:25","modifiedFileCount":"75","status":"B","submitter":"Phillip Webb"},{"authorTime":"2020-12-21 17:26:32","codes":[{"authorDate":"2020-12-21 17:26:32","commitOrder":2,"curCode":"\tprivate static String getUniformCode(String code) {\n\t\tif (code == null) {\n\t\t\treturn null;\n\t\t}\n\t\tStringBuilder builder = new StringBuilder();\n\t\tfor (int i = 0; i < code.length(); i++) {\n\t\t\tchar ch = code.charAt(i);\n\t\t\tif (Character.isAlphabetic(ch) || Character.isDigit(ch)) {\n\t\t\t\tbuilder.append(Character.toLowerCase(ch));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t}\n","date":"2020-12-21 17:26:33","endLine":99,"groupId":"10572","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getUniformCode","params":"(Stringcode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/4c/5b9efe79b45a2d03db3945babad2f18ba1e702.src","preCode":"\tprivate static String getUniformCode(String code) {\n\t\tif (code == null) {\n\t\t\treturn null;\n\t\t}\n\t\tStringBuilder builder = new StringBuilder();\n\t\tfor (char ch : code.toCharArray()) {\n\t\t\tif (Character.isAlphabetic(ch) || Character.isDigit(ch)) {\n\t\t\t\tbuilder.append(Character.toLowerCase(ch));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleStatusAggregator.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2020-12-21 17:26:32","commitOrder":2,"curCode":"\tprivate static String getUniformCode(String code) {\n\t\tif (code == null) {\n\t\t\treturn null;\n\t\t}\n\t\tStringBuilder builder = new StringBuilder();\n\t\tfor (int i = 0; i < code.length(); i++) {\n\t\t\tchar ch = code.charAt(i);\n\t\t\tif (Character.isAlphabetic(ch) || Character.isDigit(ch)) {\n\t\t\t\tbuilder.append(Character.toLowerCase(ch));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t}\n","date":"2020-12-21 17:26:33","endLine":91,"groupId":"10572","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getUniformCode","params":"(Stringcode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/9f/4f9321e615d5f1a903ad94eb12965b8c93ab9c.src","preCode":"\tprivate static String getUniformCode(String code) {\n\t\tif (code == null) {\n\t\t\treturn null;\n\t\t}\n\t\tStringBuilder builder = new StringBuilder();\n\t\tfor (char ch : code.toCharArray()) {\n\t\t\tif (Character.isAlphabetic(ch) || Character.isDigit(ch)) {\n\t\t\t\tbuilder.append(Character.toLowerCase(ch));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHttpCodeStatusMapper.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"bb78b6ab00cfc5463357573d06a539fc73d2144d","commitMessage":"@@@Merge pull request #24204 from mdeinum\n\n* pr/24204:\n  Polish \"Reduce the overhead of char[] creation\"\n  Reduce the overhead of char[] creation\n\nCloses gh-24204\n","date":"2020-12-21 17:26:33","modifiedFileCount":"4","status":"M","submitter":"Stephane Nicoll"}]
