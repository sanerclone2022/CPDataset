[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void gitPropertiesDefaultMode() {\n\t\tload(GitPropertiesConfiguration.class);\n\t\tMap<String, InfoContributor> beans = this.context\n\t\t\t\t.getBeansOfType(InfoContributor.class);\n\t\tassertThat(beans).containsKeys(\"gitInfoContributor\");\n\t\tMap<String, Object> content = invokeContributor(\n\t\t\t\tthis.context.getBean(\"gitInfoContributor\", InfoContributor.class));\n\t\tObject git = content.get(\"git\");\n\t\tassertThat(git).isInstanceOf(Map.class);\n\t\tMap<String, Object> gitInfo = (Map<String, Object>) git;\n\t\tassertThat(gitInfo).containsOnlyKeys(\"branch\", \"commit\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":94,"groupId":"6791","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"gitPropertiesDefaultMode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/466fe2a5e4da38f0e5c042f388cdfaf6e4e2ee.src","preCode":"\tpublic void gitPropertiesDefaultMode() {\n\t\tload(GitPropertiesConfiguration.class);\n\t\tMap<String, InfoContributor> beans = this.context\n\t\t\t\t.getBeansOfType(InfoContributor.class);\n\t\tassertThat(beans).containsKeys(\"gitInfoContributor\");\n\t\tMap<String, Object> content = invokeContributor(\n\t\t\t\tthis.context.getBean(\"gitInfoContributor\", InfoContributor.class));\n\t\tObject git = content.get(\"git\");\n\t\tassertThat(git).isInstanceOf(Map.class);\n\t\tMap<String, Object> gitInfo = (Map<String, Object>) git;\n\t\tassertThat(gitInfo).containsOnlyKeys(\"branch\", \"commit\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/info/InfoContributorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void gitPropertiesFullMode() {\n\t\tload(GitPropertiesConfiguration.class, \"management.info.git.mode=full\");\n\t\tMap<String, Object> content = invokeContributor(\n\t\t\t\tthis.context.getBean(\"gitInfoContributor\", InfoContributor.class));\n\t\tObject git = content.get(\"git\");\n\t\tassertThat(git).isInstanceOf(Map.class);\n\t\tMap<String, Object> gitInfo = (Map<String, Object>) git;\n\t\tassertThat(gitInfo).containsOnlyKeys(\"branch\", \"commit\", \"foo\");\n\t\tassertThat(gitInfo.get(\"foo\")).isEqualTo(\"bar\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":107,"groupId":"6791","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"gitPropertiesFullMode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/3a/466fe2a5e4da38f0e5c042f388cdfaf6e4e2ee.src","preCode":"\tpublic void gitPropertiesFullMode() {\n\t\tload(GitPropertiesConfiguration.class, \"management.info.git.mode=full\");\n\t\tMap<String, Object> content = invokeContributor(\n\t\t\t\tthis.context.getBean(\"gitInfoContributor\", InfoContributor.class));\n\t\tObject git = content.get(\"git\");\n\t\tassertThat(git).isInstanceOf(Map.class);\n\t\tMap<String, Object> gitInfo = (Map<String, Object>) git;\n\t\tassertThat(gitInfo).containsOnlyKeys(\"branch\", \"commit\", \"foo\");\n\t\tassertThat(gitInfo.get(\"foo\")).isEqualTo(\"bar\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/info/InfoContributorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid gitPropertiesDefaultMode() {\n\t\tload(GitPropertiesConfiguration.class);\n\t\tMap<String, InfoContributor> beans = this.context.getBeansOfType(InfoContributor.class);\n\t\tassertThat(beans).containsKeys(\"gitInfoContributor\");\n\t\tMap<String, Object> content = invokeContributor(\n\t\t\t\tthis.context.getBean(\"gitInfoContributor\", InfoContributor.class));\n\t\tObject git = content.get(\"git\");\n\t\tassertThat(git).isInstanceOf(Map.class);\n\t\tMap<String, Object> gitInfo = (Map<String, Object>) git;\n\t\tassertThat(gitInfo).containsOnlyKeys(\"branch\", \"commit\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":88,"groupId":"10809","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"gitPropertiesDefaultMode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f9/7cab9e7fcad03698bffa68b15aee530305013c.src","preCode":"\tpublic void gitPropertiesDefaultMode() {\n\t\tload(GitPropertiesConfiguration.class);\n\t\tMap<String, InfoContributor> beans = this.context.getBeansOfType(InfoContributor.class);\n\t\tassertThat(beans).containsKeys(\"gitInfoContributor\");\n\t\tMap<String, Object> content = invokeContributor(\n\t\t\t\tthis.context.getBean(\"gitInfoContributor\", InfoContributor.class));\n\t\tObject git = content.get(\"git\");\n\t\tassertThat(git).isInstanceOf(Map.class);\n\t\tMap<String, Object> gitInfo = (Map<String, Object>) git;\n\t\tassertThat(gitInfo).containsOnlyKeys(\"branch\", \"commit\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/info/InfoContributorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":2,"curCode":"\tvoid gitPropertiesFullMode() {\n\t\tload(GitPropertiesConfiguration.class, \"management.info.git.mode=full\");\n\t\tMap<String, Object> content = invokeContributor(\n\t\t\t\tthis.context.getBean(\"gitInfoContributor\", InfoContributor.class));\n\t\tObject git = content.get(\"git\");\n\t\tassertThat(git).isInstanceOf(Map.class);\n\t\tMap<String, Object> gitInfo = (Map<String, Object>) git;\n\t\tassertThat(gitInfo).containsOnlyKeys(\"branch\", \"commit\", \"foo\");\n\t\tassertThat(gitInfo.get(\"foo\")).isEqualTo(\"bar\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":101,"groupId":"10809","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"gitPropertiesFullMode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f9/7cab9e7fcad03698bffa68b15aee530305013c.src","preCode":"\tpublic void gitPropertiesFullMode() {\n\t\tload(GitPropertiesConfiguration.class, \"management.info.git.mode=full\");\n\t\tMap<String, Object> content = invokeContributor(\n\t\t\t\tthis.context.getBean(\"gitInfoContributor\", InfoContributor.class));\n\t\tObject git = content.get(\"git\");\n\t\tassertThat(git).isInstanceOf(Map.class);\n\t\tMap<String, Object> gitInfo = (Map<String, Object>) git;\n\t\tassertThat(gitInfo).containsOnlyKeys(\"branch\", \"commit\", \"foo\");\n\t\tassertThat(gitInfo.get(\"foo\")).isEqualTo(\"bar\");\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/info/InfoContributorAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
