[{"authorTime":"2020-04-15 07:40:56","codes":[{"authorDate":"2020-04-15 07:40:56","commitOrder":1,"curCode":"\tvoid probesWhenKubernetesAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.main.cloud-platform=kubernetes\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","date":"2020-04-15 07:40:56","endLine":55,"groupId":"14648","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"probesWhenKubernetesAddsBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/79/58919964a0d454b43170f59078b1510907f8a7.src","preCode":"\tvoid probesWhenKubernetesAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.main.cloud-platform=kubernetes\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"},{"authorDate":"2020-04-15 07:40:56","commitOrder":1,"curCode":"\tvoid probesWhenPropertyEnabledAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"management.health.probes.enabled=true\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","date":"2020-04-15 07:40:56","endLine":64,"groupId":"14648","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"probesWhenPropertyEnabledAddsBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/79/58919964a0d454b43170f59078b1510907f8a7.src","preCode":"\tvoid probesWhenPropertyEnabledAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"management.health.probes.enabled=true\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"}],"commitId":"24ee9737c0c4d05d90cb4957a7698aee2724c679","commitMessage":"@@@Rework some aspects of the probes support\n\nCloses gh-20962\n","date":"2020-04-15 07:40:56","modifiedFileCount":"15","status":"B","submitter":"Phillip Webb"},{"authorTime":"2020-07-21 22:24:37","codes":[{"authorDate":"2020-04-15 07:40:56","commitOrder":2,"curCode":"\tvoid probesWhenKubernetesAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.main.cloud-platform=kubernetes\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","date":"2020-04-15 07:40:56","endLine":55,"groupId":"14648","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"probesWhenKubernetesAddsBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/79/58919964a0d454b43170f59078b1510907f8a7.src","preCode":"\tvoid probesWhenKubernetesAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.main.cloud-platform=kubernetes\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2020-07-21 22:24:37","commitOrder":2,"curCode":"\tvoid probesWhenPropertyEnabledAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoint.health.probes.enabled=true\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","date":"2020-07-21 22:24:37","endLine":65,"groupId":"14648","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"probesWhenPropertyEnabledAddsBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/f4/4b8389d3a44d4bd8db2ae9b67bc0b9e1c75792.src","preCode":"\tvoid probesWhenPropertyEnabledAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"management.health.probes.enabled=true\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"1d95e2f504e20deda048adc631127b0cd88a1c62","commitMessage":"@@@Merge branch '2.3.x'\n\nCloses gh-22483\n","date":"2020-07-21 22:24:37","modifiedFileCount":"2","status":"M","submitter":"Brian Clozel"},{"authorTime":"2020-08-02 03:11:28","codes":[{"authorDate":"2020-08-02 03:11:28","commitOrder":3,"curCode":"\tvoid probesWhenKubernetesAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.main.cloud-platform=kubernetes\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class).hasBean(\"livenessStateHealthIndicator\")\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class).hasBean(\"readinessStateHealthIndicator\")\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","date":"2020-08-02 03:11:28","endLine":56,"groupId":"10812","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"probesWhenKubernetesAddsBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7e/422cc57959db7b9526ae1bf95dfddcfa6183ef.src","preCode":"\tvoid probesWhenKubernetesAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"spring.main.cloud-platform=kubernetes\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2020-08-02 03:11:28","commitOrder":3,"curCode":"\tvoid probesWhenPropertyEnabledAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoint.health.probes.enabled=true\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class).hasBean(\"livenessStateHealthIndicator\")\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class).hasBean(\"readinessStateHealthIndicator\")\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","date":"2020-08-02 03:11:28","endLine":65,"groupId":"10812","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"probesWhenPropertyEnabledAddsBeans","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7e/422cc57959db7b9526ae1bf95dfddcfa6183ef.src","preCode":"\tvoid probesWhenPropertyEnabledAddsBeans() {\n\t\tthis.contextRunner.withPropertyValues(\"management.endpoint.health.probes.enabled=true\")\n\t\t\t\t.run((context) -> assertThat(context).hasSingleBean(ApplicationAvailability.class)\n\t\t\t\t\t\t.hasSingleBean(LivenessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(ReadinessStateHealthIndicator.class)\n\t\t\t\t\t\t.hasSingleBean(AvailabilityProbesHealthEndpointGroupsPostProcessor.class));\n\t}\n","realPath":"spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfigurationTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"6efff7b5854aede81f43129ab3f93582c4052397","commitMessage":"@@@Merge branch '2.3.x'\n\nCloses gh-22698\n","date":"2020-08-02 03:11:28","modifiedFileCount":"3","status":"M","submitter":"Brian Clozel"}]
