[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void orderedInitialize() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"context.listener.classes=\" + MockInitB.class.getName() + \",\"\n\t\t\t\t\t\t+ MockInitA.class.getName());\n\t\tthis.listener.onApplicationEvent(new ApplicationEnvironmentPreparedEvent(\n\t\t\t\tnew SpringApplication(), new String[0], this.context.getEnvironment()));\n\t\tthis.context.getBeanFactory().registerSingleton(\"testListener\", this.listener);\n\t\tthis.context.refresh();\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":63,"groupId":"14889","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"orderedInitialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/49/501b35f88719dbca999151c1d8f4ed62e59ea9.src","preCode":"\tpublic void orderedInitialize() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"context.listener.classes=\" + MockInitB.class.getName() + \",\"\n\t\t\t\t\t\t+ MockInitA.class.getName());\n\t\tthis.listener.onApplicationEvent(new ApplicationEnvironmentPreparedEvent(\n\t\t\t\tnew SpringApplication(), new String[0], this.context.getEnvironment()));\n\t\tthis.context.getBeanFactory().registerSingleton(\"testListener\", this.listener);\n\t\tthis.context.refresh();\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/DelegatingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void orderedInitialize() throws Exception {\n\t\tStaticApplicationContext context = new StaticApplicationContext();\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(context,\n\t\t\t\t\"context.initializer.classes=\" + MockInitB.class.getName() + \",\"\n\t\t\t\t\t\t+ MockInitA.class.getName());\n\t\tthis.initializer.initialize(context);\n\t\tassertThat(context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":55,"groupId":"9440","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"orderedInitialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/b5/f39d989e1c4126ec40167d5b238685aa6667bc.src","preCode":"\tpublic void orderedInitialize() throws Exception {\n\t\tStaticApplicationContext context = new StaticApplicationContext();\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(context,\n\t\t\t\t\"context.initializer.classes=\" + MockInitB.class.getName() + \",\"\n\t\t\t\t\t\t+ MockInitA.class.getName());\n\t\tthis.initializer.initialize(context);\n\t\tassertThat(context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/DelegatingApplicationContextInitializerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void orderedInitialize() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"context.listener.classes=\" + MockInitB.class.getName() + \",\"\n\t\t\t\t\t\t+ MockInitA.class.getName());\n\t\tthis.listener.onApplicationEvent(new ApplicationEnvironmentPreparedEvent(\n\t\t\t\tnew SpringApplication(), new String[0], this.context.getEnvironment()));\n\t\tthis.context.getBeanFactory().registerSingleton(\"testListener\", this.listener);\n\t\tthis.context.refresh();\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":63,"groupId":"14889","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"orderedInitialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/13/1500159dca004119a9ad8958010684e0f1d9e8.src","preCode":"\tpublic void orderedInitialize() throws Exception {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"context.listener.classes=\" + MockInitB.class.getName() + \",\"\n\t\t\t\t\t\t+ MockInitA.class.getName());\n\t\tthis.listener.onApplicationEvent(new ApplicationEnvironmentPreparedEvent(\n\t\t\t\tnew SpringApplication(), new String[0], this.context.getEnvironment()));\n\t\tthis.context.getBeanFactory().registerSingleton(\"testListener\", this.listener);\n\t\tthis.context.refresh();\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/DelegatingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void orderedInitialize() {\n\t\tStaticApplicationContext context = new StaticApplicationContext();\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(context,\n\t\t\t\t\"context.initializer.classes=\" + MockInitB.class.getName() + \",\"\n\t\t\t\t\t\t+ MockInitA.class.getName());\n\t\tthis.initializer.initialize(context);\n\t\tassertThat(context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":55,"groupId":"9440","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"orderedInitialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/77/cde1d0f210f9f7150a5b9765822ada436394ee.src","preCode":"\tpublic void orderedInitialize() throws Exception {\n\t\tStaticApplicationContext context = new StaticApplicationContext();\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(context,\n\t\t\t\t\"context.initializer.classes=\" + MockInitB.class.getName() + \",\"\n\t\t\t\t\t\t+ MockInitA.class.getName());\n\t\tthis.initializer.initialize(context);\n\t\tassertThat(context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/DelegatingApplicationContextInitializerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid orderedInitialize() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"context.listener.classes=\" + MockInitB.class.getName() + \",\" + MockInitA.class.getName());\n\t\tthis.listener.onApplicationEvent(new ApplicationEnvironmentPreparedEvent(new SpringApplication(), new String[0],\n\t\t\t\tthis.context.getEnvironment()));\n\t\tthis.context.getBeanFactory().registerSingleton(\"testListener\", this.listener);\n\t\tthis.context.refresh();\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":62,"groupId":"14889","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"orderedInitialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/58/cc81bad1b7a156b64fb0e438da12d3fefde192.src","preCode":"\tpublic void orderedInitialize() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"context.listener.classes=\" + MockInitB.class.getName() + \",\" + MockInitA.class.getName());\n\t\tthis.listener.onApplicationEvent(new ApplicationEnvironmentPreparedEvent(new SpringApplication(), new String[0],\n\t\t\t\tthis.context.getEnvironment()));\n\t\tthis.context.getBeanFactory().registerSingleton(\"testListener\", this.listener);\n\t\tthis.context.refresh();\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/DelegatingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":3,"curCode":"\tvoid orderedInitialize() {\n\t\tStaticApplicationContext context = new StaticApplicationContext();\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(context,\n\t\t\t\t\"context.initializer.classes=\" + MockInitB.class.getName() + \",\" + MockInitA.class.getName());\n\t\tthis.initializer.initialize(context);\n\t\tassertThat(context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":51,"groupId":"9440","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"orderedInitialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a1/8eb41c6824870c7bdf60a15c4d45fd37ef317a.src","preCode":"\tpublic void orderedInitialize() {\n\t\tStaticApplicationContext context = new StaticApplicationContext();\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(context,\n\t\t\t\t\"context.initializer.classes=\" + MockInitB.class.getName() + \",\" + MockInitA.class.getName());\n\t\tthis.initializer.initialize(context);\n\t\tassertThat(context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/DelegatingApplicationContextInitializerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2020-09-17 15:09:41","commitOrder":4,"curCode":"\tvoid orderedInitialize() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"context.listener.classes=\" + MockInitB.class.getName() + \",\" + MockInitA.class.getName());\n\t\tthis.listener.onApplicationEvent(new ApplicationEnvironmentPreparedEvent(new DefaultBootstrapContext(),\n\t\t\t\tnew SpringApplication(), new String[0], this.context.getEnvironment()));\n\t\tthis.context.getBeanFactory().registerSingleton(\"testListener\", this.listener);\n\t\tthis.context.refresh();\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2020-09-17 15:31:00","endLine":63,"groupId":"101691","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"orderedInitialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/61/cf3b45e074dc373c0504887f77b215a9db552f.src","preCode":"\tvoid orderedInitialize() {\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\n\t\t\t\t\"context.listener.classes=\" + MockInitB.class.getName() + \",\" + MockInitA.class.getName());\n\t\tthis.listener.onApplicationEvent(new ApplicationEnvironmentPreparedEvent(new SpringApplication(), new String[0],\n\t\t\t\tthis.context.getEnvironment()));\n\t\tthis.context.getBeanFactory().registerSingleton(\"testListener\", this.listener);\n\t\tthis.context.refresh();\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(this.context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/DelegatingApplicationListenerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid orderedInitialize() {\n\t\tStaticApplicationContext context = new StaticApplicationContext();\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(context,\n\t\t\t\t\"context.initializer.classes=\" + MockInitB.class.getName() + \",\" + MockInitA.class.getName());\n\t\tthis.initializer.initialize(context);\n\t\tassertThat(context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":51,"groupId":"101691","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"orderedInitialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/a1/8eb41c6824870c7bdf60a15c4d45fd37ef317a.src","preCode":"\tvoid orderedInitialize() {\n\t\tStaticApplicationContext context = new StaticApplicationContext();\n\t\tTestPropertySourceUtils.addInlinedPropertiesToEnvironment(context,\n\t\t\t\t\"context.initializer.classes=\" + MockInitB.class.getName() + \",\" + MockInitA.class.getName());\n\t\tthis.initializer.initialize(context);\n\t\tassertThat(context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\");\n\t\tassertThat(context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/config/DelegatingApplicationContextInitializerTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"}],"commitId":"1ae14362110360cc558bcd498fa67f70a35b8373","commitMessage":"@@@Refactor BootstrapRegistry support\n\nRefactor `BootstrapRegistry` support following initial prototype work\nwith the Spring Cloud team.\n\nThis update splits the `BootstrapRegistry` API into `BootstrapRegistry`. \n`BootstrapContext` and  `ConfigurableBootstrapContext` interfaces and\nmoves it to the same package as `SpringApplication`.\n\nA new `Bootstrapper` interface has been introduced that can be added\nto the `SpringApplication` to customize the `BootstrapRegistry` before\nit's used.\n\nCloses gh-23326\n","date":"2020-09-17 15:31:00","modifiedFileCount":"40","status":"M","submitter":"Phillip Webb"}]
