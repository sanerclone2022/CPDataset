[{"authorTime":"2017-10-05 07:38:18","codes":[{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void iterate() throws Exception {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tfor (MimeMappings.Mapping mapping : mappings) {\n\t\t\tmappingList.add(mapping);\n\t\t}\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":73,"groupId":"1359","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"iterate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cc/60cf85e19244421f7ea24f783dceb2d21a44bd.src","preCode":"\tpublic void iterate() throws Exception {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tfor (MimeMappings.Mapping mapping : mappings) {\n\t\t\tmappingList.add(mapping);\n\t\t}\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/server/MimeMappingsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2017-10-05 07:38:18","commitOrder":1,"curCode":"\tpublic void getAll() throws Exception {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tmappingList.addAll(mappings.getAll());\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","date":"2017-10-05 11:18:56","endLine":86,"groupId":"1361","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/cc/60cf85e19244421f7ea24f783dceb2d21a44bd.src","preCode":"\tpublic void getAll() throws Exception {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tmappingList.addAll(mappings.getAll());\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/server/MimeMappingsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"33edfdab46085422e04b171cd2834e996bfe2cb9","commitMessage":"@@@Merge branch 'gh-9316'\n","date":"2017-10-05 11:18:56","modifiedFileCount":"0","status":"B","submitter":"Phillip Webb"},{"authorTime":"2017-12-12 18:57:24","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void iterate() {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tfor (MimeMappings.Mapping mapping : mappings) {\n\t\t\tmappingList.add(mapping);\n\t\t}\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":73,"groupId":"1359","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"iterate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8e/5e6f2dd9c0acda27c702314410615081be43d2.src","preCode":"\tpublic void iterate() throws Exception {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tfor (MimeMappings.Mapping mapping : mappings) {\n\t\t\tmappingList.add(mapping);\n\t\t}\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/server/MimeMappingsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2017-12-12 18:57:24","commitOrder":2,"curCode":"\tpublic void getAll() {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tmappingList.addAll(mappings.getAll());\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":86,"groupId":"1361","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8e/5e6f2dd9c0acda27c702314410615081be43d2.src","preCode":"\tpublic void getAll() throws Exception {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tmappingList.addAll(mappings.getAll());\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/server/MimeMappingsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"23218add9042af53b5ab465528bf588601ce2f7f","commitMessage":"@@@Polish\n","date":"2017-12-12 18:57:30","modifiedFileCount":"615","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-02-10 17:35:53","codes":[{"authorDate":"2017-12-12 18:57:24","commitOrder":3,"curCode":"\tpublic void iterate() {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tfor (MimeMappings.Mapping mapping : mappings) {\n\t\t\tmappingList.add(mapping);\n\t\t}\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","date":"2017-12-12 18:57:30","endLine":73,"groupId":"1359","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"iterate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/8e/5e6f2dd9c0acda27c702314410615081be43d2.src","preCode":"\tpublic void iterate() {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tfor (MimeMappings.Mapping mapping : mappings) {\n\t\t\tmappingList.add(mapping);\n\t\t}\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/server/MimeMappingsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"},{"authorDate":"2019-02-10 17:35:53","commitOrder":3,"curCode":"\tpublic void getAll() {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>(mappings.getAll());\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","date":"2019-02-10 17:35:53","endLine":85,"groupId":"15209","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/2e/4465af3ae08a550de0da89e0046e6470b0d754.src","preCode":"\tpublic void getAll() {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tmappingList.addAll(mappings.getAll());\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/server/MimeMappingsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"f6380ba66cc664eddc7930484a4be0a64edbb467","commitMessage":"@@@Merge pull request #15837 from kedar-joshi\n\n* pr/15837:\n  Polish\n","date":"2019-02-10 17:35:53","modifiedFileCount":"12","status":"M","submitter":"Stephane Nicoll"},{"authorTime":"2019-05-24 18:24:29","codes":[{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid iterate() {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tfor (MimeMappings.Mapping mapping : mappings) {\n\t\t\tmappingList.add(mapping);\n\t\t}\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":75,"groupId":"101937","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"iterate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7c/8e2347dd4bccacf94d79bc4ff634c7e2f44cfe.src","preCode":"\tpublic void iterate() {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>();\n\t\tfor (MimeMappings.Mapping mapping : mappings) {\n\t\t\tmappingList.add(mapping);\n\t\t}\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/server/MimeMappingsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-05-24 18:24:29","commitOrder":4,"curCode":"\tvoid getAll() {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>(mappings.getAll());\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","date":"2019-06-07 19:25:54","endLine":87,"groupId":"101937","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"getAll","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-springboot-10-0.7/blobInfo/CC_OUT/blobs/7c/8e2347dd4bccacf94d79bc4ff634c7e2f44cfe.src","preCode":"\tpublic void getAll() {\n\t\tMimeMappings mappings = new MimeMappings();\n\t\tmappings.add(\"foo\", \"bar\");\n\t\tmappings.add(\"baz\", \"boo\");\n\t\tList<MimeMappings.Mapping> mappingList = new ArrayList<>(mappings.getAll());\n\t\tassertThat(mappingList.get(0).getExtension()).isEqualTo(\"foo\");\n\t\tassertThat(mappingList.get(0).getMimeType()).isEqualTo(\"bar\");\n\t\tassertThat(mappingList.get(1).getExtension()).isEqualTo(\"baz\");\n\t\tassertThat(mappingList.get(1).getMimeType()).isEqualTo(\"boo\");\n\t}\n","realPath":"spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/server/MimeMappingsTests.java","repoName":"springboot","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"b18fffaf14f9ce3e5651f44745019890e8a899c2","commitMessage":"@@@Move tests to JUnit 5 wherever possible\n","date":"2019-06-07 19:25:54","modifiedFileCount":"1282","status":"M","submitter":"Andy Wilkinson"}]
