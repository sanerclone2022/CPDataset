[{"authorTime":"2015-03-11 07:17:20","codes":[{"authorDate":"2015-03-11 07:17:20","commitOrder":1,"curCode":"    public static void createRubyDescriptor(Ruby runtime) {\n        RubyModule protobuf = runtime.getClassFromPath(\"Google::Protobuf\");\n        RubyClass cDescriptor = protobuf.defineClassUnder(\"Descriptor\", runtime.getObject(), new ObjectAllocator() {\n            @Override\n            public IRubyObject allocate(Ruby runtime, RubyClass klazz) {\n                return new RubyDescriptor(runtime, klazz);\n            }\n        });\n        cDescriptor.includeModule(runtime.getEnumerable());\n        cDescriptor.defineAnnotatedMethods(RubyDescriptor.class);\n    }\n","date":"2015-03-11 07:17:20","endLine":61,"groupId":"1428","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createRubyDescriptor","params":"(Rubyruntime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/51/c50be8e10d5543178b67b8f03dee9649345dd3.src","preCode":"    public static void createRubyDescriptor(Ruby runtime) {\n        RubyModule protobuf = runtime.getClassFromPath(\"Google::Protobuf\");\n        RubyClass cDescriptor = protobuf.defineClassUnder(\"Descriptor\", runtime.getObject(), new ObjectAllocator() {\n            @Override\n            public IRubyObject allocate(Ruby runtime, RubyClass klazz) {\n                return new RubyDescriptor(runtime, klazz);\n            }\n        });\n        cDescriptor.includeModule(runtime.getEnumerable());\n        cDescriptor.defineAnnotatedMethods(RubyDescriptor.class);\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyDescriptor.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2015-03-11 07:17:20","commitOrder":1,"curCode":"    public static void createRubyEnumDescriptor(Ruby runtime) {\n        RubyModule mProtobuf = runtime.getClassFromPath(\"Google::Protobuf\");\n        RubyClass cEnumDescriptor = mProtobuf.defineClassUnder(\"EnumDescriptor\", runtime.getObject(), new ObjectAllocator() {\n            @Override\n            public IRubyObject allocate(Ruby runtime, RubyClass klazz) {\n                return new RubyEnumDescriptor(runtime, klazz);\n            }\n        });\n        cEnumDescriptor.includeModule(runtime.getEnumerable());\n        cEnumDescriptor.defineAnnotatedMethods(RubyEnumDescriptor.class);\n    }\n","date":"2015-03-11 07:17:20","endLine":61,"groupId":"1428","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createRubyEnumDescriptor","params":"(Rubyruntime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/4d/f832d0cfc95b719e7cbb64b42162a998a48734.src","preCode":"    public static void createRubyEnumDescriptor(Ruby runtime) {\n        RubyModule mProtobuf = runtime.getClassFromPath(\"Google::Protobuf\");\n        RubyClass cEnumDescriptor = mProtobuf.defineClassUnder(\"EnumDescriptor\", runtime.getObject(), new ObjectAllocator() {\n            @Override\n            public IRubyObject allocate(Ruby runtime, RubyClass klazz) {\n                return new RubyEnumDescriptor(runtime, klazz);\n            }\n        });\n        cEnumDescriptor.includeModule(runtime.getEnumerable());\n        cEnumDescriptor.defineAnnotatedMethods(RubyEnumDescriptor.class);\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyEnumDescriptor.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"}],"commitId":"9861c0d796f254f5575638e1c520db9d723b4fa3","commitMessage":"@@@Merge pull request #146 from isaiah/jruby\n\nprotobuf support for jruby","date":"2015-03-11 07:17:20","modifiedFileCount":"0","status":"B","submitter":"Chris Fallin"},{"authorTime":"2015-03-11 07:17:20","codes":[{"authorDate":"2020-09-15 04:37:48","commitOrder":2,"curCode":"    public static void createRubyDescriptor(Ruby runtime) {\n        RubyModule protobuf = runtime.getClassFromPath(\"Google::Protobuf\");\n        RubyClass cDescriptor = protobuf.defineClassUnder(\"Descriptor\", runtime.getObject(), new ObjectAllocator() {\n            @Override\n            public IRubyObject allocate(Ruby runtime, RubyClass klazz) {\n                return new RubyDescriptor(runtime, klazz);\n            }\n        });\n        cDescriptor.includeModule(runtime.getEnumerable());\n        cDescriptor.defineAnnotatedMethods(RubyDescriptor.class);\n        cFieldDescriptor = (RubyClass) runtime.getClassFromPath(\"Google::Protobuf::FieldDescriptor\");\n        cOneofDescriptor = (RubyClass) runtime.getClassFromPath(\"Google::Protobuf::OneofDescriptor\");\n    }\n","date":"2020-12-12 08:02:41","endLine":65,"groupId":"1030","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createRubyDescriptor","params":"(Rubyruntime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/a5/9596a5b6b459ed7c6e0863486e0a3d5c9f8d61.src","preCode":"    public static void createRubyDescriptor(Ruby runtime) {\n        RubyModule protobuf = runtime.getClassFromPath(\"Google::Protobuf\");\n        RubyClass cDescriptor = protobuf.defineClassUnder(\"Descriptor\", runtime.getObject(), new ObjectAllocator() {\n            @Override\n            public IRubyObject allocate(Ruby runtime, RubyClass klazz) {\n                return new RubyDescriptor(runtime, klazz);\n            }\n        });\n        cDescriptor.includeModule(runtime.getEnumerable());\n        cDescriptor.defineAnnotatedMethods(RubyDescriptor.class);\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyDescriptor.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2015-03-11 07:17:20","commitOrder":2,"curCode":"    public static void createRubyEnumDescriptor(Ruby runtime) {\n        RubyModule mProtobuf = runtime.getClassFromPath(\"Google::Protobuf\");\n        RubyClass cEnumDescriptor = mProtobuf.defineClassUnder(\"EnumDescriptor\", runtime.getObject(), new ObjectAllocator() {\n            @Override\n            public IRubyObject allocate(Ruby runtime, RubyClass klazz) {\n                return new RubyEnumDescriptor(runtime, klazz);\n            }\n        });\n        cEnumDescriptor.includeModule(runtime.getEnumerable());\n        cEnumDescriptor.defineAnnotatedMethods(RubyEnumDescriptor.class);\n    }\n","date":"2015-03-11 07:17:20","endLine":61,"groupId":"1030","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createRubyEnumDescriptor","params":"(Rubyruntime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/4d/f832d0cfc95b719e7cbb64b42162a998a48734.src","preCode":"    public static void createRubyEnumDescriptor(Ruby runtime) {\n        RubyModule mProtobuf = runtime.getClassFromPath(\"Google::Protobuf\");\n        RubyClass cEnumDescriptor = mProtobuf.defineClassUnder(\"EnumDescriptor\", runtime.getObject(), new ObjectAllocator() {\n            @Override\n            public IRubyObject allocate(Ruby runtime, RubyClass klazz) {\n                return new RubyEnumDescriptor(runtime, klazz);\n            }\n        });\n        cEnumDescriptor.includeModule(runtime.getEnumerable());\n        cEnumDescriptor.defineAnnotatedMethods(RubyEnumDescriptor.class);\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyEnumDescriptor.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"}],"commitId":"8313e577e572566308eb5c3768ec9d2cd807658a","commitMessage":"@@@Fix ruby gem to work with JRuby\n","date":"2020-12-12 08:02:41","modifiedFileCount":"16","status":"M","submitter":"Rob Widmer"}]
