[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  private void assertReadLittleEndian32(byte[] data, int value)\n                                        throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(data);\n    assertEquals(value, input.readRawLittleEndian32());\n    assertTrue(input.isAtEnd());\n\n    \r\n    for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n      input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(data, blockSize));\n      assertEquals(value, input.readRawLittleEndian32());\n      assertTrue(input.isAtEnd());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":250,"groupId":"206","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertReadLittleEndian32","params":"(byte[]data@intvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/18/d8142c90277ab839cdd5f4003c1088a60e89f1.src","preCode":"  private void assertReadLittleEndian32(byte[] data, int value)\n                                        throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(data);\n    assertEquals(value, input.readRawLittleEndian32());\n    assertTrue(input.isAtEnd());\n\n    \r\n    for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n      input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(data, blockSize));\n      assertEquals(value, input.readRawLittleEndian32());\n      assertTrue(input.isAtEnd());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  private void assertReadLittleEndian64(byte[] data, long value)\n                                        throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(data);\n    assertEquals(value, input.readRawLittleEndian64());\n    assertTrue(input.isAtEnd());\n\n    \r\n    for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n      input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(data, blockSize));\n      assertEquals(value, input.readRawLittleEndian64());\n      assertTrue(input.isAtEnd());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":269,"groupId":"206","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertReadLittleEndian64","params":"(byte[]data@longvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/18/d8142c90277ab839cdd5f4003c1088a60e89f1.src","preCode":"  private void assertReadLittleEndian64(byte[] data, long value)\n                                        throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(data);\n    assertEquals(value, input.readRawLittleEndian64());\n    assertTrue(input.isAtEnd());\n\n    \r\n    for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n      input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(data, blockSize));\n      assertEquals(value, input.readRawLittleEndian64());\n      assertTrue(input.isAtEnd());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2016-10-11 04:58:39","codes":[{"authorDate":"2016-10-11 04:58:39","commitOrder":2,"curCode":"  private void assertReadLittleEndian32(byte[] data, int value) throws Exception {\n    for (InputType inputType : InputType.values()) {\n      \r\n      for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n        CodedInputStream input = inputType.newDecoder(data, blockSize);\n        assertEquals(inputType.name(), value, input.readRawLittleEndian32());\n        assertTrue(inputType.name(), input.isAtEnd());\n      }\n    }\n  }\n","date":"2016-10-11 04:58:39","endLine":261,"groupId":"171","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertReadLittleEndian32","params":"(byte[]data@intvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e2/ab0df998bbb3a683f9650866ccf589a205c2e9.src","preCode":"  private void assertReadLittleEndian32(byte[] data, int value)\n                                        throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(data);\n    assertEquals(value, input.readRawLittleEndian32());\n    assertTrue(input.isAtEnd());\n\n    \r\n    for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n      input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(data, blockSize));\n      assertEquals(value, input.readRawLittleEndian32());\n      assertTrue(input.isAtEnd());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"},{"authorDate":"2016-10-11 04:58:39","commitOrder":2,"curCode":"  private void assertReadLittleEndian64(byte[] data, long value) throws Exception {\n    for (InputType inputType : InputType.values()) {\n      \r\n      for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n        CodedInputStream input = inputType.newDecoder(data, blockSize);\n        assertEquals(inputType.name(), value, input.readRawLittleEndian64());\n        assertTrue(inputType.name(), input.isAtEnd());\n      }\n    }\n  }\n","date":"2016-10-11 04:58:39","endLine":276,"groupId":"171","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertReadLittleEndian64","params":"(byte[]data@longvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e2/ab0df998bbb3a683f9650866ccf589a205c2e9.src","preCode":"  private void assertReadLittleEndian64(byte[] data, long value)\n                                        throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(data);\n    assertEquals(value, input.readRawLittleEndian64());\n    assertTrue(input.isAtEnd());\n\n    \r\n    for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n      input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(data, blockSize));\n      assertEquals(value, input.readRawLittleEndian64());\n      assertTrue(input.isAtEnd());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"M"}],"commitId":"fd046f6263fb17383cafdbb25c361e3451c31105","commitMessage":"@@@Merge pull request #2234 from TeBoring/master\n\nMerge 3.1.x branch into master.","date":"2016-10-11 04:58:39","modifiedFileCount":"60","status":"M","submitter":"Paul Yang"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  private void assertReadLittleEndian32(byte[] data, int value) throws Exception {\n    for (InputType inputType : InputType.values()) {\n      \r\n      for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n        CodedInputStream input = inputType.newDecoder(data, blockSize);\n        assertWithMessage(inputType.name()).that(input.readRawLittleEndian32()).isEqualTo(value);\n        assertWithMessage(inputType.name()).that(input.isAtEnd()).isTrue();\n      }\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":326,"groupId":"10380","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertReadLittleEndian32","params":"(byte[]data@intvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f5/bb31fdf4e56a7d7c9a0216487f8ea23213971b.src","preCode":"  private void assertReadLittleEndian32(byte[] data, int value) throws Exception {\n    for (InputType inputType : InputType.values()) {\n      \r\n      for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n        CodedInputStream input = inputType.newDecoder(data, blockSize);\n        assertEquals(inputType.name(), value, input.readRawLittleEndian32());\n        assertTrue(inputType.name(), input.isAtEnd());\n      }\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  private void assertReadLittleEndian64(byte[] data, long value) throws Exception {\n    for (InputType inputType : InputType.values()) {\n      \r\n      for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n        CodedInputStream input = inputType.newDecoder(data, blockSize);\n        assertWithMessage(inputType.name()).that(input.readRawLittleEndian64()).isEqualTo(value);\n        assertWithMessage(inputType.name()).that(input.isAtEnd()).isTrue();\n      }\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":341,"groupId":"10380","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertReadLittleEndian64","params":"(byte[]data@longvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f5/bb31fdf4e56a7d7c9a0216487f8ea23213971b.src","preCode":"  private void assertReadLittleEndian64(byte[] data, long value) throws Exception {\n    for (InputType inputType : InputType.values()) {\n      \r\n      for (int blockSize = 1; blockSize <= 16; blockSize *= 2) {\n        CodedInputStream input = inputType.newDecoder(data, blockSize);\n        assertEquals(inputType.name(), value, input.readRawLittleEndian64());\n        assertTrue(inputType.name(), input.isAtEnd());\n      }\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":332,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
