[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  private static void assertHasMapValues(Message message, String name, Map<?, ?> values) {\n    FieldDescriptor field = f(name);\n    for (Object entry : (List<?>) message.getField(field)) {\n      Message mapEntry = (Message) entry;\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n    assertEquals(values.size(), message.getRepeatedFieldCount(field));\n    for (int i = 0; i < message.getRepeatedFieldCount(field); i++) {\n      Message mapEntry = (Message) message.getRepeatedField(field, i);\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":431,"groupId":"320","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertHasMapValues","params":"(Messagemessage@Stringname@Map<?@?>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1f/a3cbdbae7748cbdc0c082229b7c3e75fcef2cb.src","preCode":"  private static void assertHasMapValues(Message message, String name, Map<?, ?> values) {\n    FieldDescriptor field = f(name);\n    for (Object entry : (List<?>) message.getField(field)) {\n      Message mapEntry = (Message) entry;\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n    assertEquals(values.size(), message.getRepeatedFieldCount(field));\n    for (int i = 0; i < message.getRepeatedFieldCount(field); i++) {\n      Message mapEntry = (Message) message.getRepeatedField(field, i);\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapForProto2Test.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  private static void assertHasMapValues(Message message, String name, Map<?, ?> values) {\n    FieldDescriptor field = f(name);\n    for (Object entry : (List<?>) message.getField(field)) {\n      Message mapEntry = (Message) entry;\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n    assertEquals(values.size(), message.getRepeatedFieldCount(field));\n    for (int i = 0; i < message.getRepeatedFieldCount(field); i++) {\n      Message mapEntry = (Message) message.getRepeatedField(field, i);\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":524,"groupId":"320","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertHasMapValues","params":"(Messagemessage@Stringname@Map<?@?>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/0e/5c12840c1630c4dc52a30c3be6173463e3befb.src","preCode":"  private static void assertHasMapValues(Message message, String name, Map<?, ?> values) {\n    FieldDescriptor field = f(name);\n    for (Object entry : (List<?>) message.getField(field)) {\n      Message mapEntry = (Message) entry;\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n    assertEquals(values.size(), message.getRepeatedFieldCount(field));\n    for (int i = 0; i < message.getRepeatedFieldCount(field); i++) {\n      Message mapEntry = (Message) message.getRepeatedField(field, i);\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  private static void assertHasMapValues(Message message, String name, Map<?, ?> values) {\n    FieldDescriptor field = f(name);\n    for (Object entry : (List<?>) message.getField(field)) {\n      Message mapEntry = (Message) entry;\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertThat(values.containsKey(key)).isTrue();\n      assertThat(values.get(key)).isEqualTo(value);\n    }\n    assertThat(message.getRepeatedFieldCount(field)).isEqualTo(values.size());\n    for (int i = 0; i < message.getRepeatedFieldCount(field); i++) {\n      Message mapEntry = (Message) message.getRepeatedField(field, i);\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertThat(values.containsKey(key)).isTrue();\n      assertThat(values.get(key)).isEqualTo(value);\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":666,"groupId":"10159","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertHasMapValues","params":"(Messagemessage@Stringname@Map<?@?>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/82/1b93cf28a62db01be87b4e44deabda15641cb3.src","preCode":"  private static void assertHasMapValues(Message message, String name, Map<?, ?> values) {\n    FieldDescriptor field = f(name);\n    for (Object entry : (List<?>) message.getField(field)) {\n      Message mapEntry = (Message) entry;\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n    assertEquals(values.size(), message.getRepeatedFieldCount(field));\n    for (int i = 0; i < message.getRepeatedFieldCount(field); i++) {\n      Message mapEntry = (Message) message.getRepeatedField(field, i);\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapForProto2Test.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":649,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  private static void assertHasMapValues(Message message, String name, Map<?, ?> values) {\n    FieldDescriptor field = f(name);\n    for (Object entry : (List<?>) message.getField(field)) {\n      Message mapEntry = (Message) entry;\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertThat(values.containsKey(key)).isTrue();\n      assertThat(values.get(key)).isEqualTo(value);\n    }\n    assertThat(message.getRepeatedFieldCount(field)).isEqualTo(values.size());\n    for (int i = 0; i < message.getRepeatedFieldCount(field); i++) {\n      Message mapEntry = (Message) message.getRepeatedField(field, i);\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertThat(values.containsKey(key)).isTrue();\n      assertThat(values.get(key)).isEqualTo(value);\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":763,"groupId":"10159","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertHasMapValues","params":"(Messagemessage@Stringname@Map<?@?>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/cc/7a1217dbd78eb4e65fd6d6e9ded575285fe7f4.src","preCode":"  private static void assertHasMapValues(Message message, String name, Map<?, ?> values) {\n    FieldDescriptor field = f(name);\n    for (Object entry : (List<?>) message.getField(field)) {\n      Message mapEntry = (Message) entry;\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n    assertEquals(values.size(), message.getRepeatedFieldCount(field));\n    for (int i = 0; i < message.getRepeatedFieldCount(field); i++) {\n      Message mapEntry = (Message) message.getRepeatedField(field, i);\n      Object key = getFieldValue(mapEntry, \"key\");\n      Object value = getFieldValue(mapEntry, \"value\");\n      assertTrue(values.containsKey(key));\n      assertEquals(value, values.get(key));\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":746,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
