[{"authorTime":"2019-07-20 05:49:01","codes":[{"authorDate":"2019-07-20 05:49:01","commitOrder":1,"curCode":"  public void testPrintAny_anyFromWithNoTypeUrlField() throws Exception {\n    Descriptor descriptor =\n        createDescriptorForAny(\n            FieldDescriptorProto.newBuilder()\n                .setName(\"value\")\n                .setNumber(2)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_BYTES)\n                .build());\n    DynamicMessage testAny =\n        DynamicMessage.newBuilder(descriptor)\n            .setField(\n                descriptor.findFieldByNumber(2),\n                TestAllTypes.newBuilder().setOptionalInt32(12345).build().toByteString())\n            .build();\n    String actual =\n        TextFormat.printer()\n            .usingTypeRegistry(TypeRegistry.newBuilder().add(TestAllTypes.getDescriptor()).build())\n            .printToString(testAny);\n    String expected = \"value: \\\"\\\\b\\\\271`\\\"\\n\";\n    assertEquals(expected, actual);\n  }\n","date":"2019-07-20 05:49:01","endLine":634,"groupId":"1636","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPrintAny_anyFromWithNoTypeUrlField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/dd/0e8c847cc8d749577c48b301b6bfca1121eb0c.src","preCode":"  public void testPrintAny_anyFromWithNoTypeUrlField() throws Exception {\n    Descriptor descriptor =\n        createDescriptorForAny(\n            FieldDescriptorProto.newBuilder()\n                .setName(\"value\")\n                .setNumber(2)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_BYTES)\n                .build());\n    DynamicMessage testAny =\n        DynamicMessage.newBuilder(descriptor)\n            .setField(\n                descriptor.findFieldByNumber(2),\n                TestAllTypes.newBuilder().setOptionalInt32(12345).build().toByteString())\n            .build();\n    String actual =\n        TextFormat.printer()\n            .usingTypeRegistry(TypeRegistry.newBuilder().add(TestAllTypes.getDescriptor()).build())\n            .printToString(testAny);\n    String expected = \"value: \\\"\\\\b\\\\271`\\\"\\n\";\n    assertEquals(expected, actual);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":613,"status":"B"},{"authorDate":"2019-07-20 05:49:01","commitOrder":1,"curCode":"  public void testPrintAny_anyWithInvalidFieldType() throws Exception {\n    Descriptor descriptor =\n        createDescriptorForAny(\n            FieldDescriptorProto.newBuilder()\n                .setName(\"type_url\")\n                .setNumber(1)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_STRING)\n                .build(),\n            FieldDescriptorProto.newBuilder()\n                .setName(\"value\")\n                .setNumber(2)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_STRING)\n                .build());\n    DynamicMessage testAny =\n        DynamicMessage.newBuilder(descriptor)\n            .setField(\n                descriptor.findFieldByNumber(1),\n                \"type.googleapis.com/\" + TestAllTypes.getDescriptor().getFullName())\n            .setField(descriptor.findFieldByNumber(2), \"test\")\n            .build();\n    String actual =\n        TextFormat.printer()\n            .usingTypeRegistry(TypeRegistry.newBuilder().add(TestAllTypes.getDescriptor()).build())\n            .printToString(testAny);\n    String expected =\n        \"type_url: \\\"type.googleapis.com/protobuf_unittest.TestAllTypes\\\"\\n\" + \"value: \\\"test\\\"\\n\";\n    assertEquals(expected, actual);\n  }\n","date":"2019-07-20 05:49:01","endLine":665,"groupId":"410","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPrintAny_anyWithInvalidFieldType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/dd/0e8c847cc8d749577c48b301b6bfca1121eb0c.src","preCode":"  public void testPrintAny_anyWithInvalidFieldType() throws Exception {\n    Descriptor descriptor =\n        createDescriptorForAny(\n            FieldDescriptorProto.newBuilder()\n                .setName(\"type_url\")\n                .setNumber(1)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_STRING)\n                .build(),\n            FieldDescriptorProto.newBuilder()\n                .setName(\"value\")\n                .setNumber(2)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_STRING)\n                .build());\n    DynamicMessage testAny =\n        DynamicMessage.newBuilder(descriptor)\n            .setField(\n                descriptor.findFieldByNumber(1),\n                \"type.googleapis.com/\" + TestAllTypes.getDescriptor().getFullName())\n            .setField(descriptor.findFieldByNumber(2), \"test\")\n            .build();\n    String actual =\n        TextFormat.printer()\n            .usingTypeRegistry(TypeRegistry.newBuilder().add(TestAllTypes.getDescriptor()).build())\n            .printToString(testAny);\n    String expected =\n        \"type_url: \\\"type.googleapis.com/protobuf_unittest.TestAllTypes\\\"\\n\" + \"value: \\\"test\\\"\\n\";\n    assertEquals(expected, actual);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":636,"status":"B"}],"commitId":"7bff8393cab939bfbb9b5c69b3fe76b4d83c41ee","commitMessage":"@@@Down Integrate to GitHub (#6414)\n\n* Down integrate to GitHub\n\n* Fix broken tests\n","date":"2019-07-20 05:49:01","modifiedFileCount":"9","status":"B","submitter":"Paul Yang"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testPrintAny_anyFromWithNoTypeUrlField() throws Exception {\n    Descriptor descriptor =\n        createDescriptorForAny(\n            FieldDescriptorProto.newBuilder()\n                .setName(\"value\")\n                .setNumber(2)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_BYTES)\n                .build());\n    DynamicMessage testAny =\n        DynamicMessage.newBuilder(descriptor)\n            .setField(\n                descriptor.findFieldByNumber(2),\n                TestAllTypes.newBuilder().setOptionalInt32(12345).build().toByteString())\n            .build();\n    String actual =\n        TextFormat.printer()\n            .usingTypeRegistry(TypeRegistry.newBuilder().add(TestAllTypes.getDescriptor()).build())\n            .printToString(testAny);\n    String expected = \"value: \\\"\\\\b\\\\271`\\\"\\n\";\n    assertThat(actual).isEqualTo(expected);\n  }\n","date":"2021-08-10 06:55:00","endLine":689,"groupId":"10436","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPrintAny_anyFromWithNoTypeUrlField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/568e1df5e2a4320fcad1e8090fffc838e50ebb.src","preCode":"  public void testPrintAny_anyFromWithNoTypeUrlField() throws Exception {\n    Descriptor descriptor =\n        createDescriptorForAny(\n            FieldDescriptorProto.newBuilder()\n                .setName(\"value\")\n                .setNumber(2)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_BYTES)\n                .build());\n    DynamicMessage testAny =\n        DynamicMessage.newBuilder(descriptor)\n            .setField(\n                descriptor.findFieldByNumber(2),\n                TestAllTypes.newBuilder().setOptionalInt32(12345).build().toByteString())\n            .build();\n    String actual =\n        TextFormat.printer()\n            .usingTypeRegistry(TypeRegistry.newBuilder().add(TestAllTypes.getDescriptor()).build())\n            .printToString(testAny);\n    String expected = \"value: \\\"\\\\b\\\\271`\\\"\\n\";\n    assertEquals(expected, actual);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":668,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testPrintAny_anyWithInvalidFieldType() throws Exception {\n    Descriptor descriptor =\n        createDescriptorForAny(\n            FieldDescriptorProto.newBuilder()\n                .setName(\"type_url\")\n                .setNumber(1)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_STRING)\n                .build(),\n            FieldDescriptorProto.newBuilder()\n                .setName(\"value\")\n                .setNumber(2)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_STRING)\n                .build());\n    DynamicMessage testAny =\n        DynamicMessage.newBuilder(descriptor)\n            .setField(\n                descriptor.findFieldByNumber(1),\n                \"type.googleapis.com/\" + TestAllTypes.getDescriptor().getFullName())\n            .setField(descriptor.findFieldByNumber(2), \"test\")\n            .build();\n    String actual =\n        TextFormat.printer()\n            .usingTypeRegistry(TypeRegistry.newBuilder().add(TestAllTypes.getDescriptor()).build())\n            .printToString(testAny);\n    String expected =\n        \"type_url: \\\"type.googleapis.com/protobuf_unittest.TestAllTypes\\\"\\n\" + \"value: \\\"test\\\"\\n\";\n    assertThat(actual).isEqualTo(expected);\n  }\n","date":"2021-08-10 06:55:00","endLine":721,"groupId":"10436","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPrintAny_anyWithInvalidFieldType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/568e1df5e2a4320fcad1e8090fffc838e50ebb.src","preCode":"  public void testPrintAny_anyWithInvalidFieldType() throws Exception {\n    Descriptor descriptor =\n        createDescriptorForAny(\n            FieldDescriptorProto.newBuilder()\n                .setName(\"type_url\")\n                .setNumber(1)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_STRING)\n                .build(),\n            FieldDescriptorProto.newBuilder()\n                .setName(\"value\")\n                .setNumber(2)\n                .setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL)\n                .setType(FieldDescriptorProto.Type.TYPE_STRING)\n                .build());\n    DynamicMessage testAny =\n        DynamicMessage.newBuilder(descriptor)\n            .setField(\n                descriptor.findFieldByNumber(1),\n                \"type.googleapis.com/\" + TestAllTypes.getDescriptor().getFullName())\n            .setField(descriptor.findFieldByNumber(2), \"test\")\n            .build();\n    String actual =\n        TextFormat.printer()\n            .usingTypeRegistry(TypeRegistry.newBuilder().add(TestAllTypes.getDescriptor()).build())\n            .printToString(testAny);\n    String expected =\n        \"type_url: \\\"type.googleapis.com/protobuf_unittest.TestAllTypes\\\"\\n\" + \"value: \\\"test\\\"\\n\";\n    assertEquals(expected, actual);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":692,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
