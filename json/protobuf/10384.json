[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testSizeLimit() throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(\n            TestUtil.getAllSet().toByteString().newInput(), 16));\n    input.setSizeLimit(16);\n\n    try {\n      TestAllTypes.parseFrom(input);\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":498,"groupId":"1397","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSizeLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/18/d8142c90277ab839cdd5f4003c1088a60e89f1.src","preCode":"  public void testSizeLimit() throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(\n            TestUtil.getAllSet().toByteString().newInput(), 16));\n    input.setSizeLimit(16);\n\n    try {\n      TestAllTypes.parseFrom(input);\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testResetSizeCounter() throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(new byte[256], 8));\n    input.setSizeLimit(16);\n    input.readRawBytes(16);\n    assertEquals(16, input.getTotalBytesRead());\n\n    try {\n      input.readRawByte();\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n\n    input.resetSizeCounter();\n    assertEquals(0, input.getTotalBytesRead());\n    input.readRawByte();  \r\n    input.resetSizeCounter();\n    assertEquals(0, input.getTotalBytesRead());\n    input.readRawBytes(16);\n    assertEquals(16, input.getTotalBytesRead());\n    input.resetSizeCounter();\n\n    try {\n      input.readRawBytes(17);  \r\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":529,"groupId":"500","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testResetSizeCounter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/18/d8142c90277ab839cdd5f4003c1088a60e89f1.src","preCode":"  public void testResetSizeCounter() throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(new byte[256], 8));\n    input.setSizeLimit(16);\n    input.readRawBytes(16);\n    assertEquals(16, input.getTotalBytesRead());\n\n    try {\n      input.readRawByte();\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n\n    input.resetSizeCounter();\n    assertEquals(0, input.getTotalBytesRead());\n    input.readRawByte();  \r\n    input.resetSizeCounter();\n    assertEquals(0, input.getTotalBytesRead());\n    input.readRawBytes(16);\n    assertEquals(16, input.getTotalBytesRead());\n    input.resetSizeCounter();\n\n    try {\n      input.readRawBytes(17);  \r\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":500,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-10-11 04:58:39","commitOrder":2,"curCode":"  public void testSizeLimit() throws Exception {\n    \r\n    CodedInputStream input =\n        CodedInputStream.newInstance(\n            new SmallBlockInputStream(TestUtil.getAllSet().toByteArray(), 16));\n    input.setSizeLimit(16);\n\n    try {\n      TestAllTypes.parseFrom(input);\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","date":"2016-10-11 04:58:39","endLine":509,"groupId":"1916","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSizeLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e2/ab0df998bbb3a683f9650866ccf589a205c2e9.src","preCode":"  public void testSizeLimit() throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(\n            TestUtil.getAllSet().toByteString().newInput(), 16));\n    input.setSizeLimit(16);\n\n    try {\n      TestAllTypes.parseFrom(input);\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"M"},{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testResetSizeCounter() throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(new byte[256], 8));\n    input.setSizeLimit(16);\n    input.readRawBytes(16);\n    assertEquals(16, input.getTotalBytesRead());\n\n    try {\n      input.readRawByte();\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n\n    input.resetSizeCounter();\n    assertEquals(0, input.getTotalBytesRead());\n    input.readRawByte();  \r\n    input.resetSizeCounter();\n    assertEquals(0, input.getTotalBytesRead());\n    input.readRawBytes(16);\n    assertEquals(16, input.getTotalBytesRead());\n    input.resetSizeCounter();\n\n    try {\n      input.readRawBytes(17);  \r\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":529,"groupId":"500","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testResetSizeCounter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/18/d8142c90277ab839cdd5f4003c1088a60e89f1.src","preCode":"  public void testResetSizeCounter() throws Exception {\n    CodedInputStream input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(new byte[256], 8));\n    input.setSizeLimit(16);\n    input.readRawBytes(16);\n    assertEquals(16, input.getTotalBytesRead());\n\n    try {\n      input.readRawByte();\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n\n    input.resetSizeCounter();\n    assertEquals(0, input.getTotalBytesRead());\n    input.readRawByte();  \r\n    input.resetSizeCounter();\n    assertEquals(0, input.getTotalBytesRead());\n    input.readRawBytes(16);\n    assertEquals(16, input.getTotalBytesRead());\n    input.resetSizeCounter();\n\n    try {\n      input.readRawBytes(17);  \r\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":500,"status":"N"}],"commitId":"fd046f6263fb17383cafdbb25c361e3451c31105","commitMessage":"@@@Merge pull request #2234 from TeBoring/master\n\nMerge 3.1.x branch into master.","date":"2016-10-11 04:58:39","modifiedFileCount":"60","status":"M","submitter":"Paul Yang"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testSizeLimit() throws Exception {\n    \r\n    CodedInputStream input =\n        CodedInputStream.newInstance(\n            new SmallBlockInputStream(TestUtil.getAllSet().toByteArray(), 16));\n    input.setSizeLimit(16);\n\n    try {\n      TestAllTypes.parseFrom(input);\n      assertWithMessage(\"Should have thrown an exception!\").fail();\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":707,"groupId":"10384","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testSizeLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f5/bb31fdf4e56a7d7c9a0216487f8ea23213971b.src","preCode":"  public void testSizeLimit() throws Exception {\n    \r\n    CodedInputStream input =\n        CodedInputStream.newInstance(\n            new SmallBlockInputStream(TestUtil.getAllSet().toByteArray(), 16));\n    input.setSizeLimit(16);\n\n    try {\n      TestAllTypes.parseFrom(input);\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":694,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testResetSizeCounter() throws Exception {\n    \r\n    CodedInputStream input =\n        CodedInputStream.newInstance(new SmallBlockInputStream(new byte[256], 8));\n    input.setSizeLimit(16);\n    input.readRawBytes(16);\n    assertThat(input.getTotalBytesRead()).isEqualTo(16);\n\n    try {\n      input.readRawByte();\n      assertWithMessage(\"Should have thrown an exception!\").fail();\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n\n    input.resetSizeCounter();\n    assertThat(input.getTotalBytesRead()).isEqualTo(0);\n    input.readRawByte(); \r\n    input.resetSizeCounter();\n    assertThat(input.getTotalBytesRead()).isEqualTo(0);\n    input.readRawBytes(16);\n    assertThat(input.getTotalBytesRead()).isEqualTo(16);\n    input.resetSizeCounter();\n\n    try {\n      input.readRawBytes(17); \r\n      assertWithMessage(\"Should have thrown an exception!\").fail();\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":740,"groupId":"10384","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testResetSizeCounter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f5/bb31fdf4e56a7d7c9a0216487f8ea23213971b.src","preCode":"  public void testResetSizeCounter() throws Exception {\n    \r\n    CodedInputStream input =\n        CodedInputStream.newInstance(new SmallBlockInputStream(new byte[256], 8));\n    input.setSizeLimit(16);\n    input.readRawBytes(16);\n    assertEquals(16, input.getTotalBytesRead());\n\n    try {\n      input.readRawByte();\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n\n    input.resetSizeCounter();\n    assertEquals(0, input.getTotalBytesRead());\n    input.readRawByte(); \r\n    input.resetSizeCounter();\n    assertEquals(0, input.getTotalBytesRead());\n    input.readRawBytes(16);\n    assertEquals(16, input.getTotalBytesRead());\n    input.resetSizeCounter();\n\n    try {\n      input.readRawBytes(17); \r\n      fail(\"Should have thrown an exception!\");\n    } catch (InvalidProtocolBufferException expected) {\n      checkSizeLimitExceeded(expected);\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":710,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
