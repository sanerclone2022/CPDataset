[{"authorTime":"2019-07-20 05:49:01","codes":[{"authorDate":"2019-07-20 05:49:01","commitOrder":1,"curCode":"  public void addRepeatedField(final T descriptor, final Object value) {\n    if (!descriptor.isRepeated()) {\n      throw new IllegalArgumentException(\n          \"addRepeatedField() can only be called on repeated fields.\");\n    }\n\n    verifyType(descriptor.getLiteType(), value);\n\n    final Object existingValue = getField(descriptor);\n    List<Object> list;\n    if (existingValue == null) {\n      list = new ArrayList<Object>();\n      fields.put(descriptor, list);\n    } else {\n      list = (List<Object>) existingValue;\n    }\n\n    list.add(value);\n  }\n","date":"2019-07-20 05:49:01","endLine":384,"groupId":"1400","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addRepeatedField","params":"(finalTdescriptor@finalObjectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/20/42dc93eb64817ce734a1eabc5cfc006d464a98.src","preCode":"  public void addRepeatedField(final T descriptor, final Object value) {\n    if (!descriptor.isRepeated()) {\n      throw new IllegalArgumentException(\n          \"addRepeatedField() can only be called on repeated fields.\");\n    }\n\n    verifyType(descriptor.getLiteType(), value);\n\n    final Object existingValue = getField(descriptor);\n    List<Object> list;\n    if (existingValue == null) {\n      list = new ArrayList<Object>();\n      fields.put(descriptor, list);\n    } else {\n      list = (List<Object>) existingValue;\n    }\n\n    list.add(value);\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/FieldSet.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":366,"status":"B"},{"authorDate":"2019-07-20 05:49:01","commitOrder":1,"curCode":"    public void addRepeatedField(final T descriptor, final Object value) {\n      ensureIsMutable();\n      if (!descriptor.isRepeated()) {\n        throw new IllegalArgumentException(\n            \"addRepeatedField() can only be called on repeated fields.\");\n      }\n\n      hasNestedBuilders = hasNestedBuilders || value instanceof MessageLite.Builder;\n\n      verifyType(descriptor.getLiteType(), value);\n\n      final Object existingValue = getField(descriptor);\n      List<Object> list;\n      if (existingValue == null) {\n        list = new ArrayList<>();\n        fields.put(descriptor, list);\n      } else {\n        list = (List<Object>) existingValue;\n      }\n\n      list.add(value);\n    }\n","date":"2019-07-20 05:49:01","endLine":1205,"groupId":"1443","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addRepeatedField","params":"(finalTdescriptor@finalObjectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/20/42dc93eb64817ce734a1eabc5cfc006d464a98.src","preCode":"    public void addRepeatedField(final T descriptor, final Object value) {\n      ensureIsMutable();\n      if (!descriptor.isRepeated()) {\n        throw new IllegalArgumentException(\n            \"addRepeatedField() can only be called on repeated fields.\");\n      }\n\n      hasNestedBuilders = hasNestedBuilders || value instanceof MessageLite.Builder;\n\n      verifyType(descriptor.getLiteType(), value);\n\n      final Object existingValue = getField(descriptor);\n      List<Object> list;\n      if (existingValue == null) {\n        list = new ArrayList<>();\n        fields.put(descriptor, list);\n      } else {\n        list = (List<Object>) existingValue;\n      }\n\n      list.add(value);\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/FieldSet.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1184,"status":"B"}],"commitId":"7bff8393cab939bfbb9b5c69b3fe76b4d83c41ee","commitMessage":"@@@Down Integrate to GitHub (#6414)\n\n* Down integrate to GitHub\n\n* Fix broken tests\n","date":"2019-07-20 05:49:01","modifiedFileCount":"9","status":"B","submitter":"Paul Yang"},{"authorTime":"2020-11-24 01:09:53","codes":[{"authorDate":"2020-11-24 01:09:53","commitOrder":2,"curCode":"  public void addRepeatedField(final T descriptor, final Object value) {\n    if (!descriptor.isRepeated()) {\n      throw new IllegalArgumentException(\n          \"addRepeatedField() can only be called on repeated fields.\");\n    }\n\n    verifyType(descriptor, value);\n\n    final Object existingValue = getField(descriptor);\n    List<Object> list;\n    if (existingValue == null) {\n      list = new ArrayList<Object>();\n      fields.put(descriptor, list);\n    } else {\n      list = (List<Object>) existingValue;\n    }\n\n    list.add(value);\n  }\n","date":"2020-11-24 01:09:53","endLine":383,"groupId":"11799","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addRepeatedField","params":"(finalTdescriptor@finalObjectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1d/8592f7527c9141220ce4fbc4233c654ed94734.src","preCode":"  public void addRepeatedField(final T descriptor, final Object value) {\n    if (!descriptor.isRepeated()) {\n      throw new IllegalArgumentException(\n          \"addRepeatedField() can only be called on repeated fields.\");\n    }\n\n    verifyType(descriptor.getLiteType(), value);\n\n    final Object existingValue = getField(descriptor);\n    List<Object> list;\n    if (existingValue == null) {\n      list = new ArrayList<Object>();\n      fields.put(descriptor, list);\n    } else {\n      list = (List<Object>) existingValue;\n    }\n\n    list.add(value);\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/FieldSet.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":365,"status":"M"},{"authorDate":"2020-11-24 01:09:53","commitOrder":2,"curCode":"    public void addRepeatedField(final T descriptor, final Object value) {\n      ensureIsMutable();\n      if (!descriptor.isRepeated()) {\n        throw new IllegalArgumentException(\n            \"addRepeatedField() can only be called on repeated fields.\");\n      }\n\n      hasNestedBuilders = hasNestedBuilders || value instanceof MessageLite.Builder;\n\n      verifyType(descriptor, value);\n\n      final Object existingValue = getField(descriptor);\n      List<Object> list;\n      if (existingValue == null) {\n        list = new ArrayList<>();\n        fields.put(descriptor, list);\n      } else {\n        list = (List<Object>) existingValue;\n      }\n\n      list.add(value);\n    }\n","date":"2020-11-24 01:09:53","endLine":1210,"groupId":"11799","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addRepeatedField","params":"(finalTdescriptor@finalObjectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1d/8592f7527c9141220ce4fbc4233c654ed94734.src","preCode":"    public void addRepeatedField(final T descriptor, final Object value) {\n      ensureIsMutable();\n      if (!descriptor.isRepeated()) {\n        throw new IllegalArgumentException(\n            \"addRepeatedField() can only be called on repeated fields.\");\n      }\n\n      hasNestedBuilders = hasNestedBuilders || value instanceof MessageLite.Builder;\n\n      verifyType(descriptor.getLiteType(), value);\n\n      final Object existingValue = getField(descriptor);\n      List<Object> list;\n      if (existingValue == null) {\n        list = new ArrayList<>();\n        fields.put(descriptor, list);\n      } else {\n        list = (List<Object>) existingValue;\n      }\n\n      list.add(value);\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/FieldSet.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1189,"status":"M"}],"commitId":"bd9a7104e11740e4bcfbde46c190c2d908ef331a","commitMessage":"@@@Merge pull request #8076 from haberman/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2020-11-24 01:09:53","modifiedFileCount":"11","status":"M","submitter":"Joshua Haberman"}]
