[{"authorTime":"2017-08-22 01:39:27","codes":[{"authorDate":"2017-08-22 01:39:27","commitOrder":1,"curCode":"  public void testReadLargeByteStringFromInputStream() throws Exception {\n    byte[] bytes = new byte[1024 * 1024];\n    for (int i = 0; i < bytes.length; i++) {\n      bytes[i] = (byte) (i & 0xFF);\n    }\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n    output.writeRawVarint32(bytes.length);\n    output.writeRawBytes(bytes);\n    output.flush();\n    byte[] data = rawOutput.toByteString().toByteArray();\n\n    CodedInputStream input = CodedInputStream.newInstance(\n        new ByteArrayInputStream(data) {\n          @Override\n          public synchronized int available() {\n            return 0;\n          }\n        });\n    ByteString result = input.readBytes();\n    assertEquals(ByteString.copyFrom(bytes), result);\n  }\n","date":"2017-08-22 01:39:27","endLine":908,"groupId":"474","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReadLargeByteStringFromInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/da/2c067ebb1c76fd168d1768605672c66b3814ed.src","preCode":"  public void testReadLargeByteStringFromInputStream() throws Exception {\n    byte[] bytes = new byte[1024 * 1024];\n    for (int i = 0; i < bytes.length; i++) {\n      bytes[i] = (byte) (i & 0xFF);\n    }\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n    output.writeRawVarint32(bytes.length);\n    output.writeRawBytes(bytes);\n    output.flush();\n    byte[] data = rawOutput.toByteString().toByteArray();\n\n    CodedInputStream input = CodedInputStream.newInstance(\n        new ByteArrayInputStream(data) {\n          @Override\n          public synchronized int available() {\n            return 0;\n          }\n        });\n    ByteString result = input.readBytes();\n    assertEquals(ByteString.copyFrom(bytes), result);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":887,"status":"B"},{"authorDate":"2017-08-22 01:39:27","commitOrder":1,"curCode":"  public void testReadLargeByteArrayFromInputStream() throws Exception {\n    byte[] bytes = new byte[1024 * 1024];\n    for (int i = 0; i < bytes.length; i++) {\n      bytes[i] = (byte) (i & 0xFF);\n    }\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n    output.writeRawVarint32(bytes.length);\n    output.writeRawBytes(bytes);\n    output.flush();\n    byte[] data = rawOutput.toByteString().toByteArray();\n\n    CodedInputStream input = CodedInputStream.newInstance(\n        new ByteArrayInputStream(data) {\n          @Override\n          public synchronized int available() {\n            return 0;\n          }\n        });\n    byte[] result = input.readByteArray();\n    assertTrue(Arrays.equals(bytes, result));\n  }\n","date":"2017-08-22 01:39:27","endLine":931,"groupId":"474","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReadLargeByteArrayFromInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/da/2c067ebb1c76fd168d1768605672c66b3814ed.src","preCode":"  public void testReadLargeByteArrayFromInputStream() throws Exception {\n    byte[] bytes = new byte[1024 * 1024];\n    for (int i = 0; i < bytes.length; i++) {\n      bytes[i] = (byte) (i & 0xFF);\n    }\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n    output.writeRawVarint32(bytes.length);\n    output.writeRawBytes(bytes);\n    output.flush();\n    byte[] data = rawOutput.toByteString().toByteArray();\n\n    CodedInputStream input = CodedInputStream.newInstance(\n        new ByteArrayInputStream(data) {\n          @Override\n          public synchronized int available() {\n            return 0;\n          }\n        });\n    byte[] result = input.readByteArray();\n    assertTrue(Arrays.equals(bytes, result));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":910,"status":"B"}],"commitId":"ba4e54724d2e6a1881c4fe88664d81fbacaf8c08","commitMessage":"@@@Merge pull request #3529 from pherl/merge3.4.x\n\nMerge 3.4.x into master","date":"2017-08-22 01:39:27","modifiedFileCount":"32","status":"B","submitter":"Jisi Liu"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testReadLargeByteStringFromInputStream() throws Exception {\n    byte[] bytes = new byte[1024 * 1024];\n    for (int i = 0; i < bytes.length; i++) {\n      bytes[i] = (byte) (i & 0xFF);\n    }\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n    output.writeRawVarint32(bytes.length);\n    output.writeRawBytes(bytes);\n    output.flush();\n    byte[] data = rawOutput.toByteString().toByteArray();\n\n    CodedInputStream input =\n        CodedInputStream.newInstance(\n            new ByteArrayInputStream(data) {\n              @Override\n              public synchronized int available() {\n                return 0;\n              }\n            });\n    ByteString result = input.readBytes();\n    assertThat(ByteString.copyFrom(bytes)).isEqualTo(result);\n  }\n","date":"2021-08-10 06:55:00","endLine":1047,"groupId":"10387","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testReadLargeByteStringFromInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f5/bb31fdf4e56a7d7c9a0216487f8ea23213971b.src","preCode":"  public void testReadLargeByteStringFromInputStream() throws Exception {\n    byte[] bytes = new byte[1024 * 1024];\n    for (int i = 0; i < bytes.length; i++) {\n      bytes[i] = (byte) (i & 0xFF);\n    }\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n    output.writeRawVarint32(bytes.length);\n    output.writeRawBytes(bytes);\n    output.flush();\n    byte[] data = rawOutput.toByteString().toByteArray();\n\n    CodedInputStream input =\n        CodedInputStream.newInstance(\n            new ByteArrayInputStream(data) {\n              @Override\n              public synchronized int available() {\n                return 0;\n              }\n            });\n    ByteString result = input.readBytes();\n    assertEquals(ByteString.copyFrom(bytes), result);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1025,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testReadLargeByteArrayFromInputStream() throws Exception {\n    byte[] bytes = new byte[1024 * 1024];\n    for (int i = 0; i < bytes.length; i++) {\n      bytes[i] = (byte) (i & 0xFF);\n    }\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n    output.writeRawVarint32(bytes.length);\n    output.writeRawBytes(bytes);\n    output.flush();\n    byte[] data = rawOutput.toByteString().toByteArray();\n\n    CodedInputStream input =\n        CodedInputStream.newInstance(\n            new ByteArrayInputStream(data) {\n              @Override\n              public synchronized int available() {\n                return 0;\n              }\n            });\n    byte[] result = input.readByteArray();\n    assertThat(Arrays.equals(bytes, result)).isTrue();\n  }\n","date":"2021-08-10 06:55:00","endLine":1072,"groupId":"10387","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testReadLargeByteArrayFromInputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f5/bb31fdf4e56a7d7c9a0216487f8ea23213971b.src","preCode":"  public void testReadLargeByteArrayFromInputStream() throws Exception {\n    byte[] bytes = new byte[1024 * 1024];\n    for (int i = 0; i < bytes.length; i++) {\n      bytes[i] = (byte) (i & 0xFF);\n    }\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n    output.writeRawVarint32(bytes.length);\n    output.writeRawBytes(bytes);\n    output.flush();\n    byte[] data = rawOutput.toByteString().toByteArray();\n\n    CodedInputStream input =\n        CodedInputStream.newInstance(\n            new ByteArrayInputStream(data) {\n              @Override\n              public synchronized int available() {\n                return 0;\n              }\n            });\n    byte[] result = input.readByteArray();\n    assertTrue(Arrays.equals(bytes, result));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1050,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
