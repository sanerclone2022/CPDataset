[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testNewInput() throws IOException {\n    InputStream input = TEST_STRING.newInput();\n    assertEquals(\"InputStream.available() returns correct value\",\n        TEST_STRING.size(), input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : BYTES) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertEquals(\"InputStream.available() returns correct value\",\n        0, input.available());\n    assertTrue(CLASSNAME + \" must give the same bytes from the InputStream\", stillEqual);\n    assertEquals(CLASSNAME + \" InputStream must now be exhausted\", -1, input.read());\n  }\n","date":"2016-01-14 03:22:18","endLine":483,"groupId":"1748","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNewInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/06/79937f34f16a75c0733dfd2e52e45ec7fbf4d1.src","preCode":"  public void testNewInput() throws IOException {\n    InputStream input = TEST_STRING.newInput();\n    assertEquals(\"InputStream.available() returns correct value\",\n        TEST_STRING.size(), input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : BYTES) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertEquals(\"InputStream.available() returns correct value\",\n        0, input.available());\n    assertTrue(CLASSNAME + \" must give the same bytes from the InputStream\", stillEqual);\n    assertEquals(CLASSNAME + \" InputStream must now be exhausted\", -1, input.read());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/NioByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":470,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testNewInput() throws IOException {\n    InputStream input = stringUnderTest.newInput();\n    assertEquals(\"InputStream.available() returns correct value\",\n        stringUnderTest.size(), input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : referenceBytes) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertEquals(\"InputStream.available() returns correct value\",\n        0, input.available());\n    assertTrue(classUnderTest + \" must give the same bytes from the InputStream\", stillEqual);\n    assertEquals(classUnderTest + \" InputStream must now be exhausted\", -1, input.read());\n  }\n","date":"2016-01-14 03:22:18","endLine":438,"groupId":"1748","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c8/4956335e4c6be461a56be3d32960c6893af6f5.src","preCode":"  public void testNewInput() throws IOException {\n    InputStream input = stringUnderTest.newInput();\n    assertEquals(\"InputStream.available() returns correct value\",\n        stringUnderTest.size(), input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : referenceBytes) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertEquals(\"InputStream.available() returns correct value\",\n        0, input.available());\n    assertTrue(classUnderTest + \" must give the same bytes from the InputStream\", stillEqual);\n    assertEquals(classUnderTest + \" InputStream must now be exhausted\", -1, input.read());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-04-12 14:37:42","commitOrder":2,"curCode":"  public void testNewInput() throws IOException {\n    InputStream input = testString.newInput();\n    assertEquals(\"InputStream.available() returns correct value\",\n        testString.size(), input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : BYTES) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertEquals(\"InputStream.available() returns correct value\",\n        0, input.available());\n    assertTrue(CLASSNAME + \" must give the same bytes from the InputStream\", stillEqual);\n    assertEquals(CLASSNAME + \" InputStream must now be exhausted\", -1, input.read());\n  }\n","date":"2016-04-12 14:37:42","endLine":557,"groupId":"1748","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNewInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/6b/e5b93c31e504983e49f47c8fce6d5abade1b39.src","preCode":"  public void testNewInput() throws IOException {\n    InputStream input = TEST_STRING.newInput();\n    assertEquals(\"InputStream.available() returns correct value\",\n        TEST_STRING.size(), input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : BYTES) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertEquals(\"InputStream.available() returns correct value\",\n        0, input.available());\n    assertTrue(CLASSNAME + \" must give the same bytes from the InputStream\", stillEqual);\n    assertEquals(CLASSNAME + \" InputStream must now be exhausted\", -1, input.read());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/NioByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":544,"status":"M"},{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testNewInput() throws IOException {\n    InputStream input = stringUnderTest.newInput();\n    assertEquals(\"InputStream.available() returns correct value\",\n        stringUnderTest.size(), input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : referenceBytes) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertEquals(\"InputStream.available() returns correct value\",\n        0, input.available());\n    assertTrue(classUnderTest + \" must give the same bytes from the InputStream\", stillEqual);\n    assertEquals(classUnderTest + \" InputStream must now be exhausted\", -1, input.read());\n  }\n","date":"2016-01-14 03:22:18","endLine":438,"groupId":"1748","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c8/4956335e4c6be461a56be3d32960c6893af6f5.src","preCode":"  public void testNewInput() throws IOException {\n    InputStream input = stringUnderTest.newInput();\n    assertEquals(\"InputStream.available() returns correct value\",\n        stringUnderTest.size(), input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : referenceBytes) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertEquals(\"InputStream.available() returns correct value\",\n        0, input.available());\n    assertTrue(classUnderTest + \" must give the same bytes from the InputStream\", stillEqual);\n    assertEquals(classUnderTest + \" InputStream must now be exhausted\", -1, input.read());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"N"}],"commitId":"814685ca2cd9280ca401e1842fd6311440921a0a","commitMessage":"@@@Merge pull request #1397 from google/internal-merge\n\nInternal merge","date":"2016-04-12 14:37:42","modifiedFileCount":"57","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testNewInput() throws IOException {\n    InputStream input = testString.newInput();\n    assertWithMessage(\"InputStream.available() returns correct value\")\n        .that(testString.size())\n        .isEqualTo(input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : BYTES) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertWithMessage(\"InputStream.available() returns correct value\")\n        .that(input.available())\n        .isEqualTo(0);\n    assertWithMessage(\"%s must give the same bytes from the InputStream\", CLASSNAME)\n        .that(stillEqual)\n        .isTrue();\n    assertWithMessage(\"%s InputStream must now be exhausted\", CLASSNAME)\n        .that(input.read())\n        .isEqualTo(-1);\n  }\n","date":"2021-08-10 06:55:00","endLine":668,"groupId":"10524","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testNewInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1f/1427142bb2e8ecd0e82902a8a97e2fedd983e2.src","preCode":"  public void testNewInput() throws IOException {\n    InputStream input = testString.newInput();\n    assertEquals(\n        \"InputStream.available() returns correct value\", testString.size(), input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : BYTES) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertEquals(\"InputStream.available() returns correct value\", 0, input.available());\n    assertTrue(CLASSNAME + \" must give the same bytes from the InputStream\", stillEqual);\n    assertEquals(CLASSNAME + \" InputStream must now be exhausted\", -1, input.read());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/NioByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":649,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testNewInput() throws IOException {\n    InputStream input = stringUnderTest.newInput();\n    assertWithMessage(\"InputStream.available() returns correct value\")\n        .that(stringUnderTest.size())\n        .isEqualTo(input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : referenceBytes) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertWithMessage(\"InputStream.available() returns correct value\")\n        .that(input.available())\n        .isEqualTo(0);\n    assertWithMessage(\"%s must give the same bytes from the InputStream\", classUnderTest)\n        .that(stillEqual)\n        .isTrue();\n    assertWithMessage(\"%s InputStream must now be exhausted\", classUnderTest)\n        .that(input.read())\n        .isEqualTo(-1);\n  }\n","date":"2021-08-10 06:55:00","endLine":588,"groupId":"10524","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testNewInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5e/c4a937bb40791b1a2e146759b90dc458c83203.src","preCode":"  public void testNewInput() throws IOException {\n    InputStream input = stringUnderTest.newInput();\n    assertEquals(\n        \"InputStream.available() returns correct value\", stringUnderTest.size(), input.available());\n    boolean stillEqual = true;\n    for (byte referenceByte : referenceBytes) {\n      int expectedInt = (referenceByte & 0xFF);\n      stillEqual = (expectedInt == input.read());\n    }\n    assertEquals(\"InputStream.available() returns correct value\", 0, input.available());\n    assertTrue(classUnderTest + \" must give the same bytes from the InputStream\", stillEqual);\n    assertEquals(classUnderTest + \" InputStream must now be exhausted\", -1, input.read());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":569,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
