[{"authorTime":"2016-09-21 06:25:01","codes":[{"authorDate":"2015-03-11 07:17:20","commitOrder":2,"curCode":"    public IRubyObject hash(ThreadContext context) {\n        try {\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n            for (IRubyObject key : table.keySet()) {\n                digest.update((byte) key.hashCode());\n                digest.update((byte) table.get(key).hashCode());\n            }\n            return context.runtime.newString(new ByteList(digest.digest()));\n        } catch (NoSuchAlgorithmException ignore) {\n            return context.runtime.newFixnum(System.identityHashCode(table));\n        }\n    }\n","date":"2015-03-11 07:17:20","endLine":238,"groupId":"779","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"hash","params":"(ThreadContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/b2/5dc6e1d6707313fa9f86899689bd0218f23eda.src","preCode":"    public IRubyObject hash(ThreadContext context) {\n        try {\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n            for (IRubyObject key : table.keySet()) {\n                digest.update((byte) key.hashCode());\n                digest.update((byte) table.get(key).hashCode());\n            }\n            return context.runtime.newString(new ByteList(digest.digest()));\n        } catch (NoSuchAlgorithmException ignore) {\n            return context.runtime.newFixnum(System.identityHashCode(table));\n        }\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyMap.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"NB"},{"authorDate":"2016-09-21 06:25:01","commitOrder":2,"curCode":"    public IRubyObject hash(ThreadContext context) {\n        try {\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n            for (RubyMap map : maps.values()) {\n                digest.update((byte) map.hashCode());\n            }\n            for (RubyRepeatedField repeatedField : repeatedFields.values()) {\n                digest.update((byte) repeatedFields.hashCode());\n            }\n            for (IRubyObject field : fields.values()) {\n                digest.update((byte) field.hashCode());\n            }\n            return context.runtime.newString(new ByteList(digest.digest()));\n        } catch (NoSuchAlgorithmException ignore) {\n            return context.runtime.newFixnum(System.identityHashCode(this));\n        }\n    }\n","date":"2016-09-21 06:25:01","endLine":184,"groupId":"1603","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"hash","params":"(ThreadContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/73/3ccfbc7dbc21123c350b75eca79d763fd9d86c.src","preCode":"    public IRubyObject hash(ThreadContext context) {\n        try {\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n            for (RubyMap map : maps.values()) {\n                digest.update((byte) map.hashCode());\n            }\n            for (RubyRepeatedField repeatedField : repeatedFields.values()) {\n                digest.update((byte) repeatedFields.hashCode());\n            }\n            for (IRubyObject field : fields.values()) {\n                digest.update((byte) field.hashCode());\n            }\n            return context.runtime.newString(new ByteList(digest.digest()));\n        } catch (NoSuchAlgorithmException ignore) {\n            return context.runtime.newFixnum(System.identityHashCode(this));\n        }\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyMessage.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"B"}],"commitId":"4f379f81cef4dd8e005fd0bcc9199bf842fc35d4","commitMessage":"@@@Merge pull request #2144 from abscondment/fix-jruby-hash\n\nFix hash computation for JRuby's RubyMessage","date":"2016-09-21 06:25:01","modifiedFileCount":"1","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2020-09-15 04:37:48","codes":[{"authorDate":"2020-09-15 04:37:48","commitOrder":3,"curCode":"    public IRubyObject hash(ThreadContext context) {\n        try {\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n            for (IRubyObject key : table.keySet()) {\n                digest.update((byte) key.hashCode());\n                digest.update((byte) table.get(key).hashCode());\n            }\n            return context.runtime.newFixnum(ByteBuffer.wrap(digest.digest()).getLong());\n        } catch (NoSuchAlgorithmException ignore) {\n            return context.runtime.newFixnum(System.identityHashCode(table));\n        }\n    }\n","date":"2020-12-12 08:02:41","endLine":245,"groupId":"1037","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"hash","params":"(ThreadContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/08/7f1cb4c133a0171aa3c96b47bbcdb83ab38d28.src","preCode":"    public IRubyObject hash(ThreadContext context) {\n        try {\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n            for (IRubyObject key : table.keySet()) {\n                digest.update((byte) key.hashCode());\n                digest.update((byte) table.get(key).hashCode());\n            }\n            return context.runtime.newString(new ByteList(digest.digest()));\n        } catch (NoSuchAlgorithmException ignore) {\n            return context.runtime.newFixnum(System.identityHashCode(table));\n        }\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyMap.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2020-09-15 04:37:48","commitOrder":3,"curCode":"    public IRubyObject hash(ThreadContext context) {\n        try {\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n            for (FieldDescriptor fd : descriptor.getFields()) {\n                digest.update((byte) getFieldInternal(context, fd).hashCode());\n            }\n            return context.runtime.newFixnum(ByteBuffer.wrap(digest.digest()).getLong());\n        } catch (NoSuchAlgorithmException ignore) {\n            return context.runtime.newFixnum(System.identityHashCode(this));\n        }\n    }\n","date":"2020-12-12 08:02:41","endLine":222,"groupId":"1037","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"hash","params":"(ThreadContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/11/0c5678693b048a3ec3ea26944df68bd08dd51e.src","preCode":"    public IRubyObject hash(ThreadContext context) {\n        try {\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n            for (RubyMap map : maps.values()) {\n                digest.update((byte) map.hashCode());\n            }\n            for (RubyRepeatedField repeatedField : repeatedFields.values()) {\n                digest.update((byte) repeatedFields.hashCode());\n            }\n            for (IRubyObject field : fields.values()) {\n                digest.update((byte) field.hashCode());\n            }\n            return context.runtime.newString(new ByteList(digest.digest()));\n        } catch (NoSuchAlgorithmException ignore) {\n            return context.runtime.newFixnum(System.identityHashCode(this));\n        }\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyMessage.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"M"}],"commitId":"8313e577e572566308eb5c3768ec9d2cd807658a","commitMessage":"@@@Fix ruby gem to work with JRuby\n","date":"2020-12-12 08:02:41","modifiedFileCount":"16","status":"M","submitter":"Rob Widmer"}]
