[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testFieldTypeTablesMatch() throws Exception {\n    FieldDescriptor.Type[] values1 = FieldDescriptor.Type.values();\n    WireFormat.FieldType[] values2 = WireFormat.FieldType.values();\n\n    assertEquals(values1.length, values2.length);\n\n    for (int i = 0; i < values1.length; i++) {\n      assertEquals(values1[i].toString(), values2[i].toString());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":424,"groupId":"671","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFieldTypeTablesMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/82/ff34afe3ec0a1ef56e8613b56beeb65bb8577c.src","preCode":"  public void testFieldTypeTablesMatch() throws Exception {\n    FieldDescriptor.Type[] values1 = FieldDescriptor.Type.values();\n    WireFormat.FieldType[] values2 = WireFormat.FieldType.values();\n\n    assertEquals(values1.length, values2.length);\n\n    for (int i = 0; i < values1.length; i++) {\n      assertEquals(values1[i].toString(), values2[i].toString());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/DescriptorsTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":415,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testJavaTypeTablesMatch() throws Exception {\n    FieldDescriptor.JavaType[] values1 = FieldDescriptor.JavaType.values();\n    WireFormat.JavaType[] values2 = WireFormat.JavaType.values();\n\n    assertEquals(values1.length, values2.length);\n\n    for (int i = 0; i < values1.length; i++) {\n      assertEquals(values1[i].toString(), values2[i].toString());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":439,"groupId":"671","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJavaTypeTablesMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/82/ff34afe3ec0a1ef56e8613b56beeb65bb8577c.src","preCode":"  public void testJavaTypeTablesMatch() throws Exception {\n    FieldDescriptor.JavaType[] values1 = FieldDescriptor.JavaType.values();\n    WireFormat.JavaType[] values2 = WireFormat.JavaType.values();\n\n    assertEquals(values1.length, values2.length);\n\n    for (int i = 0; i < values1.length; i++) {\n      assertEquals(values1[i].toString(), values2[i].toString());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/DescriptorsTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testFieldTypeTablesMatch() throws Exception {\n    FieldDescriptor.Type[] values1 = FieldDescriptor.Type.values();\n    WireFormat.FieldType[] values2 = WireFormat.FieldType.values();\n\n    assertThat(values1).hasLength(values2.length);\n\n    for (int i = 0; i < values1.length; i++) {\n      assertThat(values1[i].toString()).isEqualTo(values2[i].toString());\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":408,"groupId":"10455","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testFieldTypeTablesMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/6c/b0baebedb555d7eaab6bf944de11c970e32cb2.src","preCode":"  public void testFieldTypeTablesMatch() throws Exception {\n    FieldDescriptor.Type[] values1 = FieldDescriptor.Type.values();\n    WireFormat.FieldType[] values2 = WireFormat.FieldType.values();\n\n    assertEquals(values1.length, values2.length);\n\n    for (int i = 0; i < values1.length; i++) {\n      assertEquals(values1[i].toString(), values2[i].toString());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/DescriptorsTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testJavaTypeTablesMatch() throws Exception {\n    FieldDescriptor.JavaType[] values1 = FieldDescriptor.JavaType.values();\n    WireFormat.JavaType[] values2 = WireFormat.JavaType.values();\n\n    assertThat(values1).hasLength(values2.length);\n\n    for (int i = 0; i < values1.length; i++) {\n      assertThat(values1[i].toString()).isEqualTo(values2[i].toString());\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":421,"groupId":"10455","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testJavaTypeTablesMatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/6c/b0baebedb555d7eaab6bf944de11c970e32cb2.src","preCode":"  public void testJavaTypeTablesMatch() throws Exception {\n    FieldDescriptor.JavaType[] values1 = FieldDescriptor.JavaType.values();\n    WireFormat.JavaType[] values2 = WireFormat.JavaType.values();\n\n    assertEquals(values1.length, values2.length);\n\n    for (int i = 0; i < values1.length; i++) {\n      assertEquals(values1[i].toString(), values2[i].toString());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/DescriptorsTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":412,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
