[{"authorTime":"2015-05-15 01:55:35","codes":[{"authorDate":"2015-03-11 07:17:20","commitOrder":2,"curCode":"    public IRubyObject plus(ThreadContext context, IRubyObject list) {\n        RubyRepeatedField dup = (RubyRepeatedField) dup(context);\n        if (list instanceof RubyArray) {\n            checkArrayElementType(context, (RubyArray) list);\n            dup.storage.addAll((RubyArray) list);\n        } else {\n            RubyRepeatedField repeatedField = (RubyRepeatedField) list;\n            if (! fieldType.equals(repeatedField.fieldType) || (typeClass != null && !\n                    typeClass.equals(repeatedField.typeClass)))\n                throw context.runtime.newArgumentError(\"Attempt to append RepeatedField with different element type.\");\n            dup.storage.addAll((RubyArray) repeatedField.toArray(context));\n        }\n        return dup;\n    }\n","date":"2015-03-11 07:17:20","endLine":229,"groupId":"2116","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"plus","params":"(ThreadContextcontext@IRubyObjectlist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/97/88317a5f8bbb0949afe6e7dc908876adad3377.src","preCode":"    public IRubyObject plus(ThreadContext context, IRubyObject list) {\n        RubyRepeatedField dup = (RubyRepeatedField) dup(context);\n        if (list instanceof RubyArray) {\n            checkArrayElementType(context, (RubyArray) list);\n            dup.storage.addAll((RubyArray) list);\n        } else {\n            RubyRepeatedField repeatedField = (RubyRepeatedField) list;\n            if (! fieldType.equals(repeatedField.fieldType) || (typeClass != null && !\n                    typeClass.equals(repeatedField.typeClass)))\n                throw context.runtime.newArgumentError(\"Attempt to append RepeatedField with different element type.\");\n            dup.storage.addAll((RubyArray) repeatedField.toArray(context));\n        }\n        return dup;\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyRepeatedField.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"NB"},{"authorDate":"2015-05-15 01:55:35","commitOrder":2,"curCode":"    public IRubyObject concat(ThreadContext context, IRubyObject list) {\n        if (list instanceof RubyArray) {\n            checkArrayElementType(context, (RubyArray) list);\n            this.storage.addAll((RubyArray) list);\n        } else {\n            RubyRepeatedField repeatedField = (RubyRepeatedField) list;\n            if (! fieldType.equals(repeatedField.fieldType) || (typeClass != null && !\n                    typeClass.equals(repeatedField.typeClass)))\n                throw context.runtime.newArgumentError(\"Attempt to append RepeatedField with different element type.\");\n            this.storage.addAll((RubyArray) repeatedField.toArray(context));\n        }\n        return this.storage;\n    }\n","date":"2015-05-15 01:55:35","endLine":265,"groupId":"2116","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"concat","params":"(ThreadContextcontext@IRubyObjectlist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/94/6f9e7468bbf0df3a50d860037e305f474c7838.src","preCode":"    public IRubyObject concat(ThreadContext context, IRubyObject list) {\n        if (list instanceof RubyArray) {\n            checkArrayElementType(context, (RubyArray) list);\n            this.storage.addAll((RubyArray) list);\n        } else {\n            RubyRepeatedField repeatedField = (RubyRepeatedField) list;\n            if (! fieldType.equals(repeatedField.fieldType) || (typeClass != null && !\n                    typeClass.equals(repeatedField.typeClass)))\n                throw context.runtime.newArgumentError(\"Attempt to append RepeatedField with different element type.\");\n            this.storage.addAll((RubyArray) repeatedField.toArray(context));\n        }\n        return this.storage;\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyRepeatedField.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"B"}],"commitId":"b481a4f920d2f5872bc1e9bfd6b0656f6ad0b713","commitMessage":"@@@Merge pull request #340 from skippy/add-array-like-methods\n\nruby: make repeated_field quack like an array","date":"2015-05-15 01:55:35","modifiedFileCount":"2","status":"M","submitter":"Chris Fallin"},{"authorTime":"2020-09-15 04:37:48","codes":[{"authorDate":"2015-03-11 07:17:20","commitOrder":3,"curCode":"    public IRubyObject plus(ThreadContext context, IRubyObject list) {\n        RubyRepeatedField dup = (RubyRepeatedField) dup(context);\n        if (list instanceof RubyArray) {\n            checkArrayElementType(context, (RubyArray) list);\n            dup.storage.addAll((RubyArray) list);\n        } else {\n            RubyRepeatedField repeatedField = (RubyRepeatedField) list;\n            if (! fieldType.equals(repeatedField.fieldType) || (typeClass != null && !\n                    typeClass.equals(repeatedField.typeClass)))\n                throw context.runtime.newArgumentError(\"Attempt to append RepeatedField with different element type.\");\n            dup.storage.addAll((RubyArray) repeatedField.toArray(context));\n        }\n        return dup;\n    }\n","date":"2015-03-11 07:17:20","endLine":229,"groupId":"1065","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"plus","params":"(ThreadContextcontext@IRubyObjectlist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/97/88317a5f8bbb0949afe6e7dc908876adad3377.src","preCode":"    public IRubyObject plus(ThreadContext context, IRubyObject list) {\n        RubyRepeatedField dup = (RubyRepeatedField) dup(context);\n        if (list instanceof RubyArray) {\n            checkArrayElementType(context, (RubyArray) list);\n            dup.storage.addAll((RubyArray) list);\n        } else {\n            RubyRepeatedField repeatedField = (RubyRepeatedField) list;\n            if (! fieldType.equals(repeatedField.fieldType) || (typeClass != null && !\n                    typeClass.equals(repeatedField.typeClass)))\n                throw context.runtime.newArgumentError(\"Attempt to append RepeatedField with different element type.\");\n            dup.storage.addAll((RubyArray) repeatedField.toArray(context));\n        }\n        return dup;\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyRepeatedField.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"N"},{"authorDate":"2020-09-15 04:37:48","commitOrder":3,"curCode":"    public IRubyObject concat(ThreadContext context, IRubyObject list) {\n        if (list instanceof RubyArray) {\n            checkArrayElementType(context, (RubyArray) list);\n            this.storage.addAll((RubyArray) list);\n        } else {\n            RubyRepeatedField repeatedField = (RubyRepeatedField) list;\n            if (! fieldType.equals(repeatedField.fieldType) || (typeClass != null && !\n                    typeClass.equals(repeatedField.typeClass)))\n                throw context.runtime.newArgumentError(\"Attempt to append RepeatedField with different element type.\");\n            this.storage.addAll((RubyArray) repeatedField.toArray(context));\n        }\n        return this;\n    }\n","date":"2020-12-12 08:02:41","endLine":271,"groupId":"1065","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"concat","params":"(ThreadContextcontext@IRubyObjectlist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/99/5171fc7b2e466553712973e8959a47c634e8ba.src","preCode":"    public IRubyObject concat(ThreadContext context, IRubyObject list) {\n        if (list instanceof RubyArray) {\n            checkArrayElementType(context, (RubyArray) list);\n            this.storage.addAll((RubyArray) list);\n        } else {\n            RubyRepeatedField repeatedField = (RubyRepeatedField) list;\n            if (! fieldType.equals(repeatedField.fieldType) || (typeClass != null && !\n                    typeClass.equals(repeatedField.typeClass)))\n                throw context.runtime.newArgumentError(\"Attempt to append RepeatedField with different element type.\");\n            this.storage.addAll((RubyArray) repeatedField.toArray(context));\n        }\n        return this.storage;\n    }\n","realPath":"ruby/src/main/java/com/google/protobuf/jruby/RubyRepeatedField.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"}],"commitId":"8313e577e572566308eb5c3768ec9d2cd807658a","commitMessage":"@@@Fix ruby gem to work with JRuby\n","date":"2020-12-12 08:02:41","modifiedFileCount":"16","status":"M","submitter":"Rob Widmer"}]
