[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testSkipRawBytesBug() throws Exception {\n    byte[] rawBytes = new byte[] { 1, 2 };\n    CodedInputStream input = CodedInputStream.newInstance(rawBytes);\n\n    int limit = input.pushLimit(1);\n    input.skipRawBytes(1);\n    input.popLimit(limit);\n    assertEquals(2, input.readRawByte());\n  }\n","date":"2016-01-14 03:22:18","endLine":366,"groupId":"1154","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSkipRawBytesBug","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/18/d8142c90277ab839cdd5f4003c1088a60e89f1.src","preCode":"  public void testSkipRawBytesBug() throws Exception {\n    byte[] rawBytes = new byte[] { 1, 2 };\n    CodedInputStream input = CodedInputStream.newInstance(rawBytes);\n\n    int limit = input.pushLimit(1);\n    input.skipRawBytes(1);\n    input.popLimit(limit);\n    assertEquals(2, input.readRawByte());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testSkipRawBytesPastEndOfBufferWithLimit() throws Exception {\n    byte[] rawBytes = new byte[] { 1, 2, 3, 4, 5 };\n    CodedInputStream input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(rawBytes, 3));\n\n    int limit = input.pushLimit(4);\n    \r\n    \r\n    assertEquals(1, input.readRawByte());\n    \r\n    input.skipRawBytes(3);\n    assertTrue(input.isAtEnd());\n    input.popLimit(limit);\n    assertEquals(5, input.readRawByte());\n  }\n","date":"2016-01-14 03:22:18","endLine":387,"groupId":"1154","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSkipRawBytesPastEndOfBufferWithLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/18/d8142c90277ab839cdd5f4003c1088a60e89f1.src","preCode":"  public void testSkipRawBytesPastEndOfBufferWithLimit() throws Exception {\n    byte[] rawBytes = new byte[] { 1, 2, 3, 4, 5 };\n    CodedInputStream input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(rawBytes, 3));\n\n    int limit = input.pushLimit(4);\n    \r\n    \r\n    assertEquals(1, input.readRawByte());\n    \r\n    input.skipRawBytes(3);\n    assertTrue(input.isAtEnd());\n    input.popLimit(limit);\n    assertEquals(5, input.readRawByte());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":373,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2016-10-11 04:58:39","codes":[{"authorDate":"2016-10-11 04:58:39","commitOrder":2,"curCode":"  public void testSkipRawBytesBug() throws Exception {\n    byte[] rawBytes = new byte[] {1, 2};\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawBytes);\n      int limit = input.pushLimit(1);\n      input.skipRawBytes(1);\n      input.popLimit(limit);\n      assertEquals(inputType.name(), 2, input.readRawByte());\n    }\n  }\n","date":"2016-10-11 04:58:39","endLine":372,"groupId":"460","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSkipRawBytesBug","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e2/ab0df998bbb3a683f9650866ccf589a205c2e9.src","preCode":"  public void testSkipRawBytesBug() throws Exception {\n    byte[] rawBytes = new byte[] { 1, 2 };\n    CodedInputStream input = CodedInputStream.newInstance(rawBytes);\n\n    int limit = input.pushLimit(1);\n    input.skipRawBytes(1);\n    input.popLimit(limit);\n    assertEquals(2, input.readRawByte());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":363,"status":"M"},{"authorDate":"2016-10-11 04:58:39","commitOrder":2,"curCode":"  public void testSkipRawBytesPastEndOfBufferWithLimit() throws Exception {\n    byte[] rawBytes = new byte[] {1, 2, 3, 4, 5};\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawBytes);\n      int limit = input.pushLimit(4);\n      \r\n      \r\n      assertEquals(inputType.name(), 1, input.readRawByte());\n      \r\n      input.skipRawBytes(3);\n      assertTrue(inputType.name(), input.isAtEnd());\n      input.popLimit(limit);\n      assertEquals(inputType.name(), 5, input.readRawByte());\n    }\n  }\n","date":"2016-10-11 04:58:39","endLine":392,"groupId":"1856","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSkipRawBytesPastEndOfBufferWithLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e2/ab0df998bbb3a683f9650866ccf589a205c2e9.src","preCode":"  public void testSkipRawBytesPastEndOfBufferWithLimit() throws Exception {\n    byte[] rawBytes = new byte[] { 1, 2, 3, 4, 5 };\n    CodedInputStream input = CodedInputStream.newInstance(\n        new SmallBlockInputStream(rawBytes, 3));\n\n    int limit = input.pushLimit(4);\n    \r\n    \r\n    assertEquals(1, input.readRawByte());\n    \r\n    input.skipRawBytes(3);\n    assertTrue(input.isAtEnd());\n    input.popLimit(limit);\n    assertEquals(5, input.readRawByte());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"}],"commitId":"fd046f6263fb17383cafdbb25c361e3451c31105","commitMessage":"@@@Merge pull request #2234 from TeBoring/master\n\nMerge 3.1.x branch into master.","date":"2016-10-11 04:58:39","modifiedFileCount":"60","status":"M","submitter":"Paul Yang"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testSkipRawBytesBug() throws Exception {\n    byte[] rawBytes = new byte[] {1, 2};\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawBytes);\n      int limit = input.pushLimit(1);\n      input.skipRawBytes(1);\n      input.popLimit(limit);\n      assertWithMessage(inputType.name()).that(input.readRawByte()).isEqualTo(2);\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":442,"groupId":"10383","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testSkipRawBytesBug","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f5/bb31fdf4e56a7d7c9a0216487f8ea23213971b.src","preCode":"  public void testSkipRawBytesBug() throws Exception {\n    byte[] rawBytes = new byte[] {1, 2};\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawBytes);\n      int limit = input.pushLimit(1);\n      input.skipRawBytes(1);\n      input.popLimit(limit);\n      assertEquals(inputType.name(), 2, input.readRawByte());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":433,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testSkipRawBytesPastEndOfBufferWithLimit() throws Exception {\n    byte[] rawBytes = new byte[] {1, 2, 3, 4, 5};\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawBytes);\n      int limit = input.pushLimit(4);\n      \r\n      \r\n      assertWithMessage(inputType.name()).that(input.readRawByte()).isEqualTo(1);\n      \r\n      input.skipRawBytes(3);\n      assertWithMessage(inputType.name()).that(input.isAtEnd()).isTrue();\n      input.popLimit(limit);\n      assertWithMessage(inputType.name()).that(input.readRawByte()).isEqualTo(5);\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":463,"groupId":"10383","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testSkipRawBytesPastEndOfBufferWithLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f5/bb31fdf4e56a7d7c9a0216487f8ea23213971b.src","preCode":"  public void testSkipRawBytesPastEndOfBufferWithLimit() throws Exception {\n    byte[] rawBytes = new byte[] {1, 2, 3, 4, 5};\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawBytes);\n      int limit = input.pushLimit(4);\n      \r\n      \r\n      assertEquals(inputType.name(), 1, input.readRawByte());\n      \r\n      input.skipRawBytes(3);\n      assertTrue(inputType.name(), input.isAtEnd());\n      input.popLimit(limit);\n      assertEquals(inputType.name(), 5, input.readRawByte());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":449,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
