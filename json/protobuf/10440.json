[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  private void assertParseError(String error, String text) {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    try {\n      TextFormat.merge(text, TestUtil.getExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":462,"groupId":"1753","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertParseError","params":"(Stringerror@Stringtext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1d/f4fad778dd3dcac9990e0ae573770c7409d033.src","preCode":"  private void assertParseError(String error, String text) {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    try {\n      TextFormat.merge(text, TestUtil.getExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testOneofOverwriteForbidden() throws Exception {\n    String input = \"foo_string: \\\"stringvalue\\\" foo_int: 123\";\n    TestOneof2.Builder builder = TestOneof2.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(\n          input, TestUtil.getExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\"1:36: Field \\\"protobuf_unittest.TestOneof2.foo_int\\\"\"\n                   + \" is specified along with field \\\"protobuf_unittest.TestOneof2.foo_string\\\",\"\n                   + \" another member of oneof \\\"foo\\\".\", e.getMessage());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":1010,"groupId":"649","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOneofOverwriteForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1d/f4fad778dd3dcac9990e0ae573770c7409d033.src","preCode":"  public void testOneofOverwriteForbidden() throws Exception {\n    String input = \"foo_string: \\\"stringvalue\\\" foo_int: 123\";\n    TestOneof2.Builder builder = TestOneof2.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(\n          input, TestUtil.getExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\"1:36: Field \\\"protobuf_unittest.TestOneof2.foo_int\\\"\"\n                   + \" is specified along with field \\\"protobuf_unittest.TestOneof2.foo_string\\\",\"\n                   + \" another member of oneof \\\"foo\\\".\", e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":998,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2017-12-06 05:02:36","commitOrder":2,"curCode":"  private void assertParseError(String error, String text) {\n    \r\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    try {\n      TextFormat.merge(text, TestUtil.getExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n\n    \r\n    try {\n      TextFormat.parse(\n          text, TestUtil.getExtensionRegistry(), TestAllTypes.class);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n  }\n","date":"2017-12-06 05:02:36","endLine":541,"groupId":"1753","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertParseError","params":"(Stringerror@Stringtext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5d/38ca511cae02cd65be960d5f04434e17eb69c3.src","preCode":"  private void assertParseError(String error, String text) {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    try {\n      TextFormat.merge(text, TestUtil.getExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":523,"status":"M"},{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testOneofOverwriteForbidden() throws Exception {\n    String input = \"foo_string: \\\"stringvalue\\\" foo_int: 123\";\n    TestOneof2.Builder builder = TestOneof2.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(\n          input, TestUtil.getExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\"1:36: Field \\\"protobuf_unittest.TestOneof2.foo_int\\\"\"\n                   + \" is specified along with field \\\"protobuf_unittest.TestOneof2.foo_string\\\",\"\n                   + \" another member of oneof \\\"foo\\\".\", e.getMessage());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":1010,"groupId":"649","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOneofOverwriteForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1d/f4fad778dd3dcac9990e0ae573770c7409d033.src","preCode":"  public void testOneofOverwriteForbidden() throws Exception {\n    String input = \"foo_string: \\\"stringvalue\\\" foo_int: 123\";\n    TestOneof2.Builder builder = TestOneof2.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(\n          input, TestUtil.getExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\"1:36: Field \\\"protobuf_unittest.TestOneof2.foo_int\\\"\"\n                   + \" is specified along with field \\\"protobuf_unittest.TestOneof2.foo_string\\\",\"\n                   + \" another member of oneof \\\"foo\\\".\", e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":998,"status":"N"}],"commitId":"9021f623e1420f513268a01a5ad43a23618a84ba","commitMessage":"@@@Merge pull request #3988 from acozzette/down-integrate\n\nIntegrated internal changes from Google","date":"2017-12-06 05:02:36","modifiedFileCount":"11","status":"M","submitter":"Adam Cozzette"},{"authorTime":"2018-08-09 08:00:41","codes":[{"authorDate":"2018-08-09 08:00:41","commitOrder":3,"curCode":"  private void assertParseError(String error, String text) {\n    \r\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    try {\n      TextFormat.merge(text, TestUtil.getFullExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n\n    \r\n    try {\n      TextFormat.parse(text, TestUtil.getFullExtensionRegistry(), TestAllTypes.class);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n  }\n","date":"2018-08-09 08:00:41","endLine":536,"groupId":"1753","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertParseError","params":"(Stringerror@Stringtext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/24/d5589f80031e8669f3d0469c554fec750449fb.src","preCode":"  private void assertParseError(String error, String text) {\n    \r\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    try {\n      TextFormat.merge(text, TestUtil.getExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n\n    \r\n    try {\n      TextFormat.parse(\n          text, TestUtil.getExtensionRegistry(), TestAllTypes.class);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":519,"status":"M"},{"authorDate":"2018-08-09 08:00:41","commitOrder":3,"curCode":"  public void testOneofOverwriteForbidden() throws Exception {\n    String input = \"foo_string: \\\"stringvalue\\\" foo_int: 123\";\n    TestOneof2.Builder builder = TestOneof2.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(input, TestUtil.getFullExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\"1:36: Field \\\"protobuf_unittest.TestOneof2.foo_int\\\"\"\n                   + \" is specified along with field \\\"protobuf_unittest.TestOneof2.foo_string\\\",\"\n                   + \" another member of oneof \\\"foo\\\".\", e.getMessage());\n    }\n  }\n","date":"2018-08-09 08:00:41","endLine":1122,"groupId":"649","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testOneofOverwriteForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/24/d5589f80031e8669f3d0469c554fec750449fb.src","preCode":"  public void testOneofOverwriteForbidden() throws Exception {\n    String input = \"foo_string: \\\"stringvalue\\\" foo_int: 123\";\n    TestOneof2.Builder builder = TestOneof2.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(\n          input, TestUtil.getExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\"1:36: Field \\\"protobuf_unittest.TestOneof2.foo_int\\\"\"\n                   + \" is specified along with field \\\"protobuf_unittest.TestOneof2.foo_string\\\",\"\n                   + \" another member of oneof \\\"foo\\\".\", e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1111,"status":"M"}],"commitId":"6bbe197e9c1b6fc38cbdc45e3bf83fa7ced792a3","commitMessage":"@@@Down-integrate from google3.\n","date":"2018-08-09 08:00:41","modifiedFileCount":"41","status":"M","submitter":"Feng Xiao"},{"authorTime":"2018-11-13 05:55:00","codes":[{"authorDate":"2018-08-09 08:00:41","commitOrder":4,"curCode":"  private void assertParseError(String error, String text) {\n    \r\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    try {\n      TextFormat.merge(text, TestUtil.getFullExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n\n    \r\n    try {\n      TextFormat.parse(text, TestUtil.getFullExtensionRegistry(), TestAllTypes.class);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n  }\n","date":"2018-08-09 08:00:41","endLine":536,"groupId":"1753","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertParseError","params":"(Stringerror@Stringtext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/24/d5589f80031e8669f3d0469c554fec750449fb.src","preCode":"  private void assertParseError(String error, String text) {\n    \r\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    try {\n      TextFormat.merge(text, TestUtil.getFullExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n\n    \r\n    try {\n      TextFormat.parse(text, TestUtil.getFullExtensionRegistry(), TestAllTypes.class);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":519,"status":"N"},{"authorDate":"2018-11-13 05:55:00","commitOrder":4,"curCode":"  public void testOneofOverwriteForbidden() throws Exception {\n    String input = \"foo_string: \\\"stringvalue\\\" foo_int: 123\";\n    TestOneof2.Builder builder = TestOneof2.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(input, TestUtil.getFullExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\n          \"1:34: Field \\\"protobuf_unittest.TestOneof2.foo_int\\\"\"\n              + \" is specified along with field \\\"protobuf_unittest.TestOneof2.foo_string\\\",\"\n              + \" another member of oneof \\\"foo\\\".\",\n          e.getMessage());\n    }\n  }\n","date":"2018-11-13 05:55:00","endLine":1120,"groupId":"649","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testOneofOverwriteForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/2f/ad0b957e7b013a39b94b78b03f47bbd3976dc9.src","preCode":"  public void testOneofOverwriteForbidden() throws Exception {\n    String input = \"foo_string: \\\"stringvalue\\\" foo_int: 123\";\n    TestOneof2.Builder builder = TestOneof2.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(input, TestUtil.getFullExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\n          \"1:36: Field \\\"protobuf_unittest.TestOneof2.foo_int\\\"\"\n              + \" is specified along with field \\\"protobuf_unittest.TestOneof2.foo_string\\\",\"\n              + \" another member of oneof \\\"foo\\\".\",\n          e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1107,"status":"M"}],"commitId":"46a48e49aa8357bbeee8040819a35e59880e329a","commitMessage":"@@@Merge pull request #5332 from acozzette/integrate\n\nIntegrated internal changes from Google","date":"2018-11-13 05:55:00","modifiedFileCount":"44","status":"M","submitter":"Adam Cozzette"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":5,"curCode":"  private void assertParseError(String error, String text) {\n    \r\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    try {\n      TextFormat.merge(text, TestUtil.getFullExtensionRegistry(), builder);\n      assertWithMessage(\"Expected parse exception.\").fail();\n    } catch (TextFormat.ParseException e) {\n      assertThat(e).hasMessageThat().isEqualTo(error);\n    }\n\n    \r\n    try {\n      TextFormat.parse(text, TestUtil.getFullExtensionRegistry(), TestAllTypes.class);\n      assertWithMessage(\"Expected parse exception.\").fail();\n    } catch (TextFormat.ParseException e) {\n      assertThat(e).hasMessageThat().isEqualTo(error);\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":776,"groupId":"10440","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertParseError","params":"(Stringerror@Stringtext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/568e1df5e2a4320fcad1e8090fffc838e50ebb.src","preCode":"  private void assertParseError(String error, String text) {\n    \r\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    try {\n      TextFormat.merge(text, TestUtil.getFullExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n\n    \r\n    try {\n      TextFormat.parse(text, TestUtil.getFullExtensionRegistry(), TestAllTypes.class);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(error, e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":759,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":5,"curCode":"  public void testOneofOverwriteForbidden() throws Exception {\n    String input = \"foo_string: \\\"stringvalue\\\" foo_int: 123\";\n    TestOneof2.Builder builder = TestOneof2.newBuilder();\n    try {\n      PARSER_WITH_OVERWRITE_FORBIDDEN.merge(input, TestUtil.getFullExtensionRegistry(), builder);\n      assertWithMessage(\"Expected parse exception.\").fail();\n    } catch (TextFormat.ParseException e) {\n      assertThat(e)\n          .hasMessageThat()\n          .isEqualTo(\n              \"1:34: Field \\\"protobuf_unittest.TestOneof2.foo_int\\\"\"\n                  + \" is specified along with field \\\"protobuf_unittest.TestOneof2.foo_string\\\",\"\n                  + \" another member of oneof \\\"foo\\\".\");\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":1515,"groupId":"10440","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testOneofOverwriteForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/568e1df5e2a4320fcad1e8090fffc838e50ebb.src","preCode":"  public void testOneofOverwriteForbidden() throws Exception {\n    String input = \"foo_string: \\\"stringvalue\\\" foo_int: 123\";\n    TestOneof2.Builder builder = TestOneof2.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(input, TestUtil.getFullExtensionRegistry(), builder);\n      fail(\"Expected parse exception.\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\n          \"1:34: Field \\\"protobuf_unittest.TestOneof2.foo_int\\\"\"\n              + \" is specified along with field \\\"protobuf_unittest.TestOneof2.foo_string\\\",\"\n              + \" another member of oneof \\\"foo\\\".\",\n          e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1501,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
