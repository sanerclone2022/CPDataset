[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = TEST_STRING.iterator();\n    for (int i = 0; stillEqual && i < BYTES.length; ++i) {\n      stillEqual = (iter.hasNext() && BYTES[i] == iter.nextByte());\n    }\n    assertTrue(CLASSNAME + \" must capture the right bytes\", stillEqual);\n    assertFalse(CLASSNAME + \" must have exhausted the itertor\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":97,"groupId":"1531","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testByteIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/06/79937f34f16a75c0733dfd2e52e45ec7fbf4d1.src","preCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = TEST_STRING.iterator();\n    for (int i = 0; stillEqual && i < BYTES.length; ++i) {\n      stillEqual = (iter.hasNext() && BYTES[i] == iter.nextByte());\n    }\n    assertTrue(CLASSNAME + \" must capture the right bytes\", stillEqual);\n    assertFalse(CLASSNAME + \" must have exhausted the itertor\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/NioByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = stringUnderTest.iterator();\n    for (int i = 0; stillEqual && i < referenceBytes.length; ++i) {\n      stillEqual = (iter.hasNext() && referenceBytes[i] == iter.nextByte());\n    }\n    assertTrue(classUnderTest + \" must capture the right bytes\", stillEqual);\n    assertFalse(classUnderTest + \" must have exhausted the itertor\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":106,"groupId":"1531","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testByteIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c8/4956335e4c6be461a56be3d32960c6893af6f5.src","preCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = stringUnderTest.iterator();\n    for (int i = 0; stillEqual && i < referenceBytes.length; ++i) {\n      stillEqual = (iter.hasNext() && referenceBytes[i] == iter.nextByte());\n    }\n    assertTrue(classUnderTest + \" must capture the right bytes\", stillEqual);\n    assertFalse(classUnderTest + \" must have exhausted the itertor\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-04-12 14:37:42","commitOrder":2,"curCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = testString.iterator();\n    for (int i = 0; stillEqual && i < BYTES.length; ++i) {\n      stillEqual = (iter.hasNext() && BYTES[i] == iter.nextByte());\n    }\n    assertTrue(CLASSNAME + \" must capture the right bytes\", stillEqual);\n    assertFalse(CLASSNAME + \" must have exhausted the itertor\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","date":"2016-04-12 14:37:42","endLine":98,"groupId":"1531","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testByteIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/6b/e5b93c31e504983e49f47c8fce6d5abade1b39.src","preCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = TEST_STRING.iterator();\n    for (int i = 0; stillEqual && i < BYTES.length; ++i) {\n      stillEqual = (iter.hasNext() && BYTES[i] == iter.nextByte());\n    }\n    assertTrue(CLASSNAME + \" must capture the right bytes\", stillEqual);\n    assertFalse(CLASSNAME + \" must have exhausted the itertor\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/NioByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = stringUnderTest.iterator();\n    for (int i = 0; stillEqual && i < referenceBytes.length; ++i) {\n      stillEqual = (iter.hasNext() && referenceBytes[i] == iter.nextByte());\n    }\n    assertTrue(classUnderTest + \" must capture the right bytes\", stillEqual);\n    assertFalse(classUnderTest + \" must have exhausted the itertor\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":106,"groupId":"1531","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testByteIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c8/4956335e4c6be461a56be3d32960c6893af6f5.src","preCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = stringUnderTest.iterator();\n    for (int i = 0; stillEqual && i < referenceBytes.length; ++i) {\n      stillEqual = (iter.hasNext() && referenceBytes[i] == iter.nextByte());\n    }\n    assertTrue(classUnderTest + \" must capture the right bytes\", stillEqual);\n    assertFalse(classUnderTest + \" must have exhausted the itertor\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"}],"commitId":"814685ca2cd9280ca401e1842fd6311440921a0a","commitMessage":"@@@Merge pull request #1397 from google/internal-merge\n\nInternal merge","date":"2016-04-12 14:37:42","modifiedFileCount":"57","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2020-01-09 02:18:20","codes":[{"authorDate":"2020-01-09 02:18:20","commitOrder":3,"curCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = testString.iterator();\n    for (int i = 0; stillEqual && i < BYTES.length; ++i) {\n      stillEqual = (iter.hasNext() && BYTES[i] == iter.nextByte());\n    }\n    assertTrue(CLASSNAME + \" must capture the right bytes\", stillEqual);\n    assertFalse(CLASSNAME + \" must have exhausted the iterator\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","date":"2020-01-09 02:18:20","endLine":95,"groupId":"1531","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testByteIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/48/9bb7c10283c862d29bfb532c2756ad188993b5.src","preCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = testString.iterator();\n    for (int i = 0; stillEqual && i < BYTES.length; ++i) {\n      stillEqual = (iter.hasNext() && BYTES[i] == iter.nextByte());\n    }\n    assertTrue(CLASSNAME + \" must capture the right bytes\", stillEqual);\n    assertFalse(CLASSNAME + \" must have exhausted the itertor\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/NioByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2020-01-09 02:18:20","commitOrder":3,"curCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = stringUnderTest.iterator();\n    for (int i = 0; stillEqual && i < referenceBytes.length; ++i) {\n      stillEqual = (iter.hasNext() && referenceBytes[i] == iter.nextByte());\n    }\n    assertTrue(classUnderTest + \" must capture the right bytes\", stillEqual);\n    assertFalse(classUnderTest + \" must have exhausted the iterator\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","date":"2020-01-09 02:18:20","endLine":105,"groupId":"1531","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testByteIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/9f/64b6baba70137bf913ff4153e09f0d7aa290f1.src","preCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = stringUnderTest.iterator();\n    for (int i = 0; stillEqual && i < referenceBytes.length; ++i) {\n      stillEqual = (iter.hasNext() && referenceBytes[i] == iter.nextByte());\n    }\n    assertTrue(classUnderTest + \" must capture the right bytes\", stillEqual);\n    assertFalse(classUnderTest + \" must have exhausted the itertor\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"a104dffcb6b1958a424f5fa6f9e6bdc0ab9b6f9e","commitMessage":"@@@Fix typos (#7050)\n\nUses https://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings/For_machines to find likely typos.  with https://github.com/bwignall/typochecker to help automate the checking.","date":"2020-01-09 02:18:20","modifiedFileCount":"13","status":"M","submitter":"Brian Wignall"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":4,"curCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = testString.iterator();\n    for (int i = 0; stillEqual && i < BYTES.length; ++i) {\n      stillEqual = (iter.hasNext() && BYTES[i] == iter.nextByte());\n    }\n    assertWithMessage(\"%s must capture the right bytes\", CLASSNAME).that(stillEqual).isTrue();\n    assertWithMessage(\"%s must have exhausted the iterator\", CLASSNAME)\n        .that(iter.hasNext())\n        .isFalse();\n\n    try {\n      iter.nextByte();\n      assertWithMessage(\"Should have thrown an exception.\").fail();\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":107,"groupId":"10515","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testByteIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1f/1427142bb2e8ecd0e82902a8a97e2fedd983e2.src","preCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = testString.iterator();\n    for (int i = 0; stillEqual && i < BYTES.length; ++i) {\n      stillEqual = (iter.hasNext() && BYTES[i] == iter.nextByte());\n    }\n    assertTrue(CLASSNAME + \" must capture the right bytes\", stillEqual);\n    assertFalse(CLASSNAME + \" must have exhausted the iterator\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/NioByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":4,"curCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = stringUnderTest.iterator();\n    for (int i = 0; stillEqual && i < referenceBytes.length; ++i) {\n      stillEqual = (iter.hasNext() && referenceBytes[i] == iter.nextByte());\n    }\n    assertWithMessage(\"%s must capture the right bytes\", classUnderTest).that(stillEqual).isTrue();\n    assertWithMessage(\"%s must have exhausted the iterator\", classUnderTest)\n        .that(iter.hasNext())\n        .isFalse();\n\n    try {\n      iter.nextByte();\n      assertWithMessage(\"Should have thrown an exception.\").fail();\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":115,"groupId":"10515","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testByteIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5e/c4a937bb40791b1a2e146759b90dc458c83203.src","preCode":"  public void testByteIterator() {\n    boolean stillEqual = true;\n    ByteString.ByteIterator iter = stringUnderTest.iterator();\n    for (int i = 0; stillEqual && i < referenceBytes.length; ++i) {\n      stillEqual = (iter.hasNext() && referenceBytes[i] == iter.nextByte());\n    }\n    assertTrue(classUnderTest + \" must capture the right bytes\", stillEqual);\n    assertFalse(classUnderTest + \" must have exhausted the iterator\", iter.hasNext());\n\n    try {\n      iter.nextByte();\n      fail(\"Should have thrown an exception.\");\n    } catch (NoSuchElementException e) {\n      \r\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
