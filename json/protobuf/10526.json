[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = TEST_STRING.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(BYTES.length);\n    assertTrue(CLASSNAME + \" must give the same bytes back from the CodedInputStream\",\n        Arrays.equals(BYTES, roundTripBytes));\n    assertTrue(CLASSNAME + \" CodedInputStream must now be exhausted\", cis.isAtEnd());\n  }\n","date":"2016-01-14 03:22:18","endLine":517,"groupId":"1745","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNewCodedInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/06/79937f34f16a75c0733dfd2e52e45ec7fbf4d1.src","preCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = TEST_STRING.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(BYTES.length);\n    assertTrue(CLASSNAME + \" must give the same bytes back from the CodedInputStream\",\n        Arrays.equals(BYTES, roundTripBytes));\n    assertTrue(CLASSNAME + \" CodedInputStream must now be exhausted\", cis.isAtEnd());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/NioByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":511,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = stringUnderTest.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(referenceBytes.length);\n    assertTrue(classUnderTest + \" must give the same bytes back from the CodedInputStream\",\n        Arrays.equals(referenceBytes, roundTripBytes));\n    assertTrue(classUnderTest + \" CodedInputStream must now be exhausted\", cis.isAtEnd());\n  }\n","date":"2016-01-14 03:22:18","endLine":472,"groupId":"1745","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewCodedInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c8/4956335e4c6be461a56be3d32960c6893af6f5.src","preCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = stringUnderTest.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(referenceBytes.length);\n    assertTrue(classUnderTest + \" must give the same bytes back from the CodedInputStream\",\n        Arrays.equals(referenceBytes, roundTripBytes));\n    assertTrue(classUnderTest + \" CodedInputStream must now be exhausted\", cis.isAtEnd());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":466,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-04-12 14:37:42","commitOrder":2,"curCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = testString.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(BYTES.length);\n    assertTrue(CLASSNAME + \" must give the same bytes back from the CodedInputStream\",\n        Arrays.equals(BYTES, roundTripBytes));\n    assertTrue(CLASSNAME + \" CodedInputStream must now be exhausted\", cis.isAtEnd());\n  }\n","date":"2016-04-12 14:37:42","endLine":591,"groupId":"1745","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNewCodedInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/6b/e5b93c31e504983e49f47c8fce6d5abade1b39.src","preCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = TEST_STRING.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(BYTES.length);\n    assertTrue(CLASSNAME + \" must give the same bytes back from the CodedInputStream\",\n        Arrays.equals(BYTES, roundTripBytes));\n    assertTrue(CLASSNAME + \" CodedInputStream must now be exhausted\", cis.isAtEnd());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/NioByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":585,"status":"M"},{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = stringUnderTest.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(referenceBytes.length);\n    assertTrue(classUnderTest + \" must give the same bytes back from the CodedInputStream\",\n        Arrays.equals(referenceBytes, roundTripBytes));\n    assertTrue(classUnderTest + \" CodedInputStream must now be exhausted\", cis.isAtEnd());\n  }\n","date":"2016-01-14 03:22:18","endLine":472,"groupId":"1745","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewCodedInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c8/4956335e4c6be461a56be3d32960c6893af6f5.src","preCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = stringUnderTest.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(referenceBytes.length);\n    assertTrue(classUnderTest + \" must give the same bytes back from the CodedInputStream\",\n        Arrays.equals(referenceBytes, roundTripBytes));\n    assertTrue(classUnderTest + \" CodedInputStream must now be exhausted\", cis.isAtEnd());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":466,"status":"N"}],"commitId":"814685ca2cd9280ca401e1842fd6311440921a0a","commitMessage":"@@@Merge pull request #1397 from google/internal-merge\n\nInternal merge","date":"2016-04-12 14:37:42","modifiedFileCount":"57","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = testString.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(BYTES.length);\n    assertWithMessage(\"%s must give the same bytes back from the CodedInputStream\", CLASSNAME)\n        .that(Arrays.equals(BYTES, roundTripBytes))\n        .isTrue();\n    assertWithMessage(\"%s CodedInputStream must now be exhausted\", CLASSNAME)\n        .that(cis.isAtEnd())\n        .isTrue();\n  }\n","date":"2021-08-10 06:55:00","endLine":713,"groupId":"10526","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testNewCodedInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1f/1427142bb2e8ecd0e82902a8a97e2fedd983e2.src","preCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = testString.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(BYTES.length);\n    assertTrue(\n        CLASSNAME + \" must give the same bytes back from the CodedInputStream\",\n        Arrays.equals(BYTES, roundTripBytes));\n    assertTrue(CLASSNAME + \" CodedInputStream must now be exhausted\", cis.isAtEnd());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/NioByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":704,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = stringUnderTest.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(referenceBytes.length);\n    assertWithMessage(\"%s must give the same bytes back from the CodedInputStream\", classUnderTest)\n        .that(Arrays.equals(referenceBytes, roundTripBytes))\n        .isTrue();\n    assertWithMessage(\" %s CodedInputStream must now be exhausted\", classUnderTest)\n        .that(cis.isAtEnd())\n        .isTrue();\n  }\n","date":"2021-08-10 06:55:00","endLine":654,"groupId":"10526","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testNewCodedInput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5e/c4a937bb40791b1a2e146759b90dc458c83203.src","preCode":"  public void testNewCodedInput() throws IOException {\n    CodedInputStream cis = stringUnderTest.newCodedInput();\n    byte[] roundTripBytes = cis.readRawBytes(referenceBytes.length);\n    assertTrue(\n        classUnderTest + \" must give the same bytes back from the CodedInputStream\",\n        Arrays.equals(referenceBytes, roundTripBytes));\n    assertTrue(classUnderTest + \" CodedInputStream must now be exhausted\", cis.isAtEnd());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":645,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
