[{"authorTime":"2019-04-06 07:39:18","codes":[{"authorDate":"2019-04-06 07:39:18","commitOrder":1,"curCode":"  int parseProto2Message(\n      T message, byte[] data, int position, int limit, int endGroup, Registers registers)\n      throws IOException {\n    final sun.misc.Unsafe unsafe = UNSAFE;\n    int currentPresenceFieldOffset = -1;\n    int currentPresenceField = 0;\n    int tag = 0;\n    int oldNumber = -1;\n    int pos = 0;\n    while (position < limit) {\n      tag = data[position++];\n      if (tag < 0) {\n        position = decodeVarint32(tag, data, position, registers);\n        tag = registers.int1;\n      }\n      final int number = tag >>> 3;\n      final int wireType = tag & 0x7;\n      if (number > oldNumber) {\n        pos = positionForFieldNumber(number, pos / INTS_PER_FIELD);\n      } else {\n        pos = positionForFieldNumber(number);\n      }\n      oldNumber = number;\n      if (pos == -1) {\n        \r\n        pos = 0;\n      } else {\n        final int typeAndOffset = buffer[pos + 1];\n        final int fieldType = type(typeAndOffset);\n        final long fieldOffset = offset(typeAndOffset);\n        if (fieldType <= 17) {\n          \r\n          final int presenceMaskAndOffset = buffer[pos + 2];\n          final int presenceMask = 1 << (presenceMaskAndOffset >>> OFFSET_BITS);\n          final int presenceFieldOffset = presenceMaskAndOffset & OFFSET_MASK;\n          \r\n          \r\n          if (presenceFieldOffset != currentPresenceFieldOffset) {\n            if (currentPresenceFieldOffset != -1) {\n              unsafe.putInt(message, (long) currentPresenceFieldOffset, currentPresenceField);\n            }\n            currentPresenceFieldOffset = presenceFieldOffset;\n            currentPresenceField = unsafe.getInt(message, (long) presenceFieldOffset);\n          }\n          switch (fieldType) {\n            case 0: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                UnsafeUtil.putDouble(message, fieldOffset, decodeDouble(data, position));\n                position += 8;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 1: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                UnsafeUtil.putFloat(message, fieldOffset, decodeFloat(data, position));\n                position += 4;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 2: \r\n            case 3: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(message, fieldOffset, registers.long1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 4: \r\n            case 11: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 5: \r\n            case 14: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                unsafe.putLong(message, fieldOffset, decodeFixed64(data, position));\n                position += 8;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 6: \r\n            case 13: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                unsafe.putInt(message, fieldOffset, decodeFixed32(data, position));\n                position += 4;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 7: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                UnsafeUtil.putBoolean(message, fieldOffset, registers.long1 != 0);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 8: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                if ((typeAndOffset & ENFORCE_UTF8_MASK) == 0) {\n                  position = decodeString(data, position, registers);\n                } else {\n                  position = decodeStringRequireUtf8(data, position, registers);\n                }\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 9: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position =\n                    decodeMessageField(\n                        getMessageFieldSchema(pos), data, position, limit, registers);\n                if ((currentPresenceField & presenceMask) == 0) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message,\n                      fieldOffset,\n                      Internal.mergeMessage(\n                          unsafe.getObject(message, fieldOffset), registers.object1));\n                }\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 10: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position = decodeBytes(data, position, registers);\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 12: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                final int enumValue = registers.int1;\n                EnumVerifier enumVerifier = getEnumFieldVerifier(pos);\n                if (enumVerifier == null || enumVerifier.isInRange(enumValue)) {\n                  unsafe.putInt(message, fieldOffset, enumValue);\n                  currentPresenceField |= presenceMask;\n                } else {\n                  \r\n                  \r\n                  getMutableUnknownFields(message).storeField(tag, (long) enumValue);\n                }\n                continue;\n              }\n              break;\n            case 15: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(\n                    message, fieldOffset, CodedInputStream.decodeZigZag32(registers.int1));\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 16: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(\n                    message, fieldOffset, CodedInputStream.decodeZigZag64(registers.long1));\n\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 17: \r\n              if (wireType == WireFormat.WIRETYPE_START_GROUP) {\n                final int endTag = (number << 3) | WireFormat.WIRETYPE_END_GROUP;\n                position =\n                    decodeGroupField(\n                        getMessageFieldSchema(pos), data, position, limit, endTag, registers);\n                if ((currentPresenceField & presenceMask) == 0) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message,\n                      fieldOffset,\n                      Internal.mergeMessage(\n                          unsafe.getObject(message, fieldOffset), registers.object1));\n                }\n\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            default:\n              break;\n          }\n        } else if (fieldType == 27) {\n          \r\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            ProtobufList<?> list = (ProtobufList<?>) unsafe.getObject(message, fieldOffset);\n            if (!list.isModifiable()) {\n              final int size = list.size();\n              list =\n                  list.mutableCopyWithCapacity(\n                      size == 0 ? AbstractProtobufList.DEFAULT_CAPACITY : size * 2);\n              unsafe.putObject(message, fieldOffset, list);\n            }\n            position =\n                decodeMessageList(\n                    getMessageFieldSchema(pos), tag, data, position, limit, list, registers);\n            continue;\n          }\n        } else if (fieldType <= 49) {\n          \r\n          final int oldPosition = position;\n          position =\n              parseRepeatedField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  pos,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        } else if (fieldType == 50) {\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            final int oldPosition = position;\n            position = parseMapField(message, data, position, limit, pos, fieldOffset, registers);\n            if (position != oldPosition) {\n              continue;\n            }\n          }\n        } else {\n          final int oldPosition = position;\n          position =\n              parseOneofField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  pos,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        }\n      }\n      if (tag == endGroup && endGroup != 0) {\n        break;\n      }\n\n      if (hasExtensions\n          && registers.extensionRegistry != ExtensionRegistryLite.getEmptyRegistry()) {\n        position = decodeExtensionOrUnknownField(\n            tag, data, position, limit, message, defaultInstance,\n            (UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema,\n            registers);\n      } else {\n        position = decodeUnknownField(\n            tag, data, position, limit, getMutableUnknownFields(message), registers);\n      }\n    }\n    if (currentPresenceFieldOffset != -1) {\n      unsafe.putInt(message, (long) currentPresenceFieldOffset, currentPresenceField);\n    }\n    UnknownFieldSetLite unknownFields = null;\n    for (int i = checkInitializedCount; i < repeatedFieldOffsetStart; i++) {\n      unknownFields =\n          filterMapUnknownEnumValues(\n              message,\n              intArray[i],\n              unknownFields,\n              (UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema);\n    }\n    if (unknownFields != null) {\n      ((UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema)\n          .setBuilderToMessage(message, unknownFields);\n    }\n    if (endGroup == 0) {\n      if (position != limit) {\n        throw InvalidProtocolBufferException.parseFailure();\n      }\n    } else {\n      if (position > limit || tag != endGroup) {\n        throw InvalidProtocolBufferException.parseFailure();\n      }\n    }\n    return position;\n  }\n","date":"2019-04-06 07:39:18","endLine":5176,"groupId":"1256","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parseProto2Message","params":"(Tmessage@byte[]data@intposition@intlimit@intendGroup@Registersregisters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/67/584ed413730fcf50498f47646295eda6343a1e.src","preCode":"  int parseProto2Message(\n      T message, byte[] data, int position, int limit, int endGroup, Registers registers)\n      throws IOException {\n    final sun.misc.Unsafe unsafe = UNSAFE;\n    int currentPresenceFieldOffset = -1;\n    int currentPresenceField = 0;\n    int tag = 0;\n    int oldNumber = -1;\n    int pos = 0;\n    while (position < limit) {\n      tag = data[position++];\n      if (tag < 0) {\n        position = decodeVarint32(tag, data, position, registers);\n        tag = registers.int1;\n      }\n      final int number = tag >>> 3;\n      final int wireType = tag & 0x7;\n      if (number > oldNumber) {\n        pos = positionForFieldNumber(number, pos / INTS_PER_FIELD);\n      } else {\n        pos = positionForFieldNumber(number);\n      }\n      oldNumber = number;\n      if (pos == -1) {\n        \r\n        pos = 0;\n      } else {\n        final int typeAndOffset = buffer[pos + 1];\n        final int fieldType = type(typeAndOffset);\n        final long fieldOffset = offset(typeAndOffset);\n        if (fieldType <= 17) {\n          \r\n          final int presenceMaskAndOffset = buffer[pos + 2];\n          final int presenceMask = 1 << (presenceMaskAndOffset >>> OFFSET_BITS);\n          final int presenceFieldOffset = presenceMaskAndOffset & OFFSET_MASK;\n          \r\n          \r\n          if (presenceFieldOffset != currentPresenceFieldOffset) {\n            if (currentPresenceFieldOffset != -1) {\n              unsafe.putInt(message, (long) currentPresenceFieldOffset, currentPresenceField);\n            }\n            currentPresenceFieldOffset = presenceFieldOffset;\n            currentPresenceField = unsafe.getInt(message, (long) presenceFieldOffset);\n          }\n          switch (fieldType) {\n            case 0: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                UnsafeUtil.putDouble(message, fieldOffset, decodeDouble(data, position));\n                position += 8;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 1: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                UnsafeUtil.putFloat(message, fieldOffset, decodeFloat(data, position));\n                position += 4;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 2: \r\n            case 3: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(message, fieldOffset, registers.long1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 4: \r\n            case 11: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 5: \r\n            case 14: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                unsafe.putLong(message, fieldOffset, decodeFixed64(data, position));\n                position += 8;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 6: \r\n            case 13: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                unsafe.putInt(message, fieldOffset, decodeFixed32(data, position));\n                position += 4;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 7: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                UnsafeUtil.putBoolean(message, fieldOffset, registers.long1 != 0);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 8: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                if ((typeAndOffset & ENFORCE_UTF8_MASK) == 0) {\n                  position = decodeString(data, position, registers);\n                } else {\n                  position = decodeStringRequireUtf8(data, position, registers);\n                }\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 9: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position =\n                    decodeMessageField(\n                        getMessageFieldSchema(pos), data, position, limit, registers);\n                if ((currentPresenceField & presenceMask) == 0) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message,\n                      fieldOffset,\n                      Internal.mergeMessage(\n                          unsafe.getObject(message, fieldOffset), registers.object1));\n                }\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 10: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position = decodeBytes(data, position, registers);\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 12: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                final int enumValue = registers.int1;\n                EnumVerifier enumVerifier = getEnumFieldVerifier(pos);\n                if (enumVerifier == null || enumVerifier.isInRange(enumValue)) {\n                  unsafe.putInt(message, fieldOffset, enumValue);\n                  currentPresenceField |= presenceMask;\n                } else {\n                  \r\n                  \r\n                  getMutableUnknownFields(message).storeField(tag, (long) enumValue);\n                }\n                continue;\n              }\n              break;\n            case 15: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(\n                    message, fieldOffset, CodedInputStream.decodeZigZag32(registers.int1));\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 16: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(\n                    message, fieldOffset, CodedInputStream.decodeZigZag64(registers.long1));\n\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 17: \r\n              if (wireType == WireFormat.WIRETYPE_START_GROUP) {\n                final int endTag = (number << 3) | WireFormat.WIRETYPE_END_GROUP;\n                position =\n                    decodeGroupField(\n                        getMessageFieldSchema(pos), data, position, limit, endTag, registers);\n                if ((currentPresenceField & presenceMask) == 0) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message,\n                      fieldOffset,\n                      Internal.mergeMessage(\n                          unsafe.getObject(message, fieldOffset), registers.object1));\n                }\n\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            default:\n              break;\n          }\n        } else if (fieldType == 27) {\n          \r\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            ProtobufList<?> list = (ProtobufList<?>) unsafe.getObject(message, fieldOffset);\n            if (!list.isModifiable()) {\n              final int size = list.size();\n              list =\n                  list.mutableCopyWithCapacity(\n                      size == 0 ? AbstractProtobufList.DEFAULT_CAPACITY : size * 2);\n              unsafe.putObject(message, fieldOffset, list);\n            }\n            position =\n                decodeMessageList(\n                    getMessageFieldSchema(pos), tag, data, position, limit, list, registers);\n            continue;\n          }\n        } else if (fieldType <= 49) {\n          \r\n          final int oldPosition = position;\n          position =\n              parseRepeatedField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  pos,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        } else if (fieldType == 50) {\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            final int oldPosition = position;\n            position = parseMapField(message, data, position, limit, pos, fieldOffset, registers);\n            if (position != oldPosition) {\n              continue;\n            }\n          }\n        } else {\n          final int oldPosition = position;\n          position =\n              parseOneofField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  pos,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        }\n      }\n      if (tag == endGroup && endGroup != 0) {\n        break;\n      }\n\n      if (hasExtensions\n          && registers.extensionRegistry != ExtensionRegistryLite.getEmptyRegistry()) {\n        position = decodeExtensionOrUnknownField(\n            tag, data, position, limit, message, defaultInstance,\n            (UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema,\n            registers);\n      } else {\n        position = decodeUnknownField(\n            tag, data, position, limit, getMutableUnknownFields(message), registers);\n      }\n    }\n    if (currentPresenceFieldOffset != -1) {\n      unsafe.putInt(message, (long) currentPresenceFieldOffset, currentPresenceField);\n    }\n    UnknownFieldSetLite unknownFields = null;\n    for (int i = checkInitializedCount; i < repeatedFieldOffsetStart; i++) {\n      unknownFields =\n          filterMapUnknownEnumValues(\n              message,\n              intArray[i],\n              unknownFields,\n              (UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema);\n    }\n    if (unknownFields != null) {\n      ((UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema)\n          .setBuilderToMessage(message, unknownFields);\n    }\n    if (endGroup == 0) {\n      if (position != limit) {\n        throw InvalidProtocolBufferException.parseFailure();\n      }\n    } else {\n      if (position > limit || tag != endGroup) {\n        throw InvalidProtocolBufferException.parseFailure();\n      }\n    }\n    return position;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/MessageSchema.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":4869,"status":"B"},{"authorDate":"2019-04-06 07:39:18","commitOrder":1,"curCode":"  private int parseProto3Message(\n      T message, byte[] data, int position, int limit, Registers registers) throws IOException {\n    final sun.misc.Unsafe unsafe = UNSAFE;\n    int tag = 0;\n    int oldNumber = -1;\n    int pos = 0;\n    while (position < limit) {\n      tag = data[position++];\n      if (tag < 0) {\n        position = decodeVarint32(tag, data, position, registers);\n        tag = registers.int1;\n      }\n      final int number = tag >>> 3;\n      final int wireType = tag & 0x7;\n      if (number > oldNumber) {\n        pos = positionForFieldNumber(number, pos / INTS_PER_FIELD);\n      } else {\n        pos = positionForFieldNumber(number);\n      }\n      oldNumber = number;\n      if (pos == -1) {\n        \r\n        pos = 0;\n      } else {\n        final int typeAndOffset = buffer[pos + 1];\n        final int fieldType = type(typeAndOffset);\n        final long fieldOffset = offset(typeAndOffset);\n        if (fieldType <= 17) {\n          switch (fieldType) {\n            case 0: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                UnsafeUtil.putDouble(message, fieldOffset, decodeDouble(data, position));\n                position += 8;\n                continue;\n              }\n              break;\n            case 1: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                UnsafeUtil.putFloat(message, fieldOffset, decodeFloat(data, position));\n                position += 4;\n                continue;\n              }\n              break;\n            case 2: \r\n            case 3: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(message, fieldOffset, registers.long1);\n                continue;\n              }\n              break;\n            case 4: \r\n            case 11: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                continue;\n              }\n              break;\n            case 5: \r\n            case 14: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                unsafe.putLong(message, fieldOffset, decodeFixed64(data, position));\n                position += 8;\n                continue;\n              }\n              break;\n            case 6: \r\n            case 13: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                unsafe.putInt(message, fieldOffset, decodeFixed32(data, position));\n                position += 4;\n                continue;\n              }\n              break;\n            case 7: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                UnsafeUtil.putBoolean(message, fieldOffset, registers.long1 != 0);\n                continue;\n              }\n              break;\n            case 8: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                if ((typeAndOffset & ENFORCE_UTF8_MASK) == 0) {\n                  position = decodeString(data, position, registers);\n                } else {\n                  position = decodeStringRequireUtf8(data, position, registers);\n                }\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                continue;\n              }\n              break;\n            case 9: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position =\n                    decodeMessageField(\n                        getMessageFieldSchema(pos), data, position, limit, registers);\n                final Object oldValue = unsafe.getObject(message, fieldOffset);\n                if (oldValue == null) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message, fieldOffset, Internal.mergeMessage(oldValue, registers.object1));\n                }\n                continue;\n              }\n              break;\n            case 10: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position = decodeBytes(data, position, registers);\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                continue;\n              }\n              break;\n            case 12: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                continue;\n              }\n              break;\n            case 15: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(\n                    message, fieldOffset, CodedInputStream.decodeZigZag32(registers.int1));\n                continue;\n              }\n              break;\n            case 16: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(\n                    message, fieldOffset, CodedInputStream.decodeZigZag64(registers.long1));\n                continue;\n              }\n              break;\n            default:\n              break;\n          }\n        } else if (fieldType == 27) {\n          \r\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            ProtobufList<?> list = (ProtobufList<?>) unsafe.getObject(message, fieldOffset);\n            if (!list.isModifiable()) {\n              final int size = list.size();\n              list =\n                  list.mutableCopyWithCapacity(\n                      size == 0 ? AbstractProtobufList.DEFAULT_CAPACITY : size * 2);\n              unsafe.putObject(message, fieldOffset, list);\n            }\n            position =\n                decodeMessageList(\n                    getMessageFieldSchema(pos), tag, data, position, limit, list, registers);\n            continue;\n          }\n        } else if (fieldType <= 49) {\n          \r\n          final int oldPosition = position;\n          position =\n              parseRepeatedField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  pos,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        } else if (fieldType == 50) {\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            final int oldPosition = position;\n            position = parseMapField(message, data, position, limit, pos, fieldOffset, registers);\n            if (position != oldPosition) {\n              continue;\n            }\n          }\n        } else {\n          final int oldPosition = position;\n          position =\n              parseOneofField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  pos,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        }\n      }\n      position = decodeUnknownField(\n          tag, data, position, limit, getMutableUnknownFields(message), registers);\n    }\n    if (position != limit) {\n      throw InvalidProtocolBufferException.parseFailure();\n    }\n    return position;\n  }\n","date":"2019-04-06 07:39:18","endLine":5392,"groupId":"1170","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parseProto3Message","params":"(Tmessage@byte[]data@intposition@intlimit@Registersregisters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/67/584ed413730fcf50498f47646295eda6343a1e.src","preCode":"  private int parseProto3Message(\n      T message, byte[] data, int position, int limit, Registers registers) throws IOException {\n    final sun.misc.Unsafe unsafe = UNSAFE;\n    int tag = 0;\n    int oldNumber = -1;\n    int pos = 0;\n    while (position < limit) {\n      tag = data[position++];\n      if (tag < 0) {\n        position = decodeVarint32(tag, data, position, registers);\n        tag = registers.int1;\n      }\n      final int number = tag >>> 3;\n      final int wireType = tag & 0x7;\n      if (number > oldNumber) {\n        pos = positionForFieldNumber(number, pos / INTS_PER_FIELD);\n      } else {\n        pos = positionForFieldNumber(number);\n      }\n      oldNumber = number;\n      if (pos == -1) {\n        \r\n        pos = 0;\n      } else {\n        final int typeAndOffset = buffer[pos + 1];\n        final int fieldType = type(typeAndOffset);\n        final long fieldOffset = offset(typeAndOffset);\n        if (fieldType <= 17) {\n          switch (fieldType) {\n            case 0: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                UnsafeUtil.putDouble(message, fieldOffset, decodeDouble(data, position));\n                position += 8;\n                continue;\n              }\n              break;\n            case 1: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                UnsafeUtil.putFloat(message, fieldOffset, decodeFloat(data, position));\n                position += 4;\n                continue;\n              }\n              break;\n            case 2: \r\n            case 3: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(message, fieldOffset, registers.long1);\n                continue;\n              }\n              break;\n            case 4: \r\n            case 11: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                continue;\n              }\n              break;\n            case 5: \r\n            case 14: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                unsafe.putLong(message, fieldOffset, decodeFixed64(data, position));\n                position += 8;\n                continue;\n              }\n              break;\n            case 6: \r\n            case 13: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                unsafe.putInt(message, fieldOffset, decodeFixed32(data, position));\n                position += 4;\n                continue;\n              }\n              break;\n            case 7: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                UnsafeUtil.putBoolean(message, fieldOffset, registers.long1 != 0);\n                continue;\n              }\n              break;\n            case 8: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                if ((typeAndOffset & ENFORCE_UTF8_MASK) == 0) {\n                  position = decodeString(data, position, registers);\n                } else {\n                  position = decodeStringRequireUtf8(data, position, registers);\n                }\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                continue;\n              }\n              break;\n            case 9: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position =\n                    decodeMessageField(\n                        getMessageFieldSchema(pos), data, position, limit, registers);\n                final Object oldValue = unsafe.getObject(message, fieldOffset);\n                if (oldValue == null) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message, fieldOffset, Internal.mergeMessage(oldValue, registers.object1));\n                }\n                continue;\n              }\n              break;\n            case 10: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position = decodeBytes(data, position, registers);\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                continue;\n              }\n              break;\n            case 12: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                continue;\n              }\n              break;\n            case 15: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(\n                    message, fieldOffset, CodedInputStream.decodeZigZag32(registers.int1));\n                continue;\n              }\n              break;\n            case 16: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(\n                    message, fieldOffset, CodedInputStream.decodeZigZag64(registers.long1));\n                continue;\n              }\n              break;\n            default:\n              break;\n          }\n        } else if (fieldType == 27) {\n          \r\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            ProtobufList<?> list = (ProtobufList<?>) unsafe.getObject(message, fieldOffset);\n            if (!list.isModifiable()) {\n              final int size = list.size();\n              list =\n                  list.mutableCopyWithCapacity(\n                      size == 0 ? AbstractProtobufList.DEFAULT_CAPACITY : size * 2);\n              unsafe.putObject(message, fieldOffset, list);\n            }\n            position =\n                decodeMessageList(\n                    getMessageFieldSchema(pos), tag, data, position, limit, list, registers);\n            continue;\n          }\n        } else if (fieldType <= 49) {\n          \r\n          final int oldPosition = position;\n          position =\n              parseRepeatedField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  pos,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        } else if (fieldType == 50) {\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            final int oldPosition = position;\n            position = parseMapField(message, data, position, limit, pos, fieldOffset, registers);\n            if (position != oldPosition) {\n              continue;\n            }\n          }\n        } else {\n          final int oldPosition = position;\n          position =\n              parseOneofField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  pos,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        }\n      }\n      position = decodeUnknownField(\n          tag, data, position, limit, getMutableUnknownFields(message), registers);\n    }\n    if (position != limit) {\n      throw InvalidProtocolBufferException.parseFailure();\n    }\n    return position;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/MessageSchema.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":5179,"status":"B"}],"commitId":"a48a574f7e890436363ca8ac71d866252b216052","commitMessage":"@@@Down integrate to Github\n","date":"2019-04-06 07:39:18","modifiedFileCount":"20","status":"B","submitter":"Hao Nguyen"},{"authorTime":"2020-04-02 00:42:57","codes":[{"authorDate":"2020-04-02 00:42:57","commitOrder":2,"curCode":"  int parseProto2Message(\n      T message, byte[] data, int position, int limit, int endGroup, Registers registers)\n      throws IOException {\n    final sun.misc.Unsafe unsafe = UNSAFE;\n    int currentPresenceFieldOffset = NO_PRESENCE_SENTINEL;\n    int currentPresenceField = 0;\n    int tag = 0;\n    int oldNumber = -1;\n    int pos = 0;\n    while (position < limit) {\n      tag = data[position++];\n      if (tag < 0) {\n        position = decodeVarint32(tag, data, position, registers);\n        tag = registers.int1;\n      }\n      final int number = tag >>> 3;\n      final int wireType = tag & 0x7;\n      if (number > oldNumber) {\n        pos = positionForFieldNumber(number, pos / INTS_PER_FIELD);\n      } else {\n        pos = positionForFieldNumber(number);\n      }\n      oldNumber = number;\n      if (pos == -1) {\n        \r\n        pos = 0;\n      } else {\n        final int typeAndOffset = buffer[pos + 1];\n        final int fieldType = type(typeAndOffset);\n        final long fieldOffset = offset(typeAndOffset);\n        if (fieldType <= 17) {\n          \r\n          final int presenceMaskAndOffset = buffer[pos + 2];\n          final int presenceMask = 1 << (presenceMaskAndOffset >>> OFFSET_BITS);\n          final int presenceFieldOffset = presenceMaskAndOffset & OFFSET_MASK;\n          \r\n          \r\n          if (presenceFieldOffset != currentPresenceFieldOffset) {\n            if (currentPresenceFieldOffset != NO_PRESENCE_SENTINEL) {\n              unsafe.putInt(message, (long) currentPresenceFieldOffset, currentPresenceField);\n            }\n            currentPresenceFieldOffset = presenceFieldOffset;\n            currentPresenceField = unsafe.getInt(message, (long) presenceFieldOffset);\n          }\n          switch (fieldType) {\n            case 0: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                UnsafeUtil.putDouble(message, fieldOffset, decodeDouble(data, position));\n                position += 8;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 1: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                UnsafeUtil.putFloat(message, fieldOffset, decodeFloat(data, position));\n                position += 4;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 2: \r\n            case 3: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(message, fieldOffset, registers.long1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 4: \r\n            case 11: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 5: \r\n            case 14: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                unsafe.putLong(message, fieldOffset, decodeFixed64(data, position));\n                position += 8;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 6: \r\n            case 13: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                unsafe.putInt(message, fieldOffset, decodeFixed32(data, position));\n                position += 4;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 7: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                UnsafeUtil.putBoolean(message, fieldOffset, registers.long1 != 0);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 8: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                if ((typeAndOffset & ENFORCE_UTF8_MASK) == 0) {\n                  position = decodeString(data, position, registers);\n                } else {\n                  position = decodeStringRequireUtf8(data, position, registers);\n                }\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 9: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position =\n                    decodeMessageField(\n                        getMessageFieldSchema(pos), data, position, limit, registers);\n                if ((currentPresenceField & presenceMask) == 0) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message,\n                      fieldOffset,\n                      Internal.mergeMessage(\n                          unsafe.getObject(message, fieldOffset), registers.object1));\n                }\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 10: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position = decodeBytes(data, position, registers);\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 12: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                final int enumValue = registers.int1;\n                EnumVerifier enumVerifier = getEnumFieldVerifier(pos);\n                if (enumVerifier == null || enumVerifier.isInRange(enumValue)) {\n                  unsafe.putInt(message, fieldOffset, enumValue);\n                  currentPresenceField |= presenceMask;\n                } else {\n                  \r\n                  getMutableUnknownFields(message).storeField(tag, (long) enumValue);\n                }\n                continue;\n              }\n              break;\n            case 15: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(\n                    message, fieldOffset, CodedInputStream.decodeZigZag32(registers.int1));\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 16: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(\n                    message, fieldOffset, CodedInputStream.decodeZigZag64(registers.long1));\n\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 17: \r\n              if (wireType == WireFormat.WIRETYPE_START_GROUP) {\n                final int endTag = (number << 3) | WireFormat.WIRETYPE_END_GROUP;\n                position =\n                    decodeGroupField(\n                        getMessageFieldSchema(pos), data, position, limit, endTag, registers);\n                if ((currentPresenceField & presenceMask) == 0) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message,\n                      fieldOffset,\n                      Internal.mergeMessage(\n                          unsafe.getObject(message, fieldOffset), registers.object1));\n                }\n\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            default:\n              break;\n          }\n        } else if (fieldType == 27) {\n          \r\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            ProtobufList<?> list = (ProtobufList<?>) unsafe.getObject(message, fieldOffset);\n            if (!list.isModifiable()) {\n              final int size = list.size();\n              list =\n                  list.mutableCopyWithCapacity(\n                      size == 0 ? AbstractProtobufList.DEFAULT_CAPACITY : size * 2);\n              unsafe.putObject(message, fieldOffset, list);\n            }\n            position =\n                decodeMessageList(\n                    getMessageFieldSchema(pos), tag, data, position, limit, list, registers);\n            continue;\n          }\n        } else if (fieldType <= 49) {\n          \r\n          final int oldPosition = position;\n          position =\n              parseRepeatedField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  pos,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        } else if (fieldType == 50) {\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            final int oldPosition = position;\n            position = parseMapField(message, data, position, limit, pos, fieldOffset, registers);\n            if (position != oldPosition) {\n              continue;\n            }\n          }\n        } else {\n          final int oldPosition = position;\n          position =\n              parseOneofField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  pos,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        }\n      }\n      if (tag == endGroup && endGroup != 0) {\n        break;\n      }\n\n      if (hasExtensions\n          && registers.extensionRegistry != ExtensionRegistryLite.getEmptyRegistry()) {\n        position = decodeExtensionOrUnknownField(\n            tag, data, position, limit, message, defaultInstance,\n            (UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema,\n            registers);\n      } else {\n        position = decodeUnknownField(\n            tag, data, position, limit, getMutableUnknownFields(message), registers);\n      }\n    }\n    if (currentPresenceFieldOffset != NO_PRESENCE_SENTINEL) {\n      unsafe.putInt(message, (long) currentPresenceFieldOffset, currentPresenceField);\n    }\n    UnknownFieldSetLite unknownFields = null;\n    for (int i = checkInitializedCount; i < repeatedFieldOffsetStart; i++) {\n      unknownFields =\n          filterMapUnknownEnumValues(\n              message,\n              intArray[i],\n              unknownFields,\n              (UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema);\n    }\n    if (unknownFields != null) {\n      ((UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema)\n          .setBuilderToMessage(message, unknownFields);\n    }\n    if (endGroup == 0) {\n      if (position != limit) {\n        throw InvalidProtocolBufferException.parseFailure();\n      }\n    } else {\n      if (position > limit || tag != endGroup) {\n        throw InvalidProtocolBufferException.parseFailure();\n      }\n    }\n    return position;\n  }\n","date":"2020-04-02 00:42:57","endLine":5182,"groupId":"10697","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parseProto2Message","params":"(Tmessage@byte[]data@intposition@intlimit@intendGroup@Registersregisters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/13/9e55a971428833355c674bd64498cc8b3a2f22.src","preCode":"  int parseProto2Message(\n      T message, byte[] data, int position, int limit, int endGroup, Registers registers)\n      throws IOException {\n    final sun.misc.Unsafe unsafe = UNSAFE;\n    int currentPresenceFieldOffset = -1;\n    int currentPresenceField = 0;\n    int tag = 0;\n    int oldNumber = -1;\n    int pos = 0;\n    while (position < limit) {\n      tag = data[position++];\n      if (tag < 0) {\n        position = decodeVarint32(tag, data, position, registers);\n        tag = registers.int1;\n      }\n      final int number = tag >>> 3;\n      final int wireType = tag & 0x7;\n      if (number > oldNumber) {\n        pos = positionForFieldNumber(number, pos / INTS_PER_FIELD);\n      } else {\n        pos = positionForFieldNumber(number);\n      }\n      oldNumber = number;\n      if (pos == -1) {\n        \r\n        pos = 0;\n      } else {\n        final int typeAndOffset = buffer[pos + 1];\n        final int fieldType = type(typeAndOffset);\n        final long fieldOffset = offset(typeAndOffset);\n        if (fieldType <= 17) {\n          \r\n          final int presenceMaskAndOffset = buffer[pos + 2];\n          final int presenceMask = 1 << (presenceMaskAndOffset >>> OFFSET_BITS);\n          final int presenceFieldOffset = presenceMaskAndOffset & OFFSET_MASK;\n          \r\n          \r\n          if (presenceFieldOffset != currentPresenceFieldOffset) {\n            if (currentPresenceFieldOffset != -1) {\n              unsafe.putInt(message, (long) currentPresenceFieldOffset, currentPresenceField);\n            }\n            currentPresenceFieldOffset = presenceFieldOffset;\n            currentPresenceField = unsafe.getInt(message, (long) presenceFieldOffset);\n          }\n          switch (fieldType) {\n            case 0: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                UnsafeUtil.putDouble(message, fieldOffset, decodeDouble(data, position));\n                position += 8;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 1: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                UnsafeUtil.putFloat(message, fieldOffset, decodeFloat(data, position));\n                position += 4;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 2: \r\n            case 3: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(message, fieldOffset, registers.long1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 4: \r\n            case 11: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 5: \r\n            case 14: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                unsafe.putLong(message, fieldOffset, decodeFixed64(data, position));\n                position += 8;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 6: \r\n            case 13: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                unsafe.putInt(message, fieldOffset, decodeFixed32(data, position));\n                position += 4;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 7: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                UnsafeUtil.putBoolean(message, fieldOffset, registers.long1 != 0);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 8: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                if ((typeAndOffset & ENFORCE_UTF8_MASK) == 0) {\n                  position = decodeString(data, position, registers);\n                } else {\n                  position = decodeStringRequireUtf8(data, position, registers);\n                }\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 9: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position =\n                    decodeMessageField(\n                        getMessageFieldSchema(pos), data, position, limit, registers);\n                if ((currentPresenceField & presenceMask) == 0) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message,\n                      fieldOffset,\n                      Internal.mergeMessage(\n                          unsafe.getObject(message, fieldOffset), registers.object1));\n                }\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 10: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position = decodeBytes(data, position, registers);\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 12: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                final int enumValue = registers.int1;\n                EnumVerifier enumVerifier = getEnumFieldVerifier(pos);\n                if (enumVerifier == null || enumVerifier.isInRange(enumValue)) {\n                  unsafe.putInt(message, fieldOffset, enumValue);\n                  currentPresenceField |= presenceMask;\n                } else {\n                  \r\n                  getMutableUnknownFields(message).storeField(tag, (long) enumValue);\n                }\n                continue;\n              }\n              break;\n            case 15: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(\n                    message, fieldOffset, CodedInputStream.decodeZigZag32(registers.int1));\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 16: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(\n                    message, fieldOffset, CodedInputStream.decodeZigZag64(registers.long1));\n\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 17: \r\n              if (wireType == WireFormat.WIRETYPE_START_GROUP) {\n                final int endTag = (number << 3) | WireFormat.WIRETYPE_END_GROUP;\n                position =\n                    decodeGroupField(\n                        getMessageFieldSchema(pos), data, position, limit, endTag, registers);\n                if ((currentPresenceField & presenceMask) == 0) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message,\n                      fieldOffset,\n                      Internal.mergeMessage(\n                          unsafe.getObject(message, fieldOffset), registers.object1));\n                }\n\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            default:\n              break;\n          }\n        } else if (fieldType == 27) {\n          \r\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            ProtobufList<?> list = (ProtobufList<?>) unsafe.getObject(message, fieldOffset);\n            if (!list.isModifiable()) {\n              final int size = list.size();\n              list =\n                  list.mutableCopyWithCapacity(\n                      size == 0 ? AbstractProtobufList.DEFAULT_CAPACITY : size * 2);\n              unsafe.putObject(message, fieldOffset, list);\n            }\n            position =\n                decodeMessageList(\n                    getMessageFieldSchema(pos), tag, data, position, limit, list, registers);\n            continue;\n          }\n        } else if (fieldType <= 49) {\n          \r\n          final int oldPosition = position;\n          position =\n              parseRepeatedField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  pos,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        } else if (fieldType == 50) {\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            final int oldPosition = position;\n            position = parseMapField(message, data, position, limit, pos, fieldOffset, registers);\n            if (position != oldPosition) {\n              continue;\n            }\n          }\n        } else {\n          final int oldPosition = position;\n          position =\n              parseOneofField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  pos,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        }\n      }\n      if (tag == endGroup && endGroup != 0) {\n        break;\n      }\n\n      if (hasExtensions\n          && registers.extensionRegistry != ExtensionRegistryLite.getEmptyRegistry()) {\n        position = decodeExtensionOrUnknownField(\n            tag, data, position, limit, message, defaultInstance,\n            (UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema,\n            registers);\n      } else {\n        position = decodeUnknownField(\n            tag, data, position, limit, getMutableUnknownFields(message), registers);\n      }\n    }\n    if (currentPresenceFieldOffset != -1) {\n      unsafe.putInt(message, (long) currentPresenceFieldOffset, currentPresenceField);\n    }\n    UnknownFieldSetLite unknownFields = null;\n    for (int i = checkInitializedCount; i < repeatedFieldOffsetStart; i++) {\n      unknownFields =\n          filterMapUnknownEnumValues(\n              message,\n              intArray[i],\n              unknownFields,\n              (UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema);\n    }\n    if (unknownFields != null) {\n      ((UnknownFieldSchema<UnknownFieldSetLite, UnknownFieldSetLite>) unknownFieldSchema)\n          .setBuilderToMessage(message, unknownFields);\n    }\n    if (endGroup == 0) {\n      if (position != limit) {\n        throw InvalidProtocolBufferException.parseFailure();\n      }\n    } else {\n      if (position > limit || tag != endGroup) {\n        throw InvalidProtocolBufferException.parseFailure();\n      }\n    }\n    return position;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/MessageSchema.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":4876,"status":"M"},{"authorDate":"2020-04-02 00:42:57","commitOrder":2,"curCode":"  private int parseProto3Message(\n      T message, byte[] data, int position, int limit, Registers registers) throws IOException {\n    final sun.misc.Unsafe unsafe = UNSAFE;\n    int currentPresenceFieldOffset = NO_PRESENCE_SENTINEL;\n    int currentPresenceField = 0;\n    int tag = 0;\n    int oldNumber = -1;\n    int pos = 0;\n    while (position < limit) {\n      tag = data[position++];\n      if (tag < 0) {\n        position = decodeVarint32(tag, data, position, registers);\n        tag = registers.int1;\n      }\n      final int number = tag >>> 3;\n      final int wireType = tag & 0x7;\n      if (number > oldNumber) {\n        pos = positionForFieldNumber(number, pos / INTS_PER_FIELD);\n      } else {\n        pos = positionForFieldNumber(number);\n      }\n      oldNumber = number;\n      if (pos == -1) {\n        \r\n        pos = 0;\n      } else {\n        final int typeAndOffset = buffer[pos + 1];\n        final int fieldType = type(typeAndOffset);\n        final long fieldOffset = offset(typeAndOffset);\n        if (fieldType <= 17) {\n          \r\n          final int presenceMaskAndOffset = buffer[pos + 2];\n          final int presenceMask = 1 << (presenceMaskAndOffset >>> OFFSET_BITS);\n          final int presenceFieldOffset = presenceMaskAndOffset & OFFSET_MASK;\n          \r\n          \r\n          \r\n          \r\n          \r\n          if (presenceFieldOffset != currentPresenceFieldOffset) {\n            if (currentPresenceFieldOffset != NO_PRESENCE_SENTINEL) {\n              unsafe.putInt(message, (long) currentPresenceFieldOffset, currentPresenceField);\n            }\n            if (presenceFieldOffset != NO_PRESENCE_SENTINEL) {\n              currentPresenceField = unsafe.getInt(message, (long) presenceFieldOffset);\n            }\n            currentPresenceFieldOffset = presenceFieldOffset;\n          }\n          switch (fieldType) {\n            case 0: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                UnsafeUtil.putDouble(message, fieldOffset, decodeDouble(data, position));\n                position += 8;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 1: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                UnsafeUtil.putFloat(message, fieldOffset, decodeFloat(data, position));\n                position += 4;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 2: \r\n            case 3: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(message, fieldOffset, registers.long1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 4: \r\n            case 11: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 5: \r\n            case 14: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                unsafe.putLong(message, fieldOffset, decodeFixed64(data, position));\n                position += 8;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 6: \r\n            case 13: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                unsafe.putInt(message, fieldOffset, decodeFixed32(data, position));\n                position += 4;\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 7: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                UnsafeUtil.putBoolean(message, fieldOffset, registers.long1 != 0);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 8: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                if ((typeAndOffset & ENFORCE_UTF8_MASK) == 0) {\n                  position = decodeString(data, position, registers);\n                } else {\n                  position = decodeStringRequireUtf8(data, position, registers);\n                }\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 9: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position =\n                    decodeMessageField(\n                        getMessageFieldSchema(pos), data, position, limit, registers);\n                final Object oldValue = unsafe.getObject(message, fieldOffset);\n                if (oldValue == null) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message, fieldOffset, Internal.mergeMessage(oldValue, registers.object1));\n                }\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 10: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position = decodeBytes(data, position, registers);\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 12: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 15: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(\n                    message, fieldOffset, CodedInputStream.decodeZigZag32(registers.int1));\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            case 16: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(\n                    message, fieldOffset, CodedInputStream.decodeZigZag64(registers.long1));\n                currentPresenceField |= presenceMask;\n                continue;\n              }\n              break;\n            default:\n              break;\n          }\n        } else if (fieldType == 27) {\n          \r\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            ProtobufList<?> list = (ProtobufList<?>) unsafe.getObject(message, fieldOffset);\n            if (!list.isModifiable()) {\n              final int size = list.size();\n              list =\n                  list.mutableCopyWithCapacity(\n                      size == 0 ? AbstractProtobufList.DEFAULT_CAPACITY : size * 2);\n              unsafe.putObject(message, fieldOffset, list);\n            }\n            position =\n                decodeMessageList(\n                    getMessageFieldSchema(pos), tag, data, position, limit, list, registers);\n            continue;\n          }\n        } else if (fieldType <= 49) {\n          \r\n          final int oldPosition = position;\n          position =\n              parseRepeatedField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  pos,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        } else if (fieldType == 50) {\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            final int oldPosition = position;\n            position = parseMapField(message, data, position, limit, pos, fieldOffset, registers);\n            if (position != oldPosition) {\n              continue;\n            }\n          }\n        } else {\n          final int oldPosition = position;\n          position =\n              parseOneofField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  pos,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        }\n      }\n      position = decodeUnknownField(\n          tag, data, position, limit, getMutableUnknownFields(message), registers);\n    }\n    if (currentPresenceFieldOffset != NO_PRESENCE_SENTINEL) {\n      unsafe.putInt(message, (long) currentPresenceFieldOffset, currentPresenceField);\n    }\n    if (position != limit) {\n      throw InvalidProtocolBufferException.parseFailure();\n    }\n    return position;\n  }\n","date":"2020-04-02 00:42:57","endLine":5434,"groupId":"10697","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parseProto3Message","params":"(Tmessage@byte[]data@intposition@intlimit@Registersregisters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/13/9e55a971428833355c674bd64498cc8b3a2f22.src","preCode":"  private int parseProto3Message(\n      T message, byte[] data, int position, int limit, Registers registers) throws IOException {\n    final sun.misc.Unsafe unsafe = UNSAFE;\n    int tag = 0;\n    int oldNumber = -1;\n    int pos = 0;\n    while (position < limit) {\n      tag = data[position++];\n      if (tag < 0) {\n        position = decodeVarint32(tag, data, position, registers);\n        tag = registers.int1;\n      }\n      final int number = tag >>> 3;\n      final int wireType = tag & 0x7;\n      if (number > oldNumber) {\n        pos = positionForFieldNumber(number, pos / INTS_PER_FIELD);\n      } else {\n        pos = positionForFieldNumber(number);\n      }\n      oldNumber = number;\n      if (pos == -1) {\n        \r\n        pos = 0;\n      } else {\n        final int typeAndOffset = buffer[pos + 1];\n        final int fieldType = type(typeAndOffset);\n        final long fieldOffset = offset(typeAndOffset);\n        if (fieldType <= 17) {\n          switch (fieldType) {\n            case 0: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                UnsafeUtil.putDouble(message, fieldOffset, decodeDouble(data, position));\n                position += 8;\n                continue;\n              }\n              break;\n            case 1: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                UnsafeUtil.putFloat(message, fieldOffset, decodeFloat(data, position));\n                position += 4;\n                continue;\n              }\n              break;\n            case 2: \r\n            case 3: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(message, fieldOffset, registers.long1);\n                continue;\n              }\n              break;\n            case 4: \r\n            case 11: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                continue;\n              }\n              break;\n            case 5: \r\n            case 14: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED64) {\n                unsafe.putLong(message, fieldOffset, decodeFixed64(data, position));\n                position += 8;\n                continue;\n              }\n              break;\n            case 6: \r\n            case 13: \r\n              if (wireType == WireFormat.WIRETYPE_FIXED32) {\n                unsafe.putInt(message, fieldOffset, decodeFixed32(data, position));\n                position += 4;\n                continue;\n              }\n              break;\n            case 7: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                UnsafeUtil.putBoolean(message, fieldOffset, registers.long1 != 0);\n                continue;\n              }\n              break;\n            case 8: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                if ((typeAndOffset & ENFORCE_UTF8_MASK) == 0) {\n                  position = decodeString(data, position, registers);\n                } else {\n                  position = decodeStringRequireUtf8(data, position, registers);\n                }\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                continue;\n              }\n              break;\n            case 9: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position =\n                    decodeMessageField(\n                        getMessageFieldSchema(pos), data, position, limit, registers);\n                final Object oldValue = unsafe.getObject(message, fieldOffset);\n                if (oldValue == null) {\n                  unsafe.putObject(message, fieldOffset, registers.object1);\n                } else {\n                  unsafe.putObject(\n                      message, fieldOffset, Internal.mergeMessage(oldValue, registers.object1));\n                }\n                continue;\n              }\n              break;\n            case 10: \r\n              if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n                position = decodeBytes(data, position, registers);\n                unsafe.putObject(message, fieldOffset, registers.object1);\n                continue;\n              }\n              break;\n            case 12: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(message, fieldOffset, registers.int1);\n                continue;\n              }\n              break;\n            case 15: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint32(data, position, registers);\n                unsafe.putInt(\n                    message, fieldOffset, CodedInputStream.decodeZigZag32(registers.int1));\n                continue;\n              }\n              break;\n            case 16: \r\n              if (wireType == WireFormat.WIRETYPE_VARINT) {\n                position = decodeVarint64(data, position, registers);\n                unsafe.putLong(\n                    message, fieldOffset, CodedInputStream.decodeZigZag64(registers.long1));\n                continue;\n              }\n              break;\n            default:\n              break;\n          }\n        } else if (fieldType == 27) {\n          \r\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            ProtobufList<?> list = (ProtobufList<?>) unsafe.getObject(message, fieldOffset);\n            if (!list.isModifiable()) {\n              final int size = list.size();\n              list =\n                  list.mutableCopyWithCapacity(\n                      size == 0 ? AbstractProtobufList.DEFAULT_CAPACITY : size * 2);\n              unsafe.putObject(message, fieldOffset, list);\n            }\n            position =\n                decodeMessageList(\n                    getMessageFieldSchema(pos), tag, data, position, limit, list, registers);\n            continue;\n          }\n        } else if (fieldType <= 49) {\n          \r\n          final int oldPosition = position;\n          position =\n              parseRepeatedField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  pos,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        } else if (fieldType == 50) {\n          if (wireType == WireFormat.WIRETYPE_LENGTH_DELIMITED) {\n            final int oldPosition = position;\n            position = parseMapField(message, data, position, limit, pos, fieldOffset, registers);\n            if (position != oldPosition) {\n              continue;\n            }\n          }\n        } else {\n          final int oldPosition = position;\n          position =\n              parseOneofField(\n                  message,\n                  data,\n                  position,\n                  limit,\n                  tag,\n                  number,\n                  wireType,\n                  typeAndOffset,\n                  fieldType,\n                  fieldOffset,\n                  pos,\n                  registers);\n          if (position != oldPosition) {\n            continue;\n          }\n        }\n      }\n      position = decodeUnknownField(\n          tag, data, position, limit, getMutableUnknownFields(message), registers);\n    }\n    if (position != limit) {\n      throw InvalidProtocolBufferException.parseFailure();\n    }\n    return position;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/MessageSchema.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":5185,"status":"M"}],"commitId":"e667bf6eaaa2fb1ba2987c6538df81f88500d030","commitMessage":"@@@Merge pull request #7344 from haberman/sync-integrate\n\nIntegrate from Piper @304070343 for C++.  Java.  and Python","date":"2020-04-02 00:42:57","modifiedFileCount":"28","status":"M","submitter":"Joshua Haberman"}]
