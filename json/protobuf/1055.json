[{"authorTime":"2016-06-30 06:23:27","codes":[{"authorDate":"2015-08-26 07:49:45","commitOrder":2,"curCode":"  public void testFromString() throws Exception {\n    FieldMask mask = FieldMaskUtil.fromString(\"\");\n    assertEquals(0, mask.getPathsCount());\n    mask = FieldMaskUtil.fromString(\"foo\");\n    assertEquals(1, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    mask = FieldMaskUtil.fromString(\"foo,bar.baz\");\n    assertEquals(2, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    assertEquals(\"bar.baz\", mask.getPaths(1));\n    \n    \r\n    mask = FieldMaskUtil.fromString(\",foo,,bar,\");\n    assertEquals(2, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    assertEquals(\"bar\", mask.getPaths(1));\n    \n    \r\n    mask = FieldMaskUtil.fromString(NestedTestAllTypes.class, \",payload\");\n    \n    try {\n      mask = FieldMaskUtil.fromString(\n          NestedTestAllTypes.class, \"payload,nonexist\");\n      fail(\"Exception is expected.\");\n    } catch (IllegalArgumentException e) {\n      \r\n    }\n  }\n","date":"2015-08-26 07:51:22","endLine":105,"groupId":"2018","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFromString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/67/fbe0b1acd052458e3e570d43180a098e10f3fb.src","preCode":"  public void testFromString() throws Exception {\n    FieldMask mask = FieldMaskUtil.fromString(\"\");\n    assertEquals(0, mask.getPathsCount());\n    mask = FieldMaskUtil.fromString(\"foo\");\n    assertEquals(1, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    mask = FieldMaskUtil.fromString(\"foo,bar.baz\");\n    assertEquals(2, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    assertEquals(\"bar.baz\", mask.getPaths(1));\n    \n    \r\n    mask = FieldMaskUtil.fromString(\",foo,,bar,\");\n    assertEquals(2, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    assertEquals(\"bar\", mask.getPaths(1));\n    \n    \r\n    mask = FieldMaskUtil.fromString(NestedTestAllTypes.class, \",payload\");\n    \n    try {\n      mask = FieldMaskUtil.fromString(\n          NestedTestAllTypes.class, \"payload,nonexist\");\n      fail(\"Exception is expected.\");\n    } catch (IllegalArgumentException e) {\n      \r\n    }\n  }\n","realPath":"java/util/src/test/java/com/google/protobuf/util/FieldMaskUtilTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"NB"},{"authorDate":"2016-06-30 06:23:27","commitOrder":2,"curCode":"  public void testFromJsonString() throws Exception {\n    FieldMask mask = FieldMaskUtil.fromJsonString(\"\");\n    assertEquals(0, mask.getPathsCount());\n    mask = FieldMaskUtil.fromJsonString(\"foo\");\n    assertEquals(1, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    mask = FieldMaskUtil.fromJsonString(\"foo.barBaz\");\n    assertEquals(1, mask.getPathsCount());\n    assertEquals(\"foo.bar_baz\", mask.getPaths(0));\n    mask = FieldMaskUtil.fromJsonString(\"foo,barBaz\");\n    assertEquals(2, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    assertEquals(\"bar_baz\", mask.getPaths(1));\n  }\n","date":"2016-06-30 06:38:03","endLine":173,"groupId":"2018","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFromJsonString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1a/998570532b9a39d7e5d25b4ff332f911363452.src","preCode":"  public void testFromJsonString() throws Exception {\n    FieldMask mask = FieldMaskUtil.fromJsonString(\"\");\n    assertEquals(0, mask.getPathsCount());\n    mask = FieldMaskUtil.fromJsonString(\"foo\");\n    assertEquals(1, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    mask = FieldMaskUtil.fromJsonString(\"foo.barBaz\");\n    assertEquals(1, mask.getPathsCount());\n    assertEquals(\"foo.bar_baz\", mask.getPaths(0));\n    mask = FieldMaskUtil.fromJsonString(\"foo,barBaz\");\n    assertEquals(2, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    assertEquals(\"bar_baz\", mask.getPaths(1));\n  }\n","realPath":"java/util/src/test/java/com/google/protobuf/util/FieldMaskUtilTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"}],"commitId":"d64a2d9941c36a7bc2a7959ea10ab8363192ac14","commitMessage":"@@@Integrated internal changes from Google\n\nThis includes all internal changes from around May 20 to now.\n","date":"2016-06-30 06:38:03","modifiedFileCount":"44","status":"M","submitter":"Adam Cozzette"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testFromString() throws Exception {\n    FieldMask mask = FieldMaskUtil.fromString(\"\");\n    assertThat(mask.getPathsCount()).isEqualTo(0);\n    mask = FieldMaskUtil.fromString(\"foo\");\n    assertThat(mask.getPathsCount()).isEqualTo(1);\n    assertThat(mask.getPaths(0)).isEqualTo(\"foo\");\n    mask = FieldMaskUtil.fromString(\"foo,bar.baz\");\n    assertThat(mask.getPathsCount()).isEqualTo(2);\n    assertThat(mask.getPaths(0)).isEqualTo(\"foo\");\n    assertThat(mask.getPaths(1)).isEqualTo(\"bar.baz\");\n\n    \r\n    mask = FieldMaskUtil.fromString(\",foo,,bar,\");\n    assertThat(mask.getPathsCount()).isEqualTo(2);\n    assertThat(mask.getPaths(0)).isEqualTo(\"foo\");\n    assertThat(mask.getPaths(1)).isEqualTo(\"bar\");\n\n    \r\n    mask = FieldMaskUtil.fromString(NestedTestAllTypes.class, \",payload\");\n\n    try {\n      mask = FieldMaskUtil.fromString(NestedTestAllTypes.class, \"payload,nonexist\");\n      assertWithMessage(\"Exception is expected.\").fail();\n    } catch (IllegalArgumentException e) {\n      \r\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":140,"groupId":"1055","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFromString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/36/7fe52f846a0590f472ff87ae274f77688bcd4c.src","preCode":"  public void testFromString() throws Exception {\n    FieldMask mask = FieldMaskUtil.fromString(\"\");\n    assertEquals(0, mask.getPathsCount());\n    mask = FieldMaskUtil.fromString(\"foo\");\n    assertEquals(1, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    mask = FieldMaskUtil.fromString(\"foo,bar.baz\");\n    assertEquals(2, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    assertEquals(\"bar.baz\", mask.getPaths(1));\n\n    \r\n    mask = FieldMaskUtil.fromString(\",foo,,bar,\");\n    assertEquals(2, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    assertEquals(\"bar\", mask.getPaths(1));\n\n    \r\n    mask = FieldMaskUtil.fromString(NestedTestAllTypes.class, \",payload\");\n\n    try {\n      mask = FieldMaskUtil.fromString(NestedTestAllTypes.class, \"payload,nonexist\");\n      fail(\"Exception is expected.\");\n    } catch (IllegalArgumentException e) {\n      \r\n    }\n  }\n","realPath":"java/util/src/test/java/com/google/protobuf/util/FieldMaskUtilTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testFromJsonString() throws Exception {\n    FieldMask mask = FieldMaskUtil.fromJsonString(\"\");\n    assertThat(mask.getPathsCount()).isEqualTo(0);\n    mask = FieldMaskUtil.fromJsonString(\"foo\");\n    assertThat(mask.getPathsCount()).isEqualTo(1);\n    assertThat(mask.getPaths(0)).isEqualTo(\"foo\");\n    mask = FieldMaskUtil.fromJsonString(\"foo.barBaz\");\n    assertThat(mask.getPathsCount()).isEqualTo(1);\n    assertThat(mask.getPaths(0)).isEqualTo(\"foo.bar_baz\");\n    mask = FieldMaskUtil.fromJsonString(\"foo,barBaz\");\n    assertThat(mask.getPathsCount()).isEqualTo(2);\n    assertThat(mask.getPaths(0)).isEqualTo(\"foo\");\n    assertThat(mask.getPaths(1)).isEqualTo(\"bar_baz\");\n  }\n","date":"2021-08-10 06:55:00","endLine":194,"groupId":"1055","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFromJsonString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/36/7fe52f846a0590f472ff87ae274f77688bcd4c.src","preCode":"  public void testFromJsonString() throws Exception {\n    FieldMask mask = FieldMaskUtil.fromJsonString(\"\");\n    assertEquals(0, mask.getPathsCount());\n    mask = FieldMaskUtil.fromJsonString(\"foo\");\n    assertEquals(1, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    mask = FieldMaskUtil.fromJsonString(\"foo.barBaz\");\n    assertEquals(1, mask.getPathsCount());\n    assertEquals(\"foo.bar_baz\", mask.getPaths(0));\n    mask = FieldMaskUtil.fromJsonString(\"foo,barBaz\");\n    assertEquals(2, mask.getPathsCount());\n    assertEquals(\"foo\", mask.getPaths(0));\n    assertEquals(\"bar_baz\", mask.getPaths(1));\n  }\n","realPath":"java/util/src/test/java/com/google/protobuf/util/FieldMaskUtilTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
