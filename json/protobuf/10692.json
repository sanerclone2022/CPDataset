[{"authorTime":"2019-04-06 07:39:18","codes":[{"authorDate":"2019-04-06 07:39:18","commitOrder":1,"curCode":"  private void mergeMessage(T message, T other, int pos) {\n    final int typeAndOffset = typeAndOffsetAt(pos);\n    final long offset = offset(typeAndOffset);\n\n    if (!isFieldPresent(other, pos)) {\n      return;\n    }\n\n    Object mine = UnsafeUtil.getObject(message, offset);\n    Object theirs = UnsafeUtil.getObject(other, offset);\n    if (mine != null && theirs != null) {\n      Object merged = Internal.mergeMessage(mine, theirs);\n      UnsafeUtil.putObject(message, offset, merged);\n      setFieldPresent(message, pos);\n    } else if (theirs != null) {\n      UnsafeUtil.putObject(message, offset, theirs);\n      setFieldPresent(message, pos);\n    }\n  }\n","date":"2019-04-06 07:39:18","endLine":1386,"groupId":"1164","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeMessage","params":"(Tmessage@Tother@intpos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/67/584ed413730fcf50498f47646295eda6343a1e.src","preCode":"  private void mergeMessage(T message, T other, int pos) {\n    final int typeAndOffset = typeAndOffsetAt(pos);\n    final long offset = offset(typeAndOffset);\n\n    if (!isFieldPresent(other, pos)) {\n      return;\n    }\n\n    Object mine = UnsafeUtil.getObject(message, offset);\n    Object theirs = UnsafeUtil.getObject(other, offset);\n    if (mine != null && theirs != null) {\n      Object merged = Internal.mergeMessage(mine, theirs);\n      UnsafeUtil.putObject(message, offset, merged);\n      setFieldPresent(message, pos);\n    } else if (theirs != null) {\n      UnsafeUtil.putObject(message, offset, theirs);\n      setFieldPresent(message, pos);\n    }\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/MessageSchema.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1368,"status":"B"},{"authorDate":"2019-04-06 07:39:18","commitOrder":1,"curCode":"  private void mergeOneofMessage(T message, T other, int pos) {\n    int typeAndOffset = typeAndOffsetAt(pos);\n    int number = numberAt(pos);\n    long offset = offset(typeAndOffset);\n\n    if (!isOneofPresent(other, number, pos)) {\n      return;\n    }\n\n    Object mine = UnsafeUtil.getObject(message, offset);\n    Object theirs = UnsafeUtil.getObject(other, offset);\n    if (mine != null && theirs != null) {\n      Object merged = Internal.mergeMessage(mine, theirs);\n      UnsafeUtil.putObject(message, offset, merged);\n      setOneofPresent(message, number, pos);\n    } else if (theirs != null) {\n      UnsafeUtil.putObject(message, offset, theirs);\n      setOneofPresent(message, number, pos);\n    }\n  }\n","date":"2019-04-06 07:39:18","endLine":1407,"groupId":"1164","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeOneofMessage","params":"(Tmessage@Tother@intpos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/67/584ed413730fcf50498f47646295eda6343a1e.src","preCode":"  private void mergeOneofMessage(T message, T other, int pos) {\n    int typeAndOffset = typeAndOffsetAt(pos);\n    int number = numberAt(pos);\n    long offset = offset(typeAndOffset);\n\n    if (!isOneofPresent(other, number, pos)) {\n      return;\n    }\n\n    Object mine = UnsafeUtil.getObject(message, offset);\n    Object theirs = UnsafeUtil.getObject(other, offset);\n    if (mine != null && theirs != null) {\n      Object merged = Internal.mergeMessage(mine, theirs);\n      UnsafeUtil.putObject(message, offset, merged);\n      setOneofPresent(message, number, pos);\n    } else if (theirs != null) {\n      UnsafeUtil.putObject(message, offset, theirs);\n      setOneofPresent(message, number, pos);\n    }\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/MessageSchema.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1388,"status":"B"}],"commitId":"a48a574f7e890436363ca8ac71d866252b216052","commitMessage":"@@@Down integrate to Github\n","date":"2019-04-06 07:39:18","modifiedFileCount":"20","status":"B","submitter":"Hao Nguyen"},{"authorTime":"2020-08-19 00:29:35","codes":[{"authorDate":"2019-04-06 07:39:18","commitOrder":2,"curCode":"  private void mergeMessage(T message, T other, int pos) {\n    final int typeAndOffset = typeAndOffsetAt(pos);\n    final long offset = offset(typeAndOffset);\n\n    if (!isFieldPresent(other, pos)) {\n      return;\n    }\n\n    Object mine = UnsafeUtil.getObject(message, offset);\n    Object theirs = UnsafeUtil.getObject(other, offset);\n    if (mine != null && theirs != null) {\n      Object merged = Internal.mergeMessage(mine, theirs);\n      UnsafeUtil.putObject(message, offset, merged);\n      setFieldPresent(message, pos);\n    } else if (theirs != null) {\n      UnsafeUtil.putObject(message, offset, theirs);\n      setFieldPresent(message, pos);\n    }\n  }\n","date":"2019-04-06 07:39:18","endLine":1386,"groupId":"10692","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeMessage","params":"(Tmessage@Tother@intpos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/67/584ed413730fcf50498f47646295eda6343a1e.src","preCode":"  private void mergeMessage(T message, T other, int pos) {\n    final int typeAndOffset = typeAndOffsetAt(pos);\n    final long offset = offset(typeAndOffset);\n\n    if (!isFieldPresent(other, pos)) {\n      return;\n    }\n\n    Object mine = UnsafeUtil.getObject(message, offset);\n    Object theirs = UnsafeUtil.getObject(other, offset);\n    if (mine != null && theirs != null) {\n      Object merged = Internal.mergeMessage(mine, theirs);\n      UnsafeUtil.putObject(message, offset, merged);\n      setFieldPresent(message, pos);\n    } else if (theirs != null) {\n      UnsafeUtil.putObject(message, offset, theirs);\n      setFieldPresent(message, pos);\n    }\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/MessageSchema.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1368,"status":"N"},{"authorDate":"2020-08-19 00:29:35","commitOrder":2,"curCode":"  private void mergeOneofMessage(T message, T other, int pos) {\n    int typeAndOffset = typeAndOffsetAt(pos);\n    int number = numberAt(pos);\n    long offset = offset(typeAndOffset);\n\n    if (!isOneofPresent(other, number, pos)) {\n      return;\n    }\n    Object mine = null;\n    if (isOneofPresent(message, number, pos)) {\n      mine = UnsafeUtil.getObject(message, offset);\n    }\n    Object theirs = UnsafeUtil.getObject(other, offset);\n    if (mine != null && theirs != null) {\n      Object merged = Internal.mergeMessage(mine, theirs);\n      UnsafeUtil.putObject(message, offset, merged);\n      setOneofPresent(message, number, pos);\n    } else if (theirs != null) {\n      UnsafeUtil.putObject(message, offset, theirs);\n      setOneofPresent(message, number, pos);\n    }\n  }\n","date":"2020-08-19 00:29:35","endLine":1418,"groupId":"10692","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeOneofMessage","params":"(Tmessage@Tother@intpos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/28/879d7785be803313ccaa416cb67024f1f7cd59.src","preCode":"  private void mergeOneofMessage(T message, T other, int pos) {\n    int typeAndOffset = typeAndOffsetAt(pos);\n    int number = numberAt(pos);\n    long offset = offset(typeAndOffset);\n\n    if (!isOneofPresent(other, number, pos)) {\n      return;\n    }\n\n    Object mine = UnsafeUtil.getObject(message, offset);\n    Object theirs = UnsafeUtil.getObject(other, offset);\n    if (mine != null && theirs != null) {\n      Object merged = Internal.mergeMessage(mine, theirs);\n      UnsafeUtil.putObject(message, offset, merged);\n      setOneofPresent(message, number, pos);\n    } else if (theirs != null) {\n      UnsafeUtil.putObject(message, offset, theirs);\n      setOneofPresent(message, number, pos);\n    }\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/MessageSchema.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1397,"status":"M"}],"commitId":"214c77e1b76e63e512bd675d1c300c80438642b6","commitMessage":"@@@Merge pull request #7698 from haberman/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2020-08-19 00:29:35","modifiedFileCount":"6","status":"M","submitter":"Joshua Haberman"}]
