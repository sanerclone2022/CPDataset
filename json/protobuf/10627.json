[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public boolean addAll(Collection<? extends Double> collection) {\n    ensureIsMutable();\n    \n    if (collection == null) {\n      throw new NullPointerException();\n    }\n    \n    \r\n    if (!(collection instanceof DoubleArrayList)) {\n      return super.addAll(collection);\n    }\n    \n    DoubleArrayList list = (DoubleArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n    \n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n    \n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n    \n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","date":"2016-01-14 03:22:18","endLine":208,"groupId":"1549","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addAll","params":"(Collection<?extendsDouble>collection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/bc/c9d6ee99e07ea2d6cc68207245848f1a28a539.src","preCode":"  public boolean addAll(Collection<? extends Double> collection) {\n    ensureIsMutable();\n    \n    if (collection == null) {\n      throw new NullPointerException();\n    }\n    \n    \r\n    if (!(collection instanceof DoubleArrayList)) {\n      return super.addAll(collection);\n    }\n    \n    DoubleArrayList list = (DoubleArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n    \n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n    \n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n    \n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/DoubleArrayList.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public boolean addAll(Collection<? extends Integer> collection) {\n    ensureIsMutable();\n    \n    if (collection == null) {\n      throw new NullPointerException();\n    }\n    \n    \r\n    if (!(collection instanceof IntArrayList)) {\n      return super.addAll(collection);\n    }\n    \n    IntArrayList list = (IntArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n    \n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n    \n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n    \n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","date":"2016-01-14 03:22:18","endLine":207,"groupId":"1549","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(Collection<?extendsInteger>collection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f4/e68ed890b751f4aef05a6ee99bbb5a2506a4ba.src","preCode":"  public boolean addAll(Collection<? extends Integer> collection) {\n    ensureIsMutable();\n    \n    if (collection == null) {\n      throw new NullPointerException();\n    }\n    \n    \r\n    if (!(collection instanceof IntArrayList)) {\n      return super.addAll(collection);\n    }\n    \n    IntArrayList list = (IntArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n    \n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n    \n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n    \n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/IntArrayList.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2017-05-02 01:58:38","codes":[{"authorDate":"2017-05-02 01:58:38","commitOrder":2,"curCode":"  public boolean addAll(Collection<? extends Double> collection) {\n    ensureIsMutable();\n\n    checkNotNull(collection);\n\n    \r\n    if (!(collection instanceof DoubleArrayList)) {\n      return super.addAll(collection);\n    }\n\n    DoubleArrayList list = (DoubleArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","date":"2017-05-02 01:58:38","endLine":229,"groupId":"1549","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addAll","params":"(Collection<?extendsDouble>collection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/86/7b85ce8617a303a8e967e1677f233ef9135948.src","preCode":"  public boolean addAll(Collection<? extends Double> collection) {\n    ensureIsMutable();\n\n    if (collection == null) {\n      throw new NullPointerException();\n    }\n\n    \r\n    if (!(collection instanceof DoubleArrayList)) {\n      return super.addAll(collection);\n    }\n\n    DoubleArrayList list = (DoubleArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/DoubleArrayList.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"},{"authorDate":"2017-05-02 01:58:38","commitOrder":2,"curCode":"  public boolean addAll(Collection<? extends Integer> collection) {\n    ensureIsMutable();\n\n    checkNotNull(collection);\n\n    \r\n    if (!(collection instanceof IntArrayList)) {\n      return super.addAll(collection);\n    }\n\n    IntArrayList list = (IntArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","date":"2017-05-02 01:58:38","endLine":228,"groupId":"1549","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(Collection<?extendsInteger>collection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/af/f5c21b2603f2e16ed5de49563650c2e33a6841.src","preCode":"  public boolean addAll(Collection<? extends Integer> collection) {\n    ensureIsMutable();\n\n    if (collection == null) {\n      throw new NullPointerException();\n    }\n\n    \r\n    if (!(collection instanceof IntArrayList)) {\n      return super.addAll(collection);\n    }\n\n    IntArrayList list = (IntArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/IntArrayList.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"2f4489a3e504e0a4aaffee69b551c6acc9e08374","commitMessage":"@@@Merge pull request #3024 from acozzette/merge-3.3-to-master\n\nMerged 3.3.x branch to master","date":"2017-05-02 01:58:38","modifiedFileCount":"38","status":"M","submitter":"Adam Cozzette"},{"authorTime":"2021-08-29 20:43:27","codes":[{"authorDate":"2021-08-29 20:43:27","commitOrder":3,"curCode":"  public boolean addAll(Collection<? extends Double> collection) {\n    ensureIsMutable();\n\n    Objects.requireNonNull(collection);\n\n    \r\n    if (!(collection instanceof DoubleArrayList)) {\n      return super.addAll(collection);\n    }\n\n    DoubleArrayList list = (DoubleArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","date":"2021-08-29 20:43:27","endLine":267,"groupId":"1549","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addAll","params":"(Collection<?extendsDouble>collection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/d4/9e80ee4fe72d26b0f57f894e9b7512e7cc9c2f.src","preCode":"  public boolean addAll(Collection<? extends Double> collection) {\n    ensureIsMutable();\n\n    checkNotNull(collection);\n\n    \r\n    if (!(collection instanceof DoubleArrayList)) {\n      return super.addAll(collection);\n    }\n\n    DoubleArrayList list = (DoubleArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/DoubleArrayList.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2021-08-29 20:43:27","commitOrder":3,"curCode":"  public boolean addAll(Collection<? extends Integer> collection) {\n    ensureIsMutable();\n\n    Objects.requireNonNull(collection);\n\n    \r\n    if (!(collection instanceof IntArrayList)) {\n      return super.addAll(collection);\n    }\n\n    IntArrayList list = (IntArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","date":"2021-08-29 20:43:27","endLine":266,"groupId":"1549","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(Collection<?extendsInteger>collection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/ed/171398c1cad3c20fff5a19167c84bbb15cba22.src","preCode":"  public boolean addAll(Collection<? extends Integer> collection) {\n    ensureIsMutable();\n\n    checkNotNull(collection);\n\n    \r\n    if (!(collection instanceof IntArrayList)) {\n      return super.addAll(collection);\n    }\n\n    IntArrayList list = (IntArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/IntArrayList.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"}],"commitId":"a3e55874472403870275778ade0b91cce6333633","commitMessage":"@@@Merge pull request #7855 from belugabehr/ObjectsRequireNonNull\n\nStandardize NPE checks on JDK Objects utility","date":"2021-08-29 20:43:27","modifiedFileCount":"33","status":"M","submitter":"Elliotte Rusty Harold"},{"authorTime":"2021-09-14 03:49:00","codes":[{"authorDate":"2021-09-14 03:49:00","commitOrder":4,"curCode":"  public boolean addAll(Collection<? extends Double> collection) {\n    ensureIsMutable();\n\n    checkNotNull(collection);\n\n    \r\n    if (!(collection instanceof DoubleArrayList)) {\n      return super.addAll(collection);\n    }\n\n    DoubleArrayList list = (DoubleArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","date":"2021-09-14 03:49:00","endLine":268,"groupId":"10627","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"addAll","params":"(Collection<?extendsDouble>collection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/40/8565343720d79fdb2c762203ba04186411bf30.src","preCode":"  public boolean addAll(Collection<? extends Double> collection) {\n    ensureIsMutable();\n\n    Objects.requireNonNull(collection);\n\n    \r\n    if (!(collection instanceof DoubleArrayList)) {\n      return super.addAll(collection);\n    }\n\n    DoubleArrayList list = (DoubleArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/DoubleArrayList.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2021-09-14 03:49:00","commitOrder":4,"curCode":"  public boolean addAll(Collection<? extends Integer> collection) {\n    ensureIsMutable();\n\n    checkNotNull(collection);\n\n    \r\n    if (!(collection instanceof IntArrayList)) {\n      return super.addAll(collection);\n    }\n\n    IntArrayList list = (IntArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","date":"2021-09-14 03:49:00","endLine":267,"groupId":"10627","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"addAll","params":"(Collection<?extendsInteger>collection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/9d/aeebed99236ec652fb65368a00d5561566e13d.src","preCode":"  public boolean addAll(Collection<? extends Integer> collection) {\n    ensureIsMutable();\n\n    Objects.requireNonNull(collection);\n\n    \r\n    if (!(collection instanceof IntArrayList)) {\n      return super.addAll(collection);\n    }\n\n    IntArrayList list = (IntArrayList) collection;\n    if (list.size == 0) {\n      return false;\n    }\n\n    int overflow = Integer.MAX_VALUE - size;\n    if (overflow < list.size) {\n      \r\n      throw new OutOfMemoryError();\n    }\n\n    int newSize = size + list.size;\n    if (newSize > array.length) {\n      array = Arrays.copyOf(array, newSize);\n    }\n\n    System.arraycopy(list.array, 0, array, size, list.size);\n    size = newSize;\n    modCount++;\n    return true;\n  }\n","realPath":"java/core/src/main/java/com/google/protobuf/IntArrayList.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"5f55fe1d6b2ee4b8d54d83eb49279089e5b67b9f","commitMessage":"@@@enforce android API level 14 (#8971)\n\n* enforce android API level 14\nAdd animal-sniffer plugin to check for android compatibility\n\n* Revert \"Merge pull request #7855 from belugabehr/ObjectsRequireNonNull\"\n\nThis reverts commit a3e55874472403870275778ade0b91cce6333633.  reversing\nchanges made to f79f956b7459ba15aa0ad91d6f09bd7931481593.","date":"2021-09-14 03:49:00","modifiedFileCount":"33","status":"M","submitter":"Elliotte Rusty Harold"}]
