[{"authorTime":"2019-04-06 07:39:18","codes":[{"authorDate":"2019-04-06 07:39:18","commitOrder":1,"curCode":"  public void proto2Roundtrip() throws Exception {\n    Proto2Message expected = new Proto2MessageFactory(5, 10, 2, 2).newMessage();\n    byte[] expectedBytes = expected.toByteArray();\n\n    \r\n    Proto2Message result = fromByteArray(expectedBytes, Proto2Message.class);\n    assertEquals(expected, result);\n\n    \r\n    byte[] actualBytes = toByteArray(result, expectedBytes.length);\n\n    \r\n    Proto2Message actual = Proto2Message.parseFrom(actualBytes);\n    assertEquals(expected, actual);\n  }\n","date":"2019-04-06 07:39:18","endLine":85,"groupId":"1092","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"proto2Roundtrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/a2/4b48b51e22a2878db9fcc843c49274d63bc2ab.src","preCode":"  public void proto2Roundtrip() throws Exception {\n    Proto2Message expected = new Proto2MessageFactory(5, 10, 2, 2).newMessage();\n    byte[] expectedBytes = expected.toByteArray();\n\n    \r\n    Proto2Message result = fromByteArray(expectedBytes, Proto2Message.class);\n    assertEquals(expected, result);\n\n    \r\n    byte[] actualBytes = toByteArray(result, expectedBytes.length);\n\n    \r\n    Proto2Message actual = Proto2Message.parseFrom(actualBytes);\n    assertEquals(expected, actual);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedAdapterTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"},{"authorDate":"2019-04-06 07:39:18","commitOrder":1,"curCode":"  public void proto2Roundtrip() throws Exception {\n    Proto2Message expected = new Proto2MessageFactory(5, 10, 2, 2).newMessage();\n    byte[] expectedBytes = expected.toByteArray();\n\n    \r\n    Proto2Message result =\n        ExperimentalSerializationUtil.fromByteArray(expectedBytes, Proto2Message.class);\n    assertEquals(expected, result);\n\n    \r\n    byte[] actualBytes = ExperimentalSerializationUtil.toByteArray(result);\n    Assert.assertEquals(expectedBytes.length, actualBytes.length);\n\n    \r\n    Proto2Message actual = Proto2Message.parseFrom(actualBytes);\n    assertEquals(expected, actual);\n  }\n","date":"2019-04-06 07:39:18","endLine":89,"groupId":"231","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"proto2Roundtrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/cd/a2998f5d8b31e5fe55767192c7c46539908448.src","preCode":"  public void proto2Roundtrip() throws Exception {\n    Proto2Message expected = new Proto2MessageFactory(5, 10, 2, 2).newMessage();\n    byte[] expectedBytes = expected.toByteArray();\n\n    \r\n    Proto2Message result =\n        ExperimentalSerializationUtil.fromByteArray(expectedBytes, Proto2Message.class);\n    assertEquals(expected, result);\n\n    \r\n    byte[] actualBytes = ExperimentalSerializationUtil.toByteArray(result);\n    Assert.assertEquals(expectedBytes.length, actualBytes.length);\n\n    \r\n    Proto2Message actual = Proto2Message.parseFrom(actualBytes);\n    assertEquals(expected, actual);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/BinaryProtocolTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"a48a574f7e890436363ca8ac71d866252b216052","commitMessage":"@@@Down integrate to Github\n","date":"2019-04-06 07:39:18","modifiedFileCount":"20","status":"B","submitter":"Hao Nguyen"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void proto2Roundtrip() throws Exception {\n    Proto2Message expected = new Proto2MessageFactory(5, 10, 2, 2).newMessage();\n    byte[] expectedBytes = expected.toByteArray();\n\n    \r\n    Proto2Message result = fromByteArray(expectedBytes, Proto2Message.class);\n    assertThat(result).isEqualTo(expected);\n\n    \r\n    byte[] actualBytes = toByteArray(result, expectedBytes.length);\n\n    \r\n    Proto2Message actual = Proto2Message.parseFrom(actualBytes);\n    assertThat(actual).isEqualTo(expected);\n  }\n","date":"2021-08-10 06:55:00","endLine":85,"groupId":"10556","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"proto2Roundtrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/6f/5bf0cd520e88ec0f73925eac35bd8c61988efc.src","preCode":"  public void proto2Roundtrip() throws Exception {\n    Proto2Message expected = new Proto2MessageFactory(5, 10, 2, 2).newMessage();\n    byte[] expectedBytes = expected.toByteArray();\n\n    \r\n    Proto2Message result = fromByteArray(expectedBytes, Proto2Message.class);\n    assertEquals(expected, result);\n\n    \r\n    byte[] actualBytes = toByteArray(result, expectedBytes.length);\n\n    \r\n    Proto2Message actual = Proto2Message.parseFrom(actualBytes);\n    assertEquals(expected, actual);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedAdapterTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void proto2Roundtrip() throws Exception {\n    Proto2Message expected = new Proto2MessageFactory(5, 10, 2, 2).newMessage();\n    byte[] expectedBytes = expected.toByteArray();\n\n    \r\n    Proto2Message result =\n        ExperimentalSerializationUtil.fromByteArray(expectedBytes, Proto2Message.class);\n    assertThat(result).isEqualTo(expected);\n\n    \r\n    byte[] actualBytes = ExperimentalSerializationUtil.toByteArray(result);\n    assertThat(actualBytes).hasLength(expectedBytes.length);\n\n    \r\n    Proto2Message actual = Proto2Message.parseFrom(actualBytes);\n    assertThat(actual).isEqualTo(expected);\n  }\n","date":"2021-08-10 06:55:00","endLine":88,"groupId":"10556","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"proto2Roundtrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/08/53b9af184b6bd690844c68ecbe4f39e6d98051.src","preCode":"  public void proto2Roundtrip() throws Exception {\n    Proto2Message expected = new Proto2MessageFactory(5, 10, 2, 2).newMessage();\n    byte[] expectedBytes = expected.toByteArray();\n\n    \r\n    Proto2Message result =\n        ExperimentalSerializationUtil.fromByteArray(expectedBytes, Proto2Message.class);\n    assertEquals(expected, result);\n\n    \r\n    byte[] actualBytes = ExperimentalSerializationUtil.toByteArray(result);\n    Assert.assertEquals(expectedBytes.length, actualBytes.length);\n\n    \r\n    Proto2Message actual = Proto2Message.parseFrom(actualBytes);\n    assertEquals(expected, actual);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/BinaryProtocolTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
