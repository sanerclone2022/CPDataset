[{"authorTime":"2017-12-06 05:02:36","codes":[{"authorDate":"2020-05-12 12:35:30","commitOrder":2,"curCode":"  public void testRoundtripProto3Optional() throws Exception {\n    Message message =\n        TestProto3Optional.newBuilder()\n            .setOptionalInt32(1)\n            .setOptionalInt64(2)\n            .setOptionalNestedEnum(NestedEnum.BAZ)\n            .build();\n    TestProto3Optional.Builder message2 = TestProto3Optional.newBuilder();\n    TextFormat.merge(message.toString(), message2);\n\n    assertTrue(message2.hasOptionalInt32());\n    assertTrue(message2.hasOptionalInt64());\n    assertTrue(message2.hasOptionalNestedEnum());\n    assertEquals(1, message2.getOptionalInt32());\n    assertEquals(2, message2.getOptionalInt64());\n    assertEquals(NestedEnum.BAZ, message2.getOptionalNestedEnum());\n  }\n","date":"2020-05-12 12:35:30","endLine":340,"groupId":"628","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRoundtripProto3Optional","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/6c/a3ae111fff0ea54fd3f709e68765d8d723b323.src","preCode":"  public void testRoundtripProto3Optional() throws Exception {\n    Message message =\n        TestProto3Optional.newBuilder()\n            .setOptionalInt32(1)\n            .setOptionalInt64(2)\n            .setOptionalNestedEnum(NestedEnum.BAZ)\n            .build();\n    TestProto3Optional.Builder message2 = TestProto3Optional.newBuilder();\n    TextFormat.merge(message.toString(), message2);\n\n    assertTrue(message2.hasOptionalInt32());\n    assertTrue(message2.hasOptionalInt64());\n    assertTrue(message2.hasOptionalNestedEnum());\n    assertEquals(1, message2.getOptionalInt32());\n    assertEquals(2, message2.getOptionalInt64());\n    assertEquals(NestedEnum.BAZ, message2.getOptionalNestedEnum());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":324,"status":"B"},{"authorDate":"2017-12-06 05:02:36","commitOrder":2,"curCode":"  public void testMergeComment() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TextFormat.merge(\n      \"# this is a comment\\n\" +\n      \"optional_int32: 1  # another comment\\n\" +\n      \"optional_int64: 2\\n\" +\n      \"# EOF comment\", builder);\n    assertEquals(1, builder.getOptionalInt32());\n    assertEquals(2, builder.getOptionalInt64());\n  }\n","date":"2017-12-06 05:02:36","endLine":521,"groupId":"1599","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeComment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5d/38ca511cae02cd65be960d5f04434e17eb69c3.src","preCode":"  public void testMergeComment() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TextFormat.merge(\n      \"# this is a comment\\n\" +\n      \"optional_int32: 1  # another comment\\n\" +\n      \"optional_int64: 2\\n\" +\n      \"# EOF comment\", builder);\n    assertEquals(1, builder.getOptionalInt32());\n    assertEquals(2, builder.getOptionalInt64());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":512,"status":"NB"}],"commitId":"acbdca9a2012524fb10a4923fb8650ea7e237f1c","commitMessage":"@@@Merge pull request #7485 from haberman/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2020-05-12 12:35:30","modifiedFileCount":"2","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testRoundtripProto3Optional() throws Exception {\n    Message message =\n        TestProto3Optional.newBuilder()\n            .setOptionalInt32(1)\n            .setOptionalInt64(2)\n            .setOptionalNestedEnum(NestedEnum.BAZ)\n            .build();\n    TestProto3Optional.Builder message2 = TestProto3Optional.newBuilder();\n    TextFormat.merge(message.toString(), message2);\n\n    assertThat(message2.hasOptionalInt32()).isTrue();\n    assertThat(message2.hasOptionalInt64()).isTrue();\n    assertThat(message2.hasOptionalNestedEnum()).isTrue();\n    assertThat(message2.getOptionalInt32()).isEqualTo(1);\n    assertThat(message2.getOptionalInt64()).isEqualTo(2);\n    assertThat(message2.getOptionalNestedEnum()).isEqualTo(NestedEnum.BAZ);\n  }\n","date":"2021-08-10 06:55:00","endLine":349,"groupId":"10429","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRoundtripProto3Optional","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/568e1df5e2a4320fcad1e8090fffc838e50ebb.src","preCode":"  public void testRoundtripProto3Optional() throws Exception {\n    Message message =\n        TestProto3Optional.newBuilder()\n            .setOptionalInt32(1)\n            .setOptionalInt64(2)\n            .setOptionalNestedEnum(NestedEnum.BAZ)\n            .build();\n    TestProto3Optional.Builder message2 = TestProto3Optional.newBuilder();\n    TextFormat.merge(message.toString(), message2);\n\n    assertTrue(message2.hasOptionalInt32());\n    assertTrue(message2.hasOptionalInt64());\n    assertTrue(message2.hasOptionalNestedEnum());\n    assertEquals(1, message2.getOptionalInt32());\n    assertEquals(2, message2.getOptionalInt64());\n    assertEquals(NestedEnum.BAZ, message2.getOptionalNestedEnum());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":333,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testMergeComment() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TextFormat.merge(\n        \"# this is a comment\\n\"\n            + \"optional_int32: 1  # another comment\\n\"\n            + \"optional_int64: 2\\n\"\n            + \"# EOF comment\",\n        builder);\n    assertThat(builder.getOptionalInt32()).isEqualTo(1);\n    assertThat(builder.getOptionalInt64()).isEqualTo(2);\n  }\n","date":"2021-08-10 06:55:00","endLine":564,"groupId":"10429","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeComment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/568e1df5e2a4320fcad1e8090fffc838e50ebb.src","preCode":"  public void testMergeComment() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TextFormat.merge(\n        \"# this is a comment\\n\"\n            + \"optional_int32: 1  # another comment\\n\"\n            + \"optional_int64: 2\\n\"\n            + \"# EOF comment\",\n        builder);\n    assertEquals(1, builder.getOptionalInt32());\n    assertEquals(2, builder.getOptionalInt64());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":554,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
