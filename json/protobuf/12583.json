[{"authorTime":"2017-12-01 03:03:46","codes":[{"authorDate":"2017-12-01 03:03:46","commitOrder":1,"curCode":"    final String decodeUtf8Default(ByteBuffer buffer, int index, int size)\n        throws InvalidProtocolBufferException {\n      \r\n      if ((index | size | buffer.limit() - index - size) < 0) {\n        throw new ArrayIndexOutOfBoundsException(\n            String.format(\"buffer limit=%d, index=%d, limit=%d\", buffer.limit(), index, size));\n      }\n\n      int offset = index;\n      final int limit = offset + size;\n\n      \r\n      \r\n      char[] resultArr = new char[size];\n      int resultPos = 0;\n\n      \r\n      \r\n      while (offset < limit) {\n        byte b = buffer.get(offset);\n        if (!DecodeUtil.isOneByte(b)) {\n          break;\n        }\n        offset++;\n        DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n      }\n\n      while (offset < limit) {\n        byte byte1 = buffer.get(offset++);\n        if (DecodeUtil.isOneByte(byte1)) {\n          DecodeUtil.handleOneByte(byte1, resultArr, resultPos++);\n          \r\n          \r\n          while (offset < limit) {\n            byte b = buffer.get(offset);\n            if (!DecodeUtil.isOneByte(b)) {\n              break;\n            }\n            offset++;\n            DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n          }\n        } else if (DecodeUtil.isTwoBytes(byte1)) {\n          if (offset >= limit) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleTwoBytes(\n              byte1,  buffer.get(offset++), resultArr, resultPos++);\n        } else if (DecodeUtil.isThreeBytes(byte1)) {\n          if (offset >= limit - 1) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleThreeBytes(\n              byte1,\n               buffer.get(offset++),\n               buffer.get(offset++),\n              resultArr,\n              resultPos++);\n        } else {\n          if (offset >= limit - 2) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleFourBytes(\n              byte1,\n               buffer.get(offset++),\n               buffer.get(offset++),\n               buffer.get(offset++),\n              resultArr,\n              resultPos++);\n          \r\n          resultPos++;\n        }\n      }\n\n      return new String(resultArr, 0, resultPos);\n    }\n","date":"2017-12-01 03:03:46","endLine":744,"groupId":"1842","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"decodeUtf8Default","params":"(ByteBufferbuffer@intindex@intsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/68abb3c132801f212ca64880fb65a3989bccf8.src","preCode":"    final String decodeUtf8Default(ByteBuffer buffer, int index, int size)\n        throws InvalidProtocolBufferException {\n      \r\n      if ((index | size | buffer.limit() - index - size) < 0) {\n        throw new ArrayIndexOutOfBoundsException(\n            String.format(\"buffer limit=%d, index=%d, limit=%d\", buffer.limit(), index, size));\n      }\n\n      int offset = index;\n      final int limit = offset + size;\n\n      \r\n      \r\n      char[] resultArr = new char[size];\n      int resultPos = 0;\n\n      \r\n      \r\n      while (offset < limit) {\n        byte b = buffer.get(offset);\n        if (!DecodeUtil.isOneByte(b)) {\n          break;\n        }\n        offset++;\n        DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n      }\n\n      while (offset < limit) {\n        byte byte1 = buffer.get(offset++);\n        if (DecodeUtil.isOneByte(byte1)) {\n          DecodeUtil.handleOneByte(byte1, resultArr, resultPos++);\n          \r\n          \r\n          while (offset < limit) {\n            byte b = buffer.get(offset);\n            if (!DecodeUtil.isOneByte(b)) {\n              break;\n            }\n            offset++;\n            DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n          }\n        } else if (DecodeUtil.isTwoBytes(byte1)) {\n          if (offset >= limit) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleTwoBytes(\n              byte1,  buffer.get(offset++), resultArr, resultPos++);\n        } else if (DecodeUtil.isThreeBytes(byte1)) {\n          if (offset >= limit - 1) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleThreeBytes(\n              byte1,\n               buffer.get(offset++),\n               buffer.get(offset++),\n              resultArr,\n              resultPos++);\n        } else {\n          if (offset >= limit - 2) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleFourBytes(\n              byte1,\n               buffer.get(offset++),\n               buffer.get(offset++),\n               buffer.get(offset++),\n              resultArr,\n              resultPos++);\n          \r\n          resultPos++;\n        }\n      }\n\n      return new String(resultArr, 0, resultPos);\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/Utf8.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"B"},{"authorDate":"2017-12-01 03:03:46","commitOrder":1,"curCode":"    String decodeUtf8(byte[] bytes, int index, int size) throws InvalidProtocolBufferException {\n      if ((index | size | bytes.length - index - size) < 0) {\n        throw new ArrayIndexOutOfBoundsException(\n            String.format(\"buffer length=%d, index=%d, size=%d\", bytes.length, index, size));\n      }\n\n      int offset = index;\n      final int limit = offset + size;\n\n      \r\n      \r\n      char[] resultArr = new char[size];\n      int resultPos = 0;\n\n      \r\n      \r\n      while (offset < limit) {\n        byte b = UnsafeUtil.getByte(bytes, offset);\n        if (!DecodeUtil.isOneByte(b)) {\n          break;\n        }\n        offset++;\n        DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n      }\n\n      while (offset < limit) {\n        byte byte1 = UnsafeUtil.getByte(bytes, offset++);\n        if (DecodeUtil.isOneByte(byte1)) {\n          DecodeUtil.handleOneByte(byte1, resultArr, resultPos++);\n          \r\n          \r\n          while (offset < limit) {\n            byte b = UnsafeUtil.getByte(bytes, offset);\n            if (!DecodeUtil.isOneByte(b)) {\n              break;\n            }\n            offset++;\n            DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n          }\n        } else if (DecodeUtil.isTwoBytes(byte1)) {\n          if (offset >= limit) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleTwoBytes(\n              byte1,  UnsafeUtil.getByte(bytes, offset++), resultArr, resultPos++);\n        } else if (DecodeUtil.isThreeBytes(byte1)) {\n          if (offset >= limit - 1) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleThreeBytes(\n              byte1,\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n              resultArr,\n              resultPos++);\n        } else {\n          if (offset >= limit - 2) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleFourBytes(\n              byte1,\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n              resultArr,\n              resultPos++);\n          \r\n          resultPos++;\n        }\n      }\n\n      if (resultPos < resultArr.length) {\n        resultArr = Arrays.copyOf(resultArr, resultPos);\n      }\n      return UnsafeUtil.moveToString(resultArr);\n    }\n","date":"2017-12-01 03:03:46","endLine":1481,"groupId":"364","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"decodeUtf8","params":"(byte[]bytes@intindex@intsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/68abb3c132801f212ca64880fb65a3989bccf8.src","preCode":"    String decodeUtf8(byte[] bytes, int index, int size) throws InvalidProtocolBufferException {\n      if ((index | size | bytes.length - index - size) < 0) {\n        throw new ArrayIndexOutOfBoundsException(\n            String.format(\"buffer length=%d, index=%d, size=%d\", bytes.length, index, size));\n      }\n\n      int offset = index;\n      final int limit = offset + size;\n\n      \r\n      \r\n      char[] resultArr = new char[size];\n      int resultPos = 0;\n\n      \r\n      \r\n      while (offset < limit) {\n        byte b = UnsafeUtil.getByte(bytes, offset);\n        if (!DecodeUtil.isOneByte(b)) {\n          break;\n        }\n        offset++;\n        DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n      }\n\n      while (offset < limit) {\n        byte byte1 = UnsafeUtil.getByte(bytes, offset++);\n        if (DecodeUtil.isOneByte(byte1)) {\n          DecodeUtil.handleOneByte(byte1, resultArr, resultPos++);\n          \r\n          \r\n          while (offset < limit) {\n            byte b = UnsafeUtil.getByte(bytes, offset);\n            if (!DecodeUtil.isOneByte(b)) {\n              break;\n            }\n            offset++;\n            DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n          }\n        } else if (DecodeUtil.isTwoBytes(byte1)) {\n          if (offset >= limit) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleTwoBytes(\n              byte1,  UnsafeUtil.getByte(bytes, offset++), resultArr, resultPos++);\n        } else if (DecodeUtil.isThreeBytes(byte1)) {\n          if (offset >= limit - 1) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleThreeBytes(\n              byte1,\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n              resultArr,\n              resultPos++);\n        } else {\n          if (offset >= limit - 2) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleFourBytes(\n              byte1,\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n              resultArr,\n              resultPos++);\n          \r\n          resultPos++;\n        }\n      }\n\n      if (resultPos < resultArr.length) {\n        resultArr = Arrays.copyOf(resultArr, resultPos);\n      }\n      return UnsafeUtil.moveToString(resultArr);\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/Utf8.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1406,"status":"B"}],"commitId":"6de51caed52d798815954646b230c5aef3e4d2fc","commitMessage":"@@@Merge pull request #3824 from anuraaga/dev_rag\n\n[Java] Add a UTF-8 decoder that uses Unsafe to directly decode a byte buffer.","date":"2017-12-01 03:03:46","modifiedFileCount":"4","status":"B","submitter":"Feng Xiao"},{"authorTime":"2018-05-15 04:41:03","codes":[{"authorDate":"2017-12-01 03:03:46","commitOrder":2,"curCode":"    final String decodeUtf8Default(ByteBuffer buffer, int index, int size)\n        throws InvalidProtocolBufferException {\n      \r\n      if ((index | size | buffer.limit() - index - size) < 0) {\n        throw new ArrayIndexOutOfBoundsException(\n            String.format(\"buffer limit=%d, index=%d, limit=%d\", buffer.limit(), index, size));\n      }\n\n      int offset = index;\n      final int limit = offset + size;\n\n      \r\n      \r\n      char[] resultArr = new char[size];\n      int resultPos = 0;\n\n      \r\n      \r\n      while (offset < limit) {\n        byte b = buffer.get(offset);\n        if (!DecodeUtil.isOneByte(b)) {\n          break;\n        }\n        offset++;\n        DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n      }\n\n      while (offset < limit) {\n        byte byte1 = buffer.get(offset++);\n        if (DecodeUtil.isOneByte(byte1)) {\n          DecodeUtil.handleOneByte(byte1, resultArr, resultPos++);\n          \r\n          \r\n          while (offset < limit) {\n            byte b = buffer.get(offset);\n            if (!DecodeUtil.isOneByte(b)) {\n              break;\n            }\n            offset++;\n            DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n          }\n        } else if (DecodeUtil.isTwoBytes(byte1)) {\n          if (offset >= limit) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleTwoBytes(\n              byte1,  buffer.get(offset++), resultArr, resultPos++);\n        } else if (DecodeUtil.isThreeBytes(byte1)) {\n          if (offset >= limit - 1) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleThreeBytes(\n              byte1,\n               buffer.get(offset++),\n               buffer.get(offset++),\n              resultArr,\n              resultPos++);\n        } else {\n          if (offset >= limit - 2) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleFourBytes(\n              byte1,\n               buffer.get(offset++),\n               buffer.get(offset++),\n               buffer.get(offset++),\n              resultArr,\n              resultPos++);\n          \r\n          resultPos++;\n        }\n      }\n\n      return new String(resultArr, 0, resultPos);\n    }\n","date":"2017-12-01 03:03:46","endLine":744,"groupId":"12583","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"decodeUtf8Default","params":"(ByteBufferbuffer@intindex@intsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/68abb3c132801f212ca64880fb65a3989bccf8.src","preCode":"    final String decodeUtf8Default(ByteBuffer buffer, int index, int size)\n        throws InvalidProtocolBufferException {\n      \r\n      if ((index | size | buffer.limit() - index - size) < 0) {\n        throw new ArrayIndexOutOfBoundsException(\n            String.format(\"buffer limit=%d, index=%d, limit=%d\", buffer.limit(), index, size));\n      }\n\n      int offset = index;\n      final int limit = offset + size;\n\n      \r\n      \r\n      char[] resultArr = new char[size];\n      int resultPos = 0;\n\n      \r\n      \r\n      while (offset < limit) {\n        byte b = buffer.get(offset);\n        if (!DecodeUtil.isOneByte(b)) {\n          break;\n        }\n        offset++;\n        DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n      }\n\n      while (offset < limit) {\n        byte byte1 = buffer.get(offset++);\n        if (DecodeUtil.isOneByte(byte1)) {\n          DecodeUtil.handleOneByte(byte1, resultArr, resultPos++);\n          \r\n          \r\n          while (offset < limit) {\n            byte b = buffer.get(offset);\n            if (!DecodeUtil.isOneByte(b)) {\n              break;\n            }\n            offset++;\n            DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n          }\n        } else if (DecodeUtil.isTwoBytes(byte1)) {\n          if (offset >= limit) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleTwoBytes(\n              byte1,  buffer.get(offset++), resultArr, resultPos++);\n        } else if (DecodeUtil.isThreeBytes(byte1)) {\n          if (offset >= limit - 1) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleThreeBytes(\n              byte1,\n               buffer.get(offset++),\n               buffer.get(offset++),\n              resultArr,\n              resultPos++);\n        } else {\n          if (offset >= limit - 2) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleFourBytes(\n              byte1,\n               buffer.get(offset++),\n               buffer.get(offset++),\n               buffer.get(offset++),\n              resultArr,\n              resultPos++);\n          \r\n          resultPos++;\n        }\n      }\n\n      return new String(resultArr, 0, resultPos);\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/Utf8.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"N"},{"authorDate":"2018-05-15 04:41:03","commitOrder":2,"curCode":"    String decodeUtf8(byte[] bytes, int index, int size) throws InvalidProtocolBufferException {\n      if ((index | size | bytes.length - index - size) < 0) {\n        throw new ArrayIndexOutOfBoundsException(\n            String.format(\"buffer length=%d, index=%d, size=%d\", bytes.length, index, size));\n      }\n\n      int offset = index;\n      final int limit = offset + size;\n\n      \r\n      \r\n      char[] resultArr = new char[size];\n      int resultPos = 0;\n\n      \r\n      \r\n      while (offset < limit) {\n        byte b = UnsafeUtil.getByte(bytes, offset);\n        if (!DecodeUtil.isOneByte(b)) {\n          break;\n        }\n        offset++;\n        DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n      }\n\n      while (offset < limit) {\n        byte byte1 = UnsafeUtil.getByte(bytes, offset++);\n        if (DecodeUtil.isOneByte(byte1)) {\n          DecodeUtil.handleOneByte(byte1, resultArr, resultPos++);\n          \r\n          \r\n          while (offset < limit) {\n            byte b = UnsafeUtil.getByte(bytes, offset);\n            if (!DecodeUtil.isOneByte(b)) {\n              break;\n            }\n            offset++;\n            DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n          }\n        } else if (DecodeUtil.isTwoBytes(byte1)) {\n          if (offset >= limit) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleTwoBytes(\n              byte1,  UnsafeUtil.getByte(bytes, offset++), resultArr, resultPos++);\n        } else if (DecodeUtil.isThreeBytes(byte1)) {\n          if (offset >= limit - 1) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleThreeBytes(\n              byte1,\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n              resultArr,\n              resultPos++);\n        } else {\n          if (offset >= limit - 2) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleFourBytes(\n              byte1,\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n              resultArr,\n              resultPos++);\n          \r\n          resultPos++;\n        }\n      }\n\n      return new String(resultArr, 0, resultPos);\n    }\n","date":"2018-05-15 04:41:03","endLine":1478,"groupId":"12583","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"decodeUtf8","params":"(byte[]bytes@intindex@intsize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/de/75fe6b191dafff87799a866cd52ecd9c39b337.src","preCode":"    String decodeUtf8(byte[] bytes, int index, int size) throws InvalidProtocolBufferException {\n      if ((index | size | bytes.length - index - size) < 0) {\n        throw new ArrayIndexOutOfBoundsException(\n            String.format(\"buffer length=%d, index=%d, size=%d\", bytes.length, index, size));\n      }\n\n      int offset = index;\n      final int limit = offset + size;\n\n      \r\n      \r\n      char[] resultArr = new char[size];\n      int resultPos = 0;\n\n      \r\n      \r\n      while (offset < limit) {\n        byte b = UnsafeUtil.getByte(bytes, offset);\n        if (!DecodeUtil.isOneByte(b)) {\n          break;\n        }\n        offset++;\n        DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n      }\n\n      while (offset < limit) {\n        byte byte1 = UnsafeUtil.getByte(bytes, offset++);\n        if (DecodeUtil.isOneByte(byte1)) {\n          DecodeUtil.handleOneByte(byte1, resultArr, resultPos++);\n          \r\n          \r\n          while (offset < limit) {\n            byte b = UnsafeUtil.getByte(bytes, offset);\n            if (!DecodeUtil.isOneByte(b)) {\n              break;\n            }\n            offset++;\n            DecodeUtil.handleOneByte(b, resultArr, resultPos++);\n          }\n        } else if (DecodeUtil.isTwoBytes(byte1)) {\n          if (offset >= limit) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleTwoBytes(\n              byte1,  UnsafeUtil.getByte(bytes, offset++), resultArr, resultPos++);\n        } else if (DecodeUtil.isThreeBytes(byte1)) {\n          if (offset >= limit - 1) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleThreeBytes(\n              byte1,\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n              resultArr,\n              resultPos++);\n        } else {\n          if (offset >= limit - 2) {\n            throw InvalidProtocolBufferException.invalidUtf8();\n          }\n          DecodeUtil.handleFourBytes(\n              byte1,\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n               UnsafeUtil.getByte(bytes, offset++),\n              resultArr,\n              resultPos++);\n          \r\n          resultPos++;\n        }\n      }\n\n      if (resultPos < resultArr.length) {\n        resultArr = Arrays.copyOf(resultArr, resultPos);\n      }\n      return UnsafeUtil.moveToString(resultArr);\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/Utf8.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1406,"status":"M"}],"commitId":"6dda83dc8c0c819d6a51ccc18bf9c609d25e62e0","commitMessage":"@@@Merge pull request #4611 from anuraaga/remove-string-move\n\n[Java] Remove unsafe no-copy String allocation since it's not useful in rece?","date":"2018-05-15 04:41:03","modifiedFileCount":"2","status":"M","submitter":"Feng Xiao"}]
