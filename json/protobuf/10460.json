[{"authorTime":"2019-04-06 07:39:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testParseUnknownEnumValue() throws Exception {\n    Descriptors.FieldDescriptor singularField =\n      TestAllTypes.getDescriptor().findFieldByName(\"optional_nested_enum\");\n    Descriptors.FieldDescriptor repeatedField =\n      TestAllTypes.getDescriptor().findFieldByName(\"repeated_nested_enum\");\n    assertNotNull(singularField);\n    assertNotNull(repeatedField);\n\n    ByteString data =\n      UnknownFieldSet.newBuilder()\n        .addField(singularField.getNumber(),\n          UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.BAR.getNumber())\n            .addVarint(5)   \r\n            .build())\n        .addField(repeatedField.getNumber(),\n          UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.FOO.getNumber())\n            .addVarint(4)   \r\n            .addVarint(TestAllTypes.NestedEnum.BAZ.getNumber())\n            .addVarint(6)   \r\n            .build())\n        .build()\n        .toByteString();\n\n    {\n      TestAllTypes message = TestAllTypes.parseFrom(data);\n      assertEquals(TestAllTypes.NestedEnum.BAR,\n                   message.getOptionalNestedEnum());\n      assertEquals(\n        Arrays.asList(TestAllTypes.NestedEnum.FOO, TestAllTypes.NestedEnum.BAZ),\n        message.getRepeatedNestedEnumList());\n      assertEquals(Arrays.asList(5L),\n                   message.getUnknownFields()\n                          .getField(singularField.getNumber())\n                          .getVarintList());\n      assertEquals(Arrays.asList(4L, 6L),\n                   message.getUnknownFields()\n                          .getField(repeatedField.getNumber())\n                          .getVarintList());\n    }\n\n    {\n      TestAllExtensions message =\n        TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());\n      assertEquals(TestAllTypes.NestedEnum.BAR,\n        message.getExtension(UnittestProto.optionalNestedEnumExtension));\n      assertEquals(\n        Arrays.asList(TestAllTypes.NestedEnum.FOO, TestAllTypes.NestedEnum.BAZ),\n        message.getExtension(UnittestProto.repeatedNestedEnumExtension));\n      assertEquals(Arrays.asList(5L),\n                   message.getUnknownFields()\n                          .getField(singularField.getNumber())\n                          .getVarintList());\n      assertEquals(Arrays.asList(4L, 6L),\n                   message.getUnknownFields()\n                          .getField(repeatedField.getNumber())\n                          .getVarintList());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":338,"groupId":"865","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseUnknownEnumValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/8c/9dcafeedaf96e09351fbcdc9fb8a515c338686.src","preCode":"  public void testParseUnknownEnumValue() throws Exception {\n    Descriptors.FieldDescriptor singularField =\n      TestAllTypes.getDescriptor().findFieldByName(\"optional_nested_enum\");\n    Descriptors.FieldDescriptor repeatedField =\n      TestAllTypes.getDescriptor().findFieldByName(\"repeated_nested_enum\");\n    assertNotNull(singularField);\n    assertNotNull(repeatedField);\n\n    ByteString data =\n      UnknownFieldSet.newBuilder()\n        .addField(singularField.getNumber(),\n          UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.BAR.getNumber())\n            .addVarint(5)   \r\n            .build())\n        .addField(repeatedField.getNumber(),\n          UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.FOO.getNumber())\n            .addVarint(4)   \r\n            .addVarint(TestAllTypes.NestedEnum.BAZ.getNumber())\n            .addVarint(6)   \r\n            .build())\n        .build()\n        .toByteString();\n\n    {\n      TestAllTypes message = TestAllTypes.parseFrom(data);\n      assertEquals(TestAllTypes.NestedEnum.BAR,\n                   message.getOptionalNestedEnum());\n      assertEquals(\n        Arrays.asList(TestAllTypes.NestedEnum.FOO, TestAllTypes.NestedEnum.BAZ),\n        message.getRepeatedNestedEnumList());\n      assertEquals(Arrays.asList(5L),\n                   message.getUnknownFields()\n                          .getField(singularField.getNumber())\n                          .getVarintList());\n      assertEquals(Arrays.asList(4L, 6L),\n                   message.getUnknownFields()\n                          .getField(repeatedField.getNumber())\n                          .getVarintList());\n    }\n\n    {\n      TestAllExtensions message =\n        TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());\n      assertEquals(TestAllTypes.NestedEnum.BAR,\n        message.getExtension(UnittestProto.optionalNestedEnumExtension));\n      assertEquals(\n        Arrays.asList(TestAllTypes.NestedEnum.FOO, TestAllTypes.NestedEnum.BAZ),\n        message.getExtension(UnittestProto.repeatedNestedEnumExtension));\n      assertEquals(Arrays.asList(5L),\n                   message.getUnknownFields()\n                          .getField(singularField.getNumber())\n                          .getVarintList());\n      assertEquals(Arrays.asList(4L, 6L),\n                   message.getUnknownFields()\n                          .getField(repeatedField.getNumber())\n                          .getVarintList());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/UnknownFieldSetTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"NB"},{"authorDate":"2019-04-06 07:39:18","commitOrder":2,"curCode":"  private byte[] buildPayloadWithUnknownEnumValues() {\n    \r\n    UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();\n    builder.addField(\n        singularField.getNumber(),\n        UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.BAR.getNumber())\n            .addVarint(1901 )\n            .build());\n    builder.addField(\n        repeatedField.getNumber(),\n        UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.FOO.getNumber())\n            .addVarint(1902 )\n            .addVarint(TestAllTypes.NestedEnum.BAZ.getNumber())\n            .addVarint(1903 )\n            .build());\n    return builder.build().toByteArray();\n  }\n","date":"2019-04-06 07:39:18","endLine":65,"groupId":"1350","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildPayloadWithUnknownEnumValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/57/ac0695e4c308c240d4ea5a401f05fd33d6df9d.src","preCode":"  private byte[] buildPayloadWithUnknownEnumValues() {\n    \r\n    UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();\n    builder.addField(\n        singularField.getNumber(),\n        UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.BAR.getNumber())\n            .addVarint(1901 )\n            .build());\n    builder.addField(\n        repeatedField.getNumber(),\n        UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.FOO.getNumber())\n            .addVarint(1902 )\n            .addVarint(TestAllTypes.NestedEnum.BAZ.getNumber())\n            .addVarint(1903 )\n            .build());\n    return builder.build().toByteArray();\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/Proto2UnknownEnumValueTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"a48a574f7e890436363ca8ac71d866252b216052","commitMessage":"@@@Down integrate to Github\n","date":"2019-04-06 07:39:18","modifiedFileCount":"20","status":"M","submitter":"Hao Nguyen"},{"authorTime":"2019-04-06 07:39:18","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testParseUnknownEnumValue() throws Exception {\n    Descriptors.FieldDescriptor singularField =\n        TestAllTypes.getDescriptor().findFieldByName(\"optional_nested_enum\");\n    Descriptors.FieldDescriptor repeatedField =\n        TestAllTypes.getDescriptor().findFieldByName(\"repeated_nested_enum\");\n    assertThat(singularField).isNotNull();\n    assertThat(repeatedField).isNotNull();\n\n    ByteString data =\n        UnknownFieldSet.newBuilder()\n            .addField(\n                singularField.getNumber(),\n                UnknownFieldSet.Field.newBuilder()\n                    .addVarint(TestAllTypes.NestedEnum.BAR.getNumber())\n                    .addVarint(5) \r\n                    .build())\n            .addField(\n                repeatedField.getNumber(),\n                UnknownFieldSet.Field.newBuilder()\n                    .addVarint(TestAllTypes.NestedEnum.FOO.getNumber())\n                    .addVarint(4) \r\n                    .addVarint(TestAllTypes.NestedEnum.BAZ.getNumber())\n                    .addVarint(6) \r\n                    .build())\n            .build()\n            .toByteString();\n\n    {\n      TestAllTypes message = TestAllTypes.parseFrom(data);\n      assertThat(message.getOptionalNestedEnum()).isEqualTo(TestAllTypes.NestedEnum.BAR);\n      assertThat(message.getRepeatedNestedEnumList())\n          .containsExactly(TestAllTypes.NestedEnum.FOO, TestAllTypes.NestedEnum.BAZ)\n          .inOrder();\n      assertThat(message.getUnknownFields().getField(singularField.getNumber()).getVarintList())\n          .containsExactly(5L);\n      assertThat(message.getUnknownFields().getField(repeatedField.getNumber()).getVarintList())\n          .containsExactly(4L, 6L)\n          .inOrder();\n    }\n\n    {\n      TestAllExtensions message =\n          TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());\n      assertThat(message.getExtension(UnittestProto.optionalNestedEnumExtension))\n          .isEqualTo(TestAllTypes.NestedEnum.BAR);\n      assertThat(message.getExtension(UnittestProto.repeatedNestedEnumExtension))\n          .containsExactly(TestAllTypes.NestedEnum.FOO, TestAllTypes.NestedEnum.BAZ)\n          .inOrder();\n      assertThat(message.getUnknownFields().getField(singularField.getNumber()).getVarintList())\n          .containsExactly(5L);\n      assertThat(message.getUnknownFields().getField(repeatedField.getNumber()).getVarintList())\n          .containsExactly(4L, 6L)\n          .inOrder();\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":324,"groupId":"10460","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testParseUnknownEnumValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1e/5bc9649a18d0b7a9ca10e26394a8aec3623dde.src","preCode":"  public void testParseUnknownEnumValue() throws Exception {\n    Descriptors.FieldDescriptor singularField =\n        TestAllTypes.getDescriptor().findFieldByName(\"optional_nested_enum\");\n    Descriptors.FieldDescriptor repeatedField =\n        TestAllTypes.getDescriptor().findFieldByName(\"repeated_nested_enum\");\n    assertNotNull(singularField);\n    assertNotNull(repeatedField);\n\n    ByteString data =\n        UnknownFieldSet.newBuilder()\n            .addField(\n                singularField.getNumber(),\n                UnknownFieldSet.Field.newBuilder()\n                    .addVarint(TestAllTypes.NestedEnum.BAR.getNumber())\n                    .addVarint(5) \r\n                    .build())\n            .addField(\n                repeatedField.getNumber(),\n                UnknownFieldSet.Field.newBuilder()\n                    .addVarint(TestAllTypes.NestedEnum.FOO.getNumber())\n                    .addVarint(4) \r\n                    .addVarint(TestAllTypes.NestedEnum.BAZ.getNumber())\n                    .addVarint(6) \r\n                    .build())\n            .build()\n            .toByteString();\n\n    {\n      TestAllTypes message = TestAllTypes.parseFrom(data);\n      assertEquals(TestAllTypes.NestedEnum.BAR, message.getOptionalNestedEnum());\n      assertEquals(\n          Arrays.asList(TestAllTypes.NestedEnum.FOO, TestAllTypes.NestedEnum.BAZ),\n          message.getRepeatedNestedEnumList());\n      assertEquals(\n          Arrays.asList(5L),\n          message.getUnknownFields().getField(singularField.getNumber()).getVarintList());\n      assertEquals(\n          Arrays.asList(4L, 6L),\n          message.getUnknownFields().getField(repeatedField.getNumber()).getVarintList());\n    }\n\n    {\n      TestAllExtensions message =\n          TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());\n      assertEquals(\n          TestAllTypes.NestedEnum.BAR,\n          message.getExtension(UnittestProto.optionalNestedEnumExtension));\n      assertEquals(\n          Arrays.asList(TestAllTypes.NestedEnum.FOO, TestAllTypes.NestedEnum.BAZ),\n          message.getExtension(UnittestProto.repeatedNestedEnumExtension));\n      assertEquals(\n          Arrays.asList(5L),\n          message.getUnknownFields().getField(singularField.getNumber()).getVarintList());\n      assertEquals(\n          Arrays.asList(4L, 6L),\n          message.getUnknownFields().getField(repeatedField.getNumber()).getVarintList());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/UnknownFieldSetTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"},{"authorDate":"2019-04-06 07:39:18","commitOrder":3,"curCode":"  private byte[] buildPayloadWithUnknownEnumValues() {\n    \r\n    UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();\n    builder.addField(\n        singularField.getNumber(),\n        UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.BAR.getNumber())\n            .addVarint(1901 )\n            .build());\n    builder.addField(\n        repeatedField.getNumber(),\n        UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.FOO.getNumber())\n            .addVarint(1902 )\n            .addVarint(TestAllTypes.NestedEnum.BAZ.getNumber())\n            .addVarint(1903 )\n            .build());\n    return builder.build().toByteArray();\n  }\n","date":"2019-04-06 07:39:18","endLine":65,"groupId":"10460","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildPayloadWithUnknownEnumValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/57/ac0695e4c308c240d4ea5a401f05fd33d6df9d.src","preCode":"  private byte[] buildPayloadWithUnknownEnumValues() {\n    \r\n    UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();\n    builder.addField(\n        singularField.getNumber(),\n        UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.BAR.getNumber())\n            .addVarint(1901 )\n            .build());\n    builder.addField(\n        repeatedField.getNumber(),\n        UnknownFieldSet.Field.newBuilder()\n            .addVarint(TestAllTypes.NestedEnum.FOO.getNumber())\n            .addVarint(1902 )\n            .addVarint(TestAllTypes.NestedEnum.BAZ.getNumber())\n            .addVarint(1903 )\n            .build());\n    return builder.build().toByteArray();\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/Proto2UnknownEnumValueTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
