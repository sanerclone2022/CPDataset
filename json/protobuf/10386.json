[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testReadStringInvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] { (byte) 0x80 });\n    output.flush();\n\n    CodedInputStream input = rawOutput.toByteString().newCodedInput();\n    assertEquals(tag, input.readTag());\n    String text = input.readString();\n    assertEquals(0xfffd, text.charAt(0));\n  }\n","date":"2016-01-14 03:22:18","endLine":569,"groupId":"1698","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReadStringInvalidUtf8","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/18/d8142c90277ab839cdd5f4003c1088a60e89f1.src","preCode":"  public void testReadStringInvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] { (byte) 0x80 });\n    output.flush();\n\n    CodedInputStream input = rawOutput.toByteString().newCodedInput();\n    assertEquals(tag, input.readTag());\n    String text = input.readString();\n    assertEquals(0xfffd, text.charAt(0));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":555,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testReadStringRequireUtf8InvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] { (byte) 0x80 });\n    output.flush();\n\n    CodedInputStream input = rawOutput.toByteString().newCodedInput();\n    assertEquals(tag, input.readTag());\n    try {\n      input.readStringRequireUtf8();\n      fail(\"Expected invalid UTF-8 exception.\");\n    } catch (InvalidProtocolBufferException exception) {\n      assertEquals(\"Protocol message had invalid UTF-8.\", exception.getMessage());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":593,"groupId":"1698","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReadStringRequireUtf8InvalidUtf8","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/18/d8142c90277ab839cdd5f4003c1088a60e89f1.src","preCode":"  public void testReadStringRequireUtf8InvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] { (byte) 0x80 });\n    output.flush();\n\n    CodedInputStream input = rawOutput.toByteString().newCodedInput();\n    assertEquals(tag, input.readTag());\n    try {\n      input.readStringRequireUtf8();\n      fail(\"Expected invalid UTF-8 exception.\");\n    } catch (InvalidProtocolBufferException exception) {\n      assertEquals(\"Protocol message had invalid UTF-8.\", exception.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":575,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2016-10-11 04:58:39","codes":[{"authorDate":"2016-10-11 04:58:39","commitOrder":2,"curCode":"  public void testReadStringInvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] {(byte) 0x80});\n    output.flush();\n\n    byte[] rawInput = rawOutput.toByteString().toByteArray();\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawInput);\n      assertEquals(inputType.name(), tag, input.readTag());\n      String text = input.readString();\n      assertEquals(inputType.name(), 0xfffd, text.charAt(0));\n    }\n  }\n","date":"2016-10-11 04:58:39","endLine":635,"groupId":"1920","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReadStringInvalidUtf8","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e2/ab0df998bbb3a683f9650866ccf589a205c2e9.src","preCode":"  public void testReadStringInvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] { (byte) 0x80 });\n    output.flush();\n\n    CodedInputStream input = rawOutput.toByteString().newCodedInput();\n    assertEquals(tag, input.readTag());\n    String text = input.readString();\n    assertEquals(0xfffd, text.charAt(0));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":618,"status":"M"},{"authorDate":"2016-10-11 04:58:39","commitOrder":2,"curCode":"  public void testReadStringRequireUtf8InvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] {(byte) 0x80});\n    output.flush();\n\n    byte[] rawInput = rawOutput.toByteString().toByteArray();\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawInput);\n      assertEquals(tag, input.readTag());\n      try {\n        input.readStringRequireUtf8();\n        fail(inputType.name() + \": Expected invalid UTF-8 exception.\");\n      } catch (InvalidProtocolBufferException exception) {\n        assertEquals(\n            inputType.name(), \"Protocol message had invalid UTF-8.\", exception.getMessage());\n      }\n    }\n  }\n","date":"2016-10-11 04:58:39","endLine":663,"groupId":"1920","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReadStringRequireUtf8InvalidUtf8","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e2/ab0df998bbb3a683f9650866ccf589a205c2e9.src","preCode":"  public void testReadStringRequireUtf8InvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] { (byte) 0x80 });\n    output.flush();\n\n    CodedInputStream input = rawOutput.toByteString().newCodedInput();\n    assertEquals(tag, input.readTag());\n    try {\n      input.readStringRequireUtf8();\n      fail(\"Expected invalid UTF-8 exception.\");\n    } catch (InvalidProtocolBufferException exception) {\n      assertEquals(\"Protocol message had invalid UTF-8.\", exception.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":641,"status":"M"}],"commitId":"fd046f6263fb17383cafdbb25c361e3451c31105","commitMessage":"@@@Merge pull request #2234 from TeBoring/master\n\nMerge 3.1.x branch into master.","date":"2016-10-11 04:58:39","modifiedFileCount":"60","status":"M","submitter":"Paul Yang"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testReadStringInvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] {(byte) 0x80});\n    output.flush();\n\n    byte[] rawInput = rawOutput.toByteString().toByteArray();\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawInput);\n      assertWithMessage(inputType.name()).that(input.readTag()).isEqualTo(tag);\n      String text = input.readString();\n      assertWithMessage(inputType.name()).that(text.charAt(0)).isEqualTo(0xfffd);\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":917,"groupId":"10386","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testReadStringInvalidUtf8","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f5/bb31fdf4e56a7d7c9a0216487f8ea23213971b.src","preCode":"  public void testReadStringInvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] {(byte) 0x80});\n    output.flush();\n\n    byte[] rawInput = rawOutput.toByteString().toByteArray();\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawInput);\n      assertEquals(inputType.name(), tag, input.readTag());\n      String text = input.readString();\n      assertEquals(inputType.name(), 0xfffd, text.charAt(0));\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":900,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testReadStringRequireUtf8InvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] {(byte) 0x80});\n    output.flush();\n\n    byte[] rawInput = rawOutput.toByteString().toByteArray();\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawInput);\n      assertThat(input.readTag()).isEqualTo(tag);\n      try {\n        input.readStringRequireUtf8();\n        assertWithMessage(\"%s: Expected invalid UTF-8 exception.\", inputType.name()).fail();\n      } catch (InvalidProtocolBufferException exception) {\n        assertWithMessage(inputType.name())\n            .that(exception)\n            .hasMessageThat()\n            .isEqualTo(\"Protocol message had invalid UTF-8.\");\n      }\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":948,"groupId":"10386","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testReadStringRequireUtf8InvalidUtf8","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f5/bb31fdf4e56a7d7c9a0216487f8ea23213971b.src","preCode":"  public void testReadStringRequireUtf8InvalidUtf8() throws Exception {\n    ByteString.Output rawOutput = ByteString.newOutput();\n    CodedOutputStream output = CodedOutputStream.newInstance(rawOutput);\n\n    int tag = WireFormat.makeTag(1, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n    output.writeRawVarint32(tag);\n    output.writeRawVarint32(1);\n    output.writeRawBytes(new byte[] {(byte) 0x80});\n    output.flush();\n\n    byte[] rawInput = rawOutput.toByteString().toByteArray();\n    for (InputType inputType : InputType.values()) {\n      CodedInputStream input = inputType.newDecoder(rawInput);\n      assertEquals(tag, input.readTag());\n      try {\n        input.readStringRequireUtf8();\n        fail(inputType.name() + \": Expected invalid UTF-8 exception.\");\n      } catch (InvalidProtocolBufferException exception) {\n        assertEquals(\n            inputType.name(), \"Protocol message had invalid UTF-8.\", exception.getMessage());\n      }\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":924,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
