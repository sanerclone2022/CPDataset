[{"authorTime":"2016-07-21 04:52:21","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessage> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField() && isMapFieldEnabled(field)) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","date":"2016-01-14 03:22:18","endLine":1907,"groupId":"2014","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ensureFieldAccessorsInitialized","params":"(Class<?extendsGeneratedMessage>messageClass@Class<?extendsBuilder>builderClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/d8/4fa75c5110f72d4223d6f39a762d60bf525b39.src","preCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessage> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField() && isMapFieldEnabled(field)) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/GeneratedMessage.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1846,"status":"NB"},{"authorDate":"2016-07-21 04:52:21","commitOrder":2,"curCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessageV3> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField() && isMapFieldEnabled(field)) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","date":"2016-07-21 04:52:21","endLine":1798,"groupId":"2014","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureFieldAccessorsInitialized","params":"(Class<?extendsGeneratedMessageV3>messageClass@Class<?extendsBuilder>builderClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5d/fe7ff7072eeddd96a7033543718f9445712ee2.src","preCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessageV3> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField() && isMapFieldEnabled(field)) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/GeneratedMessageV3.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1737,"status":"B"}],"commitId":"af8732ec11555f8e86d335fb737c585468df53f6","commitMessage":"@@@Merge pull request #1810 from xfxyjwf/versioning\n\nVersioning Java GeneratedMessage class","date":"2016-07-21 04:52:21","modifiedFileCount":"1","status":"M","submitter":"Feng Xiao"},{"authorTime":"2016-11-24 03:26:31","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":3,"curCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessage> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField() && isMapFieldEnabled(field)) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","date":"2016-01-14 03:22:18","endLine":1907,"groupId":"2014","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ensureFieldAccessorsInitialized","params":"(Class<?extendsGeneratedMessage>messageClass@Class<?extendsBuilder>builderClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/d8/4fa75c5110f72d4223d6f39a762d60bf525b39.src","preCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessage> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField() && isMapFieldEnabled(field)) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/GeneratedMessage.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1846,"status":"N"},{"authorDate":"2016-11-24 03:26:31","commitOrder":3,"curCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessageV3> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField()) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","date":"2016-11-24 03:26:31","endLine":1779,"groupId":"2014","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureFieldAccessorsInitialized","params":"(Class<?extendsGeneratedMessageV3>messageClass@Class<?extendsBuilder>builderClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/2a/5d8b50b7f0d8a2c7373c6c7d4911c4b408d0bb.src","preCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessageV3> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField() && isMapFieldEnabled(field)) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/GeneratedMessageV3.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1718,"status":"M"}],"commitId":"39f9b43219bc5718b659ed72a2130a7b2ce66108","commitMessage":"@@@Merge pull request #2403 from google/down-integrate-with-msvc-fix\n\nIntegrated internal changes from Google","date":"2016-11-24 03:26:31","modifiedFileCount":"26","status":"M","submitter":"Adam Cozzette"},{"authorTime":"2020-04-02 00:42:57","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":4,"curCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessage> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField() && isMapFieldEnabled(field)) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","date":"2016-01-14 03:22:18","endLine":1907,"groupId":"10775","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"ensureFieldAccessorsInitialized","params":"(Class<?extendsGeneratedMessage>messageClass@Class<?extendsBuilder>builderClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/d8/4fa75c5110f72d4223d6f39a762d60bf525b39.src","preCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessage> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField() && isMapFieldEnabled(field)) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/GeneratedMessage.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1846,"status":"N"},{"authorDate":"2020-04-02 00:42:57","commitOrder":4,"curCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessageV3> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField()) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] =\n              new OneofAccessor(\n                  descriptor, i, camelCaseNames[i + fieldsSize], messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","date":"2020-04-02 00:42:57","endLine":1998,"groupId":"10775","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureFieldAccessorsInitialized","params":"(Class<?extendsGeneratedMessageV3>messageClass@Class<?extendsBuilder>builderClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/86/f88a0228f2a8e24cd33d469a2530cef6f429f2.src","preCode":"    public FieldAccessorTable ensureFieldAccessorsInitialized(\n        Class<? extends GeneratedMessageV3> messageClass,\n        Class<? extends Builder> builderClass) {\n      if (initialized) { return this; }\n      synchronized (this) {\n        if (initialized) { return this; }\n        int fieldsSize = fields.length;\n        for (int i = 0; i < fieldsSize; i++) {\n          FieldDescriptor field = descriptor.getFields().get(i);\n          String containingOneofCamelCaseName = null;\n          if (field.getContainingOneof() != null) {\n            containingOneofCamelCaseName =\n                camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];\n          }\n          if (field.isRepeated()) {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              if (field.isMapField()) {\n                fields[i] = new MapFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              } else {\n                fields[i] = new RepeatedMessageFieldAccessor(\n                    field, camelCaseNames[i], messageClass, builderClass);\n              }\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new RepeatedEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            } else {\n              fields[i] = new RepeatedFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass);\n            }\n          } else {\n            if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {\n              fields[i] = new SingularMessageFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {\n              fields[i] = new SingularEnumFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {\n              fields[i] = new SingularStringFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            } else {\n              fields[i] = new SingularFieldAccessor(\n                  field, camelCaseNames[i], messageClass, builderClass,\n                  containingOneofCamelCaseName);\n            }\n          }\n        }\n\n        int oneofsSize = oneofs.length;\n        for (int i = 0; i < oneofsSize; i++) {\n          oneofs[i] = new OneofAccessor(\n              descriptor, camelCaseNames[i + fieldsSize],\n              messageClass, builderClass);\n        }\n        initialized = true;\n        camelCaseNames = null;\n        return this;\n      }\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/GeneratedMessageV3.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1937,"status":"M"}],"commitId":"e667bf6eaaa2fb1ba2987c6538df81f88500d030","commitMessage":"@@@Merge pull request #7344 from haberman/sync-integrate\n\nIntegrate from Piper @304070343 for C++.  Java.  and Python","date":"2020-04-02 00:42:57","modifiedFileCount":"28","status":"M","submitter":"Joshua Haberman"}]
