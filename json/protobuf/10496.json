[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testReflectionClearOneof() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    reflectionTester.setAllFieldsViaReflection(builder);\n    Descriptors.OneofDescriptor oneof =\n        TestAllTypes.getDescriptor().getOneofs().get(0);\n    Descriptors.FieldDescriptor field =\n        TestAllTypes.getDescriptor().findFieldByName(\"oneof_bytes\");\n\n    assertTrue(builder.hasOneof(oneof));\n    assertTrue(builder.hasField(field));\n    builder.clearOneof(oneof);\n    assertFalse(builder.hasOneof(oneof));\n    assertFalse(builder.hasField(field));\n  }\n","date":"2016-01-14 03:22:18","endLine":565,"groupId":"1268","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReflectionClearOneof","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/70/812b953f57ff7335eb7c6e183eda8b414e8b44.src","preCode":"  public void testReflectionClearOneof() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    reflectionTester.setAllFieldsViaReflection(builder);\n    Descriptors.OneofDescriptor oneof =\n        TestAllTypes.getDescriptor().getOneofs().get(0);\n    Descriptors.FieldDescriptor field =\n        TestAllTypes.getDescriptor().findFieldByName(\"oneof_bytes\");\n\n    assertTrue(builder.hasOneof(oneof));\n    assertTrue(builder.hasField(field));\n    builder.clearOneof(oneof);\n    assertFalse(builder.hasOneof(oneof));\n    assertFalse(builder.hasField(field));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/GeneratedMessageTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":552,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testDynamicOneofMessage() throws Exception {\n    DynamicMessage.Builder builder =\n        DynamicMessage.newBuilder(TestAllTypes.getDescriptor());\n    OneofDescriptor oneof = TestAllTypes.getDescriptor().getOneofs().get(0);\n    assertFalse(builder.hasOneof(oneof));\n    assertSame(null, builder.getOneofFieldDescriptor(oneof));\n\n    reflectionTester.setAllFieldsViaReflection(builder);\n    assertTrue(builder.hasOneof(oneof));\n    FieldDescriptor field = oneof.getField(3);\n    assertSame(field, builder.getOneofFieldDescriptor(oneof));\n\n    DynamicMessage message = builder.buildPartial();\n    assertTrue(message.hasOneof(oneof));\n\n    DynamicMessage.Builder mergedBuilder =\n        DynamicMessage.newBuilder(TestAllTypes.getDescriptor());\n    FieldDescriptor mergedField = oneof.getField(0);\n    mergedBuilder.setField(mergedField, 123);\n    assertTrue(mergedBuilder.hasField(mergedField));\n    mergedBuilder.mergeFrom(message);\n    assertTrue(mergedBuilder.hasField(field));\n    assertFalse(mergedBuilder.hasField(mergedField));\n\n    builder.clearOneof(oneof);\n    assertSame(null, builder.getOneofFieldDescriptor(oneof));\n    message = builder.build();\n    assertSame(null, message.getOneofFieldDescriptor(oneof));\n  }\n","date":"2016-01-14 03:22:18","endLine":310,"groupId":"1631","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDynamicOneofMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/55/144e7c0e47a976797a96c33a37aa6a43cac978.src","preCode":"  public void testDynamicOneofMessage() throws Exception {\n    DynamicMessage.Builder builder =\n        DynamicMessage.newBuilder(TestAllTypes.getDescriptor());\n    OneofDescriptor oneof = TestAllTypes.getDescriptor().getOneofs().get(0);\n    assertFalse(builder.hasOneof(oneof));\n    assertSame(null, builder.getOneofFieldDescriptor(oneof));\n\n    reflectionTester.setAllFieldsViaReflection(builder);\n    assertTrue(builder.hasOneof(oneof));\n    FieldDescriptor field = oneof.getField(3);\n    assertSame(field, builder.getOneofFieldDescriptor(oneof));\n\n    DynamicMessage message = builder.buildPartial();\n    assertTrue(message.hasOneof(oneof));\n\n    DynamicMessage.Builder mergedBuilder =\n        DynamicMessage.newBuilder(TestAllTypes.getDescriptor());\n    FieldDescriptor mergedField = oneof.getField(0);\n    mergedBuilder.setField(mergedField, 123);\n    assertTrue(mergedBuilder.hasField(mergedField));\n    mergedBuilder.mergeFrom(message);\n    assertTrue(mergedBuilder.hasField(field));\n    assertFalse(mergedBuilder.hasField(mergedField));\n\n    builder.clearOneof(oneof);\n    assertSame(null, builder.getOneofFieldDescriptor(oneof));\n    message = builder.build();\n    assertSame(null, message.getOneofFieldDescriptor(oneof));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/DynamicMessageTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testReflectionClearOneof() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    reflectionTester.setAllFieldsViaReflection(builder);\n    Descriptors.OneofDescriptor oneof = TestAllTypes.getDescriptor().getOneofs().get(0);\n    Descriptors.FieldDescriptor field = TestAllTypes.getDescriptor().findFieldByName(\"oneof_bytes\");\n\n    assertThat(builder.hasOneof(oneof)).isTrue();\n    assertThat(builder.hasField(field)).isTrue();\n    builder.clearOneof(oneof);\n    assertThat(builder.hasOneof(oneof)).isFalse();\n    assertThat(builder.hasField(field)).isFalse();\n  }\n","date":"2021-08-10 06:55:00","endLine":728,"groupId":"10496","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testReflectionClearOneof","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/fb/ba612bd2a86e442aceac2543c138810d348cc0.src","preCode":"  public void testReflectionClearOneof() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    reflectionTester.setAllFieldsViaReflection(builder);\n    Descriptors.OneofDescriptor oneof = TestAllTypes.getDescriptor().getOneofs().get(0);\n    Descriptors.FieldDescriptor field = TestAllTypes.getDescriptor().findFieldByName(\"oneof_bytes\");\n\n    assertTrue(builder.hasOneof(oneof));\n    assertTrue(builder.hasField(field));\n    builder.clearOneof(oneof);\n    assertFalse(builder.hasOneof(oneof));\n    assertFalse(builder.hasField(field));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/GeneratedMessageTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":717,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testDynamicOneofMessage() throws Exception {\n    DynamicMessage.Builder builder = DynamicMessage.newBuilder(TestAllTypes.getDescriptor());\n    OneofDescriptor oneof = TestAllTypes.getDescriptor().getOneofs().get(0);\n    assertThat(builder.hasOneof(oneof)).isFalse();\n    assertThat(builder.getOneofFieldDescriptor(oneof)).isNull();\n\n    reflectionTester.setAllFieldsViaReflection(builder);\n    assertThat(builder.hasOneof(oneof)).isTrue();\n    FieldDescriptor field = oneof.getField(3);\n    assertThat(builder.getOneofFieldDescriptor(oneof)).isSameInstanceAs(field);\n\n    DynamicMessage message = builder.buildPartial();\n    assertThat(message.hasOneof(oneof)).isTrue();\n\n    DynamicMessage.Builder mergedBuilder = DynamicMessage.newBuilder(TestAllTypes.getDescriptor());\n    FieldDescriptor mergedField = oneof.getField(0);\n    mergedBuilder.setField(mergedField, 123);\n    assertThat(mergedBuilder.hasField(mergedField)).isTrue();\n    mergedBuilder.mergeFrom(message);\n    assertThat(mergedBuilder.hasField(field)).isTrue();\n    assertThat(mergedBuilder.hasField(mergedField)).isFalse();\n\n    builder.clearOneof(oneof);\n    assertThat(builder.getOneofFieldDescriptor(oneof)).isNull();\n    message = builder.build();\n    assertThat(message.getOneofFieldDescriptor(oneof)).isNull();\n  }\n","date":"2021-08-10 06:55:00","endLine":324,"groupId":"10496","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testDynamicOneofMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/3a/acdccfb4ffd1abc7ffd624fd01800407ee2ce3.src","preCode":"  public void testDynamicOneofMessage() throws Exception {\n    DynamicMessage.Builder builder = DynamicMessage.newBuilder(TestAllTypes.getDescriptor());\n    OneofDescriptor oneof = TestAllTypes.getDescriptor().getOneofs().get(0);\n    assertFalse(builder.hasOneof(oneof));\n    assertSame(null, builder.getOneofFieldDescriptor(oneof));\n\n    reflectionTester.setAllFieldsViaReflection(builder);\n    assertTrue(builder.hasOneof(oneof));\n    FieldDescriptor field = oneof.getField(3);\n    assertSame(field, builder.getOneofFieldDescriptor(oneof));\n\n    DynamicMessage message = builder.buildPartial();\n    assertTrue(message.hasOneof(oneof));\n\n    DynamicMessage.Builder mergedBuilder = DynamicMessage.newBuilder(TestAllTypes.getDescriptor());\n    FieldDescriptor mergedField = oneof.getField(0);\n    mergedBuilder.setField(mergedField, 123);\n    assertTrue(mergedBuilder.hasField(mergedField));\n    mergedBuilder.mergeFrom(message);\n    assertTrue(mergedBuilder.hasField(field));\n    assertFalse(mergedBuilder.hasField(mergedField));\n\n    builder.clearOneof(oneof);\n    assertSame(null, builder.getOneofFieldDescriptor(oneof));\n    message = builder.build();\n    assertSame(null, message.getOneofFieldDescriptor(oneof));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/DynamicMessageTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
