[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testInterleavedFieldsAndExtensions() throws Exception {\n    \r\n    \r\n    ByteString data =\n      TestFieldOrderings.newBuilder()\n        .setMyInt(1)\n        .setMyString(\"foo\")\n        .setMyFloat(1.0F)\n        .setExtension(UnittestProto.myExtensionInt, 23)\n        .setExtension(UnittestProto.myExtensionString, \"bar\")\n        .build().toByteString();\n    assertFieldsInOrder(data);\n\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    ByteString dynamic_data =\n      DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n        .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n        .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n        .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n        .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n        .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n        .build().toByteString();\n    assertFieldsInOrder(dynamic_data);\n  }\n","date":"2016-01-14 03:22:18","endLine":285,"groupId":"1148","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInterleavedFieldsAndExtensions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/01/75005d2ca9f844cfc52305abbcab449cbd7eb1.src","preCode":"  public void testInterleavedFieldsAndExtensions() throws Exception {\n    \r\n    \r\n    ByteString data =\n      TestFieldOrderings.newBuilder()\n        .setMyInt(1)\n        .setMyString(\"foo\")\n        .setMyFloat(1.0F)\n        .setExtension(UnittestProto.myExtensionInt, 23)\n        .setExtension(UnittestProto.myExtensionString, \"bar\")\n        .build().toByteString();\n    assertFieldsInOrder(data);\n\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    ByteString dynamic_data =\n      DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n        .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n        .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n        .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n        .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n        .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n        .build().toByteString();\n    assertFieldsInOrder(dynamic_data);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testParseMultipleExtensionRangesDynamic() throws Exception {\n    \r\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    DynamicMessage source =\n      DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n        .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n        .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n        .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n        .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n        .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n        .build();\n    DynamicMessage dest =\n      DynamicMessage.parseFrom(descriptor, source.toByteString(),\n                               getTestFieldOrderingsRegistry());\n    assertEquals(source, dest);\n  }\n","date":"2016-01-14 03:22:18","endLine":326,"groupId":"1419","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseMultipleExtensionRangesDynamic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/01/75005d2ca9f844cfc52305abbcab449cbd7eb1.src","preCode":"  public void testParseMultipleExtensionRangesDynamic() throws Exception {\n    \r\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    DynamicMessage source =\n      DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n        .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n        .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n        .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n        .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n        .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n        .build();\n    DynamicMessage dest =\n      DynamicMessage.parseFrom(descriptor, source.toByteString(),\n                               getTestFieldOrderingsRegistry());\n    assertEquals(source, dest);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2018-09-08 07:15:38","commitOrder":2,"curCode":"  public void testInterleavedFieldsAndExtensions() throws Exception {\n    \r\n    \r\n    ByteString data =\n        TestFieldOrderings.newBuilder()\n            .setMyInt(1)\n            .setMyString(\"foo\")\n            .setMyFloat(1.0F)\n            .setExtension(UnittestProto.myExtensionInt, 23)\n            .setExtension(UnittestProto.myExtensionString, \"bar\")\n            .build()\n            .toByteString();\n    assertFieldsInOrder(data);\n\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    ByteString dynamicData =\n        DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n            .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n            .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n            .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n            .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n            .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n            .build()\n            .toByteString();\n    assertFieldsInOrder(dynamicData);\n  }\n","date":"2018-09-08 07:15:38","endLine":219,"groupId":"1148","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInterleavedFieldsAndExtensions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/45/a396acd8e77619d9169b73f5c154b511775842.src","preCode":"  public void testInterleavedFieldsAndExtensions() throws Exception {\n    \r\n    \r\n    ByteString data =\n      TestFieldOrderings.newBuilder()\n        .setMyInt(1)\n        .setMyString(\"foo\")\n        .setMyFloat(1.0F)\n        .setExtension(UnittestProto.myExtensionInt, 23)\n        .setExtension(UnittestProto.myExtensionString, \"bar\")\n        .build().toByteString();\n    assertFieldsInOrder(data);\n\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    ByteString dynamic_data =\n      DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n        .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n        .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n        .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n        .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n        .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n        .build().toByteString();\n    assertFieldsInOrder(dynamic_data);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"},{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testParseMultipleExtensionRangesDynamic() throws Exception {\n    \r\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    DynamicMessage source =\n      DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n        .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n        .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n        .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n        .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n        .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n        .build();\n    DynamicMessage dest =\n      DynamicMessage.parseFrom(descriptor, source.toByteString(),\n                               getTestFieldOrderingsRegistry());\n    assertEquals(source, dest);\n  }\n","date":"2016-01-14 03:22:18","endLine":326,"groupId":"1419","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseMultipleExtensionRangesDynamic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/01/75005d2ca9f844cfc52305abbcab449cbd7eb1.src","preCode":"  public void testParseMultipleExtensionRangesDynamic() throws Exception {\n    \r\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    DynamicMessage source =\n      DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n        .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n        .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n        .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n        .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n        .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n        .build();\n    DynamicMessage dest =\n      DynamicMessage.parseFrom(descriptor, source.toByteString(),\n                               getTestFieldOrderingsRegistry());\n    assertEquals(source, dest);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"N"}],"commitId":"f9d8138376765d229a32635c9209061e4e4aed8c","commitMessage":"@@@Merge pull request #5109 from haberman/integrate\n\nDown-integrate from google3.","date":"2018-09-08 07:15:38","modifiedFileCount":"125","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2018-09-08 07:15:38","commitOrder":3,"curCode":"  public void testInterleavedFieldsAndExtensions() throws Exception {\n    \r\n    \r\n    ByteString data =\n        TestFieldOrderings.newBuilder()\n            .setMyInt(1)\n            .setMyString(\"foo\")\n            .setMyFloat(1.0F)\n            .setExtension(UnittestProto.myExtensionInt, 23)\n            .setExtension(UnittestProto.myExtensionString, \"bar\")\n            .build()\n            .toByteString();\n    assertFieldsInOrder(data);\n\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    ByteString dynamicData =\n        DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n            .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n            .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n            .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n            .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n            .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n            .build()\n            .toByteString();\n    assertFieldsInOrder(dynamicData);\n  }\n","date":"2018-09-08 07:15:38","endLine":219,"groupId":"10448","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInterleavedFieldsAndExtensions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/45/a396acd8e77619d9169b73f5c154b511775842.src","preCode":"  public void testInterleavedFieldsAndExtensions() throws Exception {\n    \r\n    \r\n    ByteString data =\n        TestFieldOrderings.newBuilder()\n            .setMyInt(1)\n            .setMyString(\"foo\")\n            .setMyFloat(1.0F)\n            .setExtension(UnittestProto.myExtensionInt, 23)\n            .setExtension(UnittestProto.myExtensionString, \"bar\")\n            .build()\n            .toByteString();\n    assertFieldsInOrder(data);\n\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    ByteString dynamicData =\n        DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n            .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n            .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n            .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n            .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n            .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n            .build()\n            .toByteString();\n    assertFieldsInOrder(dynamicData);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"N"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testParseMultipleExtensionRangesDynamic() throws Exception {\n    \r\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    DynamicMessage source =\n        DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n            .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n            .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n            .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n            .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n            .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n            .build();\n    DynamicMessage dest =\n        DynamicMessage.parseFrom(\n            descriptor, source.toByteString(), getTestFieldOrderingsRegistry());\n    assertThat(source).isEqualTo(dest);\n  }\n","date":"2021-08-10 06:55:00","endLine":292,"groupId":"10448","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testParseMultipleExtensionRangesDynamic","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e0/72eb8fd2cdb06fdf0424725940b96d8350f87d.src","preCode":"  public void testParseMultipleExtensionRangesDynamic() throws Exception {\n    \r\n    Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();\n    DynamicMessage source =\n        DynamicMessage.newBuilder(TestFieldOrderings.getDescriptor())\n            .setField(descriptor.findFieldByName(\"my_int\"), 1L)\n            .setField(descriptor.findFieldByName(\"my_string\"), \"foo\")\n            .setField(descriptor.findFieldByName(\"my_float\"), 1.0F)\n            .setField(UnittestProto.myExtensionInt.getDescriptor(), 23)\n            .setField(UnittestProto.myExtensionString.getDescriptor(), \"bar\")\n            .build();\n    DynamicMessage dest =\n        DynamicMessage.parseFrom(\n            descriptor, source.toByteString(), getTestFieldOrderingsRegistry());\n    assertEquals(source, dest);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
