[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2019-04-06 07:39:18","commitOrder":2,"curCode":"  public void testOneofOnlyLastSet() throws Exception {\n    TestOneofBackwardsCompatible source =\n        TestOneofBackwardsCompatible.newBuilder().setFooInt(100).setFooString(\"101\").build();\n\n    ByteString rawBytes = source.toByteString();\n    TestOneof2 message = TestOneof2.parseFrom(rawBytes);\n    assertFalse(message.hasFooInt());\n    assertTrue(message.hasFooString());\n  }\n","date":"2019-04-06 07:39:18","endLine":505,"groupId":"1423","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOneofOnlyLastSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/a7/25d413ff5eca06f1ef0e7628a7c408d28fa733.src","preCode":"  public void testOneofOnlyLastSet() throws Exception {\n    TestOneofBackwardsCompatible source =\n        TestOneofBackwardsCompatible.newBuilder().setFooInt(100).setFooString(\"101\").build();\n\n    ByteString rawBytes = source.toByteString();\n    TestOneof2 message = TestOneof2.parseFrom(rawBytes);\n    assertFalse(message.hasFooInt());\n    assertTrue(message.hasFooString());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":497,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testOneofOnlyLastSet() throws Exception {\n    TestOneofBackwardsCompatible source = TestOneofBackwardsCompatible\n        .newBuilder().setFooInt(100).setFooString(\"101\").build();\n\n    ByteString rawBytes = source.toByteString();\n    TestOneof2 message = TestOneof2.parseFrom(rawBytes);\n    assertFalse(message.hasFooInt());\n    assertTrue(message.hasFooString());\n  }\n","date":"2016-01-14 03:22:18","endLine":605,"groupId":"1423","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOneofOnlyLastSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/01/75005d2ca9f844cfc52305abbcab449cbd7eb1.src","preCode":"  public void testOneofOnlyLastSet() throws Exception {\n    TestOneofBackwardsCompatible source = TestOneofBackwardsCompatible\n        .newBuilder().setFooInt(100).setFooString(\"101\").build();\n\n    ByteString rawBytes = source.toByteString();\n    TestOneof2 message = TestOneof2.parseFrom(rawBytes);\n    assertFalse(message.hasFooInt());\n    assertTrue(message.hasFooString());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":597,"status":"NB"}],"commitId":"a48a574f7e890436363ca8ac71d866252b216052","commitMessage":"@@@Down integrate to Github\n","date":"2019-04-06 07:39:18","modifiedFileCount":"20","status":"M","submitter":"Hao Nguyen"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testOneofOnlyLastSet() throws Exception {\n    TestOneofBackwardsCompatible source =\n        TestOneofBackwardsCompatible.newBuilder().setFooInt(100).setFooString(\"101\").build();\n\n    ByteString rawBytes = source.toByteString();\n    TestOneof2 message = TestOneof2.parseFrom(rawBytes);\n    assertThat(message.hasFooInt()).isFalse();\n    assertThat(message.hasFooString()).isTrue();\n  }\n","date":"2021-08-10 06:55:00","endLine":540,"groupId":"10423","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testOneofOnlyLastSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/cb/ed9fcff98849fe4bfbd4d0b3c290335616bc24.src","preCode":"  public void testOneofOnlyLastSet() throws Exception {\n    TestOneofBackwardsCompatible source =\n        TestOneofBackwardsCompatible.newBuilder().setFooInt(100).setFooString(\"101\").build();\n\n    ByteString rawBytes = source.toByteString();\n    TestOneof2 message = TestOneof2.parseFrom(rawBytes);\n    assertFalse(message.hasFooInt());\n    assertTrue(message.hasFooString());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":532,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testOneofOnlyLastSet() throws Exception {\n    TestOneofBackwardsCompatible source =\n        TestOneofBackwardsCompatible.newBuilder().setFooInt(100).setFooString(\"101\").build();\n\n    ByteString rawBytes = source.toByteString();\n    TestOneof2 message = TestOneof2.parseFrom(rawBytes);\n    assertThat(message.hasFooInt()).isFalse();\n    assertThat(message.hasFooString()).isTrue();\n  }\n","date":"2021-08-10 06:55:00","endLine":547,"groupId":"10423","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testOneofOnlyLastSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e0/72eb8fd2cdb06fdf0424725940b96d8350f87d.src","preCode":"  public void testOneofOnlyLastSet() throws Exception {\n    TestOneofBackwardsCompatible source =\n        TestOneofBackwardsCompatible.newBuilder().setFooInt(100).setFooString(\"101\").build();\n\n    ByteString rawBytes = source.toByteString();\n    TestOneof2 message = TestOneof2.parseFrom(rawBytes);\n    assertFalse(message.hasFooInt());\n    assertTrue(message.hasFooString());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":539,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
