[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-04-12 14:37:42","commitOrder":2,"curCode":"  public void testCustomTypeUrls() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"xxx.com\")).build();\n\n    assertEquals(\n        \"xxx.com/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    TestAllTypes result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"yyy.com/\")).build();\n\n    assertEquals(\n        \"yyy.com/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"\")).build();\n\n    assertEquals(\n        \"/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n  }\n","date":"2016-04-12 14:37:42","endLine":121,"groupId":"991","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCustomTypeUrls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/cf/91ed91c61d7f8de76bc9259eda4c982c208bd6.src","preCode":"  public void testCustomTypeUrls() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"xxx.com\")).build();\n\n    assertEquals(\n        \"xxx.com/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    TestAllTypes result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"yyy.com/\")).build();\n\n    assertEquals(\n        \"yyy.com/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"\")).build();\n\n    assertEquals(\n        \"/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/AnyTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testCachedUnpackResult() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder()\n        .setValue(Any.pack(message)).build();\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n\n    TestAllTypes result1 = container.getValue().unpack(TestAllTypes.class);\n    TestAllTypes result2 = container.getValue().unpack(TestAllTypes.class);\n    assertTrue(result1 == result2);\n  }\n","date":"2016-01-14 03:22:18","endLine":91,"groupId":"1403","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCachedUnpackResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e1/69f69d2453b5259788b0d43ce26b7fc6950c04.src","preCode":"  public void testCachedUnpackResult() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder()\n        .setValue(Any.pack(message)).build();\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n\n    TestAllTypes result1 = container.getValue().unpack(TestAllTypes.class);\n    TestAllTypes result2 = container.getValue().unpack(TestAllTypes.class);\n    assertTrue(result1 == result2);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/AnyTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"NB"}],"commitId":"814685ca2cd9280ca401e1842fd6311440921a0a","commitMessage":"@@@Merge pull request #1397 from google/internal-merge\n\nInternal merge","date":"2016-04-12 14:37:42","modifiedFileCount":"57","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2018-09-08 07:15:38","codes":[{"authorDate":"2016-04-12 14:37:42","commitOrder":3,"curCode":"  public void testCustomTypeUrls() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"xxx.com\")).build();\n\n    assertEquals(\n        \"xxx.com/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    TestAllTypes result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"yyy.com/\")).build();\n\n    assertEquals(\n        \"yyy.com/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"\")).build();\n\n    assertEquals(\n        \"/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n  }\n","date":"2016-04-12 14:37:42","endLine":121,"groupId":"991","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCustomTypeUrls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/cf/91ed91c61d7f8de76bc9259eda4c982c208bd6.src","preCode":"  public void testCustomTypeUrls() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"xxx.com\")).build();\n\n    assertEquals(\n        \"xxx.com/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    TestAllTypes result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"yyy.com/\")).build();\n\n    assertEquals(\n        \"yyy.com/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder()\n        .setValue(Any.pack(message, \"\")).build();\n\n    assertEquals(\n        \"/\" + TestAllTypes.getDescriptor().getFullName(),\n        container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/AnyTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"N"},{"authorDate":"2018-09-08 07:15:38","commitOrder":3,"curCode":"  public void testCachedUnpackResult() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder()\n        .setValue(Any.pack(message)).build();\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n\n    TestAllTypes result1 = container.getValue().unpack(TestAllTypes.class);\n    TestAllTypes result2 = container.getValue().unpack(TestAllTypes.class);\n    assertTrue(Objects.equals(result1, result2));\n  }\n","date":"2018-09-08 07:15:38","endLine":136,"groupId":"1403","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCachedUnpackResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/2f/e04a94c9a839fbdaac5fe70a2a1fe64aa66e34.src","preCode":"  public void testCachedUnpackResult() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder()\n        .setValue(Any.pack(message)).build();\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n\n    TestAllTypes result1 = container.getValue().unpack(TestAllTypes.class);\n    TestAllTypes result2 = container.getValue().unpack(TestAllTypes.class);\n    assertTrue(result1 == result2);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/AnyTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"f9d8138376765d229a32635c9209061e4e4aed8c","commitMessage":"@@@Merge pull request #5109 from haberman/integrate\n\nDown-integrate from google3.","date":"2018-09-08 07:15:38","modifiedFileCount":"125","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":4,"curCode":"  public void testCustomTypeUrls() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder().setValue(Any.pack(message, \"xxx.com\")).build();\n\n    assertThat(container.getValue().getTypeUrl())\n        .isEqualTo(\"xxx.com/\" + TestAllTypes.getDescriptor().getFullName());\n\n    assertThat(container.getValue().is(TestAllTypes.class)).isTrue();\n    assertThat(container.getValue().is(TestAny.class)).isFalse();\n\n    TestAllTypes result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder().setValue(Any.pack(message, \"yyy.com/\")).build();\n\n    assertThat(container.getValue().getTypeUrl())\n        .isEqualTo(\"yyy.com/\" + TestAllTypes.getDescriptor().getFullName());\n\n    assertThat(container.getValue().is(TestAllTypes.class)).isTrue();\n    assertThat(container.getValue().is(TestAny.class)).isFalse();\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder().setValue(Any.pack(message, \"\")).build();\n\n    assertThat(container.getValue().getTypeUrl())\n        .isEqualTo(\"/\" + TestAllTypes.getDescriptor().getFullName());\n\n    assertThat(container.getValue().is(TestAllTypes.class)).isTrue();\n    assertThat(container.getValue().is(TestAny.class)).isFalse();\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n  }\n","date":"2021-08-10 06:55:00","endLine":120,"groupId":"10512","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testCustomTypeUrls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/ee/13ef1560abfcadbdc85908e22fb9596ff31d2c.src","preCode":"  public void testCustomTypeUrls() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder().setValue(Any.pack(message, \"xxx.com\")).build();\n\n    assertEquals(\n        \"xxx.com/\" + TestAllTypes.getDescriptor().getFullName(), container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    TestAllTypes result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder().setValue(Any.pack(message, \"yyy.com/\")).build();\n\n    assertEquals(\n        \"yyy.com/\" + TestAllTypes.getDescriptor().getFullName(), container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n\n    container = TestAny.newBuilder().setValue(Any.pack(message, \"\")).build();\n\n    assertEquals(\n        \"/\" + TestAllTypes.getDescriptor().getFullName(), container.getValue().getTypeUrl());\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n    assertFalse(container.getValue().is(TestAny.class));\n\n    result = container.getValue().unpack(TestAllTypes.class);\n    TestUtil.assertAllFieldsSet(result);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/AnyTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":4,"curCode":"  public void testCachedUnpackResult() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder().setValue(Any.pack(message)).build();\n\n    assertThat(container.getValue().is(TestAllTypes.class)).isTrue();\n\n    TestAllTypes result1 = container.getValue().unpack(TestAllTypes.class);\n    TestAllTypes result2 = container.getValue().unpack(TestAllTypes.class);\n    assertThat(Objects.equals(result1, result2)).isTrue();\n  }\n","date":"2021-08-10 06:55:00","endLine":135,"groupId":"10512","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testCachedUnpackResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/ee/13ef1560abfcadbdc85908e22fb9596ff31d2c.src","preCode":"  public void testCachedUnpackResult() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n    TestUtil.setAllFields(builder);\n    TestAllTypes message = builder.build();\n\n    TestAny container = TestAny.newBuilder().setValue(Any.pack(message)).build();\n\n    assertTrue(container.getValue().is(TestAllTypes.class));\n\n    TestAllTypes result1 = container.getValue().unpack(TestAllTypes.class);\n    TestAllTypes result2 = container.getValue().unpack(TestAllTypes.class);\n    assertTrue(Objects.equals(result1, result2));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/AnyTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
