[{"authorTime":"2019-04-06 07:39:18","codes":[{"authorDate":"2018-09-08 07:15:38","commitOrder":4,"curCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putAllInt32ToEnumFieldValue(\n                newMap(\n                    0, 0,\n                    1, 1,\n                    2, 1000)); \r\n    TestMap message = builder.build();\n\n    assertEquals(TestMap.EnumValue.FOO, message.getInt32ToEnumField().get(0));\n    assertEquals(TestMap.EnumValue.BAR, message.getInt32ToEnumField().get(1));\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumField().get(2));\n    assertEquals(1000, message.getInt32ToEnumFieldValue().get(2).intValue());\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString());\n    assertEquals(1000, message.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = message.toBuilder();\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertFalse(message.hashCode() == message2.hashCode());\n    assertFalse(message.equals(message2));\n    \r\n    \r\n    assertEquals(message2.getInt32ToEnumField(), message.getInt32ToEnumField());\n  }\n","date":"2018-09-08 07:15:38","endLine":964,"groupId":"2059","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnknownEnumValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/ef/8b27e8d50746d74ad74639b22f2f3ed7725564.src","preCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putAllInt32ToEnumFieldValue(\n                newMap(\n                    0, 0,\n                    1, 1,\n                    2, 1000)); \r\n    TestMap message = builder.build();\n\n    assertEquals(TestMap.EnumValue.FOO, message.getInt32ToEnumField().get(0));\n    assertEquals(TestMap.EnumValue.BAR, message.getInt32ToEnumField().get(1));\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumField().get(2));\n    assertEquals(1000, message.getInt32ToEnumFieldValue().get(2).intValue());\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString());\n    assertEquals(1000, message.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = message.toBuilder();\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertFalse(message.hashCode() == message2.hashCode());\n    assertFalse(message.equals(message2));\n    \r\n    \r\n    assertEquals(message2.getInt32ToEnumField(), message.getInt32ToEnumField());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":930,"status":"NB"},{"authorDate":"2019-04-06 07:39:18","commitOrder":4,"curCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putInt32ToEnumFieldValue(0, 0)\n            .putInt32ToEnumFieldValue(1, 1)\n            .putInt32ToEnumFieldValue(2, 1000); \r\n    TestMap message = builder.build();\n\n    assertEquals(TestMap.EnumValue.FOO, message.getInt32ToEnumField().get(0));\n    assertEquals(TestMap.EnumValue.BAR, message.getInt32ToEnumField().get(1));\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumField().get(2));\n\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1000)); \r\n    message = builder.build();\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumField().get(2));\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString());\n    assertEquals(1000, message.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = message.toBuilder();\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertFalse(message.hashCode() == message2.hashCode());\n    assertFalse(message.equals(message2));\n    \r\n    \r\n    assertEquals(message2.getInt32ToEnumField(), message.getInt32ToEnumField());\n  }\n","date":"2019-04-06 07:39:18","endLine":554,"groupId":"2059","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownEnumValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/d1/8fd13e0ace028a713e6f6ef6a39aa84e7bf0ad.src","preCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putInt32ToEnumFieldValue(0, 0)\n            .putInt32ToEnumFieldValue(1, 1)\n            .putInt32ToEnumFieldValue(2, 1000); \r\n    TestMap message = builder.build();\n\n    assertEquals(TestMap.EnumValue.FOO, message.getInt32ToEnumField().get(0));\n    assertEquals(TestMap.EnumValue.BAR, message.getInt32ToEnumField().get(1));\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumField().get(2));\n\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1000)); \r\n    message = builder.build();\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumField().get(2));\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString());\n    assertEquals(1000, message.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = message.toBuilder();\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertFalse(message.hashCode() == message2.hashCode());\n    assertFalse(message.equals(message2));\n    \r\n    \r\n    assertEquals(message2.getInt32ToEnumField(), message.getInt32ToEnumField());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":519,"status":"B"}],"commitId":"a48a574f7e890436363ca8ac71d866252b216052","commitMessage":"@@@Down integrate to Github\n","date":"2019-04-06 07:39:18","modifiedFileCount":"20","status":"M","submitter":"Hao Nguyen"},{"authorTime":"2020-10-29 03:02:24","codes":[{"authorDate":"2020-10-29 03:02:24","commitOrder":5,"curCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putAllInt32ToEnumFieldValue(\n                newMap(\n                    0, 0,\n                    1, 1,\n                    2, 1000)); \r\n    TestMap message = builder.build();\n\n    assertEquals(TestMap.EnumValue.FOO, message.getInt32ToEnumFieldMap().get(0));\n    assertEquals(TestMap.EnumValue.BAR, message.getInt32ToEnumFieldMap().get(1));\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumFieldMap().get(2));\n    assertEquals(1000, message.getInt32ToEnumFieldValueMap().get(2).intValue());\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString());\n    assertEquals(1000, message.getInt32ToEnumFieldValueMap().get(2).intValue());\n    builder = message.toBuilder();\n    assertEquals(1000, builder.getInt32ToEnumFieldValueMap().get(2).intValue());\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertEquals(1000, builder.getInt32ToEnumFieldValueMap().get(2).intValue());\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertFalse(message.hashCode() == message2.hashCode());\n    assertFalse(message.equals(message2));\n    \r\n    \r\n    assertEquals(message2.getInt32ToEnumFieldMap(), message.getInt32ToEnumFieldMap());\n  }\n","date":"2020-10-29 03:02:24","endLine":966,"groupId":"2127","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnknownEnumValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/f3/458dd2359531dc2578a8c3bbe052d5a11c0815.src","preCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putAllInt32ToEnumFieldValue(\n                newMap(\n                    0, 0,\n                    1, 1,\n                    2, 1000)); \r\n    TestMap message = builder.build();\n\n    assertEquals(TestMap.EnumValue.FOO, message.getInt32ToEnumField().get(0));\n    assertEquals(TestMap.EnumValue.BAR, message.getInt32ToEnumField().get(1));\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumField().get(2));\n    assertEquals(1000, message.getInt32ToEnumFieldValue().get(2).intValue());\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString());\n    assertEquals(1000, message.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = message.toBuilder();\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertFalse(message.hashCode() == message2.hashCode());\n    assertFalse(message.equals(message2));\n    \r\n    \r\n    assertEquals(message2.getInt32ToEnumField(), message.getInt32ToEnumField());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":932,"status":"M"},{"authorDate":"2020-10-29 03:02:24","commitOrder":5,"curCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putInt32ToEnumFieldValue(0, 0)\n            .putInt32ToEnumFieldValue(1, 1)\n            .putInt32ToEnumFieldValue(2, 1000); \r\n    TestMap message = builder.build();\n\n    assertEquals(TestMap.EnumValue.FOO, message.getInt32ToEnumFieldMap().get(0));\n    assertEquals(TestMap.EnumValue.BAR, message.getInt32ToEnumFieldMap().get(1));\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumFieldMap().get(2));\n\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1000)); \r\n    message = builder.build();\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumFieldMap().get(2));\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString());\n    assertEquals(1000, message.getInt32ToEnumFieldValueMap().get(2).intValue());\n    builder = message.toBuilder();\n    assertEquals(1000, builder.getInt32ToEnumFieldValueMap().get(2).intValue());\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertEquals(1000, builder.getInt32ToEnumFieldValueMap().get(2).intValue());\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertFalse(message.hashCode() == message2.hashCode());\n    assertFalse(message.equals(message2));\n    \r\n    \r\n    assertEquals(message2.getInt32ToEnumFieldMap(), message.getInt32ToEnumFieldMap());\n  }\n","date":"2020-10-29 03:02:24","endLine":555,"groupId":"2127","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownEnumValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/40/bb7893b313f55e707ce0c7851e3da210068828.src","preCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putInt32ToEnumFieldValue(0, 0)\n            .putInt32ToEnumFieldValue(1, 1)\n            .putInt32ToEnumFieldValue(2, 1000); \r\n    TestMap message = builder.build();\n\n    assertEquals(TestMap.EnumValue.FOO, message.getInt32ToEnumField().get(0));\n    assertEquals(TestMap.EnumValue.BAR, message.getInt32ToEnumField().get(1));\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumField().get(2));\n\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1000)); \r\n    message = builder.build();\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumField().get(2));\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString());\n    assertEquals(1000, message.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = message.toBuilder();\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertEquals(1000, builder.getInt32ToEnumFieldValue().get(2).intValue());\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertFalse(message.hashCode() == message2.hashCode());\n    assertFalse(message.equals(message2));\n    \r\n    \r\n    assertEquals(message2.getInt32ToEnumField(), message.getInt32ToEnumField());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":520,"status":"M"}],"commitId":"fdc35840b95f56c3aef44a3fc6ae5991f21620a5","commitMessage":"@@@Merge pull request #7925 from haberman/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2020-10-29 03:02:24","modifiedFileCount":"32","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":6,"curCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putAllInt32ToEnumFieldValue(\n                newMap(\n                    0, 0,\n                    1, 1,\n                    2, 1000)); \r\n    TestMap message = builder.build();\n\n    assertThat(message.getInt32ToEnumFieldMap()).containsEntry(0, TestMap.EnumValue.FOO);\n    assertThat(message.getInt32ToEnumFieldMap()).containsEntry(1, TestMap.EnumValue.BAR);\n    assertThat(message.getInt32ToEnumFieldMap()).containsEntry(2, TestMap.EnumValue.UNRECOGNIZED);\n    assertThat(message.getInt32ToEnumFieldValueMap().get(2).intValue()).isEqualTo(1000);\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString(), ExtensionRegistry.getEmptyRegistry());\n    assertThat(message.getInt32ToEnumFieldValueMap().get(2).intValue()).isEqualTo(1000);\n    builder = message.toBuilder();\n    assertThat(builder.getInt32ToEnumFieldValueMap().get(2).intValue()).isEqualTo(1000);\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertThat(builder.getInt32ToEnumFieldValueMap().get(2).intValue()).isEqualTo(1000);\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertThat(message.hashCode()).isNotEqualTo(message2.hashCode());\n    assertThat(message.equals(message2)).isFalse();\n    \r\n    \r\n    assertThat(message.getInt32ToEnumFieldMap()).isEqualTo(message2.getInt32ToEnumFieldMap());\n  }\n","date":"2021-08-10 06:55:00","endLine":995,"groupId":"10339","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnknownEnumValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/cc/7a1217dbd78eb4e65fd6d6e9ded575285fe7f4.src","preCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putAllInt32ToEnumFieldValue(\n                newMap(\n                    0, 0,\n                    1, 1,\n                    2, 1000)); \r\n    TestMap message = builder.build();\n\n    assertEquals(TestMap.EnumValue.FOO, message.getInt32ToEnumFieldMap().get(0));\n    assertEquals(TestMap.EnumValue.BAR, message.getInt32ToEnumFieldMap().get(1));\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumFieldMap().get(2));\n    assertEquals(1000, message.getInt32ToEnumFieldValueMap().get(2).intValue());\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString());\n    assertEquals(1000, message.getInt32ToEnumFieldValueMap().get(2).intValue());\n    builder = message.toBuilder();\n    assertEquals(1000, builder.getInt32ToEnumFieldValueMap().get(2).intValue());\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertEquals(1000, builder.getInt32ToEnumFieldValueMap().get(2).intValue());\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertFalse(message.hashCode() == message2.hashCode());\n    assertFalse(message.equals(message2));\n    \r\n    \r\n    assertEquals(message2.getInt32ToEnumFieldMap(), message.getInt32ToEnumFieldMap());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":961,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":6,"curCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putInt32ToEnumFieldValue(0, 0)\n            .putInt32ToEnumFieldValue(1, 1)\n            .putInt32ToEnumFieldValue(2, 1000); \r\n    TestMap message = builder.build();\n\n    assertThat(message.getInt32ToEnumFieldMap()).containsEntry(0, TestMap.EnumValue.FOO);\n    assertThat(message.getInt32ToEnumFieldMap()).containsEntry(1, TestMap.EnumValue.BAR);\n    assertThat(message.getInt32ToEnumFieldMap()).containsEntry(2, TestMap.EnumValue.UNRECOGNIZED);\n\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1000)); \r\n    message = builder.build();\n    assertThat(message.getInt32ToEnumFieldMap()).containsEntry(2, TestMap.EnumValue.UNRECOGNIZED);\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString(), ExtensionRegistryLite.getEmptyRegistry());\n    assertThat(message.getInt32ToEnumFieldValueMap().get(2).intValue()).isEqualTo(1000);\n    builder = message.toBuilder();\n    assertThat(builder.getInt32ToEnumFieldValueMap().get(2).intValue()).isEqualTo(1000);\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertThat(builder.getInt32ToEnumFieldValueMap().get(2).intValue()).isEqualTo(1000);\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertThat(message.hashCode()).isNotEqualTo(message2.hashCode());\n    assertThat(message.equals(message2)).isFalse();\n    \r\n    \r\n    assertThat(message.getInt32ToEnumFieldMap()).isEqualTo(message2.getInt32ToEnumFieldMap());\n  }\n","date":"2021-08-10 06:55:00","endLine":575,"groupId":"10339","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testUnknownEnumValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5f/39893d7b8e80a4c464499ba7aa4706c64dda10.src","preCode":"  public void testUnknownEnumValues() throws Exception {\n    TestMap.Builder builder =\n        TestMap.newBuilder()\n            .putInt32ToEnumFieldValue(0, 0)\n            .putInt32ToEnumFieldValue(1, 1)\n            .putInt32ToEnumFieldValue(2, 1000); \r\n    TestMap message = builder.build();\n\n    assertEquals(TestMap.EnumValue.FOO, message.getInt32ToEnumFieldMap().get(0));\n    assertEquals(TestMap.EnumValue.BAR, message.getInt32ToEnumFieldMap().get(1));\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumFieldMap().get(2));\n\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1000)); \r\n    message = builder.build();\n    assertEquals(TestMap.EnumValue.UNRECOGNIZED, message.getInt32ToEnumFieldMap().get(2));\n\n    \r\n    \r\n    \r\n    \r\n    message = TestMap.parseFrom(message.toByteString());\n    assertEquals(1000, message.getInt32ToEnumFieldValueMap().get(2).intValue());\n    builder = message.toBuilder();\n    assertEquals(1000, builder.getInt32ToEnumFieldValueMap().get(2).intValue());\n    builder = TestMap.newBuilder().mergeFrom(message);\n    assertEquals(1000, builder.getInt32ToEnumFieldValueMap().get(2).intValue());\n\n    \r\n    builder.putAllInt32ToEnumFieldValue(newMap(2, 1001));\n    TestMap message2 = builder.build();\n    assertFalse(message.hashCode() == message2.hashCode());\n    assertFalse(message.equals(message2));\n    \r\n    \r\n    assertEquals(message2.getInt32ToEnumFieldMap(), message.getInt32ToEnumFieldMap());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
