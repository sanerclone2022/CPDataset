[{"authorTime":"2019-04-06 07:39:18","codes":[{"authorDate":"2019-04-06 07:39:18","commitOrder":1,"curCode":"  private void testParseMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int typeId1 = 1545008;\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(typeId1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","date":"2019-04-06 07:39:18","endLine":404,"groupId":"92","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseMessageSetExtensionWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/a7/25d413ff5eca06f1ef0e7628a7c408d28fa733.src","preCode":"  private void testParseMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int typeId1 = 1545008;\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(typeId1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":382,"status":"B"},{"authorDate":"2019-04-06 07:39:18","commitOrder":1,"curCode":"  private void testMergeLazyMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int typeId1 = 1545008;\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(typeId1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    \r\n    messageSet = messageSet.toBuilder().mergeFrom(data, extensionRegistry).build();\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","date":"2019-04-06 07:39:18","endLine":438,"groupId":"92","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeLazyMessageSetExtensionWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/a7/25d413ff5eca06f1ef0e7628a7c408d28fa733.src","preCode":"  private void testMergeLazyMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int typeId1 = 1545008;\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(typeId1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    \r\n    messageSet = messageSet.toBuilder().mergeFrom(data, extensionRegistry).build();\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"B"}],"commitId":"a48a574f7e890436363ca8ac71d866252b216052","commitMessage":"@@@Down integrate to Github\n","date":"2019-04-06 07:39:18","modifiedFileCount":"20","status":"B","submitter":"Hao Nguyen"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  private void testParseMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int typeId1 = 1545008;\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(typeId1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    assertThat(messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI())\n        .isEqualTo(123);\n  }\n","date":"2021-08-10 06:55:00","endLine":431,"groupId":"10420","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testParseMessageSetExtensionWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/cb/ed9fcff98849fe4bfbd4d0b3c290335616bc24.src","preCode":"  private void testParseMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int typeId1 = 1545008;\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(typeId1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":408,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  private void testMergeLazyMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int typeId1 = 1545008;\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(typeId1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    \r\n    messageSet = messageSet.toBuilder().mergeFrom(data, extensionRegistry).build();\n    assertThat(messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI())\n        .isEqualTo(123);\n  }\n","date":"2021-08-10 06:55:00","endLine":468,"groupId":"10420","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testMergeLazyMessageSetExtensionWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/cb/ed9fcff98849fe4bfbd4d0b3c290335616bc24.src","preCode":"  private void testMergeLazyMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int typeId1 = 1545008;\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(typeId1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    \r\n    messageSet = messageSet.toBuilder().mergeFrom(data, extensionRegistry).build();\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
