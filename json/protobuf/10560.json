[{"authorTime":"2016-04-12 14:37:42","codes":[{"authorDate":"2016-04-12 14:37:42","commitOrder":1,"curCode":"  public void testWriteToShouldNotExposeInternalBufferToOutputStream() throws IOException {\n    OutputStream os = new OutputStream() {\n      @Override\n      public void write(byte[] b, int off, int len) {\n        Arrays.fill(b, off, off + len, (byte) 0);\n      }\n\n      @Override\n      public void write(int b) {\n        throw new UnsupportedOperationException();\n      }\n    };\n\n    stringUnderTest.writeTo(os);\n    assertTrue(classUnderTest + \".writeTo() must not grant access to underlying array\",\n        Arrays.equals(referenceBytes, stringUnderTest.toByteArray()));\n  }\n","date":"2016-04-12 14:37:42","endLine":323,"groupId":"1780","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWriteToShouldNotExposeInternalBufferToOutputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/2e/7792a880d58f52dd8e8e2df9b973cbc872dcc3.src","preCode":"  public void testWriteToShouldNotExposeInternalBufferToOutputStream() throws IOException {\n    OutputStream os = new OutputStream() {\n      @Override\n      public void write(byte[] b, int off, int len) {\n        Arrays.fill(b, off, off + len, (byte) 0);\n      }\n\n      @Override\n      public void write(int b) {\n        throw new UnsupportedOperationException();\n      }\n    };\n\n    stringUnderTest.writeTo(os);\n    assertTrue(classUnderTest + \".writeTo() must not grant access to underlying array\",\n        Arrays.equals(referenceBytes, stringUnderTest.toByteArray()));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"B"},{"authorDate":"2016-04-12 14:37:42","commitOrder":1,"curCode":"  public void testWriteToInternalShouldExposeInternalBufferToOutputStream() throws IOException {\n    OutputStream os = new OutputStream() {\n      @Override\n      public void write(byte[] b, int off, int len) {\n        Arrays.fill(b, off, off + len, (byte) 0);\n      }\n\n      @Override\n      public void write(int b) {\n        throw new UnsupportedOperationException();\n      }\n    };\n\n    stringUnderTest.writeToInternal(os, 0, stringUnderTest.size());\n    byte[] allZeros = new byte[stringUnderTest.size()];\n    assertTrue(classUnderTest + \".writeToInternal() must grant access to underlying array\",\n        Arrays.equals(allZeros, stringUnderTest.toByteArray()));\n  }\n","date":"2016-04-12 14:37:42","endLine":342,"groupId":"986","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWriteToInternalShouldExposeInternalBufferToOutputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/2e/7792a880d58f52dd8e8e2df9b973cbc872dcc3.src","preCode":"  public void testWriteToInternalShouldExposeInternalBufferToOutputStream() throws IOException {\n    OutputStream os = new OutputStream() {\n      @Override\n      public void write(byte[] b, int off, int len) {\n        Arrays.fill(b, off, off + len, (byte) 0);\n      }\n\n      @Override\n      public void write(int b) {\n        throw new UnsupportedOperationException();\n      }\n    };\n\n    stringUnderTest.writeToInternal(os, 0, stringUnderTest.size());\n    byte[] allZeros = new byte[stringUnderTest.size()];\n    assertTrue(classUnderTest + \".writeToInternal() must grant access to underlying array\",\n        Arrays.equals(allZeros, stringUnderTest.toByteArray()));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"B"}],"commitId":"814685ca2cd9280ca401e1842fd6311440921a0a","commitMessage":"@@@Merge pull request #1397 from google/internal-merge\n\nInternal merge","date":"2016-04-12 14:37:42","modifiedFileCount":"57","status":"B","submitter":"Joshua Haberman"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testWriteToShouldNotExposeInternalBufferToOutputStream() throws IOException {\n    OutputStream os =\n        new OutputStream() {\n          @Override\n          public void write(byte[] b, int off, int len) {\n            Arrays.fill(b, off, off + len, (byte) 0);\n          }\n\n          @Override\n          public void write(int b) {\n            throw new UnsupportedOperationException();\n          }\n        };\n\n    stringUnderTest.writeTo(os);\n    assertWithMessage(\"%s.writeTo() must not grant access to underlying array\", classUnderTest)\n        .that(Arrays.equals(referenceBytes, stringUnderTest.toByteArray()))\n        .isTrue();\n  }\n","date":"2021-08-10 06:55:00","endLine":381,"groupId":"10560","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testWriteToShouldNotExposeInternalBufferToOutputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5e/c4a937bb40791b1a2e146759b90dc458c83203.src","preCode":"  public void testWriteToShouldNotExposeInternalBufferToOutputStream() throws IOException {\n    OutputStream os =\n        new OutputStream() {\n          @Override\n          public void write(byte[] b, int off, int len) {\n            Arrays.fill(b, off, off + len, (byte) 0);\n          }\n\n          @Override\n          public void write(int b) {\n            throw new UnsupportedOperationException();\n          }\n        };\n\n    stringUnderTest.writeTo(os);\n    assertTrue(\n        classUnderTest + \".writeTo() must not grant access to underlying array\",\n        Arrays.equals(referenceBytes, stringUnderTest.toByteArray()));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":363,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testWriteToInternalShouldExposeInternalBufferToOutputStream() throws IOException {\n    OutputStream os =\n        new OutputStream() {\n          @Override\n          public void write(byte[] b, int off, int len) {\n            Arrays.fill(b, off, off + len, (byte) 0);\n          }\n\n          @Override\n          public void write(int b) {\n            throw new UnsupportedOperationException();\n          }\n        };\n\n    stringUnderTest.writeToInternal(os, 0, stringUnderTest.size());\n    byte[] allZeros = new byte[stringUnderTest.size()];\n    assertWithMessage(\"%s.writeToInternal() must grant access to underlying array\", classUnderTest)\n        .that(Arrays.equals(allZeros, stringUnderTest.toByteArray()))\n        .isTrue();\n  }\n","date":"2021-08-10 06:55:00","endLine":403,"groupId":"10560","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testWriteToInternalShouldExposeInternalBufferToOutputStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5e/c4a937bb40791b1a2e146759b90dc458c83203.src","preCode":"  public void testWriteToInternalShouldExposeInternalBufferToOutputStream() throws IOException {\n    OutputStream os =\n        new OutputStream() {\n          @Override\n          public void write(byte[] b, int off, int len) {\n            Arrays.fill(b, off, off + len, (byte) 0);\n          }\n\n          @Override\n          public void write(int b) {\n            throw new UnsupportedOperationException();\n          }\n        };\n\n    stringUnderTest.writeToInternal(os, 0, stringUnderTest.size());\n    byte[] allZeros = new byte[stringUnderTest.size()];\n    assertTrue(\n        classUnderTest + \".writeToInternal() must grant access to underlying array\",\n        Arrays.equals(allZeros, stringUnderTest.toByteArray()));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LiteralByteStringTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
