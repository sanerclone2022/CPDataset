[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testCopyConstructorCopiesByReference() {\n    LazyStringArrayList list1 = new LazyStringArrayList();\n    list1.add(STRING_A);\n    list1.add(BYTE_STRING_B);\n    list1.add(BYTE_STRING_C);\n\n    LazyStringArrayList list2 = new LazyStringArrayList(list1);\n    assertEquals(3, list2.size());\n    assertSame(STRING_A, list2.get(0));\n    assertSame(BYTE_STRING_B, list2.getByteString(1));\n    assertSame(BYTE_STRING_C, list2.getByteString(2));\n  }\n","date":"2016-01-14 03:22:18","endLine":149,"groupId":"1386","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyConstructorCopiesByReference","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/0f/42ac506075b394e2024f754b6208cafdbee361.src","preCode":"  public void testCopyConstructorCopiesByReference() {\n    LazyStringArrayList list1 = new LazyStringArrayList();\n    list1.add(STRING_A);\n    list1.add(BYTE_STRING_B);\n    list1.add(BYTE_STRING_C);\n\n    LazyStringArrayList list2 = new LazyStringArrayList(list1);\n    assertEquals(3, list2.size());\n    assertSame(STRING_A, list2.get(0));\n    assertSame(BYTE_STRING_B, list2.getByteString(1));\n    assertSame(BYTE_STRING_C, list2.getByteString(2));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LazyStringArrayListTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testAddAllCopiesByReferenceIfPossible() {\n    LazyStringArrayList list1 = new LazyStringArrayList();\n    list1.add(STRING_A);\n    list1.add(BYTE_STRING_B);\n    list1.add(BYTE_STRING_C);\n\n    LazyStringArrayList list2 = new LazyStringArrayList();\n    list2.addAll(list1);\n\n    assertEquals(3, list2.size());\n    assertSame(STRING_A, list2.get(0));\n    assertSame(BYTE_STRING_B, list2.getByteString(1));\n    assertSame(BYTE_STRING_C, list2.getByteString(2));\n  }\n","date":"2016-01-14 03:22:18","endLine":177,"groupId":"1889","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddAllCopiesByReferenceIfPossible","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/0f/42ac506075b394e2024f754b6208cafdbee361.src","preCode":"  public void testAddAllCopiesByReferenceIfPossible() {\n    LazyStringArrayList list1 = new LazyStringArrayList();\n    list1.add(STRING_A);\n    list1.add(BYTE_STRING_B);\n    list1.add(BYTE_STRING_C);\n\n    LazyStringArrayList list2 = new LazyStringArrayList();\n    list2.addAll(list1);\n\n    assertEquals(3, list2.size());\n    assertSame(STRING_A, list2.get(0));\n    assertSame(BYTE_STRING_B, list2.getByteString(1));\n    assertSame(BYTE_STRING_C, list2.getByteString(2));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LazyStringArrayListTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testCopyConstructorCopiesByReference() {\n    LazyStringArrayList list1 = new LazyStringArrayList();\n    list1.add(STRING_A);\n    list1.add(BYTE_STRING_B);\n    list1.add(BYTE_STRING_C);\n\n    LazyStringArrayList list2 = new LazyStringArrayList(list1);\n    assertThat(list2).hasSize(3);\n    assertThat(list2.get(0)).isSameInstanceAs(STRING_A);\n    assertThat(list2.getByteString(1)).isSameInstanceAs(BYTE_STRING_B);\n    assertThat(list2.getByteString(2)).isSameInstanceAs(BYTE_STRING_C);\n  }\n","date":"2021-08-10 06:55:00","endLine":154,"groupId":"10464","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testCopyConstructorCopiesByReference","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1e/f03ce8b8e4c712c8b366930f7d0bfca64875c3.src","preCode":"  public void testCopyConstructorCopiesByReference() {\n    LazyStringArrayList list1 = new LazyStringArrayList();\n    list1.add(STRING_A);\n    list1.add(BYTE_STRING_B);\n    list1.add(BYTE_STRING_C);\n\n    LazyStringArrayList list2 = new LazyStringArrayList(list1);\n    assertEquals(3, list2.size());\n    assertSame(STRING_A, list2.get(0));\n    assertSame(BYTE_STRING_B, list2.getByteString(1));\n    assertSame(BYTE_STRING_C, list2.getByteString(2));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LazyStringArrayListTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testAddAllCopiesByReferenceIfPossible() {\n    LazyStringArrayList list1 = new LazyStringArrayList();\n    list1.add(STRING_A);\n    list1.add(BYTE_STRING_B);\n    list1.add(BYTE_STRING_C);\n\n    LazyStringArrayList list2 = new LazyStringArrayList();\n    list2.addAll(list1);\n\n    assertThat(list2).hasSize(3);\n    assertThat(list2.get(0)).isSameInstanceAs(STRING_A);\n    assertThat(list2.getByteString(1)).isSameInstanceAs(BYTE_STRING_B);\n    assertThat(list2.getByteString(2)).isSameInstanceAs(BYTE_STRING_C);\n  }\n","date":"2021-08-10 06:55:00","endLine":184,"groupId":"10464","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testAddAllCopiesByReferenceIfPossible","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1e/f03ce8b8e4c712c8b366930f7d0bfca64875c3.src","preCode":"  public void testAddAllCopiesByReferenceIfPossible() {\n    LazyStringArrayList list1 = new LazyStringArrayList();\n    list1.add(STRING_A);\n    list1.add(BYTE_STRING_B);\n    list1.add(BYTE_STRING_C);\n\n    LazyStringArrayList list2 = new LazyStringArrayList();\n    list2.addAll(list1);\n\n    assertEquals(3, list2.size());\n    assertSame(STRING_A, list2.get(0));\n    assertSame(BYTE_STRING_B, list2.getByteString(1));\n    assertSame(BYTE_STRING_C, list2.getByteString(2));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LazyStringArrayListTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
