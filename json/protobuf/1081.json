[{"authorTime":"2016-07-19 05:57:47","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testFieldPresenceByReflection() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n\n    \r\n    TestAllTypes message = TestAllTypes.newBuilder().build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message = TestAllTypes.newBuilder()\n        .setOptionalInt32(0)\n        .setOptionalString(\"\")\n        .setOptionalBytes(ByteString.EMPTY)\n        .setOptionalNestedEnum(TestAllTypes.NestedEnum.FOO)\n        .build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message = TestAllTypes.newBuilder()\n        .setOptionalInt32(1)\n        .setOptionalString(\"x\")\n        .setOptionalBytes(ByteString.copyFromUtf8(\"y\"))\n        .setOptionalNestedEnum(TestAllTypes.NestedEnum.BAR)\n        .build();\n    assertTrue(message.hasField(optionalInt32Field));\n    assertTrue(message.hasField(optionalStringField));\n    assertTrue(message.hasField(optionalBytesField));\n    assertTrue(message.hasField(optionalNestedEnumField));\n    assertEquals(4, message.getAllFields().size());\n  }\n","date":"2016-01-14 03:22:18","endLine":234,"groupId":"381","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFieldPresenceByReflection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/ea/eec0b8aecc13073d05f89d9f587b0f21edc336.src","preCode":"  public void testFieldPresenceByReflection() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n\n    \r\n    TestAllTypes message = TestAllTypes.newBuilder().build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message = TestAllTypes.newBuilder()\n        .setOptionalInt32(0)\n        .setOptionalString(\"\")\n        .setOptionalBytes(ByteString.EMPTY)\n        .setOptionalNestedEnum(TestAllTypes.NestedEnum.FOO)\n        .build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message = TestAllTypes.newBuilder()\n        .setOptionalInt32(1)\n        .setOptionalString(\"x\")\n        .setOptionalBytes(ByteString.copyFromUtf8(\"y\"))\n        .setOptionalNestedEnum(TestAllTypes.NestedEnum.BAR)\n        .build();\n    assertTrue(message.hasField(optionalInt32Field));\n    assertTrue(message.hasField(optionalStringField));\n    assertTrue(message.hasField(optionalBytesField));\n    assertTrue(message.hasField(optionalNestedEnumField));\n    assertEquals(4, message.getAllFields().size());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/FieldPresenceTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"NB"},{"authorDate":"2016-07-19 05:57:47","commitOrder":2,"curCode":"  public void testFieldPresenceDynamicMessage() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n    EnumDescriptor enumDescriptor = optionalNestedEnumField.getEnumType();\n    EnumValueDescriptor defaultEnumValueDescriptor = enumDescriptor.getValues().get(0);\n    EnumValueDescriptor nonDefaultEnumValueDescriptor = enumDescriptor.getValues().get(1);\n\n    DynamicMessage defaultInstance = DynamicMessage.getDefaultInstance(descriptor);\n    \r\n    DynamicMessage message = defaultInstance.newBuilderForType().build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message =\n        defaultInstance\n            .newBuilderForType()\n            .setField(optionalInt32Field, 1)\n            .setField(optionalStringField, \"x\")\n            .setField(optionalBytesField, ByteString.copyFromUtf8(\"y\"))\n            .setField(optionalNestedEnumField, nonDefaultEnumValueDescriptor)\n            .build();\n    assertTrue(message.hasField(optionalInt32Field));\n    assertTrue(message.hasField(optionalStringField));\n    assertTrue(message.hasField(optionalBytesField));\n    assertTrue(message.hasField(optionalNestedEnumField));\n    assertEquals(4, message.getAllFields().size());\n\n    \r\n    message = message.toBuilder()\n            .setField(optionalInt32Field, 0)\n            .setField(optionalStringField, \"\")\n            .setField(optionalBytesField, ByteString.EMPTY)\n            .setField(optionalNestedEnumField, defaultEnumValueDescriptor)\n            .build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n  }\n","date":"2016-07-19 05:57:47","endLine":304,"groupId":"1543","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldPresenceDynamicMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/4a/42c8970ef450783c6732c9a32a942fa8dde6b6.src","preCode":"  public void testFieldPresenceDynamicMessage() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n    EnumDescriptor enumDescriptor = optionalNestedEnumField.getEnumType();\n    EnumValueDescriptor defaultEnumValueDescriptor = enumDescriptor.getValues().get(0);\n    EnumValueDescriptor nonDefaultEnumValueDescriptor = enumDescriptor.getValues().get(1);\n\n    DynamicMessage defaultInstance = DynamicMessage.getDefaultInstance(descriptor);\n    \r\n    DynamicMessage message = defaultInstance.newBuilderForType().build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message =\n        defaultInstance\n            .newBuilderForType()\n            .setField(optionalInt32Field, 1)\n            .setField(optionalStringField, \"x\")\n            .setField(optionalBytesField, ByteString.copyFromUtf8(\"y\"))\n            .setField(optionalNestedEnumField, nonDefaultEnumValueDescriptor)\n            .build();\n    assertTrue(message.hasField(optionalInt32Field));\n    assertTrue(message.hasField(optionalStringField));\n    assertTrue(message.hasField(optionalBytesField));\n    assertTrue(message.hasField(optionalNestedEnumField));\n    assertEquals(4, message.getAllFields().size());\n\n    \r\n    message = message.toBuilder()\n            .setField(optionalInt32Field, 0)\n            .setField(optionalStringField, \"\")\n            .setField(optionalBytesField, ByteString.EMPTY)\n            .setField(optionalNestedEnumField, defaultEnumValueDescriptor)\n            .build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/FieldPresenceTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"B"}],"commitId":"2078f614e46e78ed425da255fe0c12ced58e3c15","commitMessage":"@@@Merge remote-tracking branch 'origin/3.0.0-beta-4'\n","date":"2016-07-19 05:57:47","modifiedFileCount":"7","status":"M","submitter":"Feng Xiao"},{"authorTime":"2016-07-19 05:57:47","codes":[{"authorDate":"2018-09-08 07:15:38","commitOrder":3,"curCode":"  public void testFieldPresenceByReflection() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n\n    \r\n    TestAllTypes message = TestAllTypes.getDefaultInstance();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message =\n        TestAllTypes.newBuilder()\n            .setOptionalInt32(0)\n            .setOptionalString(\"\")\n            .setOptionalBytes(ByteString.EMPTY)\n            .setOptionalNestedEnum(TestAllTypes.NestedEnum.FOO)\n            .build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message =\n        TestAllTypes.newBuilder()\n            .setOptionalInt32(1)\n            .setOptionalString(\"x\")\n            .setOptionalBytes(ByteString.copyFromUtf8(\"y\"))\n            .setOptionalNestedEnum(TestAllTypes.NestedEnum.BAR)\n            .build();\n    assertTrue(message.hasField(optionalInt32Field));\n    assertTrue(message.hasField(optionalStringField));\n    assertTrue(message.hasField(optionalBytesField));\n    assertTrue(message.hasField(optionalNestedEnumField));\n    assertEquals(4, message.getAllFields().size());\n  }\n","date":"2018-09-08 07:15:38","endLine":214,"groupId":"381","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFieldPresenceByReflection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/85/a2fe086e6081bac7e93bdcaf38ca0d7c5ec773.src","preCode":"  public void testFieldPresenceByReflection() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n\n    \r\n    TestAllTypes message = TestAllTypes.newBuilder().build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message = TestAllTypes.newBuilder()\n        .setOptionalInt32(0)\n        .setOptionalString(\"\")\n        .setOptionalBytes(ByteString.EMPTY)\n        .setOptionalNestedEnum(TestAllTypes.NestedEnum.FOO)\n        .build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message = TestAllTypes.newBuilder()\n        .setOptionalInt32(1)\n        .setOptionalString(\"x\")\n        .setOptionalBytes(ByteString.copyFromUtf8(\"y\"))\n        .setOptionalNestedEnum(TestAllTypes.NestedEnum.BAR)\n        .build();\n    assertTrue(message.hasField(optionalInt32Field));\n    assertTrue(message.hasField(optionalStringField));\n    assertTrue(message.hasField(optionalBytesField));\n    assertTrue(message.hasField(optionalNestedEnumField));\n    assertEquals(4, message.getAllFields().size());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/FieldPresenceTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"},{"authorDate":"2016-07-19 05:57:47","commitOrder":3,"curCode":"  public void testFieldPresenceDynamicMessage() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n    EnumDescriptor enumDescriptor = optionalNestedEnumField.getEnumType();\n    EnumValueDescriptor defaultEnumValueDescriptor = enumDescriptor.getValues().get(0);\n    EnumValueDescriptor nonDefaultEnumValueDescriptor = enumDescriptor.getValues().get(1);\n\n    DynamicMessage defaultInstance = DynamicMessage.getDefaultInstance(descriptor);\n    \r\n    DynamicMessage message = defaultInstance.newBuilderForType().build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message =\n        defaultInstance\n            .newBuilderForType()\n            .setField(optionalInt32Field, 1)\n            .setField(optionalStringField, \"x\")\n            .setField(optionalBytesField, ByteString.copyFromUtf8(\"y\"))\n            .setField(optionalNestedEnumField, nonDefaultEnumValueDescriptor)\n            .build();\n    assertTrue(message.hasField(optionalInt32Field));\n    assertTrue(message.hasField(optionalStringField));\n    assertTrue(message.hasField(optionalBytesField));\n    assertTrue(message.hasField(optionalNestedEnumField));\n    assertEquals(4, message.getAllFields().size());\n\n    \r\n    message = message.toBuilder()\n            .setField(optionalInt32Field, 0)\n            .setField(optionalStringField, \"\")\n            .setField(optionalBytesField, ByteString.EMPTY)\n            .setField(optionalNestedEnumField, defaultEnumValueDescriptor)\n            .build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n  }\n","date":"2016-07-19 05:57:47","endLine":304,"groupId":"1543","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldPresenceDynamicMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/4a/42c8970ef450783c6732c9a32a942fa8dde6b6.src","preCode":"  public void testFieldPresenceDynamicMessage() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n    EnumDescriptor enumDescriptor = optionalNestedEnumField.getEnumType();\n    EnumValueDescriptor defaultEnumValueDescriptor = enumDescriptor.getValues().get(0);\n    EnumValueDescriptor nonDefaultEnumValueDescriptor = enumDescriptor.getValues().get(1);\n\n    DynamicMessage defaultInstance = DynamicMessage.getDefaultInstance(descriptor);\n    \r\n    DynamicMessage message = defaultInstance.newBuilderForType().build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message =\n        defaultInstance\n            .newBuilderForType()\n            .setField(optionalInt32Field, 1)\n            .setField(optionalStringField, \"x\")\n            .setField(optionalBytesField, ByteString.copyFromUtf8(\"y\"))\n            .setField(optionalNestedEnumField, nonDefaultEnumValueDescriptor)\n            .build();\n    assertTrue(message.hasField(optionalInt32Field));\n    assertTrue(message.hasField(optionalStringField));\n    assertTrue(message.hasField(optionalBytesField));\n    assertTrue(message.hasField(optionalNestedEnumField));\n    assertEquals(4, message.getAllFields().size());\n\n    \r\n    message = message.toBuilder()\n            .setField(optionalInt32Field, 0)\n            .setField(optionalStringField, \"\")\n            .setField(optionalBytesField, ByteString.EMPTY)\n            .setField(optionalNestedEnumField, defaultEnumValueDescriptor)\n            .build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/FieldPresenceTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"N"}],"commitId":"f9d8138376765d229a32635c9209061e4e4aed8c","commitMessage":"@@@Merge pull request #5109 from haberman/integrate\n\nDown-integrate from google3.","date":"2018-09-08 07:15:38","modifiedFileCount":"125","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":4,"curCode":"  public void testFieldPresenceByReflection() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n\n    \r\n    TestAllTypes message = TestAllTypes.getDefaultInstance();\n    assertThat(message.hasField(optionalInt32Field)).isFalse();\n    assertThat(message.hasField(optionalStringField)).isFalse();\n    assertThat(message.hasField(optionalBytesField)).isFalse();\n    assertThat(message.hasField(optionalNestedEnumField)).isFalse();\n    assertThat(message.getAllFields()).isEmpty();\n\n    \r\n    message =\n        TestAllTypes.newBuilder()\n            .setOptionalInt32(0)\n            .setOptionalString(\"\")\n            .setOptionalBytes(ByteString.EMPTY)\n            .setOptionalNestedEnum(TestAllTypes.NestedEnum.FOO)\n            .build();\n    assertThat(message.hasField(optionalInt32Field)).isFalse();\n    assertThat(message.hasField(optionalStringField)).isFalse();\n    assertThat(message.hasField(optionalBytesField)).isFalse();\n    assertThat(message.hasField(optionalNestedEnumField)).isFalse();\n    assertThat(message.getAllFields()).isEmpty();\n\n    \r\n    message =\n        TestAllTypes.newBuilder()\n            .setOptionalInt32(1)\n            .setOptionalString(\"x\")\n            .setOptionalBytes(ByteString.copyFromUtf8(\"y\"))\n            .setOptionalNestedEnum(TestAllTypes.NestedEnum.BAR)\n            .build();\n    assertThat(message.hasField(optionalInt32Field)).isTrue();\n    assertThat(message.hasField(optionalStringField)).isTrue();\n    assertThat(message.hasField(optionalBytesField)).isTrue();\n    assertThat(message.hasField(optionalNestedEnumField)).isTrue();\n    assertThat(message.getAllFields()).hasSize(4);\n  }\n","date":"2021-08-10 06:55:00","endLine":343,"groupId":"1081","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testFieldPresenceByReflection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c4/830af392c2e56a6813114f184f7113711487a5.src","preCode":"  public void testFieldPresenceByReflection() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n\n    \r\n    TestAllTypes message = TestAllTypes.getDefaultInstance();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message =\n        TestAllTypes.newBuilder()\n            .setOptionalInt32(0)\n            .setOptionalString(\"\")\n            .setOptionalBytes(ByteString.EMPTY)\n            .setOptionalNestedEnum(TestAllTypes.NestedEnum.FOO)\n            .build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message =\n        TestAllTypes.newBuilder()\n            .setOptionalInt32(1)\n            .setOptionalString(\"x\")\n            .setOptionalBytes(ByteString.copyFromUtf8(\"y\"))\n            .setOptionalNestedEnum(TestAllTypes.NestedEnum.BAR)\n            .build();\n    assertTrue(message.hasField(optionalInt32Field));\n    assertTrue(message.hasField(optionalStringField));\n    assertTrue(message.hasField(optionalBytesField));\n    assertTrue(message.hasField(optionalNestedEnumField));\n    assertEquals(4, message.getAllFields().size());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/FieldPresenceTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":4,"curCode":"  public void testFieldPresenceDynamicMessage() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n    EnumDescriptor enumDescriptor = optionalNestedEnumField.getEnumType();\n    EnumValueDescriptor defaultEnumValueDescriptor = enumDescriptor.getValues().get(0);\n    EnumValueDescriptor nonDefaultEnumValueDescriptor = enumDescriptor.getValues().get(1);\n\n    DynamicMessage defaultInstance = DynamicMessage.getDefaultInstance(descriptor);\n    \r\n    DynamicMessage message = defaultInstance.newBuilderForType().build();\n    assertThat(message.hasField(optionalInt32Field)).isFalse();\n    assertThat(message.hasField(optionalStringField)).isFalse();\n    assertThat(message.hasField(optionalBytesField)).isFalse();\n    assertThat(message.hasField(optionalNestedEnumField)).isFalse();\n    assertThat(message.getAllFields()).isEmpty();\n\n    \r\n    message =\n        defaultInstance\n            .newBuilderForType()\n            .setField(optionalInt32Field, 1)\n            .setField(optionalStringField, \"x\")\n            .setField(optionalBytesField, ByteString.copyFromUtf8(\"y\"))\n            .setField(optionalNestedEnumField, nonDefaultEnumValueDescriptor)\n            .build();\n    assertThat(message.hasField(optionalInt32Field)).isTrue();\n    assertThat(message.hasField(optionalStringField)).isTrue();\n    assertThat(message.hasField(optionalBytesField)).isTrue();\n    assertThat(message.hasField(optionalNestedEnumField)).isTrue();\n    assertThat(message.getAllFields()).hasSize(4);\n\n    \r\n    message =\n        message\n            .toBuilder()\n            .setField(optionalInt32Field, 0)\n            .setField(optionalStringField, \"\")\n            .setField(optionalBytesField, ByteString.EMPTY)\n            .setField(optionalNestedEnumField, defaultEnumValueDescriptor)\n            .build();\n    assertThat(message.hasField(optionalInt32Field)).isFalse();\n    assertThat(message.hasField(optionalStringField)).isFalse();\n    assertThat(message.hasField(optionalBytesField)).isFalse();\n    assertThat(message.hasField(optionalNestedEnumField)).isFalse();\n    assertThat(message.getAllFields()).isEmpty();\n  }\n","date":"2021-08-10 06:55:00","endLine":394,"groupId":"1081","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testFieldPresenceDynamicMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c4/830af392c2e56a6813114f184f7113711487a5.src","preCode":"  public void testFieldPresenceDynamicMessage() {\n    Descriptor descriptor = TestAllTypes.getDescriptor();\n    FieldDescriptor optionalInt32Field = descriptor.findFieldByName(\"optional_int32\");\n    FieldDescriptor optionalStringField = descriptor.findFieldByName(\"optional_string\");\n    FieldDescriptor optionalBytesField = descriptor.findFieldByName(\"optional_bytes\");\n    FieldDescriptor optionalNestedEnumField = descriptor.findFieldByName(\"optional_nested_enum\");\n    EnumDescriptor enumDescriptor = optionalNestedEnumField.getEnumType();\n    EnumValueDescriptor defaultEnumValueDescriptor = enumDescriptor.getValues().get(0);\n    EnumValueDescriptor nonDefaultEnumValueDescriptor = enumDescriptor.getValues().get(1);\n\n    DynamicMessage defaultInstance = DynamicMessage.getDefaultInstance(descriptor);\n    \r\n    DynamicMessage message = defaultInstance.newBuilderForType().build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n\n    \r\n    message =\n        defaultInstance\n            .newBuilderForType()\n            .setField(optionalInt32Field, 1)\n            .setField(optionalStringField, \"x\")\n            .setField(optionalBytesField, ByteString.copyFromUtf8(\"y\"))\n            .setField(optionalNestedEnumField, nonDefaultEnumValueDescriptor)\n            .build();\n    assertTrue(message.hasField(optionalInt32Field));\n    assertTrue(message.hasField(optionalStringField));\n    assertTrue(message.hasField(optionalBytesField));\n    assertTrue(message.hasField(optionalNestedEnumField));\n    assertEquals(4, message.getAllFields().size());\n\n    \r\n    message =\n        message\n            .toBuilder()\n            .setField(optionalInt32Field, 0)\n            .setField(optionalStringField, \"\")\n            .setField(optionalBytesField, ByteString.EMPTY)\n            .setField(optionalNestedEnumField, defaultEnumValueDescriptor)\n            .build();\n    assertFalse(message.hasField(optionalInt32Field));\n    assertFalse(message.hasField(optionalStringField));\n    assertFalse(message.hasField(optionalBytesField));\n    assertFalse(message.hasField(optionalNestedEnumField));\n    assertEquals(0, message.getAllFields().size());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/FieldPresenceTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
