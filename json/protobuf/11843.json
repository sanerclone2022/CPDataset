[{"authorTime":"2017-09-18 23:34:54","codes":[{"authorDate":"2017-08-22 01:39:27","commitOrder":3,"curCode":"    public int readRawLittleEndian32() throws IOException {\n      long tempPos = pos;\n\n      if (limit - tempPos < FIXED32_SIZE) {\n        throw InvalidProtocolBufferException.truncatedMessage();\n      }\n\n      pos = tempPos + FIXED32_SIZE;\n      return (((UnsafeUtil.getByte(tempPos) & 0xff))\n          | ((UnsafeUtil.getByte(tempPos + 1) & 0xff) << 8)\n          | ((UnsafeUtil.getByte(tempPos + 2) & 0xff) << 16)\n          | ((UnsafeUtil.getByte(tempPos + 3) & 0xff) << 24));\n    }\n","date":"2017-08-22 01:39:27","endLine":1865,"groupId":"2058","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"readRawLittleEndian32","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/d6/a941b1c03d901f7fe2155fc334d7150f886801.src","preCode":"    public int readRawLittleEndian32() throws IOException {\n      long tempPos = pos;\n\n      if (limit - tempPos < FIXED32_SIZE) {\n        throw InvalidProtocolBufferException.truncatedMessage();\n      }\n\n      pos = tempPos + FIXED32_SIZE;\n      return (((UnsafeUtil.getByte(tempPos) & 0xff))\n          | ((UnsafeUtil.getByte(tempPos + 1) & 0xff) << 8)\n          | ((UnsafeUtil.getByte(tempPos + 2) & 0xff) << 16)\n          | ((UnsafeUtil.getByte(tempPos + 3) & 0xff) << 24));\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/CodedInputStream.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1853,"status":"NB"},{"authorDate":"2017-09-18 23:34:54","commitOrder":3,"curCode":"    public int readRawLittleEndian32() throws IOException {\n      if (currentRemaining() >= FIXED32_SIZE) {\n        long tempPos = currentByteBufferPos;\n        currentByteBufferPos += FIXED32_SIZE;\n        return (((UnsafeUtil.getByte(tempPos) & 0xff))\n            | ((UnsafeUtil.getByte(tempPos + 1) & 0xff) << 8)\n            | ((UnsafeUtil.getByte(tempPos + 2) & 0xff) << 16)\n            | ((UnsafeUtil.getByte(tempPos + 3) & 0xff) << 24));\n      }\n      return ((readRawByte() & 0xff)\n          | ((readRawByte() & 0xff) << 8)\n          | ((readRawByte() & 0xff) << 16)\n          | ((readRawByte() & 0xff) << 24));\n    }\n","date":"2017-09-18 23:34:54","endLine":3677,"groupId":"2058","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"readRawLittleEndian32","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/51/1501d4e9d64eddaca83e3d62e17010db5e1301.src","preCode":"    public int readRawLittleEndian32() throws IOException {\n      if (currentRemaining() >= FIXED32_SIZE) {\n        long tempPos = currentByteBufferPos;\n        currentByteBufferPos += FIXED32_SIZE;\n        return (((UnsafeUtil.getByte(tempPos) & 0xff))\n            | ((UnsafeUtil.getByte(tempPos + 1) & 0xff) << 8)\n            | ((UnsafeUtil.getByte(tempPos + 2) & 0xff) << 16)\n            | ((UnsafeUtil.getByte(tempPos + 3) & 0xff) << 24));\n      }\n      return ((readRawByte() & 0xff)\n          | ((readRawByte() & 0xff) << 8)\n          | ((readRawByte() & 0xff) << 16)\n          | ((readRawByte() & 0xff) << 24));\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/CodedInputStream.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":3664,"status":"B"}],"commitId":"fa5a69e73b0dd667ff15062adbc170310d440ee9","commitMessage":"@@@Merge pull request #3624 from acozzette/down-integrate\n\nIntegrated internal changes from Google","date":"2017-09-18 23:34:54","modifiedFileCount":"16","status":"M","submitter":"Adam Cozzette"},{"authorTime":"2021-08-26 22:38:09","codes":[{"authorDate":"2021-08-26 22:38:09","commitOrder":4,"curCode":"    public int readRawLittleEndian32() throws IOException {\n      long tempPos = pos;\n\n      if (limit - tempPos < FIXED32_SIZE) {\n        throw InvalidProtocolBufferException.truncatedMessage();\n      }\n\n      pos = tempPos + FIXED32_SIZE;\n      return ((UnsafeUtil.getByte(tempPos) & 0xff)\n          | ((UnsafeUtil.getByte(tempPos + 1) & 0xff) << 8)\n          | ((UnsafeUtil.getByte(tempPos + 2) & 0xff) << 16)\n          | ((UnsafeUtil.getByte(tempPos + 3) & 0xff) << 24));\n    }\n","date":"2021-08-26 22:38:09","endLine":1878,"groupId":"11843","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"readRawLittleEndian32","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/2e/1cc6bdcbe94c68c6c366180551b8033a091103.src","preCode":"    public int readRawLittleEndian32() throws IOException {\n      long tempPos = pos;\n\n      if (limit - tempPos < FIXED32_SIZE) {\n        throw InvalidProtocolBufferException.truncatedMessage();\n      }\n\n      pos = tempPos + FIXED32_SIZE;\n      return (((UnsafeUtil.getByte(tempPos) & 0xff))\n          | ((UnsafeUtil.getByte(tempPos + 1) & 0xff) << 8)\n          | ((UnsafeUtil.getByte(tempPos + 2) & 0xff) << 16)\n          | ((UnsafeUtil.getByte(tempPos + 3) & 0xff) << 24));\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/CodedInputStream.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1866,"status":"M"},{"authorDate":"2021-08-26 22:38:09","commitOrder":4,"curCode":"    public int readRawLittleEndian32() throws IOException {\n      if (currentRemaining() >= FIXED32_SIZE) {\n        long tempPos = currentByteBufferPos;\n        currentByteBufferPos += FIXED32_SIZE;\n        return ((UnsafeUtil.getByte(tempPos) & 0xff)\n            | ((UnsafeUtil.getByte(tempPos + 1) & 0xff) << 8)\n            | ((UnsafeUtil.getByte(tempPos + 2) & 0xff) << 16)\n            | ((UnsafeUtil.getByte(tempPos + 3) & 0xff) << 24));\n      }\n      return ((readRawByte() & 0xff)\n          | ((readRawByte() & 0xff) << 8)\n          | ((readRawByte() & 0xff) << 16)\n          | ((readRawByte() & 0xff) << 24));\n    }\n","date":"2021-08-26 22:38:09","endLine":3754,"groupId":"11843","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"readRawLittleEndian32","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/2e/1cc6bdcbe94c68c6c366180551b8033a091103.src","preCode":"    public int readRawLittleEndian32() throws IOException {\n      if (currentRemaining() >= FIXED32_SIZE) {\n        long tempPos = currentByteBufferPos;\n        currentByteBufferPos += FIXED32_SIZE;\n        return (((UnsafeUtil.getByte(tempPos) & 0xff))\n            | ((UnsafeUtil.getByte(tempPos + 1) & 0xff) << 8)\n            | ((UnsafeUtil.getByte(tempPos + 2) & 0xff) << 16)\n            | ((UnsafeUtil.getByte(tempPos + 3) & 0xff) << 24));\n      }\n      return ((readRawByte() & 0xff)\n          | ((readRawByte() & 0xff) << 8)\n          | ((readRawByte() & 0xff) << 16)\n          | ((readRawByte() & 0xff) << 24));\n    }\n","realPath":"java/core/src/main/java/com/google/protobuf/CodedInputStream.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":3741,"status":"M"}],"commitId":"66b7b71a455bbb295d0d407e32c07b9fcdbf85c0","commitMessage":"@@@Merge pull request #8902 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-26 22:38:09","modifiedFileCount":"5","status":"M","submitter":"Adam Cozzette"}]
