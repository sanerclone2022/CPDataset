[{"authorTime":"2015-08-26 07:49:45","codes":[{"authorDate":"2015-08-26 07:49:45","commitOrder":1,"curCode":"    private int parseUint32(JsonElement json)\n        throws InvalidProtocolBufferException {\n      try {\n        long result = Long.parseLong(json.getAsString());\n        if (result < 0 || result > 0xFFFFFFFFL) {\n          throw new InvalidProtocolBufferException(\n              \"Out of range uint32 value: \" + json);\n        }\n        return (int) result;\n      } catch (InvalidProtocolBufferException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new InvalidProtocolBufferException(\n            \"Not an uint32 value: \" + json);\n      }\n    }\n","date":"2015-08-26 07:51:22","endLine":1383,"groupId":"1183","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parseUint32","params":"(JsonElementjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c9/a39153684c4bfac448e4749687d21abc2791a6.src","preCode":"    private int parseUint32(JsonElement json)\n        throws InvalidProtocolBufferException {\n      try {\n        long result = Long.parseLong(json.getAsString());\n        if (result < 0 || result > 0xFFFFFFFFL) {\n          throw new InvalidProtocolBufferException(\n              \"Out of range uint32 value: \" + json);\n        }\n        return (int) result;\n      } catch (InvalidProtocolBufferException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new InvalidProtocolBufferException(\n            \"Not an uint32 value: \" + json);\n      }\n    }\n","realPath":"java/util/src/main/java/com/google/protobuf/util/JsonFormat.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1368,"status":"B"},{"authorDate":"2015-08-26 07:49:45","commitOrder":1,"curCode":"    private long parseUint64(JsonElement json)\n        throws InvalidProtocolBufferException {\n      try {\n        BigInteger value = new BigInteger(json.getAsString());\n        if (value.compareTo(BigInteger.ZERO) < 0\n            || value.compareTo(MAX_UINT64) > 0) {\n          throw new InvalidProtocolBufferException(\n              \"Out of range uint64 value: \" + json);\n        }\n        return value.longValue();\n      } catch (InvalidProtocolBufferException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new InvalidProtocolBufferException(\n            \"Not an uint64 value: \" + json);\n      }\n    }\n","date":"2015-08-26 07:51:22","endLine":1404,"groupId":"783","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parseUint64","params":"(JsonElementjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c9/a39153684c4bfac448e4749687d21abc2791a6.src","preCode":"    private long parseUint64(JsonElement json)\n        throws InvalidProtocolBufferException {\n      try {\n        BigInteger value = new BigInteger(json.getAsString());\n        if (value.compareTo(BigInteger.ZERO) < 0\n            || value.compareTo(MAX_UINT64) > 0) {\n          throw new InvalidProtocolBufferException(\n              \"Out of range uint64 value: \" + json);\n        }\n        return value.longValue();\n      } catch (InvalidProtocolBufferException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new InvalidProtocolBufferException(\n            \"Not an uint64 value: \" + json);\n      }\n    }\n","realPath":"java/util/src/main/java/com/google/protobuf/util/JsonFormat.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1388,"status":"B"}],"commitId":"db45aa117a7e7bf90883f98638ef9d0abdbef317","commitMessage":"@@@Merge branch 'beta-1' of github.com:google/protobuf into manual-merge\n\nChange-Id: I83a93fdb119a643fbc884e6ec3624493f6270370\n","date":"2015-08-26 07:51:22","modifiedFileCount":"32","status":"B","submitter":"Jisi Liu"},{"authorTime":"2015-12-12 09:09:20","codes":[{"authorDate":"2015-12-12 09:09:20","commitOrder":2,"curCode":"    private int parseUint32(JsonElement json)\n        throws InvalidProtocolBufferException {\n      try {\n        long result = Long.parseLong(json.getAsString());\n        if (result < 0 || result > 0xFFFFFFFFL) {\n          throw new InvalidProtocolBufferException(\n              \"Out of range uint32 value: \" + json);\n        }\n        return (int) result;\n      } catch (InvalidProtocolBufferException e) {\n        throw e;\n      } catch (Exception e) {\n        \r\n      }\n      \r\n      \r\n      \r\n      try {\n        BigDecimal decimalValue = new BigDecimal(json.getAsString());\n        BigInteger value = decimalValue.toBigIntegerExact();\n        if (value.signum() < 0 || value.compareTo(new BigInteger(\"FFFFFFFF\", 16)) > 0) {\n          throw new InvalidProtocolBufferException(\"Out of range uint32 value: \" + json);\n        }\n        return value.intValue();\n      } catch (InvalidProtocolBufferException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new InvalidProtocolBufferException(\n            \"Not an uint32 value: \" + json);\n      }\n    }\n","date":"2015-12-12 09:10:28","endLine":1451,"groupId":"1080","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parseUint32","params":"(JsonElementjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/d1/3ff0ed04d727b9ced56bc352493ade999d1d5a.src","preCode":"    private int parseUint32(JsonElement json)\n        throws InvalidProtocolBufferException {\n      try {\n        long result = Long.parseLong(json.getAsString());\n        if (result < 0 || result > 0xFFFFFFFFL) {\n          throw new InvalidProtocolBufferException(\n              \"Out of range uint32 value: \" + json);\n        }\n        return (int) result;\n      } catch (InvalidProtocolBufferException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new InvalidProtocolBufferException(\n            \"Not an uint32 value: \" + json);\n      }\n    }\n","realPath":"java/util/src/main/java/com/google/protobuf/util/JsonFormat.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1421,"status":"M"},{"authorDate":"2015-12-12 09:09:20","commitOrder":2,"curCode":"    private long parseUint64(JsonElement json)\n        throws InvalidProtocolBufferException {\n      try {\n        BigDecimal decimalValue = new BigDecimal(json.getAsString());\n        BigInteger value = decimalValue.toBigIntegerExact();\n        if (value.compareTo(BigInteger.ZERO) < 0\n            || value.compareTo(MAX_UINT64) > 0) {\n          throw new InvalidProtocolBufferException(\n              \"Out of range uint64 value: \" + json);\n        }\n        return value.longValue();\n      } catch (InvalidProtocolBufferException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new InvalidProtocolBufferException(\n            \"Not an uint64 value: \" + json);\n      }\n    }\n","date":"2015-12-12 09:10:28","endLine":1473,"groupId":"1080","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parseUint64","params":"(JsonElementjson)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/d1/3ff0ed04d727b9ced56bc352493ade999d1d5a.src","preCode":"    private long parseUint64(JsonElement json)\n        throws InvalidProtocolBufferException {\n      try {\n        BigInteger value = new BigInteger(json.getAsString());\n        if (value.compareTo(BigInteger.ZERO) < 0\n            || value.compareTo(MAX_UINT64) > 0) {\n          throw new InvalidProtocolBufferException(\n              \"Out of range uint64 value: \" + json);\n        }\n        return value.longValue();\n      } catch (InvalidProtocolBufferException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new InvalidProtocolBufferException(\n            \"Not an uint64 value: \" + json);\n      }\n    }\n","realPath":"java/util/src/main/java/com/google/protobuf/util/JsonFormat.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1456,"status":"M"}],"commitId":"e841bac4fcf47f809e089a70d5f84ac37b3883df","commitMessage":"@@@Down-integrate from internal code base.\n","date":"2015-12-12 09:10:28","modifiedFileCount":"36","status":"M","submitter":"Feng Xiao"}]
