[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testMergeBeforeParsing() throws Exception {\n    TestAllTypes message1 = TestAllTypes.newBuilder().setOptionalInt32(1).build();\n    LazyFieldLite field1 = createLazyFieldLiteFromMessage(message1);\n    TestAllTypes message2 = TestAllTypes.newBuilder().setOptionalInt64(2).build();\n    LazyFieldLite field2 = createLazyFieldLiteFromMessage(message2);\n\n    field1.merge(field2);\n    TestAllTypes expected =\n        TestAllTypes.newBuilder().setOptionalInt32(1).setOptionalInt64(2).build();\n    assertEquals(expected, field1.getValue(TestAllTypes.getDefaultInstance()));\n  }\n","date":"2016-01-14 03:22:18","endLine":153,"groupId":"615","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMergeBeforeParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/21/1b56977036877af19172f16e61b77905c29e95.src","preCode":"  public void testMergeBeforeParsing() throws Exception {\n    TestAllTypes message1 = TestAllTypes.newBuilder().setOptionalInt32(1).build();\n    LazyFieldLite field1 = createLazyFieldLiteFromMessage(message1);\n    TestAllTypes message2 = TestAllTypes.newBuilder().setOptionalInt64(2).build();\n    LazyFieldLite field2 = createLazyFieldLiteFromMessage(message2);\n\n    field1.merge(field2);\n    TestAllTypes expected =\n        TestAllTypes.newBuilder().setOptionalInt32(1).setOptionalInt64(2).build();\n    assertEquals(expected, field1.getValue(TestAllTypes.getDefaultInstance()));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LazyFieldLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testMergeOneNotParsed() throws Exception {\n    \r\n    TestAllTypes message1 = TestAllTypes.newBuilder().setOptionalInt32(1).build();\n    TestAllTypes message2 = TestAllTypes.newBuilder().setOptionalInt64(2).build();\n    TestAllTypes expected =\n        TestAllTypes.newBuilder().setOptionalInt32(1).setOptionalInt64(2).build();\n\n    LazyFieldLite field1 = LazyFieldLite.fromValue(message1);\n    field1.getValue(TestAllTypes.getDefaultInstance());  \r\n    LazyFieldLite field2 = createLazyFieldLiteFromMessage(message2);\n    field1.merge(field2);\n    assertEquals(expected, field1.getValue(TestAllTypes.getDefaultInstance()));\n\n    \r\n    field1 = LazyFieldLite.fromValue(message1);\n    field2 = createLazyFieldLiteFromMessage(message2);\n    field2.getValue(TestAllTypes.getDefaultInstance());  \r\n    field1.merge(field2);\n    assertEquals(expected, field1.getValue(TestAllTypes.getDefaultInstance()));\n  }\n","date":"2016-01-14 03:22:18","endLine":174,"groupId":"731","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeOneNotParsed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/21/1b56977036877af19172f16e61b77905c29e95.src","preCode":"  public void testMergeOneNotParsed() throws Exception {\n    \r\n    TestAllTypes message1 = TestAllTypes.newBuilder().setOptionalInt32(1).build();\n    TestAllTypes message2 = TestAllTypes.newBuilder().setOptionalInt64(2).build();\n    TestAllTypes expected =\n        TestAllTypes.newBuilder().setOptionalInt32(1).setOptionalInt64(2).build();\n\n    LazyFieldLite field1 = LazyFieldLite.fromValue(message1);\n    field1.getValue(TestAllTypes.getDefaultInstance());  \r\n    LazyFieldLite field2 = createLazyFieldLiteFromMessage(message2);\n    field1.merge(field2);\n    assertEquals(expected, field1.getValue(TestAllTypes.getDefaultInstance()));\n\n    \r\n    field1 = LazyFieldLite.fromValue(message1);\n    field2 = createLazyFieldLiteFromMessage(message2);\n    field2.getValue(TestAllTypes.getDefaultInstance());  \r\n    field1.merge(field2);\n    assertEquals(expected, field1.getValue(TestAllTypes.getDefaultInstance()));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LazyFieldLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testMergeBeforeParsing() throws Exception {\n    TestAllTypes message1 = TestAllTypes.newBuilder().setOptionalInt32(1).build();\n    LazyFieldLite field1 = createLazyFieldLiteFromMessage(message1);\n    TestAllTypes message2 = TestAllTypes.newBuilder().setOptionalInt64(2).build();\n    LazyFieldLite field2 = createLazyFieldLiteFromMessage(message2);\n\n    field1.merge(field2);\n    TestAllTypes expected =\n        TestAllTypes.newBuilder().setOptionalInt32(1).setOptionalInt64(2).build();\n    assertThat(field1.getValue(TestAllTypes.getDefaultInstance())).isEqualTo(expected);\n  }\n","date":"2021-08-10 06:55:00","endLine":164,"groupId":"10535","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testMergeBeforeParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/98/cee8040504b04d39a6165c6e41b8f98c2e7a7e.src","preCode":"  public void testMergeBeforeParsing() throws Exception {\n    TestAllTypes message1 = TestAllTypes.newBuilder().setOptionalInt32(1).build();\n    LazyFieldLite field1 = createLazyFieldLiteFromMessage(message1);\n    TestAllTypes message2 = TestAllTypes.newBuilder().setOptionalInt64(2).build();\n    LazyFieldLite field2 = createLazyFieldLiteFromMessage(message2);\n\n    field1.merge(field2);\n    TestAllTypes expected =\n        TestAllTypes.newBuilder().setOptionalInt32(1).setOptionalInt64(2).build();\n    assertEquals(expected, field1.getValue(TestAllTypes.getDefaultInstance()));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LazyFieldLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testMergeOneNotParsed() throws Exception {\n    \r\n    TestAllTypes message1 = TestAllTypes.newBuilder().setOptionalInt32(1).build();\n    TestAllTypes message2 = TestAllTypes.newBuilder().setOptionalInt64(2).build();\n    TestAllTypes expected =\n        TestAllTypes.newBuilder().setOptionalInt32(1).setOptionalInt64(2).build();\n\n    LazyFieldLite field1 = LazyFieldLite.fromValue(message1);\n    field1.getValue(TestAllTypes.getDefaultInstance()); \r\n    LazyFieldLite field2 = createLazyFieldLiteFromMessage(message2);\n    field1.merge(field2);\n    assertThat(field1.getValue(TestAllTypes.getDefaultInstance())).isEqualTo(expected);\n\n    \r\n    field1 = LazyFieldLite.fromValue(message1);\n    field2 = createLazyFieldLiteFromMessage(message2);\n    field2.getValue(TestAllTypes.getDefaultInstance()); \r\n    field1.merge(field2);\n    assertThat(field1.getValue(TestAllTypes.getDefaultInstance())).isEqualTo(expected);\n  }\n","date":"2021-08-10 06:55:00","endLine":186,"groupId":"10535","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testMergeOneNotParsed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/98/cee8040504b04d39a6165c6e41b8f98c2e7a7e.src","preCode":"  public void testMergeOneNotParsed() throws Exception {\n    \r\n    TestAllTypes message1 = TestAllTypes.newBuilder().setOptionalInt32(1).build();\n    TestAllTypes message2 = TestAllTypes.newBuilder().setOptionalInt64(2).build();\n    TestAllTypes expected =\n        TestAllTypes.newBuilder().setOptionalInt32(1).setOptionalInt64(2).build();\n\n    LazyFieldLite field1 = LazyFieldLite.fromValue(message1);\n    field1.getValue(TestAllTypes.getDefaultInstance()); \r\n    LazyFieldLite field2 = createLazyFieldLiteFromMessage(message2);\n    field1.merge(field2);\n    assertEquals(expected, field1.getValue(TestAllTypes.getDefaultInstance()));\n\n    \r\n    field1 = LazyFieldLite.fromValue(message1);\n    field2 = createLazyFieldLiteFromMessage(message2);\n    field2.getValue(TestAllTypes.getDefaultInstance()); \r\n    field1.merge(field2);\n    assertEquals(expected, field1.getValue(TestAllTypes.getDefaultInstance()));\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/LazyFieldLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
