[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testIterator() {\n    LazyStringArrayList rawList = createSampleList();\n    UnmodifiableLazyStringList list = new UnmodifiableLazyStringList(rawList);\n\n    Iterator<String> iter = list.iterator();\n    int count = 0;\n    while (iter.hasNext()) {\n      iter.next();\n      count++;\n      try {\n        iter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n\n    List<ByteString> byteStringList = list.asByteStringList();\n    Iterator<ByteString> byteIter = byteStringList.iterator();\n    count = 0;\n    while (byteIter.hasNext()) {\n      byteIter.next();\n      count++;\n      try {\n        byteIter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n  }\n","date":"2016-01-14 03:22:18","endLine":160,"groupId":"1824","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/b1/c75fc33c59ea65058888e5e449eca682343b2b.src","preCode":"  public void testIterator() {\n    LazyStringArrayList rawList = createSampleList();\n    UnmodifiableLazyStringList list = new UnmodifiableLazyStringList(rawList);\n\n    Iterator<String> iter = list.iterator();\n    int count = 0;\n    while (iter.hasNext()) {\n      iter.next();\n      count++;\n      try {\n        iter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n\n    List<ByteString> byteStringList = list.asByteStringList();\n    Iterator<ByteString> byteIter = byteStringList.iterator();\n    count = 0;\n    while (byteIter.hasNext()) {\n      byteIter.next();\n      count++;\n      try {\n        byteIter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/UnmodifiableLazyStringListTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testListIterator() {\n    LazyStringArrayList rawList = createSampleList();\n    UnmodifiableLazyStringList list = new UnmodifiableLazyStringList(rawList);\n\n    ListIterator<String> iter = list.listIterator();\n    int count = 0;\n    while (iter.hasNext()) {\n      iter.next();\n      count++;\n      try {\n        iter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        iter.set(\"bar\");\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        iter.add(\"bar\");\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n\n    List<ByteString> byteStringList = list.asByteStringList();\n    ListIterator<ByteString> byteIter = byteStringList.listIterator();\n    count = 0;\n    while (byteIter.hasNext()) {\n      byteIter.next();\n      count++;\n      try {\n        byteIter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        byteIter.set(BYTE_STRING_A);\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        byteIter.add(BYTE_STRING_A);\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n  }\n","date":"2016-01-14 03:22:18","endLine":218,"groupId":"1824","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testListIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/b1/c75fc33c59ea65058888e5e449eca682343b2b.src","preCode":"  public void testListIterator() {\n    LazyStringArrayList rawList = createSampleList();\n    UnmodifiableLazyStringList list = new UnmodifiableLazyStringList(rawList);\n\n    ListIterator<String> iter = list.listIterator();\n    int count = 0;\n    while (iter.hasNext()) {\n      iter.next();\n      count++;\n      try {\n        iter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        iter.set(\"bar\");\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        iter.add(\"bar\");\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n\n    List<ByteString> byteStringList = list.asByteStringList();\n    ListIterator<ByteString> byteIter = byteStringList.listIterator();\n    count = 0;\n    while (byteIter.hasNext()) {\n      byteIter.next();\n      count++;\n      try {\n        byteIter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        byteIter.set(BYTE_STRING_A);\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        byteIter.add(BYTE_STRING_A);\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/UnmodifiableLazyStringListTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testIterator() {\n    LazyStringArrayList rawList = createSampleList();\n    UnmodifiableLazyStringList list = new UnmodifiableLazyStringList(rawList);\n\n    Iterator<String> iter = list.iterator();\n    int count = 0;\n    while (iter.hasNext()) {\n      iter.next();\n      count++;\n      try {\n        iter.remove();\n        assertWithMessage(\"expected exception\").fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertThat(count).isEqualTo(3);\n\n    List<ByteString> byteStringList = list.asByteStringList();\n    Iterator<ByteString> byteIter = byteStringList.iterator();\n    count = 0;\n    while (byteIter.hasNext()) {\n      byteIter.next();\n      count++;\n      try {\n        byteIter.remove();\n        assertWithMessage(\"expected exception\").fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertThat(count).isEqualTo(3);\n  }\n","date":"2021-08-10 06:55:00","endLine":164,"groupId":"10224","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/d5/d91959f81efdfaaccc95db354b6d495dcd0a3b.src","preCode":"  public void testIterator() {\n    LazyStringArrayList rawList = createSampleList();\n    UnmodifiableLazyStringList list = new UnmodifiableLazyStringList(rawList);\n\n    Iterator<String> iter = list.iterator();\n    int count = 0;\n    while (iter.hasNext()) {\n      iter.next();\n      count++;\n      try {\n        iter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n\n    List<ByteString> byteStringList = list.asByteStringList();\n    Iterator<ByteString> byteIter = byteStringList.iterator();\n    count = 0;\n    while (byteIter.hasNext()) {\n      byteIter.next();\n      count++;\n      try {\n        byteIter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/UnmodifiableLazyStringListTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testListIterator() {\n    LazyStringArrayList rawList = createSampleList();\n    UnmodifiableLazyStringList list = new UnmodifiableLazyStringList(rawList);\n\n    ListIterator<String> iter = list.listIterator();\n    int count = 0;\n    while (iter.hasNext()) {\n      iter.next();\n      count++;\n      try {\n        iter.remove();\n        assertWithMessage(\"expected exception\").fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        iter.set(\"bar\");\n        assertWithMessage(\"expected exception\").fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        iter.add(\"bar\");\n        assertWithMessage(\"expected exception\").fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertThat(count).isEqualTo(3);\n\n    List<ByteString> byteStringList = list.asByteStringList();\n    ListIterator<ByteString> byteIter = byteStringList.listIterator();\n    count = 0;\n    while (byteIter.hasNext()) {\n      byteIter.next();\n      count++;\n      try {\n        byteIter.remove();\n        assertWithMessage(\"expected exception\").fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        byteIter.set(BYTE_STRING_A);\n        assertWithMessage(\"expected exception\").fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        byteIter.add(BYTE_STRING_A);\n        assertWithMessage(\"expected exception\").fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertThat(count).isEqualTo(3);\n  }\n","date":"2021-08-10 06:55:00","endLine":223,"groupId":"10224","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testListIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/d5/d91959f81efdfaaccc95db354b6d495dcd0a3b.src","preCode":"  public void testListIterator() {\n    LazyStringArrayList rawList = createSampleList();\n    UnmodifiableLazyStringList list = new UnmodifiableLazyStringList(rawList);\n\n    ListIterator<String> iter = list.listIterator();\n    int count = 0;\n    while (iter.hasNext()) {\n      iter.next();\n      count++;\n      try {\n        iter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        iter.set(\"bar\");\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        iter.add(\"bar\");\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n\n    List<ByteString> byteStringList = list.asByteStringList();\n    ListIterator<ByteString> byteIter = byteStringList.listIterator();\n    count = 0;\n    while (byteIter.hasNext()) {\n      byteIter.next();\n      count++;\n      try {\n        byteIter.remove();\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        byteIter.set(BYTE_STRING_A);\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n      try {\n        byteIter.add(BYTE_STRING_A);\n        fail();\n      } catch (UnsupportedOperationException e) {\n        \r\n      }\n    }\n    assertEquals(3, count);\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/UnmodifiableLazyStringListTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
