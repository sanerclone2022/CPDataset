[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  private void testParseMessageSetExtensionWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int TYPE_ID_1 =\n        TestMessageSetExtension1\n            .getDescriptor().getExtensions().get(0).getNumber();\n    RawMessageSet raw =\n      RawMessageSet.newBuilder()\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(TYPE_ID_1)\n            .setMessage(\n              TestMessageSetExtension1.newBuilder()\n                .setI(123)\n                .build().toByteString())\n            .build())\n        .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet =\n        TestMessageSet.parseFrom(data, extensionRegistry);\n    assertEquals(123, messageSet.getExtension(\n        TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","date":"2016-01-14 03:22:18","endLine":488,"groupId":"2155","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseMessageSetExtensionWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/01/75005d2ca9f844cfc52305abbcab449cbd7eb1.src","preCode":"  private void testParseMessageSetExtensionWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int TYPE_ID_1 =\n        TestMessageSetExtension1\n            .getDescriptor().getExtensions().get(0).getNumber();\n    RawMessageSet raw =\n      RawMessageSet.newBuilder()\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(TYPE_ID_1)\n            .setMessage(\n              TestMessageSetExtension1.newBuilder()\n                .setI(123)\n                .build().toByteString())\n            .build())\n        .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet =\n        TestMessageSet.parseFrom(data, extensionRegistry);\n    assertEquals(123, messageSet.getExtension(\n        TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":459,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  private void testMergeLazyMessageSetExtensionWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int TYPE_ID_1 =\n        TestMessageSetExtension1\n            .getDescriptor().getExtensions().get(0).getNumber();\n    RawMessageSet raw =\n      RawMessageSet.newBuilder()\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(TYPE_ID_1)\n            .setMessage(\n              TestMessageSetExtension1.newBuilder()\n                .setI(123)\n                .build().toByteString())\n            .build())\n        .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet =\n        TestMessageSet.parseFrom(data, extensionRegistry);\n    \r\n    messageSet =\n        messageSet.toBuilder().mergeFrom(data, extensionRegistry).build();\n    assertEquals(123, messageSet.getExtension(\n        TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","date":"2016-01-14 03:22:18","endLine":530,"groupId":"2155","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeLazyMessageSetExtensionWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/01/75005d2ca9f844cfc52305abbcab449cbd7eb1.src","preCode":"  private void testMergeLazyMessageSetExtensionWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int TYPE_ID_1 =\n        TestMessageSetExtension1\n            .getDescriptor().getExtensions().get(0).getNumber();\n    RawMessageSet raw =\n      RawMessageSet.newBuilder()\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(TYPE_ID_1)\n            .setMessage(\n              TestMessageSetExtension1.newBuilder()\n                .setI(123)\n                .build().toByteString())\n            .build())\n        .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet =\n        TestMessageSet.parseFrom(data, extensionRegistry);\n    \r\n    messageSet =\n        messageSet.toBuilder().mergeFrom(data, extensionRegistry).build();\n    assertEquals(123, messageSet.getExtension(\n        TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":498,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2018-09-08 07:15:38","codes":[{"authorDate":"2018-09-08 07:15:38","commitOrder":2,"curCode":"  private void testParseMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","date":"2018-09-08 07:15:38","endLine":418,"groupId":"2155","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseMessageSetExtensionWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/45/a396acd8e77619d9169b73f5c154b511775842.src","preCode":"  private void testParseMessageSetExtensionWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int TYPE_ID_1 =\n        TestMessageSetExtension1\n            .getDescriptor().getExtensions().get(0).getNumber();\n    RawMessageSet raw =\n      RawMessageSet.newBuilder()\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(TYPE_ID_1)\n            .setMessage(\n              TestMessageSetExtension1.newBuilder()\n                .setI(123)\n                .build().toByteString())\n            .build())\n        .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet =\n        TestMessageSet.parseFrom(data, extensionRegistry);\n    assertEquals(123, messageSet.getExtension(\n        TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":397,"status":"M"},{"authorDate":"2018-09-08 07:15:38","commitOrder":2,"curCode":"  private void testMergeLazyMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    \r\n    messageSet = messageSet.toBuilder().mergeFrom(data, extensionRegistry).build();\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","date":"2018-09-08 07:15:38","endLine":451,"groupId":"2155","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeLazyMessageSetExtensionWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/45/a396acd8e77619d9169b73f5c154b511775842.src","preCode":"  private void testMergeLazyMessageSetExtensionWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    int TYPE_ID_1 =\n        TestMessageSetExtension1\n            .getDescriptor().getExtensions().get(0).getNumber();\n    RawMessageSet raw =\n      RawMessageSet.newBuilder()\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(TYPE_ID_1)\n            .setMessage(\n              TestMessageSetExtension1.newBuilder()\n                .setI(123)\n                .build().toByteString())\n            .build())\n        .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet =\n        TestMessageSet.parseFrom(data, extensionRegistry);\n    \r\n    messageSet =\n        messageSet.toBuilder().mergeFrom(data, extensionRegistry).build();\n    assertEquals(123, messageSet.getExtension(\n        TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"M"}],"commitId":"f9d8138376765d229a32635c9209061e4e4aed8c","commitMessage":"@@@Merge pull request #5109 from haberman/integrate\n\nDown-integrate from google3.","date":"2018-09-08 07:15:38","modifiedFileCount":"125","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  private void testParseMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    assertThat(messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI())\n        .isEqualTo(123);\n  }\n","date":"2021-08-10 06:55:00","endLine":439,"groupId":"10449","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testParseMessageSetExtensionWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e0/72eb8fd2cdb06fdf0424725940b96d8350f87d.src","preCode":"  private void testParseMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  private void testMergeLazyMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    \r\n    messageSet = messageSet.toBuilder().mergeFrom(data, extensionRegistry).build();\n    assertThat(messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI())\n        .isEqualTo(123);\n  }\n","date":"2021-08-10 06:55:00","endLine":475,"groupId":"10449","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testMergeLazyMessageSetExtensionWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e0/72eb8fd2cdb06fdf0424725940b96d8350f87d.src","preCode":"  private void testMergeLazyMessageSetExtensionWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n    \r\n    messageSet = messageSet.toBuilder().mergeFrom(data, extensionRegistry).build();\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":451,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
