[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testDescriptor() throws Exception {\n    Descriptor messageType = TestAllTypes.getDescriptor();\n    Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();\n\n    assertEquals(\"TestAllTypes\", messageType.getName());\n    assertEquals(\"protobuf_unittest.TestAllTypes\", messageType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), messageType.getFile());\n    assertNull(messageType.getContainingType());\n    assertEquals(DescriptorProtos.MessageOptions.getDefaultInstance(),\n                 messageType.getOptions());\n    assertEquals(\"TestAllTypes\", messageType.toProto().getName());\n\n    assertEquals(\"NestedMessage\", nestedType.getName());\n    assertEquals(\"protobuf_unittest.TestAllTypes.NestedMessage\",\n                 nestedType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), nestedType.getFile());\n    assertEquals(messageType, nestedType.getContainingType());\n\n    FieldDescriptor field = messageType.getFields().get(0);\n    assertEquals(\"optional_int32\", field.getName());\n    assertEquals(field, messageType.findFieldByName(\"optional_int32\"));\n    assertNull(messageType.findFieldByName(\"no_such_field\"));\n    assertEquals(field, messageType.findFieldByNumber(1));\n    assertNull(messageType.findFieldByNumber(571283));\n    for (int i = 0; i < messageType.getFields().size(); i++) {\n      assertEquals(i, messageType.getFields().get(i).getIndex());\n    }\n\n    assertEquals(nestedType, messageType.getNestedTypes().get(0));\n    assertEquals(nestedType, messageType.findNestedTypeByName(\"NestedMessage\"));\n    assertNull(messageType.findNestedTypeByName(\"NoSuchType\"));\n    for (int i = 0; i < messageType.getNestedTypes().size(); i++) {\n      assertEquals(i, messageType.getNestedTypes().get(i).getIndex());\n    }\n\n    EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();\n    assertEquals(enumType, messageType.getEnumTypes().get(0));\n    assertEquals(enumType, messageType.findEnumTypeByName(\"NestedEnum\"));\n    assertNull(messageType.findEnumTypeByName(\"NoSuchType\"));\n    for (int i = 0; i < messageType.getEnumTypes().size(); i++) {\n      assertEquals(i, messageType.getEnumTypes().get(i).getIndex());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":194,"groupId":"677","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDescriptor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/82/ff34afe3ec0a1ef56e8613b56beeb65bb8577c.src","preCode":"  public void testDescriptor() throws Exception {\n    Descriptor messageType = TestAllTypes.getDescriptor();\n    Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();\n\n    assertEquals(\"TestAllTypes\", messageType.getName());\n    assertEquals(\"protobuf_unittest.TestAllTypes\", messageType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), messageType.getFile());\n    assertNull(messageType.getContainingType());\n    assertEquals(DescriptorProtos.MessageOptions.getDefaultInstance(),\n                 messageType.getOptions());\n    assertEquals(\"TestAllTypes\", messageType.toProto().getName());\n\n    assertEquals(\"NestedMessage\", nestedType.getName());\n    assertEquals(\"protobuf_unittest.TestAllTypes.NestedMessage\",\n                 nestedType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), nestedType.getFile());\n    assertEquals(messageType, nestedType.getContainingType());\n\n    FieldDescriptor field = messageType.getFields().get(0);\n    assertEquals(\"optional_int32\", field.getName());\n    assertEquals(field, messageType.findFieldByName(\"optional_int32\"));\n    assertNull(messageType.findFieldByName(\"no_such_field\"));\n    assertEquals(field, messageType.findFieldByNumber(1));\n    assertNull(messageType.findFieldByNumber(571283));\n    for (int i = 0; i < messageType.getFields().size(); i++) {\n      assertEquals(i, messageType.getFields().get(i).getIndex());\n    }\n\n    assertEquals(nestedType, messageType.getNestedTypes().get(0));\n    assertEquals(nestedType, messageType.findNestedTypeByName(\"NestedMessage\"));\n    assertNull(messageType.findNestedTypeByName(\"NoSuchType\"));\n    for (int i = 0; i < messageType.getNestedTypes().size(); i++) {\n      assertEquals(i, messageType.getNestedTypes().get(i).getIndex());\n    }\n\n    EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();\n    assertEquals(enumType, messageType.getEnumTypes().get(0));\n    assertEquals(enumType, messageType.findEnumTypeByName(\"NestedEnum\"));\n    assertNull(messageType.findEnumTypeByName(\"NoSuchType\"));\n    for (int i = 0; i < messageType.getEnumTypes().size(); i++) {\n      assertEquals(i, messageType.getEnumTypes().get(i).getIndex());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/DescriptorsTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testEnumDescriptor() throws Exception {\n    EnumDescriptor enumType = ForeignEnum.getDescriptor();\n    EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();\n\n    assertEquals(\"ForeignEnum\", enumType.getName());\n    assertEquals(\"protobuf_unittest.ForeignEnum\", enumType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), enumType.getFile());\n    assertNull(enumType.getContainingType());\n    assertEquals(DescriptorProtos.EnumOptions.getDefaultInstance(),\n                 enumType.getOptions());\n\n    assertEquals(\"NestedEnum\", nestedType.getName());\n    assertEquals(\"protobuf_unittest.TestAllTypes.NestedEnum\",\n                 nestedType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), nestedType.getFile());\n    assertEquals(TestAllTypes.getDescriptor(), nestedType.getContainingType());\n\n    EnumValueDescriptor value = ForeignEnum.FOREIGN_FOO.getValueDescriptor();\n    assertEquals(value, enumType.getValues().get(0));\n    assertEquals(\"FOREIGN_FOO\", value.getName());\n    assertEquals(\"FOREIGN_FOO\", value.toString());\n    assertEquals(4, value.getNumber());\n    assertEquals(value, enumType.findValueByName(\"FOREIGN_FOO\"));\n    assertEquals(value, enumType.findValueByNumber(4));\n    assertNull(enumType.findValueByName(\"NO_SUCH_VALUE\"));\n    for (int i = 0; i < enumType.getValues().size(); i++) {\n      assertEquals(i, enumType.getValues().get(i).getIndex());\n    }\n  }\n","date":"2016-01-14 03:22:18","endLine":331,"groupId":"738","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEnumDescriptor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/82/ff34afe3ec0a1ef56e8613b56beeb65bb8577c.src","preCode":"  public void testEnumDescriptor() throws Exception {\n    EnumDescriptor enumType = ForeignEnum.getDescriptor();\n    EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();\n\n    assertEquals(\"ForeignEnum\", enumType.getName());\n    assertEquals(\"protobuf_unittest.ForeignEnum\", enumType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), enumType.getFile());\n    assertNull(enumType.getContainingType());\n    assertEquals(DescriptorProtos.EnumOptions.getDefaultInstance(),\n                 enumType.getOptions());\n\n    assertEquals(\"NestedEnum\", nestedType.getName());\n    assertEquals(\"protobuf_unittest.TestAllTypes.NestedEnum\",\n                 nestedType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), nestedType.getFile());\n    assertEquals(TestAllTypes.getDescriptor(), nestedType.getContainingType());\n\n    EnumValueDescriptor value = ForeignEnum.FOREIGN_FOO.getValueDescriptor();\n    assertEquals(value, enumType.getValues().get(0));\n    assertEquals(\"FOREIGN_FOO\", value.getName());\n    assertEquals(\"FOREIGN_FOO\", value.toString());\n    assertEquals(4, value.getNumber());\n    assertEquals(value, enumType.findValueByName(\"FOREIGN_FOO\"));\n    assertEquals(value, enumType.findValueByNumber(4));\n    assertNull(enumType.findValueByName(\"NO_SUCH_VALUE\"));\n    for (int i = 0; i < enumType.getValues().size(); i++) {\n      assertEquals(i, enumType.getValues().get(i).getIndex());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/DescriptorsTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testDescriptor() throws Exception {\n    Descriptor messageType = TestAllTypes.getDescriptor();\n    Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();\n\n    assertThat(messageType.getName()).isEqualTo(\"TestAllTypes\");\n    assertThat(messageType.getFullName()).isEqualTo(\"protobuf_unittest.TestAllTypes\");\n    assertThat(messageType.getFile()).isEqualTo(UnittestProto.getDescriptor());\n    assertThat(messageType.getContainingType()).isNull();\n    assertThat(messageType.getOptions())\n        .isEqualTo(DescriptorProtos.MessageOptions.getDefaultInstance());\n    assertThat(messageType.toProto().getName()).isEqualTo(\"TestAllTypes\");\n\n    assertThat(nestedType.getName()).isEqualTo(\"NestedMessage\");\n    assertThat(nestedType.getFullName()).isEqualTo(\"protobuf_unittest.TestAllTypes.NestedMessage\");\n    assertThat(nestedType.getFile()).isEqualTo(UnittestProto.getDescriptor());\n    assertThat(nestedType.getContainingType()).isEqualTo(messageType);\n\n    FieldDescriptor field = messageType.getFields().get(0);\n    assertThat(field.getName()).isEqualTo(\"optional_int32\");\n    assertThat(messageType.findFieldByName(\"optional_int32\")).isEqualTo(field);\n    assertThat(messageType.findFieldByName(\"no_such_field\")).isNull();\n    assertThat(messageType.findFieldByNumber(1)).isEqualTo(field);\n    assertThat(messageType.findFieldByNumber(571283)).isNull();\n    for (int i = 0; i < messageType.getFields().size(); i++) {\n      assertThat(messageType.getFields().get(i).getIndex()).isEqualTo(i);\n    }\n\n    assertThat(messageType.getNestedTypes().get(0)).isEqualTo(nestedType);\n    assertThat(messageType.findNestedTypeByName(\"NestedMessage\")).isEqualTo(nestedType);\n    assertThat(messageType.findNestedTypeByName(\"NoSuchType\")).isNull();\n    for (int i = 0; i < messageType.getNestedTypes().size(); i++) {\n      assertThat(messageType.getNestedTypes().get(i).getIndex()).isEqualTo(i);\n    }\n\n    EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();\n    assertThat(messageType.getEnumTypes().get(0)).isEqualTo(enumType);\n    assertThat(messageType.findEnumTypeByName(\"NestedEnum\")).isEqualTo(enumType);\n    assertThat(messageType.findEnumTypeByName(\"NoSuchType\")).isNull();\n    for (int i = 0; i < messageType.getEnumTypes().size(); i++) {\n      assertThat(messageType.getEnumTypes().get(i).getIndex()).isEqualTo(i);\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":189,"groupId":"10454","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testDescriptor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/6c/b0baebedb555d7eaab6bf944de11c970e32cb2.src","preCode":"  public void testDescriptor() throws Exception {\n    Descriptor messageType = TestAllTypes.getDescriptor();\n    Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();\n\n    assertEquals(\"TestAllTypes\", messageType.getName());\n    assertEquals(\"protobuf_unittest.TestAllTypes\", messageType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), messageType.getFile());\n    assertNull(messageType.getContainingType());\n    assertEquals(DescriptorProtos.MessageOptions.getDefaultInstance(), messageType.getOptions());\n    assertEquals(\"TestAllTypes\", messageType.toProto().getName());\n\n    assertEquals(\"NestedMessage\", nestedType.getName());\n    assertEquals(\"protobuf_unittest.TestAllTypes.NestedMessage\", nestedType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), nestedType.getFile());\n    assertEquals(messageType, nestedType.getContainingType());\n\n    FieldDescriptor field = messageType.getFields().get(0);\n    assertEquals(\"optional_int32\", field.getName());\n    assertEquals(field, messageType.findFieldByName(\"optional_int32\"));\n    assertNull(messageType.findFieldByName(\"no_such_field\"));\n    assertEquals(field, messageType.findFieldByNumber(1));\n    assertNull(messageType.findFieldByNumber(571283));\n    for (int i = 0; i < messageType.getFields().size(); i++) {\n      assertEquals(i, messageType.getFields().get(i).getIndex());\n    }\n\n    assertEquals(nestedType, messageType.getNestedTypes().get(0));\n    assertEquals(nestedType, messageType.findNestedTypeByName(\"NestedMessage\"));\n    assertNull(messageType.findNestedTypeByName(\"NoSuchType\"));\n    for (int i = 0; i < messageType.getNestedTypes().size(); i++) {\n      assertEquals(i, messageType.getNestedTypes().get(i).getIndex());\n    }\n\n    EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();\n    assertEquals(enumType, messageType.getEnumTypes().get(0));\n    assertEquals(enumType, messageType.findEnumTypeByName(\"NestedEnum\"));\n    assertNull(messageType.findEnumTypeByName(\"NoSuchType\"));\n    for (int i = 0; i < messageType.getEnumTypes().size(); i++) {\n      assertEquals(i, messageType.getEnumTypes().get(i).getIndex());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/DescriptorsTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testEnumDescriptor() throws Exception {\n    EnumDescriptor enumType = ForeignEnum.getDescriptor();\n    EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();\n\n    assertThat(enumType.getName()).isEqualTo(\"ForeignEnum\");\n    assertThat(enumType.getFullName()).isEqualTo(\"protobuf_unittest.ForeignEnum\");\n    assertThat(enumType.getFile()).isEqualTo(UnittestProto.getDescriptor());\n    assertThat(enumType.getContainingType()).isNull();\n    assertThat(enumType.getOptions()).isEqualTo(DescriptorProtos.EnumOptions.getDefaultInstance());\n\n    assertThat(nestedType.getName()).isEqualTo(\"NestedEnum\");\n    assertThat(nestedType.getFullName()).isEqualTo(\"protobuf_unittest.TestAllTypes.NestedEnum\");\n    assertThat(nestedType.getFile()).isEqualTo(UnittestProto.getDescriptor());\n    assertThat(nestedType.getContainingType()).isEqualTo(TestAllTypes.getDescriptor());\n\n    EnumValueDescriptor value = ForeignEnum.FOREIGN_FOO.getValueDescriptor();\n    assertThat(enumType.getValues().get(0)).isEqualTo(value);\n    assertThat(value.getName()).isEqualTo(\"FOREIGN_FOO\");\n    assertThat(value.toString()).isEqualTo(\"FOREIGN_FOO\");\n    assertThat(value.getNumber()).isEqualTo(4);\n    assertThat(enumType.findValueByName(\"FOREIGN_FOO\")).isEqualTo(value);\n    assertThat(enumType.findValueByNumber(4)).isEqualTo(value);\n    assertThat(enumType.findValueByName(\"NO_SUCH_VALUE\")).isNull();\n    for (int i = 0; i < enumType.getValues().size(); i++) {\n      assertThat(enumType.getValues().get(i).getIndex()).isEqualTo(i);\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":316,"groupId":"10454","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testEnumDescriptor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/6c/b0baebedb555d7eaab6bf944de11c970e32cb2.src","preCode":"  public void testEnumDescriptor() throws Exception {\n    EnumDescriptor enumType = ForeignEnum.getDescriptor();\n    EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();\n\n    assertEquals(\"ForeignEnum\", enumType.getName());\n    assertEquals(\"protobuf_unittest.ForeignEnum\", enumType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), enumType.getFile());\n    assertNull(enumType.getContainingType());\n    assertEquals(DescriptorProtos.EnumOptions.getDefaultInstance(), enumType.getOptions());\n\n    assertEquals(\"NestedEnum\", nestedType.getName());\n    assertEquals(\"protobuf_unittest.TestAllTypes.NestedEnum\", nestedType.getFullName());\n    assertEquals(UnittestProto.getDescriptor(), nestedType.getFile());\n    assertEquals(TestAllTypes.getDescriptor(), nestedType.getContainingType());\n\n    EnumValueDescriptor value = ForeignEnum.FOREIGN_FOO.getValueDescriptor();\n    assertEquals(value, enumType.getValues().get(0));\n    assertEquals(\"FOREIGN_FOO\", value.getName());\n    assertEquals(\"FOREIGN_FOO\", value.toString());\n    assertEquals(4, value.getNumber());\n    assertEquals(value, enumType.findValueByName(\"FOREIGN_FOO\"));\n    assertEquals(value, enumType.findValueByNumber(4));\n    assertNull(enumType.findValueByName(\"NO_SUCH_VALUE\"));\n    for (int i = 0; i < enumType.getValues().size(); i++) {\n      assertEquals(i, enumType.getValues().get(i).getIndex());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/DescriptorsTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
