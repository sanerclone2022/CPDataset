[{"authorTime":"2017-12-06 05:02:36","codes":[{"authorDate":"2017-12-06 05:02:36","commitOrder":1,"curCode":"  public void testMergeMessageSet() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    TextFormat.merge(messageSetText, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n\n    assertTrue(messageSet.hasExtension(\n      TestMessageSetExtension1.messageSetExtension));\n    assertEquals(123, messageSet.getExtension(\n      TestMessageSetExtension1.messageSetExtension).getI());\n    assertTrue(messageSet.hasExtension(\n      TestMessageSetExtension2.messageSetExtension));\n    assertEquals(\"foo\", messageSet.getExtension(\n      TestMessageSetExtension2.messageSetExtension).getStr());\n\n    builder = TestMessageSet.newBuilder();\n    TextFormat.merge(messageSetTextWithRepeatedExtension, extensionRegistry,\n        builder);\n    messageSet = builder.build();\n    assertEquals(456, messageSet.getExtension(\n      TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","date":"2017-12-06 05:02:36","endLine":470,"groupId":"1439","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMergeMessageSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5d/38ca511cae02cd65be960d5f04434e17eb69c3.src","preCode":"  public void testMergeMessageSet() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    TextFormat.merge(messageSetText, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n\n    assertTrue(messageSet.hasExtension(\n      TestMessageSetExtension1.messageSetExtension));\n    assertEquals(123, messageSet.getExtension(\n      TestMessageSetExtension1.messageSetExtension).getI());\n    assertTrue(messageSet.hasExtension(\n      TestMessageSetExtension2.messageSetExtension));\n    assertEquals(\"foo\", messageSet.getExtension(\n      TestMessageSetExtension2.messageSetExtension).getStr());\n\n    builder = TestMessageSet.newBuilder();\n    TextFormat.merge(messageSetTextWithRepeatedExtension, extensionRegistry,\n        builder);\n    messageSet = builder.build();\n    assertEquals(456, messageSet.getExtension(\n      TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":446,"status":"B"},{"authorDate":"2017-12-06 05:02:36","commitOrder":1,"curCode":"  public void testMergeMessageSetWithOverwriteForbidden() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    parserWithOverwriteForbidden.merge(\n        messageSetText, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n    assertEquals(123, messageSet.getExtension(\n        TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\"foo\", messageSet.getExtension(\n      TestMessageSetExtension2.messageSetExtension).getStr());\n\n    builder = TestMessageSet.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(\n          messageSetTextWithRepeatedExtension, extensionRegistry, builder);\n      fail(\"expected parse exception\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\"6:1: Non-repeated field \"\n          + \"\\\"protobuf_unittest.TestMessageSetExtension1.message_set_extension\\\"\"\n          + \" cannot be overwritten.\",\n          e.getMessage());\n    }\n  }\n","date":"2017-12-06 05:02:36","endLine":497,"groupId":"664","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeMessageSetWithOverwriteForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5d/38ca511cae02cd65be960d5f04434e17eb69c3.src","preCode":"  public void testMergeMessageSetWithOverwriteForbidden() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    parserWithOverwriteForbidden.merge(\n        messageSetText, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n    assertEquals(123, messageSet.getExtension(\n        TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\"foo\", messageSet.getExtension(\n      TestMessageSetExtension2.messageSetExtension).getStr());\n\n    builder = TestMessageSet.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(\n          messageSetTextWithRepeatedExtension, extensionRegistry, builder);\n      fail(\"expected parse exception\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\"6:1: Non-repeated field \"\n          + \"\\\"protobuf_unittest.TestMessageSetExtension1.message_set_extension\\\"\"\n          + \" cannot be overwritten.\",\n          e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":472,"status":"B"}],"commitId":"9021f623e1420f513268a01a5ad43a23618a84ba","commitMessage":"@@@Merge pull request #3988 from acozzette/down-integrate\n\nIntegrated internal changes from Google","date":"2017-12-06 05:02:36","modifiedFileCount":"11","status":"B","submitter":"Adam Cozzette"},{"authorTime":"2018-11-13 05:55:00","codes":[{"authorDate":"2017-12-06 05:02:36","commitOrder":2,"curCode":"  public void testMergeMessageSet() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    TextFormat.merge(messageSetText, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n\n    assertTrue(messageSet.hasExtension(\n      TestMessageSetExtension1.messageSetExtension));\n    assertEquals(123, messageSet.getExtension(\n      TestMessageSetExtension1.messageSetExtension).getI());\n    assertTrue(messageSet.hasExtension(\n      TestMessageSetExtension2.messageSetExtension));\n    assertEquals(\"foo\", messageSet.getExtension(\n      TestMessageSetExtension2.messageSetExtension).getStr());\n\n    builder = TestMessageSet.newBuilder();\n    TextFormat.merge(messageSetTextWithRepeatedExtension, extensionRegistry,\n        builder);\n    messageSet = builder.build();\n    assertEquals(456, messageSet.getExtension(\n      TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","date":"2017-12-06 05:02:36","endLine":470,"groupId":"1439","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMergeMessageSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/5d/38ca511cae02cd65be960d5f04434e17eb69c3.src","preCode":"  public void testMergeMessageSet() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    TextFormat.merge(messageSetText, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n\n    assertTrue(messageSet.hasExtension(\n      TestMessageSetExtension1.messageSetExtension));\n    assertEquals(123, messageSet.getExtension(\n      TestMessageSetExtension1.messageSetExtension).getI());\n    assertTrue(messageSet.hasExtension(\n      TestMessageSetExtension2.messageSetExtension));\n    assertEquals(\"foo\", messageSet.getExtension(\n      TestMessageSetExtension2.messageSetExtension).getStr());\n\n    builder = TestMessageSet.newBuilder();\n    TextFormat.merge(messageSetTextWithRepeatedExtension, extensionRegistry,\n        builder);\n    messageSet = builder.build();\n    assertEquals(456, messageSet.getExtension(\n      TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":446,"status":"N"},{"authorDate":"2018-11-13 05:55:00","commitOrder":2,"curCode":"  public void testMergeMessageSetWithOverwriteForbidden() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    parserWithOverwriteForbidden.merge(messageSetText, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\n        \"foo\", messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr());\n\n    builder = TestMessageSet.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(\n          messageSetTextWithRepeatedExtension, extensionRegistry, builder);\n      fail(\"expected parse exception\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\n          \"4:44: Non-repeated field \"\n              + \"\\\"protobuf_unittest.TestMessageSetExtension1.message_set_extension\\\"\"\n              + \" cannot be overwritten.\",\n          e.getMessage());\n    }\n  }\n","date":"2018-11-13 05:55:00","endLine":478,"groupId":"664","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeMessageSetWithOverwriteForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/2f/ad0b957e7b013a39b94b78b03f47bbd3976dc9.src","preCode":"  public void testMergeMessageSetWithOverwriteForbidden() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    parserWithOverwriteForbidden.merge(messageSetText, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\n        \"foo\", messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr());\n\n    builder = TestMessageSet.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(\n          messageSetTextWithRepeatedExtension, extensionRegistry, builder);\n      fail(\"expected parse exception\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\n          \"6:1: Non-repeated field \"\n              + \"\\\"protobuf_unittest.TestMessageSetExtension1.message_set_extension\\\"\"\n              + \" cannot be overwritten.\",\n          e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"}],"commitId":"46a48e49aa8357bbeee8040819a35e59880e329a","commitMessage":"@@@Merge pull request #5332 from acozzette/integrate\n\nIntegrated internal changes from Google","date":"2018-11-13 05:55:00","modifiedFileCount":"44","status":"M","submitter":"Adam Cozzette"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testMergeMessageSet() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    TextFormat.merge(MESSAGE_SET_TEXT, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n\n    assertThat(messageSet.hasExtension(TestMessageSetExtension1.messageSetExtension)).isTrue();\n    assertThat(messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI())\n        .isEqualTo(123);\n    assertThat(messageSet.hasExtension(TestMessageSetExtension2.messageSetExtension)).isTrue();\n    assertThat(messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr())\n        .isEqualTo(\"foo\");\n\n    builder = TestMessageSet.newBuilder();\n    TextFormat.merge(MESSAGE_SET_TEXT_WITH_REPEATED_EXTENSION, extensionRegistry, builder);\n    messageSet = builder.build();\n    assertThat(messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI())\n        .isEqualTo(456);\n  }\n","date":"2021-08-10 06:55:00","endLine":507,"groupId":"10430","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMergeMessageSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/568e1df5e2a4320fcad1e8090fffc838e50ebb.src","preCode":"  public void testMergeMessageSet() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    TextFormat.merge(messageSetText, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n\n    assertTrue(messageSet.hasExtension(TestMessageSetExtension1.messageSetExtension));\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n    assertTrue(messageSet.hasExtension(TestMessageSetExtension2.messageSetExtension));\n    assertEquals(\n        \"foo\", messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr());\n\n    builder = TestMessageSet.newBuilder();\n    TextFormat.merge(messageSetTextWithRepeatedExtension, extensionRegistry, builder);\n    messageSet = builder.build();\n    assertEquals(456, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testMergeMessageSetWithOverwriteForbidden() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    PARSER_WITH_OVERWRITE_FORBIDDEN.merge(MESSAGE_SET_TEXT, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n    assertThat(messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI())\n        .isEqualTo(123);\n    assertThat(messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr())\n        .isEqualTo(\"foo\");\n\n    builder = TestMessageSet.newBuilder();\n    try {\n      PARSER_WITH_OVERWRITE_FORBIDDEN.merge(\n          MESSAGE_SET_TEXT_WITH_REPEATED_EXTENSION, extensionRegistry, builder);\n      assertWithMessage(\"expected parse exception\").fail();\n    } catch (TextFormat.ParseException e) {\n      assertThat(e)\n          .hasMessageThat()\n          .isEqualTo(\n              \"4:44: Non-repeated field \"\n                  + \"\\\"protobuf_unittest.TestMessageSetExtension1.message_set_extension\\\"\"\n                  + \" cannot be overwritten.\");\n    }\n  }\n","date":"2021-08-10 06:55:00","endLine":536,"groupId":"10430","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeMessageSetWithOverwriteForbidden","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/568e1df5e2a4320fcad1e8090fffc838e50ebb.src","preCode":"  public void testMergeMessageSetWithOverwriteForbidden() throws Exception {\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    TestMessageSet.Builder builder = TestMessageSet.newBuilder();\n    parserWithOverwriteForbidden.merge(messageSetText, extensionRegistry, builder);\n    TestMessageSet messageSet = builder.build();\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\n        \"foo\", messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr());\n\n    builder = TestMessageSet.newBuilder();\n    try {\n      parserWithOverwriteForbidden.merge(\n          messageSetTextWithRepeatedExtension, extensionRegistry, builder);\n      fail(\"expected parse exception\");\n    } catch (TextFormat.ParseException e) {\n      assertEquals(\n          \"4:44: Non-repeated field \"\n              + \"\\\"protobuf_unittest.TestMessageSetExtension1.message_set_extension\\\"\"\n              + \" cannot be overwritten.\",\n          e.getMessage());\n    }\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":510,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
