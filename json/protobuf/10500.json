[{"authorTime":"2019-03-07 04:39:12","codes":[{"authorDate":"2018-08-09 08:14:42","commitOrder":2,"curCode":"  public void testDeserializeWithClassField() throws Exception {\n    \r\n    \r\n\n    \r\n    byte[] int32ValueBytes = new byte[]{\n        -84, -19, 0, 5, 115, 114, 0, 55, 99, 111, 109, 46, 103, 111, 111,\n        103, 108, 101, 46, 112, 114, 111, 116, 111, 98, 117, 102, 46, 71,\n        101, 110, 101, 114, 97, 116, 101, 100, 77, 101, 115, 115, 97, 103,\n        101, 76, 105, 116, 101, 36, 83, 101, 114, 105, 97, 108, 105, 122,\n        101, 100, 70, 111, 114, 109, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 91,\n        0, 7, 97, 115, 66, 121, 116, 101, 115, 116, 0, 2, 91, 66, 76, 0,\n        12, 109, 101, 115, 115, 97, 103, 101, 67, 108, 97, 115, 115, 116,\n        0, 17, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108,\n        97, 115, 115, 59, 76, 0, 16, 109, 101, 115, 115, 97, 103, 101, 67,\n        108, 97, 115, 115, 78, 97, 109, 101, 116, 0, 18, 76, 106, 97, 118,\n        97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59,\n        120, 112, 117, 114, 0, 2, 91, 66, -84, -13, 23, -8, 6, 8, 84, -32,\n        2, 0, 0, 120, 112, 0, 0, 0, 2, 8, 123, 118, 114, 0, 30, 99, 111,\n        109, 46, 103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 111,\n        98, 117, 102, 46, 73, 110, 116, 51, 50, 86, 97, 108, 117, 101, 0, 0,\n        0, 0, 0, 0, 0, 0, 2, 0, 2, 66, 0, 21, 109, 101, 109, 111, 105, 122,\n        101, 100, 73, 115, 73, 110, 105, 116, 105, 97, 108, 105, 122, 101,\n        100, 73, 0, 6, 118, 97, 108, 117, 101, 95, 120, 114, 0, 38, 99, 111,\n        109, 46, 103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 111,\n        98, 117, 102, 46, 71, 101, 110, 101, 114, 97, 116, 101, 100, 77,\n        101, 115, 115, 97, 103, 101, 86, 51, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0,\n        1, 76, 0, 13, 117, 110, 107, 110, 111, 119, 110, 70, 105, 101, 108,\n        100, 115, 116, 0, 37, 76, 99, 111, 109, 47, 103, 111, 111, 103, 108,\n        101, 47, 112, 114, 111, 116, 111, 98, 117, 102, 47, 85, 110, 107,\n        110, 111, 119, 110, 70, 105, 101, 108, 100, 83, 101, 116, 59, 120,\n        112, 116, 0, 30, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46,\n        112, 114, 111, 116, 111, 98, 117, 102, 46, 73, 110, 116, 51, 50, 86,\n        97, 108, 117, 101\n    };\n\n    ByteArrayInputStream bais = new ByteArrayInputStream(int32ValueBytes);\n    ObjectInputStream in = new ObjectInputStream(bais);\n    Int32Value int32Value = (Int32Value) in.readObject();\n    assertEquals(123, int32Value.getValue());\n  }\n","date":"2018-08-09 08:14:42","endLine":924,"groupId":"1981","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeserializeWithClassField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/44/89dacea5ef2d77533b90f355d1ffa6c3cab69e.src","preCode":"  public void testDeserializeWithClassField() throws Exception {\n    \r\n    \r\n\n    \r\n    byte[] int32ValueBytes = new byte[]{\n        -84, -19, 0, 5, 115, 114, 0, 55, 99, 111, 109, 46, 103, 111, 111,\n        103, 108, 101, 46, 112, 114, 111, 116, 111, 98, 117, 102, 46, 71,\n        101, 110, 101, 114, 97, 116, 101, 100, 77, 101, 115, 115, 97, 103,\n        101, 76, 105, 116, 101, 36, 83, 101, 114, 105, 97, 108, 105, 122,\n        101, 100, 70, 111, 114, 109, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 91,\n        0, 7, 97, 115, 66, 121, 116, 101, 115, 116, 0, 2, 91, 66, 76, 0,\n        12, 109, 101, 115, 115, 97, 103, 101, 67, 108, 97, 115, 115, 116,\n        0, 17, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108,\n        97, 115, 115, 59, 76, 0, 16, 109, 101, 115, 115, 97, 103, 101, 67,\n        108, 97, 115, 115, 78, 97, 109, 101, 116, 0, 18, 76, 106, 97, 118,\n        97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59,\n        120, 112, 117, 114, 0, 2, 91, 66, -84, -13, 23, -8, 6, 8, 84, -32,\n        2, 0, 0, 120, 112, 0, 0, 0, 2, 8, 123, 118, 114, 0, 30, 99, 111,\n        109, 46, 103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 111,\n        98, 117, 102, 46, 73, 110, 116, 51, 50, 86, 97, 108, 117, 101, 0, 0,\n        0, 0, 0, 0, 0, 0, 2, 0, 2, 66, 0, 21, 109, 101, 109, 111, 105, 122,\n        101, 100, 73, 115, 73, 110, 105, 116, 105, 97, 108, 105, 122, 101,\n        100, 73, 0, 6, 118, 97, 108, 117, 101, 95, 120, 114, 0, 38, 99, 111,\n        109, 46, 103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 111,\n        98, 117, 102, 46, 71, 101, 110, 101, 114, 97, 116, 101, 100, 77,\n        101, 115, 115, 97, 103, 101, 86, 51, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0,\n        1, 76, 0, 13, 117, 110, 107, 110, 111, 119, 110, 70, 105, 101, 108,\n        100, 115, 116, 0, 37, 76, 99, 111, 109, 47, 103, 111, 111, 103, 108,\n        101, 47, 112, 114, 111, 116, 111, 98, 117, 102, 47, 85, 110, 107,\n        110, 111, 119, 110, 70, 105, 101, 108, 100, 83, 101, 116, 59, 120,\n        112, 116, 0, 30, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46,\n        112, 114, 111, 116, 111, 98, 117, 102, 46, 73, 110, 116, 51, 50, 86,\n        97, 108, 117, 101\n    };\n\n    ByteArrayInputStream bais = new ByteArrayInputStream(int32ValueBytes);\n    ObjectInputStream in = new ObjectInputStream(bais);\n    Int32Value int32Value = (Int32Value) in.readObject();\n    assertEquals(123, int32Value.getValue());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/GeneratedMessageTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":884,"status":"NB"},{"authorDate":"2019-03-07 04:39:12","commitOrder":2,"curCode":"  static final int[] minLengthByDepth = {\n    1,\n    1,\n    2,\n    3,\n    5,\n    8,\n    13,\n    21,\n    34,\n    55,\n    89,\n    144,\n    233,\n    377,\n    610,\n    987,\n    1597,\n    2584,\n    4181,\n    6765,\n    10946,\n    17711,\n    28657,\n    46368,\n    75025,\n    121393,\n    196418,\n    317811,\n    514229,\n    832040,\n    1346269,\n    2178309,\n    3524578,\n    5702887,\n    9227465,\n    14930352,\n    24157817,\n    39088169,\n    63245986,\n    102334155,\n    165580141,\n    267914296,\n    433494437,\n    701408733,\n    1134903170,\n    1836311903,\n    Integer.MAX_VALUE\n  };\n","date":"2019-03-07 04:39:12","endLine":131,"groupId":"1981","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"minLengthByDepth","params":"default","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c3/bec7b1a14f7a9a5455fd87afd0249ad7fbdd60.src","preCode":"  static final int[] minLengthByDepth = {\n    1,\n    1,\n    2,\n    3,\n    5,\n    8,\n    13,\n    21,\n    34,\n    55,\n    89,\n    144,\n    233,\n    377,\n    610,\n    987,\n    1597,\n    2584,\n    4181,\n    6765,\n    10946,\n    17711,\n    28657,\n    46368,\n    75025,\n    121393,\n    196418,\n    317811,\n    514229,\n    832040,\n    1346269,\n    2178309,\n    3524578,\n    5702887,\n    9227465,\n    14930352,\n    24157817,\n    39088169,\n    63245986,\n    102334155,\n    165580141,\n    267914296,\n    433494437,\n    701408733,\n    1134903170,\n    1836311903,\n    Integer.MAX_VALUE\n  };\n","realPath":"java/core/src/main/java/com/google/protobuf/RopeByteString.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"d0f91c863ae0fbb75b41460c8bbb786ade197a0f","commitMessage":"@@@Down integrate to Github (#5839)\n\n* Down integrate to github\n","date":"2019-03-07 04:39:12","modifiedFileCount":"8","status":"M","submitter":"Hao Nguyen"},{"authorTime":"2019-03-07 04:39:12","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testDeserializeWithClassField() throws Exception {\n    \r\n    \r\n\n    \r\n    byte[] int32ValueBytes =\n        new byte[] {\n          -84, -19, 0, 5, 115, 114, 0, 55, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 112,\n          114, 111, 116, 111, 98, 117, 102, 46, 71, 101, 110, 101, 114, 97, 116, 101, 100, 77, 101,\n          115, 115, 97, 103, 101, 76, 105, 116, 101, 36, 83, 101, 114, 105, 97, 108, 105, 122, 101,\n          100, 70, 111, 114, 109, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 91, 0, 7, 97, 115, 66, 121, 116,\n          101, 115, 116, 0, 2, 91, 66, 76, 0, 12, 109, 101, 115, 115, 97, 103, 101, 67, 108, 97,\n          115, 115, 116, 0, 17, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115,\n          115, 59, 76, 0, 16, 109, 101, 115, 115, 97, 103, 101, 67, 108, 97, 115, 115, 78, 97, 109,\n          101, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,\n          103, 59, 120, 112, 117, 114, 0, 2, 91, 66, -84, -13, 23, -8, 6, 8, 84, -32, 2, 0, 0, 120,\n          112, 0, 0, 0, 2, 8, 123, 118, 114, 0, 30, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101,\n          46, 112, 114, 111, 116, 111, 98, 117, 102, 46, 73, 110, 116, 51, 50, 86, 97, 108, 117,\n          101, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 66, 0, 21, 109, 101, 109, 111, 105, 122, 101, 100,\n          73, 115, 73, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100, 73, 0, 6, 118, 97, 108, 117,\n          101, 95, 120, 114, 0, 38, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 112, 114,\n          111, 116, 111, 98, 117, 102, 46, 71, 101, 110, 101, 114, 97, 116, 101, 100, 77, 101, 115,\n          115, 97, 103, 101, 86, 51, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 76, 0, 13, 117, 110, 107, 110,\n          111, 119, 110, 70, 105, 101, 108, 100, 115, 116, 0, 37, 76, 99, 111, 109, 47, 103, 111,\n          111, 103, 108, 101, 47, 112, 114, 111, 116, 111, 98, 117, 102, 47, 85, 110, 107, 110, 111,\n          119, 110, 70, 105, 101, 108, 100, 83, 101, 116, 59, 120, 112, 116, 0, 30, 99, 111, 109,\n          46, 103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 111, 98, 117, 102, 46, 73, 110,\n          116, 51, 50, 86, 97, 108, 117, 101\n        };\n\n    ByteArrayInputStream bais = new ByteArrayInputStream(int32ValueBytes);\n    ObjectInputStream in = new ObjectInputStream(bais);\n    Int32Value int32Value = (Int32Value) in.readObject();\n    assertThat(int32Value.getValue()).isEqualTo(123);\n  }\n","date":"2021-08-10 06:55:00","endLine":1138,"groupId":"10500","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testDeserializeWithClassField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/fb/ba612bd2a86e442aceac2543c138810d348cc0.src","preCode":"  public void testDeserializeWithClassField() throws Exception {\n    \r\n    \r\n\n    \r\n    byte[] int32ValueBytes =\n        new byte[] {\n          -84, -19, 0, 5, 115, 114, 0, 55, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 112,\n          114, 111, 116, 111, 98, 117, 102, 46, 71, 101, 110, 101, 114, 97, 116, 101, 100, 77, 101,\n          115, 115, 97, 103, 101, 76, 105, 116, 101, 36, 83, 101, 114, 105, 97, 108, 105, 122, 101,\n          100, 70, 111, 114, 109, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 91, 0, 7, 97, 115, 66, 121, 116,\n          101, 115, 116, 0, 2, 91, 66, 76, 0, 12, 109, 101, 115, 115, 97, 103, 101, 67, 108, 97,\n          115, 115, 116, 0, 17, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115,\n          115, 59, 76, 0, 16, 109, 101, 115, 115, 97, 103, 101, 67, 108, 97, 115, 115, 78, 97, 109,\n          101, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,\n          103, 59, 120, 112, 117, 114, 0, 2, 91, 66, -84, -13, 23, -8, 6, 8, 84, -32, 2, 0, 0, 120,\n          112, 0, 0, 0, 2, 8, 123, 118, 114, 0, 30, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101,\n          46, 112, 114, 111, 116, 111, 98, 117, 102, 46, 73, 110, 116, 51, 50, 86, 97, 108, 117,\n          101, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 66, 0, 21, 109, 101, 109, 111, 105, 122, 101, 100,\n          73, 115, 73, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100, 73, 0, 6, 118, 97, 108, 117,\n          101, 95, 120, 114, 0, 38, 99, 111, 109, 46, 103, 111, 111, 103, 108, 101, 46, 112, 114,\n          111, 116, 111, 98, 117, 102, 46, 71, 101, 110, 101, 114, 97, 116, 101, 100, 77, 101, 115,\n          115, 97, 103, 101, 86, 51, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 76, 0, 13, 117, 110, 107, 110,\n          111, 119, 110, 70, 105, 101, 108, 100, 115, 116, 0, 37, 76, 99, 111, 109, 47, 103, 111,\n          111, 103, 108, 101, 47, 112, 114, 111, 116, 111, 98, 117, 102, 47, 85, 110, 107, 110, 111,\n          119, 110, 70, 105, 101, 108, 100, 83, 101, 116, 59, 120, 112, 116, 0, 30, 99, 111, 109,\n          46, 103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 111, 98, 117, 102, 46, 73, 110,\n          116, 51, 50, 86, 97, 108, 117, 101\n        };\n\n    ByteArrayInputStream bais = new ByteArrayInputStream(int32ValueBytes);\n    ObjectInputStream in = new ObjectInputStream(bais);\n    Int32Value int32Value = (Int32Value) in.readObject();\n    assertEquals(123, int32Value.getValue());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/GeneratedMessageTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1104,"status":"M"},{"authorDate":"2019-03-07 04:39:12","commitOrder":3,"curCode":"  static final int[] minLengthByDepth = {\n    1,\n    1,\n    2,\n    3,\n    5,\n    8,\n    13,\n    21,\n    34,\n    55,\n    89,\n    144,\n    233,\n    377,\n    610,\n    987,\n    1597,\n    2584,\n    4181,\n    6765,\n    10946,\n    17711,\n    28657,\n    46368,\n    75025,\n    121393,\n    196418,\n    317811,\n    514229,\n    832040,\n    1346269,\n    2178309,\n    3524578,\n    5702887,\n    9227465,\n    14930352,\n    24157817,\n    39088169,\n    63245986,\n    102334155,\n    165580141,\n    267914296,\n    433494437,\n    701408733,\n    1134903170,\n    1836311903,\n    Integer.MAX_VALUE\n  };\n","date":"2019-03-07 04:39:12","endLine":131,"groupId":"10500","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"minLengthByDepth","params":"default","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c3/bec7b1a14f7a9a5455fd87afd0249ad7fbdd60.src","preCode":"  static final int[] minLengthByDepth = {\n    1,\n    1,\n    2,\n    3,\n    5,\n    8,\n    13,\n    21,\n    34,\n    55,\n    89,\n    144,\n    233,\n    377,\n    610,\n    987,\n    1597,\n    2584,\n    4181,\n    6765,\n    10946,\n    17711,\n    28657,\n    46368,\n    75025,\n    121393,\n    196418,\n    317811,\n    514229,\n    832040,\n    1346269,\n    2178309,\n    3524578,\n    5702887,\n    9227465,\n    14930352,\n    24157817,\n    39088169,\n    63245986,\n    102334155,\n    165580141,\n    267914296,\n    433494437,\n    701408733,\n    1134903170,\n    1836311903,\n    Integer.MAX_VALUE\n  };\n","realPath":"java/core/src/main/java/com/google/protobuf/RopeByteString.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"N"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
