[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testPrintMessageSet() throws Exception {\n    TestMessageSet messageSet =\n      TestMessageSet.newBuilder()\n        .setExtension(\n          TestMessageSetExtension1.messageSetExtension,\n          TestMessageSetExtension1.newBuilder().setI(123).build())\n        .setExtension(\n          TestMessageSetExtension2.messageSetExtension,\n          TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n        .build();\n\n    assertEquals(messageSetText, messageSet.toString());\n  }\n","date":"2016-01-14 03:22:18","endLine":314,"groupId":"880","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPrintMessageSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1d/f4fad778dd3dcac9990e0ae573770c7409d033.src","preCode":"  public void testPrintMessageSet() throws Exception {\n    TestMessageSet messageSet =\n      TestMessageSet.newBuilder()\n        .setExtension(\n          TestMessageSetExtension1.messageSetExtension,\n          TestMessageSetExtension1.newBuilder().setI(123).build())\n        .setExtension(\n          TestMessageSetExtension2.messageSetExtension,\n          TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n        .build();\n\n    assertEquals(messageSetText, messageSet.toString());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  private void testSerializeMessageSetWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    \r\n    TestMessageSet messageSet =\n      TestMessageSet.newBuilder()\n        .setExtension(\n          TestMessageSetExtension1.messageSetExtension,\n          TestMessageSetExtension1.newBuilder().setI(123).build())\n        .setExtension(\n          TestMessageSetExtension2.messageSetExtension,\n          TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n        .setUnknownFields(\n          UnknownFieldSet.newBuilder()\n            .addField(UNKNOWN_TYPE_ID,\n              UnknownFieldSet.Field.newBuilder()\n                .addLengthDelimited(ByteString.copyFromUtf8(\"bar\"))\n                .build())\n            .build())\n        .build();\n\n    ByteString data = messageSet.toByteString();\n\n    \r\n    RawMessageSet raw = RawMessageSet.parseFrom(data);\n\n    assertTrue(raw.getUnknownFields().asMap().isEmpty());\n\n    assertEquals(3, raw.getItemCount());\n    assertEquals(TYPE_ID_1, raw.getItem(0).getTypeId());\n    assertEquals(TYPE_ID_2, raw.getItem(1).getTypeId());\n    assertEquals(UNKNOWN_TYPE_ID, raw.getItem(2).getTypeId());\n\n    TestMessageSetExtension1 message1 =\n      TestMessageSetExtension1.parseFrom(\n        raw.getItem(0).getMessage().toByteArray());\n    assertEquals(123, message1.getI());\n\n    TestMessageSetExtension2 message2 =\n      TestMessageSetExtension2.parseFrom(\n        raw.getItem(1).getMessage().toByteArray());\n    assertEquals(\"foo\", message2.getStr());\n\n    assertEquals(\"bar\", raw.getItem(2).getMessage().toStringUtf8());\n  }\n","date":"2016-01-14 03:22:18","endLine":386,"groupId":"880","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerializeMessageSetWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/01/75005d2ca9f844cfc52305abbcab449cbd7eb1.src","preCode":"  private void testSerializeMessageSetWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    \r\n    TestMessageSet messageSet =\n      TestMessageSet.newBuilder()\n        .setExtension(\n          TestMessageSetExtension1.messageSetExtension,\n          TestMessageSetExtension1.newBuilder().setI(123).build())\n        .setExtension(\n          TestMessageSetExtension2.messageSetExtension,\n          TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n        .setUnknownFields(\n          UnknownFieldSet.newBuilder()\n            .addField(UNKNOWN_TYPE_ID,\n              UnknownFieldSet.Field.newBuilder()\n                .addLengthDelimited(ByteString.copyFromUtf8(\"bar\"))\n                .build())\n            .build())\n        .build();\n\n    ByteString data = messageSet.toByteString();\n\n    \r\n    RawMessageSet raw = RawMessageSet.parseFrom(data);\n\n    assertTrue(raw.getUnknownFields().asMap().isEmpty());\n\n    assertEquals(3, raw.getItemCount());\n    assertEquals(TYPE_ID_1, raw.getItem(0).getTypeId());\n    assertEquals(TYPE_ID_2, raw.getItem(1).getTypeId());\n    assertEquals(UNKNOWN_TYPE_ID, raw.getItem(2).getTypeId());\n\n    TestMessageSetExtension1 message1 =\n      TestMessageSetExtension1.parseFrom(\n        raw.getItem(0).getMessage().toByteArray());\n    assertEquals(123, message1.getI());\n\n    TestMessageSetExtension2 message2 =\n      TestMessageSetExtension2.parseFrom(\n        raw.getItem(1).getMessage().toByteArray());\n    assertEquals(\"foo\", message2.getStr());\n\n    assertEquals(\"bar\", raw.getItem(2).getMessage().toStringUtf8());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":342,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2018-09-08 07:15:38","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testPrintMessageSet() throws Exception {\n    TestMessageSet messageSet =\n      TestMessageSet.newBuilder()\n        .setExtension(\n          TestMessageSetExtension1.messageSetExtension,\n          TestMessageSetExtension1.newBuilder().setI(123).build())\n        .setExtension(\n          TestMessageSetExtension2.messageSetExtension,\n          TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n        .build();\n\n    assertEquals(messageSetText, messageSet.toString());\n  }\n","date":"2016-01-14 03:22:18","endLine":314,"groupId":"880","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPrintMessageSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1d/f4fad778dd3dcac9990e0ae573770c7409d033.src","preCode":"  public void testPrintMessageSet() throws Exception {\n    TestMessageSet messageSet =\n      TestMessageSet.newBuilder()\n        .setExtension(\n          TestMessageSetExtension1.messageSetExtension,\n          TestMessageSetExtension1.newBuilder().setI(123).build())\n        .setExtension(\n          TestMessageSetExtension2.messageSetExtension,\n          TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n        .build();\n\n    assertEquals(messageSetText, messageSet.toString());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"N"},{"authorDate":"2018-09-08 07:15:38","commitOrder":2,"curCode":"  private void testSerializeMessageSetWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    \r\n    TestMessageSet messageSet =\n        TestMessageSet.newBuilder()\n            .setExtension(\n                TestMessageSetExtension1.messageSetExtension,\n                TestMessageSetExtension1.newBuilder().setI(123).build())\n            .setExtension(\n                TestMessageSetExtension2.messageSetExtension,\n                TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n            .setUnknownFields(\n                UnknownFieldSet.newBuilder()\n                    .addField(\n                        UNKNOWN_TYPE_ID,\n                        UnknownFieldSet.Field.newBuilder()\n                            .addLengthDelimited(ByteString.copyFromUtf8(\"bar\"))\n                            .build())\n                    .build())\n            .build();\n\n    ByteString data = messageSet.toByteString();\n\n    \r\n    RawMessageSet raw = RawMessageSet.parseFrom(data);\n\n    assertTrue(raw.getUnknownFields().asMap().isEmpty());\n\n    assertEquals(3, raw.getItemCount());\n    assertEquals(TYPE_ID_1, raw.getItem(0).getTypeId());\n    assertEquals(TYPE_ID_2, raw.getItem(1).getTypeId());\n    assertEquals(UNKNOWN_TYPE_ID, raw.getItem(2).getTypeId());\n\n    TestMessageSetExtension1 message1 =\n        TestMessageSetExtension1.parseFrom(raw.getItem(0).getMessage());\n    assertEquals(123, message1.getI());\n\n    TestMessageSetExtension2 message2 =\n        TestMessageSetExtension2.parseFrom(raw.getItem(1).getMessage());\n    assertEquals(\"foo\", message2.getStr());\n\n    assertEquals(\"bar\", raw.getItem(2).getMessage().toStringUtf8());\n  }\n","date":"2018-09-08 07:15:38","endLine":331,"groupId":"880","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerializeMessageSetWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/45/a396acd8e77619d9169b73f5c154b511775842.src","preCode":"  private void testSerializeMessageSetWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    \r\n    TestMessageSet messageSet =\n      TestMessageSet.newBuilder()\n        .setExtension(\n          TestMessageSetExtension1.messageSetExtension,\n          TestMessageSetExtension1.newBuilder().setI(123).build())\n        .setExtension(\n          TestMessageSetExtension2.messageSetExtension,\n          TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n        .setUnknownFields(\n          UnknownFieldSet.newBuilder()\n            .addField(UNKNOWN_TYPE_ID,\n              UnknownFieldSet.Field.newBuilder()\n                .addLengthDelimited(ByteString.copyFromUtf8(\"bar\"))\n                .build())\n            .build())\n        .build();\n\n    ByteString data = messageSet.toByteString();\n\n    \r\n    RawMessageSet raw = RawMessageSet.parseFrom(data);\n\n    assertTrue(raw.getUnknownFields().asMap().isEmpty());\n\n    assertEquals(3, raw.getItemCount());\n    assertEquals(TYPE_ID_1, raw.getItem(0).getTypeId());\n    assertEquals(TYPE_ID_2, raw.getItem(1).getTypeId());\n    assertEquals(UNKNOWN_TYPE_ID, raw.getItem(2).getTypeId());\n\n    TestMessageSetExtension1 message1 =\n      TestMessageSetExtension1.parseFrom(\n        raw.getItem(0).getMessage().toByteArray());\n    assertEquals(123, message1.getI());\n\n    TestMessageSetExtension2 message2 =\n      TestMessageSetExtension2.parseFrom(\n        raw.getItem(1).getMessage().toByteArray());\n    assertEquals(\"foo\", message2.getStr());\n\n    assertEquals(\"bar\", raw.getItem(2).getMessage().toStringUtf8());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"}],"commitId":"f9d8138376765d229a32635c9209061e4e4aed8c","commitMessage":"@@@Merge pull request #5109 from haberman/integrate\n\nDown-integrate from google3.","date":"2018-09-08 07:15:38","modifiedFileCount":"125","status":"M","submitter":"Joshua Haberman"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testPrintMessageSet() throws Exception {\n    TestMessageSet messageSet =\n        TestMessageSet.newBuilder()\n            .setExtension(\n                TestMessageSetExtension1.messageSetExtension,\n                TestMessageSetExtension1.newBuilder().setI(123).build())\n            .setExtension(\n                TestMessageSetExtension2.messageSetExtension,\n                TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n            .build();\n\n    assertThat(messageSet.toString()).isEqualTo(MESSAGE_SET_TEXT);\n  }\n","date":"2021-08-10 06:55:00","endLine":364,"groupId":"10418","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPrintMessageSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/69/568e1df5e2a4320fcad1e8090fffc838e50ebb.src","preCode":"  public void testPrintMessageSet() throws Exception {\n    TestMessageSet messageSet =\n        TestMessageSet.newBuilder()\n            .setExtension(\n                TestMessageSetExtension1.messageSetExtension,\n                TestMessageSetExtension1.newBuilder().setI(123).build())\n            .setExtension(\n                TestMessageSetExtension2.messageSetExtension,\n                TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n            .build();\n\n    assertEquals(messageSetText, messageSet.toString());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/TextFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":352,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  private void testSerializeMessageSetWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    \r\n    TestMessageSet messageSet =\n        TestMessageSet.newBuilder()\n            .setExtension(\n                TestMessageSetExtension1.messageSetExtension,\n                TestMessageSetExtension1.newBuilder().setI(123).build())\n            .setExtension(\n                TestMessageSetExtension2.messageSetExtension,\n                TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n            .setUnknownFields(\n                UnknownFieldSet.newBuilder()\n                    .addField(\n                        UNKNOWN_TYPE_ID,\n                        UnknownFieldSet.Field.newBuilder()\n                            .addLengthDelimited(ByteString.copyFromUtf8(\"bar\"))\n                            .build())\n                    .build())\n            .build();\n\n    ByteString data = messageSet.toByteString();\n\n    \r\n    RawMessageSet raw = RawMessageSet.parseFrom(data);\n\n    assertThat(raw.getUnknownFields().asMap()).isEmpty();\n\n    assertThat(raw.getItemCount()).isEqualTo(3);\n    assertThat(raw.getItem(0).getTypeId()).isEqualTo(TYPE_ID_1);\n    assertThat(raw.getItem(1).getTypeId()).isEqualTo(TYPE_ID_2);\n    assertThat(raw.getItem(2).getTypeId()).isEqualTo(UNKNOWN_TYPE_ID);\n\n    TestMessageSetExtension1 message1 =\n        TestMessageSetExtension1.parseFrom(raw.getItem(0).getMessage());\n    assertThat(message1.getI()).isEqualTo(123);\n\n    TestMessageSetExtension2 message2 =\n        TestMessageSetExtension2.parseFrom(raw.getItem(1).getMessage());\n    assertThat(message2.getStr()).isEqualTo(\"foo\");\n\n    assertThat(raw.getItem(2).getMessage().toStringUtf8()).isEqualTo(\"bar\");\n  }\n","date":"2021-08-10 06:55:00","endLine":346,"groupId":"10418","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testSerializeMessageSetWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e0/72eb8fd2cdb06fdf0424725940b96d8350f87d.src","preCode":"  private void testSerializeMessageSetWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    \r\n    TestMessageSet messageSet =\n        TestMessageSet.newBuilder()\n            .setExtension(\n                TestMessageSetExtension1.messageSetExtension,\n                TestMessageSetExtension1.newBuilder().setI(123).build())\n            .setExtension(\n                TestMessageSetExtension2.messageSetExtension,\n                TestMessageSetExtension2.newBuilder().setStr(\"foo\").build())\n            .setUnknownFields(\n                UnknownFieldSet.newBuilder()\n                    .addField(\n                        UNKNOWN_TYPE_ID,\n                        UnknownFieldSet.Field.newBuilder()\n                            .addLengthDelimited(ByteString.copyFromUtf8(\"bar\"))\n                            .build())\n                    .build())\n            .build();\n\n    ByteString data = messageSet.toByteString();\n\n    \r\n    RawMessageSet raw = RawMessageSet.parseFrom(data);\n\n    assertTrue(raw.getUnknownFields().asMap().isEmpty());\n\n    assertEquals(3, raw.getItemCount());\n    assertEquals(TYPE_ID_1, raw.getItem(0).getTypeId());\n    assertEquals(TYPE_ID_2, raw.getItem(1).getTypeId());\n    assertEquals(UNKNOWN_TYPE_ID, raw.getItem(2).getTypeId());\n\n    TestMessageSetExtension1 message1 =\n        TestMessageSetExtension1.parseFrom(raw.getItem(0).getMessage());\n    assertEquals(123, message1.getI());\n\n    TestMessageSetExtension2 message2 =\n        TestMessageSetExtension2.parseFrom(raw.getItem(1).getMessage());\n    assertEquals(\"foo\", message2.getStr());\n\n    assertEquals(\"bar\", raw.getItem(2).getMessage().toStringUtf8());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
