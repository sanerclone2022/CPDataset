[{"authorTime":"2019-04-06 07:39:18","codes":[{"authorDate":"2019-04-06 07:39:18","commitOrder":1,"curCode":"  public void testToStringUnknownFields() throws Exception {\n    TestAllExtensionsLite messageWithExtensions =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"spam\")\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"eggs\")\n            .setExtension(\n                UnittestLite.optionalNestedEnumExtensionLite, TestAllTypesLite.NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                TestAllTypesLite.NestedMessage.newBuilder().setBb(7).build())\n            .build();\n    TestAllExtensionsLite messageWithUnknownFields =\n        TestAllExtensionsLite.parseFrom(messageWithExtensions.toByteArray());\n    assertToStringEquals(\n        \"1: 123\\n18: \\\"\\\\b\\\\a\\\"\\n21: 3\\n44: \\\"spam\\\"\\n44: \\\"eggs\\\"\", messageWithUnknownFields);\n  }\n","date":"2019-04-06 07:39:18","endLine":1471,"groupId":"1087","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testToStringUnknownFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/96/0b2037c1bad1f9bcd313819a2792728baa12b2.src","preCode":"  public void testToStringUnknownFields() throws Exception {\n    TestAllExtensionsLite messageWithExtensions =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"spam\")\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"eggs\")\n            .setExtension(\n                UnittestLite.optionalNestedEnumExtensionLite, TestAllTypesLite.NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                TestAllTypesLite.NestedMessage.newBuilder().setBb(7).build())\n            .build();\n    TestAllExtensionsLite messageWithUnknownFields =\n        TestAllExtensionsLite.parseFrom(messageWithExtensions.toByteArray());\n    assertToStringEquals(\n        \"1: 123\\n18: \\\"\\\\b\\\\a\\\"\\n21: 3\\n44: \\\"spam\\\"\\n44: \\\"eggs\\\"\", messageWithUnknownFields);\n  }\n","realPath":"java/lite/src/test/java/com/google/protobuf/LiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1455,"status":"B"},{"authorDate":"2019-04-06 07:39:18","commitOrder":1,"curCode":"  public void testParseFromByteBuffer_extensions() throws Exception {\n    TestAllExtensionsLite message =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"hello\")\n            .setExtension(\n                UnittestLite.optionalNestedEnumExtensionLite, TestAllTypesLite.NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                TestAllTypesLite.NestedMessage.newBuilder().setBb(7).build())\n            .build();\n\n    ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();\n    UnittestLite.registerAllExtensions(registry);\n\n    TestAllExtensionsLite copy =\n        TestAllExtensionsLite.parseFrom(message.toByteString().asReadOnlyByteBuffer(), registry);\n\n    assertEquals(message, copy);\n  }\n","date":"2019-04-06 07:39:18","endLine":2167,"groupId":"800","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseFromByteBuffer_extensions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/96/0b2037c1bad1f9bcd313819a2792728baa12b2.src","preCode":"  public void testParseFromByteBuffer_extensions() throws Exception {\n    TestAllExtensionsLite message =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"hello\")\n            .setExtension(\n                UnittestLite.optionalNestedEnumExtensionLite, TestAllTypesLite.NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                TestAllTypesLite.NestedMessage.newBuilder().setBb(7).build())\n            .build();\n\n    ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();\n    UnittestLite.registerAllExtensions(registry);\n\n    TestAllExtensionsLite copy =\n        TestAllExtensionsLite.parseFrom(message.toByteString().asReadOnlyByteBuffer(), registry);\n\n    assertEquals(message, copy);\n  }\n","realPath":"java/lite/src/test/java/com/google/protobuf/LiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":2148,"status":"B"}],"commitId":"a48a574f7e890436363ca8ac71d866252b216052","commitMessage":"@@@Down integrate to Github\n","date":"2019-04-06 07:39:18","modifiedFileCount":"20","status":"B","submitter":"Hao Nguyen"},{"authorTime":"2019-05-23 05:30:49","codes":[{"authorDate":"2019-05-23 05:30:49","commitOrder":2,"curCode":"  public void testToStringUnknownFields() throws Exception {\n    TestAllExtensionsLite messageWithExtensions =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"spam\")\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"eggs\")\n            .setExtension(UnittestLite.optionalNestedEnumExtensionLite, NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                NestedMessage.newBuilder().setBb(7).build())\n            .build();\n    TestAllExtensionsLite messageWithUnknownFields =\n        TestAllExtensionsLite.parseFrom(messageWithExtensions.toByteArray());\n    assertToStringEquals(\n        \"1: 123\\n18: \\\"\\\\b\\\\a\\\"\\n21: 3\\n44: \\\"spam\\\"\\n44: \\\"eggs\\\"\", messageWithUnknownFields);\n  }\n","date":"2019-05-23 05:30:49","endLine":1472,"groupId":"1087","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testToStringUnknownFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e3/7e2ca0da7ebd29e133935024c2e47048f06e56.src","preCode":"  public void testToStringUnknownFields() throws Exception {\n    TestAllExtensionsLite messageWithExtensions =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"spam\")\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"eggs\")\n            .setExtension(\n                UnittestLite.optionalNestedEnumExtensionLite, TestAllTypesLite.NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                TestAllTypesLite.NestedMessage.newBuilder().setBb(7).build())\n            .build();\n    TestAllExtensionsLite messageWithUnknownFields =\n        TestAllExtensionsLite.parseFrom(messageWithExtensions.toByteArray());\n    assertToStringEquals(\n        \"1: 123\\n18: \\\"\\\\b\\\\a\\\"\\n21: 3\\n44: \\\"spam\\\"\\n44: \\\"eggs\\\"\", messageWithUnknownFields);\n  }\n","realPath":"java/lite/src/test/java/com/google/protobuf/LiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1457,"status":"M"},{"authorDate":"2019-05-23 05:30:49","commitOrder":2,"curCode":"  public void testParseFromByteBuffer_extensions() throws Exception {\n    TestAllExtensionsLite message =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"hello\")\n            .setExtension(UnittestLite.optionalNestedEnumExtensionLite, NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                NestedMessage.newBuilder().setBb(7).build())\n            .build();\n\n    ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();\n    UnittestLite.registerAllExtensions(registry);\n\n    TestAllExtensionsLite copy =\n        TestAllExtensionsLite.parseFrom(message.toByteString().asReadOnlyByteBuffer(), registry);\n\n    assertEquals(message, copy);\n  }\n","date":"2019-05-23 05:30:49","endLine":2166,"groupId":"1861","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseFromByteBuffer_extensions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e3/7e2ca0da7ebd29e133935024c2e47048f06e56.src","preCode":"  public void testParseFromByteBuffer_extensions() throws Exception {\n    TestAllExtensionsLite message =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"hello\")\n            .setExtension(\n                UnittestLite.optionalNestedEnumExtensionLite, TestAllTypesLite.NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                TestAllTypesLite.NestedMessage.newBuilder().setBb(7).build())\n            .build();\n\n    ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();\n    UnittestLite.registerAllExtensions(registry);\n\n    TestAllExtensionsLite copy =\n        TestAllExtensionsLite.parseFrom(message.toByteString().asReadOnlyByteBuffer(), registry);\n\n    assertEquals(message, copy);\n  }\n","realPath":"java/lite/src/test/java/com/google/protobuf/LiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":2148,"status":"M"}],"commitId":"affe9c200abe49c4a4bb917e7889d21219601e79","commitMessage":"@@@Merge pull request #6161 from haon4/201905211601\n\nDown integrate to GitHub","date":"2019-05-23 05:30:49","modifiedFileCount":"4","status":"M","submitter":"Hao Nguyen"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2019-05-23 05:30:49","commitOrder":3,"curCode":"  public void testToStringUnknownFields() throws Exception {\n    TestAllExtensionsLite messageWithExtensions =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"spam\")\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"eggs\")\n            .setExtension(UnittestLite.optionalNestedEnumExtensionLite, NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                NestedMessage.newBuilder().setBb(7).build())\n            .build();\n    TestAllExtensionsLite messageWithUnknownFields =\n        TestAllExtensionsLite.parseFrom(messageWithExtensions.toByteArray());\n    assertToStringEquals(\n        \"1: 123\\n18: \\\"\\\\b\\\\a\\\"\\n21: 3\\n44: \\\"spam\\\"\\n44: \\\"eggs\\\"\", messageWithUnknownFields);\n  }\n","date":"2019-05-23 05:30:49","endLine":1472,"groupId":"1014","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testToStringUnknownFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e3/7e2ca0da7ebd29e133935024c2e47048f06e56.src","preCode":"  public void testToStringUnknownFields() throws Exception {\n    TestAllExtensionsLite messageWithExtensions =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"spam\")\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"eggs\")\n            .setExtension(UnittestLite.optionalNestedEnumExtensionLite, NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                NestedMessage.newBuilder().setBb(7).build())\n            .build();\n    TestAllExtensionsLite messageWithUnknownFields =\n        TestAllExtensionsLite.parseFrom(messageWithExtensions.toByteArray());\n    assertToStringEquals(\n        \"1: 123\\n18: \\\"\\\\b\\\\a\\\"\\n21: 3\\n44: \\\"spam\\\"\\n44: \\\"eggs\\\"\", messageWithUnknownFields);\n  }\n","realPath":"java/lite/src/test/java/com/google/protobuf/LiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":1457,"status":"N"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testParseFromByteBuffer_extensions() throws Exception {\n    TestAllExtensionsLite message =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"hello\")\n            .setExtension(UnittestLite.optionalNestedEnumExtensionLite, NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                NestedMessage.newBuilder().setBb(7).build())\n            .build();\n\n    ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();\n    UnittestLite.registerAllExtensions(registry);\n\n    TestAllExtensionsLite copy =\n        TestAllExtensionsLite.parseFrom(message.toByteString().asReadOnlyByteBuffer(), registry);\n\n    assertThat(message).isEqualTo(copy);\n  }\n","date":"2021-08-10 06:55:00","endLine":2430,"groupId":"1014","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testParseFromByteBuffer_extensions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/7c/bc764fb7aef6ea7d25ee4b2281113abd2dd612.src","preCode":"  public void testParseFromByteBuffer_extensions() throws Exception {\n    TestAllExtensionsLite message =\n        TestAllExtensionsLite.newBuilder()\n            .setExtension(UnittestLite.optionalInt32ExtensionLite, 123)\n            .addExtension(UnittestLite.repeatedStringExtensionLite, \"hello\")\n            .setExtension(UnittestLite.optionalNestedEnumExtensionLite, NestedEnum.BAZ)\n            .setExtension(\n                UnittestLite.optionalNestedMessageExtensionLite,\n                NestedMessage.newBuilder().setBb(7).build())\n            .build();\n\n    ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();\n    UnittestLite.registerAllExtensions(registry);\n\n    TestAllExtensionsLite copy =\n        TestAllExtensionsLite.parseFrom(message.toByteString().asReadOnlyByteBuffer(), registry);\n\n    assertEquals(message, copy);\n  }\n","realPath":"java/lite/src/test/java/com/google/protobuf/LiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":2412,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
