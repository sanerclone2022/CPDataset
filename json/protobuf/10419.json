[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2019-04-06 07:39:18","commitOrder":2,"curCode":"  private void testParseMessageSetWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_2)\n                    .setMessage(\n                        TestMessageSetExtension2.newBuilder().setStr(\"foo\").build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(UNKNOWN_TYPE_ID)\n                    .setMessage(ByteString.copyFromUtf8(\"bar\"))\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\n        \"foo\", messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr());\n  }\n","date":"2019-04-06 07:39:18","endLine":372,"groupId":"2128","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseMessageSetWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/a7/25d413ff5eca06f1ef0e7628a7c408d28fa733.src","preCode":"  private void testParseMessageSetWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_2)\n                    .setMessage(\n                        TestMessageSetExtension2.newBuilder().setStr(\"foo\").build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(UNKNOWN_TYPE_ID)\n                    .setMessage(ByteString.copyFromUtf8(\"bar\"))\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\n        \"foo\", messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  private void testParseMessageSetWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n      RawMessageSet.newBuilder()\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(TYPE_ID_1)\n            .setMessage(\n              TestMessageSetExtension1.newBuilder()\n                .setI(123)\n                .build().toByteString())\n            .build())\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(TYPE_ID_2)\n            .setMessage(\n              TestMessageSetExtension2.newBuilder()\n                .setStr(\"foo\")\n                .build().toByteString())\n            .build())\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(UNKNOWN_TYPE_ID)\n            .setMessage(ByteString.copyFromUtf8(\"bar\"))\n            .build())\n        .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet =\n      TestMessageSet.parseFrom(data, extensionRegistry);\n\n    assertEquals(123, messageSet.getExtension(\n      TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\"foo\", messageSet.getExtension(\n      TestMessageSetExtension2.messageSetExtension).getStr());\n\n    \r\n    \r\n    UnknownFieldSet unknownFields = messageSet.getUnknownFields();\n    assertEquals(1, unknownFields.asMap().size());\n    assertTrue(unknownFields.hasField(UNKNOWN_TYPE_ID));\n\n    UnknownFieldSet.Field field = unknownFields.getField(UNKNOWN_TYPE_ID);\n    assertEquals(1, field.getLengthDelimitedList().size());\n    assertEquals(\"bar\", field.getLengthDelimitedList().get(0).toStringUtf8());\n  }\n","date":"2016-01-14 03:22:18","endLine":449,"groupId":"2128","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseMessageSetWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/01/75005d2ca9f844cfc52305abbcab449cbd7eb1.src","preCode":"  private void testParseMessageSetWithFlag(boolean eagerParsing)\n      throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n      RawMessageSet.newBuilder()\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(TYPE_ID_1)\n            .setMessage(\n              TestMessageSetExtension1.newBuilder()\n                .setI(123)\n                .build().toByteString())\n            .build())\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(TYPE_ID_2)\n            .setMessage(\n              TestMessageSetExtension2.newBuilder()\n                .setStr(\"foo\")\n                .build().toByteString())\n            .build())\n        .addItem(\n          RawMessageSet.Item.newBuilder()\n            .setTypeId(UNKNOWN_TYPE_ID)\n            .setMessage(ByteString.copyFromUtf8(\"bar\"))\n            .build())\n        .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet =\n      TestMessageSet.parseFrom(data, extensionRegistry);\n\n    assertEquals(123, messageSet.getExtension(\n      TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\"foo\", messageSet.getExtension(\n      TestMessageSetExtension2.messageSetExtension).getStr());\n\n    \r\n    \r\n    UnknownFieldSet unknownFields = messageSet.getUnknownFields();\n    assertEquals(1, unknownFields.asMap().size());\n    assertTrue(unknownFields.hasField(UNKNOWN_TYPE_ID));\n\n    UnknownFieldSet.Field field = unknownFields.getField(UNKNOWN_TYPE_ID);\n    assertEquals(1, field.getLengthDelimitedList().size());\n    assertEquals(\"bar\", field.getLengthDelimitedList().get(0).toStringUtf8());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":396,"status":"NB"}],"commitId":"a48a574f7e890436363ca8ac71d866252b216052","commitMessage":"@@@Down integrate to Github\n","date":"2019-04-06 07:39:18","modifiedFileCount":"20","status":"M","submitter":"Hao Nguyen"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  private void testParseMessageSetWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_2)\n                    .setMessage(\n                        TestMessageSetExtension2.newBuilder().setStr(\"foo\").build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(UNKNOWN_TYPE_ID)\n                    .setMessage(ByteString.copyFromUtf8(\"bar\"))\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n\n    assertThat(messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI())\n        .isEqualTo(123);\n    assertThat(messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr())\n        .isEqualTo(\"foo\");\n  }\n","date":"2021-08-10 06:55:00","endLine":396,"groupId":"10419","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testParseMessageSetWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/cb/ed9fcff98849fe4bfbd4d0b3c290335616bc24.src","preCode":"  private void testParseMessageSetWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_2)\n                    .setMessage(\n                        TestMessageSetExtension2.newBuilder().setStr(\"foo\").build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(UNKNOWN_TYPE_ID)\n                    .setMessage(ByteString.copyFromUtf8(\"bar\"))\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\n        \"foo\", messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatLiteTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  private void testParseMessageSetWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_2)\n                    .setMessage(\n                        TestMessageSetExtension2.newBuilder().setStr(\"foo\").build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(UNKNOWN_TYPE_ID)\n                    .setMessage(ByteString.copyFromUtf8(\"bar\"))\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n\n    assertThat(messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI())\n        .isEqualTo(123);\n    assertThat(messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr())\n        .isEqualTo(\"foo\");\n\n    \r\n    \r\n    UnknownFieldSet unknownFields = messageSet.getUnknownFields();\n    assertThat(unknownFields.asMap()).hasSize(1);\n    assertThat(unknownFields.hasField(UNKNOWN_TYPE_ID)).isTrue();\n\n    UnknownFieldSet.Field field = unknownFields.getField(UNKNOWN_TYPE_ID);\n    assertThat(field.getLengthDelimitedList()).hasSize(1);\n    assertThat(field.getLengthDelimitedList().get(0).toStringUtf8()).isEqualTo(\"bar\");\n  }\n","date":"2021-08-10 06:55:00","endLine":405,"groupId":"10419","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testParseMessageSetWithFlag","params":"(booleaneagerParsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/e0/72eb8fd2cdb06fdf0424725940b96d8350f87d.src","preCode":"  private void testParseMessageSetWithFlag(boolean eagerParsing) throws Exception {\n    ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing);\n    ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();\n    extensionRegistry.add(TestMessageSetExtension1.messageSetExtension);\n    extensionRegistry.add(TestMessageSetExtension2.messageSetExtension);\n\n    \r\n    RawMessageSet raw =\n        RawMessageSet.newBuilder()\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_1)\n                    .setMessage(\n                        TestMessageSetExtension1.newBuilder().setI(123).build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(TYPE_ID_2)\n                    .setMessage(\n                        TestMessageSetExtension2.newBuilder().setStr(\"foo\").build().toByteString())\n                    .build())\n            .addItem(\n                RawMessageSet.Item.newBuilder()\n                    .setTypeId(UNKNOWN_TYPE_ID)\n                    .setMessage(ByteString.copyFromUtf8(\"bar\"))\n                    .build())\n            .build();\n\n    ByteString data = raw.toByteString();\n\n    \r\n    TestMessageSet messageSet = TestMessageSet.parseFrom(data, extensionRegistry);\n\n    assertEquals(123, messageSet.getExtension(TestMessageSetExtension1.messageSetExtension).getI());\n    assertEquals(\n        \"foo\", messageSet.getExtension(TestMessageSetExtension2.messageSetExtension).getStr());\n\n    \r\n    \r\n    UnknownFieldSet unknownFields = messageSet.getUnknownFields();\n    assertEquals(1, unknownFields.asMap().size());\n    assertTrue(unknownFields.hasField(UNKNOWN_TYPE_ID));\n\n    UnknownFieldSet.Field field = unknownFields.getField(UNKNOWN_TYPE_ID);\n    assertEquals(1, field.getLengthDelimitedList().size());\n    assertEquals(\"bar\", field.getLengthDelimitedList().get(0).toStringUtf8());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/WireFormatTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
