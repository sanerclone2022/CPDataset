[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertEquals(newMap(1, 2), builder.build().getInt32ToInt32Field());\n    try {\n      intMap.put(2, 3);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, 2), builder.getInt32ToInt32Field());\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertEquals(newMap(1, 2, 2, 3), builder.getInt32ToInt32Field());\n\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.build().getInt32ToEnumField());\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.getInt32ToEnumField());\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertEquals(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO),\n        builder.getInt32ToEnumField());\n    \n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertEquals(newMap(1, \"1\"), builder.build().getInt32ToStringField());\n    try {\n      stringMap.put(2, \"2\");\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, \"1\"), builder.getInt32ToStringField());\n    builder.getMutableInt32ToStringField().put(2, \"2\");\n    assertEquals(\n        newMap(1, \"1\", 2, \"2\"),\n        builder.getInt32ToStringField());\n    \n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.build().getInt32ToMessageField());\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n    builder.getMutableInt32ToMessageField().put(2, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n  }\n","date":"2016-01-14 03:22:18","endLine":254,"groupId":"1527","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMutableMapLifecycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1f/a3cbdbae7748cbdc0c082229b7c3e75fcef2cb.src","preCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertEquals(newMap(1, 2), builder.build().getInt32ToInt32Field());\n    try {\n      intMap.put(2, 3);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, 2), builder.getInt32ToInt32Field());\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertEquals(newMap(1, 2, 2, 3), builder.getInt32ToInt32Field());\n\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.build().getInt32ToEnumField());\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.getInt32ToEnumField());\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertEquals(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO),\n        builder.getInt32ToEnumField());\n    \n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertEquals(newMap(1, \"1\"), builder.build().getInt32ToStringField());\n    try {\n      stringMap.put(2, \"2\");\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, \"1\"), builder.getInt32ToStringField());\n    builder.getMutableInt32ToStringField().put(2, \"2\");\n    assertEquals(\n        newMap(1, \"1\", 2, \"2\"),\n        builder.getInt32ToStringField());\n    \n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.build().getInt32ToMessageField());\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n    builder.getMutableInt32ToMessageField().put(2, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapForProto2Test.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertEquals(newMap(1, 2), builder.build().getInt32ToInt32Field());\n    try {\n      intMap.put(2, 3);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, 2), builder.getInt32ToInt32Field());\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertEquals(newMap(1, 2, 2, 3), builder.getInt32ToInt32Field());\n\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.build().getInt32ToEnumField());\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.getInt32ToEnumField());\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertEquals(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO),\n        builder.getInt32ToEnumField());\n    \n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertEquals(newMap(1, \"1\"), builder.build().getInt32ToStringField());\n    try {\n      stringMap.put(2, \"2\");\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, \"1\"), builder.getInt32ToStringField());\n    builder.getMutableInt32ToStringField().put(2, \"2\");\n    assertEquals(\n        newMap(1, \"1\", 2, \"2\"),\n        builder.getInt32ToStringField());\n    \n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.build().getInt32ToMessageField());\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n    builder.getMutableInt32ToMessageField().put(2, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n  }\n","date":"2016-01-14 03:22:18","endLine":255,"groupId":"1527","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMutableMapLifecycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/0e/5c12840c1630c4dc52a30c3be6173463e3befb.src","preCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertEquals(newMap(1, 2), builder.build().getInt32ToInt32Field());\n    try {\n      intMap.put(2, 3);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, 2), builder.getInt32ToInt32Field());\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertEquals(newMap(1, 2, 2, 3), builder.getInt32ToInt32Field());\n\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.build().getInt32ToEnumField());\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.getInt32ToEnumField());\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertEquals(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO),\n        builder.getInt32ToEnumField());\n    \n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertEquals(newMap(1, \"1\"), builder.build().getInt32ToStringField());\n    try {\n      stringMap.put(2, \"2\");\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, \"1\"), builder.getInt32ToStringField());\n    builder.getMutableInt32ToStringField().put(2, \"2\");\n    assertEquals(\n        newMap(1, \"1\", 2, \"2\"),\n        builder.getInt32ToStringField());\n    \n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.build().getInt32ToMessageField());\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n    builder.getMutableInt32ToMessageField().put(2, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2016-11-24 03:26:31","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":2,"curCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertEquals(newMap(1, 2), builder.build().getInt32ToInt32Field());\n    try {\n      intMap.put(2, 3);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, 2), builder.getInt32ToInt32Field());\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertEquals(newMap(1, 2, 2, 3), builder.getInt32ToInt32Field());\n\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.build().getInt32ToEnumField());\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.getInt32ToEnumField());\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertEquals(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO),\n        builder.getInt32ToEnumField());\n    \n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertEquals(newMap(1, \"1\"), builder.build().getInt32ToStringField());\n    try {\n      stringMap.put(2, \"2\");\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, \"1\"), builder.getInt32ToStringField());\n    builder.getMutableInt32ToStringField().put(2, \"2\");\n    assertEquals(\n        newMap(1, \"1\", 2, \"2\"),\n        builder.getInt32ToStringField());\n    \n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.build().getInt32ToMessageField());\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n    builder.getMutableInt32ToMessageField().put(2, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n  }\n","date":"2016-01-14 03:22:18","endLine":254,"groupId":"1527","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMutableMapLifecycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/1f/a3cbdbae7748cbdc0c082229b7c3e75fcef2cb.src","preCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertEquals(newMap(1, 2), builder.build().getInt32ToInt32Field());\n    try {\n      intMap.put(2, 3);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, 2), builder.getInt32ToInt32Field());\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertEquals(newMap(1, 2, 2, 3), builder.getInt32ToInt32Field());\n\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.build().getInt32ToEnumField());\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.getInt32ToEnumField());\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertEquals(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO),\n        builder.getInt32ToEnumField());\n    \n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertEquals(newMap(1, \"1\"), builder.build().getInt32ToStringField());\n    try {\n      stringMap.put(2, \"2\");\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, \"1\"), builder.getInt32ToStringField());\n    builder.getMutableInt32ToStringField().put(2, \"2\");\n    assertEquals(\n        newMap(1, \"1\", 2, \"2\"),\n        builder.getInt32ToStringField());\n    \n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.build().getInt32ToMessageField());\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n    builder.getMutableInt32ToMessageField().put(2, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapForProto2Test.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"N"},{"authorDate":"2016-11-24 03:26:31","commitOrder":2,"curCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertEquals(newMap(1, 2), builder.build().getInt32ToInt32Field());\n    try {\n      intMap.put(2, 3);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, 2), builder.getInt32ToInt32Field());\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertEquals(newMap(1, 2, 2, 3), builder.getInt32ToInt32Field());\n  \r\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.build().getInt32ToEnumField());\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.getInt32ToEnumField());\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertEquals(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO),\n        builder.getInt32ToEnumField());\n  \r\n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertEquals(newMap(1, \"1\"), builder.build().getInt32ToStringField());\n    try {\n      stringMap.put(2, \"2\");\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, \"1\"), builder.getInt32ToStringField());\n    builder.putInt32ToStringField(2, \"2\");\n    assertEquals(\n        newMap(1, \"1\", 2, \"2\"),\n        builder.getInt32ToStringField());\n  \r\n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.build().getInt32ToMessageField());\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n    builder.putInt32ToMessageField(2, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n  }\n","date":"2016-11-24 03:26:31","endLine":390,"groupId":"1527","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMutableMapLifecycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/81/e951ccf7e1b6d6a54ae9306ad40ddbf74d2cfd.src","preCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertEquals(newMap(1, 2), builder.build().getInt32ToInt32Field());\n    try {\n      intMap.put(2, 3);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, 2), builder.getInt32ToInt32Field());\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertEquals(newMap(1, 2, 2, 3), builder.getInt32ToInt32Field());\n\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.build().getInt32ToEnumField());\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.getInt32ToEnumField());\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertEquals(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO),\n        builder.getInt32ToEnumField());\n\n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertEquals(newMap(1, \"1\"), builder.build().getInt32ToStringField());\n    try {\n      stringMap.put(2, \"2\");\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, \"1\"), builder.getInt32ToStringField());\n    builder.getMutableInt32ToStringField().put(2, \"2\");\n    assertEquals(\n        newMap(1, \"1\", 2, \"2\"),\n        builder.getInt32ToStringField());\n\n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.build().getInt32ToMessageField());\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n    builder.getMutableInt32ToMessageField().put(2, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"M"}],"commitId":"39f9b43219bc5718b659ed72a2130a7b2ce66108","commitMessage":"@@@Merge pull request #2403 from google/down-integrate-with-msvc-fix\n\nIntegrated internal changes from Google","date":"2016-11-24 03:26:31","modifiedFileCount":"26","status":"M","submitter":"Adam Cozzette"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertThat(builder.build().getInt32ToInt32Field()).isEqualTo(newMap(1, 2));\n    try {\n      intMap.put(2, 3);\n      assertWithMessage(\"expected exception\").fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertThat(builder.getInt32ToInt32Field()).isEqualTo(newMap(1, 2));\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertThat(builder.getInt32ToInt32Field()).isEqualTo(newMap(1, 2, 2, 3));\n  \r\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertThat(builder.build().getInt32ToEnumField())\n        .isEqualTo(newMap(1, TestMap.EnumValue.BAR));\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      assertWithMessage(\"expected exception\").fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertThat(builder.getInt32ToEnumField()).isEqualTo(newMap(1, TestMap.EnumValue.BAR));\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertThat(builder.getInt32ToEnumField())\n            .isEqualTo(newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO));\n  \r\n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertThat(builder.build().getInt32ToStringField()).isEqualTo(newMap(1, \"1\"));\n    try {\n      stringMap.put(2, \"2\");\n      assertWithMessage(\"expected exception\").fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertThat(builder.getInt32ToStringField()).isEqualTo(newMap(1, \"1\"));\n    builder.getMutableInt32ToStringField().put(2, \"2\");\n    assertThat(builder.getInt32ToStringField()).isEqualTo(newMap(1, \"1\", 2, \"2\"));\n  \r\n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertThat(builder.build().getInt32ToMessageField())\n        .isEqualTo(newMap(1, TestMap.MessageValue.getDefaultInstance()));\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      assertWithMessage(\"expected exception\").fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertThat(builder.getInt32ToMessageField())\n        .isEqualTo(newMap(1, TestMap.MessageValue.getDefaultInstance()));\n    builder.getMutableInt32ToMessageField().put(2, TestMap.MessageValue.getDefaultInstance());\n    assertThat(builder.getInt32ToMessageField()).isEqualTo(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()));\n  }\n","date":"2021-08-10 06:55:00","endLine":384,"groupId":"10151","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMutableMapLifecycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/82/1b93cf28a62db01be87b4e44deabda15641cb3.src","preCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertEquals(newMap(1, 2), builder.build().getInt32ToInt32Field());\n    try {\n      intMap.put(2, 3);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, 2), builder.getInt32ToInt32Field());\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertEquals(newMap(1, 2, 2, 3), builder.getInt32ToInt32Field());\n  \r\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.build().getInt32ToEnumField());\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.getInt32ToEnumField());\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertEquals(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO),\n        builder.getInt32ToEnumField());\n  \r\n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertEquals(newMap(1, \"1\"), builder.build().getInt32ToStringField());\n    try {\n      stringMap.put(2, \"2\");\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, \"1\"), builder.getInt32ToStringField());\n    builder.getMutableInt32ToStringField().put(2, \"2\");\n    assertEquals(\n        newMap(1, \"1\", 2, \"2\"),\n        builder.getInt32ToStringField());\n  \r\n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.build().getInt32ToMessageField());\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n    builder.getMutableInt32ToMessageField().put(2, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapForProto2Test.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":3,"curCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertThat(builder.build().getInt32ToInt32Field()).isEqualTo(newMap(1, 2));\n    try {\n      intMap.put(2, 3);\n      assertWithMessage(\"expected exception\").fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertThat(builder.getInt32ToInt32Field()).isEqualTo(newMap(1, 2));\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertThat(builder.getInt32ToInt32Field()).isEqualTo(newMap(1, 2, 2, 3));\n  \r\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertThat(builder.build().getInt32ToEnumField())\n        .isEqualTo(newMap(1, TestMap.EnumValue.BAR));\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      assertWithMessage(\"expected exception\").fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertThat(builder.getInt32ToEnumField()).isEqualTo(newMap(1, TestMap.EnumValue.BAR));\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertThat(builder.getInt32ToEnumField()).isEqualTo(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO));\n  \r\n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertThat(builder.build().getInt32ToStringField()).isEqualTo(newMap(1, \"1\"));\n    try {\n      stringMap.put(2, \"2\");\n      assertWithMessage(\"expected exception\").fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertThat(builder.getInt32ToStringField()).isEqualTo(newMap(1, \"1\"));\n    builder.putInt32ToStringField(2, \"2\");\n    assertThat(builder.getInt32ToStringField()).isEqualTo(newMap(1, \"1\", 2, \"2\"));\n  \r\n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertThat( builder.build().getInt32ToMessageField())\n        .isEqualTo(newMap(1, TestMap.MessageValue.getDefaultInstance()));\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      assertWithMessage(\"expected exception\").fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertThat(builder.getInt32ToMessageField())\n        .isEqualTo(newMap(1, TestMap.MessageValue.getDefaultInstance()));\n    builder.putInt32ToMessageField(2, TestMap.MessageValue.getDefaultInstance());\n    assertThat(builder.getInt32ToMessageField()).isEqualTo(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()));\n  }\n","date":"2021-08-10 06:55:00","endLine":383,"groupId":"10151","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMutableMapLifecycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/cc/7a1217dbd78eb4e65fd6d6e9ded575285fe7f4.src","preCode":"  public void testMutableMapLifecycle() {\n    TestMap.Builder builder = TestMap.newBuilder();\n    Map<Integer, Integer> intMap = builder.getMutableInt32ToInt32Field();\n    intMap.put(1, 2);\n    assertEquals(newMap(1, 2), builder.build().getInt32ToInt32Field());\n    try {\n      intMap.put(2, 3);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, 2), builder.getInt32ToInt32Field());\n    builder.getMutableInt32ToInt32Field().put(2, 3);\n    assertEquals(newMap(1, 2, 2, 3), builder.getInt32ToInt32Field());\n  \r\n    Map<Integer, TestMap.EnumValue> enumMap = builder.getMutableInt32ToEnumField();\n    enumMap.put(1, TestMap.EnumValue.BAR);\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.build().getInt32ToEnumField());\n    try {\n      enumMap.put(2, TestMap.EnumValue.FOO);\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.EnumValue.BAR), builder.getInt32ToEnumField());\n    builder.getMutableInt32ToEnumField().put(2, TestMap.EnumValue.FOO);\n    assertEquals(\n        newMap(1, TestMap.EnumValue.BAR, 2, TestMap.EnumValue.FOO),\n        builder.getInt32ToEnumField());\n  \r\n    Map<Integer, String> stringMap = builder.getMutableInt32ToStringField();\n    stringMap.put(1, \"1\");\n    assertEquals(newMap(1, \"1\"), builder.build().getInt32ToStringField());\n    try {\n      stringMap.put(2, \"2\");\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, \"1\"), builder.getInt32ToStringField());\n    builder.putInt32ToStringField(2, \"2\");\n    assertEquals(\n        newMap(1, \"1\", 2, \"2\"),\n        builder.getInt32ToStringField());\n  \r\n    Map<Integer, TestMap.MessageValue> messageMap = builder.getMutableInt32ToMessageField();\n    messageMap.put(1, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.build().getInt32ToMessageField());\n    try {\n      messageMap.put(2, TestMap.MessageValue.getDefaultInstance());\n      fail();\n    } catch (UnsupportedOperationException e) {\n      \r\n    }\n    assertEquals(newMap(1, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n    builder.putInt32ToMessageField(2, TestMap.MessageValue.getDefaultInstance());\n    assertEquals(\n        newMap(1, TestMap.MessageValue.getDefaultInstance(),\n            2, TestMap.MessageValue.getDefaultInstance()),\n        builder.getInt32ToMessageField());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/MapTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":324,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
