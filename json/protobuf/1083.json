[{"authorTime":"2016-01-14 03:22:18","codes":[{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testIsInitialized() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n\n    \r\n    UnittestProto.TestRequired.Builder proto2Builder =\n        builder.getOptionalProto2MessageBuilder();\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n\n    \r\n    proto2Builder = builder.getOneofProto2MessageBuilder();\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n\n    \r\n    proto2Builder = builder.addRepeatedProto2MessageBuilder();\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n  }\n","date":"2016-01-14 03:22:18","endLine":341,"groupId":"150","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsInitialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/ea/eec0b8aecc13073d05f89d9f587b0f21edc336.src","preCode":"  public void testIsInitialized() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n\n    \r\n    UnittestProto.TestRequired.Builder proto2Builder =\n        builder.getOptionalProto2MessageBuilder();\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n\n    \r\n    proto2Builder = builder.getOneofProto2MessageBuilder();\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n\n    \r\n    proto2Builder = builder.addRepeatedProto2MessageBuilder();\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/FieldPresenceTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"B"},{"authorDate":"2016-01-14 03:22:18","commitOrder":1,"curCode":"  public void testUninitializedExtensionInOptimizedForSize()\n      throws Exception {\n    TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();\n    builder.setExtension(TestOptimizedForSize.testExtension2,\n        TestRequiredOptimizedForSize.newBuilder().buildPartial());\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    builder = TestOptimizedForSize.newBuilder();\n    builder.setExtension(TestOptimizedForSize.testExtension2,\n        TestRequiredOptimizedForSize.newBuilder().setX(10).buildPartial());\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n  }\n","date":"2016-01-14 03:22:18","endLine":834,"groupId":"679","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUninitializedExtensionInOptimizedForSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/70/812b953f57ff7335eb7c6e183eda8b414e8b44.src","preCode":"  public void testUninitializedExtensionInOptimizedForSize()\n      throws Exception {\n    TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();\n    builder.setExtension(TestOptimizedForSize.testExtension2,\n        TestRequiredOptimizedForSize.newBuilder().buildPartial());\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    builder = TestOptimizedForSize.newBuilder();\n    builder.setExtension(TestOptimizedForSize.testExtension2,\n        TestRequiredOptimizedForSize.newBuilder().setX(10).buildPartial());\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/GeneratedMessageTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":821,"status":"B"}],"commitId":"b6ef4015d7eccc6f63dab3dc46e76f9f9f2217ab","commitMessage":"@@@Merge pull request #1121 from nmittler/restructure\n\nRestructuring protobuf to multiple modules","date":"2016-01-14 03:22:18","modifiedFileCount":"0","status":"B","submitter":"Feng Xiao"},{"authorTime":"2021-08-10 06:55:00","codes":[{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testIsInitialized() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n\n    \r\n    UnittestProto.TestRequired.Builder proto2Builder = builder.getOptionalProto2MessageBuilder();\n    assertThat(builder.isInitialized()).isFalse();\n    assertThat(builder.buildPartial().isInitialized()).isFalse();\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertThat(builder.isInitialized()).isTrue();\n    assertThat(builder.buildPartial().isInitialized()).isTrue();\n\n    \r\n    proto2Builder = builder.getOneofProto2MessageBuilder();\n    assertThat(builder.isInitialized()).isFalse();\n    assertThat(builder.buildPartial().isInitialized()).isFalse();\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertThat(builder.isInitialized()).isTrue();\n    assertThat(builder.buildPartial().isInitialized()).isTrue();\n\n    \r\n    proto2Builder = builder.addRepeatedProto2MessageBuilder();\n    assertThat(builder.isInitialized()).isFalse();\n    assertThat(builder.buildPartial().isInitialized()).isFalse();\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertThat(builder.isInitialized()).isTrue();\n    assertThat(builder.buildPartial().isInitialized()).isTrue();\n  }\n","date":"2021-08-10 06:55:00","endLine":502,"groupId":"1083","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testIsInitialized","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/c4/830af392c2e56a6813114f184f7113711487a5.src","preCode":"  public void testIsInitialized() throws Exception {\n    TestAllTypes.Builder builder = TestAllTypes.newBuilder();\n\n    \r\n    UnittestProto.TestRequired.Builder proto2Builder = builder.getOptionalProto2MessageBuilder();\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n\n    \r\n    proto2Builder = builder.getOneofProto2MessageBuilder();\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n\n    \r\n    proto2Builder = builder.addRepeatedProto2MessageBuilder();\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    proto2Builder.setA(1).setB(2).setC(3);\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/FieldPresenceTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":473,"status":"M"},{"authorDate":"2021-08-10 06:55:00","commitOrder":2,"curCode":"  public void testUninitializedExtensionInOptimizedForSize() throws Exception {\n    TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();\n    builder.setExtension(\n        TestOptimizedForSize.testExtension2,\n        TestRequiredOptimizedForSize.newBuilder().buildPartial());\n    assertThat(builder.isInitialized()).isFalse();\n    assertThat(builder.buildPartial().isInitialized()).isFalse();\n\n    builder = TestOptimizedForSize.newBuilder();\n    builder.setExtension(\n        TestOptimizedForSize.testExtension2,\n        TestRequiredOptimizedForSize.newBuilder().setX(10).buildPartial());\n    assertThat(builder.isInitialized()).isTrue();\n    assertThat(builder.buildPartial().isInitialized()).isTrue();\n  }\n","date":"2021-08-10 06:55:00","endLine":995,"groupId":"1083","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testUninitializedExtensionInOptimizedForSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-protobuf-10-0.7/blobInfo/CC_OUT/blobs/fb/ba612bd2a86e442aceac2543c138810d348cc0.src","preCode":"  public void testUninitializedExtensionInOptimizedForSize() throws Exception {\n    TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();\n    builder.setExtension(\n        TestOptimizedForSize.testExtension2,\n        TestRequiredOptimizedForSize.newBuilder().buildPartial());\n    assertFalse(builder.isInitialized());\n    assertFalse(builder.buildPartial().isInitialized());\n\n    builder = TestOptimizedForSize.newBuilder();\n    builder.setExtension(\n        TestOptimizedForSize.testExtension2,\n        TestRequiredOptimizedForSize.newBuilder().setX(10).buildPartial());\n    assertTrue(builder.isInitialized());\n    assertTrue(builder.buildPartial().isInitialized());\n  }\n","realPath":"java/core/src/test/java/com/google/protobuf/GeneratedMessageTest.java","repoName":"protobuf","snippetEndLine":0,"snippetStartLine":0,"startLine":981,"status":"M"}],"commitId":"8a3c4948a49d3b38effea499fd9dee66f28cb0c4","commitMessage":"@@@Merge pull request #8858 from acozzette/sync-stage\n\nIntegrate from Piper for C++.  Java.  and Python","date":"2021-08-10 06:55:00","modifiedFileCount":"84","status":"M","submitter":"Adam Cozzette"}]
