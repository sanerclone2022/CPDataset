[{"authorTime":"2018-10-05 02:25:08","codes":[{"authorDate":"2018-10-05 02:25:08","commitOrder":1,"curCode":"  static void addOrUpdateWorkflowJobUserContentMap(final HelixPropertyStore<ZNRecord> propertyStore,\n      String workflowJobResource, final Map<String, String> contentToAddOrUpdate) {\n    if (workflowJobResource == null) {\n      throw new IllegalArgumentException(\"workflowJobResource must be not null when adding workflow / job user content\");\n    }\n    String path = Joiner.on(\"/\")\n        .join(TaskConstants.REBALANCER_CONTEXT_ROOT, workflowJobResource, USER_CONTENT_NODE);\n\n    propertyStore.update(path, new DataUpdater<ZNRecord>() {\n      @Override\n      public ZNRecord update(ZNRecord znRecord) {\n        znRecord.getSimpleFields().putAll(contentToAddOrUpdate);\n        return znRecord;\n      }\n    }, AccessOption.PERSISTENT);\n  }\n","date":"2018-11-01 05:03:37","endLine":369,"groupId":"2147","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addOrUpdateWorkflowJobUserContentMap","params":"(finalHelixPropertyStore<ZNRecord>propertyStore@StringworkflowJobResource@finalMap<String@String>contentToAddOrUpdate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/37/9026d5f190e4234dd4508328d56f3a033495eb.src","preCode":"  static void addOrUpdateWorkflowJobUserContentMap(final HelixPropertyStore<ZNRecord> propertyStore,\n      String workflowJobResource, final Map<String, String> contentToAddOrUpdate) {\n    if (workflowJobResource == null) {\n      throw new IllegalArgumentException(\"workflowJobResource must be not null when adding workflow / job user content\");\n    }\n    String path = Joiner.on(\"/\")\n        .join(TaskConstants.REBALANCER_CONTEXT_ROOT, workflowJobResource, USER_CONTENT_NODE);\n\n    propertyStore.update(path, new DataUpdater<ZNRecord>() {\n      @Override\n      public ZNRecord update(ZNRecord znRecord) {\n        znRecord.getSimpleFields().putAll(contentToAddOrUpdate);\n        return znRecord;\n      }\n    }, AccessOption.PERSISTENT);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/task/TaskUtil.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":354,"status":"B"},{"authorDate":"2018-10-05 02:25:08","commitOrder":1,"curCode":"  static void addOrUpdateTaskUserContentMap(final HelixPropertyStore<ZNRecord> propertyStore,\n      final String job, final String task, final Map<String, String> contentToAddOrUpdate) {\n    if (job == null || task == null) {\n      throw new IllegalArgumentException(\"job and task must be not null when adding task user content\");\n    }\n    String path =\n        Joiner.on(\"/\").join(TaskConstants.REBALANCER_CONTEXT_ROOT, job, USER_CONTENT_NODE);\n\n    propertyStore.update(path, new DataUpdater<ZNRecord>() {\n      @Override\n      public ZNRecord update(ZNRecord znRecord) {\n        if (znRecord.getMapField(task) == null) {\n          znRecord.setMapField(task, new HashMap<String, String>());\n        }\n        znRecord.getMapField(task).putAll(contentToAddOrUpdate);\n        return znRecord;\n      }\n    }, AccessOption.PERSISTENT);\n  }\n","date":"2018-11-01 05:03:37","endLine":434,"groupId":"2671","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addOrUpdateTaskUserContentMap","params":"(finalHelixPropertyStore<ZNRecord>propertyStore@finalStringjob@finalStringtask@finalMap<String@String>contentToAddOrUpdate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/37/9026d5f190e4234dd4508328d56f3a033495eb.src","preCode":"  static void addOrUpdateTaskUserContentMap(final HelixPropertyStore<ZNRecord> propertyStore,\n      final String job, final String task, final Map<String, String> contentToAddOrUpdate) {\n    if (job == null || task == null) {\n      throw new IllegalArgumentException(\"job and task must be not null when adding task user content\");\n    }\n    String path =\n        Joiner.on(\"/\").join(TaskConstants.REBALANCER_CONTEXT_ROOT, job, USER_CONTENT_NODE);\n\n    propertyStore.update(path, new DataUpdater<ZNRecord>() {\n      @Override\n      public ZNRecord update(ZNRecord znRecord) {\n        if (znRecord.getMapField(task) == null) {\n          znRecord.setMapField(task, new HashMap<String, String>());\n        }\n        znRecord.getMapField(task).putAll(contentToAddOrUpdate);\n        return znRecord;\n      }\n    }, AccessOption.PERSISTENT);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/task/TaskUtil.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":416,"status":"B"}],"commitId":"b235c4ee5a82c5970d29e839317ea242813a58bc","commitMessage":"@@@[HELIX-775] consolidate user content related apis for task driver\n","date":"2018-11-01 05:03:37","modifiedFileCount":"3","status":"B","submitter":"Harry Zhang"},{"authorTime":"2019-03-29 03:26:58","codes":[{"authorDate":"2019-03-29 03:26:58","commitOrder":2,"curCode":"  static void addOrUpdateWorkflowJobUserContentMap(final HelixPropertyStore<ZNRecord> propertyStore,\n      String workflowJobResource, final Map<String, String> contentToAddOrUpdate) {\n    if (workflowJobResource == null) {\n      throw new IllegalArgumentException(\n          \"workflowJobResource must be not null when adding workflow / job user content\");\n    }\n    String path = Joiner.on(\"/\").join(TaskConstants.REBALANCER_CONTEXT_ROOT, workflowJobResource,\n        USER_CONTENT_NODE);\n\n    if (!propertyStore.update(path, new DataUpdater<ZNRecord>() {\n      @Override\n      public ZNRecord update(ZNRecord znRecord) {\n        if (znRecord == null) {\n          \r\n          \r\n          znRecord = new ZNRecord(new ZNRecord(TaskUtil.USER_CONTENT_NODE));\n        }\n        znRecord.getSimpleFields().putAll(contentToAddOrUpdate);\n        return znRecord;\n      }\n    }, AccessOption.PERSISTENT)) {\n      LOG.error(\"Failed to update the UserContentStore for {}\", workflowJobResource);\n    }\n  }\n","date":"2019-03-29 03:26:58","endLine":389,"groupId":"10721","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addOrUpdateWorkflowJobUserContentMap","params":"(finalHelixPropertyStore<ZNRecord>propertyStore@StringworkflowJobResource@finalMap<String@String>contentToAddOrUpdate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/45/6520939e45c6bb67d618b903835e1ad1cc6dcc.src","preCode":"  static void addOrUpdateWorkflowJobUserContentMap(final HelixPropertyStore<ZNRecord> propertyStore,\n      String workflowJobResource, final Map<String, String> contentToAddOrUpdate) {\n    if (workflowJobResource == null) {\n      throw new IllegalArgumentException(\"workflowJobResource must be not null when adding workflow / job user content\");\n    }\n    String path = Joiner.on(\"/\")\n        .join(TaskConstants.REBALANCER_CONTEXT_ROOT, workflowJobResource, USER_CONTENT_NODE);\n\n    propertyStore.update(path, new DataUpdater<ZNRecord>() {\n      @Override\n      public ZNRecord update(ZNRecord znRecord) {\n        znRecord.getSimpleFields().putAll(contentToAddOrUpdate);\n        return znRecord;\n      }\n    }, AccessOption.PERSISTENT);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/task/TaskUtil.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":366,"status":"M"},{"authorDate":"2019-03-29 03:26:58","commitOrder":2,"curCode":"  static void addOrUpdateTaskUserContentMap(final HelixPropertyStore<ZNRecord> propertyStore,\n      final String job, final String task, final Map<String, String> contentToAddOrUpdate) {\n    if (job == null || task == null) {\n      throw new IllegalArgumentException(\"job and task must be not null when adding task user content\");\n    }\n    String path =\n        Joiner.on(\"/\").join(TaskConstants.REBALANCER_CONTEXT_ROOT, job, USER_CONTENT_NODE);\n\n    if (!propertyStore.update(path, new DataUpdater<ZNRecord>() {\n      @Override\n      public ZNRecord update(ZNRecord znRecord) {\n        if (znRecord == null) {\n          \r\n          \r\n          znRecord = new ZNRecord(new ZNRecord(TaskUtil.USER_CONTENT_NODE));\n        }\n        if (znRecord.getMapField(task) == null) {\n          znRecord.setMapField(task, new HashMap<String, String>());\n        }\n        znRecord.getMapField(task).putAll(contentToAddOrUpdate);\n        return znRecord;\n      }\n    }, AccessOption.PERSISTENT)) {\n      LOG.error(\"Failed to update the task UserContentStore for task {} in job {}\", task, job);\n    }\n  }\n","date":"2019-03-29 03:26:58","endLine":461,"groupId":"10721","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addOrUpdateTaskUserContentMap","params":"(finalHelixPropertyStore<ZNRecord>propertyStore@finalStringjob@finalStringtask@finalMap<String@String>contentToAddOrUpdate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/45/6520939e45c6bb67d618b903835e1ad1cc6dcc.src","preCode":"  static void addOrUpdateTaskUserContentMap(final HelixPropertyStore<ZNRecord> propertyStore,\n      final String job, final String task, final Map<String, String> contentToAddOrUpdate) {\n    if (job == null || task == null) {\n      throw new IllegalArgumentException(\"job and task must be not null when adding task user content\");\n    }\n    String path =\n        Joiner.on(\"/\").join(TaskConstants.REBALANCER_CONTEXT_ROOT, job, USER_CONTENT_NODE);\n\n    propertyStore.update(path, new DataUpdater<ZNRecord>() {\n      @Override\n      public ZNRecord update(ZNRecord znRecord) {\n        if (znRecord.getMapField(task) == null) {\n          znRecord.setMapField(task, new HashMap<String, String>());\n        }\n        znRecord.getMapField(task).putAll(contentToAddOrUpdate);\n        return znRecord;\n      }\n    }, AccessOption.PERSISTENT);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/task/TaskUtil.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":436,"status":"M"}],"commitId":"177a3fb8485391e353cfc99e394d212bf8bc9950","commitMessage":"@@@HELIX: Fix all DataUpdaters so that it checks for null previous records\n\nSome implementations are missing the null check for the ZNRecord data prior to the update in the DataUpdater pattern. This is a fatal bug that could cause NullPointerExceptions. This diff goes through the codebase and address this.\nChangelist:\n1. Add null checks for all DataUpdater implementations\n","date":"2019-03-29 03:26:58","modifiedFileCount":"5","status":"M","submitter":"Hunter Lee"}]
