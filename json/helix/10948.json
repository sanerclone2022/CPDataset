[{"authorTime":"2012-10-25 07:14:36","codes":[{"authorDate":"2012-10-25 07:14:36","commitOrder":1,"curCode":"  StringRepresentation getClusterRepresentation(String clusterName) throws JsonGenerationException,\n      JsonMappingException,\n      IOException\n  {\n    ZkClient zkClient =\n        (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n    ClusterSetup setupTool = new ClusterSetup(zkClient);\n    List<String> instances =\n        setupTool.getClusterManagementTool().getInstancesInCluster(clusterName);\n\n    ZNRecord clusterSummayRecord = new ZNRecord(\"Cluster Summary\");\n    clusterSummayRecord.setListField(\"participants\", instances);\n\n    List<String> resources =\n        setupTool.getClusterManagementTool().getResourcesInCluster(clusterName);\n    clusterSummayRecord.setListField(\"resources\", resources);\n\n    List<String> models =\n        setupTool.getClusterManagementTool().getStateModelDefs(clusterName);\n    clusterSummayRecord.setListField(\"stateModelDefs\", models);\n\n    HelixDataAccessor accessor =\n        ClusterRepresentationUtil.getClusterDataAccessor(zkClient, clusterName);\n    Builder keyBuilder = accessor.keyBuilder();\n\n    LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader());\n    if (leader != null)\n    {\n      clusterSummayRecord.setSimpleField(\"LEADER\", leader.getInstanceName());\n    }\n    else\n    {\n      clusterSummayRecord.setSimpleField(\"LEADER\", \"\");\n    }\n    StringRepresentation representation =\n        new StringRepresentation(ClusterRepresentationUtil.ZNRecordToJson(clusterSummayRecord),\n                                 MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","date":"2012-10-25 07:14:36","endLine":134,"groupId":"582","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getClusterRepresentation","params":"(StringclusterName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/4e/7b74566ade7aed4756e44bd8cbd2d5e68c5b06.src","preCode":"  StringRepresentation getClusterRepresentation(String clusterName) throws JsonGenerationException,\n      JsonMappingException,\n      IOException\n  {\n    ZkClient zkClient =\n        (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n    ClusterSetup setupTool = new ClusterSetup(zkClient);\n    List<String> instances =\n        setupTool.getClusterManagementTool().getInstancesInCluster(clusterName);\n\n    ZNRecord clusterSummayRecord = new ZNRecord(\"Cluster Summary\");\n    clusterSummayRecord.setListField(\"participants\", instances);\n\n    List<String> resources =\n        setupTool.getClusterManagementTool().getResourcesInCluster(clusterName);\n    clusterSummayRecord.setListField(\"resources\", resources);\n\n    List<String> models =\n        setupTool.getClusterManagementTool().getStateModelDefs(clusterName);\n    clusterSummayRecord.setListField(\"stateModelDefs\", models);\n\n    HelixDataAccessor accessor =\n        ClusterRepresentationUtil.getClusterDataAccessor(zkClient, clusterName);\n    Builder keyBuilder = accessor.keyBuilder();\n\n    LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader());\n    if (leader != null)\n    {\n      clusterSummayRecord.setSimpleField(\"LEADER\", leader.getInstanceName());\n    }\n    else\n    {\n      clusterSummayRecord.setSimpleField(\"LEADER\", \"\");\n    }\n    StringRepresentation representation =\n        new StringRepresentation(ClusterRepresentationUtil.ZNRecordToJson(clusterSummayRecord),\n                                 MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","realPath":"helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/ClusterResource.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"},{"authorDate":"2012-10-25 07:14:36","commitOrder":1,"curCode":"  StringRepresentation getClustersRepresentation() throws JsonGenerationException,\n      JsonMappingException,\n      IOException\n  {\n    ZkClient zkClient =\n        (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n    ClusterSetup setupTool = new ClusterSetup(zkClient);\n    List<String> clusters = setupTool.getClusterManagementTool().getClusters();\n\n    ZNRecord clustersRecord = new ZNRecord(\"Clusters Summary\");\n    clustersRecord.setListField(\"clusters\", clusters);\n    StringRepresentation representation =\n        new StringRepresentation(ClusterRepresentationUtil.ZNRecordToJson(clustersRecord),\n                                 MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","date":"2012-10-25 07:14:36","endLine":105,"groupId":"2150","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getClustersRepresentation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/29/8083176cdc3f3e66470658c8d4450d71c49684.src","preCode":"  StringRepresentation getClustersRepresentation() throws JsonGenerationException,\n      JsonMappingException,\n      IOException\n  {\n    ZkClient zkClient =\n        (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n    ClusterSetup setupTool = new ClusterSetup(zkClient);\n    List<String> clusters = setupTool.getClusterManagementTool().getClusters();\n\n    ZNRecord clustersRecord = new ZNRecord(\"Clusters Summary\");\n    clustersRecord.setListField(\"clusters\", clusters);\n    StringRepresentation representation =\n        new StringRepresentation(ClusterRepresentationUtil.ZNRecordToJson(clustersRecord),\n                                 MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","realPath":"helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/ClustersResource.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"}],"commitId":"437eb42eac35e181ae6793dd17390df33565e4dd","commitMessage":"@@@Refactoring the package names and removing jsql parser\n","date":"2012-10-25 07:14:36","modifiedFileCount":"0","status":"B","submitter":"Kishore Gopalakrishna"},{"authorTime":"2014-12-03 10:26:02","codes":[{"authorDate":"2014-12-03 10:26:02","commitOrder":2,"curCode":"  StringRepresentation getClusterRepresentation(String clusterName) throws JsonGenerationException,\n      JsonMappingException, IOException {\n    ZkClient zkClient =\n        ResourceUtil.getAttributeFromCtx(getContext(), ResourceUtil.ContextKey.ZKCLIENT);\n    ClusterSetup setupTool = new ClusterSetup(zkClient);\n    List<String> instances =\n        setupTool.getClusterManagementTool().getInstancesInCluster(clusterName);\n\n    ZNRecord clusterSummayRecord = new ZNRecord(\"Cluster Summary\");\n    clusterSummayRecord.setListField(\"participants\", instances);\n\n    List<String> resources =\n        setupTool.getClusterManagementTool().getResourcesInCluster(clusterName);\n    clusterSummayRecord.setListField(\"resources\", resources);\n\n    List<String> models = setupTool.getClusterManagementTool().getStateModelDefs(clusterName);\n    clusterSummayRecord.setListField(\"stateModelDefs\", models);\n\n    HelixDataAccessor accessor =\n        ClusterRepresentationUtil.getClusterDataAccessor(zkClient, clusterName);\n    Builder keyBuilder = accessor.keyBuilder();\n\n    LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader());\n    if (leader != null) {\n      clusterSummayRecord.setSimpleField(\"LEADER\", leader.getInstanceName());\n    } else {\n      clusterSummayRecord.setSimpleField(\"LEADER\", \"\");\n    }\n    StringRepresentation representation =\n        new StringRepresentation(ClusterRepresentationUtil.ZNRecordToJson(clusterSummayRecord),\n            MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","date":"2014-12-03 10:26:02","endLine":111,"groupId":"10948","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getClusterRepresentation","params":"(StringclusterName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/ea/8b8dbf427fa34e8c85fedca723045396f9e173.src","preCode":"  StringRepresentation getClusterRepresentation(String clusterName) throws JsonGenerationException,\n      JsonMappingException, IOException {\n    ZkClient zkClient = (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n    ClusterSetup setupTool = new ClusterSetup(zkClient);\n    List<String> instances =\n        setupTool.getClusterManagementTool().getInstancesInCluster(clusterName);\n\n    ZNRecord clusterSummayRecord = new ZNRecord(\"Cluster Summary\");\n    clusterSummayRecord.setListField(\"participants\", instances);\n\n    List<String> resources =\n        setupTool.getClusterManagementTool().getResourcesInCluster(clusterName);\n    clusterSummayRecord.setListField(\"resources\", resources);\n\n    List<String> models = setupTool.getClusterManagementTool().getStateModelDefs(clusterName);\n    clusterSummayRecord.setListField(\"stateModelDefs\", models);\n\n    HelixDataAccessor accessor =\n        ClusterRepresentationUtil.getClusterDataAccessor(zkClient, clusterName);\n    Builder keyBuilder = accessor.keyBuilder();\n\n    LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader());\n    if (leader != null) {\n      clusterSummayRecord.setSimpleField(\"LEADER\", leader.getInstanceName());\n    } else {\n      clusterSummayRecord.setSimpleField(\"LEADER\", \"\");\n    }\n    StringRepresentation representation =\n        new StringRepresentation(ClusterRepresentationUtil.ZNRecordToJson(clusterSummayRecord),\n            MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","realPath":"helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/ClusterResource.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2014-12-03 10:26:02","commitOrder":2,"curCode":"  StringRepresentation getClustersRepresentation() throws JsonGenerationException,\n      JsonMappingException, IOException {\n    ZkClient zkClient =\n        ResourceUtil.getAttributeFromCtx(getContext(), ResourceUtil.ContextKey.ZKCLIENT);\n\n    ClusterSetup setupTool = new ClusterSetup(zkClient);\n    List<String> clusters = setupTool.getClusterManagementTool().getClusters();\n\n    ZNRecord clustersRecord = new ZNRecord(\"Clusters Summary\");\n    clustersRecord.setListField(\"clusters\", clusters);\n    StringRepresentation representation =\n        new StringRepresentation(ClusterRepresentationUtil.ZNRecordToJson(clustersRecord),\n            MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","date":"2014-12-03 10:26:02","endLine":87,"groupId":"10948","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getClustersRepresentation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/f8/23bf89b5f884bb953b77922632529b52bff0ac.src","preCode":"  StringRepresentation getClustersRepresentation() throws JsonGenerationException,\n      JsonMappingException, IOException {\n    ZkClient zkClient = (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n    ClusterSetup setupTool = new ClusterSetup(zkClient);\n    List<String> clusters = setupTool.getClusterManagementTool().getClusters();\n\n    ZNRecord clustersRecord = new ZNRecord(\"Clusters Summary\");\n    clustersRecord.setListField(\"clusters\", clusters);\n    StringRepresentation representation =\n        new StringRepresentation(ClusterRepresentationUtil.ZNRecordToJson(clustersRecord),\n            MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","realPath":"helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/ClustersResource.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"9a5dbeaa624715e76486ae908eab48e503d28ceb","commitMessage":"@@@[HELIX-546] Add REST API for Helix job queue management - third part.  rb=28620\n","date":"2014-12-03 10:26:02","modifiedFileCount":"10","status":"M","submitter":"zzhang"}]
