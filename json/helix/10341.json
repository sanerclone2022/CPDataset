[{"authorTime":"2019-08-16 05:33:02","codes":[{"authorDate":"2019-08-16 05:33:02","commitOrder":1,"curCode":"  public void testAddResource() {\n    \r\n    _gSetupTool.getClusterManagementTool().addResource(CLUSTER_NAME, NEW_RESOURCE_NAME,\n        NUM_PARTITIONS, STATE_MODEL);\n    ResourceConfig resourceConfig = new ResourceConfig(NEW_RESOURCE_NAME);\n    _dataAccessor.setProperty(_keyBuilder.resourceConfig(NEW_RESOURCE_NAME), resourceConfig);\n    \r\n    _dataProvider.notifyDataChange(ChangeType.IDEAL_STATE);\n    _dataProvider.notifyDataChange(ChangeType.RESOURCE_CONFIG);\n\n    \r\n    _dataProvider.refresh(_dataAccessor);\n\n    \r\n    _resourceChangeDetector.updateSnapshots(_dataProvider);\n\n    checkChangeTypes(ChangeType.IDEAL_STATE, ChangeType.RESOURCE_CONFIG);\n    \r\n    for (ChangeType type : RESOURCE_CHANGE_TYPES) {\n      if (type == ChangeType.IDEAL_STATE || type == ChangeType.RESOURCE_CONFIG) {\n        checkDetectionCounts(type, 1, 0, 0);\n      } else {\n        checkDetectionCounts(type, 0, 0, 0);\n      }\n    }\n    \r\n    Assert.assertTrue(_resourceChangeDetector.getAdditionsByType(ChangeType.RESOURCE_CONFIG)\n        .contains(NEW_RESOURCE_NAME));\n  }\n","date":"2019-08-16 05:33:02","endLine":172,"groupId":"6844","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3e/f41e4072282b8bb02d1f9adb0706a55e33b2e0.src","preCode":"  public void testAddResource() {\n    \r\n    _gSetupTool.getClusterManagementTool().addResource(CLUSTER_NAME, NEW_RESOURCE_NAME,\n        NUM_PARTITIONS, STATE_MODEL);\n    ResourceConfig resourceConfig = new ResourceConfig(NEW_RESOURCE_NAME);\n    _dataAccessor.setProperty(_keyBuilder.resourceConfig(NEW_RESOURCE_NAME), resourceConfig);\n    \r\n    _dataProvider.notifyDataChange(ChangeType.IDEAL_STATE);\n    _dataProvider.notifyDataChange(ChangeType.RESOURCE_CONFIG);\n\n    \r\n    _dataProvider.refresh(_dataAccessor);\n\n    \r\n    _resourceChangeDetector.updateSnapshots(_dataProvider);\n\n    checkChangeTypes(ChangeType.IDEAL_STATE, ChangeType.RESOURCE_CONFIG);\n    \r\n    for (ChangeType type : RESOURCE_CHANGE_TYPES) {\n      if (type == ChangeType.IDEAL_STATE || type == ChangeType.RESOURCE_CONFIG) {\n        checkDetectionCounts(type, 1, 0, 0);\n      } else {\n        checkDetectionCounts(type, 0, 0, 0);\n      }\n    }\n    \r\n    Assert.assertTrue(_resourceChangeDetector.getAdditionsByType(ChangeType.RESOURCE_CONFIG)\n        .contains(NEW_RESOURCE_NAME));\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/controller/changedetector/TestResourceChangeDetector.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"},{"authorDate":"2019-08-16 05:33:02","commitOrder":1,"curCode":"  public void testDeleteResource() {\n    \r\n    _dataAccessor.removeProperty(_keyBuilder.idealStates(NEW_RESOURCE_NAME));\n    _dataAccessor.removeProperty(_keyBuilder.resourceConfig(NEW_RESOURCE_NAME));\n\n    \r\n    _dataProvider.notifyDataChange(ChangeType.IDEAL_STATE);\n    _dataProvider.notifyDataChange(ChangeType.RESOURCE_CONFIG);\n    _dataProvider.refresh(_dataAccessor);\n    _resourceChangeDetector.updateSnapshots(_dataProvider);\n\n    checkChangeTypes(ChangeType.RESOURCE_CONFIG, ChangeType.IDEAL_STATE);\n    \r\n    for (ChangeType type : RESOURCE_CHANGE_TYPES) {\n      if (type == ChangeType.IDEAL_STATE || type == ChangeType.RESOURCE_CONFIG) {\n        checkDetectionCounts(type, 0, 0, 1);\n      } else {\n        checkDetectionCounts(type, 0, 0, 0);\n      }\n    }\n  }\n","date":"2019-08-16 05:33:02","endLine":227,"groupId":"6589","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3e/f41e4072282b8bb02d1f9adb0706a55e33b2e0.src","preCode":"  public void testDeleteResource() {\n    \r\n    _dataAccessor.removeProperty(_keyBuilder.idealStates(NEW_RESOURCE_NAME));\n    _dataAccessor.removeProperty(_keyBuilder.resourceConfig(NEW_RESOURCE_NAME));\n\n    \r\n    _dataProvider.notifyDataChange(ChangeType.IDEAL_STATE);\n    _dataProvider.notifyDataChange(ChangeType.RESOURCE_CONFIG);\n    _dataProvider.refresh(_dataAccessor);\n    _resourceChangeDetector.updateSnapshots(_dataProvider);\n\n    checkChangeTypes(ChangeType.RESOURCE_CONFIG, ChangeType.IDEAL_STATE);\n    \r\n    for (ChangeType type : RESOURCE_CHANGE_TYPES) {\n      if (type == ChangeType.IDEAL_STATE || type == ChangeType.RESOURCE_CONFIG) {\n        checkDetectionCounts(type, 0, 0, 1);\n      } else {\n        checkDetectionCounts(type, 0, 0, 0);\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/controller/changedetector/TestResourceChangeDetector.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"B"}],"commitId":"e0c1c66dd6ed9a01955927ea1828fabcf59eeaad","commitMessage":"@@@Add ChangeDetector interface and ResourceChangeDetector implementation (#388)\n\nAdd ChangeDetector interface and ResourceChangeDetector implementation\n\nIn order to efficiently react to changes happening to the cluster in the new WAGED rebalancer.  a new component called ChangeDetector was added.\n\nChangelist:\n1. Add ChangeDetector interface\n2. Implement ResourceChangeDetector\n3. Add ResourceChangeCache.  a wrapper for critical cluster metadata\n4. Add an integration test.  TestResourceChangeDetector","date":"2019-08-16 05:33:02","modifiedFileCount":"1","status":"B","submitter":"Hunter Lee"},{"authorTime":"2021-04-24 07:13:35","codes":[{"authorDate":"2021-04-24 07:13:35","commitOrder":2,"curCode":"  public void testAddResource() {\n    \r\n    _gSetupTool.getClusterManagementTool()\n        .addResource(CLUSTER_NAME, NEW_RESOURCE_NAME, NUM_PARTITIONS, STATE_MODEL);\n    ResourceConfig resourceConfig = new ResourceConfig(NEW_RESOURCE_NAME);\n    _dataAccessor.setProperty(_keyBuilder.resourceConfig(NEW_RESOURCE_NAME), resourceConfig);\n    \r\n    _dataProvider.notifyDataChange(ChangeType.IDEAL_STATE);\n    _dataProvider.notifyDataChange(ChangeType.RESOURCE_CONFIG);\n\n    \r\n    _dataProvider.refresh(_dataAccessor);\n\n    \r\n    _resourceChangeDetector.updateSnapshots(_dataProvider);\n\n    checkChangeTypes(ChangeType.IDEAL_STATE, ChangeType.RESOURCE_CONFIG);\n    \r\n    for (ChangeType type : RESOURCE_CHANGE_TYPES) {\n      if (type == ChangeType.IDEAL_STATE || type == ChangeType.RESOURCE_CONFIG) {\n        checkDetectionCounts(_resourceChangeDetector, type, 1, 0, 0);\n      } else {\n        checkDetectionCounts(_resourceChangeDetector, type, 0, 0, 0);\n      }\n    }\n    \r\n    Assert.assertTrue(_resourceChangeDetector.getAdditionsByType(ChangeType.RESOURCE_CONFIG)\n        .contains(NEW_RESOURCE_NAME));\n  }\n","date":"2021-04-24 07:13:35","endLine":182,"groupId":"10341","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testAddResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b4/f405c745f951cb4e5654848fc10539035dd281.src","preCode":"  public void testAddResource() {\n    \r\n    _gSetupTool.getClusterManagementTool().addResource(CLUSTER_NAME, NEW_RESOURCE_NAME,\n        NUM_PARTITIONS, STATE_MODEL);\n    ResourceConfig resourceConfig = new ResourceConfig(NEW_RESOURCE_NAME);\n    _dataAccessor.setProperty(_keyBuilder.resourceConfig(NEW_RESOURCE_NAME), resourceConfig);\n    \r\n    _dataProvider.notifyDataChange(ChangeType.IDEAL_STATE);\n    _dataProvider.notifyDataChange(ChangeType.RESOURCE_CONFIG);\n\n    \r\n    _dataProvider.refresh(_dataAccessor);\n\n    \r\n    _resourceChangeDetector.updateSnapshots(_dataProvider);\n\n    checkChangeTypes(ChangeType.IDEAL_STATE, ChangeType.RESOURCE_CONFIG);\n    \r\n    for (ChangeType type : RESOURCE_CHANGE_TYPES) {\n      if (type == ChangeType.IDEAL_STATE || type == ChangeType.RESOURCE_CONFIG) {\n        checkDetectionCounts(type, 1, 0, 0);\n      } else {\n        checkDetectionCounts(type, 0, 0, 0);\n      }\n    }\n    \r\n    Assert.assertTrue(_resourceChangeDetector.getAdditionsByType(ChangeType.RESOURCE_CONFIG)\n        .contains(NEW_RESOURCE_NAME));\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/controller/changedetector/TestResourceChangeDetector.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2021-04-24 07:13:35","commitOrder":2,"curCode":"  public void testDeleteResource() {\n    \r\n    _dataAccessor.removeProperty(_keyBuilder.idealStates(NEW_RESOURCE_NAME));\n    _dataAccessor.removeProperty(_keyBuilder.resourceConfig(NEW_RESOURCE_NAME));\n\n    \r\n    _dataProvider.notifyDataChange(ChangeType.IDEAL_STATE);\n    _dataProvider.notifyDataChange(ChangeType.RESOURCE_CONFIG);\n    _dataProvider.refresh(_dataAccessor);\n    _resourceChangeDetector.updateSnapshots(_dataProvider);\n\n    checkChangeTypes(ChangeType.RESOURCE_CONFIG, ChangeType.IDEAL_STATE);\n    \r\n    for (ChangeType type : RESOURCE_CHANGE_TYPES) {\n      if (type == ChangeType.IDEAL_STATE || type == ChangeType.RESOURCE_CONFIG) {\n        checkDetectionCounts(_resourceChangeDetector, type, 0, 0, 1);\n      } else {\n        checkDetectionCounts(_resourceChangeDetector, type, 0, 0, 0);\n      }\n    }\n  }\n","date":"2021-04-24 07:13:35","endLine":237,"groupId":"10341","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testDeleteResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b4/f405c745f951cb4e5654848fc10539035dd281.src","preCode":"  public void testDeleteResource() {\n    \r\n    _dataAccessor.removeProperty(_keyBuilder.idealStates(NEW_RESOURCE_NAME));\n    _dataAccessor.removeProperty(_keyBuilder.resourceConfig(NEW_RESOURCE_NAME));\n\n    \r\n    _dataProvider.notifyDataChange(ChangeType.IDEAL_STATE);\n    _dataProvider.notifyDataChange(ChangeType.RESOURCE_CONFIG);\n    _dataProvider.refresh(_dataAccessor);\n    _resourceChangeDetector.updateSnapshots(_dataProvider);\n\n    checkChangeTypes(ChangeType.RESOURCE_CONFIG, ChangeType.IDEAL_STATE);\n    \r\n    for (ChangeType type : RESOURCE_CHANGE_TYPES) {\n      if (type == ChangeType.IDEAL_STATE || type == ChangeType.RESOURCE_CONFIG) {\n        checkDetectionCounts(type, 0, 0, 1);\n      } else {\n        checkDetectionCounts(type, 0, 0, 0);\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/controller/changedetector/TestResourceChangeDetector.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"}],"commitId":"541d093c2f65f0b0ad1f0d30be2783bf55ba0562","commitMessage":"@@@Fix test TestResourceChangeDetector. (#1712)\n\nThis PR fixes the unstable test TestResourceChangeDetector by avoiding unexpected metadata input changes.","date":"2021-04-24 07:13:35","modifiedFileCount":"1","status":"M","submitter":"Jiajun Wang"}]
