[{"authorTime":"2017-10-10 05:52:19","codes":[{"authorDate":"2017-10-10 05:52:19","commitOrder":1,"curCode":"  public void testP2PStateTransitionEnabledInCluster() {\n    enableP2PInCluster(true);\n    enableP2PInResource(DB_NAME_1,false);\n    enableP2PInResource(DB_NAME_2,false);\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verify());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verify());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n  }\n","date":"2018-01-25 10:30:30","endLine":164,"groupId":"5540","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testP2PStateTransitionEnabledInCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/e0/f83e12755e71a328a669583b5b794cb7b97368.src","preCode":"  public void testP2PStateTransitionEnabledInCluster() {\n    enableP2PInCluster(true);\n    enableP2PInResource(DB_NAME_1,false);\n    enableP2PInResource(DB_NAME_2,false);\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verify());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verify());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PMessageSemiAuto.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"B"},{"authorDate":"2017-10-10 05:52:19","commitOrder":1,"curCode":"  public void testP2PStateTransitionEnabledInResource() {\n    enableP2PInCluster(false);\n    enableP2PInResource(DB_NAME_1,true);\n    enableP2PInResource(DB_NAME_2,false);\n\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verify());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName());\n\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verify());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName());\n  }\n","date":"2018-01-25 10:30:30","endLine":188,"groupId":"5540","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testP2PStateTransitionEnabledInResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/e0/f83e12755e71a328a669583b5b794cb7b97368.src","preCode":"  public void testP2PStateTransitionEnabledInResource() {\n    enableP2PInCluster(false);\n    enableP2PInResource(DB_NAME_1,true);\n    enableP2PInResource(DB_NAME_2,false);\n\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verify());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName());\n\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verify());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName());\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PMessageSemiAuto.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"B"}],"commitId":"d0a3c0d1ea3a467564ed5ffd20bcd6a8e5a56678","commitMessage":"@@@Add P2P (Participant-to-Participant) state-transition message support in Helix controller.\n","date":"2018-01-25 10:30:30","modifiedFileCount":"33","status":"B","submitter":"Lei Xia"},{"authorTime":"2018-06-13 04:57:09","codes":[{"authorDate":"2018-06-13 04:57:09","commitOrder":2,"curCode":"  public void testP2PStateTransitionEnabledInCluster() {\n    enableP2PInCluster(true);\n    enableP2PInResource(DB_NAME_1,false);\n    enableP2PInResource(DB_NAME_2,false);\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n  }\n","date":"2018-07-14 06:55:35","endLine":161,"groupId":"5540","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testP2PStateTransitionEnabledInCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/0a/9ee552d54b75fb69760c969213d0a357e1efe7.src","preCode":"  public void testP2PStateTransitionEnabledInCluster() {\n    enableP2PInCluster(true);\n    enableP2PInResource(DB_NAME_1,false);\n    enableP2PInResource(DB_NAME_2,false);\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verify());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verify());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PMessageSemiAuto.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"},{"authorDate":"2018-06-13 04:57:09","commitOrder":2,"curCode":"  public void testP2PStateTransitionEnabledInResource() {\n    enableP2PInCluster(false);\n    enableP2PInResource(DB_NAME_1,true);\n    enableP2PInResource(DB_NAME_2,false);\n\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName());\n\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName());\n  }\n","date":"2018-07-14 06:55:35","endLine":185,"groupId":"5540","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testP2PStateTransitionEnabledInResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/0a/9ee552d54b75fb69760c969213d0a357e1efe7.src","preCode":"  public void testP2PStateTransitionEnabledInResource() {\n    enableP2PInCluster(false);\n    enableP2PInResource(DB_NAME_1,true);\n    enableP2PInResource(DB_NAME_2,false);\n\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verify());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName());\n\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verify());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName());\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PMessageSemiAuto.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"4609d94488f4e97e6bf1c233281ca39433c4f72e","commitMessage":"@@@Fix a couple of tests.  and reduce the total test times.\n","date":"2018-07-14 06:55:35","modifiedFileCount":"272","status":"M","submitter":"Lei Xia"},{"authorTime":"2018-04-25 09:18:40","codes":[{"authorDate":"2018-04-25 09:18:40","commitOrder":3,"curCode":"  public void testP2PStateTransitionEnabledInCluster() {\n    enableP2PInCluster(CLUSTER_NAME, _configAccessor, true);\n    enableP2PInResource(CLUSTER_NAME, _configAccessor, DB_NAME_1,false);\n    enableP2PInResource(CLUSTER_NAME, _configAccessor, DB_NAME_2,false);\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(\n        1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(\n        1));\n  }\n","date":"2018-09-18 06:08:28","endLine":162,"groupId":"10623","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testP2PStateTransitionEnabledInCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3c/95c2faecaa9c9ebeb20b84ea183dfa28b5d08a.src","preCode":"  public void testP2PStateTransitionEnabledInCluster() {\n    enableP2PInCluster(true);\n    enableP2PInResource(DB_NAME_1,false);\n    enableP2PInResource(DB_NAME_2,false);\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PMessageSemiAuto.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2018-04-25 09:18:40","commitOrder":3,"curCode":"  public void testP2PStateTransitionEnabledInResource() {\n    enableP2PInCluster(CLUSTER_NAME, _configAccessor, false);\n    enableP2PInResource(CLUSTER_NAME, _configAccessor, DB_NAME_1,true);\n    enableP2PInResource(CLUSTER_NAME, _configAccessor, DB_NAME_2,false);\n\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName(), 1);\n\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName(), 1);\n  }\n","date":"2018-09-18 06:08:28","endLine":186,"groupId":"10623","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testP2PStateTransitionEnabledInResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3c/95c2faecaa9c9ebeb20b84ea183dfa28b5d08a.src","preCode":"  public void testP2PStateTransitionEnabledInResource() {\n    enableP2PInCluster(false);\n    enableP2PInResource(DB_NAME_1,true);\n    enableP2PInResource(DB_NAME_2,false);\n\n\n    \r\n    String prevMasterInstance = _instances.get(0);\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, false);\n\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    verifyP2PMessage(DB_NAME_1, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), prevMasterInstance);\n    verifyP2PMessage(DB_NAME_2, _instances.get(1), MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName());\n\n\n    \r\n    _gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME, prevMasterInstance, true);\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n\n    verifyP2PMessage(DB_NAME_1, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _instances.get(1));\n    verifyP2PMessage(DB_NAME_2, prevMasterInstance, MasterSlaveSMD.States.MASTER.name(), _controller.getInstanceName());\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PMessageSemiAuto.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"880f885121afecab4e186282fbf94a146a2cf04a","commitMessage":"@@@Fix P2P message logic in controller to avoid sending duplicated messages to participants.\n","date":"2018-09-18 06:08:28","modifiedFileCount":"21","status":"M","submitter":"Lei Xia"}]
