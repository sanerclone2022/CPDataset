[{"authorTime":"2020-02-11 08:57:58","codes":[{"authorDate":"2020-02-11 08:57:58","commitOrder":1,"curCode":"  public void testAddShardingKey() {\n    _zkRoutingDataWriter.addShardingKey(DUMMY_REALM, DUMMY_SHARDING_KEY);\n    ZNRecord znRecord = _baseAccessor\n        .get(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM, null,\n            AccessOption.PERSISTENT);\n    Assert.assertNotNull(znRecord);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","date":"2020-04-09 08:23:30","endLine":80,"groupId":"1767","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddShardingKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/44/1bf653c7604e15bb4ec3455105e7eecdd9ef8d.src","preCode":"  public void testAddShardingKey() {\n    _zkRoutingDataWriter.addShardingKey(DUMMY_REALM, DUMMY_SHARDING_KEY);\n    ZNRecord znRecord = _baseAccessor\n        .get(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM, null,\n            AccessOption.PERSISTENT);\n    Assert.assertNotNull(znRecord);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/metadatastore/accessor/TestZkRoutingDataWriter.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"},{"authorDate":"2020-02-11 08:57:58","commitOrder":1,"curCode":"  public void testSetRoutingData() {\n    Map<String, List<String>> testRoutingDataMap =\n        ImmutableMap.of(DUMMY_REALM, Collections.singletonList(DUMMY_SHARDING_KEY));\n    _zkRoutingDataWriter.setRoutingData(testRoutingDataMap);\n    ZNRecord znRecord = _baseAccessor\n        .get(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM, null,\n            AccessOption.PERSISTENT);\n    Assert.assertNotNull(znRecord);\n    Assert.assertEquals(\n        znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY).size(), 1);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","date":"2020-04-09 08:23:30","endLine":106,"groupId":"2293","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetRoutingData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/44/1bf653c7604e15bb4ec3455105e7eecdd9ef8d.src","preCode":"  public void testSetRoutingData() {\n    Map<String, List<String>> testRoutingDataMap =\n        ImmutableMap.of(DUMMY_REALM, Collections.singletonList(DUMMY_SHARDING_KEY));\n    _zkRoutingDataWriter.setRoutingData(testRoutingDataMap);\n    ZNRecord znRecord = _baseAccessor\n        .get(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM, null,\n            AccessOption.PERSISTENT);\n    Assert.assertNotNull(znRecord);\n    Assert.assertEquals(\n        znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY).size(), 1);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/metadatastore/accessor/TestZkRoutingDataWriter.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"}],"commitId":"661729b1675744637496055e4b5e27d111316511","commitMessage":"@@@Add MetadataStoreRoutingDataWriter with DistributedLeaderElection (#727)\n\nWe need a separate ZkClient-based writer that could allow users to write routing data to ZK. This diff adds such an interface.  an implementation.  and a distributed lock implementation that could help users to manipulate the routing data.\n\nChangelist:\n\nAdd ZkRoutingDataWriter (+ interface)\nAdd ZkDistributedLock (+ interface) to guarantee that there's at most one active writer at a time (where there are multiple Helix REST deployables)\nAdd a test for ZkRoutingDataWriter\nIntegrate ZkRoutingDataWriter with ZkMetadataStoreDirectory\nAdd test methods to TestZkMetadataStoreDirectory\nAdd ZkDistributedElection to replace ZkDistributedLock (and move ZkDistributedLock to a separate PR)","date":"2020-04-09 08:23:30","modifiedFileCount":"3","status":"B","submitter":"Hunter Lee"},{"authorTime":"2020-03-04 09:37:15","codes":[{"authorDate":"2020-03-04 09:37:15","commitOrder":2,"curCode":"  public void testAddShardingKey() {\n    _zkRoutingDataWriter.addShardingKey(DUMMY_REALM, DUMMY_SHARDING_KEY);\n    ZNRecord znRecord =\n        _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM);\n    Assert.assertNotNull(znRecord);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","date":"2020-04-09 08:23:30","endLine":104,"groupId":"7227","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddShardingKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/31/db29175ada928d8cd1df3687a1f7fe2466da31.src","preCode":"  public void testAddShardingKey() {\n    _zkRoutingDataWriter.addShardingKey(DUMMY_REALM, DUMMY_SHARDING_KEY);\n    ZNRecord znRecord =\n        _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM);\n    Assert.assertNotNull(znRecord);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/metadatastore/accessor/TestZkRoutingDataWriter.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"MB"},{"authorDate":"2020-03-04 09:37:15","commitOrder":2,"curCode":"  public void testSetRoutingData() {\n    Map<String, List<String>> testRoutingDataMap =\n        ImmutableMap.of(DUMMY_REALM, Collections.singletonList(DUMMY_SHARDING_KEY));\n    _zkRoutingDataWriter.setRoutingData(testRoutingDataMap);\n    ZNRecord znRecord =\n        _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM);\n    Assert.assertNotNull(znRecord);\n    Assert.assertEquals(\n        znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY).size(), 1);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","date":"2020-04-09 08:23:30","endLine":128,"groupId":"986","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetRoutingData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/31/db29175ada928d8cd1df3687a1f7fe2466da31.src","preCode":"  public void testSetRoutingData() {\n    Map<String, List<String>> testRoutingDataMap =\n        ImmutableMap.of(DUMMY_REALM, Collections.singletonList(DUMMY_SHARDING_KEY));\n    _zkRoutingDataWriter.setRoutingData(testRoutingDataMap);\n    ZNRecord znRecord =\n        _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM);\n    Assert.assertNotNull(znRecord);\n    Assert.assertEquals(\n        znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY).size(), 1);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/metadatastore/accessor/TestZkRoutingDataWriter.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"MB"}],"commitId":"1f0d278995dba8527a1f7d6161c979bbaaae4d59","commitMessage":"@@@Implement setRoutingData for MetadataStoreDirectoryService (#844)\n\nImplement setRoutingData endpoint. Modify TrieRoutingData construction in MetadataStoreDirectory. Fix race conditions among writing operations in MetadataStoreDirectory.","date":"2020-04-09 08:23:30","modifiedFileCount":"13","status":"M","submitter":"Neal Sun"},{"authorTime":"2020-04-25 07:46:58","codes":[{"authorDate":"2020-04-25 07:46:58","commitOrder":3,"curCode":"  public void testAddShardingKey() {\n    _zkRoutingDataWriter.addShardingKey(DUMMY_REALM, DUMMY_SHARDING_KEY);\n    ZNRecord znRecord = _gZkClientTestNS\n        .readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM);\n    Assert.assertNotNull(znRecord);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","date":"2020-04-25 07:46:58","endLine":103,"groupId":"101039","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testAddShardingKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9c/ab5627289c79de33015bbb6ae2bcbfd9d2501f.src","preCode":"  public void testAddShardingKey() {\n    _zkRoutingDataWriter.addShardingKey(DUMMY_REALM, DUMMY_SHARDING_KEY);\n    ZNRecord znRecord =\n        _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM);\n    Assert.assertNotNull(znRecord);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/metadatastore/accessor/TestZkRoutingDataWriter.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2020-04-25 07:46:58","commitOrder":3,"curCode":"  public void testSetRoutingData() {\n    Map<String, List<String>> testRoutingDataMap =\n        ImmutableMap.of(DUMMY_REALM, Collections.singletonList(DUMMY_SHARDING_KEY));\n    _zkRoutingDataWriter.setRoutingData(testRoutingDataMap);\n    ZNRecord znRecord = _gZkClientTestNS\n        .readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM);\n    Assert.assertNotNull(znRecord);\n    Assert.assertEquals(\n        znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY).size(), 1);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","date":"2020-04-25 07:46:58","endLine":127,"groupId":"101039","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testSetRoutingData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9c/ab5627289c79de33015bbb6ae2bcbfd9d2501f.src","preCode":"  public void testSetRoutingData() {\n    Map<String, List<String>> testRoutingDataMap =\n        ImmutableMap.of(DUMMY_REALM, Collections.singletonList(DUMMY_SHARDING_KEY));\n    _zkRoutingDataWriter.setRoutingData(testRoutingDataMap);\n    ZNRecord znRecord =\n        _zkClient.readData(MetadataStoreRoutingConstants.ROUTING_DATA_PATH + \"/\" + DUMMY_REALM);\n    Assert.assertNotNull(znRecord);\n    Assert.assertEquals(\n        znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY).size(), 1);\n    Assert.assertTrue(znRecord.getListField(MetadataStoreRoutingConstants.ZNRECORD_LIST_FIELD_KEY)\n        .contains(DUMMY_SHARDING_KEY));\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/metadatastore/accessor/TestZkRoutingDataWriter.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"2b40e1a5d9e02398691a97cf8dafbcc0e3443abe","commitMessage":"@@@Fix failed tests in helix-rest (#966)\n\nIn tests: TestZkRoutingDataWriter and TestZkRoutingDataReader.  the zkClient is trying to read/write ZNRecords.  however.  zkClient's serializer is not a ZNRecordSerializer but a BasicZkSerializer. So when read/write a ZNRecord.  a ZkMarshallingError is thrown and causes the tests failed.","date":"2020-04-25 07:46:58","modifiedFileCount":"2","status":"M","submitter":"Huizhi Lu"}]
