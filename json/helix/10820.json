[{"authorTime":"2012-10-25 07:14:36","codes":[{"authorDate":"2013-04-06 08:30:58","commitOrder":2,"curCode":"  public void dropResource(String clusterName, String resourceName)\n  {\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    accessor.removeProperty(keyBuilder.idealStates(resourceName));\n    accessor.removeProperty(keyBuilder.resourceConfig(resourceName));\n  }\n","date":"2013-04-06 08:30:58","endLine":846,"groupId":"4971","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"dropResource","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/ca/80a1ecbb8b997f62c4b68f9c8f225af9eb53fc.src","preCode":"  public void dropResource(String clusterName, String resourceName)\n  {\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    accessor.removeProperty(keyBuilder.idealStates(resourceName));\n    accessor.removeProperty(keyBuilder.resourceConfig(resourceName));\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":838,"status":"B"},{"authorDate":"2012-10-25 07:14:36","commitOrder":2,"curCode":"  public void dropCluster(String clusterName)\n  {\n    logger.info(\"Deleting cluster \" + clusterName);\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    String root = \"/\" + clusterName;\n    if (accessor.getChildNames(keyBuilder.liveInstances()).size() > 0)\n    {\n      throw new HelixException(\"There are still live instances in the cluster, shut them down first.\");\n    }\n\n    if (accessor.getProperty(keyBuilder.controllerLeader()) != null)\n    {\n      throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\");\n    }\n\n    _zkClient.deleteRecursive(root);\n  }\n","date":"2012-10-25 07:14:36","endLine":905,"groupId":"342","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"dropCluster","params":"(StringclusterName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/36/dbf9f75f58f708a0d8309baa731d6a25a789b2.src","preCode":"  public void dropCluster(String clusterName)\n  {\n    logger.info(\"Deleting cluster \" + clusterName);\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    String root = \"/\" + clusterName;\n    if (accessor.getChildNames(keyBuilder.liveInstances()).size() > 0)\n    {\n      throw new HelixException(\"There are still live instances in the cluster, shut them down first.\");\n    }\n\n    if (accessor.getProperty(keyBuilder.controllerLeader()) != null)\n    {\n      throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\");\n    }\n\n    _zkClient.deleteRecursive(root);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":886,"status":"NB"}],"commitId":"f3e32551094e4edfd73364e3c79e3aba980a8208","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/incubator-helix\n","date":"2013-04-06 08:30:58","modifiedFileCount":"129","status":"M","submitter":"Swaroop Jagadish"},{"authorTime":"2014-05-23 02:08:01","codes":[{"authorDate":"2014-05-23 02:08:01","commitOrder":3,"curCode":"  public void dropResource(String clusterName, String resourceName) {\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    accessor.removeProperty(keyBuilder.idealStates(resourceName));\n    accessor.removeProperty(keyBuilder.resourceConfig(resourceName));\n  }\n","date":"2014-05-23 02:08:01","endLine":722,"groupId":"4971","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"dropResource","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/aa/2d61749a74281f739788469f46ad2621c0c845.src","preCode":"  public void dropResource(String clusterName, String resourceName) {\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    accessor.removeProperty(keyBuilder.idealStates(resourceName));\n    accessor.removeProperty(keyBuilder.resourceConfig(resourceName));\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":715,"status":"M"},{"authorDate":"2014-05-23 02:08:01","commitOrder":3,"curCode":"  public void dropCluster(String clusterName) {\n    logger.info(\"Deleting cluster \" + clusterName);\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    String root = \"/\" + clusterName;\n    if (accessor.getChildNames(keyBuilder.liveInstances()).size() > 0) {\n      throw new HelixException(\n          \"There are still live instances in the cluster, shut them down first.\");\n    }\n\n    if (accessor.getProperty(keyBuilder.controllerLeader()) != null) {\n      throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\");\n    }\n\n    _zkClient.deleteRecursive(root);\n  }\n","date":"2014-05-23 02:08:01","endLine":756,"groupId":"342","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"dropCluster","params":"(StringclusterName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/aa/2d61749a74281f739788469f46ad2621c0c845.src","preCode":"  public void dropCluster(String clusterName) {\n    logger.info(\"Deleting cluster \" + clusterName);\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    String root = \"/\" + clusterName;\n    if (accessor.getChildNames(keyBuilder.liveInstances()).size() > 0) {\n      throw new HelixException(\n          \"There are still live instances in the cluster, shut them down first.\");\n    }\n\n    if (accessor.getProperty(keyBuilder.controllerLeader()) != null) {\n      throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\");\n    }\n\n    _zkClient.deleteRecursive(root);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":739,"status":"M"}],"commitId":"4ff7e3888561b46ca6d9c590bdf425b0d2e0716b","commitMessage":"@@@Merge branch 'helix-0.6.x' of https://git-wip-us.apache.org/repos/asf/helix into helix-0.6.x\n","date":"2014-05-23 02:08:01","modifiedFileCount":"57","status":"M","submitter":"Kanak Biscuitwala"},{"authorTime":"2018-03-09 06:04:42","codes":[{"authorDate":"2014-05-23 02:08:01","commitOrder":4,"curCode":"  public void dropResource(String clusterName, String resourceName) {\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    accessor.removeProperty(keyBuilder.idealStates(resourceName));\n    accessor.removeProperty(keyBuilder.resourceConfig(resourceName));\n  }\n","date":"2014-05-23 02:08:01","endLine":722,"groupId":"4971","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"dropResource","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/aa/2d61749a74281f739788469f46ad2621c0c845.src","preCode":"  public void dropResource(String clusterName, String resourceName) {\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    accessor.removeProperty(keyBuilder.idealStates(resourceName));\n    accessor.removeProperty(keyBuilder.resourceConfig(resourceName));\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":715,"status":"N"},{"authorDate":"2018-03-09 06:04:42","commitOrder":4,"curCode":"  public void dropCluster(String clusterName) {\n    logger.info(\"Deleting cluster \" + clusterName);\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    String root = \"/\" + clusterName;\n    if (accessor.getChildNames(keyBuilder.liveInstances()).size() > 0) {\n      throw new HelixException(\n          \"There are still live instances in the cluster, shut them down first.\");\n    }\n\n    if (accessor.getProperty(keyBuilder.controllerLeader()) != null) {\n      throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\");\n    }\n\n    _zkClient.deleteRecursively(root);\n  }\n","date":"2018-03-20 07:43:31","endLine":866,"groupId":"342","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"dropCluster","params":"(StringclusterName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9e/44797d679de8a9d95ac1456c338f2ba11541c0.src","preCode":"  public void dropCluster(String clusterName) {\n    logger.info(\"Deleting cluster \" + clusterName);\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    String root = \"/\" + clusterName;\n    if (accessor.getChildNames(keyBuilder.liveInstances()).size() > 0) {\n      throw new HelixException(\n          \"There are still live instances in the cluster, shut them down first.\");\n    }\n\n    if (accessor.getProperty(keyBuilder.controllerLeader()) != null) {\n      throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\");\n    }\n\n    _zkClient.deleteRecursive(root);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":849,"status":"M"}],"commitId":"0e849035379a04b079ac1274bb8aaab473df1572","commitMessage":"@@@[HELIX-679] consolidate semantics of recursively delete path in ZkClient\n","date":"2018-03-20 07:43:31","modifiedFileCount":"57","status":"M","submitter":"hrzhang"},{"authorTime":"2018-04-20 09:19:51","codes":[{"authorDate":"2018-04-20 09:19:51","commitOrder":5,"curCode":"  public void dropResource(String clusterName, String resourceName) {\n    logger.info(\"Drop resource {} from cluster {}\", resourceName, clusterName);\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    accessor.removeProperty(keyBuilder.idealStates(resourceName));\n    accessor.removeProperty(keyBuilder.resourceConfig(resourceName));\n  }\n","date":"2018-04-20 09:19:51","endLine":865,"groupId":"4971","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"dropResource","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3d/708e567f1eb033b6d41cf6dc98340befa6b83c.src","preCode":"  public void dropResource(String clusterName, String resourceName) {\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    accessor.removeProperty(keyBuilder.idealStates(resourceName));\n    accessor.removeProperty(keyBuilder.resourceConfig(resourceName));\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":857,"status":"M"},{"authorDate":"2018-04-20 09:19:51","commitOrder":5,"curCode":"  public void dropCluster(String clusterName) {\n    logger.info(\"Deleting cluster {}.\", clusterName);\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    String root = \"/\" + clusterName;\n    if (accessor.getChildNames(keyBuilder.liveInstances()).size() > 0) {\n      throw new HelixException(\n          \"There are still live instances in the cluster, shut them down first.\");\n    }\n\n    if (accessor.getProperty(keyBuilder.controllerLeader()) != null) {\n      throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\");\n    }\n\n    _zkClient.deleteRecursively(root);\n  }\n","date":"2018-04-20 09:19:51","endLine":900,"groupId":"342","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"dropCluster","params":"(StringclusterName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3d/708e567f1eb033b6d41cf6dc98340befa6b83c.src","preCode":"  public void dropCluster(String clusterName) {\n    logger.info(\"Deleting cluster \" + clusterName);\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    String root = \"/\" + clusterName;\n    if (accessor.getChildNames(keyBuilder.liveInstances()).size() > 0) {\n      throw new HelixException(\n          \"There are still live instances in the cluster, shut them down first.\");\n    }\n\n    if (accessor.getProperty(keyBuilder.controllerLeader()) != null) {\n      throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\");\n    }\n\n    _zkClient.deleteRecursively(root);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":883,"status":"M"}],"commitId":"a6bdb3c2252a11a51939e1e06083a24ccf5a2ac2","commitMessage":"@@@Add logs for RoutingTableProvider and HelixAdmin\n","date":"2018-04-20 09:19:51","modifiedFileCount":"1","status":"M","submitter":"Junkai Xue"},{"authorTime":"2020-03-13 00:44:38","codes":[{"authorDate":"2020-03-13 00:44:38","commitOrder":6,"curCode":"  public void dropResource(String clusterName, String resourceName) {\n    logger.info(\"Drop resource {} from cluster {}\", resourceName, clusterName);\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n\n    accessor.removeProperty(keyBuilder.idealStates(resourceName));\n    accessor.removeProperty(keyBuilder.resourceConfig(resourceName));\n  }\n","date":"2020-04-09 08:23:30","endLine":1098,"groupId":"10820","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"dropResource","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7b/eaed8be08f73a58f86cc95cf521969f43a962f.src","preCode":"  public void dropResource(String clusterName, String resourceName) {\n    logger.info(\"Drop resource {} from cluster {}\", resourceName, clusterName);\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    accessor.removeProperty(keyBuilder.idealStates(resourceName));\n    accessor.removeProperty(keyBuilder.resourceConfig(resourceName));\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":1090,"status":"M"},{"authorDate":"2020-03-13 00:44:38","commitOrder":6,"curCode":"  public void dropCluster(String clusterName) {\n    logger.info(\"Deleting cluster {}.\", clusterName);\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n\n    String root = \"/\" + clusterName;\n    if (accessor.getChildNames(keyBuilder.liveInstances()).size() > 0) {\n      throw new HelixException(\n          \"There are still live instances in the cluster, shut them down first.\");\n    }\n\n    if (accessor.getProperty(keyBuilder.controllerLeader()) != null) {\n      throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\");\n    }\n\n    _zkClient.deleteRecursively(root);\n  }\n","date":"2020-04-09 08:23:30","endLine":1159,"groupId":"10820","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"dropCluster","params":"(StringclusterName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7b/eaed8be08f73a58f86cc95cf521969f43a962f.src","preCode":"  public void dropCluster(String clusterName) {\n    logger.info(\"Deleting cluster {}.\", clusterName);\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    String root = \"/\" + clusterName;\n    if (accessor.getChildNames(keyBuilder.liveInstances()).size() > 0) {\n      throw new HelixException(\n          \"There are still live instances in the cluster, shut them down first.\");\n    }\n\n    if (accessor.getProperty(keyBuilder.controllerLeader()) != null) {\n      throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\");\n    }\n\n    _zkClient.deleteRecursively(root);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":1142,"status":"M"}],"commitId":"289085f1ce7d2d9665447e9b114c15645f618937","commitMessage":"@@@Make ZKHelixAdmin and ZKHelixManager Realm-aware (#846)\n\nTo make Helix Java APIs realm-aware.  we need to make both ZKHelixAdmin and ZKHelixManager realm-aware. This commit adds a Builder to set client config and connection config for building realm-aware ZkClients underneath.","date":"2020-04-09 08:23:30","modifiedFileCount":"14","status":"M","submitter":"Huizhi Lu"}]
