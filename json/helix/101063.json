[{"authorTime":"2017-11-08 08:48:26","codes":[{"authorDate":"2017-11-08 08:48:26","commitOrder":1,"curCode":"  protected void put(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().put(entity);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n  }\n","date":"2017-11-08 08:48:26","endLine":358,"groupId":"2903","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(Stringuri@Map<String@String>queryParams@Entityentity@intexpectedReturnStatus)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/1e/b494c3fe50636723b4f01ea9e691b31f0ea411.src","preCode":"  protected void put(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().put(entity);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"B"},{"authorDate":"2017-11-08 08:48:26","commitOrder":1,"curCode":"  protected void post(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().post(entity);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n  }\n","date":"2017-11-08 08:48:26","endLine":370,"groupId":"2903","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"post","params":"(Stringuri@Map<String@String>queryParams@Entityentity@intexpectedReturnStatus)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/1e/b494c3fe50636723b4f01ea9e691b31f0ea411.src","preCode":"  protected void post(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().post(entity);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":360,"status":"B"}],"commitId":"fe0b6e800e24c52d514c78d1fbab3d6b0800803f","commitMessage":"@@@Merge branch 'helixli/master'\n\nConflicts:\n\thelix-admin-webapp/helix-admin-webapp-0.6.10-SNAPSHOT.ivy\n\thelix-admin-webapp/helix-admin-webapp-0.6.6-SNAPSHOT.ivy\n\thelix-admin-webapp/helix-admin-webapp-0.6.9-SNAPSHOT.ivy\n\thelix-admin-webapp/pom.xml\n\thelix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/JobResource.java\n\thelix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/SchedulerTasksResource.java\n\thelix-admin-webapp/src/test/java/org/apache/helix/webapp/TestClusterManagementWebapp.java\n\thelix-agent/helix-agent-0.6.10-SNAPSHOT.ivy\n\thelix-agent/helix-agent-0.6.6-SNAPSHOT.ivy\n\thelix-agent/helix-agent-0.6.9-SNAPSHOT.ivy\n\thelix-agent/pom.xml\n\thelix-core/helix-core-0.6.10-SNAPSHOT.ivy\n\thelix-core/helix-core-0.6.6-SNAPSHOT.ivy\n\thelix-core/helix-core-0.6.9-SNAPSHOT.ivy\n\thelix-core/pom.xml\n\thelix-core/src/main/java/org/apache/helix/BaseDataAccessor.java\n\thelix-core/src/main/java/org/apache/helix/ConfigAccessor.java\n\thelix-core/src/main/java/org/apache/helix/HelixAdmin.java\n\thelix-core/src/main/java/org/apache/helix/HelixConstants.java\n\thelix-core/src/main/java/org/apache/helix/HelixDataAccessor.java\n\thelix-core/src/main/java/org/apache/helix/NotificationContext.java\n\thelix-core/src/main/java/org/apache/helix/PropertyPathBuilder.java\n\thelix-core/src/main/java/org/apache/helix/ZNRecord.java\n\thelix-core/src/main/java/org/apache/helix/api/config/RebalanceConfig.java\n\thelix-core/src/main/java/org/apache/helix/api/config/StateTransitionThrottleConfig.java\n\thelix-core/src/main/java/org/apache/helix/api/config/StateTransitionTimeoutConfig.java\n\thelix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java\n\thelix-core/src/main/java/org/apache/helix/controller/common/PartitionStateMap.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/AbstractRebalancer.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/AutoRebalancer.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/DelayedAutoRebalancer.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/SemiAutoRebalancer.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/strategy/AutoRebalanceStrategy.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/strategy/CrushRebalanceStrategy.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/strategy/MultiRoundCrushRebalanceStrategy.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/strategy/crushMapping/CRUSHPlacementAlgorithm.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/topology/Node.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/topology/Topology.java\n\thelix-core/src/main/java/org/apache/helix/controller/rebalancer/util/RebalanceScheduler.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/BestPossibleStateCalcStage.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/BestPossibleStateOutput.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/ClusterDataCache.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateComputationStage.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/ExternalViewComputeStage.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/IntermediateStateCalcStage.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/MessageGenerationPhase.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/MessageSelectionStage.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/PersistAssignmentStage.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/ReadClusterDataStage.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/ResourceComputationStage.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/StateTransitionThrottleController.java\n\thelix-core/src/main/java/org/apache/helix/controller/stages/TaskAssignmentStage.java\n\thelix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java\n\thelix-core/src/main/java/org/apache/helix/manager/zk/ParticipantManager.java\n\thelix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\thelix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixDataAccessor.java\n\thelix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixManager.java\n\thelix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java\n\thelix-core/src/main/java/org/apache/helix/manager/zk/ZkClient.java\n\thelix-core/src/main/java/org/apache/helix/messaging/DefaultMessagingService.java\n\thelix-core/src/main/java/org/apache/helix/messaging/handling/HelixTask.java\n\thelix-core/src/main/java/org/apache/helix/messaging/handling/HelixTaskExecutor.java\n\thelix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n\thelix-core/src/main/java/org/apache/helix/model/IdealState.java\n\thelix-core/src/main/java/org/apache/helix/model/InstanceConfig.java\n\thelix-core/src/main/java/org/apache/helix/model/LeaderHistory.java\n\thelix-core/src/main/java/org/apache/helix/model/ParticipantHistory.java\n\thelix-core/src/main/java/org/apache/helix/model/ResourceConfig.java\n\thelix-core/src/main/java/org/apache/helix/model/StateModelDefinition.java\n\thelix-core/src/main/java/org/apache/helix/model/builder/IdealStateBuilder.java\n\thelix-core/src/main/java/org/apache/helix/monitoring/ParticipantStatusMonitor.java\n\thelix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java\n\thelix-core/src/main/java/org/apache/helix/monitoring/mbeans/InstanceMonitor.java\n\thelix-core/src/main/java/org/apache/helix/monitoring/mbeans/JobMonitor.java\n\thelix-core/src/main/java/org/apache/helix/monitoring/mbeans/ParticipantMessageMonitor.java\n\thelix-core/src/main/java/org/apache/helix/participant/statemachine/StateModelFactory.java\n\thelix-core/src/main/java/org/apache/helix/task/DeprecatedTaskRebalancer.java\n\thelix-core/src/main/java/org/apache/helix/task/FixedTargetTaskAssignmentCalculator.java\n\thelix-core/src/main/java/org/apache/helix/task/GenericTaskAssignmentCalculator.java\n\thelix-core/src/main/java/org/apache/helix/task/JobConfig.java\n\thelix-core/src/main/java/org/apache/helix/task/JobContext.java\n\thelix-core/src/main/java/org/apache/helix/task/JobRebalancer.java\n\thelix-core/src/main/java/org/apache/helix/task/TaskConstants.java\n\thelix-core/src/main/java/org/apache/helix/task/TaskDriver.java\n\thelix-core/src/main/java/org/apache/helix/task/TaskRebalancer.java\n\thelix-core/src/main/java/org/apache/helix/task/TaskState.java\n\thelix-core/src/main/java/org/apache/helix/task/TaskStateModel.java\n\thelix-core/src/main/java/org/apache/helix/task/TaskStateModelFactory.java\n\thelix-core/src/main/java/org/apache/helix/task/TaskUtil.java\n\thelix-core/src/main/java/org/apache/helix/task/Workflow.java\n\thelix-core/src/main/java/org/apache/helix/task/WorkflowConfig.java\n\thelix-core/src/main/java/org/apache/helix/task/WorkflowContext.java\n\thelix-core/src/main/java/org/apache/helix/task/WorkflowRebalancer.java\n\thelix-core/src/main/java/org/apache/helix/task/beans/JobBean.java\n\thelix-core/src/main/java/org/apache/helix/tools/ClusterExternalViewVerifier.java\n\thelix-core/src/main/java/org/apache/helix/tools/ClusterLiveNodesVerifier.java\n\thelix-core/src/main/java/org/apache/helix/tools/ClusterStateVerifier.java\n\thelix-core/src/main/java/org/apache/helix/tools/ClusterVerifier.java\n\thelix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/BestPossibleExternalViewVerifier.java\n\thelix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/StrictMatchExternalViewVerifier.java\n\thelix-core/src/main/java/org/apache/helix/tools/ClusterVerifiers/ZkHelixClusterVerifier.java\n\thelix-core/src/main/java/org/apache/helix/tools/IntegrationTestUtil.java\n\thelix-core/src/main/java/org/apache/helix/util/HelixUtil.java\n\thelix-core/src/test/java/org/apache/helix/Mocks.java\n\thelix-core/src/test/java/org/apache/helix/TestHelixTaskExecutor.java\n\thelix-core/src/test/java/org/apache/helix/TestPropertyPathBuilder.java\n\thelix-core/src/test/java/org/apache/helix/ZkUnitTestBase.java\n\thelix-core/src/test/java/org/apache/helix/controller/rebalancer/TestAutoRebalanceStrategy.java\n\thelix-core/src/test/java/org/apache/helix/controller/stages/TestBestPossibleCalcStageCompatibility.java\n\thelix-core/src/test/java/org/apache/helix/controller/stages/TestBestPossibleStateCalcStage.java\n\thelix-core/src/test/java/org/apache/helix/controller/stages/TestCurrentStateComputationStage.java\n\thelix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java\n\thelix-core/src/test/java/org/apache/helix/controller/stages/TestResourceComputationStage.java\n\thelix-core/src/test/java/org/apache/helix/controller/stages/TestResourceValidationStage.java\n\thelix-core/src/test/java/org/apache/helix/controller/strategy/TestTopology.java\n\thelix-core/src/test/java/org/apache/helix/integration/SinglePartitionLeaderStandByTest.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestAddNodeAfterControllerStart.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestBatchMessageHandling.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestBucketizedResource.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestCarryOverBadCurState.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestClusterStartsup.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestDisable.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestDriver.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestDrop.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestEnableCompression.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestEnablePartitionDuringDisable.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestNullReplica.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestPartitionMovementThrottle.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestPersistAssignmentStage.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestRebalancerPersistAssignments.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestResourceGroupEndtoEnd.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestStartMultipleControllersWithSameName.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestStateTransitionCancellation.java\n\thelix-core/src/test/java/org/apache/helix/integration/TestSyncSessionToController.java\n\thelix-core/src/test/java/org/apache/helix/integration/ZkIntegrationTestBase.java\n\thelix-core/src/test/java/org/apache/helix/integration/manager/MockParticipantManager.java\n\thelix-core/src/test/java/org/apache/helix/integration/manager/TestParticipantManager.java\n\thelix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessage.java\n\thelix-core/src/test/java/org/apache/helix/integration/messaging/TestBatchMessageWrapper.java\n\thelix-core/src/test/java/org/apache/helix/integration/messaging/TestMessageThrottle.java\n\thelix-core/src/test/java/org/apache/helix/integration/messaging/TestSchedulerMessage.java\n\thelix-core/src/test/java/org/apache/helix/integration/rebalancer/TestAutoIsWithEmptyMap.java\n\thelix-core/src/test/java/org/apache/helix/integration/rebalancer/TestAutoRebalance.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/MockTask.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TaskTestBase.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TaskTestUtil.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestGenericTaskAssignmentCalculator.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestIndependentTaskRebalancer.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestJobQueueCleanUp.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestRecurringJobQueue.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestTaskRebalancer.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestTaskRebalancerParallel.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestTaskRebalancerStopResume.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestTaskRetryDelay.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestTaskThrottling.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestUnregisteredCommand.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestUserContentStore.java\n\thelix-core/src/test/java/org/apache/helix/integration/task/TestWorkflowJobDependency.java\n\thelix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheAsyncOpMultiThread.java\n\thelix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheAsyncOpSingleThread.java\n\thelix-core/src/test/java/org/apache/helix/manager/zk/TestWtCacheSyncOpSingleThread.java\n\thelix-core/src/test/java/org/apache/helix/manager/zk/TestZKUtil.java\n\thelix-core/src/test/java/org/apache/helix/manager/zk/TestZkBaseDataAccessor.java\n\thelix-core/src/test/java/org/apache/helix/manager/zk/TestZkCacheAsyncOpSingleThread.java\n\thelix-core/src/test/java/org/apache/helix/manager/zk/TestZkCacheSyncOpSingleThread.java\n\thelix-core/src/test/java/org/apache/helix/manager/zk/TestZkClient.java\n\thelix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\thelix-core/src/test/java/org/apache/helix/messaging/TestDefaultMessagingService.java\n\thelix-core/src/test/java/org/apache/helix/messaging/handling/TestConfigThreadpoolSize.java\n\thelix-core/src/test/java/org/apache/helix/messaging/handling/TestHelixTaskExecutor.java\n\thelix-core/src/test/java/org/apache/helix/messaging/handling/TestResourceThreadpoolSize.java\n\thelix-core/src/test/java/org/apache/helix/monitoring/TestParticipantMonitor.java\n\thelix-core/src/test/java/org/apache/helix/monitoring/mbeans/TestDisableResourceMbean.java\n\thelix-core/src/test/java/org/apache/helix/participant/TestDistControllerElection.java\n\thelix-core/src/test/java/org/apache/helix/task/TaskSynchronizedTestBase.java\n\thelix-core/src/test/java/org/apache/helix/task/TestCleanExpiredJobs.java\n\thelix-core/src/test/java/org/apache/helix/task/TestScheduleDelayJobs.java\n\thelix-core/src/test/java/org/apache/helix/task/TestSemiAutoStateTransition.java\n\thelix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java\n\thelix-core/src/test/java/org/apache/helix/tools/TestClusterVerifier.java\n\tpom.xml\n\trecipes/distributed-lock-manager/pom.xml\n\trecipes/pom.xml\n\trecipes/rabbitmq-consumer-group/pom.xml\n\trecipes/rsync-replicated-file-system/pom.xml\n\trecipes/service-discovery/pom.xml\n\trecipes/task-execution/pom.xml\n","date":"2017-11-08 08:48:26","modifiedFileCount":"275","status":"B","submitter":"Junkai Xue"},{"authorTime":"2021-06-05 07:25:32","codes":[{"authorDate":"2017-11-08 08:48:26","commitOrder":2,"curCode":"  protected void put(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().put(entity);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n  }\n","date":"2017-11-08 08:48:26","endLine":358,"groupId":"2903","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(Stringuri@Map<String@String>queryParams@Entityentity@intexpectedReturnStatus)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/1e/b494c3fe50636723b4f01ea9e691b31f0ea411.src","preCode":"  protected void put(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().put(entity);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"N"},{"authorDate":"2021-06-05 07:25:32","commitOrder":2,"curCode":"  protected String post(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus, boolean  expectBodyReturned) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().post(entity);\n    String result = response.readEntity(String.class);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n    return result;\n  }\n","date":"2021-06-05 07:25:32","endLine":542,"groupId":"2903","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"post","params":"(Stringuri@Map<String@String>queryParams@Entityentity@intexpectedReturnStatus@booleanexpectBodyReturned)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/cf/3a4bf1e73fe971f315a43e9ce14968b7ac20e7.src","preCode":"  protected void post(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().post(entity);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":530,"status":"M"}],"commitId":"fa83198a0b64e6056a35b19079525df1c6924f6e","commitMessage":"@@@New REST api partitionAssignment -- return potential assignment given cluster change (#1747)\n\nNew REST api partitionAssignment -- return potential assignment given cluster change","date":"2021-06-05 07:25:32","modifiedFileCount":"5","status":"M","submitter":"xyuanlu"},{"authorTime":"2021-08-04 01:53:59","codes":[{"authorDate":"2017-11-08 08:48:26","commitOrder":3,"curCode":"  protected void put(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().put(entity);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n  }\n","date":"2017-11-08 08:48:26","endLine":358,"groupId":"101063","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(Stringuri@Map<String@String>queryParams@Entityentity@intexpectedReturnStatus)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/1e/b494c3fe50636723b4f01ea9e691b31f0ea411.src","preCode":"  protected void put(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().put(entity);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"N"},{"authorDate":"2021-08-04 01:53:59","commitOrder":3,"curCode":"  protected Response post(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus, boolean  expectBodyReturned) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().post(entity);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n    return response;\n  }\n","date":"2021-08-04 01:53:59","endLine":541,"groupId":"101063","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"post","params":"(Stringuri@Map<String@String>queryParams@Entityentity@intexpectedReturnStatus@booleanexpectBodyReturned)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/0f/29a6ea62388ee9cfc0660e6cae7262757d4989.src","preCode":"  protected String post(String uri, Map<String, String> queryParams, Entity entity,\n      int expectedReturnStatus, boolean  expectBodyReturned) {\n    WebTarget webTarget = target(uri);\n    if (queryParams != null) {\n      for (Map.Entry<String, String> entry : queryParams.entrySet()) {\n        webTarget = webTarget.queryParam(entry.getKey(), entry.getValue());\n      }\n    }\n    Response response = webTarget.request().post(entity);\n    String result = response.readEntity(String.class);\n    Assert.assertEquals(response.getStatus(), expectedReturnStatus);\n    return result;\n  }\n","realPath":"helix-rest/src/test/java/org/apache/helix/rest/server/AbstractTestClass.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":530,"status":"M"}],"commitId":"84835c5f8dcccb214e0b615aa6f15f8c6f1898dc","commitMessage":"@@@Add response metadata to response header for partitionAssignment (#1797)\n\nAdd response metadata to response header for partitionAssignment.","date":"2021-08-04 01:53:59","modifiedFileCount":"4","status":"M","submitter":"xyuanlu"}]
