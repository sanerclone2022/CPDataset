[{"authorTime":"2012-10-25 07:14:36","codes":[{"authorDate":"2012-10-25 07:14:36","commitOrder":1,"curCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName) throws JsonGenerationException,\n      JsonMappingException,\n      IOException\n  {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkClient =\n        (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n\n    String message =\n        ClusterRepresentationUtil.getClusterPropertyAsString(zkClient,\n                                                             clusterName,\n                                                             keyBuilder.idealStates(resourceName),\n                                                             MediaType.APPLICATION_JSON);\n\n    StringRepresentation representation =\n        new StringRepresentation(message, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","date":"2012-10-25 07:14:36","endLine":115,"groupId":"4763","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getIdealStateRepresentation","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3b/3e817f7d07c205cf80fa186ca7e09bc8e42ed5.src","preCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName) throws JsonGenerationException,\n      JsonMappingException,\n      IOException\n  {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkClient =\n        (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n\n    String message =\n        ClusterRepresentationUtil.getClusterPropertyAsString(zkClient,\n                                                             clusterName,\n                                                             keyBuilder.idealStates(resourceName),\n                                                             MediaType.APPLICATION_JSON);\n\n    StringRepresentation representation =\n        new StringRepresentation(message, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","realPath":"helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/ResourceGroupResource.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"},{"authorDate":"2012-10-25 07:14:36","commitOrder":1,"curCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName) throws JsonGenerationException,\n      JsonMappingException,\n      IOException\n  {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkClient =\n        (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n\n    String message =\n        ClusterRepresentationUtil.getClusterPropertyAsString(zkClient,\n                                                             clusterName,\n                                                             keyBuilder.idealStates(resourceName),\n                                                             MediaType.APPLICATION_JSON);\n\n    StringRepresentation representation =\n        new StringRepresentation(message, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","date":"2012-10-25 07:14:36","endLine":118,"groupId":"4763","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdealStateRepresentation","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/94/79b6817557ae86748d9370679fa514a6783525.src","preCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName) throws JsonGenerationException,\n      JsonMappingException,\n      IOException\n  {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkClient =\n        (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n\n    String message =\n        ClusterRepresentationUtil.getClusterPropertyAsString(zkClient,\n                                                             clusterName,\n                                                             keyBuilder.idealStates(resourceName),\n                                                             MediaType.APPLICATION_JSON);\n\n    StringRepresentation representation =\n        new StringRepresentation(message, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","realPath":"helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/IdealStateResource.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"437eb42eac35e181ae6793dd17390df33565e4dd","commitMessage":"@@@Refactoring the package names and removing jsql parser\n","date":"2012-10-25 07:14:36","modifiedFileCount":"0","status":"B","submitter":"Kishore Gopalakrishna"},{"authorTime":"2014-12-03 10:26:02","codes":[{"authorDate":"2012-10-25 07:14:36","commitOrder":2,"curCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName) throws JsonGenerationException,\n      JsonMappingException,\n      IOException\n  {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkClient =\n        (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n\n    String message =\n        ClusterRepresentationUtil.getClusterPropertyAsString(zkClient,\n                                                             clusterName,\n                                                             keyBuilder.idealStates(resourceName),\n                                                             MediaType.APPLICATION_JSON);\n\n    StringRepresentation representation =\n        new StringRepresentation(message, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","date":"2012-10-25 07:14:36","endLine":115,"groupId":"4763","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getIdealStateRepresentation","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3b/3e817f7d07c205cf80fa186ca7e09bc8e42ed5.src","preCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName) throws JsonGenerationException,\n      JsonMappingException,\n      IOException\n  {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkClient =\n        (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n\n    String message =\n        ClusterRepresentationUtil.getClusterPropertyAsString(zkClient,\n                                                             clusterName,\n                                                             keyBuilder.idealStates(resourceName),\n                                                             MediaType.APPLICATION_JSON);\n\n    StringRepresentation representation =\n        new StringRepresentation(message, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","realPath":"helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/ResourceGroupResource.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"N"},{"authorDate":"2014-12-03 10:26:02","commitOrder":2,"curCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName)\n      throws JsonGenerationException, JsonMappingException, IOException {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkClient =\n        ResourceUtil.getAttributeFromCtx(getContext(), ResourceUtil.ContextKey.ZKCLIENT);\n\n    String message =\n        ClusterRepresentationUtil.getClusterPropertyAsString(zkClient, clusterName,\n            keyBuilder.idealStates(resourceName), MediaType.APPLICATION_JSON);\n\n    StringRepresentation representation =\n        new StringRepresentation(message, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","date":"2014-12-03 10:26:02","endLine":99,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdealStateRepresentation","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/00/81922be3589fe345e834d50972c5ab2408aab7.src","preCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName)\n      throws JsonGenerationException, JsonMappingException, IOException {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkClient = (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n\n    String message =\n        ClusterRepresentationUtil.getClusterPropertyAsString(zkClient, clusterName,\n            keyBuilder.idealStates(resourceName), MediaType.APPLICATION_JSON);\n\n    StringRepresentation representation =\n        new StringRepresentation(message, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","realPath":"helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/IdealStateResource.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"9a5dbeaa624715e76486ae908eab48e503d28ceb","commitMessage":"@@@[HELIX-546] Add REST API for Helix job queue management - third part.  rb=28620\n","date":"2014-12-03 10:26:02","modifiedFileCount":"10","status":"M","submitter":"zzhang"},{"authorTime":"2014-12-12 08:52:32","codes":[{"authorDate":"2014-12-12 08:52:32","commitOrder":3,"curCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName)\n      throws JsonGenerationException, JsonMappingException, IOException {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n\n    ZkClient zkclient =\n        ResourceUtil.getAttributeFromCtx(getContext(), ResourceUtil.ContextKey.RAW_ZKCLIENT);\n    String idealStateStr =\n        ResourceUtil.readZkAsBytes(zkclient, keyBuilder.idealStates(resourceName));\n\n    StringRepresentation representation =\n        new StringRepresentation(idealStateStr, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","date":"2014-12-12 08:52:32","endLine":82,"groupId":"10926","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getIdealStateRepresentation","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b0/8f0b134f9126b459bdf14ae042000cab9b18cb.src","preCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName)\n      throws JsonGenerationException, JsonMappingException, IOException {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkClient = (ZkClient) getContext().getAttributes().get(RestAdminApplication.ZKCLIENT);\n\n    String message =\n        ClusterRepresentationUtil.getClusterPropertyAsString(zkClient, clusterName,\n            keyBuilder.idealStates(resourceName), MediaType.APPLICATION_JSON);\n\n    StringRepresentation representation =\n        new StringRepresentation(message, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","realPath":"helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/ResourceGroupResource.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2014-12-12 08:52:32","commitOrder":3,"curCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName)\n      throws JsonGenerationException, JsonMappingException, IOException {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkclient =\n        ResourceUtil.getAttributeFromCtx(getContext(), ResourceUtil.ContextKey.RAW_ZKCLIENT);\n    String idealStateStr =\n        ResourceUtil.readZkAsBytes(zkclient, keyBuilder.idealStates(resourceName));\n\n    StringRepresentation representation =\n        new StringRepresentation(idealStateStr, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","date":"2014-12-12 08:52:32","endLine":97,"groupId":"10926","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdealStateRepresentation","params":"(StringclusterName@StringresourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/6f/f539e62323d0f59a6629621698ae50234d19c4.src","preCode":"  StringRepresentation getIdealStateRepresentation(String clusterName, String resourceName)\n      throws JsonGenerationException, JsonMappingException, IOException {\n    Builder keyBuilder = new PropertyKey.Builder(clusterName);\n    ZkClient zkClient =\n        ResourceUtil.getAttributeFromCtx(getContext(), ResourceUtil.ContextKey.ZKCLIENT);\n\n    String message =\n        ClusterRepresentationUtil.getClusterPropertyAsString(zkClient, clusterName,\n            keyBuilder.idealStates(resourceName), MediaType.APPLICATION_JSON);\n\n    StringRepresentation representation =\n        new StringRepresentation(message, MediaType.APPLICATION_JSON);\n\n    return representation;\n  }\n","realPath":"helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/IdealStateResource.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"e89174053fa9c447dacd99af3fcba89c82467b60","commitMessage":"@@@[HELIX-559] Fix Helix web admin performance issues.  rb=28974\n","date":"2014-12-12 08:52:32","modifiedFileCount":"9","status":"M","submitter":"zzhang"}]
