[{"authorTime":"2020-08-15 07:47:57","codes":[{"authorDate":"2020-08-14 02:22:45","commitOrder":6,"curCode":"  public void testChangeIdealState() throws InterruptedException {\n    String dbName = \"Test-DB-\" + TestHelper.getTestMethodName();\n    createResourceWithWagedRebalance(CLUSTER_NAME, dbName,\n        BuiltInStateModelDefinitions.MasterSlave.name(), PARTITIONS, _replica, _replica);\n    _gSetupTool.rebalanceStorageCluster(CLUSTER_NAME, dbName, _replica);\n    _allDBs.add(dbName);\n    Thread.sleep(300);\n\n    validate(_replica);\n\n    \r\n    IdealState is =\n        _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    int newReplicaFactor = _replica - 1;\n    is.setReplicas(\"\" + newReplicaFactor);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n    Thread.sleep(300);\n\n    validate(newReplicaFactor);\n\n    \r\n    is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    is.setNumPartitions(PARTITIONS + 1);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n    _gSetupTool.getClusterManagementTool().rebalance(CLUSTER_NAME, dbName, newReplicaFactor);\n    Thread.sleep(300);\n\n    validate(newReplicaFactor);\n    ExternalView ev =\n        _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, dbName);\n    Assert.assertEquals(ev.getPartitionSet().size(), PARTITIONS + 1);\n\n    \r\n    \r\n    \r\n    is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    is.setPreferenceList(dbName + \"_customizedPartition\", Collections.EMPTY_LIST);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n    Thread.sleep(300);\n\n    validate(newReplicaFactor);\n    ev =\n        _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, dbName);\n    Assert.assertEquals(ev.getPartitionSet().size(), PARTITIONS + 2);\n  }\n","date":"2020-08-14 02:22:45","endLine":321,"groupId":"2883","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testChangeIdealState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/c2/324622fbb6e44ac7c269fc5d591adc10dc0086.src","preCode":"  public void testChangeIdealState() throws InterruptedException {\n    String dbName = \"Test-DB-\" + TestHelper.getTestMethodName();\n    createResourceWithWagedRebalance(CLUSTER_NAME, dbName,\n        BuiltInStateModelDefinitions.MasterSlave.name(), PARTITIONS, _replica, _replica);\n    _gSetupTool.rebalanceStorageCluster(CLUSTER_NAME, dbName, _replica);\n    _allDBs.add(dbName);\n    Thread.sleep(300);\n\n    validate(_replica);\n\n    \r\n    IdealState is =\n        _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    int newReplicaFactor = _replica - 1;\n    is.setReplicas(\"\" + newReplicaFactor);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n    Thread.sleep(300);\n\n    validate(newReplicaFactor);\n\n    \r\n    is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    is.setNumPartitions(PARTITIONS + 1);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n    _gSetupTool.getClusterManagementTool().rebalance(CLUSTER_NAME, dbName, newReplicaFactor);\n    Thread.sleep(300);\n\n    validate(newReplicaFactor);\n    ExternalView ev =\n        _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, dbName);\n    Assert.assertEquals(ev.getPartitionSet().size(), PARTITIONS + 1);\n\n    \r\n    \r\n    \r\n    is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    is.setPreferenceList(dbName + \"_customizedPartition\", Collections.EMPTY_LIST);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n    Thread.sleep(300);\n\n    validate(newReplicaFactor);\n    ev =\n        _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, dbName);\n    Assert.assertEquals(ev.getPartitionSet().size(), PARTITIONS + 2);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"NB"},{"authorDate":"2020-08-15 07:47:57","commitOrder":6,"curCode":"  public void testRecreateSameResource() throws InterruptedException {\n    String dbName = \"Test-DB-\" + TestHelper.getTestMethodName();\n    createResourceWithWagedRebalance(CLUSTER_NAME, dbName,\n        BuiltInStateModelDefinitions.MasterSlave.name(), PARTITIONS, _replica, _replica);\n    _gSetupTool.rebalanceStorageCluster(CLUSTER_NAME, dbName, _replica);\n    _allDBs.add(dbName);\n    \r\n    Thread.sleep(300);\n    validate(_replica);\n\n    \r\n    IdealState is =\n        _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n\n    \r\n    _gSetupTool.dropResourceFromCluster(CLUSTER_NAME, dbName);\n    _allDBs.remove(dbName);\n    \r\n    Thread.sleep(100);\n    validate(_replica);\n\n    \r\n    _gSetupTool.getClusterManagementTool().addResource(CLUSTER_NAME, dbName, is);\n    _allDBs.add(dbName);\n    \r\n    Thread.sleep(100);\n    validate(_replica);\n  }\n","date":"2020-08-15 07:47:57","endLine":705,"groupId":"6662","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRecreateSameResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b7/78b3c80b6332a15cbe089271dfe6ba8fff357c.src","preCode":"  public void testRecreateSameResource() throws InterruptedException {\n    String dbName = \"Test-DB-\" + TestHelper.getTestMethodName();\n    createResourceWithWagedRebalance(CLUSTER_NAME, dbName,\n        BuiltInStateModelDefinitions.MasterSlave.name(), PARTITIONS, _replica, _replica);\n    _gSetupTool.rebalanceStorageCluster(CLUSTER_NAME, dbName, _replica);\n    _allDBs.add(dbName);\n    \r\n    Thread.sleep(300);\n    validate(_replica);\n\n    \r\n    IdealState is =\n        _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n\n    \r\n    _gSetupTool.dropResourceFromCluster(CLUSTER_NAME, dbName);\n    _allDBs.remove(dbName);\n    \r\n    Thread.sleep(100);\n    validate(_replica);\n\n    \r\n    _gSetupTool.getClusterManagementTool().addResource(CLUSTER_NAME, dbName, is);\n    _allDBs.add(dbName);\n    \r\n    Thread.sleep(100);\n    validate(_replica);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":678,"status":"B"}],"commitId":"a901c201a00d4b96294020ef82bc113fea196e8a","commitMessage":"@@@Don't skip WAGED rebalancer calculation even the resource list is empty. (#1271)\n\nThis change is to allow the rebalancer logic cleaning up the internal assignment state and cache if all the resources are removed from the cluster.","date":"2020-08-15 07:47:57","modifiedFileCount":"4","status":"M","submitter":"Jiajun Wang"},{"authorTime":"2020-11-18 08:24:18","codes":[{"authorDate":"2020-11-18 08:24:18","commitOrder":7,"curCode":"  public void testChangeIdealState() throws InterruptedException {\n    String dbName = \"Test-DB-\" + TestHelper.getTestMethodName();\n    createResourceWithWagedRebalance(CLUSTER_NAME, dbName,\n        BuiltInStateModelDefinitions.MasterSlave.name(), PARTITIONS, _replica, _replica);\n    _gSetupTool.rebalanceStorageCluster(CLUSTER_NAME, dbName, _replica);\n    _allDBs.add(dbName);\n\n    validate(_replica);\n\n    \r\n    IdealState is =\n        _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    int newReplicaFactor = _replica - 1;\n    is.setReplicas(\"\" + newReplicaFactor);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n\n    validate(newReplicaFactor);\n\n    \r\n    is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    is.setNumPartitions(PARTITIONS + 1);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n    _gSetupTool.getClusterManagementTool().rebalance(CLUSTER_NAME, dbName, newReplicaFactor);\n\n    validate(newReplicaFactor);\n    ExternalView ev =\n        _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, dbName);\n    Assert.assertEquals(ev.getPartitionSet().size(), PARTITIONS + 1);\n\n    \r\n    \r\n    \r\n    is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    is.setPreferenceList(dbName + \"_customizedPartition\", Collections.EMPTY_LIST);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n\n    validate(newReplicaFactor);\n    ev = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, dbName);\n    Assert.assertEquals(ev.getPartitionSet().size(), PARTITIONS + 2);\n  }\n","date":"2020-11-18 08:24:18","endLine":330,"groupId":"10409","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testChangeIdealState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/a7/049f95dd1a05ba339c0a4dbc8f010c8b746baf.src","preCode":"  public void testChangeIdealState() throws InterruptedException {\n    String dbName = \"Test-DB-\" + TestHelper.getTestMethodName();\n    createResourceWithWagedRebalance(CLUSTER_NAME, dbName,\n        BuiltInStateModelDefinitions.MasterSlave.name(), PARTITIONS, _replica, _replica);\n    _gSetupTool.rebalanceStorageCluster(CLUSTER_NAME, dbName, _replica);\n    _allDBs.add(dbName);\n    Thread.sleep(300);\n\n    validate(_replica);\n\n    \r\n    IdealState is =\n        _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    int newReplicaFactor = _replica - 1;\n    is.setReplicas(\"\" + newReplicaFactor);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n    Thread.sleep(300);\n\n    validate(newReplicaFactor);\n\n    \r\n    is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    is.setNumPartitions(PARTITIONS + 1);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n    _gSetupTool.getClusterManagementTool().rebalance(CLUSTER_NAME, dbName, newReplicaFactor);\n    Thread.sleep(300);\n\n    validate(newReplicaFactor);\n    ExternalView ev =\n        _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, dbName);\n    Assert.assertEquals(ev.getPartitionSet().size(), PARTITIONS + 1);\n\n    \r\n    \r\n    \r\n    is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n    is.setPreferenceList(dbName + \"_customizedPartition\", Collections.EMPTY_LIST);\n    _gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME, dbName, is);\n    Thread.sleep(300);\n\n    validate(newReplicaFactor);\n    ev = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, dbName);\n    Assert.assertEquals(ev.getPartitionSet().size(), PARTITIONS + 2);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"M"},{"authorDate":"2020-11-18 08:24:18","commitOrder":7,"curCode":"  public void testRecreateSameResource() throws InterruptedException {\n    String dbName = \"Test-DB-\" + TestHelper.getTestMethodName();\n    createResourceWithWagedRebalance(CLUSTER_NAME, dbName,\n        BuiltInStateModelDefinitions.MasterSlave.name(), PARTITIONS, _replica, _replica);\n    _gSetupTool.rebalanceStorageCluster(CLUSTER_NAME, dbName, _replica);\n    _allDBs.add(dbName);\n    \r\n    validate(_replica);\n\n    \r\n    IdealState is =\n        _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n\n    \r\n    _gSetupTool.dropResourceFromCluster(CLUSTER_NAME, dbName);\n    _allDBs.remove(dbName);\n    \r\n    validate(_replica);\n\n    \r\n    _gSetupTool.getClusterManagementTool().addResource(CLUSTER_NAME, dbName, is);\n    _allDBs.add(dbName);\n    \r\n    validate(_replica);\n  }\n","date":"2020-11-18 08:24:18","endLine":674,"groupId":"10409","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRecreateSameResource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/a7/049f95dd1a05ba339c0a4dbc8f010c8b746baf.src","preCode":"  public void testRecreateSameResource() throws InterruptedException {\n    String dbName = \"Test-DB-\" + TestHelper.getTestMethodName();\n    createResourceWithWagedRebalance(CLUSTER_NAME, dbName,\n        BuiltInStateModelDefinitions.MasterSlave.name(), PARTITIONS, _replica, _replica);\n    _gSetupTool.rebalanceStorageCluster(CLUSTER_NAME, dbName, _replica);\n    _allDBs.add(dbName);\n    \r\n    Thread.sleep(300);\n    validate(_replica);\n\n    \r\n    IdealState is =\n        _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME, dbName);\n\n    \r\n    _gSetupTool.dropResourceFromCluster(CLUSTER_NAME, dbName);\n    _allDBs.remove(dbName);\n    \r\n    Thread.sleep(100);\n    validate(_replica);\n\n    \r\n    _gSetupTool.getClusterManagementTool().addResource(CLUSTER_NAME, dbName, is);\n    _allDBs.add(dbName);\n    \r\n    Thread.sleep(100);\n    validate(_replica);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/rebalancer/WagedRebalancer/TestWagedRebalance.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":650,"status":"M"}],"commitId":"1d6d6076550f4076c2108e7738c6f0d54bd4178d","commitMessage":"@@@Stabilizing several tests by giving a starting up waiting periods  (#1533)\n\nStabilizing several tests by giving a starting up waiting periods up-on constructing BestPossibleExternalViewVerifier.\n\nCo-authored-by: Kai Sun <ksun@ksun-mn1.linkedin.biz>","date":"2020-11-18 08:24:18","modifiedFileCount":"12","status":"M","submitter":"kaisun2000"}]
