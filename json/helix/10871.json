[{"authorTime":"2018-06-08 08:37:54","codes":[{"authorDate":"2018-06-08 08:37:54","commitOrder":10,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-09-18 06:45:04","endLine":288,"groupId":"3036","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9f/947552860a3c8f314a076c24d6fc785cd3f78e.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"MB"},{"authorDate":"2018-06-08 08:37:54","commitOrder":10,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      \r\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-09-18 06:45:04","endLine":339,"groupId":"2097","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9f/947552860a3c8f314a076c24d6fc785cd3f78e.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      \r\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"B"}],"commitId":"c45d3a66f55dcddb2b95a1872e76f3030572d2c7","commitMessage":"@@@For performance improvement.  we need to differentiate the task pipeline and regular pipeline.\n\n1. Split the task pipeline out from regular pipeline.\n2. Remove unnecessary stages for Task pipeline which are independent from previous outputs.\n","date":"2018-09-18 06:45:04","modifiedFileCount":"1","status":"M","submitter":"Junkai Xue"},{"authorTime":"2018-07-18 08:56:36","codes":[{"authorDate":"2018-06-08 08:37:54","commitOrder":11,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-09-18 06:45:04","endLine":288,"groupId":"3036","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9f/947552860a3c8f314a076c24d6fc785cd3f78e.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"N"},{"authorDate":"2018-07-18 08:56:36","commitOrder":11,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      \r\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-09-18 06:45:45","endLine":339,"groupId":"2097","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/48/677d3b11effcda419e87129349d591540ded9c.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      \r\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"}],"commitId":"50c9aa3a2eaf82e75743c693b7e40ad741e51198","commitMessage":"@@@Replace BestPossibleStage with TaskSchedulingStage\n\nFor new task framework.  we dont have to loop through all the idealstates. For the first step.  we can have a simple version of BestPossibleStage.\n","date":"2018-09-18 06:45:45","modifiedFileCount":"3","status":"M","submitter":"Junkai Xue"},{"authorTime":"2018-08-01 09:04:35","codes":[{"authorDate":"2018-06-08 08:37:54","commitOrder":12,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-09-18 06:45:04","endLine":288,"groupId":"3036","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9f/947552860a3c8f314a076c24d6fc785cd3f78e.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"N"},{"authorDate":"2018-08-01 09:04:35","commitOrder":12,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      \r\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-09-18 06:47:42","endLine":340,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/aa/e425f13e33a78734cf577c4e916a1d34ce26d3.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      \r\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"}],"commitId":"1ad490ec72a4732417aa84925f39afc6ce43092e","commitMessage":"@@@Async purge job for task framework\n\nThere are some bottlenecks identified from previous profiling: https://iwww.corp.linkedin.com/wiki/cf/display/ENGS/Task+Framework+Performance+Profiling\nThis is the reason we need to rearchitect the task framework for Helix. For task framework performance improvement.  we need to make purge job functionality asynchronized from the existing pipeline.  which originally generates a heavy delay for pipeline execution.\n\nThis rb contains the change for moving purge jobs to be async executed. At same time.  it brings the impact that job purge time may get a little bit delay because the asyc task submission.\n","date":"2018-09-18 06:47:42","modifiedFileCount":"7","status":"M","submitter":"Junkai Xue"},{"authorTime":"2018-07-21 06:37:23","codes":[{"authorDate":"2018-07-21 06:37:23","commitOrder":13,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-09-22 05:09:25","endLine":294,"groupId":"3036","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/6f/d462376c7f1be4c63e5aadd513ed0369242893.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"},{"authorDate":"2018-07-21 06:37:23","commitOrder":13,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-09-22 05:09:25","endLine":341,"groupId":"1321","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/6f/d462376c7f1be4c63e5aadd513ed0369242893.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      \r\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new TaskAssignmentStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"}],"commitId":"65533eae6966d7c10e23810d233c2ee0250909ec","commitMessage":"@@@Create abstract stages for shared stages between two pipelines\n\nWhen we try to remove the redundant stages for task framework.  we need to make two unconnected stages can be compatible. So we need to have abstract stages for both regular pipeline and task pipeline.\n","date":"2018-09-22 05:09:25","modifiedFileCount":"8","status":"M","submitter":"Junkai Xue"},{"authorTime":"2018-10-30 04:43:04","codes":[{"authorDate":"2018-07-21 06:37:23","commitOrder":14,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-09-22 05:09:25","endLine":294,"groupId":"3036","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/6f/d462376c7f1be4c63e5aadd513ed0369242893.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"N"},{"authorDate":"2018-10-30 04:43:04","commitOrder":14,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-10-30 04:43:04","endLine":348,"groupId":"1321","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/6a/8fedd0c06a42e546f6102e0c49398c96b4e376.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"M"}],"commitId":"923002e8e355bdff87bb62f2f1fd1939b66641ec","commitMessage":"@@@Batch write operations of task framework context update\n\nExisting task framework pipeline performance is limited by updating Workflow/Job Contexts to ZK. Current controller will update context even after a simple change.\n\nFor the first step.  we can have synchronized batch write for all the write operations. Then in the future.  we should have async batch write for it and combined with no read from context feature.\n","date":"2018-10-30 04:43:04","modifiedFileCount":"9","status":"M","submitter":"Junkai Xue"},{"authorTime":"2018-10-30 04:43:04","codes":[{"authorDate":"2018-10-31 06:55:20","commitOrder":15,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-10-31 06:58:45","endLine":304,"groupId":"3036","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/dd/409e5c58232e2693c16db03b882e50ba339e60.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"M"},{"authorDate":"2018-10-30 04:43:04","commitOrder":15,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-10-30 04:43:04","endLine":348,"groupId":"1321","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/6a/8fedd0c06a42e546f6102e0c49398c96b4e376.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"N"}],"commitId":"7e49f995e29ea200fcc42ce6af148ed521979f5c","commitMessage":"@@@[HELIX-771] More detailed top state handoff metrics\n","date":"2018-10-31 06:58:45","modifiedFileCount":"9","status":"M","submitter":"Harry Zhang"},{"authorTime":"2019-02-26 09:36:00","codes":[{"authorDate":"2018-10-31 06:55:20","commitOrder":16,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2018-10-31 06:58:45","endLine":304,"groupId":"3036","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/dd/409e5c58232e2693c16db03b882e50ba339e60.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"N"},{"authorDate":"2019-02-26 09:36:00","commitOrder":16,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2019-02-26 09:36:00","endLine":377,"groupId":"1321","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/2d/aaeefac3063a37712e83382309e837e2064f82.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":331,"status":"M"}],"commitId":"fbb679c5f4804652ea730bf5cd4ee6bf1329efc3","commitMessage":"@@@split data cache\n","date":"2019-02-26 09:36:00","modifiedFileCount":"95","status":"M","submitter":"Harry Zhang"},{"authorTime":"2019-02-26 09:36:00","codes":[{"authorDate":"2019-02-26 10:05:34","commitOrder":17,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2019-02-27 02:27:11","endLine":337,"groupId":"4899","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/1b/a26f184d2776eb4fa4f4697f2e89bbcfb2290c.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"M"},{"authorDate":"2019-02-26 09:36:00","commitOrder":17,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2019-02-26 09:36:00","endLine":377,"groupId":"1321","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/2d/aaeefac3063a37712e83382309e837e2064f82.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":331,"status":"N"}],"commitId":"313affc2e020068a1e5e7c5e92224d3299b1a404","commitMessage":"@@@[HELIX-798] HELIX: Implement auto-exit of maintenance mode\n\nThis diff contains the implementation and integration of a feature addition for Helix: auto-exit of maintenance mode.\nChangelist:\n1. BestPossibleCalcStage logic was modified so that it will use a new API\n2. IntermediateCalcStage logic was modified to check if the cluster is in maintenance first\n3. enableMaintenance() API was deprecated and replaced with auto/manual APIs while preserving backward-compatibility\n4. An async stage (MaintenanceRecoveryStage) was created and added to the resource pipeline\n5. A series of integration tests were added for various exit/non-exit scenarios\n","date":"2019-02-27 02:27:11","modifiedFileCount":"12","status":"M","submitter":"narendly"},{"authorTime":"2019-02-26 09:36:00","codes":[{"authorDate":"2019-02-26 10:09:08","commitOrder":18,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2019-02-27 02:27:11","endLine":340,"groupId":"4899","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/dd/a4552d07e67ce3f49ddf872be3f185c6843cd2.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"M"},{"authorDate":"2019-02-26 09:36:00","commitOrder":18,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2019-02-26 09:36:00","endLine":377,"groupId":"1321","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/2d/aaeefac3063a37712e83382309e837e2064f82.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":331,"status":"N"}],"commitId":"4f863c3549631b5e9fccc6f40b513fff6fe435fa","commitMessage":"@@@[HELIX-801] HELIX: Implement maintenance history for maintenance mode\n\nThis diff implements maintenance history for entering and exiting maintenance mode.\nChangelist:\n1. Implement a separate DataUpdater for LeaderHistory ZNode update\n2. Implement recording of maintenance history in LeaderHistory ZNode\n3. Fix the bug where only the last few history entries are kept\n","date":"2019-02-27 02:27:11","modifiedFileCount":"10","status":"M","submitter":"narendly"},{"authorTime":"2019-02-26 09:36:00","codes":[{"authorDate":"2019-01-31 02:48:29","commitOrder":19,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2019-02-27 09:18:02","endLine":415,"groupId":"4899","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/a8/f287288afc04268678b731f48e2d68932734c8.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"M"},{"authorDate":"2019-02-26 09:36:00","commitOrder":19,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2019-02-26 09:36:00","endLine":377,"groupId":"1321","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/2d/aaeefac3063a37712e83382309e837e2064f82.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":331,"status":"N"}],"commitId":"19b6d7c1db3fdce261e9f035c87e155e06315b80","commitMessage":"@@@Fix race condition in P2P message handling that can cause long mastership handoff problem.\n","date":"2019-02-27 09:18:02","modifiedFileCount":"12","status":"M","submitter":"Lei Xia"},{"authorTime":"2019-09-25 01:28:24","codes":[{"authorDate":"2019-01-31 02:48:29","commitOrder":20,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2019-02-27 09:18:02","endLine":415,"groupId":"4899","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/a8/f287288afc04268678b731f48e2d68932734c8.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"N"},{"authorDate":"2019-09-25 01:28:24","commitOrder":20,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2019-09-25 01:28:24","endLine":495,"groupId":"1321","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b8/0b8cce0a95464bb5a2b4e61aa82ec0e1e2328e.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":447,"status":"M"}],"commitId":"e4f3da4cdb0c316763476f0dd92bffd01c1cc2ab","commitMessage":"@@@Change the way Helix triggers rebalance (#472)\n\nA method is added which generates OnDemandRebalance event.\nThis event causes the controller to run the rebalance pipeline for both of the pipelines.\n\"Touch\" logic (as in directly reading and writing to ZNodes) has been removed and replaced by this new method.","date":"2019-09-25 01:28:24","modifiedFileCount":"8","status":"M","submitter":"Ali Reza Zamani Zadeh Najari"},{"authorTime":"2019-09-25 01:28:24","codes":[{"authorDate":"2020-03-26 05:24:25","commitOrder":21,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2020-04-24 03:27:36","endLine":522,"groupId":"4899","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/86/444418487bd433a9b767cf5b5a7ad6a4a19475.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline, liveInstancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline, dataPreprocess, externalViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":441,"status":"M"},{"authorDate":"2019-09-25 01:28:24","commitOrder":21,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2019-09-25 01:28:24","endLine":495,"groupId":"1321","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b8/0b8cce0a95464bb5a2b4e61aa82ec0e1e2328e.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":447,"status":"N"}],"commitId":"fc3dfdc9f7fd0ec2fbdd41846f847e948e651cdd","commitMessage":"@@@Add new stages in Helix generic controller for customized view aggregation. (#851)\n\nAdd extra stages and pipelines in controller for customized state computation and customized view aggregation.\nAdd refresh logic in resource data provider for customized view related data refresh.\nAdd customized state event handling in CallbackHandler.\nAdd integration test for customized view aggregation.\nModify existing tests to verify new logic.\n\nCo-authored-by: Meng Zhang <mnzhang@mnzhang-mn1.linkedin.biz>","date":"2020-04-24 03:27:36","modifiedFileCount":"18","status":"M","submitter":"zhangmeng916"},{"authorTime":"2020-12-09 06:31:12","codes":[{"authorDate":"2020-03-26 05:24:25","commitOrder":22,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2020-04-24 03:27:36","endLine":522,"groupId":"4899","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/86/444418487bd433a9b767cf5b5a7ad6a4a19475.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":441,"status":"N"},{"authorDate":"2020-12-09 06:31:12","commitOrder":22,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.TaskCurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2020-12-22 07:00:24","endLine":593,"groupId":"1321","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/11/ca5a3933ab2f9692ee977810a22f860a0d70ac.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":543,"status":"M"}],"commitId":"a18deb06c28e25e79a9a773069a79ce21a2399b3","commitMessage":"@@@Controller-side Task Current State Migration (#1550)\n\nFirst part of task current state migration. \nAll changes made in this PR are on the controller side \nand are directly pipeline-impacting.","date":"2020-12-22 07:00:24","modifiedFileCount":"25","status":"M","submitter":"Neal Sun"},{"authorTime":"2020-12-09 06:31:12","codes":[{"authorDate":"2021-05-26 01:19:08","commitOrder":23,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2021-06-02 02:44:29","endLine":579,"groupId":"4899","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/4b/aac38bb2dd48f41ea7e5fdbf57e3c9bb2a2cac.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"M"},{"authorDate":"2020-12-09 06:31:12","commitOrder":23,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.TaskCurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2020-12-22 07:00:24","endLine":593,"groupId":"1321","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/11/ca5a3933ab2f9692ee977810a22f860a0d70ac.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.TaskCurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":543,"status":"N"}],"commitId":"f49986e24c27c49d8c877457753e32dcf8b540f4","commitMessage":"@@@[Replica Level Throttle] Make Pipeline in a correct order and fixes tests (#1750)\n\n* Make Pipeline in a correct order and fixes tests\n\n1. Make pipeline running in a correct order to process computation\n2. Add \"DROPPED\" case in the mapping to reflect the real case.\n3. Fixes test cases.","date":"2021-06-02 02:44:29","modifiedFileCount":"15","status":"M","submitter":"Junkai Xue"},{"authorTime":"2021-05-27 07:44:46","codes":[{"authorDate":"2021-05-27 07:44:46","commitOrder":24,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2021-06-02 02:44:29","endLine":577,"groupId":"4899","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b8/fac9267c758b5da2045a519b0076209ed70951.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":494,"status":"M"},{"authorDate":"2021-05-27 07:44:46","commitOrder":24,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.TaskCurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2021-06-02 02:44:29","endLine":629,"groupId":"1321","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b8/fac9267c758b5da2045a519b0076209ed70951.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new TaskMessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.TaskCurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":579,"status":"M"}],"commitId":"17c52da9422fbde427eb5b1309ddeeda389c092c","commitMessage":"@@@Refactor/clean up code without logic change (#1760)\n\nThis commmit contains:\n1. Remove unused functions and logic\n2. Combine the Resource/Task message generation into one stage.  since they are both relying on best possible result.","date":"2021-06-02 02:44:29","modifiedFileCount":"11","status":"M","submitter":"Junkai Xue"},{"authorTime":"2021-05-27 07:44:46","codes":[{"authorDate":"2021-06-11 08:45:03","commitOrder":25,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      \r\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2021-06-11 08:45:03","endLine":578,"groupId":"4899","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/11/cd9ee3f1c62e57bed6afe62e42221bbbf42800.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":494,"status":"M"},{"authorDate":"2021-05-27 07:44:46","commitOrder":25,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.TaskCurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2021-06-02 02:44:29","endLine":629,"groupId":"1321","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b8/fac9267c758b5da2045a519b0076209ed70951.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.TaskCurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":579,"status":"N"}],"commitId":"146adff02e3622fb7ea0f8815312dca7c04323ae","commitMessage":"@@@Fix MaintenanceRecoveryStage Hanging (#1792)\n\nThe mainteance recovery stage should be in the order after IntermediateStage since it requires the output from IntermediateStage.","date":"2021-06-11 08:45:03","modifiedFileCount":"2","status":"M","submitter":"Junkai Xue"},{"authorTime":"2021-06-10 12:01:30","codes":[{"authorDate":"2021-06-10 12:01:30","commitOrder":26,"curCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      \r\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.ControllerChange, dataRefresh, autoExitMaintenancePipeline,\n          dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2021-07-17 05:02:56","endLine":596,"groupId":"10871","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"createDefaultRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7d/a6ef0565da3beb4b0fe61162d9b0b9b6863b6a.src","preCode":"  private static PipelineRegistry createDefaultRegistry(String pipelineName) {\n    logger.info(\"createDefaultRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n      dataPreprocess.addStage(new CustomizedStateComputationStage());\n      dataPreprocess.addStage(new TopStateHandoffReportStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new BestPossibleStateCalcStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new MessageSelectionStage());\n      \r\n      \r\n      rebalancePipeline.addStage(new IntermediateStateCalcStage());\n      rebalancePipeline.addStage(new MessageThrottleStage());\n      \r\n      \r\n      \r\n      rebalancePipeline.addStage(new MaintenanceRecoveryStage());\n      rebalancePipeline.addStage(new ResourceMessageDispatchStage());\n      rebalancePipeline.addStage(new PersistAssignmentStage());\n      rebalancePipeline.addStage(new TargetExteralViewCalcStage());\n\n      \r\n      Pipeline externalViewPipeline = new Pipeline(pipelineName);\n      externalViewPipeline.addStage(new ExternalViewComputeStage());\n\n      \r\n      Pipeline customizedViewPipeline = new Pipeline(pipelineName);\n      customizedViewPipeline.addStage(new CustomizedViewAggregationStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      \r\n      Pipeline autoExitMaintenancePipeline = new Pipeline(pipelineName);\n      autoExitMaintenancePipeline.addStage(new MaintenanceRecoveryStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          externalViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.ClusterConfigChange, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.LiveInstanceChange, dataRefresh, autoExitMaintenancePipeline,\n              liveInstancePipeline, dataPreprocess, externalViewPipeline, customizedViewPipeline,\n              rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, externalViewPipeline,\n          rebalancePipeline);\n      registry\n          .register(ClusterEventType.PeriodicalRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      registry\n          .register(ClusterEventType.OnDemandRebalance, dataRefresh, autoExitMaintenancePipeline,\n              dataPreprocess, externalViewPipeline, rebalancePipeline);\n      \r\n      \r\n      \r\n      registry.register(ClusterEventType.CustomizedStateChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      registry.register(ClusterEventType.CustomizeStateConfigChange, dataRefresh, dataPreprocess,\n          customizedViewPipeline, rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":510,"status":"M"},{"authorDate":"2021-06-10 12:01:30","commitOrder":26,"curCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.TaskCurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ControllerChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","date":"2021-07-17 05:02:56","endLine":650,"groupId":"10871","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"createTaskRegistry","params":"(StringpipelineName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7d/a6ef0565da3beb4b0fe61162d9b0b9b6863b6a.src","preCode":"  private static PipelineRegistry createTaskRegistry(String pipelineName) {\n    logger.info(\"createTaskRegistry\");\n    synchronized (GenericHelixController.class) {\n      PipelineRegistry registry = new PipelineRegistry();\n\n      \r\n      Pipeline dataRefresh = new Pipeline(pipelineName);\n      dataRefresh.addStage(new ReadClusterDataStage());\n\n      \r\n      Pipeline dataPreprocess = new Pipeline(pipelineName);\n      dataPreprocess.addStage(new ResourceComputationStage());\n      dataPreprocess.addStage(new ResourceValidationStage());\n      dataPreprocess.addStage(new CurrentStateComputationStage());\n\n      \r\n      Pipeline rebalancePipeline = new Pipeline(pipelineName);\n      rebalancePipeline.addStage(new TaskSchedulingStage());\n      rebalancePipeline.addStage(new TaskPersistDataStage());\n      rebalancePipeline.addStage(new TaskGarbageCollectionStage());\n      rebalancePipeline.addStage(new MessageGenerationPhase());\n      rebalancePipeline.addStage(new TaskMessageDispatchStage());\n\n      \r\n      Pipeline liveInstancePipeline = new Pipeline(pipelineName);\n      liveInstancePipeline.addStage(new CompatibilityCheckStage());\n\n      registry.register(ClusterEventType.IdealStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.CurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.TaskCurrentStateChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.InstanceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ResourceConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.ClusterConfigChange, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.LiveInstanceChange, dataRefresh, liveInstancePipeline,\n          dataPreprocess, rebalancePipeline);\n      registry\n          .register(ClusterEventType.MessageChange, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.Resume, dataRefresh, dataPreprocess, rebalancePipeline);\n      registry.register(ClusterEventType.PeriodicalRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      registry.register(ClusterEventType.OnDemandRebalance, dataRefresh, dataPreprocess,\n          rebalancePipeline);\n      return registry;\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/GenericHelixController.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":598,"status":"M"}],"commitId":"7190eb3ee3150a77c53ae768f89ee2b0473cc711","commitMessage":"@@@Add management mode pipeline registry and switch logic (#1769)\n\nManagement Mode Pipeline will help check the cluster status and determine whether the default pipelines can be run.\nOne use case is.  it will help controller to decide when it can exit the cluster freeze mode.\n\nThis commit adds management mode pipeline and logic to switch from/to the default resource/task pipelines.\n","date":"2021-07-17 05:02:56","modifiedFileCount":"6","status":"M","submitter":"Huizhi Lu"}]
