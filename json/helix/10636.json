[{"authorTime":"2012-10-25 07:14:36","codes":[{"authorDate":"2012-10-25 07:14:36","commitOrder":1,"curCode":"  public void testSimple()\n  {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"MASTER\");\n    add(record, \"TESTDB_1\", \"localhost_8900\", \"SLAVE\");\n\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 2);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_1\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"SLAVE\");\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n  }\n","date":"2012-10-25 07:14:36","endLine":148,"groupId":"7106","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/35/eb5cb07c3dc7ecd662670cb6eda3a5ae7c3743.src","preCode":"  public void testSimple()\n  {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"MASTER\");\n    add(record, \"TESTDB_1\", \"localhost_8900\", \"SLAVE\");\n\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 2);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_1\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"SLAVE\");\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/TestRoutingTable.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"},{"authorDate":"2012-10-25 07:14:36","commitOrder":1,"curCode":"  public void testStateUnitGroupDeletion()\n  {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    externalViewList.clear();\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 0);\n  }\n","date":"2012-10-25 07:14:36","endLine":172,"groupId":"1705","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testStateUnitGroupDeletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/35/eb5cb07c3dc7ecd662670cb6eda3a5ae7c3743.src","preCode":"  public void testStateUnitGroupDeletion()\n  {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    externalViewList.clear();\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 0);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/TestRoutingTable.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"}],"commitId":"437eb42eac35e181ae6793dd17390df33565e4dd","commitMessage":"@@@Refactoring the package names and removing jsql parser\n","date":"2012-10-25 07:14:36","modifiedFileCount":"0","status":"B","submitter":"Kishore Gopalakrishna"},{"authorTime":"2017-11-09 06:56:09","codes":[{"authorDate":"2012-10-25 07:14:36","commitOrder":2,"curCode":"  public void testSimple()\n  {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"MASTER\");\n    add(record, \"TESTDB_1\", \"localhost_8900\", \"SLAVE\");\n\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 2);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_1\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"SLAVE\");\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n  }\n","date":"2012-10-25 07:14:36","endLine":148,"groupId":"7106","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/35/eb5cb07c3dc7ecd662670cb6eda3a5ae7c3743.src","preCode":"  public void testSimple()\n  {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"MASTER\");\n    add(record, \"TESTDB_1\", \"localhost_8900\", \"SLAVE\");\n\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 2);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_1\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"SLAVE\");\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/TestRoutingTable.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"N"},{"authorDate":"2017-11-09 06:56:09","commitOrder":2,"curCode":"  public void testStateUnitGroupDeletion() throws InterruptedException {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    externalViewList.clear();\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    Thread.sleep(100);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 0);\n  }\n","date":"2018-01-25 10:31:51","endLine":162,"groupId":"1705","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testStateUnitGroupDeletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/11/f3701a1fbb75520a1bc543078767ef8f0030bb.src","preCode":"  public void testStateUnitGroupDeletion() {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    externalViewList.clear();\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 0);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/TestRoutingTable.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"093f7ab949b1d6d77f8589b96e7a1a10762f7e6b","commitMessage":"@@@Improve the data load in Helix Spectator (RoutingTableProvider).  which includes:\n1) Put event callback handler in a spearate thread so other ZK event callbacks won't be blocked.\n2) Deduplicate the callbacks from same event type.  always keep just one latest copy of event callback in the event queue.\n3) Add methods to return all instances and liveInstances in the cluster.\n","date":"2018-01-25 10:31:51","modifiedFileCount":"9","status":"M","submitter":"Lei Xia"},{"authorTime":"2017-11-09 06:56:09","codes":[{"authorDate":"2018-02-09 07:52:01","commitOrder":3,"curCode":"  public void testSimple() {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    List<ExternalView> externalViewList = new ArrayList<>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"MASTER\");\n    add(record, \"TESTDB_1\", \"localhost_8900\", \"SLAVE\");\n\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 2);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_1\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"SLAVE\");\n    externalViewList = new ArrayList<>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n  }\n","date":"2018-03-24 03:12:44","endLine":141,"groupId":"7106","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/89/87147ca5238f4ff98677e16f15fc4d8a1288bc.src","preCode":"  public void testSimple() {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"MASTER\");\n    add(record, \"TESTDB_1\", \"localhost_8900\", \"SLAVE\");\n\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 2);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_1\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"SLAVE\");\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/TestRoutingTable.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2017-11-09 06:56:09","commitOrder":3,"curCode":"  public void testStateUnitGroupDeletion() throws InterruptedException {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    externalViewList.clear();\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    Thread.sleep(100);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 0);\n  }\n","date":"2018-01-25 10:31:51","endLine":162,"groupId":"1705","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testStateUnitGroupDeletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/11/f3701a1fbb75520a1bc543078767ef8f0030bb.src","preCode":"  public void testStateUnitGroupDeletion() throws InterruptedException {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    externalViewList.clear();\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    Thread.sleep(100);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 0);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/TestRoutingTable.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"N"}],"commitId":"6f6ab65a6e6c4526f7c6957f2f0cdfaed78e44d5","commitMessage":"@@@Allow to get all resources from RoutingTableProvider class.\n","date":"2018-03-24 03:12:44","modifiedFileCount":"4","status":"M","submitter":"Lei Xia"},{"authorTime":"2018-05-25 06:59:38","codes":[{"authorDate":"2018-05-25 06:59:38","commitOrder":4,"curCode":"  public void testSimple() {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    try {\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n      List<ExternalView> externalViewList = new ArrayList<>();\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8901\", \"MASTER\");\n      add(record, \"TESTDB_1\", \"localhost_8900\", \"SLAVE\");\n\n      externalViewList = new ArrayList<ExternalView>();\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 2);\n\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_1\", \"SLAVE\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8901\", \"SLAVE\");\n      externalViewList = new ArrayList<>();\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"SLAVE\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n    } finally {\n      routingTable.shutdown();\n    }\n  }\n","date":"2018-07-10 09:20:41","endLine":147,"groupId":"7106","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/d6/144f3c6015dfaf376f38036cd07a937eca0345.src","preCode":"  public void testSimple() {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    List<ExternalView> externalViewList = new ArrayList<>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"MASTER\");\n    add(record, \"TESTDB_1\", \"localhost_8900\", \"SLAVE\");\n\n    externalViewList = new ArrayList<ExternalView>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 2);\n\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_1\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8901\", \"SLAVE\");\n    externalViewList = new ArrayList<>();\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"SLAVE\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/TestRoutingTable.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2018-05-25 06:59:38","commitOrder":4,"curCode":"  public void testStateUnitGroupDeletion() throws InterruptedException {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n\n    try {\n      List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n      ZNRecord record = new ZNRecord(\"TESTDB\");\n\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n\n      externalViewList.clear();\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n      Thread.sleep(100);\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 0);\n    } finally {\n      routingTable.shutdown();\n    }\n  }\n","date":"2018-07-10 09:20:41","endLine":202,"groupId":"1705","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testStateUnitGroupDeletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/d6/144f3c6015dfaf376f38036cd07a937eca0345.src","preCode":"  public void testStateUnitGroupDeletion() throws InterruptedException {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n\n    List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    \r\n    add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n    externalViewList.add(new ExternalView(record));\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 1);\n\n    externalViewList.clear();\n    routingTable.onExternalViewChange(externalViewList, changeContext);\n    Thread.sleep(100);\n    instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n    AssertJUnit.assertNotNull(instances);\n    AssertJUnit.assertEquals(instances.size(), 0);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/TestRoutingTable.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"4511dbc6c0871ec73b287eae8a7190153b7b2d20","commitMessage":"@@@Fix RoutingTableProvider clean up in the tests.\n\nA backend thread is added to RoutingTableProvider recently.  so in all related tests.  need to shut it down.\n","date":"2018-07-10 09:20:41","modifiedFileCount":"7","status":"M","submitter":"Jiajun Wang"},{"authorTime":"2018-05-12 03:11:09","codes":[{"authorDate":"2018-05-25 06:59:38","commitOrder":5,"curCode":"  public void testSimple() {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    try {\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n      List<ExternalView> externalViewList = new ArrayList<>();\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8901\", \"MASTER\");\n      add(record, \"TESTDB_1\", \"localhost_8900\", \"SLAVE\");\n\n      externalViewList = new ArrayList<ExternalView>();\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 2);\n\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_1\", \"SLAVE\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8901\", \"SLAVE\");\n      externalViewList = new ArrayList<>();\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"SLAVE\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n    } finally {\n      routingTable.shutdown();\n    }\n  }\n","date":"2018-07-10 09:20:41","endLine":147,"groupId":"10636","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/d6/144f3c6015dfaf376f38036cd07a937eca0345.src","preCode":"  public void testSimple() {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n    ZNRecord record = new ZNRecord(\"TESTDB\");\n\n    try {\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n      List<ExternalView> externalViewList = new ArrayList<>();\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8901\", \"MASTER\");\n      add(record, \"TESTDB_1\", \"localhost_8900\", \"SLAVE\");\n\n      externalViewList = new ArrayList<ExternalView>();\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 2);\n\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_1\", \"SLAVE\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8901\", \"SLAVE\");\n      externalViewList = new ArrayList<>();\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"SLAVE\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n    } finally {\n      routingTable.shutdown();\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/TestRoutingTable.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"N"},{"authorDate":"2018-05-12 03:11:09","commitOrder":5,"curCode":"  public void testStateUnitGroupDeletion() throws InterruptedException {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n\n    try {\n      List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n      ZNRecord record = new ZNRecord(\"TESTDB\");\n\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n      externalViewList.add(new ExternalView(record));\n      externalViewList.add(new ExternalView(new ZNRecord(\"fake\")));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n\n      externalViewList.remove(0);\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n      Thread.sleep(100);\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 0);\n    } finally {\n      routingTable.shutdown();\n    }\n  }\n","date":"2018-07-12 06:28:06","endLine":203,"groupId":"10636","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testStateUnitGroupDeletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/fd/d5e5c30c72ee6e51273ab7bc1ee23b6aab5e26.src","preCode":"  public void testStateUnitGroupDeletion() throws InterruptedException {\n    List<InstanceConfig> instances;\n    RoutingTableProvider routingTable = new RoutingTableProvider();\n\n    try {\n      List<ExternalView> externalViewList = new ArrayList<ExternalView>();\n      ZNRecord record = new ZNRecord(\"TESTDB\");\n\n      \r\n      add(record, \"TESTDB_0\", \"localhost_8900\", \"MASTER\");\n      externalViewList.add(new ExternalView(record));\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 1);\n\n      externalViewList.clear();\n      routingTable.onExternalViewChange(externalViewList, changeContext);\n      Thread.sleep(100);\n      instances = routingTable.getInstances(\"TESTDB\", \"TESTDB_0\", \"MASTER\");\n      AssertJUnit.assertNotNull(instances);\n      AssertJUnit.assertEquals(instances.size(), 0);\n    } finally {\n      routingTable.shutdown();\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/TestRoutingTable.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"d02083e652797673e4826a45fc19896f610803c2","commitMessage":"@@@Change RoutingDataCache to use zk version based selective update when reading the ExternalViews and TargetExternalView.\n\nRB=1317410\nBUG=HELIX-929\nG=helix-reviewers\nA=jxue\n","date":"2018-07-12 06:28:06","modifiedFileCount":"10","status":"M","submitter":"Lei Xia"}]
