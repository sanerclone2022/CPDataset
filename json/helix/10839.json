[{"authorTime":"2020-02-12 05:58:57","codes":[{"authorDate":"2012-10-25 07:14:36","commitOrder":2,"curCode":"  public void subscribe(String path, HelixPropertyListener listener)\n  {\n    synchronized (_listener)\n    {\n      Set<HelixPropertyListener> listeners = _listener.get(path);\n      if (listeners == null)\n      {\n        listeners = new CopyOnWriteArraySet<HelixPropertyListener>();\n        _listener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n  }\n","date":"2012-10-25 07:14:36","endLine":264,"groupId":"3459","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribe","params":"(Stringpath@HelixPropertyListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/36/c4fa798fec9aeb5859335c0f88d80644e1665e.src","preCode":"  public void subscribe(String path, HelixPropertyListener listener)\n  {\n    synchronized (_listener)\n    {\n      Set<HelixPropertyListener> listeners = _listener.get(path);\n      if (listeners == null)\n      {\n        listeners = new CopyOnWriteArraySet<HelixPropertyListener>();\n        _listener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZkCallbackCache.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"NB"},{"authorDate":"2020-02-12 05:58:57","commitOrder":2,"curCode":"  public List<String> subscribeChildChanges(String path, IZkChildListener listener) {\n    synchronized (_childListener) {\n      Set<IZkChildListener> listeners = _childListener.get(path);\n      if (listeners == null) {\n        listeners = new CopyOnWriteArraySet<>();\n        _childListener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n    return watchForChilds(path);\n  }\n","date":"2020-02-12 05:58:57","endLine":213,"groupId":"3459","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeChildChanges","params":"(Stringpath@IZkChildListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/05/07c3f396ab2de6a22d4ce565a5cdea922faf61.src","preCode":"  public List<String> subscribeChildChanges(String path, IZkChildListener listener) {\n    synchronized (_childListener) {\n      Set<IZkChildListener> listeners = _childListener.get(path);\n      if (listeners == null) {\n        listeners = new CopyOnWriteArraySet<>();\n        _childListener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n    return watchForChilds(path);\n  }\n","realPath":"zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"B"}],"commitId":"b227b3b72b3ed0e347464f8d8e5279365a6e5acb","commitMessage":"@@@Add metrics-common.  zookeeper-api.  helix-common modules (#684)\n\nWe want to create a new module called zookeeper-api in order to decouple Helix's ZooKeeper APIs from helix-core. The goal is to enable non-Helix applications to use Helix's ZooKeeper APIs. This change also allows for better modularity and separation of concerns.","date":"2020-02-12 05:58:57","modifiedFileCount":"361","status":"M","submitter":"Hunter Lee"},{"authorTime":"2020-06-06 10:55:06","codes":[{"authorDate":"2012-10-25 07:14:36","commitOrder":3,"curCode":"  public void subscribe(String path, HelixPropertyListener listener)\n  {\n    synchronized (_listener)\n    {\n      Set<HelixPropertyListener> listeners = _listener.get(path);\n      if (listeners == null)\n      {\n        listeners = new CopyOnWriteArraySet<HelixPropertyListener>();\n        _listener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n  }\n","date":"2012-10-25 07:14:36","endLine":264,"groupId":"3459","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribe","params":"(Stringpath@HelixPropertyListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/36/c4fa798fec9aeb5859335c0f88d80644e1665e.src","preCode":"  public void subscribe(String path, HelixPropertyListener listener)\n  {\n    synchronized (_listener)\n    {\n      Set<HelixPropertyListener> listeners = _listener.get(path);\n      if (listeners == null)\n      {\n        listeners = new CopyOnWriteArraySet<HelixPropertyListener>();\n        _listener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZkCallbackCache.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"N"},{"authorDate":"2020-06-06 10:55:06","commitOrder":3,"curCode":"  public ChildrenSubscribeResult subscribeChildChanges(String path, IZkChildListener listener, boolean skipWatchingNonExistNode) {\n    synchronized (_childListener) {\n      Set<IZkChildListener> listeners = _childListener.get(path);\n      if (listeners == null) {\n        listeners = new CopyOnWriteArraySet<>();\n        _childListener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n\n    List<String> children = watchForChilds(path, skipWatchingNonExistNode);\n    if (children == null && skipWatchingNonExistNode) {\n      unsubscribeChildChanges(path, listener);\n      LOG.info(\"watchForChilds failed to install no-existing watch and add listener. Path: {}\", path);\n      return new ChildrenSubscribeResult(children, false);\n    }\n\n    return new ChildrenSubscribeResult(children, true);\n  }\n","date":"2020-06-25 06:08:23","endLine":239,"groupId":"3459","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeChildChanges","params":"(Stringpath@IZkChildListenerlistener@booleanskipWatchingNonExistNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b7/98fbe13d078e034f5b1a53c8259170599d948d.src","preCode":"  public List<String> subscribeChildChanges(String path, IZkChildListener listener) {\n    synchronized (_childListener) {\n      Set<IZkChildListener> listeners = _childListener.get(path);\n      if (listeners == null) {\n        listeners = new CopyOnWriteArraySet<>();\n        _childListener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n    return watchForChilds(path);\n  }\n","realPath":"zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"}],"commitId":"842bf1f9290cf30e946ff2bc8377b3e2f6014554","commitMessage":"@@@Fix leaking Zk path watch and Callbackhandler issue (#1035)\n\nShort term fix #1034. Get rid of dangling CallbackHandlers and its\nrelated current state parent path in Zookeeper. Get rid of leaking\nof current state znode path due to async nature of deletion of\ncurrent state znode path to installatio of watcher in various\nthread in Helix.","date":"2020-06-25 06:08:23","modifiedFileCount":"10","status":"M","submitter":"kaisun2000"},{"authorTime":"2020-09-24 05:46:09","codes":[{"authorDate":"2012-10-25 07:14:36","commitOrder":4,"curCode":"  public void subscribe(String path, HelixPropertyListener listener)\n  {\n    synchronized (_listener)\n    {\n      Set<HelixPropertyListener> listeners = _listener.get(path);\n      if (listeners == null)\n      {\n        listeners = new CopyOnWriteArraySet<HelixPropertyListener>();\n        _listener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n  }\n","date":"2012-10-25 07:14:36","endLine":264,"groupId":"10839","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribe","params":"(Stringpath@HelixPropertyListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/36/c4fa798fec9aeb5859335c0f88d80644e1665e.src","preCode":"  public void subscribe(String path, HelixPropertyListener listener)\n  {\n    synchronized (_listener)\n    {\n      Set<HelixPropertyListener> listeners = _listener.get(path);\n      if (listeners == null)\n      {\n        listeners = new CopyOnWriteArraySet<HelixPropertyListener>();\n        _listener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZkCallbackCache.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"N"},{"authorDate":"2020-09-24 05:46:09","commitOrder":4,"curCode":"  public ChildrenSubscribeResult subscribeChildChanges(String path, IZkChildListener listener, boolean skipWatchingNonExistNode) {\n    synchronized (_childListener) {\n      Set<IZkChildListener> listeners = _childListener.get(path);\n      if (listeners == null) {\n        listeners = new CopyOnWriteArraySet<>();\n        _childListener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n\n    List<String> children = watchForChilds(path, skipWatchingNonExistNode);\n    if (children == null && skipWatchingNonExistNode) {\n      unsubscribeChildChanges(path, listener);\n      LOG.info(\"zkclient{}, watchForChilds failed to install no-existing watch and add listener. Path: {}\", _uid, path);\n      return new ChildrenSubscribeResult(children, false);\n    }\n\n    return new ChildrenSubscribeResult(children, true);\n  }\n","date":"2020-09-24 05:46:09","endLine":266,"groupId":"10839","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeChildChanges","params":"(Stringpath@IZkChildListenerlistener@booleanskipWatchingNonExistNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/18/0fcdd4e9b16b81a61745538a443b9382a8b461.src","preCode":"  public ChildrenSubscribeResult subscribeChildChanges(String path, IZkChildListener listener, boolean skipWatchingNonExistNode) {\n    synchronized (_childListener) {\n      Set<IZkChildListener> listeners = _childListener.get(path);\n      if (listeners == null) {\n        listeners = new CopyOnWriteArraySet<>();\n        _childListener.put(path, listeners);\n      }\n      listeners.add(listener);\n    }\n\n    List<String> children = watchForChilds(path, skipWatchingNonExistNode);\n    if (children == null && skipWatchingNonExistNode) {\n      unsubscribeChildChanges(path, listener);\n      LOG.info(\"watchForChilds failed to install no-existing watch and add listener. Path: {}\", path);\n      return new ChildrenSubscribeResult(children, false);\n    }\n\n    return new ChildrenSubscribeResult(children, true);\n  }\n","realPath":"zookeeper-api/src/main/java/org/apache/helix/zookeeper/zkclient/ZkClient.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"M"}],"commitId":"7028bf36a45b2c03d92193ef69d74324171db73d","commitMessage":"@@@Enhance logging for CallbackHandler and Zkclient (#1355)\n\nThis commit adds a unique id to each method's logging to help the\ncorrelation and track the callback handler and zkClient's life cycle.","date":"2020-09-24 05:46:09","modifiedFileCount":"2","status":"M","submitter":"kaisun2000"}]
