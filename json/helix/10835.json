[{"authorTime":"2013-04-06 08:30:58","codes":[{"authorDate":"2013-04-06 08:30:58","commitOrder":1,"curCode":"  public void addInstanceTag(String clusterName, String instanceName, String tag)\n  {\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n    \n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" instance \"+instanceName +\" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config =  accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.addTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","date":"2013-04-06 08:30:58","endLine":1488,"groupId":"3820","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addInstanceTag","params":"(StringclusterName@StringinstanceName@Stringtag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/ca/80a1ecbb8b997f62c4b68f9c8f225af9eb53fc.src","preCode":"  public void addInstanceTag(String clusterName, String instanceName, String tag)\n  {\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n    \n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" instance \"+instanceName +\" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config =  accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.addTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":1470,"status":"B"},{"authorDate":"2013-04-06 08:30:58","commitOrder":1,"curCode":"  public void removeInstanceTag(String clusterName, String instanceName,\n      String tag)\n  {\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n    \n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" instance \"+instanceName +\" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n    \n    InstanceConfig config =  accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.removeTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","date":"2013-04-06 08:30:58","endLine":1510,"groupId":"3820","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeInstanceTag","params":"(StringclusterName@StringinstanceName@Stringtag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/ca/80a1ecbb8b997f62c4b68f9c8f225af9eb53fc.src","preCode":"  public void removeInstanceTag(String clusterName, String instanceName,\n      String tag)\n  {\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n    \n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" instance \"+instanceName +\" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n    \n    InstanceConfig config =  accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.removeTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":1491,"status":"B"}],"commitId":"f3e32551094e4edfd73364e3c79e3aba980a8208","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/incubator-helix\n","date":"2013-04-06 08:30:58","modifiedFileCount":"129","status":"B","submitter":"Swaroop Jagadish"},{"authorTime":"2013-04-06 08:30:58","codes":[{"authorDate":"2014-05-23 02:08:01","commitOrder":2,"curCode":"  public void addInstanceTag(String clusterName, String instanceName, String tag) {\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n\n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT)) {\n      throw new HelixException(\"cluster \" + clusterName + \" instance \" + instanceName\n          + \" is not setup yet\");\n    }\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config = accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.addTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","date":"2014-05-23 02:08:01","endLine":1096,"groupId":"3820","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addInstanceTag","params":"(StringclusterName@StringinstanceName@Stringtag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/aa/2d61749a74281f739788469f46ad2621c0c845.src","preCode":"  public void addInstanceTag(String clusterName, String instanceName, String tag) {\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n\n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT)) {\n      throw new HelixException(\"cluster \" + clusterName + \" instance \" + instanceName\n          + \" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config = accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.addTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":1080,"status":"M"},{"authorDate":"2013-04-06 08:30:58","commitOrder":2,"curCode":"  public void removeInstanceTag(String clusterName, String instanceName,\n      String tag)\n  {\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n    \n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" instance \"+instanceName +\" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n    \n    InstanceConfig config =  accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.removeTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","date":"2013-04-06 08:30:58","endLine":1510,"groupId":"3820","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeInstanceTag","params":"(StringclusterName@StringinstanceName@Stringtag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/ca/80a1ecbb8b997f62c4b68f9c8f225af9eb53fc.src","preCode":"  public void removeInstanceTag(String clusterName, String instanceName,\n      String tag)\n  {\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n    \n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT))\n    {\n      throw new HelixException(\"cluster \" + clusterName + \" instance \"+instanceName +\" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n    \n    InstanceConfig config =  accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.removeTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":1491,"status":"N"}],"commitId":"4ff7e3888561b46ca6d9c590bdf425b0d2e0716b","commitMessage":"@@@Merge branch 'helix-0.6.x' of https://git-wip-us.apache.org/repos/asf/helix into helix-0.6.x\n","date":"2014-05-23 02:08:01","modifiedFileCount":"57","status":"M","submitter":"Kanak Biscuitwala"},{"authorTime":"2018-04-20 09:19:51","codes":[{"authorDate":"2018-04-20 09:19:51","commitOrder":3,"curCode":"  public void addInstanceTag(String clusterName, String instanceName, String tag) {\n    logger\n        .info(\"Add instance tag {} for instance {} in cluster {}.\", tag, instanceName, clusterName);\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n\n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT)) {\n      throw new HelixException(\"cluster \" + clusterName + \" instance \" + instanceName + \" is not setup yet\");\n    }\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config = accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.addTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","date":"2018-04-20 09:19:51","endLine":1258,"groupId":"3820","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addInstanceTag","params":"(StringclusterName@StringinstanceName@Stringtag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3d/708e567f1eb033b6d41cf6dc98340befa6b83c.src","preCode":"  public void addInstanceTag(String clusterName, String instanceName, String tag) {\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n\n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT)) {\n      throw new HelixException(\n          \"cluster \" + clusterName + \" instance \" + instanceName + \" is not setup yet\");\n    }\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config = accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.addTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":1241,"status":"M"},{"authorDate":"2018-04-20 09:19:51","commitOrder":3,"curCode":"  public void removeInstanceTag(String clusterName, String instanceName, String tag) {\n    logger.info(\"Remove instance tag {} for instance {} in cluster {}.\", tag, instanceName,\n        clusterName);\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n\n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT)) {\n      throw new HelixException(\n          \"cluster \" + clusterName + \" instance \" + instanceName + \" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config = accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.removeTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","date":"2018-04-20 09:19:51","endLine":1279,"groupId":"3820","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"removeInstanceTag","params":"(StringclusterName@StringinstanceName@Stringtag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3d/708e567f1eb033b6d41cf6dc98340befa6b83c.src","preCode":"  public void removeInstanceTag(String clusterName, String instanceName, String tag) {\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n\n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT)) {\n      throw new HelixException(\n          \"cluster \" + clusterName + \" instance \" + instanceName + \" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config = accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.removeTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":1261,"status":"M"}],"commitId":"a6bdb3c2252a11a51939e1e06083a24ccf5a2ac2","commitMessage":"@@@Add logs for RoutingTableProvider and HelixAdmin\n","date":"2018-04-20 09:19:51","modifiedFileCount":"1","status":"M","submitter":"Junkai Xue"},{"authorTime":"2020-03-13 00:44:38","codes":[{"authorDate":"2020-03-13 00:44:38","commitOrder":4,"curCode":"  public void addInstanceTag(String clusterName, String instanceName, String tag) {\n    logger\n        .info(\"Add instance tag {} for instance {} in cluster {}.\", tag, instanceName, clusterName);\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n\n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT)) {\n      throw new HelixException(\n          \"cluster \" + clusterName + \" instance \" + instanceName + \" is not setup yet\");\n    }\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config = accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.addTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","date":"2020-04-09 08:23:30","endLine":1517,"groupId":"10835","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"addInstanceTag","params":"(StringclusterName@StringinstanceName@Stringtag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7b/eaed8be08f73a58f86cc95cf521969f43a962f.src","preCode":"  public void addInstanceTag(String clusterName, String instanceName, String tag) {\n    logger\n        .info(\"Add instance tag {} for instance {} in cluster {}.\", tag, instanceName, clusterName);\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n\n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT)) {\n      throw new HelixException(\n          \"cluster \" + clusterName + \" instance \" + instanceName + \" is not setup yet\");\n    }\n    HelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config = accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.addTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":1499,"status":"M"},{"authorDate":"2020-03-13 00:44:38","commitOrder":4,"curCode":"  public void removeInstanceTag(String clusterName, String instanceName, String tag) {\n    logger.info(\"Remove instance tag {} for instance {} in cluster {}.\", tag, instanceName,\n        clusterName);\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n\n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT)) {\n      throw new HelixException(\n          \"cluster \" + clusterName + \" instance \" + instanceName + \" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config = accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.removeTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","date":"2020-04-09 08:23:30","endLine":1538,"groupId":"10835","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"removeInstanceTag","params":"(StringclusterName@StringinstanceName@Stringtag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7b/eaed8be08f73a58f86cc95cf521969f43a962f.src","preCode":"  public void removeInstanceTag(String clusterName, String instanceName, String tag) {\n    logger.info(\"Remove instance tag {} for instance {} in cluster {}.\", tag, instanceName,\n        clusterName);\n    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n    }\n\n    if (!ZKUtil.isInstanceSetup(_zkClient, clusterName, instanceName, InstanceType.PARTICIPANT)) {\n      throw new HelixException(\n          \"cluster \" + clusterName + \" instance \" + instanceName + \" is not setup yet\");\n    }\n    ZKHelixDataAccessor accessor =\n        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n    Builder keyBuilder = accessor.keyBuilder();\n\n    InstanceConfig config = accessor.getProperty(keyBuilder.instanceConfig(instanceName));\n    config.removeTag(tag);\n    accessor.setProperty(keyBuilder.instanceConfig(instanceName), config);\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":1520,"status":"M"}],"commitId":"289085f1ce7d2d9665447e9b114c15645f618937","commitMessage":"@@@Make ZKHelixAdmin and ZKHelixManager Realm-aware (#846)\n\nTo make Helix Java APIs realm-aware.  we need to make both ZKHelixAdmin and ZKHelixManager realm-aware. This commit adds a Builder to set client config and connection config for building realm-aware ZkClients underneath.","date":"2020-04-09 08:23:30","modifiedFileCount":"14","status":"M","submitter":"Huizhi Lu"}]
