[{"authorTime":"2019-01-30 09:33:31","codes":[{"authorDate":"2019-01-30 09:33:31","commitOrder":1,"curCode":"  private void unregisterAllWorkflowsMonitor()\n      throws MalformedObjectNameException {\n    synchronized (_perTypeWorkflowMonitorMap) {\n      Iterator<Map.Entry<String, WorkflowMonitor>> workflowIter =\n          _perTypeWorkflowMonitorMap.entrySet().iterator();\n      while (workflowIter.hasNext()) {\n        Map.Entry<String, WorkflowMonitor> workflowEntry = workflowIter.next();\n        unregister(getObjectName(getWorkflowBeanName(workflowEntry.getKey())));\n        workflowIter.remove();\n      }\n    }\n  }\n","date":"2019-01-31 03:26:21","endLine":787,"groupId":"3784","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"unregisterAllWorkflowsMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/14/5503224bbc9b2589d0b59141d3dfb13301db92.src","preCode":"  private void unregisterAllWorkflowsMonitor()\n      throws MalformedObjectNameException {\n    synchronized (_perTypeWorkflowMonitorMap) {\n      Iterator<Map.Entry<String, WorkflowMonitor>> workflowIter =\n          _perTypeWorkflowMonitorMap.entrySet().iterator();\n      while (workflowIter.hasNext()) {\n        Map.Entry<String, WorkflowMonitor> workflowEntry = workflowIter.next();\n        unregister(getObjectName(getWorkflowBeanName(workflowEntry.getKey())));\n        workflowIter.remove();\n      }\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":776,"status":"B"},{"authorDate":"2019-01-30 09:33:31","commitOrder":1,"curCode":"  private void unregisterAllJobs() throws MalformedObjectNameException {\n    synchronized (_perTypeJobMonitorMap) {\n      Iterator<Map.Entry<String, JobMonitor>> jobIter = _perTypeJobMonitorMap.entrySet().iterator();\n      while (jobIter.hasNext()) {\n        Map.Entry<String, JobMonitor> jobEntry = jobIter.next();\n        unregister(getObjectName(getJobBeanName(jobEntry.getKey())));\n        jobIter.remove();\n      }\n    }\n  }\n","date":"2019-01-31 03:26:21","endLine":803,"groupId":"3784","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"unregisterAllJobs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/14/5503224bbc9b2589d0b59141d3dfb13301db92.src","preCode":"  private void unregisterAllJobs() throws MalformedObjectNameException {\n    synchronized (_perTypeJobMonitorMap) {\n      Iterator<Map.Entry<String, JobMonitor>> jobIter = _perTypeJobMonitorMap.entrySet().iterator();\n      while (jobIter.hasNext()) {\n        Map.Entry<String, JobMonitor> jobEntry = jobIter.next();\n        unregister(getObjectName(getJobBeanName(jobEntry.getKey())));\n        jobIter.remove();\n      }\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":794,"status":"B"}],"commitId":"f9ec24e994afbf834a4454dcb2cbe48af71e24dd","commitMessage":"@@@Fix some race condition issues in MBean management classes. Fix the listener adding sequence.\n\nStabilized the TestClusterStatusMonitorLifecycle accordingly.\n","date":"2019-01-31 03:26:21","modifiedFileCount":"7","status":"B","submitter":"jiajunwang"},{"authorTime":"2019-03-29 03:30:09","codes":[{"authorDate":"2019-01-30 09:33:31","commitOrder":2,"curCode":"  private void unregisterAllWorkflowsMonitor()\n      throws MalformedObjectNameException {\n    synchronized (_perTypeWorkflowMonitorMap) {\n      Iterator<Map.Entry<String, WorkflowMonitor>> workflowIter =\n          _perTypeWorkflowMonitorMap.entrySet().iterator();\n      while (workflowIter.hasNext()) {\n        Map.Entry<String, WorkflowMonitor> workflowEntry = workflowIter.next();\n        unregister(getObjectName(getWorkflowBeanName(workflowEntry.getKey())));\n        workflowIter.remove();\n      }\n    }\n  }\n","date":"2019-01-31 03:26:21","endLine":787,"groupId":"3784","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"unregisterAllWorkflowsMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/14/5503224bbc9b2589d0b59141d3dfb13301db92.src","preCode":"  private void unregisterAllWorkflowsMonitor()\n      throws MalformedObjectNameException {\n    synchronized (_perTypeWorkflowMonitorMap) {\n      Iterator<Map.Entry<String, WorkflowMonitor>> workflowIter =\n          _perTypeWorkflowMonitorMap.entrySet().iterator();\n      while (workflowIter.hasNext()) {\n        Map.Entry<String, WorkflowMonitor> workflowEntry = workflowIter.next();\n        unregister(getObjectName(getWorkflowBeanName(workflowEntry.getKey())));\n        workflowIter.remove();\n      }\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":776,"status":"N"},{"authorDate":"2019-03-29 03:30:09","commitOrder":2,"curCode":"  private void unregisterAllJobs() {\n    synchronized (_perTypeJobMonitorMap) {\n      Iterator<Map.Entry<String, JobMonitor>> jobIter = _perTypeJobMonitorMap.entrySet().iterator();\n      while (jobIter.hasNext()) {\n        Map.Entry<String, JobMonitor> jobEntry = jobIter.next();\n        jobEntry.getValue().unregister();\n        jobIter.remove();\n      }\n    }\n  }\n","date":"2019-03-29 03:30:14","endLine":817,"groupId":"3784","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"unregisterAllJobs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/1d/778ee79913602778e41451e424f0f9ac6b5292.src","preCode":"  private void unregisterAllJobs() throws MalformedObjectNameException {\n    synchronized (_perTypeJobMonitorMap) {\n      Iterator<Map.Entry<String, JobMonitor>> jobIter = _perTypeJobMonitorMap.entrySet().iterator();\n      while (jobIter.hasNext()) {\n        Map.Entry<String, JobMonitor> jobEntry = jobIter.next();\n        unregister(getObjectName(getJobBeanName(jobEntry.getKey())));\n        jobIter.remove();\n      }\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":808,"status":"M"}],"commitId":"8ba4c9c19981fffe3c958c6851e2b8b8bf90bfbb","commitMessage":"@@@TASK2.0: Add performance metrics to JobMonitor\n\n    We want to add more metrics to Task Framework so that the user could understand what's going on in case of a slowdown.  or get a general sense of how fast the workload is moving.\n    Changelist:\n    1. Add SubmissionToProcessDelay\n    2. Add SubmissionToScheduleDelay\n    3. Add ControllerInducedDelay (for testing)\n    4. Add JobLatencyGauge\n    5. Change regular metrics to Dynamic metrics in JobMonitor\n    6. Add an integration test: TestTaskPerformanceMetrics\n","date":"2019-03-29 03:30:14","modifiedFileCount":"6","status":"M","submitter":"Hunter Lee"},{"authorTime":"2019-03-29 03:30:09","codes":[{"authorDate":"2021-05-15 02:50:55","commitOrder":3,"curCode":"  private void unregisterAllWorkflowsMonitor() {\n    synchronized (_perTypeWorkflowMonitorMap) {\n      Iterator<Map.Entry<String, WorkflowMonitor>> workflowIter =\n          _perTypeWorkflowMonitorMap.entrySet().iterator();\n      while (workflowIter.hasNext()) {\n        Map.Entry<String, WorkflowMonitor> workflowEntry = workflowIter.next();\n        workflowEntry.getValue().unregister();\n        workflowIter.remove();\n      }\n    }\n  }\n","date":"2021-05-15 02:50:55","endLine":918,"groupId":"10675","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"unregisterAllWorkflowsMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/a9/c1811d2410e5a3ccc4e888465f335a31b9e598.src","preCode":"  private void unregisterAllWorkflowsMonitor() throws MalformedObjectNameException {\n    synchronized (_perTypeWorkflowMonitorMap) {\n      Iterator<Map.Entry<String, WorkflowMonitor>> workflowIter =\n          _perTypeWorkflowMonitorMap.entrySet().iterator();\n      while (workflowIter.hasNext()) {\n        Map.Entry<String, WorkflowMonitor> workflowEntry = workflowIter.next();\n        unregister(getObjectName(getWorkflowBeanName(workflowEntry.getKey())));\n        workflowIter.remove();\n      }\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":908,"status":"M"},{"authorDate":"2019-03-29 03:30:09","commitOrder":3,"curCode":"  private void unregisterAllJobs() {\n    synchronized (_perTypeJobMonitorMap) {\n      Iterator<Map.Entry<String, JobMonitor>> jobIter = _perTypeJobMonitorMap.entrySet().iterator();\n      while (jobIter.hasNext()) {\n        Map.Entry<String, JobMonitor> jobEntry = jobIter.next();\n        jobEntry.getValue().unregister();\n        jobIter.remove();\n      }\n    }\n  }\n","date":"2019-03-29 03:30:14","endLine":817,"groupId":"10675","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"unregisterAllJobs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/1d/778ee79913602778e41451e424f0f9ac6b5292.src","preCode":"  private void unregisterAllJobs() {\n    synchronized (_perTypeJobMonitorMap) {\n      Iterator<Map.Entry<String, JobMonitor>> jobIter = _perTypeJobMonitorMap.entrySet().iterator();\n      while (jobIter.hasNext()) {\n        Map.Entry<String, JobMonitor> jobEntry = jobIter.next();\n        jobEntry.getValue().unregister();\n        jobIter.remove();\n      }\n    }\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":808,"status":"N"}],"commitId":"167320c62f8a0e6502614744f008b4bf7917c486","commitMessage":"@@@Change Workflow monitor and PerInstanceResource monitor from static m? (#1732)\n\n- Deprecate static metrics\n- Add dynamic metrics and modify corresponding calling functions and tests\n\nCo-authored-by: Meng Zhang <mnzhang@mnzhang-mn2.linkedin.biz>","date":"2021-05-15 02:50:55","modifiedFileCount":"5","status":"M","submitter":"Meng Zhang"}]
