[{"authorTime":"2016-02-11 08:34:31","codes":[{"authorDate":"2016-02-11 08:34:31","commitOrder":1,"curCode":"  @Test public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","date":"2016-04-14 01:43:23","endLine":188,"groupId":"2142","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTarget","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/74/a8610d24c2ad6f685354a172dd2cfd6a869482.src","preCode":"  @Test public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"},{"authorDate":"2016-02-11 08:34:31","commitOrder":1,"curCode":"  @Test public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","date":"2016-04-14 01:43:23","endLine":213,"groupId":"2142","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/74/a8610d24c2ad6f685354a172dd2cfd6a869482.src","preCode":"  @Test public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"B"}],"commitId":"fe540ac9ec93fb3fb1caa71acaede9c3a63e9fd4","commitMessage":"@@@[HELIX-618]  Job hung if the target resource does not exist anymore at the time when it is scheduled.\n","date":"2016-04-14 01:43:23","modifiedFileCount":"4","status":"B","submitter":"Lei Xia"},{"authorTime":"2016-01-20 10:15:07","codes":[{"authorDate":"2016-01-20 10:15:07","commitOrder":2,"curCode":"  @Test public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","date":"2016-07-06 05:33:42","endLine":172,"groupId":"2142","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTarget","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/d8/d2b60eb07730f9fb8dd329cf3a098574d32291.src","preCode":"  @Test public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2016-01-20 10:15:07","commitOrder":2,"curCode":"  @Test public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","date":"2016-07-06 05:33:42","endLine":197,"groupId":"2142","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/d8/d2b60eb07730f9fb8dd329cf3a098574d32291.src","preCode":"  @Test public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"}],"commitId":"760f8e3caca39aeb53a171303ec24334cd59bf47","commitMessage":"@@@Fix task framework unit tests.\n","date":"2016-07-06 05:33:42","modifiedFileCount":"3","status":"M","submitter":"Lei Xia"},{"authorTime":"2016-01-27 01:57:43","codes":[{"authorDate":"2016-01-27 01:57:43","commitOrder":3,"curCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","date":"2016-07-06 05:34:59","endLine":169,"groupId":"2142","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTarget","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9f/d77354e1c5ec9fd498c8a94b4a1a3d6731ac1d.src","preCode":"  @Test public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2016-01-27 01:57:43","commitOrder":3,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","date":"2016-07-06 05:34:59","endLine":195,"groupId":"2142","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9f/d77354e1c5ec9fd498c8a94b4a1a3d6731ac1d.src","preCode":"  @Test public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"7a47070362c536126e945138f10fb077215f706e","commitMessage":"@@@Support changes of workflow configuration.\n","date":"2016-07-06 05:34:59","modifiedFileCount":"6","status":"M","submitter":"Lei Xia"},{"authorTime":"2016-02-24 09:32:35","codes":[{"authorDate":"2016-02-24 09:32:35","commitOrder":4,"curCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","date":"2016-07-06 05:44:32","endLine":170,"groupId":"2142","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTarget","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/10/1604b47330a47e4c2756197e0daef530a8738b.src","preCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2016-02-24 09:32:35","commitOrder":4,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","date":"2016-07-06 05:44:32","endLine":196,"groupId":"2142","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/10/1604b47330a47e4c2756197e0daef530a8738b.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_manager, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_manager, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"579d82fd2aa8fdce8ec0e0c4d6da73cb8209729d","commitMessage":"@@@Refactor TaskUtil class to move as many as methods out of the class.  and make other methods in it as internal API as possible. Expose necessary APIs in TaskDriver instead.\n","date":"2016-07-06 05:44:32","modifiedFileCount":"16","status":"M","submitter":"Lei Xia"},{"authorTime":"2016-01-28 02:10:31","codes":[{"authorDate":"2016-01-28 02:10:31","commitOrder":5,"curCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n    _driver.start(queueBuilder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 05:44:56","endLine":173,"groupId":"903","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTarget","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7e/eb3f43920eb8c4ae54978964269d3bba363f57.src","preCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2016-01-28 02:10:31","commitOrder":5,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 05:44:56","endLine":231,"groupId":"2142","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7e/eb3f43920eb8c4ae54978964269d3bba363f57.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"}],"commitId":"be660245fc1a9f4b22fba58c4b25a1af19555066","commitMessage":"@@@Add new job option to allow contining a job even its direct dependent job fails.\n","date":"2016-07-06 05:44:56","modifiedFileCount":"8","status":"M","submitter":"Lei Xia"},{"authorTime":"2016-01-28 02:10:31","codes":[{"authorDate":"2016-03-08 07:15:10","commitOrder":6,"curCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(1));\n    _driver.start(queueBuilder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", queueName, currentJobNames.get(1));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 05:45:18","endLine":173,"groupId":"903","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTarget","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/bd/05f8132dde04f4b89115ff495819a54f188a15.src","preCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n    _driver.start(queueBuilder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2016-01-28 02:10:31","commitOrder":6,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 05:44:56","endLine":231,"groupId":"2142","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7e/eb3f43920eb8c4ae54978964269d3bba363f57.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"N"}],"commitId":"1dad0b805338a8dae72e0661ac1a803b30808623","commitMessage":"@@@Fix task framework unit test failure.\n","date":"2016-07-06 05:45:18","modifiedFileCount":"3","status":"M","submitter":"Lei Xia"},{"authorTime":"2016-04-13 02:48:54","codes":[{"authorDate":"2016-04-13 02:48:54","commitOrder":7,"curCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(1));\n    _driver.start(queueBuilder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", queueName, currentJobNames.get(1));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 06:02:05","endLine":71,"groupId":"903","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTarget","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/5a/07942923f72fe6969f5f197beceea71cf8b51d.src","preCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(1));\n    _driver.start(queueBuilder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", queueName, currentJobNames.get(1));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2016-04-13 02:48:54","commitOrder":7,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 06:02:05","endLine":128,"groupId":"2142","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/5a/07942923f72fe6969f5f197beceea71cf8b51d.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"99a40083ab7bc1e1480d66107fff83f0479fa068","commitMessage":"@@@Refactor tests with TaskTestBase and remove duplicated code.\n","date":"2016-07-06 06:02:05","modifiedFileCount":"10","status":"M","submitter":"Junkai Xue"},{"authorTime":"2016-05-11 02:44:25","codes":[{"authorDate":"2016-05-11 02:44:25","commitOrder":8,"curCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(1));\n    _driver.start(queueBuilder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", queueName, currentJobNames.get(1));\n    _driver.pollForJobState(queueName, namedSpaceJob, TaskState.FAILED);\n    _driver.pollForWorkflowState(queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 07:21:13","endLine":71,"groupId":"903","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTarget","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/87/9bfeaa45d3eab8d34d55b6e7609def27f5b3f1.src","preCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(1));\n    _driver.start(queueBuilder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", queueName, currentJobNames.get(1));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2016-05-11 02:44:25","commitOrder":8,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    _driver.pollForJobState(queueName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 07:21:13","endLine":128,"groupId":"2142","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/87/9bfeaa45d3eab8d34d55b6e7609def27f5b3f1.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"183a26ae7857a7c35985b14df9742ba3f4a06566","commitMessage":"@@@Add pollForJobState and pollForWorkflowState function in TaskDriver\n\n1. Add pollForJobState and pollForWorkflowState functions in TaskDriver\n2. Add unit tests for poll completed states for those tasks.\n3. Refactor all tests using new functions.\n","date":"2016-07-06 07:21:13","modifiedFileCount":"20","status":"M","submitter":"Junkai Xue"},{"authorTime":"2016-10-26 04:27:55","codes":[{"authorDate":"2016-10-26 04:27:55","commitOrder":9,"curCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String workflowName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + workflowName);\n    Workflow.Builder builder = new Workflow.Builder(workflowName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      builder.addJob(jobName, jobConfig);\n      if (i > 0) {\n        builder.addParentChildDependency(\"job\" + _testDbs.get(i - 1), \"job\" + _testDbs.get(i));\n      }\n      currentJobNames.add(jobName);\n    }\n\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(1));\n    _driver.start(builder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", workflowName, currentJobNames.get(1));\n    _driver.pollForJobState(workflowName, namedSpaceJob, TaskState.FAILED);\n    _driver.pollForWorkflowState(workflowName, TaskState.FAILED);\n\n    _driver.delete(workflowName);\n  }\n","date":"2016-10-29 11:33:21","endLine":76,"groupId":"2588","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTarget","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3c/ca57eaeb68d5034fef098af78c7dafa3cc93ae.src","preCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(1));\n    _driver.start(queueBuilder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", queueName, currentJobNames.get(1));\n    _driver.pollForJobState(queueName, namedSpaceJob, TaskState.FAILED);\n    _driver.pollForWorkflowState(queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2016-10-26 04:27:55","commitOrder":9,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String workflowName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + workflowName);\n    Workflow.Builder builder = new Workflow.Builder(workflowName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      builder.addJob(jobName, jobConfig);\n      if (i > 0) {\n        builder.addParentChildDependency(\"job\" + _testDbs.get(i - 1), \"job\" + _testDbs.get(i));\n      }      currentJobNames.add(jobName);\n    }\n\n    _driver.start(builder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", workflowName, currentJobNames.get(0));\n    _driver.pollForJobState(workflowName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(workflowName, TaskState.FAILED);\n\n    _driver.delete(workflowName);\n  }\n","date":"2016-10-29 11:33:21","endLine":139,"groupId":"1970","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3c/ca57eaeb68d5034fef098af78c7dafa3cc93ae.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    _driver.pollForJobState(queueName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"33dae525a8b31cae4d6a80a89f1d08190db0beda","commitMessage":"@@@[HELIX-636] Add Java API and REST API for clean up JobQueue\n\nTo clean up the jobs in the final states.  provide a Java API and REST API in helix.\n","date":"2016-10-29 11:33:21","modifiedFileCount":"8","status":"M","submitter":"Junkai Xue"},{"authorTime":"2018-06-08 08:15:54","codes":[{"authorDate":"2018-06-08 08:15:54","commitOrder":10,"curCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String workflowName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + workflowName);\n    Workflow.Builder builder = new Workflow.Builder(workflowName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      builder.addJob(jobName, jobConfig);\n      if (i > 0) {\n        builder.addParentChildDependency(\"job\" + _testDbs.get(i - 1), \"job\" + _testDbs.get(i));\n      }\n      currentJobNames.add(jobName);\n    }\n\n    _gSetupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(1));\n    _driver.start(builder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", workflowName, currentJobNames.get(1));\n    _driver.pollForJobState(workflowName, namedSpaceJob, TaskState.FAILED);\n    _driver.pollForWorkflowState(workflowName, TaskState.FAILED);\n\n    _driver.delete(workflowName);\n  }\n","date":"2018-07-14 02:20:49","endLine":76,"groupId":"10517","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTarget","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/23/da9dc633f805160b8851fa586f997a57395b3d.src","preCode":"  public void testJobFailsWithMissingTarget() throws Exception {\n    String workflowName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + workflowName);\n    Workflow.Builder builder = new Workflow.Builder(workflowName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(\n              _testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      builder.addJob(jobName, jobConfig);\n      if (i > 0) {\n        builder.addParentChildDependency(\"job\" + _testDbs.get(i - 1), \"job\" + _testDbs.get(i));\n      }\n      currentJobNames.add(jobName);\n    }\n\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(1));\n    _driver.start(builder.build());\n\n    String namedSpaceJob = String.format(\"%s_%s\", workflowName, currentJobNames.get(1));\n    _driver.pollForJobState(workflowName, namedSpaceJob, TaskState.FAILED);\n    _driver.pollForWorkflowState(workflowName, TaskState.FAILED);\n\n    _driver.delete(workflowName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2018-06-08 08:15:54","commitOrder":10,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String workflowName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + workflowName);\n    Workflow.Builder builder = new Workflow.Builder(workflowName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      builder.addJob(jobName, jobConfig);\n      if (i > 0) {\n        builder.addParentChildDependency(\"job\" + _testDbs.get(i - 1), \"job\" + _testDbs.get(i));\n      }      currentJobNames.add(jobName);\n    }\n\n    _driver.start(builder.build());\n    _gSetupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", workflowName, currentJobNames.get(0));\n    _driver.pollForJobState(workflowName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(workflowName, TaskState.FAILED);\n\n    _driver.delete(workflowName);\n  }\n","date":"2018-07-14 02:20:49","endLine":139,"groupId":"10517","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/23/da9dc633f805160b8851fa586f997a57395b3d.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String workflowName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + workflowName);\n    Workflow.Builder builder = new Workflow.Builder(workflowName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      builder.addJob(jobName, jobConfig);\n      if (i > 0) {\n        builder.addParentChildDependency(\"job\" + _testDbs.get(i - 1), \"job\" + _testDbs.get(i));\n      }      currentJobNames.add(jobName);\n    }\n\n    _driver.start(builder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", workflowName, currentJobNames.get(0));\n    _driver.pollForJobState(workflowName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(workflowName, TaskState.FAILED);\n\n    _driver.delete(workflowName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"c0d5792b745c67b6fee56ba79df02be89d1f049e","commitMessage":"@@@Properly remove clusters after each test.  and clean up duplicated codes in tests and move them into base test classes.\n","date":"2018-07-14 02:20:49","modifiedFileCount":"139","status":"M","submitter":"Lei Xia"}]
