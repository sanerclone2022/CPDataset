[{"authorTime":"2018-10-03 09:01:30","codes":[{"authorDate":"2018-10-09 06:36:53","commitOrder":2,"curCode":"  public Response getJobUserContent(@PathParam(\"clusterId\") String clusterId,\n      @PathParam(\"workflowName\") String workflowName, @PathParam(\"jobName\") String jobName) {\n    TaskDriver taskDriver = getTaskDriver(clusterId);\n    try {\n      Map<String, String> contentStore =\n          taskDriver.getJobUserContentMap(workflowName, jobName);\n      if (contentStore == null) {\n        return JSONRepresentation(Collections.emptyMap());\n      }\n      return JSONRepresentation(contentStore);\n    } catch (ZkNoNodeException e) {\n      return notFound(\"Unable to find content store\");\n    } catch (Exception e) {\n      return serverError(e);\n    }\n  }\n","date":"2018-11-02 03:10:05","endLine":192,"groupId":"5131","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getJobUserContent","params":"(@PathParam(\"clusterId\")StringclusterId@@PathParam(\"workflowName\")StringworkflowName@@PathParam(\"jobName\")StringjobName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/a9/84428eab87505aca62ab83f1bc04a74ede7cb6.src","preCode":"  public Response getJobUserContent(@PathParam(\"clusterId\") String clusterId,\n      @PathParam(\"workflowName\") String workflowName, @PathParam(\"jobName\") String jobName) {\n    TaskDriver taskDriver = getTaskDriver(clusterId);\n    try {\n      Map<String, String> contentStore =\n          taskDriver.getJobUserContentMap(workflowName, jobName);\n      if (contentStore == null) {\n        return JSONRepresentation(Collections.emptyMap());\n      }\n      return JSONRepresentation(contentStore);\n    } catch (ZkNoNodeException e) {\n      return notFound(\"Unable to find content store\");\n    } catch (Exception e) {\n      return serverError(e);\n    }\n  }\n","realPath":"helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/JobAccessor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"B"},{"authorDate":"2018-10-03 09:01:30","commitOrder":2,"curCode":"  public Response getWorkflowUserContent(\n      @PathParam(\"clusterId\") String clusterId,\n      @PathParam(\"workflowId\") String workflowId\n  ) {\n    TaskDriver taskDriver = getTaskDriver(clusterId);\n    try {\n      Map<String, String> contentStore =\n          taskDriver.getWorkflowUserContentMap(workflowId);\n      if (contentStore == null) {\n        return JSONRepresentation(Collections.emptyMap());\n      }\n      return JSONRepresentation(contentStore);\n    } catch (ZkNoNodeException e) {\n      return notFound(\"Unable to find content store\");\n    } catch (Exception e) {\n      return serverError(e);\n    }\n  }\n","date":"2018-11-02 02:57:03","endLine":287,"groupId":"1902","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getWorkflowUserContent","params":"(@PathParam(\"clusterId\")StringclusterId@@PathParam(\"workflowId\")StringworkflowId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/ac/6a53c6cc161fc8723018aa01aecbd5a1d276b4.src","preCode":"  public Response getWorkflowUserContent(\n      @PathParam(\"clusterId\") String clusterId,\n      @PathParam(\"workflowId\") String workflowId\n  ) {\n    TaskDriver taskDriver = getTaskDriver(clusterId);\n    try {\n      Map<String, String> contentStore =\n          taskDriver.getWorkflowUserContentMap(workflowId);\n      if (contentStore == null) {\n        return JSONRepresentation(Collections.emptyMap());\n      }\n      return JSONRepresentation(contentStore);\n    } catch (ZkNoNodeException e) {\n      return notFound(\"Unable to find content store\");\n    } catch (Exception e) {\n      return serverError(e);\n    }\n  }\n","realPath":"helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/WorkflowAccessor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"NB"}],"commitId":"a09a18ac55464c3e399800b4474ccb6e64d168ec","commitMessage":"@@@[HELIX-780] add get/add job user content rest api\n","date":"2018-11-02 03:10:05","modifiedFileCount":"2","status":"M","submitter":"Harry Zhang"},{"authorTime":"2018-10-10 05:31:00","codes":[{"authorDate":"2018-10-10 05:31:00","commitOrder":3,"curCode":"  public Response getJobUserContent(@PathParam(\"clusterId\") String clusterId,\n      @PathParam(\"workflowName\") String workflowName, @PathParam(\"jobName\") String jobName) {\n    TaskDriver taskDriver = getTaskDriver(clusterId);\n    try {\n      Map<String, String> contentStore =\n          taskDriver.getJobUserContentMap(workflowName, jobName);\n      if (contentStore == null) {\n        return notFound(String.format(\n            \"Unable to find content store. Workflow (%s) or Job (%s) does not exist.\",\n            workflowName, jobName));\n      }\n      return JSONRepresentation(contentStore);\n    } catch (ZkNoNodeException e) {\n      return notFound(\"Unable to find content store\");\n    } catch (Exception e) {\n      return serverError(e);\n    }\n  }\n","date":"2018-11-02 08:42:22","endLine":194,"groupId":"101123","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getJobUserContent","params":"(@PathParam(\"clusterId\")StringclusterId@@PathParam(\"workflowName\")StringworkflowName@@PathParam(\"jobName\")StringjobName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/55/48bd3958b4ac0b316ae42a417cc55918eea1fd.src","preCode":"  public Response getJobUserContent(@PathParam(\"clusterId\") String clusterId,\n      @PathParam(\"workflowName\") String workflowName, @PathParam(\"jobName\") String jobName) {\n    TaskDriver taskDriver = getTaskDriver(clusterId);\n    try {\n      Map<String, String> contentStore =\n          taskDriver.getJobUserContentMap(workflowName, jobName);\n      if (contentStore == null) {\n        return JSONRepresentation(Collections.emptyMap());\n      }\n      return JSONRepresentation(contentStore);\n    } catch (ZkNoNodeException e) {\n      return notFound(\"Unable to find content store\");\n    } catch (Exception e) {\n      return serverError(e);\n    }\n  }\n","realPath":"helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/JobAccessor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2018-10-10 05:31:00","commitOrder":3,"curCode":"  public Response getWorkflowUserContent(\n      @PathParam(\"clusterId\") String clusterId,\n      @PathParam(\"workflowId\") String workflowId\n  ) {\n    TaskDriver taskDriver = getTaskDriver(clusterId);\n    try {\n      Map<String, String> contentStore =\n          taskDriver.getWorkflowUserContentMap(workflowId);\n      if (contentStore == null) {\n        \r\n        return notFound(String.format(\n            \"Unable to find content store. Workflow (%s) does not exist.\",\n            workflowId));\n      }\n      return JSONRepresentation(contentStore);\n    } catch (ZkNoNodeException e) {\n      return notFound(\"Unable to find content store\");\n    } catch (Exception e) {\n      return serverError(e);\n    }\n  }\n","date":"2018-11-02 08:42:22","endLine":290,"groupId":"101123","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getWorkflowUserContent","params":"(@PathParam(\"clusterId\")StringclusterId@@PathParam(\"workflowId\")StringworkflowId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/8b/328a70402c2bf776178c0b8b64f68da4430272.src","preCode":"  public Response getWorkflowUserContent(\n      @PathParam(\"clusterId\") String clusterId,\n      @PathParam(\"workflowId\") String workflowId\n  ) {\n    TaskDriver taskDriver = getTaskDriver(clusterId);\n    try {\n      Map<String, String> contentStore =\n          taskDriver.getWorkflowUserContentMap(workflowId);\n      if (contentStore == null) {\n        return JSONRepresentation(Collections.emptyMap());\n      }\n      return JSONRepresentation(contentStore);\n    } catch (ZkNoNodeException e) {\n      return notFound(\"Unable to find content store\");\n    } catch (Exception e) {\n      return serverError(e);\n    }\n  }\n","realPath":"helix-rest/src/main/java/org/apache/helix/rest/server/resources/helix/WorkflowAccessor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"}],"commitId":"18aa67b6d5c703e5b938b2f915f52a6ca856e889","commitMessage":"@@@[HELIX-780] add task user content related api and added more tests\n","date":"2018-11-02 08:42:22","modifiedFileCount":"5","status":"M","submitter":"Harry Zhang"}]
