[{"authorTime":"2018-09-27 02:39:42","codes":[{"authorDate":"2018-06-08 08:15:54","commitOrder":2,"curCode":"  protected void simulateSessionExpiry(ZkConnection zkConnection) throws IOException,\n      InterruptedException {\n    ZooKeeper oldZookeeper = zkConnection.getZookeeper();\n    LOG.info(\"Old sessionId = \" + oldZookeeper.getSessionId());\n\n    Watcher watcher = new Watcher() {\n      @Override\n      public void process(WatchedEvent event) {\n        LOG.info(\"In New connection, process event:\" + event);\n      }\n    };\n\n    ZooKeeper newZookeeper =\n        new ZooKeeper(zkConnection.getServers(), oldZookeeper.getSessionTimeout(), watcher,\n            oldZookeeper.getSessionId(), oldZookeeper.getSessionPasswd());\n    LOG.info(\"New sessionId = \" + newZookeeper.getSessionId());\n    \r\n    newZookeeper.close();\n    Thread.sleep(10000);\n    oldZookeeper = zkConnection.getZookeeper();\n    LOG.info(\"After session expiry sessionId = \" + oldZookeeper.getSessionId());\n  }\n","date":"2018-07-14 02:20:49","endLine":443,"groupId":"5203","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"simulateSessionExpiry","params":"(ZkConnectionzkConnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7d/98119e785b5630268194f3af952db52ba7766a.src","preCode":"  protected void simulateSessionExpiry(ZkConnection zkConnection) throws IOException,\n      InterruptedException {\n    ZooKeeper oldZookeeper = zkConnection.getZookeeper();\n    LOG.info(\"Old sessionId = \" + oldZookeeper.getSessionId());\n\n    Watcher watcher = new Watcher() {\n      @Override\n      public void process(WatchedEvent event) {\n        LOG.info(\"In New connection, process event:\" + event);\n      }\n    };\n\n    ZooKeeper newZookeeper =\n        new ZooKeeper(zkConnection.getServers(), oldZookeeper.getSessionTimeout(), watcher,\n            oldZookeeper.getSessionId(), oldZookeeper.getSessionPasswd());\n    LOG.info(\"New sessionId = \" + newZookeeper.getSessionId());\n    \r\n    newZookeeper.close();\n    Thread.sleep(10000);\n    oldZookeeper = zkConnection.getZookeeper();\n    LOG.info(\"After session expiry sessionId = \" + oldZookeeper.getSessionId());\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/common/ZkTestBase.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":422,"status":"NB"},{"authorDate":"2018-09-27 02:39:42","commitOrder":2,"curCode":"  protected void simulateSessionExpiry(HelixZkClient client)\n      throws IOException, InterruptedException, IOException {\n    ZkClient zkClient = (ZkClient) client;\n\n    IZkStateListener listener = new IZkStateListener() {\n      @Override\n      public void handleStateChanged(Watcher.Event.KeeperState state) throws Exception {\n        LOG.info(\"In Old connection, state changed:\" + state);\n      }\n\n      @Override\n      public void handleNewSession() throws Exception {\n        LOG.info(\"In Old connection, new session\");\n      }\n\n      @Override\n      public void handleSessionEstablishmentError(Throwable var1) throws Exception {\n      }\n    };\n    zkClient.subscribeStateChanges(listener);\n    ZkConnection connection = ((ZkConnection) zkClient.getConnection());\n    ZooKeeper oldZookeeper = connection.getZookeeper();\n    LOG.info(\"Old sessionId = \" + oldZookeeper.getSessionId());\n\n    Watcher watcher = new Watcher() {\n      @Override\n      public void process(WatchedEvent event) {\n        LOG.info(\"In New connection, process event:\" + event);\n      }\n    };\n\n    ZooKeeper newZookeeper =\n        new ZooKeeper(connection.getServers(), oldZookeeper.getSessionTimeout(), watcher,\n            oldZookeeper.getSessionId(), oldZookeeper.getSessionPasswd());\n    LOG.info(\"New sessionId = \" + newZookeeper.getSessionId());\n    \r\n    newZookeeper.close();\n    Thread.sleep(10000);\n    connection = (ZkConnection) zkClient.getConnection();\n    oldZookeeper = connection.getZookeeper();\n    LOG.info(\"After session expiry sessionId = \" + oldZookeeper.getSessionId());\n  }\n","date":"2018-10-30 09:15:22","endLine":522,"groupId":"5203","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"simulateSessionExpiry","params":"(HelixZkClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b0/c44e1d39dd80253ca4615b74b4df3178c0362d.src","preCode":"  protected void simulateSessionExpiry(HelixZkClient client)\n      throws IOException, InterruptedException, IOException {\n    ZkClient zkClient = (ZkClient) client;\n\n    IZkStateListener listener = new IZkStateListener() {\n      @Override\n      public void handleStateChanged(Watcher.Event.KeeperState state) throws Exception {\n        LOG.info(\"In Old connection, state changed:\" + state);\n      }\n\n      @Override\n      public void handleNewSession() throws Exception {\n        LOG.info(\"In Old connection, new session\");\n      }\n\n      @Override\n      public void handleSessionEstablishmentError(Throwable var1) throws Exception {\n      }\n    };\n    zkClient.subscribeStateChanges(listener);\n    ZkConnection connection = ((ZkConnection) zkClient.getConnection());\n    ZooKeeper oldZookeeper = connection.getZookeeper();\n    LOG.info(\"Old sessionId = \" + oldZookeeper.getSessionId());\n\n    Watcher watcher = new Watcher() {\n      @Override\n      public void process(WatchedEvent event) {\n        LOG.info(\"In New connection, process event:\" + event);\n      }\n    };\n\n    ZooKeeper newZookeeper =\n        new ZooKeeper(connection.getServers(), oldZookeeper.getSessionTimeout(), watcher,\n            oldZookeeper.getSessionId(), oldZookeeper.getSessionPasswd());\n    LOG.info(\"New sessionId = \" + newZookeeper.getSessionId());\n    \r\n    newZookeeper.close();\n    Thread.sleep(10000);\n    connection = (ZkConnection) zkClient.getConnection();\n    oldZookeeper = connection.getZookeeper();\n    LOG.info(\"After session expiry sessionId = \" + oldZookeeper.getSessionId());\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/common/ZkTestBase.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":481,"status":"B"}],"commitId":"9d7364d7abba3932a1b25e96e4eb9dd3e203cec9","commitMessage":"@@@Using HelixZkClient to replace ZkClient in helix-core and helix-rest.\n\n1. Replace as much usage as possible. For the raw ZkClient tests.  the usages are kept.\n2. For backward compatibility.  some public interfaces still returns ZkClient. Marks them as Deprecated.\n","date":"2018-10-30 09:15:22","modifiedFileCount":"60","status":"M","submitter":"Jiajun Wang"},{"authorTime":"2019-12-17 07:21:10","codes":[{"authorDate":"2018-06-08 08:15:54","commitOrder":3,"curCode":"  protected void simulateSessionExpiry(ZkConnection zkConnection) throws IOException,\n      InterruptedException {\n    ZooKeeper oldZookeeper = zkConnection.getZookeeper();\n    LOG.info(\"Old sessionId = \" + oldZookeeper.getSessionId());\n\n    Watcher watcher = new Watcher() {\n      @Override\n      public void process(WatchedEvent event) {\n        LOG.info(\"In New connection, process event:\" + event);\n      }\n    };\n\n    ZooKeeper newZookeeper =\n        new ZooKeeper(zkConnection.getServers(), oldZookeeper.getSessionTimeout(), watcher,\n            oldZookeeper.getSessionId(), oldZookeeper.getSessionPasswd());\n    LOG.info(\"New sessionId = \" + newZookeeper.getSessionId());\n    \r\n    newZookeeper.close();\n    Thread.sleep(10000);\n    oldZookeeper = zkConnection.getZookeeper();\n    LOG.info(\"After session expiry sessionId = \" + oldZookeeper.getSessionId());\n  }\n","date":"2018-07-14 02:20:49","endLine":443,"groupId":"1138","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"simulateSessionExpiry","params":"(ZkConnectionzkConnection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7d/98119e785b5630268194f3af952db52ba7766a.src","preCode":"  protected void simulateSessionExpiry(ZkConnection zkConnection) throws IOException,\n      InterruptedException {\n    ZooKeeper oldZookeeper = zkConnection.getZookeeper();\n    LOG.info(\"Old sessionId = \" + oldZookeeper.getSessionId());\n\n    Watcher watcher = new Watcher() {\n      @Override\n      public void process(WatchedEvent event) {\n        LOG.info(\"In New connection, process event:\" + event);\n      }\n    };\n\n    ZooKeeper newZookeeper =\n        new ZooKeeper(zkConnection.getServers(), oldZookeeper.getSessionTimeout(), watcher,\n            oldZookeeper.getSessionId(), oldZookeeper.getSessionPasswd());\n    LOG.info(\"New sessionId = \" + newZookeeper.getSessionId());\n    \r\n    newZookeeper.close();\n    Thread.sleep(10000);\n    oldZookeeper = zkConnection.getZookeeper();\n    LOG.info(\"After session expiry sessionId = \" + oldZookeeper.getSessionId());\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/common/ZkTestBase.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":422,"status":"N"},{"authorDate":"2019-12-17 07:21:10","commitOrder":3,"curCode":"  protected void simulateSessionExpiry(HelixZkClient client)\n      throws IOException, InterruptedException, IOException {\n    ZkClient zkClient = (ZkClient) client;\n\n    IZkStateListener listener = new IZkStateListener() {\n      @Override\n      public void handleStateChanged(Watcher.Event.KeeperState state) throws Exception {\n        LOG.info(\"In Old connection, state changed:\" + state);\n      }\n\n      @Override\n      public void handleNewSession(final String sessionId) throws Exception {\n        LOG.info(\"In Old connection, new session: {}.\", sessionId);\n      }\n\n      @Override\n      public void handleSessionEstablishmentError(Throwable var1) throws Exception {\n      }\n    };\n    zkClient.subscribeStateChanges(listener);\n    ZkConnection connection = ((ZkConnection) zkClient.getConnection());\n    ZooKeeper oldZookeeper = connection.getZookeeper();\n    LOG.info(\"Old sessionId = \" + oldZookeeper.getSessionId());\n\n    Watcher watcher = new Watcher() {\n      @Override\n      public void process(WatchedEvent event) {\n        LOG.info(\"In New connection, process event:\" + event);\n      }\n    };\n\n    ZooKeeper newZookeeper =\n        new ZooKeeper(connection.getServers(), oldZookeeper.getSessionTimeout(), watcher,\n            oldZookeeper.getSessionId(), oldZookeeper.getSessionPasswd());\n    LOG.info(\"New sessionId = \" + newZookeeper.getSessionId());\n    \r\n    newZookeeper.close();\n    Thread.sleep(10000);\n    connection = (ZkConnection) zkClient.getConnection();\n    oldZookeeper = connection.getZookeeper();\n    LOG.info(\"After session expiry sessionId = \" + oldZookeeper.getSessionId());\n  }\n","date":"2019-12-17 07:21:10","endLine":575,"groupId":"1138","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"simulateSessionExpiry","params":"(HelixZkClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/50/c36ee5c6a70f3bf1de480e4c7fd8efc5573201.src","preCode":"  protected void simulateSessionExpiry(HelixZkClient client)\n      throws IOException, InterruptedException, IOException {\n    ZkClient zkClient = (ZkClient) client;\n\n    IZkStateListener listener = new IZkStateListener() {\n      @Override\n      public void handleStateChanged(Watcher.Event.KeeperState state) throws Exception {\n        LOG.info(\"In Old connection, state changed:\" + state);\n      }\n\n      @Override\n      public void handleNewSession() throws Exception {\n        LOG.info(\"In Old connection, new session\");\n      }\n\n      @Override\n      public void handleSessionEstablishmentError(Throwable var1) throws Exception {\n      }\n    };\n    zkClient.subscribeStateChanges(listener);\n    ZkConnection connection = ((ZkConnection) zkClient.getConnection());\n    ZooKeeper oldZookeeper = connection.getZookeeper();\n    LOG.info(\"Old sessionId = \" + oldZookeeper.getSessionId());\n\n    Watcher watcher = new Watcher() {\n      @Override\n      public void process(WatchedEvent event) {\n        LOG.info(\"In New connection, process event:\" + event);\n      }\n    };\n\n    ZooKeeper newZookeeper =\n        new ZooKeeper(connection.getServers(), oldZookeeper.getSessionTimeout(), watcher,\n            oldZookeeper.getSessionId(), oldZookeeper.getSessionPasswd());\n    LOG.info(\"New sessionId = \" + newZookeeper.getSessionId());\n    \r\n    newZookeeper.close();\n    Thread.sleep(10000);\n    connection = (ZkConnection) zkClient.getConnection();\n    oldZookeeper = connection.getZookeeper();\n    LOG.info(\"After session expiry sessionId = \" + oldZookeeper.getSessionId());\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/common/ZkTestBase.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":534,"status":"M"}],"commitId":"660ae7c40463a9b4de1af7b0721c575e0c4337a3","commitMessage":"@@@Add new interface IZkStateListener to provide session aware handleNewSession for ZkHelixManager (#644)\n\nI0Itec IZkStateListener doesn't have an API handleNewSession(sessionId) to handle session aware operation. \nwhich is needed to fix session race condition for creating ephemeral node in ZkClient.\nSo this new IZkStateListener interface is introduced to provide session aware handleNewSession method for ZkHelixManager.\n\nChangelist:\n- Introduce new IZkStateListener to helix. The new IZkStateListener adds new method\nhandleNewSession(String sessionId).  and removes the old method handleNewSession().\n- Add default implementations I0ItecIZkStateListenerHelixImpl in IZkStateListener\nand IZkStateListenerI0ItecImpl in ZkClient for backward compatibility.\n- Add session id to ZkEvent as a private field to help debug ZkEvent.\n- Add unit tests to test subscribe/unsubscribe state changes.","date":"2019-12-17 07:21:10","modifiedFileCount":"11","status":"M","submitter":"Huizhi L"}]
