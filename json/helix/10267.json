[{"authorTime":"2019-06-05 08:15:17","codes":[{"authorDate":"2019-06-05 08:15:17","commitOrder":1,"curCode":"  private void handleMessage(String instance, String resource) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey);\n    String session = _dataCache.getLiveInstances().get(instance).getSessionId();\n\n    for (Message m : messages) {\n      if (m.getResourceName().equals(resource)) {\n        PropertyKey currentStateKey =\n            new PropertyKey.Builder(_clusterName).currentState(instance, session, resource);\n        CurrentState currentState = accessor.getProperty(currentStateKey);\n        if (currentState == null) {\n          currentState = new CurrentState(resource);\n          currentState.setSessionId(session);\n          currentState.setStateModelDefRef(BuiltInStateModelDefinitions.MasterSlave.name());\n        }\n\n        String partition = m.getPartitionName();\n        String fromState = m.getFromState();\n        String toState = m.getToState();\n        String partitionState = currentState.getState(partition);\n\n        if ((partitionState == null && fromState.equals(\n            BuiltInStateModelDefinitions.MasterSlave.getStateModelDefinition().getInitialState()))\n            || (partitionState.equals(fromState))) {\n          currentState.setPreviousState(partition, fromState);\n          currentState.setState(partition, toState);\n          currentState.setStartTime(partition, System.currentTimeMillis());\n          try {\n            Thread.sleep(50);\n          } catch (InterruptedException e) {\n            e.printStackTrace();\n          }\n          currentState.setEndTime(partition, System.currentTimeMillis());\n          accessor.setProperty(currentStateKey, currentState);\n          PropertyKey messageKey =\n              new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId());\n          accessor.removeProperty(messageKey);\n        }\n      }\n    }\n  }\n","date":"2019-06-25 07:45:28","endLine":347,"groupId":"5808","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handleMessage","params":"(Stringinstance@Stringresource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/11/5acd602b12ff23e50820352159c5b5fd13cb5a.src","preCode":"  private void handleMessage(String instance, String resource) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey);\n    String session = _dataCache.getLiveInstances().get(instance).getSessionId();\n\n    for (Message m : messages) {\n      if (m.getResourceName().equals(resource)) {\n        PropertyKey currentStateKey =\n            new PropertyKey.Builder(_clusterName).currentState(instance, session, resource);\n        CurrentState currentState = accessor.getProperty(currentStateKey);\n        if (currentState == null) {\n          currentState = new CurrentState(resource);\n          currentState.setSessionId(session);\n          currentState.setStateModelDefRef(BuiltInStateModelDefinitions.MasterSlave.name());\n        }\n\n        String partition = m.getPartitionName();\n        String fromState = m.getFromState();\n        String toState = m.getToState();\n        String partitionState = currentState.getState(partition);\n\n        if ((partitionState == null && fromState.equals(\n            BuiltInStateModelDefinitions.MasterSlave.getStateModelDefinition().getInitialState()))\n            || (partitionState.equals(fromState))) {\n          currentState.setPreviousState(partition, fromState);\n          currentState.setState(partition, toState);\n          currentState.setStartTime(partition, System.currentTimeMillis());\n          try {\n            Thread.sleep(50);\n          } catch (InterruptedException e) {\n            e.printStackTrace();\n          }\n          currentState.setEndTime(partition, System.currentTimeMillis());\n          accessor.setProperty(currentStateKey, currentState);\n          PropertyKey messageKey =\n              new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId());\n          accessor.removeProperty(messageKey);\n        }\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"B"},{"authorDate":"2019-06-05 08:15:17","commitOrder":1,"curCode":"  private void cleanMessages(String instance) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey);\n    for (Message m : messages) {\n      accessor\n          .removeProperty(new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId()));\n    }\n  }\n","date":"2019-06-25 07:45:28","endLine":399,"groupId":"4102","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanMessages","params":"(Stringinstance)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/11/5acd602b12ff23e50820352159c5b5fd13cb5a.src","preCode":"  private void cleanMessages(String instance) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey);\n    for (Message m : messages) {\n      accessor\n          .removeProperty(new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId()));\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"B"}],"commitId":"5db99fb6df198a57315b2f371186f6e9c64c1dda","commitMessage":"@@@Remove relay message from controller's message cache immediately if the partition on relay host turned to ERROR state while transits off from top-state.\n\nRB=1689771\nBUG=HELIX-1900\nG=helix-reviewers\nA=hulee\n\nSigned-off-by: Hunter Lee <hulee@linkedin.com>\n","date":"2019-06-25 07:45:28","modifiedFileCount":"3","status":"B","submitter":"Lei Xia"},{"authorTime":"2019-06-05 08:15:17","codes":[{"authorDate":"2019-06-18 05:37:02","commitOrder":2,"curCode":"  private void handleMessage(String instance, String resource) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey);\n    String session = _dataCache.getLiveInstances().get(instance).getEphemeralOwner();\n\n    for (Message m : messages) {\n      if (m.getResourceName().equals(resource)) {\n        PropertyKey currentStateKey =\n            new PropertyKey.Builder(_clusterName).currentState(instance, session, resource);\n        CurrentState currentState = accessor.getProperty(currentStateKey);\n        if (currentState == null) {\n          currentState = new CurrentState(resource);\n          currentState.setSessionId(session);\n          currentState.setStateModelDefRef(BuiltInStateModelDefinitions.MasterSlave.name());\n        }\n\n        String partition = m.getPartitionName();\n        String fromState = m.getFromState();\n        String toState = m.getToState();\n        String partitionState = currentState.getState(partition);\n\n        if ((partitionState == null && fromState.equals(\n            BuiltInStateModelDefinitions.MasterSlave.getStateModelDefinition().getInitialState()))\n            || (partitionState.equals(fromState))) {\n          currentState.setPreviousState(partition, fromState);\n          currentState.setState(partition, toState);\n          currentState.setStartTime(partition, System.currentTimeMillis());\n          try {\n            Thread.sleep(50);\n          } catch (InterruptedException e) {\n            e.printStackTrace();\n          }\n          currentState.setEndTime(partition, System.currentTimeMillis());\n          accessor.setProperty(currentStateKey, currentState);\n          PropertyKey messageKey =\n              new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId());\n          accessor.removeProperty(messageKey);\n        }\n      }\n    }\n  }\n","date":"2019-06-25 07:46:15","endLine":347,"groupId":"5808","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handleMessage","params":"(Stringinstance@Stringresource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/72/f110cc5642061dffe4768aae525720735c5767.src","preCode":"  private void handleMessage(String instance, String resource) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey);\n    String session = _dataCache.getLiveInstances().get(instance).getSessionId();\n\n    for (Message m : messages) {\n      if (m.getResourceName().equals(resource)) {\n        PropertyKey currentStateKey =\n            new PropertyKey.Builder(_clusterName).currentState(instance, session, resource);\n        CurrentState currentState = accessor.getProperty(currentStateKey);\n        if (currentState == null) {\n          currentState = new CurrentState(resource);\n          currentState.setSessionId(session);\n          currentState.setStateModelDefRef(BuiltInStateModelDefinitions.MasterSlave.name());\n        }\n\n        String partition = m.getPartitionName();\n        String fromState = m.getFromState();\n        String toState = m.getToState();\n        String partitionState = currentState.getState(partition);\n\n        if ((partitionState == null && fromState.equals(\n            BuiltInStateModelDefinitions.MasterSlave.getStateModelDefinition().getInitialState()))\n            || (partitionState.equals(fromState))) {\n          currentState.setPreviousState(partition, fromState);\n          currentState.setState(partition, toState);\n          currentState.setStartTime(partition, System.currentTimeMillis());\n          try {\n            Thread.sleep(50);\n          } catch (InterruptedException e) {\n            e.printStackTrace();\n          }\n          currentState.setEndTime(partition, System.currentTimeMillis());\n          accessor.setProperty(currentStateKey, currentState);\n          PropertyKey messageKey =\n              new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId());\n          accessor.removeProperty(messageKey);\n        }\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"M"},{"authorDate":"2019-06-05 08:15:17","commitOrder":2,"curCode":"  private void cleanMessages(String instance) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey);\n    for (Message m : messages) {\n      accessor\n          .removeProperty(new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId()));\n    }\n  }\n","date":"2019-06-25 07:45:28","endLine":399,"groupId":"4102","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanMessages","params":"(Stringinstance)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/11/5acd602b12ff23e50820352159c5b5fd13cb5a.src","preCode":"  private void cleanMessages(String instance) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey);\n    for (Message m : messages) {\n      accessor\n          .removeProperty(new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId()));\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"N"}],"commitId":"ad0c2edb31a4d0e5c455d1fa0f96658bac1382d5","commitMessage":"@@@Always try reading from EphemeralOwner state first while reading the session ID from a live instance node.\n\nThis is to avoid inconsistent session ID in the node content and the emphemeral owner state.\nNote that in order to ensure backward compatiblity and some test cases.  the newly introduced method will still read from the node content if the ephemeral owner state is empty (-1 or 0).\n\nRB=1704942\nBUG=HELIX-1969\nG=helix-reviewers\nA=jxue\n\nSigned-off-by: Hunter Lee <hulee@linkedin.com>\n","date":"2019-06-25 07:46:15","modifiedFileCount":"33","status":"M","submitter":"Jiajun Wang"},{"authorTime":"2020-05-15 08:34:22","codes":[{"authorDate":"2020-05-15 08:34:22","commitOrder":3,"curCode":"  private void handleMessage(String instance, String resource) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey, true);\n    String session = _dataCache.getLiveInstances().get(instance).getEphemeralOwner();\n\n    for (Message m : messages) {\n      if (m.getResourceName().equals(resource)) {\n        PropertyKey currentStateKey =\n            new PropertyKey.Builder(_clusterName).currentState(instance, session, resource);\n        CurrentState currentState = accessor.getProperty(currentStateKey);\n        if (currentState == null) {\n          currentState = new CurrentState(resource);\n          currentState.setSessionId(session);\n          currentState.setStateModelDefRef(BuiltInStateModelDefinitions.MasterSlave.name());\n        }\n\n        String partition = m.getPartitionName();\n        String fromState = m.getFromState();\n        String toState = m.getToState();\n        String partitionState = currentState.getState(partition);\n\n        if ((partitionState == null && fromState.equals(\n            BuiltInStateModelDefinitions.MasterSlave.getStateModelDefinition().getInitialState()))\n            || (partitionState.equals(fromState))) {\n          currentState.setPreviousState(partition, fromState);\n          currentState.setState(partition, toState);\n          currentState.setStartTime(partition, System.currentTimeMillis());\n          try {\n            Thread.sleep(50);\n          } catch (InterruptedException e) {\n            e.printStackTrace();\n          }\n          currentState.setEndTime(partition, System.currentTimeMillis());\n          accessor.setProperty(currentStateKey, currentState);\n          PropertyKey messageKey =\n              new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId());\n          accessor.removeProperty(messageKey);\n        }\n      }\n    }\n  }\n","date":"2020-05-15 08:34:22","endLine":348,"groupId":"10267","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"handleMessage","params":"(Stringinstance@Stringresource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/99/089cdec706bfe3ceb7ee2a3d212ed113b5b793.src","preCode":"  private void handleMessage(String instance, String resource) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey);\n    String session = _dataCache.getLiveInstances().get(instance).getEphemeralOwner();\n\n    for (Message m : messages) {\n      if (m.getResourceName().equals(resource)) {\n        PropertyKey currentStateKey =\n            new PropertyKey.Builder(_clusterName).currentState(instance, session, resource);\n        CurrentState currentState = accessor.getProperty(currentStateKey);\n        if (currentState == null) {\n          currentState = new CurrentState(resource);\n          currentState.setSessionId(session);\n          currentState.setStateModelDefRef(BuiltInStateModelDefinitions.MasterSlave.name());\n        }\n\n        String partition = m.getPartitionName();\n        String fromState = m.getFromState();\n        String toState = m.getToState();\n        String partitionState = currentState.getState(partition);\n\n        if ((partitionState == null && fromState.equals(\n            BuiltInStateModelDefinitions.MasterSlave.getStateModelDefinition().getInitialState()))\n            || (partitionState.equals(fromState))) {\n          currentState.setPreviousState(partition, fromState);\n          currentState.setState(partition, toState);\n          currentState.setStartTime(partition, System.currentTimeMillis());\n          try {\n            Thread.sleep(50);\n          } catch (InterruptedException e) {\n            e.printStackTrace();\n          }\n          currentState.setEndTime(partition, System.currentTimeMillis());\n          accessor.setProperty(currentStateKey, currentState);\n          PropertyKey messageKey =\n              new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId());\n          accessor.removeProperty(messageKey);\n        }\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"M"},{"authorDate":"2020-05-15 08:34:22","commitOrder":3,"curCode":"  private void cleanMessages(String instance) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey, true);\n    for (Message m : messages) {\n      accessor\n          .removeProperty(new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId()));\n    }\n  }\n","date":"2020-05-15 08:34:22","endLine":400,"groupId":"10267","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanMessages","params":"(Stringinstance)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/99/089cdec706bfe3ceb7ee2a3d212ed113b5b793.src","preCode":"  private void cleanMessages(String instance) {\n    PropertyKey propertyKey = new PropertyKey.Builder(_clusterName).messages(instance);\n    List<Message> messages = accessor.getChildValues(propertyKey);\n    for (Message m : messages) {\n      accessor\n          .removeProperty(new PropertyKey.Builder(_clusterName).message(instance, m.getMsgId()));\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":393,"status":"M"}],"commitId":"6ff99f5a181fb5fe91340968f93ca2cd5329a90a","commitMessage":"@@@Enforce result check for data accessors batch get calls to prevent partial batch read. (#974)\n\nThis will help to ensure the main Helix logic does not calculate based on incomplete input.","date":"2020-05-15 08:34:22","modifiedFileCount":"49","status":"M","submitter":"Jiajun Wang"}]
