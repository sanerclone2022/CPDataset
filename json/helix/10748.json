[{"authorTime":"2016-09-23 07:35:40","codes":[{"authorDate":"2016-09-23 07:35:40","commitOrder":1,"curCode":"  private String preProcessWorkflow(String workflowType) {\n    if (workflowType == null || workflowType.length() == 0) {\n      workflowType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    if (!_perTypeWorkflowMonitorMap.containsKey(workflowType)) {\n      WorkflowMonitor monitor = new WorkflowMonitor(_clusterName, workflowType);\n      try {\n        registerWorkflow(monitor);\n      } catch (MalformedObjectNameException e) {\n        LOG.error(\"Failed to register object for workflow type : \" + workflowType, e);\n      }\n      _perTypeWorkflowMonitorMap.put(workflowType, monitor);\n    }\n    return workflowType;\n  }\n","date":"2016-09-23 07:35:40","endLine":442,"groupId":"3048","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"preProcessWorkflow","params":"(StringworkflowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9b/13e76fadfed23b7101b7b73e9654750fd0dd6e.src","preCode":"  private String preProcessWorkflow(String workflowType) {\n    if (workflowType == null || workflowType.length() == 0) {\n      workflowType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    if (!_perTypeWorkflowMonitorMap.containsKey(workflowType)) {\n      WorkflowMonitor monitor = new WorkflowMonitor(_clusterName, workflowType);\n      try {\n        registerWorkflow(monitor);\n      } catch (MalformedObjectNameException e) {\n        LOG.error(\"Failed to register object for workflow type : \" + workflowType, e);\n      }\n      _perTypeWorkflowMonitorMap.put(workflowType, monitor);\n    }\n    return workflowType;\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"B"},{"authorDate":"2016-09-23 07:35:40","commitOrder":1,"curCode":"  private String preProcessJobMonitor(String jobType) {\n    if (jobType == null || jobType.length() == 0) {\n      jobType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    if (!_perTypeJobMonitorMap.containsKey(jobType)) {\n      JobMonitor monitor = new JobMonitor(_clusterName, jobType);\n      try {\n        registerJob(monitor);\n      } catch (MalformedObjectNameException e) {\n        LOG.error(\"Failed to register job type : \" + jobType, e);\n      }\n      _perTypeJobMonitorMap.put(jobType, monitor);\n    }\n    return jobType;\n  }\n","date":"2016-09-23 07:35:40","endLine":486,"groupId":"3048","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"preProcessJobMonitor","params":"(StringjobType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9b/13e76fadfed23b7101b7b73e9654750fd0dd6e.src","preCode":"  private String preProcessJobMonitor(String jobType) {\n    if (jobType == null || jobType.length() == 0) {\n      jobType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    if (!_perTypeJobMonitorMap.containsKey(jobType)) {\n      JobMonitor monitor = new JobMonitor(_clusterName, jobType);\n      try {\n        registerJob(monitor);\n      } catch (MalformedObjectNameException e) {\n        LOG.error(\"Failed to register job type : \" + jobType, e);\n      }\n      _perTypeJobMonitorMap.put(jobType, monitor);\n    }\n    return jobType;\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":471,"status":"B"}],"commitId":"4c88f815e996d896a1582a59c7df83e0f3d20285","commitMessage":"@@@Fix Workflow and Job metrics Counters\n","date":"2016-09-23 07:35:40","modifiedFileCount":"9","status":"B","submitter":"Junkai Xue"},{"authorTime":"2019-01-30 09:33:31","codes":[{"authorDate":"2019-01-30 09:33:31","commitOrder":2,"curCode":"  private String preProcessWorkflow(String workflowType) {\n    if (workflowType == null || workflowType.length() == 0) {\n      workflowType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    synchronized (_perTypeWorkflowMonitorMap) {\n      if (!_perTypeWorkflowMonitorMap.containsKey(workflowType)) {\n        WorkflowMonitor monitor = new WorkflowMonitor(_clusterName, workflowType);\n        try {\n          registerWorkflow(monitor);\n        } catch (MalformedObjectNameException e) {\n          LOG.error(\"Failed to register object for workflow type : \" + workflowType, e);\n        }\n        _perTypeWorkflowMonitorMap.put(workflowType, monitor);\n      }\n    }\n    return workflowType;\n  }\n","date":"2019-01-31 03:26:21","endLine":608,"groupId":"3048","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"preProcessWorkflow","params":"(StringworkflowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/14/5503224bbc9b2589d0b59141d3dfb13301db92.src","preCode":"  private String preProcessWorkflow(String workflowType) {\n    if (workflowType == null || workflowType.length() == 0) {\n      workflowType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    if (!_perTypeWorkflowMonitorMap.containsKey(workflowType)) {\n      WorkflowMonitor monitor = new WorkflowMonitor(_clusterName, workflowType);\n      try {\n        registerWorkflow(monitor);\n      } catch (MalformedObjectNameException e) {\n        LOG.error(\"Failed to register object for workflow type : \" + workflowType, e);\n      }\n      _perTypeWorkflowMonitorMap.put(workflowType, monitor);\n    }\n    return workflowType;\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":591,"status":"M"},{"authorDate":"2019-01-30 09:33:31","commitOrder":2,"curCode":"  private String preProcessJobMonitor(String jobType) {\n    if (jobType == null || jobType.length() == 0) {\n      jobType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    synchronized (_perTypeJobMonitorMap) {\n      if (!_perTypeJobMonitorMap.containsKey(jobType)) {\n        JobMonitor monitor = new JobMonitor(_clusterName, jobType);\n        try {\n          registerJob(monitor);\n        } catch (MalformedObjectNameException e) {\n          LOG.error(\"Failed to register job type : \" + jobType, e);\n        }\n        _perTypeJobMonitorMap.put(jobType, monitor);\n      }\n    }\n    return jobType;\n  }\n","date":"2019-01-31 03:26:21","endLine":672,"groupId":"3048","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"preProcessJobMonitor","params":"(StringjobType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/14/5503224bbc9b2589d0b59141d3dfb13301db92.src","preCode":"  private String preProcessJobMonitor(String jobType) {\n    if (jobType == null || jobType.length() == 0) {\n      jobType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    if (!_perTypeJobMonitorMap.containsKey(jobType)) {\n      JobMonitor monitor = new JobMonitor(_clusterName, jobType);\n      try {\n        registerJob(monitor);\n      } catch (MalformedObjectNameException e) {\n        LOG.error(\"Failed to register job type : \" + jobType, e);\n      }\n      _perTypeJobMonitorMap.put(jobType, monitor);\n    }\n    return jobType;\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":655,"status":"M"}],"commitId":"f9ec24e994afbf834a4454dcb2cbe48af71e24dd","commitMessage":"@@@Fix some race condition issues in MBean management classes. Fix the listener adding sequence.\n\nStabilized the TestClusterStatusMonitorLifecycle accordingly.\n","date":"2019-01-31 03:26:21","modifiedFileCount":"7","status":"M","submitter":"jiajunwang"},{"authorTime":"2019-03-29 03:30:09","codes":[{"authorDate":"2019-01-30 09:33:31","commitOrder":3,"curCode":"  private String preProcessWorkflow(String workflowType) {\n    if (workflowType == null || workflowType.length() == 0) {\n      workflowType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    synchronized (_perTypeWorkflowMonitorMap) {\n      if (!_perTypeWorkflowMonitorMap.containsKey(workflowType)) {\n        WorkflowMonitor monitor = new WorkflowMonitor(_clusterName, workflowType);\n        try {\n          registerWorkflow(monitor);\n        } catch (MalformedObjectNameException e) {\n          LOG.error(\"Failed to register object for workflow type : \" + workflowType, e);\n        }\n        _perTypeWorkflowMonitorMap.put(workflowType, monitor);\n      }\n    }\n    return workflowType;\n  }\n","date":"2019-01-31 03:26:21","endLine":608,"groupId":"3048","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"preProcessWorkflow","params":"(StringworkflowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/14/5503224bbc9b2589d0b59141d3dfb13301db92.src","preCode":"  private String preProcessWorkflow(String workflowType) {\n    if (workflowType == null || workflowType.length() == 0) {\n      workflowType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    synchronized (_perTypeWorkflowMonitorMap) {\n      if (!_perTypeWorkflowMonitorMap.containsKey(workflowType)) {\n        WorkflowMonitor monitor = new WorkflowMonitor(_clusterName, workflowType);\n        try {\n          registerWorkflow(monitor);\n        } catch (MalformedObjectNameException e) {\n          LOG.error(\"Failed to register object for workflow type : \" + workflowType, e);\n        }\n        _perTypeWorkflowMonitorMap.put(workflowType, monitor);\n      }\n    }\n    return workflowType;\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":591,"status":"N"},{"authorDate":"2019-03-29 03:30:09","commitOrder":3,"curCode":"  private String preProcessJobMonitor(String jobType) {\n    if (jobType == null || jobType.length() == 0) {\n      jobType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    synchronized (_perTypeJobMonitorMap) {\n      if (!_perTypeJobMonitorMap.containsKey(jobType)) {\n        String jobMonitorBeanName = getJobBeanName(jobType);\n        JobMonitor monitor = null;\n        try {\n          monitor = new JobMonitor(_clusterName, jobType, getObjectName(jobMonitorBeanName));\n          monitor.register(); \r\n        } catch (Exception e) {\n          LOG.error(\"Failed to register job type : \" + jobType, e);\n        }\n        if (monitor != null) {\n          _perTypeJobMonitorMap.put(jobType, monitor);\n        }\n      }\n    }\n    return jobType;\n  }\n","date":"2019-03-29 03:30:14","endLine":691,"groupId":"6023","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"preProcessJobMonitor","params":"(StringjobType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/1d/778ee79913602778e41451e424f0f9ac6b5292.src","preCode":"  private String preProcessJobMonitor(String jobType) {\n    if (jobType == null || jobType.length() == 0) {\n      jobType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    synchronized (_perTypeJobMonitorMap) {\n      if (!_perTypeJobMonitorMap.containsKey(jobType)) {\n        JobMonitor monitor = new JobMonitor(_clusterName, jobType);\n        try {\n          registerJob(monitor);\n        } catch (MalformedObjectNameException e) {\n          LOG.error(\"Failed to register job type : \" + jobType, e);\n        }\n        _perTypeJobMonitorMap.put(jobType, monitor);\n      }\n    }\n    return jobType;\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"M"}],"commitId":"8ba4c9c19981fffe3c958c6851e2b8b8bf90bfbb","commitMessage":"@@@TASK2.0: Add performance metrics to JobMonitor\n\n    We want to add more metrics to Task Framework so that the user could understand what's going on in case of a slowdown.  or get a general sense of how fast the workload is moving.\n    Changelist:\n    1. Add SubmissionToProcessDelay\n    2. Add SubmissionToScheduleDelay\n    3. Add ControllerInducedDelay (for testing)\n    4. Add JobLatencyGauge\n    5. Change regular metrics to Dynamic metrics in JobMonitor\n    6. Add an integration test: TestTaskPerformanceMetrics\n","date":"2019-03-29 03:30:14","modifiedFileCount":"6","status":"M","submitter":"Hunter Lee"},{"authorTime":"2019-03-29 03:30:09","codes":[{"authorDate":"2021-05-15 02:50:55","commitOrder":4,"curCode":"  private String preProcessWorkflow(String workflowType) {\n    if (workflowType == null || workflowType.length() == 0) {\n      workflowType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    synchronized (_perTypeWorkflowMonitorMap) {\n      if (!_perTypeWorkflowMonitorMap.containsKey(workflowType)) {\n        WorkflowMonitor monitor = new WorkflowMonitor(_clusterName, workflowType);\n        try {\n          monitor.register();\n        } catch (JMException e) {\n          LOG.error(\"Failed to register object for workflow type : \" + workflowType, e);\n        }\n        _perTypeWorkflowMonitorMap.put(workflowType, monitor);\n      }\n    }\n    return workflowType;\n  }\n","date":"2021-05-15 02:50:55","endLine":720,"groupId":"10748","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"preProcessWorkflow","params":"(StringworkflowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/a9/c1811d2410e5a3ccc4e888465f335a31b9e598.src","preCode":"  private String preProcessWorkflow(String workflowType) {\n    if (workflowType == null || workflowType.length() == 0) {\n      workflowType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    synchronized (_perTypeWorkflowMonitorMap) {\n      if (!_perTypeWorkflowMonitorMap.containsKey(workflowType)) {\n        WorkflowMonitor monitor = new WorkflowMonitor(_clusterName, workflowType);\n        try {\n          registerWorkflow(monitor);\n        } catch (MalformedObjectNameException e) {\n          LOG.error(\"Failed to register object for workflow type : \" + workflowType, e);\n        }\n        _perTypeWorkflowMonitorMap.put(workflowType, monitor);\n      }\n    }\n    return workflowType;\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":703,"status":"M"},{"authorDate":"2019-03-29 03:30:09","commitOrder":4,"curCode":"  private String preProcessJobMonitor(String jobType) {\n    if (jobType == null || jobType.length() == 0) {\n      jobType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    synchronized (_perTypeJobMonitorMap) {\n      if (!_perTypeJobMonitorMap.containsKey(jobType)) {\n        String jobMonitorBeanName = getJobBeanName(jobType);\n        JobMonitor monitor = null;\n        try {\n          monitor = new JobMonitor(_clusterName, jobType, getObjectName(jobMonitorBeanName));\n          monitor.register(); \r\n        } catch (Exception e) {\n          LOG.error(\"Failed to register job type : \" + jobType, e);\n        }\n        if (monitor != null) {\n          _perTypeJobMonitorMap.put(jobType, monitor);\n        }\n      }\n    }\n    return jobType;\n  }\n","date":"2019-03-29 03:30:14","endLine":691,"groupId":"10748","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"preProcessJobMonitor","params":"(StringjobType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/1d/778ee79913602778e41451e424f0f9ac6b5292.src","preCode":"  private String preProcessJobMonitor(String jobType) {\n    if (jobType == null || jobType.length() == 0) {\n      jobType = DEFAULT_WORKFLOW_JOB_TYPE;\n    }\n\n    synchronized (_perTypeJobMonitorMap) {\n      if (!_perTypeJobMonitorMap.containsKey(jobType)) {\n        String jobMonitorBeanName = getJobBeanName(jobType);\n        JobMonitor monitor = null;\n        try {\n          monitor = new JobMonitor(_clusterName, jobType, getObjectName(jobMonitorBeanName));\n          monitor.register(); \r\n        } catch (Exception e) {\n          LOG.error(\"Failed to register job type : \" + jobType, e);\n        }\n        if (monitor != null) {\n          _perTypeJobMonitorMap.put(jobType, monitor);\n        }\n      }\n    }\n    return jobType;\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"N"}],"commitId":"167320c62f8a0e6502614744f008b4bf7917c486","commitMessage":"@@@Change Workflow monitor and PerInstanceResource monitor from static m? (#1732)\n\n- Deprecate static metrics\n- Add dynamic metrics and modify corresponding calling functions and tests\n\nCo-authored-by: Meng Zhang <mnzhang@mnzhang-mn2.linkedin.biz>","date":"2021-05-15 02:50:55","modifiedFileCount":"5","status":"M","submitter":"Meng Zhang"}]
