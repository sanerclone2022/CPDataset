[{"authorTime":"2019-06-05 08:15:17","codes":[{"authorDate":"2018-07-21 06:37:23","commitOrder":3,"curCode":"  private Pipeline createPipeline() {\n    Pipeline pipeline = new Pipeline(\"test\");\n    pipeline.addStage(new ReadClusterDataStage());\n    pipeline.addStage(new BestPossibleStateCalcStage());\n    pipeline.addStage(new IntermediateStateCalcStage());\n    pipeline.addStage(new ResourceMessageGenerationPhase());\n    pipeline.addStage(new MessageSelectionStage());\n    pipeline.addStage(new MessageThrottleStage());\n\n    return pipeline;\n  }\n","date":"2018-09-22 05:09:25","endLine":366,"groupId":"1879","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createPipeline","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/e6/d3b32c32707ec85ee2426f545539de1386a4e4.src","preCode":"  private Pipeline createPipeline() {\n    Pipeline pipeline = new Pipeline(\"test\");\n    pipeline.addStage(new ReadClusterDataStage());\n    pipeline.addStage(new BestPossibleStateCalcStage());\n    pipeline.addStage(new IntermediateStateCalcStage());\n    pipeline.addStage(new ResourceMessageGenerationPhase());\n    pipeline.addStage(new MessageSelectionStage());\n    pipeline.addStage(new MessageThrottleStage());\n\n    return pipeline;\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PStateTransitionMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"NB"},{"authorDate":"2019-06-05 08:15:17","commitOrder":3,"curCode":"  public void beforeClass() {\n    super.beforeClass();\n    setup();\n    setupIdealState(3, new String[] { _db }, _numPartition, _numReplica,\n        IdealState.RebalanceMode.SEMI_AUTO, BuiltInStateModelDefinitions.MasterSlave.name());\n    setupStateModel();\n    setupInstances(3);\n    setupLiveInstances(3);\n\n    ClusterConfig clusterConfig = new ClusterConfig(_clusterName);\n    clusterConfig.enableP2PMessage(true);\n    setClusterConfig(clusterConfig);\n\n    _dataCache = new ResourceControllerDataProvider(_clusterName);\n    _dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor());\n\n    _dataCache.refresh(manager.getHelixDataAccessor());\n\n    event.addAttribute(AttributeName.ControllerDataProvider.name(), _dataCache);\n    event.addAttribute(AttributeName.helixmanager.name(), manager);\n\n    _fullPipeline = new Pipeline(\"FullPipeline\");\n    _fullPipeline.addStage(new ReadClusterDataStage());\n    _fullPipeline.addStage(new ResourceComputationStage());\n    _fullPipeline.addStage(new CurrentStateComputationStage());\n    _fullPipeline.addStage(new BestPossibleStateCalcStage());\n    _fullPipeline.addStage(new IntermediateStateCalcStage());\n    _fullPipeline.addStage(new ResourceMessageGenerationPhase());\n    _fullPipeline.addStage(new MessageSelectionStage());\n    _fullPipeline.addStage(new MessageThrottleStage());\n    _fullPipeline.addStage(new ResourceMessageDispatchStage());\n\n    try {\n      _fullPipeline.handle(event);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n\n    _instances = _dataCache.getAllInstances();\n    _liveInstanceMap = _dataCache.getLiveInstances();\n\n    _initialStateMap = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name());\n    _initialMaster = getTopStateInstance(_initialStateMap.getInstanceStateMap(_db, _partition),\n        MasterSlaveSMD.States.MASTER.name());\n    Assert.assertNotNull(_initialMaster);\n  }\n","date":"2019-06-25 07:45:28","endLine":121,"groupId":"2381","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/11/5acd602b12ff23e50820352159c5b5fd13cb5a.src","preCode":"  public void beforeClass() {\n    super.beforeClass();\n    setup();\n    setupIdealState(3, new String[] { _db }, _numPartition, _numReplica,\n        IdealState.RebalanceMode.SEMI_AUTO, BuiltInStateModelDefinitions.MasterSlave.name());\n    setupStateModel();\n    setupInstances(3);\n    setupLiveInstances(3);\n\n    ClusterConfig clusterConfig = new ClusterConfig(_clusterName);\n    clusterConfig.enableP2PMessage(true);\n    setClusterConfig(clusterConfig);\n\n    _dataCache = new ResourceControllerDataProvider(_clusterName);\n    _dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor());\n\n    _dataCache.refresh(manager.getHelixDataAccessor());\n\n    event.addAttribute(AttributeName.ControllerDataProvider.name(), _dataCache);\n    event.addAttribute(AttributeName.helixmanager.name(), manager);\n\n    _fullPipeline = new Pipeline(\"FullPipeline\");\n    _fullPipeline.addStage(new ReadClusterDataStage());\n    _fullPipeline.addStage(new ResourceComputationStage());\n    _fullPipeline.addStage(new CurrentStateComputationStage());\n    _fullPipeline.addStage(new BestPossibleStateCalcStage());\n    _fullPipeline.addStage(new IntermediateStateCalcStage());\n    _fullPipeline.addStage(new ResourceMessageGenerationPhase());\n    _fullPipeline.addStage(new MessageSelectionStage());\n    _fullPipeline.addStage(new MessageThrottleStage());\n    _fullPipeline.addStage(new ResourceMessageDispatchStage());\n\n    try {\n      _fullPipeline.handle(event);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n\n    _instances = _dataCache.getAllInstances();\n    _liveInstanceMap = _dataCache.getLiveInstances();\n\n    _initialStateMap = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name());\n    _initialMaster = getTopStateInstance(_initialStateMap.getInstanceStateMap(_db, _partition),\n        MasterSlaveSMD.States.MASTER.name());\n    Assert.assertNotNull(_initialMaster);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"5db99fb6df198a57315b2f371186f6e9c64c1dda","commitMessage":"@@@Remove relay message from controller's message cache immediately if the partition on relay host turned to ERROR state while transits off from top-state.\n\nRB=1689771\nBUG=HELIX-1900\nG=helix-reviewers\nA=hulee\n\nSigned-off-by: Hunter Lee <hulee@linkedin.com>\n","date":"2019-06-25 07:45:28","modifiedFileCount":"3","status":"M","submitter":"Lei Xia"},{"authorTime":"2021-05-26 01:19:08","codes":[{"authorDate":"2021-05-26 01:19:08","commitOrder":4,"curCode":"  private Pipeline createPipeline() {\n    Pipeline pipeline = new Pipeline(\"test\");\n    pipeline.addStage(new ReadClusterDataStage());\n    pipeline.addStage(new BestPossibleStateCalcStage());\n    pipeline.addStage(new ResourceMessageGenerationPhase());\n    pipeline.addStage(new MessageSelectionStage());\n    pipeline.addStage(new IntermediateStateCalcStage());\n    pipeline.addStage(new MessageThrottleStage());\n\n    return pipeline;\n  }\n","date":"2021-06-02 02:44:29","endLine":368,"groupId":"2381","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createPipeline","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/ce/c0d2b17a17316eb15420093a9ae829529d697b.src","preCode":"  private Pipeline createPipeline() {\n    Pipeline pipeline = new Pipeline(\"test\");\n    pipeline.addStage(new ReadClusterDataStage());\n    pipeline.addStage(new BestPossibleStateCalcStage());\n    pipeline.addStage(new IntermediateStateCalcStage());\n    pipeline.addStage(new ResourceMessageGenerationPhase());\n    pipeline.addStage(new MessageSelectionStage());\n    pipeline.addStage(new MessageThrottleStage());\n\n    return pipeline;\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PStateTransitionMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"},{"authorDate":"2021-05-26 01:19:08","commitOrder":4,"curCode":"  public void beforeClass() {\n    super.beforeClass();\n    setup();\n    setupIdealState(3, new String[] { _db }, _numPartition, _numReplica,\n        IdealState.RebalanceMode.SEMI_AUTO, BuiltInStateModelDefinitions.MasterSlave.name());\n    setupStateModel();\n    setupInstances(3);\n    setupLiveInstances(3);\n\n    ClusterConfig clusterConfig = new ClusterConfig(_clusterName);\n    clusterConfig.enableP2PMessage(true);\n    setClusterConfig(clusterConfig);\n\n    _dataCache = new ResourceControllerDataProvider(_clusterName);\n    _dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor());\n\n    _dataCache.refresh(manager.getHelixDataAccessor());\n\n    event.addAttribute(AttributeName.ControllerDataProvider.name(), _dataCache);\n    event.addAttribute(AttributeName.helixmanager.name(), manager);\n\n    _fullPipeline = new Pipeline(\"FullPipeline\");\n    _fullPipeline.addStage(new ReadClusterDataStage());\n    _fullPipeline.addStage(new ResourceComputationStage());\n    _fullPipeline.addStage(new CurrentStateComputationStage());\n    _fullPipeline.addStage(new BestPossibleStateCalcStage());\n    _fullPipeline.addStage(new ResourceMessageGenerationPhase());\n    _fullPipeline.addStage(new MessageSelectionStage());\n    _fullPipeline.addStage(new IntermediateStateCalcStage());\n    _fullPipeline.addStage(new MessageThrottleStage());\n    _fullPipeline.addStage(new ResourceMessageDispatchStage());\n\n    try {\n      _fullPipeline.handle(event);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n\n    _instances = _dataCache.getAllInstances();\n    _liveInstanceMap = _dataCache.getLiveInstances();\n\n    _initialStateMap = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name());\n    _initialMaster = getTopStateInstance(_initialStateMap.getInstanceStateMap(_db, _partition),\n        MasterSlaveSMD.States.MASTER.name());\n    Assert.assertNotNull(_initialMaster);\n  }\n","date":"2021-06-02 02:44:29","endLine":122,"groupId":"5948","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/1f/1d7bdba7a3faff353a8c9f06962669b4a83b94.src","preCode":"  public void beforeClass() {\n    super.beforeClass();\n    setup();\n    setupIdealState(3, new String[] { _db }, _numPartition, _numReplica,\n        IdealState.RebalanceMode.SEMI_AUTO, BuiltInStateModelDefinitions.MasterSlave.name());\n    setupStateModel();\n    setupInstances(3);\n    setupLiveInstances(3);\n\n    ClusterConfig clusterConfig = new ClusterConfig(_clusterName);\n    clusterConfig.enableP2PMessage(true);\n    setClusterConfig(clusterConfig);\n\n    _dataCache = new ResourceControllerDataProvider(_clusterName);\n    _dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor());\n\n    _dataCache.refresh(manager.getHelixDataAccessor());\n\n    event.addAttribute(AttributeName.ControllerDataProvider.name(), _dataCache);\n    event.addAttribute(AttributeName.helixmanager.name(), manager);\n\n    _fullPipeline = new Pipeline(\"FullPipeline\");\n    _fullPipeline.addStage(new ReadClusterDataStage());\n    _fullPipeline.addStage(new ResourceComputationStage());\n    _fullPipeline.addStage(new CurrentStateComputationStage());\n    _fullPipeline.addStage(new BestPossibleStateCalcStage());\n    _fullPipeline.addStage(new IntermediateStateCalcStage());\n    _fullPipeline.addStage(new ResourceMessageGenerationPhase());\n    _fullPipeline.addStage(new MessageSelectionStage());\n    _fullPipeline.addStage(new MessageThrottleStage());\n    _fullPipeline.addStage(new ResourceMessageDispatchStage());\n\n    try {\n      _fullPipeline.handle(event);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n\n    _instances = _dataCache.getAllInstances();\n    _liveInstanceMap = _dataCache.getLiveInstances();\n\n    _initialStateMap = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name());\n    _initialMaster = getTopStateInstance(_initialStateMap.getInstanceStateMap(_db, _partition),\n        MasterSlaveSMD.States.MASTER.name());\n    Assert.assertNotNull(_initialMaster);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"f49986e24c27c49d8c877457753e32dcf8b540f4","commitMessage":"@@@[Replica Level Throttle] Make Pipeline in a correct order and fixes tests (#1750)\n\n* Make Pipeline in a correct order and fixes tests\n\n1. Make pipeline running in a correct order to process computation\n2. Add \"DROPPED\" case in the mapping to reflect the real case.\n3. Fixes test cases.","date":"2021-06-02 02:44:29","modifiedFileCount":"15","status":"M","submitter":"Junkai Xue"},{"authorTime":"2021-05-27 07:44:46","codes":[{"authorDate":"2021-05-27 07:44:46","commitOrder":5,"curCode":"  private Pipeline createPipeline() {\n    Pipeline pipeline = new Pipeline(\"test\");\n    pipeline.addStage(new ReadClusterDataStage());\n    pipeline.addStage(new BestPossibleStateCalcStage());\n    pipeline.addStage(new MessageGenerationPhase());\n    pipeline.addStage(new MessageSelectionStage());\n    pipeline.addStage(new IntermediateStateCalcStage());\n    pipeline.addStage(new MessageThrottleStage());\n\n    return pipeline;\n  }\n","date":"2021-06-02 02:44:29","endLine":368,"groupId":"10263","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"createPipeline","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/30/7022f3fb7ced894bfac2e7448057b06974bc5a.src","preCode":"  private Pipeline createPipeline() {\n    Pipeline pipeline = new Pipeline(\"test\");\n    pipeline.addStage(new ReadClusterDataStage());\n    pipeline.addStage(new BestPossibleStateCalcStage());\n    pipeline.addStage(new ResourceMessageGenerationPhase());\n    pipeline.addStage(new MessageSelectionStage());\n    pipeline.addStage(new IntermediateStateCalcStage());\n    pipeline.addStage(new MessageThrottleStage());\n\n    return pipeline;\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PStateTransitionMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"},{"authorDate":"2021-05-27 07:44:46","commitOrder":5,"curCode":"  public void beforeClass() {\n    super.beforeClass();\n    setup();\n    setupIdealState(3, new String[] { _db }, _numPartition, _numReplica,\n        IdealState.RebalanceMode.SEMI_AUTO, BuiltInStateModelDefinitions.MasterSlave.name());\n    setupStateModel();\n    setupInstances(3);\n    setupLiveInstances(3);\n\n    ClusterConfig clusterConfig = new ClusterConfig(_clusterName);\n    clusterConfig.enableP2PMessage(true);\n    setClusterConfig(clusterConfig);\n\n    _dataCache = new ResourceControllerDataProvider(_clusterName);\n    _dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor());\n\n    _dataCache.refresh(manager.getHelixDataAccessor());\n\n    event.addAttribute(AttributeName.ControllerDataProvider.name(), _dataCache);\n    event.addAttribute(AttributeName.helixmanager.name(), manager);\n\n    _fullPipeline = new Pipeline(\"FullPipeline\");\n    _fullPipeline.addStage(new ReadClusterDataStage());\n    _fullPipeline.addStage(new ResourceComputationStage());\n    _fullPipeline.addStage(new CurrentStateComputationStage());\n    _fullPipeline.addStage(new BestPossibleStateCalcStage());\n    _fullPipeline.addStage(new MessageGenerationPhase());\n    _fullPipeline.addStage(new MessageSelectionStage());\n    _fullPipeline.addStage(new IntermediateStateCalcStage());\n    _fullPipeline.addStage(new MessageThrottleStage());\n    _fullPipeline.addStage(new ResourceMessageDispatchStage());\n\n    try {\n      _fullPipeline.handle(event);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n\n    _instances = _dataCache.getAllInstances();\n    _liveInstanceMap = _dataCache.getLiveInstances();\n\n    _initialStateMap = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name());\n    _initialMaster = getTopStateInstance(_initialStateMap.getInstanceStateMap(_db, _partition),\n        MasterSlaveSMD.States.MASTER.name());\n    Assert.assertNotNull(_initialMaster);\n  }\n","date":"2021-06-02 02:44:29","endLine":122,"groupId":"10263","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/64/9ff7ec13d8d83e5fcd065e75645397289d67dd.src","preCode":"  public void beforeClass() {\n    super.beforeClass();\n    setup();\n    setupIdealState(3, new String[] { _db }, _numPartition, _numReplica,\n        IdealState.RebalanceMode.SEMI_AUTO, BuiltInStateModelDefinitions.MasterSlave.name());\n    setupStateModel();\n    setupInstances(3);\n    setupLiveInstances(3);\n\n    ClusterConfig clusterConfig = new ClusterConfig(_clusterName);\n    clusterConfig.enableP2PMessage(true);\n    setClusterConfig(clusterConfig);\n\n    _dataCache = new ResourceControllerDataProvider(_clusterName);\n    _dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor());\n\n    _dataCache.refresh(manager.getHelixDataAccessor());\n\n    event.addAttribute(AttributeName.ControllerDataProvider.name(), _dataCache);\n    event.addAttribute(AttributeName.helixmanager.name(), manager);\n\n    _fullPipeline = new Pipeline(\"FullPipeline\");\n    _fullPipeline.addStage(new ReadClusterDataStage());\n    _fullPipeline.addStage(new ResourceComputationStage());\n    _fullPipeline.addStage(new CurrentStateComputationStage());\n    _fullPipeline.addStage(new BestPossibleStateCalcStage());\n    _fullPipeline.addStage(new ResourceMessageGenerationPhase());\n    _fullPipeline.addStage(new MessageSelectionStage());\n    _fullPipeline.addStage(new IntermediateStateCalcStage());\n    _fullPipeline.addStage(new MessageThrottleStage());\n    _fullPipeline.addStage(new ResourceMessageDispatchStage());\n\n    try {\n      _fullPipeline.handle(event);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n\n    _instances = _dataCache.getAllInstances();\n    _liveInstanceMap = _dataCache.getLiveInstances();\n\n    _initialStateMap = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name());\n    _initialMaster = getTopStateInstance(_initialStateMap.getInstanceStateMap(_db, _partition),\n        MasterSlaveSMD.States.MASTER.name());\n    Assert.assertNotNull(_initialMaster);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/messaging/p2pMessage/TestP2PMessages.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"17c52da9422fbde427eb5b1309ddeeda389c092c","commitMessage":"@@@Refactor/clean up code without logic change (#1760)\n\nThis commmit contains:\n1. Remove unused functions and logic\n2. Combine the Resource/Task message generation into one stage.  since they are both relying on best possible result.","date":"2021-06-02 02:44:29","modifiedFileCount":"11","status":"M","submitter":"Junkai Xue"}]
