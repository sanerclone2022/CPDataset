[{"authorTime":"2012-10-25 07:14:36","codes":[{"authorDate":"2012-10-25 07:14:36","commitOrder":1,"curCode":"  public void testAddInstancesToCluster() throws Exception\n  {\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    _clusterSetup.addInstancesToCluster(CLUSTER_NAME, instanceAddresses);\n\n    \r\n    for (String instance : instanceAddresses)\n    {\n      verifyInstance(_zkClient,\n                     CLUSTER_NAME,\n                     instanceColonToUnderscoreFormat(instance),\n                     true);\n    }\n\n    _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   instanceColonToUnderscoreFormat(nextInstanceAddress),\n                   true);\n    \r\n    boolean caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n  }\n","date":"2012-10-25 07:14:36","endLine":160,"groupId":"6759","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInstancesToCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/6c/0c8c4ff7138698eda91bb09988a4085cb8daa8.src","preCode":"  public void testAddInstancesToCluster() throws Exception\n  {\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    _clusterSetup.addInstancesToCluster(CLUSTER_NAME, instanceAddresses);\n\n    \r\n    for (String instance : instanceAddresses)\n    {\n      verifyInstance(_zkClient,\n                     CLUSTER_NAME,\n                     instanceColonToUnderscoreFormat(instance),\n                     true);\n    }\n\n    _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   instanceColonToUnderscoreFormat(nextInstanceAddress),\n                   true);\n    \r\n    boolean caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"},{"authorDate":"2012-10-25 07:14:36","commitOrder":1,"curCode":"  public void testDisableDropInstancesFromCluster() throws Exception\n  {\n    testAddInstancesToCluster();\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    boolean caughtException = false;\n    \r\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    _clusterSetup.getClusterManagementTool()\n                 .enableInstance(CLUSTER_NAME,\n                                 instanceColonToUnderscoreFormat(nextInstanceAddress),\n                                 false);\n    verifyEnabled(_zkClient,\n                  CLUSTER_NAME,\n                  instanceColonToUnderscoreFormat(nextInstanceAddress),\n                  false);\n\n    \r\n    _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   instanceColonToUnderscoreFormat(nextInstanceAddress),\n                   false);\n\n    \r\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n    \r\n\r\n\r\n\r\n\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME,\n                                                              badFormatInstance,\n                                                              false);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","date":"2012-10-25 07:14:36","endLine":245,"groupId":"2136","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDisableDropInstancesFromCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/6c/0c8c4ff7138698eda91bb09988a4085cb8daa8.src","preCode":"  public void testDisableDropInstancesFromCluster() throws Exception\n  {\n    testAddInstancesToCluster();\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    boolean caughtException = false;\n    \r\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    _clusterSetup.getClusterManagementTool()\n                 .enableInstance(CLUSTER_NAME,\n                                 instanceColonToUnderscoreFormat(nextInstanceAddress),\n                                 false);\n    verifyEnabled(_zkClient,\n                  CLUSTER_NAME,\n                  instanceColonToUnderscoreFormat(nextInstanceAddress),\n                  false);\n\n    \r\n    _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   instanceColonToUnderscoreFormat(nextInstanceAddress),\n                   false);\n\n    \r\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n    \r\n\r\n\r\n\r\n\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME,\n                                                              badFormatInstance,\n                                                              false);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"B"}],"commitId":"437eb42eac35e181ae6793dd17390df33565e4dd","commitMessage":"@@@Refactoring the package names and removing jsql parser\n","date":"2012-10-25 07:14:36","modifiedFileCount":"0","status":"B","submitter":"Kishore Gopalakrishna"},{"authorTime":"2013-04-13 08:49:36","codes":[{"authorDate":"2013-04-13 08:49:36","commitOrder":2,"curCode":"  public void testAddInstancesToCluster() throws Exception\n  {\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    _clusterSetup.addInstancesToCluster(CLUSTER_NAME, instanceAddresses);\n\n    \r\n    for (String instance : instanceAddresses)\n    {\n      verifyInstance(_zkClient,\n                     CLUSTER_NAME,\n                     instance,\n                     true);\n    }\n\n    _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   nextInstanceAddress,\n                   true);\n    \r\n    boolean caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n  }\n","date":"2013-04-13 08:49:36","endLine":152,"groupId":"6759","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInstancesToCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/01/abc5ea8b6b614faa804307797d18f7674f76e9.src","preCode":"  public void testAddInstancesToCluster() throws Exception\n  {\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    _clusterSetup.addInstancesToCluster(CLUSTER_NAME, instanceAddresses);\n\n    \r\n    for (String instance : instanceAddresses)\n    {\n      verifyInstance(_zkClient,\n                     CLUSTER_NAME,\n                     instanceColonToUnderscoreFormat(instance),\n                     true);\n    }\n\n    _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   instanceColonToUnderscoreFormat(nextInstanceAddress),\n                   true);\n    \r\n    boolean caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2013-04-13 08:49:36","commitOrder":2,"curCode":"  public void testDisableDropInstancesFromCluster() throws Exception\n  {\n    testAddInstancesToCluster();\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    boolean caughtException = false;\n    \r\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    _clusterSetup.getClusterManagementTool()\n                 .enableInstance(CLUSTER_NAME,\n                                 nextInstanceAddress,\n                                 false);\n    verifyEnabled(_zkClient,\n                  CLUSTER_NAME,\n                  nextInstanceAddress,\n                  false);\n\n    \r\n    _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   nextInstanceAddress,\n                   false);\n\n    \r\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n    \r\n\r\n\r\n\r\n\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME,\n                                                              badFormatInstance,\n                                                              false);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","date":"2013-04-13 08:49:36","endLine":237,"groupId":"6896","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDisableDropInstancesFromCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/01/abc5ea8b6b614faa804307797d18f7674f76e9.src","preCode":"  public void testDisableDropInstancesFromCluster() throws Exception\n  {\n    testAddInstancesToCluster();\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    boolean caughtException = false;\n    \r\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    _clusterSetup.getClusterManagementTool()\n                 .enableInstance(CLUSTER_NAME,\n                                 instanceColonToUnderscoreFormat(nextInstanceAddress),\n                                 false);\n    verifyEnabled(_zkClient,\n                  CLUSTER_NAME,\n                  instanceColonToUnderscoreFormat(nextInstanceAddress),\n                  false);\n\n    \r\n    _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   instanceColonToUnderscoreFormat(nextInstanceAddress),\n                   false);\n\n    \r\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n    \r\n\r\n\r\n\r\n\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME,\n                                                              badFormatInstance,\n                                                              false);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"}],"commitId":"0ff62670fccea455b550f56f5162bdcf64dbe2e1","commitMessage":"@@@[HELIX-73] incorporating Vinayak's change on removing the host_port\nnaming constraint on instance names. \n","date":"2013-04-13 08:49:36","modifiedFileCount":"15","status":"M","submitter":"slu2011"},{"authorTime":"2013-04-13 08:49:36","codes":[{"authorDate":"2013-04-13 09:40:02","commitOrder":3,"curCode":"  public void testAddInstancesToCluster() throws Exception\n  {\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    _clusterSetup.addInstancesToCluster(CLUSTER_NAME, instanceAddresses);\n\n    \r\n    for (String instance : instanceAddresses)\n    {\n      verifyInstance(_zkClient,\n                     CLUSTER_NAME,\n                     instance,\n                     true);\n    }\n\n    _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   nextInstanceAddress,\n                   true);\n    \r\n    boolean caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","date":"2013-04-13 09:40:02","endLine":138,"groupId":"6759","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInstancesToCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/de/2882472f58f71b2fa521d10b53e2424b4e0807.src","preCode":"  public void testAddInstancesToCluster() throws Exception\n  {\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    _clusterSetup.addInstancesToCluster(CLUSTER_NAME, instanceAddresses);\n\n    \r\n    for (String instance : instanceAddresses)\n    {\n      verifyInstance(_zkClient,\n                     CLUSTER_NAME,\n                     instance,\n                     true);\n    }\n\n    _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   nextInstanceAddress,\n                   true);\n    \r\n    boolean caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2013-04-13 08:49:36","commitOrder":3,"curCode":"  public void testDisableDropInstancesFromCluster() throws Exception\n  {\n    testAddInstancesToCluster();\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    boolean caughtException = false;\n    \r\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    _clusterSetup.getClusterManagementTool()\n                 .enableInstance(CLUSTER_NAME,\n                                 nextInstanceAddress,\n                                 false);\n    verifyEnabled(_zkClient,\n                  CLUSTER_NAME,\n                  nextInstanceAddress,\n                  false);\n\n    \r\n    _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   nextInstanceAddress,\n                   false);\n\n    \r\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n    \r\n\r\n\r\n\r\n\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME,\n                                                              badFormatInstance,\n                                                              false);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","date":"2013-04-13 08:49:36","endLine":237,"groupId":"6896","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDisableDropInstancesFromCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/01/abc5ea8b6b614faa804307797d18f7674f76e9.src","preCode":"  public void testDisableDropInstancesFromCluster() throws Exception\n  {\n    testAddInstancesToCluster();\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++)\n    {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    boolean caughtException = false;\n    \r\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    _clusterSetup.getClusterManagementTool()\n                 .enableInstance(CLUSTER_NAME,\n                                 nextInstanceAddress,\n                                 false);\n    verifyEnabled(_zkClient,\n                  CLUSTER_NAME,\n                  nextInstanceAddress,\n                  false);\n\n    \r\n    _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient,\n                   CLUSTER_NAME,\n                   nextInstanceAddress,\n                   false);\n\n    \r\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n    \r\n\r\n\r\n\r\n\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try\n    {\n      _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME,\n                                                              badFormatInstance,\n                                                              false);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    caughtException = false;\n    try\n    {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, badFormatInstance);\n    }\n    catch (HelixException e)\n    {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"N"}],"commitId":"c50a1ae8d6cfa6c19fa4e94ef1ecb5030bfa1b64","commitMessage":"@@@[HELIX-73] fix build failures","date":"2013-04-13 09:40:02","modifiedFileCount":"3","status":"M","submitter":"slu2011"},{"authorTime":"2018-09-27 02:39:42","codes":[{"authorDate":"2018-09-27 02:39:42","commitOrder":4,"curCode":"  public void testAddInstancesToCluster() throws Exception {\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++) {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    _clusterSetup.addInstancesToCluster(CLUSTER_NAME, instanceAddresses);\n\n    \r\n    for (String instance : instanceAddresses) {\n      verifyInstance(_gZkClient, CLUSTER_NAME, instance, true);\n    }\n\n    _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_gZkClient, CLUSTER_NAME, nextInstanceAddress, true);\n    \r\n    boolean caughtException = false;\n    try {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","date":"2018-10-30 09:15:22","endLine":132,"groupId":"6759","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInstancesToCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/40/f814ea02179061c073db5a4cb33afd2e146c9f.src","preCode":"  public void testAddInstancesToCluster() throws Exception {\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++) {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    _clusterSetup.addInstancesToCluster(CLUSTER_NAME, instanceAddresses);\n\n    \r\n    for (String instance : instanceAddresses) {\n      verifyInstance(_zkClient, CLUSTER_NAME, instance, true);\n    }\n\n    _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient, CLUSTER_NAME, nextInstanceAddress, true);\n    \r\n    boolean caughtException = false;\n    try {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2018-09-27 02:39:42","commitOrder":4,"curCode":"  public void testDisableDropInstancesFromCluster() throws Exception {\n    testAddInstancesToCluster();\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++) {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    boolean caughtException = false;\n    \r\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME, nextInstanceAddress,\n        false);\n    verifyEnabled(_gZkClient, CLUSTER_NAME, nextInstanceAddress, false);\n\n    \r\n    _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_gZkClient, CLUSTER_NAME, nextInstanceAddress, false);\n\n    \r\n    caughtException = false;\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n    \r\n\r\n\r\n\r\n\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try {\n      _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME, badFormatInstance,\n          false);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    caughtException = false;\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, badFormatInstance);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","date":"2018-10-30 09:15:22","endLine":194,"groupId":"6896","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testDisableDropInstancesFromCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/40/f814ea02179061c073db5a4cb33afd2e146c9f.src","preCode":"  public void testDisableDropInstancesFromCluster() throws Exception {\n    testAddInstancesToCluster();\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++) {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    boolean caughtException = false;\n    \r\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME, nextInstanceAddress,\n        false);\n    verifyEnabled(_zkClient, CLUSTER_NAME, nextInstanceAddress, false);\n\n    \r\n    _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_zkClient, CLUSTER_NAME, nextInstanceAddress, false);\n\n    \r\n    caughtException = false;\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n    \r\n\r\n\r\n\r\n\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try {\n      _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME, badFormatInstance,\n          false);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    caughtException = false;\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, badFormatInstance);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"9d7364d7abba3932a1b25e96e4eb9dd3e203cec9","commitMessage":"@@@Using HelixZkClient to replace ZkClient in helix-core and helix-rest.\n\n1. Replace as much usage as possible. For the raw ZkClient tests.  the usages are kept.\n2. For backward compatibility.  some public interfaces still returns ZkClient. Marks them as Deprecated.\n","date":"2018-10-30 09:15:22","modifiedFileCount":"60","status":"M","submitter":"Jiajun Wang"},{"authorTime":"2019-05-04 08:52:17","codes":[{"authorDate":"2019-05-04 08:52:17","commitOrder":5,"curCode":"  public void testAddInstancesToCluster() throws Exception {\n    String[] instanceAddresses = new String[3];\n    for (int i = 0; i < 3; i++) {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    _clusterSetup.addInstancesToCluster(CLUSTER_NAME, instanceAddresses);\n\n    \r\n    for (String instance : instanceAddresses) {\n      verifyInstance(_gZkClient, CLUSTER_NAME, instance, true);\n    }\n\n    _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_gZkClient, CLUSTER_NAME, nextInstanceAddress, true);\n    \r\n    boolean caughtException = false;\n    try {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","date":"2019-05-25 09:19:21","endLine":133,"groupId":"1022","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInstancesToCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/84/d5f51cf163ca39f1286f5122b8a9c39c9d58cc.src","preCode":"  public void testAddInstancesToCluster() throws Exception {\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++) {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    _clusterSetup.addInstancesToCluster(CLUSTER_NAME, instanceAddresses);\n\n    \r\n    for (String instance : instanceAddresses) {\n      verifyInstance(_gZkClient, CLUSTER_NAME, instance, true);\n    }\n\n    _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_gZkClient, CLUSTER_NAME, nextInstanceAddress, true);\n    \r\n    boolean caughtException = false;\n    try {\n      _clusterSetup.addInstanceToCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"},{"authorDate":"2019-05-04 08:52:17","commitOrder":5,"curCode":"  public void testDisableDropInstancesFromCluster() throws Exception {\n    testAddInstancesToCluster();\n    String[] instanceAddresses = new String[3];\n    for (int i = 0; i < 3; i++) {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    boolean caughtException = false;\n    \r\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME, nextInstanceAddress,\n        false);\n    verifyEnabled(_gZkClient, CLUSTER_NAME, nextInstanceAddress, false);\n\n    \r\n    _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_gZkClient, CLUSTER_NAME, nextInstanceAddress, false);\n\n    \r\n    caughtException = false;\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try {\n      _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME, badFormatInstance,\n          false);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    caughtException = false;\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, badFormatInstance);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","date":"2019-05-25 09:19:21","endLine":190,"groupId":"1022","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testDisableDropInstancesFromCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/84/d5f51cf163ca39f1286f5122b8a9c39c9d58cc.src","preCode":"  public void testDisableDropInstancesFromCluster() throws Exception {\n    testAddInstancesToCluster();\n    String instanceAddresses[] = new String[3];\n    for (int i = 0; i < 3; i++) {\n      String currInstance = INSTANCE_PREFIX + i;\n      instanceAddresses[i] = currInstance;\n    }\n    String nextInstanceAddress = INSTANCE_PREFIX + 3;\n\n    boolean caughtException = false;\n    \r\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    \r\n    _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME, nextInstanceAddress,\n        false);\n    verifyEnabled(_gZkClient, CLUSTER_NAME, nextInstanceAddress, false);\n\n    \r\n    _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    verifyInstance(_gZkClient, CLUSTER_NAME, nextInstanceAddress, false);\n\n    \r\n    caughtException = false;\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, nextInstanceAddress);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n    \r\n\r\n\r\n\r\n\n\n    \r\n    String badFormatInstance = \"badinstance\";\n    caughtException = false;\n    try {\n      _clusterSetup.getClusterManagementTool().enableInstance(CLUSTER_NAME, badFormatInstance,\n          false);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n\n    caughtException = false;\n    try {\n      _clusterSetup.dropInstanceFromCluster(CLUSTER_NAME, badFormatInstance);\n    } catch (HelixException e) {\n      caughtException = true;\n    }\n    AssertJUnit.assertTrue(caughtException);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/tools/TestClusterSetup.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"5ce3934c5b4655e90021061720adbb3a42b1bb6b","commitMessage":"@@@TEST: Groom and refactor Helix integration tests\n\nIt was observed that there was a lot of technical debt (improper and buggy cleanup) in Helix's unit and integration tests. There were also mock controller and participant threads that were never shut down properly. This was preventing mvn test suite from completing over a remote machine (TMC).  and even on local environments.  mvn test was not passing. This diff refactors tests and makes sure that ZK is cleaned up after tests.\n\nChangelist:\n1. Inspect and correct mock threads (controller.  participant.  spectator.  etc)\n2. Ensure there are no leftover garbage clusters from tests\n3. Java 8 syntax\n4. Style fixes in old tests using Helix open source style file (helix-style.xml)\n\nRB=1654905\nG=helix-reviewers\nA=jxue. eblumena\n\nSigned-off-by: Hunter Lee <hulee@linkedin.com>\n","date":"2019-05-25 09:19:21","modifiedFileCount":"122","status":"M","submitter":"Hunter Lee"}]
