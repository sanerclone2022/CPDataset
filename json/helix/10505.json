[{"authorTime":"2018-07-25 05:06:20","codes":[{"authorDate":"2018-07-25 05:06:20","commitOrder":1,"curCode":"    LongTask(TaskCallbackContext context, String instanceName) {\n      super(context);\n      _instanceName = instanceName;\n      _quotaType = context.getJobConfig().getJobType();\n      if (_quotaType != null && !_availableQuotaTypes.contains(_quotaType)) {\n        _quotaType = AssignableInstance.DEFAULT_QUOTA_TYPE;\n      }\n      \r\n      if (_quotaType != null && !_quotaTypeExecutionCount.containsKey(_quotaType)) {\n        _quotaTypeExecutionCount.put(_quotaType, 0);\n      }\n    }\n","date":"2018-07-25 08:45:50","endLine":619,"groupId":"552","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"LongTask","params":"(TaskCallbackContextcontext@StringinstanceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/db/471ffaf5a2ce34b67afa61a688b43fb0600900.src","preCode":"    LongTask(TaskCallbackContext context, String instanceName) {\n      super(context);\n      _instanceName = instanceName;\n      _quotaType = context.getJobConfig().getJobType();\n      if (_quotaType != null && !_availableQuotaTypes.contains(_quotaType)) {\n        _quotaType = AssignableInstance.DEFAULT_QUOTA_TYPE;\n      }\n      \r\n      if (_quotaType != null && !_quotaTypeExecutionCount.containsKey(_quotaType)) {\n        _quotaTypeExecutionCount.put(_quotaType, 0);\n      }\n    }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestQuotaBasedScheduling.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":608,"status":"B"},{"authorDate":"2018-07-25 05:06:20","commitOrder":1,"curCode":"    FailTask(TaskCallbackContext context, String instanceName) {\n      super(context);\n      _instanceName = instanceName;\n      _quotaType = context.getJobConfig().getJobType();\n      if (_quotaType != null && !_availableQuotaTypes.contains(_quotaType)) {\n        _quotaType = AssignableInstance.DEFAULT_QUOTA_TYPE;\n      }\n      \r\n      if (_quotaType != null && !_quotaTypeExecutionCount.containsKey(_quotaType)) {\n        _quotaTypeExecutionCount.put(_quotaType, 0);\n      }\n    }\n","date":"2018-07-25 08:45:50","endLine":657,"groupId":"552","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"FailTask","params":"(TaskCallbackContextcontext@StringinstanceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/db/471ffaf5a2ce34b67afa61a688b43fb0600900.src","preCode":"    FailTask(TaskCallbackContext context, String instanceName) {\n      super(context);\n      _instanceName = instanceName;\n      _quotaType = context.getJobConfig().getJobType();\n      if (_quotaType != null && !_availableQuotaTypes.contains(_quotaType)) {\n        _quotaType = AssignableInstance.DEFAULT_QUOTA_TYPE;\n      }\n      \r\n      if (_quotaType != null && !_quotaTypeExecutionCount.containsKey(_quotaType)) {\n        _quotaTypeExecutionCount.put(_quotaType, 0);\n      }\n    }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestQuotaBasedScheduling.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":646,"status":"B"}],"commitId":"6759040956907b197b6d65cb8b4759b7e8981883","commitMessage":"@@@[HELIX-744] Allow undefined workflow/job types to be assigned as DEFAULT type\n\nPreviously.  we ignored undefined types.  that is workflow/job types that are not defined in ClusterConfig. This is not backward-compatible because some users of Task Framework are setting types without any quota-related config set in ClusterConfig. The default behavior was changed so that each AssignableInstance will just treat these workflows/jobs as DEFAULT type.  which will make quota-based scheduling backward-compatible.\nChangelist:\n1. AssignableInstance treats undefined types as DEFAULT\n2. Appropriate log messages and logic change was applied to restoreTaskAssignResult logic\n3. A test case was added to TestQuotaBasedScheduling\n","date":"2018-07-25 08:45:50","modifiedFileCount":"3","status":"B","submitter":"Hunter Lee"},{"authorTime":"2019-05-04 08:52:17","codes":[{"authorDate":"2019-05-04 08:52:17","commitOrder":2,"curCode":"    LongTask(TaskCallbackContext context, String instanceName) {\n      super(context);\n      _instanceName = instanceName;\n      _quotaType = context.getJobConfig().getJobType();\n      if (_quotaType != null && !_availableQuotaTypes.contains(_quotaType)) {\n        _quotaType = AssignableInstance.DEFAULT_QUOTA_TYPE;\n      }\n      \r\n      if (_quotaType != null && !_quotaTypeExecutionCount.containsKey(_quotaType)) {\n        synchronized (_quotaTypeExecutionCount) {\n          _quotaTypeExecutionCount.put(_quotaType, 0);\n        }\n      }\n    }\n","date":"2019-05-25 09:19:21","endLine":648,"groupId":"10505","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"LongTask","params":"(TaskCallbackContextcontext@StringinstanceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b5/e14610bafd9e2701c209afa715ec7bba2124e3.src","preCode":"    LongTask(TaskCallbackContext context, String instanceName) {\n      super(context);\n      _instanceName = instanceName;\n      _quotaType = context.getJobConfig().getJobType();\n      if (_quotaType != null && !_availableQuotaTypes.contains(_quotaType)) {\n        _quotaType = AssignableInstance.DEFAULT_QUOTA_TYPE;\n      }\n      \r\n      if (_quotaType != null && !_quotaTypeExecutionCount.containsKey(_quotaType)) {\n        _quotaTypeExecutionCount.put(_quotaType, 0);\n      }\n    }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestQuotaBasedScheduling.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":635,"status":"M"},{"authorDate":"2019-05-04 08:52:17","commitOrder":2,"curCode":"    FailTask(TaskCallbackContext context, String instanceName) {\n      super(context);\n      _instanceName = instanceName;\n      _quotaType = context.getJobConfig().getJobType();\n      if (_quotaType != null && !_availableQuotaTypes.contains(_quotaType)) {\n        _quotaType = AssignableInstance.DEFAULT_QUOTA_TYPE;\n      }\n      \r\n      if (_quotaType != null && !_quotaTypeExecutionCount.containsKey(_quotaType)) {\n        synchronized (_quotaTypeExecutionCount) {\n          _quotaTypeExecutionCount.put(_quotaType, 0);\n        }\n      }\n    }\n","date":"2019-05-25 09:19:21","endLine":690,"groupId":"10505","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"FailTask","params":"(TaskCallbackContextcontext@StringinstanceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b5/e14610bafd9e2701c209afa715ec7bba2124e3.src","preCode":"    FailTask(TaskCallbackContext context, String instanceName) {\n      super(context);\n      _instanceName = instanceName;\n      _quotaType = context.getJobConfig().getJobType();\n      if (_quotaType != null && !_availableQuotaTypes.contains(_quotaType)) {\n        _quotaType = AssignableInstance.DEFAULT_QUOTA_TYPE;\n      }\n      \r\n      if (_quotaType != null && !_quotaTypeExecutionCount.containsKey(_quotaType)) {\n        _quotaTypeExecutionCount.put(_quotaType, 0);\n      }\n    }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestQuotaBasedScheduling.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":677,"status":"M"}],"commitId":"5ce3934c5b4655e90021061720adbb3a42b1bb6b","commitMessage":"@@@TEST: Groom and refactor Helix integration tests\n\nIt was observed that there was a lot of technical debt (improper and buggy cleanup) in Helix's unit and integration tests. There were also mock controller and participant threads that were never shut down properly. This was preventing mvn test suite from completing over a remote machine (TMC).  and even on local environments.  mvn test was not passing. This diff refactors tests and makes sure that ZK is cleaned up after tests.\n\nChangelist:\n1. Inspect and correct mock threads (controller.  participant.  spectator.  etc)\n2. Ensure there are no leftover garbage clusters from tests\n3. Java 8 syntax\n4. Style fixes in old tests using Helix open source style file (helix-style.xml)\n\nRB=1654905\nG=helix-reviewers\nA=jxue. eblumena\n\nSigned-off-by: Hunter Lee <hulee@linkedin.com>\n","date":"2019-05-25 09:19:21","modifiedFileCount":"122","status":"M","submitter":"Hunter Lee"}]
