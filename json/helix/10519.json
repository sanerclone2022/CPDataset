[{"authorTime":"2016-01-28 02:10:31","codes":[{"authorDate":"2016-01-28 02:10:31","commitOrder":5,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 05:44:56","endLine":231,"groupId":"2142","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7e/eb3f43920eb8c4ae54978964269d3bba363f57.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"MB"},{"authorDate":"2016-01-28 02:10:31","commitOrder":5,"curCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","date":"2016-07-06 05:44:56","endLine":199,"groupId":"2142","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobDependantWorkflowFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9e/2456cc2073cfc73f346f21398acaa777be84e9.src","preCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailureDependence.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"B"}],"commitId":"be660245fc1a9f4b22fba58c4b25a1af19555066","commitMessage":"@@@Add new job option to allow contining a job even its direct dependent job fails.\n","date":"2016-07-06 05:44:56","modifiedFileCount":"8","status":"M","submitter":"Lei Xia"},{"authorTime":"2016-04-09 04:40:04","codes":[{"authorDate":"2016-01-28 02:10:31","commitOrder":6,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 05:44:56","endLine":231,"groupId":"2142","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/7e/eb3f43920eb8c4ae54978964269d3bba363f57.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"N"},{"authorDate":"2016-04-09 04:40:04","commitOrder":6,"curCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","date":"2016-07-06 05:58:44","endLine":97,"groupId":"2142","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobDependantWorkflowFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/d4/f6dbbf7d56be329cc26685712b3818daa7dd38.src","preCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailureDependence.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"ead83012ee07610859fabdc73712cf4532473e88","commitMessage":"@@@Add TaskTestBase and refactor 2 tests\n1. Add TaskTestBase for common initialization.\n2. Refactor 2 tests to test the test base.\n","date":"2016-07-06 05:58:44","modifiedFileCount":"2","status":"M","submitter":"Junkai Xue"},{"authorTime":"2016-04-09 04:40:04","codes":[{"authorDate":"2016-04-13 02:48:54","commitOrder":7,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 06:02:05","endLine":128,"groupId":"2142","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/5a/07942923f72fe6969f5f197beceea71cf8b51d.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < num_dbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_test_dbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _test_dbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _test_dbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2016-04-09 04:40:04","commitOrder":7,"curCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","date":"2016-07-06 05:58:44","endLine":97,"groupId":"2142","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobDependantWorkflowFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/d4/f6dbbf7d56be329cc26685712b3818daa7dd38.src","preCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailureDependence.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"N"}],"commitId":"99a40083ab7bc1e1480d66107fff83f0479fa068","commitMessage":"@@@Refactor tests with TaskTestBase and remove duplicated code.\n","date":"2016-07-06 06:02:05","modifiedFileCount":"10","status":"M","submitter":"Junkai Xue"},{"authorTime":"2016-05-11 02:44:25","codes":[{"authorDate":"2016-05-11 02:44:25","commitOrder":8,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    _driver.pollForJobState(queueName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","date":"2016-07-06 07:21:13","endLine":128,"groupId":"2142","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/87/9bfeaa45d3eab8d34d55b6e7609def27f5b3f1.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2016-05-11 02:44:25","commitOrder":8,"curCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    _driver.pollForJobState(queueName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(queueName, TaskState.FAILED);\n  }\n","date":"2016-07-06 07:21:13","endLine":97,"groupId":"2142","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobDependantWorkflowFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/25/4a35d02ed817fdc395bbe687819f475353ab96.src","preCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    TaskTestUtil.pollForJobState(_driver, queueName, namedSpaceJob1, TaskState.FAILED);\n    TaskTestUtil.pollForWorkflowState(_driver, queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailureDependence.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"183a26ae7857a7c35985b14df9742ba3f4a06566","commitMessage":"@@@Add pollForJobState and pollForWorkflowState function in TaskDriver\n\n1. Add pollForJobState and pollForWorkflowState functions in TaskDriver\n2. Add unit tests for poll completed states for those tasks.\n3. Refactor all tests using new functions.\n","date":"2016-07-06 07:21:13","modifiedFileCount":"20","status":"M","submitter":"Junkai Xue"},{"authorTime":"2016-10-26 04:27:55","codes":[{"authorDate":"2016-10-26 04:27:55","commitOrder":9,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String workflowName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + workflowName);\n    Workflow.Builder builder = new Workflow.Builder(workflowName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      builder.addJob(jobName, jobConfig);\n      if (i > 0) {\n        builder.addParentChildDependency(\"job\" + _testDbs.get(i - 1), \"job\" + _testDbs.get(i));\n      }      currentJobNames.add(jobName);\n    }\n\n    _driver.start(builder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", workflowName, currentJobNames.get(0));\n    _driver.pollForJobState(workflowName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(workflowName, TaskState.FAILED);\n\n    _driver.delete(workflowName);\n  }\n","date":"2016-10-29 11:33:21","endLine":139,"groupId":"1970","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/3c/ca57eaeb68d5034fef098af78c7dafa3cc93ae.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(0));\n    _driver.pollForJobState(queueName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(queueName, TaskState.FAILED);\n\n    _driver.delete(queueName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2016-10-26 04:27:55","commitOrder":9,"curCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    _driver.pollForJobState(queueName, namedSpaceJob1, TaskState.FAILED);\n  }\n","date":"2016-10-29 11:33:21","endLine":96,"groupId":"2142","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobDependantWorkflowFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/4e/bb9f69633bab0bc3b5e8ffa3cb3eeebb0e3e06.src","preCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    _driver.pollForJobState(queueName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(queueName, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailureDependence.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"33dae525a8b31cae4d6a80a89f1d08190db0beda","commitMessage":"@@@[HELIX-636] Add Java API and REST API for clean up JobQueue\n\nTo clean up the jobs in the final states.  provide a Java API and REST API in helix.\n","date":"2016-10-29 11:33:21","modifiedFileCount":"8","status":"M","submitter":"Junkai Xue"},{"authorTime":"2018-06-08 08:15:54","codes":[{"authorDate":"2018-06-08 08:15:54","commitOrder":10,"curCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String workflowName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + workflowName);\n    Workflow.Builder builder = new Workflow.Builder(workflowName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      builder.addJob(jobName, jobConfig);\n      if (i > 0) {\n        builder.addParentChildDependency(\"job\" + _testDbs.get(i - 1), \"job\" + _testDbs.get(i));\n      }      currentJobNames.add(jobName);\n    }\n\n    _driver.start(builder.build());\n    _gSetupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", workflowName, currentJobNames.get(0));\n    _driver.pollForJobState(workflowName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(workflowName, TaskState.FAILED);\n\n    _driver.delete(workflowName);\n  }\n","date":"2018-07-14 02:20:49","endLine":139,"groupId":"10519","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testJobFailsWithMissingTargetInRunning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/23/da9dc633f805160b8851fa586f997a57395b3d.src","preCode":"  public void testJobFailsWithMissingTargetInRunning() throws Exception {\n    String workflowName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + workflowName);\n    Workflow.Builder builder = new Workflow.Builder(workflowName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      builder.addJob(jobName, jobConfig);\n      if (i > 0) {\n        builder.addParentChildDependency(\"job\" + _testDbs.get(i - 1), \"job\" + _testDbs.get(i));\n      }      currentJobNames.add(jobName);\n    }\n\n    _driver.start(builder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(0));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", workflowName, currentJobNames.get(0));\n    _driver.pollForJobState(workflowName, namedSpaceJob1, TaskState.FAILED);\n    _driver.pollForWorkflowState(workflowName, TaskState.FAILED);\n\n    _driver.delete(workflowName);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestRunJobsWithMissingTarget.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2018-06-08 08:15:54","commitOrder":10,"curCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _gSetupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    _driver.pollForJobState(queueName, namedSpaceJob1, TaskState.FAILED);\n  }\n","date":"2018-07-14 02:20:49","endLine":97,"groupId":"10519","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testJobDependantWorkflowFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/43/d80fe0ae4daaf33e2a548d5c2be8aaca53f856.src","preCode":"  public void testJobDependantWorkflowFailure() throws Exception {\n    String queueName = TestHelper.getTestMethodName();\n\n    \r\n    LOG.info(\"Starting job-queue: \" + queueName);\n    JobQueue.Builder queueBuilder = TaskTestUtil.buildJobQueue(queueName);\n    \r\n    List<String> currentJobNames = new ArrayList<String>();\n    for (int i = 0; i < _numDbs; i++) {\n      JobConfig.Builder jobConfig =\n          new JobConfig.Builder().setCommand(MockTask.TASK_COMMAND).setTargetResource(_testDbs.get(i))\n              .setTargetPartitionStates(Sets.newHashSet(\"SLAVE\"));\n      String jobName = \"job\" + _testDbs.get(i);\n      queueBuilder.enqueueJob(jobName, jobConfig);\n      currentJobNames.add(jobName);\n    }\n\n    _driver.start(queueBuilder.build());\n    _setupTool.dropResourceFromCluster(CLUSTER_NAME, _testDbs.get(2));\n\n    String namedSpaceJob1 = String.format(\"%s_%s\", queueName, currentJobNames.get(2));\n    _driver.pollForJobState(queueName, namedSpaceJob1, TaskState.FAILED);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailureDependence.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"c0d5792b745c67b6fee56ba79df02be89d1f049e","commitMessage":"@@@Properly remove clusters after each test.  and clean up duplicated codes in tests and move them into base test classes.\n","date":"2018-07-14 02:20:49","modifiedFileCount":"139","status":"M","submitter":"Lei Xia"}]
