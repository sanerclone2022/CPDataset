[{"authorTime":"2015-05-12 01:54:27","codes":[{"authorDate":"2012-11-09 09:02:17","commitOrder":2,"curCode":"  public HelixManager start() throws Exception\n  {\n    HelixManager manager = null;\n    \r\n    if (_clusterMangerType.equalsIgnoreCase(\"zk\"))\n    {\n      manager = HelixManagerFactory.getZKHelixManager(_clusterName,\n                                                          _instanceName,\n                                                          InstanceType.PARTICIPANT,\n                                                          _zkConnectString);\n    }\n    else\n    {\n      throw new IllegalArgumentException(\"Unsupported cluster manager type:\" + _clusterMangerType);\n    }\n\n    stateModelFactory = new DummyStateModelFactory(_transDelayInMs);\n    DummyLeaderStandbyStateModelFactory stateModelFactory1 = new DummyLeaderStandbyStateModelFactory(_transDelayInMs);\n    DummyOnlineOfflineStateModelFactory stateModelFactory2 = new DummyOnlineOfflineStateModelFactory(_transDelayInMs);\n\r\n    StateMachineEngine stateMach = manager.getStateMachineEngine();\n    stateMach.registerStateModelFactory(\"MasterSlave\", stateModelFactory);\n    stateMach.registerStateModelFactory(\"LeaderStandby\", stateModelFactory1);\n    stateMach.registerStateModelFactory(\"OnlineOffline\", stateModelFactory2);\n\n    manager.connect();\n\r\n    return manager;\n  }\n","date":"2012-11-09 09:02:17","endLine":123,"groupId":"1385","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/03/b07310b60af52cc98e93c3c8f97a31f60c3c66.src","preCode":"  public HelixManager start() throws Exception\n  {\n    HelixManager manager = null;\n    \r\n    if (_clusterMangerType.equalsIgnoreCase(\"zk\"))\n    {\n      manager = HelixManagerFactory.getZKHelixManager(_clusterName,\n                                                          _instanceName,\n                                                          InstanceType.PARTICIPANT,\n                                                          _zkConnectString);\n    }\n    else\n    {\n      throw new IllegalArgumentException(\"Unsupported cluster manager type:\" + _clusterMangerType);\n    }\n\n    stateModelFactory = new DummyStateModelFactory(_transDelayInMs);\n    DummyLeaderStandbyStateModelFactory stateModelFactory1 = new DummyLeaderStandbyStateModelFactory(_transDelayInMs);\n    DummyOnlineOfflineStateModelFactory stateModelFactory2 = new DummyOnlineOfflineStateModelFactory(_transDelayInMs);\n\r\n    StateMachineEngine stateMach = manager.getStateMachineEngine();\n    stateMach.registerStateModelFactory(\"MasterSlave\", stateModelFactory);\n    stateMach.registerStateModelFactory(\"LeaderStandby\", stateModelFactory1);\n    stateMach.registerStateModelFactory(\"OnlineOffline\", stateModelFactory2);\n\n    manager.connect();\n\r\n    return manager;\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/mock/participant/DummyProcess.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"NB"},{"authorDate":"2015-05-12 01:54:27","commitOrder":2,"curCode":"    public HelixManager start() throws Exception {\n      HelixManager manager = null;\n      \r\n      if (_clusterMangerType.equalsIgnoreCase(\"zk\")) {\n        manager =\n            HelixManagerFactory.getZKHelixManager(_clusterName, _instanceName,\n                InstanceType.PARTICIPANT, _zkConnectString);\n      } else {\n        throw new IllegalArgumentException(\"Unsupported cluster manager type:\" + _clusterMangerType);\n      }\n\n      MockOnlineOfflineStateModelFactory stateModelFactory2 =\n          new MockOnlineOfflineStateModelFactory(_transDelayInMs, _resourceName, _resourceTag,\n              _instanceName);\n      \r\n      StateMachineEngine stateMach = manager.getStateMachineEngine();\n      stateMach.registerStateModelFactory(\"OnlineOffline\", stateModelFactory2);\n\n      manager.connect();\n      \r\n      return manager;\n    }\n","date":"2015-07-10 13:37:54","endLine":291,"groupId":"3685","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/34/66b2f5791be0f37fe940ade331fd84a8303c91.src","preCode":"    public HelixManager start() throws Exception {\n      HelixManager manager = null;\n      \r\n      if (_clusterMangerType.equalsIgnoreCase(\"zk\")) {\n        manager =\n            HelixManagerFactory.getZKHelixManager(_clusterName, _instanceName,\n                InstanceType.PARTICIPANT, _zkConnectString);\n      } else {\n        throw new IllegalArgumentException(\"Unsupported cluster manager type:\" + _clusterMangerType);\n      }\n\n      MockOnlineOfflineStateModelFactory stateModelFactory2 =\n          new MockOnlineOfflineStateModelFactory(_transDelayInMs, _resourceName, _resourceTag,\n              _instanceName);\n      \r\n      StateMachineEngine stateMach = manager.getStateMachineEngine();\n      stateMach.registerStateModelFactory(\"OnlineOffline\", stateModelFactory2);\n\n      manager.connect();\n      \r\n      return manager;\n    }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/TestResourceGroupEndtoEnd.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"B"}],"commitId":"a23beb7cf79a3f1da104a55477c7eddb594fa68b","commitMessage":"@@@[HELIX-599] Support creating/maintaining/routing resources with same names in different instance groups.\n","date":"2015-07-10 13:37:54","modifiedFileCount":"9","status":"M","submitter":"Lei Xia"},{"authorTime":"2015-05-12 01:54:27","codes":[{"authorDate":"2018-04-17 09:32:58","commitOrder":3,"curCode":"  public HelixManager start() throws Exception {\n    HelixManager manager = null;\n    \r\n    if (_clusterMangerType.equalsIgnoreCase(\"zk\")) {\n      manager =\n          HelixManagerFactory.getZKHelixManager(_clusterName, _instanceName,\n              InstanceType.PARTICIPANT, _zkConnectString);\n    } else {\n      throw new IllegalArgumentException(\"Unsupported cluster manager type:\" + _clusterMangerType);\n    }\n\n    stateModelFactory = new DummyMasterSlaveStateModelFactory(_transDelayInMs);\n    DummyLeaderStandbyStateModelFactory stateModelFactory1 =\n        new DummyLeaderStandbyStateModelFactory(_transDelayInMs);\n    DummyOnlineOfflineStateModelFactory stateModelFactory2 =\n        new DummyOnlineOfflineStateModelFactory(_transDelayInMs);\n    \r\n    StateMachineEngine stateMach = manager.getStateMachineEngine();\n    stateMach.registerStateModelFactory(\"MasterSlave\", stateModelFactory);\n    stateMach.registerStateModelFactory(\"LeaderStandby\", stateModelFactory1);\n    stateMach.registerStateModelFactory(\"OnlineOffline\", stateModelFactory2);\n\n    manager.connect();\n    \r\n    \r\n    return manager;\n  }\n","date":"2018-06-27 08:52:19","endLine":109,"groupId":"10118","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/9c/87ddabda55992036fdf8b28dea287616e0cd0a.src","preCode":"  public HelixManager start() throws Exception {\n    HelixManager manager = null;\n    \r\n    if (_clusterMangerType.equalsIgnoreCase(\"zk\")) {\n      manager =\n          HelixManagerFactory.getZKHelixManager(_clusterName, _instanceName,\n              InstanceType.PARTICIPANT, _zkConnectString);\n    } else {\n      throw new IllegalArgumentException(\"Unsupported cluster manager type:\" + _clusterMangerType);\n    }\n\n    stateModelFactory = new DummyStateModelFactory(_transDelayInMs);\n    DummyLeaderStandbyStateModelFactory stateModelFactory1 =\n        new DummyLeaderStandbyStateModelFactory(_transDelayInMs);\n    DummyOnlineOfflineStateModelFactory stateModelFactory2 =\n        new DummyOnlineOfflineStateModelFactory(_transDelayInMs);\n    \r\n    StateMachineEngine stateMach = manager.getStateMachineEngine();\n    stateMach.registerStateModelFactory(\"MasterSlave\", stateModelFactory);\n    stateMach.registerStateModelFactory(\"LeaderStandby\", stateModelFactory1);\n    stateMach.registerStateModelFactory(\"OnlineOffline\", stateModelFactory2);\n\n    manager.connect();\n    \r\n    \r\n    return manager;\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/mock/participant/DummyProcess.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2015-05-12 01:54:27","commitOrder":3,"curCode":"    public HelixManager start() throws Exception {\n      HelixManager manager = null;\n      \r\n      if (_clusterMangerType.equalsIgnoreCase(\"zk\")) {\n        manager =\n            HelixManagerFactory.getZKHelixManager(_clusterName, _instanceName,\n                InstanceType.PARTICIPANT, _zkConnectString);\n      } else {\n        throw new IllegalArgumentException(\"Unsupported cluster manager type:\" + _clusterMangerType);\n      }\n\n      MockOnlineOfflineStateModelFactory stateModelFactory2 =\n          new MockOnlineOfflineStateModelFactory(_transDelayInMs, _resourceName, _resourceTag,\n              _instanceName);\n      \r\n      StateMachineEngine stateMach = manager.getStateMachineEngine();\n      stateMach.registerStateModelFactory(\"OnlineOffline\", stateModelFactory2);\n\n      manager.connect();\n      \r\n      return manager;\n    }\n","date":"2015-07-10 13:37:54","endLine":291,"groupId":"10118","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/34/66b2f5791be0f37fe940ade331fd84a8303c91.src","preCode":"    public HelixManager start() throws Exception {\n      HelixManager manager = null;\n      \r\n      if (_clusterMangerType.equalsIgnoreCase(\"zk\")) {\n        manager =\n            HelixManagerFactory.getZKHelixManager(_clusterName, _instanceName,\n                InstanceType.PARTICIPANT, _zkConnectString);\n      } else {\n        throw new IllegalArgumentException(\"Unsupported cluster manager type:\" + _clusterMangerType);\n      }\n\n      MockOnlineOfflineStateModelFactory stateModelFactory2 =\n          new MockOnlineOfflineStateModelFactory(_transDelayInMs, _resourceName, _resourceTag,\n              _instanceName);\n      \r\n      StateMachineEngine stateMach = manager.getStateMachineEngine();\n      stateMach.registerStateModelFactory(\"OnlineOffline\", stateModelFactory2);\n\n      manager.connect();\n      \r\n      return manager;\n    }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/TestResourceGroupEndtoEnd.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"N"}],"commitId":"94ac4253bb6a35f8ad895200ba6b050a576d4198","commitMessage":"@@@Add integration tests to test Helix's partition migration strategy during cluster expansion and idealstate rebalance strategy change.\n","date":"2018-06-27 08:52:19","modifiedFileCount":"5","status":"M","submitter":"Lei Xia"}]
