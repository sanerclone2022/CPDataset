[{"authorTime":"2018-04-25 09:18:40","codes":[{"authorDate":"2018-04-25 09:18:40","commitOrder":1,"curCode":"  private void verifyP2PDisabled() {\n    ClusterDataCache dataCache = new ClusterDataCache(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getSessionId());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          if (state.equalsIgnoreCase(\"MASTER\")) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            Assert.assertEquals(triggerHost, _controllerName,\n                state + \" of \" + partition + \" on \" + instance.getInstanceName()\n                    + \" was triggered by \" + triggerHost);\n          }\n        }\n      }\n    }\n  }\n","date":"2018-09-18 06:08:28","endLine":208,"groupId":"4542","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyP2PDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b3/ef3e5ce431d3054fcbd339e30bd0fd52162430.src","preCode":"  private void verifyP2PDisabled() {\n    ClusterDataCache dataCache = new ClusterDataCache(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getSessionId());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          if (state.equalsIgnoreCase(\"MASTER\")) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            Assert.assertEquals(triggerHost, _controllerName,\n                state + \" of \" + partition + \" on \" + instance.getInstanceName()\n                    + \" was triggered by \" + triggerHost);\n          }\n        }\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"B"},{"authorDate":"2018-04-25 09:18:40","commitOrder":1,"curCode":"  private void verifyP2PEnabled(long startTime) {\n    ClusterDataCache dataCache = new ClusterDataCache(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getSessionId());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          long start = currentState.getStartTime(partition);\n          if (state.equalsIgnoreCase(\"MASTER\") && start > startTime) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            if (!triggerHost.equals(_controllerName)) {\n              p2pTrigged ++;\n            }\n            total ++;\n          }\n        }\n      }\n    }\n  }\n","date":"2018-09-18 06:08:28","endLine":236,"groupId":"4542","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyP2PEnabled","params":"(longstartTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b3/ef3e5ce431d3054fcbd339e30bd0fd52162430.src","preCode":"  private void verifyP2PEnabled(long startTime) {\n    ClusterDataCache dataCache = new ClusterDataCache(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getSessionId());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          long start = currentState.getStartTime(partition);\n          if (state.equalsIgnoreCase(\"MASTER\") && start > startTime) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            if (!triggerHost.equals(_controllerName)) {\n              p2pTrigged ++;\n            }\n            total ++;\n          }\n        }\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"B"}],"commitId":"880f885121afecab4e186282fbf94a146a2cf04a","commitMessage":"@@@Fix P2P message logic in controller to avoid sending duplicated messages to participants.\n","date":"2018-09-18 06:08:28","modifiedFileCount":"21","status":"B","submitter":"Lei Xia"},{"authorTime":"2019-02-26 09:36:00","codes":[{"authorDate":"2019-02-26 09:36:00","commitOrder":2,"curCode":"  private void verifyP2PDisabled() {\n    ResourceControllerDataProvider dataCache = new ResourceControllerDataProvider(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getSessionId());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          if (state.equalsIgnoreCase(\"MASTER\")) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            Assert.assertEquals(triggerHost, _controllerName,\n                state + \" of \" + partition + \" on \" + instance.getInstanceName()\n                    + \" was triggered by \" + triggerHost);\n          }\n        }\n      }\n    }\n  }\n","date":"2019-02-26 09:36:00","endLine":207,"groupId":"4542","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyP2PDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/04/c825efdfd3d3c49426926c2adb966ef76535d2.src","preCode":"  private void verifyP2PDisabled() {\n    ClusterDataCache dataCache = new ClusterDataCache(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getSessionId());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          if (state.equalsIgnoreCase(\"MASTER\")) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            Assert.assertEquals(triggerHost, _controllerName,\n                state + \" of \" + partition + \" on \" + instance.getInstanceName()\n                    + \" was triggered by \" + triggerHost);\n          }\n        }\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"},{"authorDate":"2019-02-26 09:36:00","commitOrder":2,"curCode":"  private void verifyP2PEnabled(long startTime) {\n    ResourceControllerDataProvider dataCache = new ResourceControllerDataProvider(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getSessionId());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          long start = currentState.getStartTime(partition);\n          if (state.equalsIgnoreCase(\"MASTER\") && start > startTime) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            if (!triggerHost.equals(_controllerName)) {\n              p2pTrigged ++;\n            }\n            total ++;\n          }\n        }\n      }\n    }\n  }\n","date":"2019-02-26 09:36:00","endLine":235,"groupId":"4542","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyP2PEnabled","params":"(longstartTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/04/c825efdfd3d3c49426926c2adb966ef76535d2.src","preCode":"  private void verifyP2PEnabled(long startTime) {\n    ClusterDataCache dataCache = new ClusterDataCache(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getSessionId());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          long start = currentState.getStartTime(partition);\n          if (state.equalsIgnoreCase(\"MASTER\") && start > startTime) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            if (!triggerHost.equals(_controllerName)) {\n              p2pTrigged ++;\n            }\n            total ++;\n          }\n        }\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"M"}],"commitId":"fbb679c5f4804652ea730bf5cd4ee6bf1329efc3","commitMessage":"@@@split data cache\n","date":"2019-02-26 09:36:00","modifiedFileCount":"95","status":"M","submitter":"Harry Zhang"},{"authorTime":"2019-06-18 05:37:02","codes":[{"authorDate":"2019-06-18 05:37:02","commitOrder":3,"curCode":"  private void verifyP2PDisabled() {\n    ResourceControllerDataProvider dataCache = new ResourceControllerDataProvider(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getEphemeralOwner());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          if (state.equalsIgnoreCase(\"MASTER\")) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            Assert.assertEquals(triggerHost, _controllerName,\n                state + \" of \" + partition + \" on \" + instance.getInstanceName()\n                    + \" was triggered by \" + triggerHost);\n          }\n        }\n      }\n    }\n  }\n","date":"2019-06-25 07:46:15","endLine":205,"groupId":"10625","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyP2PDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/8c/bc74fb12a3f484bab507d4c1ff5310a824caf8.src","preCode":"  private void verifyP2PDisabled() {\n    ResourceControllerDataProvider dataCache = new ResourceControllerDataProvider(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getSessionId());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          if (state.equalsIgnoreCase(\"MASTER\")) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            Assert.assertEquals(triggerHost, _controllerName,\n                state + \" of \" + partition + \" on \" + instance.getInstanceName()\n                    + \" was triggered by \" + triggerHost);\n          }\n        }\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2019-06-18 05:37:02","commitOrder":3,"curCode":"  private void verifyP2PEnabled(long startTime) {\n    ResourceControllerDataProvider dataCache = new ResourceControllerDataProvider(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getEphemeralOwner());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          long start = currentState.getStartTime(partition);\n          if (state.equalsIgnoreCase(\"MASTER\") && start > startTime) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            if (!triggerHost.equals(_controllerName)) {\n              p2pTrigged ++;\n            }\n            total ++;\n          }\n        }\n      }\n    }\n  }\n","date":"2019-06-25 07:46:15","endLine":233,"groupId":"10625","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyP2PEnabled","params":"(longstartTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/8c/bc74fb12a3f484bab507d4c1ff5310a824caf8.src","preCode":"  private void verifyP2PEnabled(long startTime) {\n    ResourceControllerDataProvider dataCache = new ResourceControllerDataProvider(CLUSTER_NAME);\n    dataCache.refresh(_accessor);\n    Map<String, LiveInstance> liveInstanceMap = dataCache.getLiveInstances();\n\n    for (LiveInstance instance : liveInstanceMap.values()) {\n      Map<String, CurrentState> currentStateMap =\n          dataCache.getCurrentState(instance.getInstanceName(), instance.getSessionId());\n      Assert.assertNotNull(currentStateMap);\n      for (CurrentState currentState : currentStateMap.values()) {\n        for (String partition : currentState.getPartitionStateMap().keySet()) {\n          String state = currentState.getState(partition);\n          long start = currentState.getStartTime(partition);\n          if (state.equalsIgnoreCase(\"MASTER\") && start > startTime) {\n            String triggerHost = currentState.getTriggerHost(partition);\n            if (!triggerHost.equals(_controllerName)) {\n              p2pTrigged ++;\n            }\n            total ++;\n          }\n        }\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/messaging/TestP2PNoDuplicatedMessage.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"}],"commitId":"ad0c2edb31a4d0e5c455d1fa0f96658bac1382d5","commitMessage":"@@@Always try reading from EphemeralOwner state first while reading the session ID from a live instance node.\n\nThis is to avoid inconsistent session ID in the node content and the emphemeral owner state.\nNote that in order to ensure backward compatiblity and some test cases.  the newly introduced method will still read from the node content if the ephemeral owner state is empty (-1 or 0).\n\nRB=1704942\nBUG=HELIX-1969\nG=helix-reviewers\nA=jxue\n\nSigned-off-by: Hunter Lee <hulee@linkedin.com>\n","date":"2019-06-25 07:46:15","modifiedFileCount":"33","status":"M","submitter":"Jiajun Wang"}]
