[{"authorTime":"2017-11-03 06:00:24","codes":[{"authorDate":"2017-11-03 06:00:24","commitOrder":1,"curCode":"  public void testMaintenanceModeInstanceDown() throws InterruptedException {\n    _participants[0].syncStop();\n    Thread.sleep(2000);\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      Assert.assertTrue(stateMap.values().contains(\"MASTER\"));\n    }\n  }\n","date":"2018-01-25 10:31:11","endLine":65,"groupId":"4776","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMaintenanceModeInstanceDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/39/49183740d5fd586a4ec4bf218b1acd1d54bb04.src","preCode":"  public void testMaintenanceModeInstanceDown() throws InterruptedException {\n    _participants[0].syncStop();\n    Thread.sleep(2000);\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      Assert.assertTrue(stateMap.values().contains(\"MASTER\"));\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/controller/TestClusterMaintenanceMode.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2017-11-03 06:00:24","commitOrder":1,"curCode":"  public void testMaintenanceModeInstanceBack() throws InterruptedException {\n    _participants[0] =\n        new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, _participants[0].getInstanceName());\n    _participants[0].syncStart();\n    Thread.sleep(2000);\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      if (stateMap.containsKey(_participants[0].getInstanceName())) {\n        Assert.assertTrue(stateMap.get(_participants[0].getInstanceName()).equals(\"SLAVE\"));\n      }\n    }\n  }\n","date":"2018-01-25 10:31:11","endLine":80,"groupId":"4776","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMaintenanceModeInstanceBack","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/39/49183740d5fd586a4ec4bf218b1acd1d54bb04.src","preCode":"  public void testMaintenanceModeInstanceBack() throws InterruptedException {\n    _participants[0] =\n        new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, _participants[0].getInstanceName());\n    _participants[0].syncStart();\n    Thread.sleep(2000);\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      if (stateMap.containsKey(_participants[0].getInstanceName())) {\n        Assert.assertTrue(stateMap.get(_participants[0].getInstanceName()).equals(\"SLAVE\"));\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/controller/TestClusterMaintenanceMode.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"a7477c3bbc85059b2e522f5caa214c33eb4c3e15","commitMessage":"@@@Cluster Maintenance Mode feature support\n\nHelix does not have a state that keep original partitions are active status without doing rebalance partition placement.\nThe only state controller can switch to is paused state. If the controller has been paused.  all the replicas in this cluster will not be active anymore.\nIt is better to have another mode that let current replicas functioning well without new replicas bootstraps when the cluster is full or instance.\nThere are several scenarios that may need such mode that keep original\nassignment of partitions without partition movement. At same time.  no partition will be assigned for newly added resources. This mode is\ncall cluster maintenance mode.\n\nFor more detail.  please refer: https://iwww.corp.linkedin.com/wiki/cf/display/ENGS/Cluster+Maintenance+Mode+Design\n","date":"2018-01-25 10:31:11","modifiedFileCount":"13","status":"B","submitter":"Junkai Xue"},{"authorTime":"2018-06-19 08:33:16","codes":[{"authorDate":"2018-06-19 08:33:16","commitOrder":2,"curCode":"  public void testMaintenanceModeInstanceDown() throws InterruptedException {\n    _participants[0].syncStop();\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      Assert.assertTrue(stateMap.values().contains(\"MASTER\"));\n    }\n  }\n","date":"2018-07-18 06:27:40","endLine":75,"groupId":"4776","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMaintenanceModeInstanceDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/4e/4771bde34bec6eb0e185535438709b31bfbf8d.src","preCode":"  public void testMaintenanceModeInstanceDown() throws InterruptedException {\n    _participants[0].syncStop();\n    Thread.sleep(2000);\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      Assert.assertTrue(stateMap.values().contains(\"MASTER\"));\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/controller/TestClusterMaintenanceMode.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2018-06-19 08:33:16","commitOrder":2,"curCode":"  public void testMaintenanceModeInstanceBack() throws InterruptedException {\n    _participants[0] =\n        new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, _participants[0].getInstanceName());\n    _participants[0].syncStart();\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      if (stateMap.containsKey(_participants[0].getInstanceName())) {\n        Assert.assertTrue(stateMap.get(_participants[0].getInstanceName()).equals(\"SLAVE\"));\n      }\n    }\n  }\n","date":"2018-07-18 06:27:40","endLine":90,"groupId":"4776","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMaintenanceModeInstanceBack","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/4e/4771bde34bec6eb0e185535438709b31bfbf8d.src","preCode":"  public void testMaintenanceModeInstanceBack() throws InterruptedException {\n    _participants[0] =\n        new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, _participants[0].getInstanceName());\n    _participants[0].syncStart();\n    Thread.sleep(2000);\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      if (stateMap.containsKey(_participants[0].getInstanceName())) {\n        Assert.assertTrue(stateMap.get(_participants[0].getInstanceName()).equals(\"SLAVE\"));\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/controller/TestClusterMaintenanceMode.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"8cd7aee6fcc795f2849c55adf89ae320c320d465","commitMessage":"@@@Use polling verifier instead of hard-coded sleep in tests to reduce test time.\n","date":"2018-07-18 06:27:40","modifiedFileCount":"12","status":"M","submitter":"Lei Xia"},{"authorTime":"2019-05-04 08:52:17","codes":[{"authorDate":"2019-05-04 08:52:17","commitOrder":3,"curCode":"  public void testMaintenanceModeInstanceDown() {\n    _participants[0].syncStop();\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      Assert.assertTrue(stateMap.values().contains(\"MASTER\"));\n    }\n  }\n","date":"2019-05-25 09:19:21","endLine":124,"groupId":"10631","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMaintenanceModeInstanceDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/c8/b5004a6398f2b8f785c2f38ef11060052709c1.src","preCode":"  public void testMaintenanceModeInstanceDown() throws InterruptedException {\n    _participants[0].syncStop();\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      Assert.assertTrue(stateMap.values().contains(\"MASTER\"));\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/controller/TestClusterMaintenanceMode.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2019-05-04 08:52:17","commitOrder":3,"curCode":"  public void testMaintenanceModeInstanceBack() {\n    _participants[0] =\n        new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, _participants[0].getInstanceName());\n    _participants[0].syncStart();\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      if (stateMap.containsKey(_participants[0].getInstanceName())) {\n        Assert.assertEquals(stateMap.get(_participants[0].getInstanceName()), \"SLAVE\");\n      }\n    }\n  }\n","date":"2019-05-25 09:19:21","endLine":139,"groupId":"10631","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMaintenanceModeInstanceBack","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/c8/b5004a6398f2b8f785c2f38ef11060052709c1.src","preCode":"  public void testMaintenanceModeInstanceBack() throws InterruptedException {\n    _participants[0] =\n        new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, _participants[0].getInstanceName());\n    _participants[0].syncStart();\n    Assert.assertTrue(_clusterVerifier.verifyByPolling());\n    ExternalView externalView = _gSetupTool.getClusterManagementTool()\n        .getResourceExternalView(CLUSTER_NAME, WorkflowGenerator.DEFAULT_TGT_DB);\n    for (Map<String, String> stateMap : externalView.getRecord().getMapFields().values()) {\n      if (stateMap.containsKey(_participants[0].getInstanceName())) {\n        Assert.assertTrue(stateMap.get(_participants[0].getInstanceName()).equals(\"SLAVE\"));\n      }\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/controller/TestClusterMaintenanceMode.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"5ce3934c5b4655e90021061720adbb3a42b1bb6b","commitMessage":"@@@TEST: Groom and refactor Helix integration tests\n\nIt was observed that there was a lot of technical debt (improper and buggy cleanup) in Helix's unit and integration tests. There were also mock controller and participant threads that were never shut down properly. This was preventing mvn test suite from completing over a remote machine (TMC).  and even on local environments.  mvn test was not passing. This diff refactors tests and makes sure that ZK is cleaned up after tests.\n\nChangelist:\n1. Inspect and correct mock threads (controller.  participant.  spectator.  etc)\n2. Ensure there are no leftover garbage clusters from tests\n3. Java 8 syntax\n4. Style fixes in old tests using Helix open source style file (helix-style.xml)\n\nRB=1654905\nG=helix-reviewers\nA=jxue. eblumena\n\nSigned-off-by: Hunter Lee <hulee@linkedin.com>\n","date":"2019-05-25 09:19:21","modifiedFileCount":"122","status":"M","submitter":"Hunter Lee"}]
