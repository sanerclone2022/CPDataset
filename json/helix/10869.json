[{"authorTime":"2014-11-26 02:59:30","codes":[{"authorDate":"2014-11-26 02:59:30","commitOrder":2,"curCode":"  public Map<String, String> getPendingStateMap(String resourceName, Partition partition) {\n    if (_pendingStateMap.containsKey(resourceName)) {\n      Map<Partition, Map<String, Message>> map = _pendingStateMap.get(resourceName);\n      if (map.containsKey(partition)) {\n        Map<String, Message> pendingMsgMap = map.get(partition);\n        Map<String, String> pendingStateMap = new HashMap<String, String>();\n        for (String instance : pendingMsgMap.keySet()) {\n          pendingStateMap.put(instance, pendingMsgMap.get(instance).getToState());\n        }\n        return pendingStateMap;\n      }\n    }\n    return Collections.emptyMap();\n  }\n","date":"2014-11-26 02:59:30","endLine":227,"groupId":"6927","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPendingStateMap","params":"(StringresourceName@Partitionpartition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/56/331408a88aa27d75ef43510669b8a342463a77.src","preCode":"  public Map<String, String> getPendingStateMap(String resourceName, Partition partition) {\n    if (_pendingStateMap.containsKey(resourceName)) {\n      Map<Partition, Map<String, Message>> map = _pendingStateMap.get(resourceName);\n      if (map.containsKey(partition)) {\n        Map<String, Message> pendingMsgMap = map.get(partition);\n        Map<String, String> pendingStateMap = new HashMap<String, String>();\n        for (String instance : pendingMsgMap.keySet()) {\n          pendingStateMap.put(instance, pendingMsgMap.get(instance).getToState());\n        }\n        return pendingStateMap;\n      }\n    }\n    return Collections.emptyMap();\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateOutput.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"MB"},{"authorDate":"2014-11-26 02:59:30","commitOrder":2,"curCode":"  public Map<String, Message> getPendingMessageMap(String resourceName, Partition partition) {\n    if (_pendingStateMap.containsKey(resourceName)) {\n      Map<Partition, Map<String, Message>> map = _pendingStateMap.get(resourceName);\n      if (map.containsKey(partition)) {\n        return map.get(partition);\n      }\n    }\n    return Collections.emptyMap();\n  }\n","date":"2014-11-26 02:59:30","endLine":243,"groupId":"6927","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPendingMessageMap","params":"(StringresourceName@Partitionpartition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/56/331408a88aa27d75ef43510669b8a342463a77.src","preCode":"  public Map<String, Message> getPendingMessageMap(String resourceName, Partition partition) {\n    if (_pendingStateMap.containsKey(resourceName)) {\n      Map<Partition, Map<String, Message>> map = _pendingStateMap.get(resourceName);\n      if (map.containsKey(partition)) {\n        return map.get(partition);\n      }\n    }\n    return Collections.emptyMap();\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateOutput.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"B"}],"commitId":"5378afab5646a6451665c1d8d3edb699daea5c64","commitMessage":"@@@[HELIX-541] Fix possible livelock in Helix controller.  rb=28413\n","date":"2014-11-26 02:59:30","modifiedFileCount":"11","status":"M","submitter":"zzhang"},{"authorTime":"2018-04-25 09:18:40","codes":[{"authorDate":"2018-04-25 09:18:40","commitOrder":3,"curCode":"  public Map<String, String> getPendingStateMap(String resourceName, Partition partition) {\n    if (_pendingMessageMap.containsKey(resourceName)) {\n      Map<Partition, Map<String, Message>> map = _pendingMessageMap.get(resourceName);\n      if (map.containsKey(partition)) {\n        Map<String, Message> pendingMsgMap = map.get(partition);\n        Map<String, String> pendingStateMap = new HashMap<String, String>();\n        for (String instance : pendingMsgMap.keySet()) {\n          pendingStateMap.put(instance, pendingMsgMap.get(instance).getToState());\n        }\n        return pendingStateMap;\n      }\n    }\n    return Collections.emptyMap();\n  }\n","date":"2018-09-18 06:08:28","endLine":322,"groupId":"10869","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getPendingStateMap","params":"(StringresourceName@Partitionpartition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b6/34703914cf8dfe0a724448bb84d9707f10bf0d.src","preCode":"  public Map<String, String> getPendingStateMap(String resourceName, Partition partition) {\n    if (_pendingStateMap.containsKey(resourceName)) {\n      Map<Partition, Map<String, Message>> map = _pendingStateMap.get(resourceName);\n      if (map.containsKey(partition)) {\n        Map<String, Message> pendingMsgMap = map.get(partition);\n        Map<String, String> pendingStateMap = new HashMap<String, String>();\n        for (String instance : pendingMsgMap.keySet()) {\n          pendingStateMap.put(instance, pendingMsgMap.get(instance).getToState());\n        }\n        return pendingStateMap;\n      }\n    }\n    return Collections.emptyMap();\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateOutput.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"M"},{"authorDate":"2018-04-25 09:18:40","commitOrder":3,"curCode":"  public Map<String, Message> getPendingMessageMap(String resourceName, Partition partition) {\n    if (_pendingMessageMap.containsKey(resourceName)) {\n      Map<Partition, Map<String, Message>> map = _pendingMessageMap.get(resourceName);\n      if (map.containsKey(partition)) {\n        return map.get(partition);\n      }\n    }\n    return Collections.emptyMap();\n  }\n","date":"2018-09-18 06:08:28","endLine":338,"groupId":"10869","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPendingMessageMap","params":"(StringresourceName@Partitionpartition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/b6/34703914cf8dfe0a724448bb84d9707f10bf0d.src","preCode":"  public Map<String, Message> getPendingMessageMap(String resourceName, Partition partition) {\n    if (_pendingStateMap.containsKey(resourceName)) {\n      Map<Partition, Map<String, Message>> map = _pendingStateMap.get(resourceName);\n      if (map.containsKey(partition)) {\n        return map.get(partition);\n      }\n    }\n    return Collections.emptyMap();\n  }\n","realPath":"helix-core/src/main/java/org/apache/helix/controller/stages/CurrentStateOutput.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"M"}],"commitId":"880f885121afecab4e186282fbf94a146a2cf04a","commitMessage":"@@@Fix P2P message logic in controller to avoid sending duplicated messages to participants.\n","date":"2018-09-18 06:08:28","modifiedFileCount":"21","status":"M","submitter":"Lei Xia"}]
