[{"authorTime":"2020-09-25 02:06:37","codes":[{"authorDate":"2020-07-04 15:59:19","commitOrder":3,"curCode":"  public void beforeClass() throws Exception {\n    _numPartitions = 1;\n    _numNodes = 3;\n    super.beforeClass();\n\n    \r\n    for (int i = 0; i < _numNodes; i++) {\n      super.stopParticipant(i);\n      Assert.assertFalse(_participants[i].isConnected());\n    }\n\n    \r\n    _participants = new MockParticipantManager[_numNodes];\n    for (int i = 0; i < _numNodes; i++) {\n      Map<String, TaskFactory> taskFactoryReg = new HashMap<>();\n      taskFactoryReg.put(NewMockTask.TASK_COMMAND, NewMockTask::new);\n      String instanceName = PARTICIPANT_PREFIX + \"_\" + (_startPort + i);\n      _participants[i] = new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, instanceName);\n\n      \r\n      StateMachineEngine stateMachine = _participants[i].getStateMachineEngine();\n      stateMachine.registerStateModelFactory(\"Task\",\n          new TaskStateModelFactory(_participants[i], taskFactoryReg));\n      _participants[i].syncStart();\n    }\n  }\n","date":"2020-07-04 15:59:19","endLine":99,"groupId":"2622","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/a4/0ce4577ef156114a6265f725917fd7c1272454.src","preCode":"  public void beforeClass() throws Exception {\n    _numPartitions = 1;\n    _numNodes = 3;\n    super.beforeClass();\n\n    \r\n    for (int i = 0; i < _numNodes; i++) {\n      super.stopParticipant(i);\n      Assert.assertFalse(_participants[i].isConnected());\n    }\n\n    \r\n    _participants = new MockParticipantManager[_numNodes];\n    for (int i = 0; i < _numNodes; i++) {\n      Map<String, TaskFactory> taskFactoryReg = new HashMap<>();\n      taskFactoryReg.put(NewMockTask.TASK_COMMAND, NewMockTask::new);\n      String instanceName = PARTICIPANT_PREFIX + \"_\" + (_startPort + i);\n      _participants[i] = new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, instanceName);\n\n      \r\n      StateMachineEngine stateMachine = _participants[i].getStateMachineEngine();\n      stateMachine.registerStateModelFactory(\"Task\",\n          new TaskStateModelFactory(_participants[i], taskFactoryReg));\n      _participants[i].syncStart();\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"NB"},{"authorDate":"2020-09-25 02:06:37","commitOrder":3,"curCode":"  public void beforeClass() throws Exception {\n    _numNodes = 3;\n    super.beforeClass();\n\n    \r\n    for (int i = 0; i < _numNodes; i++) {\n      super.stopParticipant(i);\n      Assert.assertFalse(_participants[i].isConnected());\n    }\n    _participants = new MockParticipantManager[_numNodes];\n    startParticipant(2);\n  }\n","date":"2020-09-25 02:06:37","endLine":59,"groupId":"2622","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/c2/9cc45eaa4eb15103924494263048c4ebb88622.src","preCode":"  public void beforeClass() throws Exception {\n    _numNodes = 3;\n    super.beforeClass();\n\n    \r\n    for (int i = 0; i < _numNodes; i++) {\n      super.stopParticipant(i);\n      Assert.assertFalse(_participants[i].isConnected());\n    }\n    _participants = new MockParticipantManager[_numNodes];\n    startParticipant(2);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestDropCurrentStateRunningTask.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"}],"commitId":"66128586bbe1aceb98c6b43859b942bd421c43bb","commitMessage":"@@@Drop currentState if REQUESTED_STATE is equal to DROPPED (#1385)\n\nThis commit makes sure that paMap will not be overwritten by something else\nother than DROPPED in AbstractTaskDispatcher for tasks with DROPPED\nREQUESTED_STATE.","date":"2020-09-25 02:06:37","modifiedFileCount":"1","status":"M","submitter":"Ali Reza Zamani Zadeh Najari"},{"authorTime":"2020-10-07 04:23:10","codes":[{"authorDate":"2020-07-04 15:59:19","commitOrder":4,"curCode":"  public void beforeClass() throws Exception {\n    _numPartitions = 1;\n    _numNodes = 3;\n    super.beforeClass();\n\n    \r\n    for (int i = 0; i < _numNodes; i++) {\n      super.stopParticipant(i);\n      Assert.assertFalse(_participants[i].isConnected());\n    }\n\n    \r\n    _participants = new MockParticipantManager[_numNodes];\n    for (int i = 0; i < _numNodes; i++) {\n      Map<String, TaskFactory> taskFactoryReg = new HashMap<>();\n      taskFactoryReg.put(NewMockTask.TASK_COMMAND, NewMockTask::new);\n      String instanceName = PARTICIPANT_PREFIX + \"_\" + (_startPort + i);\n      _participants[i] = new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, instanceName);\n\n      \r\n      StateMachineEngine stateMachine = _participants[i].getStateMachineEngine();\n      stateMachine.registerStateModelFactory(\"Task\",\n          new TaskStateModelFactory(_participants[i], taskFactoryReg));\n      _participants[i].syncStart();\n    }\n  }\n","date":"2020-07-04 15:59:19","endLine":99,"groupId":"10473","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/a4/0ce4577ef156114a6265f725917fd7c1272454.src","preCode":"  public void beforeClass() throws Exception {\n    _numPartitions = 1;\n    _numNodes = 3;\n    super.beforeClass();\n\n    \r\n    for (int i = 0; i < _numNodes; i++) {\n      super.stopParticipant(i);\n      Assert.assertFalse(_participants[i].isConnected());\n    }\n\n    \r\n    _participants = new MockParticipantManager[_numNodes];\n    for (int i = 0; i < _numNodes; i++) {\n      Map<String, TaskFactory> taskFactoryReg = new HashMap<>();\n      taskFactoryReg.put(NewMockTask.TASK_COMMAND, NewMockTask::new);\n      String instanceName = PARTICIPANT_PREFIX + \"_\" + (_startPort + i);\n      _participants[i] = new MockParticipantManager(ZK_ADDR, CLUSTER_NAME, instanceName);\n\n      \r\n      StateMachineEngine stateMachine = _participants[i].getStateMachineEngine();\n      stateMachine.registerStateModelFactory(\"Task\",\n          new TaskStateModelFactory(_participants[i], taskFactoryReg));\n      _participants[i].syncStart();\n    }\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"N"},{"authorDate":"2020-10-07 04:23:10","commitOrder":4,"curCode":"  public void beforeClass() throws Exception {\n    _numNodes = 3;\n    _numPartitions = 1;\n    super.beforeClass();\n\n    \r\n    for (int i = 0; i < _numNodes; i++) {\n      super.stopParticipant(i);\n      Assert.assertFalse(_participants[i].isConnected());\n    }\n    _participants = new MockParticipantManager[_numNodes];\n    startParticipant(2);\n  }\n","date":"2020-10-07 04:23:10","endLine":61,"groupId":"10473","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-helix-10-0.7/blobInfo/CC_OUT/blobs/f3/e3dcfc4caa1e28c67566a6eab88c7dceb532ed.src","preCode":"  public void beforeClass() throws Exception {\n    _numNodes = 3;\n    super.beforeClass();\n\n    \r\n    for (int i = 0; i < _numNodes; i++) {\n      super.stopParticipant(i);\n      Assert.assertFalse(_participants[i].isConnected());\n    }\n    _participants = new MockParticipantManager[_numNodes];\n    startParticipant(2);\n  }\n","realPath":"helix-core/src/test/java/org/apache/helix/integration/task/TestDropCurrentStateRunningTask.java","repoName":"helix","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"563a6c1356ea62905f3318fbd145fc5d19419499","commitMessage":"@@@Fix currentState not being removed when pending message exists (#1422)\n\nThis commit makes sure that the controller drops the current state of\nthe jobs that have just finished and have pending messages.","date":"2020-10-07 04:23:10","modifiedFileCount":"2","status":"M","submitter":"Ali Reza Zamani Zadeh Najari"}]
