[{"authorTime":"2015-05-22 16:44:46","codes":[{"authorDate":"2015-05-22 16:44:46","commitOrder":1,"curCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17), MockSchema.sstable(1, 121), MockSchema.sstable(2, 9));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","date":"2015-05-22 16:44:46","endLine":147,"groupId":"5125","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInitialSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/1e/ef7b0f98cbb8bdee5002dd414a4f98a1edeec7.src","preCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17), MockSchema.sstable(1, 121), MockSchema.sstable(2, 9));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"},{"authorDate":"2015-05-22 16:44:46","commitOrder":1,"curCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        Tracker tracker = new Tracker(MockSchema.cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17), MockSchema.sstable(1, 121), MockSchema.sstable(2, 9));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, MockSchema.cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","date":"2015-05-22 16:44:46","endLine":170,"groupId":"5125","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/1e/ef7b0f98cbb8bdee5002dd414a4f98a1edeec7.src","preCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        Tracker tracker = new Tracker(MockSchema.cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17), MockSchema.sstable(1, 121), MockSchema.sstable(2, 9));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, MockSchema.cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"B"}],"commitId":"d96a02a12e20bc2e0b096904ebe7a1d68532d2f3","commitMessage":"@@@Merge branch 'cassandra-2.2' into trunk\n","date":"2015-05-22 16:44:46","modifiedFileCount":"48","status":"B","submitter":"Benedict Elliott Smith"},{"authorTime":"2015-06-01 23:44:28","codes":[{"authorDate":"2015-05-22 16:44:46","commitOrder":2,"curCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17), MockSchema.sstable(1, 121), MockSchema.sstable(2, 9));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","date":"2015-05-22 16:44:46","endLine":147,"groupId":"5125","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInitialSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/1e/ef7b0f98cbb8bdee5002dd414a4f98a1edeec7.src","preCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17), MockSchema.sstable(1, 121), MockSchema.sstable(2, 9));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"N"},{"authorDate":"2015-06-01 23:44:28","commitOrder":2,"curCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17), MockSchema.sstable(1, 121), MockSchema.sstable(2, 9));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","date":"2015-06-01 23:44:28","endLine":179,"groupId":"5125","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/18/59e70d49e1f15b9421fcf0c5fe8f778b3fe656.src","preCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        Tracker tracker = new Tracker(MockSchema.cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17), MockSchema.sstable(1, 121), MockSchema.sstable(2, 9));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, MockSchema.cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"}],"commitId":"f1d175fba16b24ecdea125c6a4b3d077b681c0db","commitMessage":"@@@Merge branch 'cassandra-2.2' into trunk\n","date":"2015-06-01 23:44:28","modifiedFileCount":"3","status":"M","submitter":"Benedict Elliott Smith"},{"authorTime":"2015-06-03 20:07:46","codes":[{"authorDate":"2015-06-03 20:07:46","commitOrder":3,"curCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","date":"2015-06-03 20:07:46","endLine":158,"groupId":"5125","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInitialSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/0d/46153177e9205cab0a4e886293a7a396aa7ffb.src","preCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17), MockSchema.sstable(1, 121), MockSchema.sstable(2, 9));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"},{"authorDate":"2015-06-03 20:07:46","commitOrder":3,"curCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","date":"2015-06-03 20:07:46","endLine":184,"groupId":"5125","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/0d/46153177e9205cab0a4e886293a7a396aa7ffb.src","preCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17), MockSchema.sstable(1, 121), MockSchema.sstable(2, 9));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"6caade065c690d7f4cf0333a8c3efa8e09ef0ff0","commitMessage":"@@@Merge branch 'cassandra-2.2' into trunk\n","date":"2015-06-03 20:07:46","modifiedFileCount":"5","status":"M","submitter":"Benedict Elliott Smith"},{"authorTime":"2015-07-03 02:16:29","codes":[{"authorDate":"2015-07-03 02:16:29","commitOrder":4,"curCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","date":"2015-07-03 02:16:29","endLine":156,"groupId":"5125","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInitialSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/db/d5287ee0c675d34d8970707895d8670ca495fc.src","preCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2015-07-03 02:16:29","commitOrder":4,"curCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","date":"2015-07-03 02:16:29","endLine":179,"groupId":"5125","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/db/d5287ee0c675d34d8970707895d8670ca495fc.src","preCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isDeleteNotificationSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"72bb4c0c9fc3aa35e994bcb561898e82d5cf5d36","commitMessage":"@@@Merge branch 'cassandra-2.2' into trunk\n\nConflicts:\n\tCHANGES.txt\n\tsrc/java/org/apache/cassandra/streaming/StreamSession.java\n","date":"2015-07-03 02:16:29","modifiedFileCount":"12","status":"M","submitter":"Benedict Elliott Smith"},{"authorTime":"2015-04-27 14:38:53","codes":[{"authorDate":"2015-04-27 14:38:53","commitOrder":5,"curCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","date":"2015-07-24 21:41:51","endLine":158,"groupId":"5125","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInitialSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/89/924a552aaf6d55ca477fdac2cd1d57ed9c840e.src","preCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"},{"authorDate":"2015-04-27 14:38:53","commitOrder":5,"curCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","date":"2015-07-24 21:41:51","endLine":184,"groupId":"5125","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/89/924a552aaf6d55ca477fdac2cd1d57ed9c840e.src","preCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"b09e60f72bb2f37235d9e9190c25db36371b3c18","commitMessage":"@@@Introduce safer durable sstable membership management\n(and simplify cleanup of compaction leftovers)\n\nInstead of using temporary files and system tables. \nthis patch introduces a simple transaction log for sstable\nmembership edits that can be committed/aborted atomically\nand simply replayed on startup.\n\npatch by stefania; reviewed by benedict for CASSANDRA-7066\n","date":"2015-07-24 21:41:51","modifiedFileCount":"75","status":"M","submitter":"Stefania Alborghetti"},{"authorTime":"2015-08-21 02:50:20","codes":[{"authorDate":"2015-04-27 14:38:53","commitOrder":6,"curCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","date":"2015-07-24 21:41:51","endLine":158,"groupId":"5125","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInitialSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/89/924a552aaf6d55ca477fdac2cd1d57ed9c840e.src","preCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"N"},{"authorDate":"2015-08-21 02:50:20","commitOrder":6,"curCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(1, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","date":"2015-08-21 02:50:20","endLine":185,"groupId":"5125","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/9b/cd9e734fb43b6dcb9356069df0689837cd51dd.src","preCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(3, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"0fd857baf462b4e8c47366f345ba938ce6574657","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2015-08-21 02:50:20","modifiedFileCount":"49","status":"M","submitter":"Marcus Eriksson"},{"authorTime":"2016-12-14 08:27:05","codes":[{"authorDate":"2016-12-14 08:27:05","commitOrder":7,"curCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = cfs.getTracker();\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","date":"2016-12-14 08:27:05","endLine":161,"groupId":"5125","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInitialSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/65/c7d0ed23d4c52c26317cc19ea2fcddd92dd49e.src","preCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2016-12-14 08:27:05","commitOrder":7,"curCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = cfs.getTracker();\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(1, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","date":"2016-12-14 08:27:05","endLine":187,"groupId":"5125","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/65/c7d0ed23d4c52c26317cc19ea2fcddd92dd49e.src","preCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = new Tracker(cfs, false);\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(1, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"402f8e00606a54dcac46c60463358501a6a2e686","commitMessage":"@@@Merge branch 'cassandra-3.X' into trunk\n","date":"2016-12-14 08:27:05","modifiedFileCount":"9","status":"M","submitter":"Yuki Morishita"},{"authorTime":"2019-05-15 21:55:31","codes":[{"authorDate":"2019-05-15 21:55:31","commitOrder":8,"curCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(metadata -> metadata.caching(CachingParams.CACHE_KEYS));\n        Tracker tracker = cfs.getTracker();\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheEnabled());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","date":"2019-05-15 21:55:31","endLine":163,"groupId":"5125","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddInitialSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/52/2e59aa34dc689116082a97a7f2685d8a955414.src","preCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = cfs.getTracker();\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2019-05-15 21:55:31","commitOrder":8,"curCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS(metadata -> metadata.caching(CachingParams.CACHE_KEYS));\n        Tracker tracker = cfs.getTracker();\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheEnabled());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(1, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","date":"2019-05-15 21:55:31","endLine":189,"groupId":"5125","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/52/2e59aa34dc689116082a97a7f2685d8a955414.src","preCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS();\n        Tracker tracker = cfs.getTracker();\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheSetup());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(1, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"}],"commitId":"7df67eff2d66dba4bed2b4f6aeabf05144d9b057","commitMessage":"@@@Reduce heap pressure during compactions\nPatch by Chris Lohfink; Reviewed by Dinesh Joshi and Benedict for CASSANDRA-14654\n","date":"2019-05-15 21:55:31","modifiedFileCount":"16","status":"M","submitter":"Chris Lohfink"},{"authorTime":"2021-03-11 09:54:07","codes":[{"authorDate":"2021-03-11 09:54:07","commitOrder":9,"curCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(metadata -> metadata.caching(CachingParams.CACHE_KEYS));\n        Tracker tracker = cfs.getTracker();\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n        Assert.assertEquals(1, listener.senders.size());\n        Assert.assertEquals(1, listener.received.size());\n        Assert.assertTrue(listener.received.get(0) instanceof InitialSSTableAddedNotification);\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheEnabled());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","date":"2021-03-11 09:55:06","endLine":169,"groupId":"10633","id":17,"instanceNumber":1,"isCurCommit":1,"methodName":"testAddInitialSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/43/90b20781953b27509a134c83dbd6eb6eaa0767.src","preCode":"    public void testAddInitialSSTables()\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(metadata -> metadata.caching(CachingParams.CACHE_KEYS));\n        Tracker tracker = cfs.getTracker();\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addInitialSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheEnabled());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2021-03-11 09:54:07","commitOrder":9,"curCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS(metadata -> metadata.caching(CachingParams.CACHE_KEYS));\n        Tracker tracker = cfs.getTracker();\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheEnabled());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(1, listener.senders.size());\n        Assert.assertEquals(1, listener.received.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","date":"2021-03-11 09:55:06","endLine":196,"groupId":"10633","id":18,"instanceNumber":2,"isCurCommit":1,"methodName":"testAddSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/43/90b20781953b27509a134c83dbd6eb6eaa0767.src","preCode":"    public void testAddSSTables()\n    {\n        boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled();\n        DatabaseDescriptor.setIncrementalBackupsEnabled(false);\n        ColumnFamilyStore cfs = MockSchema.newCFS(metadata -> metadata.caching(CachingParams.CACHE_KEYS));\n        Tracker tracker = cfs.getTracker();\n        MockListener listener = new MockListener(false);\n        tracker.subscribe(listener);\n        List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs),\n                                                       MockSchema.sstable(1, 121, cfs),\n                                                       MockSchema.sstable(2, 9, cfs));\n        tracker.addSSTables(copyOf(readers));\n\n        Assert.assertEquals(3, tracker.view.get().sstables.size());\n\n        for (SSTableReader reader : readers)\n            Assert.assertTrue(reader.isKeyCacheEnabled());\n\n        Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount());\n        Assert.assertEquals(1, listener.senders.size());\n        Assert.assertEquals(tracker, listener.senders.get(0));\n        Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);\n        DatabaseDescriptor.setIncrementalBackupsEnabled(backups);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"c7432e98a381c16cb63692e727c35e2909d7200a","commitMessage":"@@@Merge branch 'cassandra-3.11' into trunk\n","date":"2021-03-11 09:55:06","modifiedFileCount":"17","status":"M","submitter":"Ekaterina Dimitrova"}]
