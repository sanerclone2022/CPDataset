[{"authorTime":"2018-05-10 01:57:30","codes":[{"authorDate":"2018-05-10 01:57:30","commitOrder":1,"curCode":"    public void setRepairedDataTrackingFlagIfHeaderPresent()\n    {\n        ReadCommand command = command(key());\n        assertFalse(command.isTrackingRepairedStatus());\n        Map<ParameterType, Object> params = ImmutableMap.of(ParameterType.TRACK_REPAIRED_DATA,\n                                                            MessagingService.ONE_BYTE);\n        handler.doVerb(MessageIn.create(peer(),\n                                        command,\n                                        params,\n                                        MessagingService.Verb.READ,\n                                        MessagingService.current_version),\n                       messageId());\n        assertTrue(command.isTrackingRepairedStatus());\n    }\n","date":"2018-09-06 02:07:12","endLine":102,"groupId":"16312","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setRepairedDataTrackingFlagIfHeaderPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/0c/43661ea4693ae737b0c367bcd7bc7105c76961.src","preCode":"    public void setRepairedDataTrackingFlagIfHeaderPresent()\n    {\n        ReadCommand command = command(key());\n        assertFalse(command.isTrackingRepairedStatus());\n        Map<ParameterType, Object> params = ImmutableMap.of(ParameterType.TRACK_REPAIRED_DATA,\n                                                            MessagingService.ONE_BYTE);\n        handler.doVerb(MessageIn.create(peer(),\n                                        command,\n                                        params,\n                                        MessagingService.Verb.READ,\n                                        MessagingService.current_version),\n                       messageId());\n        assertTrue(command.isTrackingRepairedStatus());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandVerbHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"},{"authorDate":"2018-05-10 01:57:30","commitOrder":1,"curCode":"    public void dontSetRepairedDataTrackingFlagIfHeadersEmpty()\n    {\n        ReadCommand command = command(key());\n        assertFalse(command.isTrackingRepairedStatus());\n        handler.doVerb(MessageIn.create(peer(),\n                                        command,\n                                        ImmutableMap.of(),\n                                        MessagingService.Verb.READ,\n                                        MessagingService.current_version),\n                       messageId());\n        assertFalse(command.isTrackingRepairedStatus());\n    }\n","date":"2018-09-06 02:07:12","endLine":132,"groupId":"16316","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"dontSetRepairedDataTrackingFlagIfHeadersEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/0c/43661ea4693ae737b0c367bcd7bc7105c76961.src","preCode":"    public void dontSetRepairedDataTrackingFlagIfHeadersEmpty()\n    {\n        ReadCommand command = command(key());\n        assertFalse(command.isTrackingRepairedStatus());\n        handler.doVerb(MessageIn.create(peer(),\n                                        command,\n                                        ImmutableMap.of(),\n                                        MessagingService.Verb.READ,\n                                        MessagingService.current_version),\n                       messageId());\n        assertFalse(command.isTrackingRepairedStatus());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandVerbHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"}],"commitId":"5fbb938adaafd91e7bea1672f09a03c7ac5b9b9d","commitMessage":"@@@Detect inconsistencies in repaired data on the read path\n\nPatch by Sam Tunnicliffe; reviewed by Marcus Eriksson and Jordan West for CASSANDRA-14145\n","date":"2018-09-06 02:07:12","modifiedFileCount":"24","status":"B","submitter":"Sam Tunnicliffe"},{"authorTime":"2018-09-07 17:02:55","codes":[{"authorDate":"2018-09-07 17:02:55","commitOrder":2,"curCode":"    public void setRepairedDataTrackingFlagIfHeaderPresent()\n    {\n        SinglePartitionReadCommand command = command(metadata);\n        assertFalse(command.isTrackingRepairedStatus());\n        Map<ParameterType, Object> params = ImmutableMap.of(ParameterType.TRACK_REPAIRED_DATA,\n                                                            MessagingService.ONE_BYTE);\n        handler.doVerb(MessageIn.create(peer(),\n                                        command,\n                                        params,\n                                        MessagingService.Verb.READ,\n                                        MessagingService.current_version),\n                       messageId());\n        assertTrue(command.isTrackingRepairedStatus());\n    }\n","date":"2018-09-12 23:02:02","endLine":118,"groupId":"16312","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setRepairedDataTrackingFlagIfHeaderPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b7/e053b1db220bc302a12846639c3f5cd19882af.src","preCode":"    public void setRepairedDataTrackingFlagIfHeaderPresent()\n    {\n        ReadCommand command = command(key());\n        assertFalse(command.isTrackingRepairedStatus());\n        Map<ParameterType, Object> params = ImmutableMap.of(ParameterType.TRACK_REPAIRED_DATA,\n                                                            MessagingService.ONE_BYTE);\n        handler.doVerb(MessageIn.create(peer(),\n                                        command,\n                                        params,\n                                        MessagingService.Verb.READ,\n                                        MessagingService.current_version),\n                       messageId());\n        assertTrue(command.isTrackingRepairedStatus());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandVerbHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2018-09-07 17:02:55","commitOrder":2,"curCode":"    public void dontSetRepairedDataTrackingFlagIfHeadersEmpty()\n    {\n        SinglePartitionReadCommand command = command(metadata);\n        assertFalse(command.isTrackingRepairedStatus());\n        handler.doVerb(MessageIn.create(peer(),\n                                        command,\n                                        ImmutableMap.of(),\n                                        MessagingService.Verb.READ,\n                                        MessagingService.current_version),\n                       messageId());\n        assertFalse(command.isTrackingRepairedStatus());\n    }\n","date":"2018-09-12 23:02:02","endLine":148,"groupId":"16316","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"dontSetRepairedDataTrackingFlagIfHeadersEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b7/e053b1db220bc302a12846639c3f5cd19882af.src","preCode":"    public void dontSetRepairedDataTrackingFlagIfHeadersEmpty()\n    {\n        ReadCommand command = command(key());\n        assertFalse(command.isTrackingRepairedStatus());\n        handler.doVerb(MessageIn.create(peer(),\n                                        command,\n                                        ImmutableMap.of(),\n                                        MessagingService.Verb.READ,\n                                        MessagingService.current_version),\n                       messageId());\n        assertFalse(command.isTrackingRepairedStatus());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandVerbHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"}],"commitId":"2046c30adec194fb07bc5dd1c31fc19a64e7895c","commitMessage":"@@@Fail query on transient replica if coordinator only expects full data\n\nPatch by Alex Petrov; reviewed by Benedict Elliott Smith for CASSANDRA-14704\n","date":"2018-09-12 23:02:02","modifiedFileCount":"6","status":"M","submitter":"Alex Petrov"},{"authorTime":"2019-06-12 23:26:54","codes":[{"authorDate":"2019-06-12 23:26:54","commitOrder":3,"curCode":"    public void setRepairedDataTrackingFlagIfHeaderPresent()\n    {\n        ReadCommand command = command(metadata);\n        assertFalse(command.isTrackingRepairedStatus());\n\n        handler.doVerb(Message.builder(READ_REQ, command)\n                              .from(peer())\n                              .withFlag(MessageFlag.TRACK_REPAIRED_DATA)\n                              .withId(messageId())\n                              .build());\n        assertTrue(command.isTrackingRepairedStatus());\n    }\n","date":"2019-06-12 23:26:54","endLine":103,"groupId":"10411","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setRepairedDataTrackingFlagIfHeaderPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/86/82273904276a9b94caf0ba68374ae4618d7b36.src","preCode":"    public void setRepairedDataTrackingFlagIfHeaderPresent()\n    {\n        SinglePartitionReadCommand command = command(metadata);\n        assertFalse(command.isTrackingRepairedStatus());\n        Map<ParameterType, Object> params = ImmutableMap.of(ParameterType.TRACK_REPAIRED_DATA,\n                                                            MessagingService.ONE_BYTE);\n        handler.doVerb(MessageIn.create(peer(),\n                                        command,\n                                        params,\n                                        MessagingService.Verb.READ,\n                                        MessagingService.current_version),\n                       messageId());\n        assertTrue(command.isTrackingRepairedStatus());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandVerbHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2019-06-12 23:26:54","commitOrder":3,"curCode":"    public void dontSetRepairedDataTrackingFlagIfHeadersEmpty()\n    {\n        ReadCommand command = command(metadata);\n        assertFalse(command.isTrackingRepairedStatus());\n        handler.doVerb(Message.builder(READ_REQ, command)\n                              .withId(messageId())\n                              .from(peer())\n                              .build());\n        assertFalse(command.isTrackingRepairedStatus());\n    }\n","date":"2019-06-12 23:26:54","endLine":128,"groupId":"10415","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"dontSetRepairedDataTrackingFlagIfHeadersEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/86/82273904276a9b94caf0ba68374ae4618d7b36.src","preCode":"    public void dontSetRepairedDataTrackingFlagIfHeadersEmpty()\n    {\n        SinglePartitionReadCommand command = command(metadata);\n        assertFalse(command.isTrackingRepairedStatus());\n        handler.doVerb(MessageIn.create(peer(),\n                                        command,\n                                        ImmutableMap.of(),\n                                        MessagingService.Verb.READ,\n                                        MessagingService.current_version),\n                       messageId());\n        assertFalse(command.isTrackingRepairedStatus());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandVerbHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"310a48efcfdc0fb77fbd5fd6e734bf17667f617d","commitMessage":"@@@Rewrite the internode messaging subsystem\n\npatch by Aleksey Yeschenko and Benedict Elliott Smith; reviewed by Alex\nPetrov.  Aleksey Yeschenko.  and Benedict Elliott Smith for CASSANDRA-15066\n\nCo-authored-by: Aleksey Yeschenko <aleksey@apache.org>\nCo-authored-by: Benedict Elliott Smith <benedict@apache.org>\n","date":"2019-06-12 23:26:54","modifiedFileCount":"253","status":"M","submitter":"Benedict Elliott Smith"},{"authorTime":"2021-08-28 00:54:28","codes":[{"authorDate":"2021-08-28 00:54:28","commitOrder":4,"curCode":"    public void setRepairedDataTrackingFlagIfHeaderPresent()\n    {\n        TrackingSinglePartitionReadCommand command = new TrackingSinglePartitionReadCommand(metadata);\n        assertFalse(command.isTrackingRepairedData());\n        handler.doVerb(Message.builder(READ_REQ, (ReadCommand) command)\n                              .from(peer())\n                              .withFlag(MessageFlag.TRACK_REPAIRED_DATA)\n                              .withId(messageId())\n                              .build());\n        assertTrue(command.isTrackingRepairedData());\n    }\n","date":"2021-08-28 01:00:04","endLine":103,"groupId":"10938","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"setRepairedDataTrackingFlagIfHeaderPresent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5c/daa58c476ad6ac970ffa367ba2db779f59929c.src","preCode":"    public void setRepairedDataTrackingFlagIfHeaderPresent()\n    {\n        ReadCommand command = command(metadata);\n        assertFalse(command.isTrackingRepairedStatus());\n\n        handler.doVerb(Message.builder(READ_REQ, command)\n                              .from(peer())\n                              .withFlag(MessageFlag.TRACK_REPAIRED_DATA)\n                              .withId(messageId())\n                              .build());\n        assertTrue(command.isTrackingRepairedStatus());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandVerbHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2021-08-28 00:54:28","commitOrder":4,"curCode":"    public void dontSetRepairedDataTrackingFlagIfHeadersEmpty()\n    {\n        TrackingSinglePartitionReadCommand command = new TrackingSinglePartitionReadCommand(metadata);\n        assertFalse(command.isTrackingRepairedData());\n        handler.doVerb(Message.builder(READ_REQ, (ReadCommand) command)\n                              .withId(messageId())\n                              .from(peer())\n                              .build());\n        assertFalse(command.isTrackingRepairedData());\n    }\n","date":"2021-08-28 01:00:04","endLine":128,"groupId":"10938","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"dontSetRepairedDataTrackingFlagIfHeadersEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5c/daa58c476ad6ac970ffa367ba2db779f59929c.src","preCode":"    public void dontSetRepairedDataTrackingFlagIfHeadersEmpty()\n    {\n        ReadCommand command = command(metadata);\n        assertFalse(command.isTrackingRepairedStatus());\n        handler.doVerb(Message.builder(READ_REQ, command)\n                              .withId(messageId())\n                              .from(peer())\n                              .build());\n        assertFalse(command.isTrackingRepairedStatus());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandVerbHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"33979e3c916b2006e75a042fa4c806364dbbe5c1","commitMessage":"@@@Merge branch 'cassandra-4.0' into trunk\n","date":"2021-08-28 01:00:04","modifiedFileCount":"27","status":"M","submitter":"Caleb Rackliffe"}]
