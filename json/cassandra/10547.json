[{"authorTime":"2018-05-10 01:57:30","codes":[{"authorDate":"2018-05-10 01:57:30","commitOrder":1,"curCode":"        StubReadCommand(int key, TableMetadata metadata,\n                        boolean isDigest,\n                        final ByteBuffer repairedDigest,\n                        final boolean conclusive)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null);\n            this.repairedDigest = repairedDigest;\n            this.conclusive = conclusive;\n        }\n","date":"2018-09-06 02:07:12","endLine":242,"groupId":"29349","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"StubReadCommand","params":"(intkey@TableMetadatametadata@booleanisDigest@finalByteBufferrepairedDigest@finalbooleanconclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/6e/1a804e5fb621b6f685b4f4d8491639405562f6.src","preCode":"        StubReadCommand(int key, TableMetadata metadata,\n                        boolean isDigest,\n                        final ByteBuffer repairedDigest,\n                        final boolean conclusive)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null);\n            this.repairedDigest = repairedDigest;\n            this.conclusive = conclusive;\n        }\n","realPath":"test/unit/org/apache/cassandra/db/ReadResponseTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"B"},{"authorDate":"2018-05-10 01:57:30","commitOrder":1,"curCode":"        StubReadCommand(int key, TableMetadata metadata, boolean isDigest)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null);\n        }\n","date":"2018-09-06 02:07:12","endLine":289,"groupId":"29349","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"StubReadCommand","params":"(intkey@TableMetadatametadata@booleanisDigest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c9/16d13fb681d4ebca05870763079a176219bc10.src","preCode":"        StubReadCommand(int key, TableMetadata metadata, boolean isDigest)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null);\n        }\n","realPath":"test/unit/org/apache/cassandra/service/reads/repair/RepairedDataVerifierTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"B"}],"commitId":"5fbb938adaafd91e7bea1672f09a03c7ac5b9b9d","commitMessage":"@@@Detect inconsistencies in repaired data on the read path\n\nPatch by Sam Tunnicliffe; reviewed by Marcus Eriksson and Jordan West for CASSANDRA-14145\n","date":"2018-09-06 02:07:12","modifiedFileCount":"24","status":"B","submitter":"Sam Tunnicliffe"},{"authorTime":"2020-04-17 01:29:05","codes":[{"authorDate":"2018-05-10 01:57:30","commitOrder":2,"curCode":"        StubReadCommand(int key, TableMetadata metadata,\n                        boolean isDigest,\n                        final ByteBuffer repairedDigest,\n                        final boolean conclusive)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null);\n            this.repairedDigest = repairedDigest;\n            this.conclusive = conclusive;\n        }\n","date":"2018-09-06 02:07:12","endLine":242,"groupId":"29349","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"StubReadCommand","params":"(intkey@TableMetadatametadata@booleanisDigest@finalByteBufferrepairedDigest@finalbooleanconclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/6e/1a804e5fb621b6f685b4f4d8491639405562f6.src","preCode":"        StubReadCommand(int key, TableMetadata metadata,\n                        boolean isDigest,\n                        final ByteBuffer repairedDigest,\n                        final boolean conclusive)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null);\n            this.repairedDigest = repairedDigest;\n            this.conclusive = conclusive;\n        }\n","realPath":"test/unit/org/apache/cassandra/db/ReadResponseTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"N"},{"authorDate":"2020-04-17 01:29:05","commitOrder":2,"curCode":"        StubReadCommand(int key, TableMetadata metadata, boolean isDigest)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  new ClusteringIndexSliceFilter(Slices.ALL, false),\n                  null);\n        }\n","date":"2020-04-17 01:29:52","endLine":291,"groupId":"29349","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"StubReadCommand","params":"(intkey@TableMetadatametadata@booleanisDigest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/16/9e09d67802995372ab9d0f4f53242f10e4d80a.src","preCode":"        StubReadCommand(int key, TableMetadata metadata, boolean isDigest)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null);\n        }\n","realPath":"test/unit/org/apache/cassandra/service/reads/repair/RepairedDataVerifierTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"M"}],"commitId":"b3ecbf38a3b9bd7dbcafb5caccacda4bc7d356a0","commitMessage":"@@@Merge branch 'cassandra-3.11' into trunk\n","date":"2020-04-17 01:29:52","modifiedFileCount":"13","status":"M","submitter":"Sam Tunnicliffe"},{"authorTime":"2021-08-27 04:06:00","codes":[{"authorDate":"2021-08-27 04:06:00","commitOrder":3,"curCode":"        StubReadCommand(int key, TableMetadata metadata,\n                        boolean isDigest,\n                        final ByteBuffer repairedDigest,\n                        final boolean conclusive)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null,\n                  false);\n            this.repairedDigest = repairedDigest;\n            this.conclusive = conclusive;\n        }\n","date":"2021-08-27 04:41:31","endLine":243,"groupId":"29349","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"StubReadCommand","params":"(intkey@TableMetadatametadata@booleanisDigest@finalByteBufferrepairedDigest@finalbooleanconclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f6/25d41e717917499ab78f3ecb4fad2e69ef2684.src","preCode":"        StubReadCommand(int key, TableMetadata metadata,\n                        boolean isDigest,\n                        final ByteBuffer repairedDigest,\n                        final boolean conclusive)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null);\n            this.repairedDigest = repairedDigest;\n            this.conclusive = conclusive;\n        }\n","realPath":"test/unit/org/apache/cassandra/db/ReadResponseTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"},{"authorDate":"2021-08-27 04:06:00","commitOrder":3,"curCode":"        StubReadCommand(int key, TableMetadata metadata, boolean isDigest)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  new ClusteringIndexSliceFilter(Slices.ALL, false),\n                  null,\n                  false);\n        }\n","date":"2021-08-27 04:41:31","endLine":292,"groupId":"29349","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"StubReadCommand","params":"(intkey@TableMetadatametadata@booleanisDigest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/59/2bff8d329053a1b7ea1b6ffb1a30b50e697d0f.src","preCode":"        StubReadCommand(int key, TableMetadata metadata, boolean isDigest)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  new ClusteringIndexSliceFilter(Slices.ALL, false),\n                  null);\n        }\n","realPath":"test/unit/org/apache/cassandra/service/reads/repair/RepairedDataVerifierTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"M"}],"commitId":"4ec4ab992f8adc0a60055a60525e9d11a28bc2ae","commitMessage":"@@@Add client warnings and abort to tombstone and coordinator reads which go past a low/high watermark\n\npatch by David Capwell; reviewed by Blake Eggleston.  Marcus Eriksson for CASSANDRA-16850\n","date":"2021-08-27 04:41:31","modifiedFileCount":"31","status":"M","submitter":"David Capwell"},{"authorTime":"2021-08-27 04:06:00","codes":[{"authorDate":"2021-08-28 00:54:28","commitOrder":4,"curCode":"        StubReadCommand(int key, TableMetadata metadata, boolean isDigest)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null,\n                  false);\n           \n        }\n","date":"2021-08-28 01:00:04","endLine":268,"groupId":"10547","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"StubReadCommand","params":"(intkey@TableMetadatametadata@booleanisDigest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f8/a19fda7d77ec8f29ae047cc63c7428dbc6b966.src","preCode":"        StubReadCommand(int key, TableMetadata metadata,\n                        boolean isDigest,\n                        final ByteBuffer repairedDigest,\n                        final boolean conclusive)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  null,\n                  null,\n                  false);\n            this.repairedDigest = repairedDigest;\n            this.conclusive = conclusive;\n        }\n","realPath":"test/unit/org/apache/cassandra/db/ReadResponseTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"},{"authorDate":"2021-08-27 04:06:00","commitOrder":4,"curCode":"        StubReadCommand(int key, TableMetadata metadata, boolean isDigest)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  new ClusteringIndexSliceFilter(Slices.ALL, false),\n                  null,\n                  false);\n        }\n","date":"2021-08-27 04:41:31","endLine":292,"groupId":"10547","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"StubReadCommand","params":"(intkey@TableMetadatametadata@booleanisDigest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/59/2bff8d329053a1b7ea1b6ffb1a30b50e697d0f.src","preCode":"        StubReadCommand(int key, TableMetadata metadata, boolean isDigest)\n        {\n            super(isDigest,\n                  0,\n                  false,\n                  metadata,\n                  FBUtilities.nowInSeconds(),\n                  ColumnFilter.all(metadata),\n                  RowFilter.NONE,\n                  DataLimits.NONE,\n                  metadata.partitioner.decorateKey(ByteBufferUtil.bytes(key)),\n                  new ClusteringIndexSliceFilter(Slices.ALL, false),\n                  null,\n                  false);\n        }\n","realPath":"test/unit/org/apache/cassandra/service/reads/repair/RepairedDataVerifierTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"N"}],"commitId":"33979e3c916b2006e75a042fa4c806364dbbe5c1","commitMessage":"@@@Merge branch 'cassandra-4.0' into trunk\n","date":"2021-08-28 01:00:04","modifiedFileCount":"27","status":"M","submitter":"Caleb Rackliffe"}]
