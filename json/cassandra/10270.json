[{"authorTime":"2015-09-02 15:51:29","codes":[{"authorDate":"2015-09-02 15:51:29","commitOrder":1,"curCode":"    public void shouldSelectHostFromLocal() throws UnknownHostException\n    {\n        Multimap<String, InetAddress> endpoints = ImmutableMultimap.<String, InetAddress> builder()\n                .put(LOCAL, InetAddress.getByName(\"0\"))\n                .put(LOCAL, InetAddress.getByName(\"00\"))\n                .put(\"1\", InetAddress.getByName(\"1\"))\n                .build();\n        Collection<InetAddress> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"1\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"0\")));\n    }\n","date":"2015-09-02 15:51:29","endLine":66,"groupId":"7211","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSelectHostFromLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/23/aeaaa3ab861c739675497fe33f2ae464035b66.src","preCode":"    public void shouldSelectHostFromLocal() throws UnknownHostException\n    {\n        Multimap<String, InetAddress> endpoints = ImmutableMultimap.<String, InetAddress> builder()\n                .put(LOCAL, InetAddress.getByName(\"0\"))\n                .put(LOCAL, InetAddress.getByName(\"00\"))\n                .put(\"1\", InetAddress.getByName(\"1\"))\n                .build();\n        Collection<InetAddress> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"1\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"0\")));\n    }\n","realPath":"test/unit/org/apache/cassandra/batchlog/BatchlogEndpointFilterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2015-09-02 15:51:29","commitOrder":1,"curCode":"    public void shouldSelectTwoRandomHostsFromSingleOtherRack() throws UnknownHostException\n    {\n        Multimap<String, InetAddress> endpoints = ImmutableMultimap.<String, InetAddress> builder()\n                .put(LOCAL, InetAddress.getByName(\"0\"))\n                .put(LOCAL, InetAddress.getByName(\"00\"))\n                .put(\"1\", InetAddress.getByName(\"1\"))\n                .put(\"1\", InetAddress.getByName(\"11\"))\n                .put(\"1\", InetAddress.getByName(\"111\"))\n                .build();\n        Collection<InetAddress> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        \r\n        assertThat(new HashSet<>(result).size(), is(2));\n    }\n","date":"2015-09-02 15:51:29","endLine":92,"groupId":"25218","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSelectTwoRandomHostsFromSingleOtherRack","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/23/aeaaa3ab861c739675497fe33f2ae464035b66.src","preCode":"    public void shouldSelectTwoRandomHostsFromSingleOtherRack() throws UnknownHostException\n    {\n        Multimap<String, InetAddress> endpoints = ImmutableMultimap.<String, InetAddress> builder()\n                .put(LOCAL, InetAddress.getByName(\"0\"))\n                .put(LOCAL, InetAddress.getByName(\"00\"))\n                .put(\"1\", InetAddress.getByName(\"1\"))\n                .put(\"1\", InetAddress.getByName(\"11\"))\n                .put(\"1\", InetAddress.getByName(\"111\"))\n                .build();\n        Collection<InetAddress> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        \r\n        assertThat(new HashSet<>(result).size(), is(2));\n    }\n","realPath":"test/unit/org/apache/cassandra/batchlog/BatchlogEndpointFilterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"79628dd7076c125c9b434e90689057cdf08bb87b","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2015-09-02 15:51:29","modifiedFileCount":"22","status":"B","submitter":"Aleksey Yeschenko"},{"authorTime":"2017-08-14 22:28:22","codes":[{"authorDate":"2015-09-02 15:51:29","commitOrder":2,"curCode":"    public void shouldSelectHostFromLocal() throws UnknownHostException\n    {\n        Multimap<String, InetAddress> endpoints = ImmutableMultimap.<String, InetAddress> builder()\n                .put(LOCAL, InetAddress.getByName(\"0\"))\n                .put(LOCAL, InetAddress.getByName(\"00\"))\n                .put(\"1\", InetAddress.getByName(\"1\"))\n                .build();\n        Collection<InetAddress> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"1\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"0\")));\n    }\n","date":"2015-09-02 15:51:29","endLine":66,"groupId":"7211","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSelectHostFromLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/23/aeaaa3ab861c739675497fe33f2ae464035b66.src","preCode":"    public void shouldSelectHostFromLocal() throws UnknownHostException\n    {\n        Multimap<String, InetAddress> endpoints = ImmutableMultimap.<String, InetAddress> builder()\n                .put(LOCAL, InetAddress.getByName(\"0\"))\n                .put(LOCAL, InetAddress.getByName(\"00\"))\n                .put(\"1\", InetAddress.getByName(\"1\"))\n                .build();\n        Collection<InetAddress> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"1\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"0\")));\n    }\n","realPath":"test/unit/org/apache/cassandra/batchlog/BatchlogEndpointFilterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2017-08-14 22:28:22","commitOrder":2,"curCode":"    public void shouldSelectTwoRandomHostsFromSingleOtherRack() throws UnknownHostException\n    {\n        Multimap<String, InetAddress> endpoints = ImmutableMultimap.<String, InetAddress> builder()\n                .put(LOCAL, InetAddress.getByName(\"0\"))\n                .put(LOCAL, InetAddress.getByName(\"00\"))\n                .put(\"1\", InetAddress.getByName(\"1\"))\n                .put(\"1\", InetAddress.getByName(\"11\"))\n                .put(\"1\", InetAddress.getByName(\"111\"))\n                .build();\n        Collection<InetAddress> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        \r\n        \r\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"11\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"111\")));\n    }\n","date":"2017-08-14 22:28:22","endLine":97,"groupId":"25218","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSelectTwoRandomHostsFromSingleOtherRack","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/7d/b1cfa22c00471355a52522fd2dfed162200ab8.src","preCode":"    public void shouldSelectTwoRandomHostsFromSingleOtherRack() throws UnknownHostException\n    {\n        Multimap<String, InetAddress> endpoints = ImmutableMultimap.<String, InetAddress> builder()\n                .put(LOCAL, InetAddress.getByName(\"0\"))\n                .put(LOCAL, InetAddress.getByName(\"00\"))\n                .put(\"1\", InetAddress.getByName(\"1\"))\n                .put(\"1\", InetAddress.getByName(\"11\"))\n                .put(\"1\", InetAddress.getByName(\"111\"))\n                .build();\n        Collection<InetAddress> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        \r\n        assertThat(new HashSet<>(result).size(), is(2));\n    }\n","realPath":"test/unit/org/apache/cassandra/batchlog/BatchlogEndpointFilterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"99e5f7efc33fb3672e11dfba9f2521d09473dddf","commitMessage":"@@@Merge branch 'cassandra-3.11' into trunk\n","date":"2017-08-14 22:28:22","modifiedFileCount":"2","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2017-11-10 00:33:48","codes":[{"authorDate":"2017-11-10 00:33:48","commitOrder":3,"curCode":"    public void shouldSelectHostFromLocal() throws UnknownHostException\n    {\n        Multimap<String, InetAddressAndPort> endpoints = ImmutableMultimap.<String, InetAddressAndPort> builder()\n                .put(LOCAL, InetAddressAndPort.getByName(\"0\"))\n                .put(LOCAL, InetAddressAndPort.getByName(\"00\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"1\"))\n                .build();\n        Collection<InetAddressAndPort> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddressAndPort.getByName(\"1\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddressAndPort.getByName(\"0\")));\n    }\n","date":"2018-01-26 03:32:24","endLine":68,"groupId":"20792","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSelectHostFromLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/41/564d920256dd6a97a39b5fa8cb726b75495dc4.src","preCode":"    public void shouldSelectHostFromLocal() throws UnknownHostException\n    {\n        Multimap<String, InetAddress> endpoints = ImmutableMultimap.<String, InetAddress> builder()\n                .put(LOCAL, InetAddress.getByName(\"0\"))\n                .put(LOCAL, InetAddress.getByName(\"00\"))\n                .put(\"1\", InetAddress.getByName(\"1\"))\n                .build();\n        Collection<InetAddress> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"1\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"0\")));\n    }\n","realPath":"test/unit/org/apache/cassandra/batchlog/BatchlogEndpointFilterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2017-11-10 00:33:48","commitOrder":3,"curCode":"    public void shouldSelectTwoRandomHostsFromSingleOtherRack() throws UnknownHostException\n    {\n        Multimap<String, InetAddressAndPort> endpoints = ImmutableMultimap.<String, InetAddressAndPort> builder()\n                .put(LOCAL, InetAddressAndPort.getByName(\"0\"))\n                .put(LOCAL, InetAddressAndPort.getByName(\"00\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"1\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"11\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"111\"))\n                .build();\n        Collection<InetAddressAndPort> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        \r\n        \r\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddressAndPort.getByName(\"11\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddressAndPort.getByName(\"111\")));\n    }\n","date":"2018-01-26 03:32:24","endLine":97,"groupId":"31736","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSelectTwoRandomHostsFromSingleOtherRack","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/41/564d920256dd6a97a39b5fa8cb726b75495dc4.src","preCode":"    public void shouldSelectTwoRandomHostsFromSingleOtherRack() throws UnknownHostException\n    {\n        Multimap<String, InetAddress> endpoints = ImmutableMultimap.<String, InetAddress> builder()\n                .put(LOCAL, InetAddress.getByName(\"0\"))\n                .put(LOCAL, InetAddress.getByName(\"00\"))\n                .put(\"1\", InetAddress.getByName(\"1\"))\n                .put(\"1\", InetAddress.getByName(\"11\"))\n                .put(\"1\", InetAddress.getByName(\"111\"))\n                .build();\n        Collection<InetAddress> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        \r\n        \r\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"11\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddress.getByName(\"111\")));\n    }\n","realPath":"test/unit/org/apache/cassandra/batchlog/BatchlogEndpointFilterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"59b5b6bef0fa76bf5740b688fcd4d9cf525760d0","commitMessage":"@@@Allow storage port to be configurable per node\n\nPatch by Ariel Weisberg; Reviewed by Jason Brown for CASSANDRA-7544\n","date":"2018-01-26 03:32:24","modifiedFileCount":"308","status":"M","submitter":"Ariel Weisberg"},{"authorTime":"2018-09-17 21:13:05","codes":[{"authorDate":"2018-09-17 21:13:05","commitOrder":4,"curCode":"    public void shouldSelectHostFromLocal() throws UnknownHostException\n    {\n        Multimap<String, InetAddressAndPort> endpoints = ImmutableMultimap.<String, InetAddressAndPort> builder()\n                .put(LOCAL, InetAddressAndPort.getByName(\"0\"))\n                .put(LOCAL, InetAddressAndPort.getByName(\"00\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"1\"))\n                .build();\n        Collection<InetAddressAndPort> result = filterBatchlogEndpoints(endpoints);\n        assertThat(result.size(), is(2));\n        assertTrue(result.contains(InetAddressAndPort.getByName(\"1\")));\n        assertTrue(result.contains(InetAddressAndPort.getByName(\"0\")));\n    }\n","date":"2018-09-28 00:03:48","endLine":71,"groupId":"10270","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSelectHostFromLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c2/b9fc9a8bed5003af123666ac622acfcc2670e4.src","preCode":"    public void shouldSelectHostFromLocal() throws UnknownHostException\n    {\n        Multimap<String, InetAddressAndPort> endpoints = ImmutableMultimap.<String, InetAddressAndPort> builder()\n                .put(LOCAL, InetAddressAndPort.getByName(\"0\"))\n                .put(LOCAL, InetAddressAndPort.getByName(\"00\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"1\"))\n                .build();\n        Collection<InetAddressAndPort> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddressAndPort.getByName(\"1\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddressAndPort.getByName(\"0\")));\n    }\n","realPath":"test/unit/org/apache/cassandra/batchlog/BatchlogEndpointFilterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2018-09-17 21:13:05","commitOrder":4,"curCode":"    public void shouldSelectTwoRandomHostsFromSingleOtherRack() throws UnknownHostException\n    {\n        Multimap<String, InetAddressAndPort> endpoints = ImmutableMultimap.<String, InetAddressAndPort> builder()\n                .put(LOCAL, InetAddressAndPort.getByName(\"0\"))\n                .put(LOCAL, InetAddressAndPort.getByName(\"00\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"1\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"11\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"111\"))\n                .build();\n        Collection<InetAddressAndPort> result = filterBatchlogEndpoints(endpoints);\n        \r\n        \r\n        assertThat(result.size(), is(2));\n        assertTrue(result.contains(InetAddressAndPort.getByName(\"11\")));\n        assertTrue(result.contains(InetAddressAndPort.getByName(\"111\")));\n    }\n","date":"2018-09-28 00:03:48","endLine":100,"groupId":"10270","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSelectTwoRandomHostsFromSingleOtherRack","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c2/b9fc9a8bed5003af123666ac622acfcc2670e4.src","preCode":"    public void shouldSelectTwoRandomHostsFromSingleOtherRack() throws UnknownHostException\n    {\n        Multimap<String, InetAddressAndPort> endpoints = ImmutableMultimap.<String, InetAddressAndPort> builder()\n                .put(LOCAL, InetAddressAndPort.getByName(\"0\"))\n                .put(LOCAL, InetAddressAndPort.getByName(\"00\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"1\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"11\"))\n                .put(\"1\", InetAddressAndPort.getByName(\"111\"))\n                .build();\n        Collection<InetAddressAndPort> result = new TestEndpointFilter(LOCAL, endpoints).filter();\n        \r\n        \r\n        assertThat(result.size(), is(2));\n        assertThat(result, JUnitMatchers.hasItem(InetAddressAndPort.getByName(\"11\")));\n        assertThat(result, JUnitMatchers.hasItem(InetAddressAndPort.getByName(\"111\")));\n    }\n","realPath":"test/unit/org/apache/cassandra/batchlog/BatchlogEndpointFilterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"29f83b88821c4792087df19d829ac87b5c06e9e6","commitMessage":"@@@Consolidate batch write code\n\nPatch by Alex Petrov; reviewed by Benedict Elliott Smith for CASSANDRA-14742","date":"2018-09-28 00:03:48","modifiedFileCount":"24","status":"M","submitter":"Alex Petrov"}]
