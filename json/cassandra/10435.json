[{"authorTime":"2015-06-30 21:58:02","codes":[{"authorDate":"2015-06-30 21:58:02","commitOrder":1,"curCode":"    public void testWithGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = delTime * 1000;\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 3);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 4);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","date":"2015-07-23 00:05:09","endLine":188,"groupId":"26858","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithGreaterThanRangeTombstone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/1e/5c23fa404f5d807341244f0deb2fe791a3f9b7.src","preCode":"    public void testWithGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = delTime * 1000;\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 3);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 4);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/rows/RowAndDeletionMergeIteratorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"},{"authorDate":"2015-06-30 21:58:02","commitOrder":1,"curCode":"    public void testWithAtMostAndGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = delTime * 1000;\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(atMost(0, timestamp, delTime),\n                                                                                       greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.BOTTOM);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.INCL_END_BOUND, 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 3);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 4);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","date":"2015-07-23 00:05:09","endLine":231,"groupId":"5446","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithAtMostAndGreaterThanRangeTombstone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/1e/5c23fa404f5d807341244f0deb2fe791a3f9b7.src","preCode":"    public void testWithAtMostAndGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = delTime * 1000;\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(atMost(0, timestamp, delTime),\n                                                                                       greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.BOTTOM);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.INCL_END_BOUND, 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 3);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 4);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/rows/RowAndDeletionMergeIteratorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"B"}],"commitId":"2457599427d361314dce4833abeb5cd4915d0b06","commitMessage":"@@@Simplify some 8099's implementations\n\npatch by slebresne; reviewed by iamalesky for CASSANDRA-9705\n","date":"2015-07-23 00:05:09","modifiedFileCount":"148","status":"B","submitter":"Sylvain Lebresne"},{"authorTime":"2015-08-11 23:03:12","codes":[{"authorDate":"2015-08-11 23:03:12","commitOrder":2,"curCode":"    public void testWithGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = toMillis(delTime);\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","date":"2015-08-11 23:03:22","endLine":179,"groupId":"26858","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithGreaterThanRangeTombstone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/84/bbc57b30274786bd9e4049b3fd695dbb7d37b9.src","preCode":"    public void testWithGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = delTime * 1000;\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 3);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 4);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/rows/RowAndDeletionMergeIteratorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"},{"authorDate":"2015-08-11 23:03:12","commitOrder":2,"curCode":"    public void testWithAtMostAndGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = toMillis(delTime);\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(atMost(0, timestamp, delTime),\n                                                                                       greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.BOTTOM);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.INCL_END_BOUND, 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","date":"2015-08-11 23:03:22","endLine":213,"groupId":"5446","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithAtMostAndGreaterThanRangeTombstone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/84/bbc57b30274786bd9e4049b3fd695dbb7d37b9.src","preCode":"    public void testWithAtMostAndGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = delTime * 1000;\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(atMost(0, timestamp, delTime),\n                                                                                       greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.BOTTOM);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.INCL_END_BOUND, 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 3);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 4);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/rows/RowAndDeletionMergeIteratorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"881776f35936df8bde93117f783fa5778094c046","commitMessage":"@@@Merge branch cassandra-3.0 into trunk\n","date":"2015-08-11 23:03:22","modifiedFileCount":"1","status":"M","submitter":"blerer"},{"authorTime":"2016-04-06 16:47:23","codes":[{"authorDate":"2016-04-06 16:47:23","commitOrder":3,"curCode":"    public void testWithGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = toMillis(delTime);\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringBound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","date":"2016-04-28 20:32:36","endLine":174,"groupId":"26858","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithGreaterThanRangeTombstone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a3/289c288833229afdada75af69659b311076182.src","preCode":"    public void testWithGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = toMillis(delTime);\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/rows/RowAndDeletionMergeIteratorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2016-04-06 16:47:23","commitOrder":3,"curCode":"    public void testWithAtMostAndGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = toMillis(delTime);\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(atMost(0, timestamp, delTime),\n                                                                                       greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringBound.BOTTOM);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.INCL_END_BOUND, 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringBound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","date":"2016-04-28 20:32:36","endLine":208,"groupId":"5446","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithAtMostAndGreaterThanRangeTombstone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a3/289c288833229afdada75af69659b311076182.src","preCode":"    public void testWithAtMostAndGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = toMillis(delTime);\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(atMost(0, timestamp, delTime),\n                                                                                       greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.BOTTOM);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.INCL_END_BOUND, 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), Bound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/rows/RowAndDeletionMergeIteratorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"2cc26eba7a742eb23e95b027bc611c924c233e1e","commitMessage":"@@@Clarify ClusteringPrefix hierarchy\n\nPatch by Branimir Lambov; reviewed by Sylvain Lebresne for CASSANDRA-11213\n","date":"2016-04-28 20:32:36","modifiedFileCount":"43","status":"M","submitter":"Branimir Lambov"},{"authorTime":"2019-10-16 04:04:26","codes":[{"authorDate":"2019-10-16 04:04:26","commitOrder":4,"curCode":"    public void testWithGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = toMillis(delTime);\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), BufferClusteringBound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","date":"2020-09-14 23:32:44","endLine":197,"groupId":"10435","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testWithGreaterThanRangeTombstone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c9/0694d4444c024663072554a2e1fd144bd5a13b.src","preCode":"    public void testWithGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = toMillis(delTime);\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringBound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/rows/RowAndDeletionMergeIteratorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2019-10-16 04:04:26","commitOrder":4,"curCode":"    public void testWithAtMostAndGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = toMillis(delTime);\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(atMost(0, timestamp, delTime),\n                                                                                       greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), BufferClusteringBound.BOTTOM);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.INCL_END_BOUND, 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), BufferClusteringBound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","date":"2020-09-14 23:32:44","endLine":231,"groupId":"10435","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testWithAtMostAndGreaterThanRangeTombstone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c9/0694d4444c024663072554a2e1fd144bd5a13b.src","preCode":"    public void testWithAtMostAndGreaterThanRangeTombstone()\n    {\n        Iterator<Row> rowIterator = createRowIterator();\n\n        int delTime = nowInSeconds + 1;\n        long timestamp = toMillis(delTime);\n\n        Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(atMost(0, timestamp, delTime),\n                                                                                       greaterThan(2, timestamp, delTime));\n\n        UnfilteredRowIterator iterator = createMergeIterator(rowIterator, rangeTombstoneIterator, false);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringBound.BOTTOM);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.INCL_END_BOUND, 0);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 1);\n\n        assertTrue(iterator.hasNext());\n        assertRow(iterator.next(), 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 2);\n\n        assertTrue(iterator.hasNext());\n        assertRtMarker(iterator.next(), ClusteringBound.TOP);\n\n        assertFalse(iterator.hasNext());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/rows/RowAndDeletionMergeIteratorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"}],"commitId":"ccab496d2d37c86341d364dea6c27513fda27331","commitMessage":"@@@Add byte array backed cells\n\nPatch by Blake Eggleston; reviewed by Caleb Rackliffe and Marcus Eriksson for CASSANDRA-15393\n","date":"2020-09-14 23:32:44","modifiedFileCount":"278","status":"M","submitter":"Blake Eggleston"}]
