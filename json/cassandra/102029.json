[{"authorTime":"2015-09-04 19:43:37","codes":[{"authorDate":"2015-09-04 19:43:37","commitOrder":1,"curCode":"    public void testSmallSegmentSize() throws Exception\n    {\n        int OLD_MAX_SEGMENT_SIZE = MmappedRegions.MAX_SEGMENT_SIZE;\n        MmappedRegions.MAX_SEGMENT_SIZE = 1024;\n\n        ByteBuffer buffer = allocateBuffer(4096);\n        try(ChannelProxy channel = new ChannelProxy(writeFile(\"testSmallSegmentSize\", buffer));\n            MmappedRegions regions = MmappedRegions.empty(channel))\n        {\n            regions.extend(1024);\n            regions.extend(2048);\n            regions.extend(4096);\n\n            final int SIZE = MmappedRegions.MAX_SEGMENT_SIZE;\n            for (int i = 0; i < buffer.capacity(); i++)\n            {\n                MmappedRegions.Region region = regions.floor(i);\n                assertNotNull(region);\n                assertEquals(SIZE * (i / SIZE), region.bottom());\n                assertEquals(SIZE + (SIZE * (i / SIZE)), region.top());\n            }\n        }\n        finally\n        {\n            MmappedRegions.MAX_SEGMENT_SIZE = OLD_MAX_SEGMENT_SIZE;\n        }\n    }\n","date":"2015-09-04 19:43:37","endLine":152,"groupId":"773","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSmallSegmentSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/9d/f3fed4688115de589c4395fc08daf49fa8dd13.src","preCode":"    public void testSmallSegmentSize() throws Exception\n    {\n        int OLD_MAX_SEGMENT_SIZE = MmappedRegions.MAX_SEGMENT_SIZE;\n        MmappedRegions.MAX_SEGMENT_SIZE = 1024;\n\n        ByteBuffer buffer = allocateBuffer(4096);\n        try(ChannelProxy channel = new ChannelProxy(writeFile(\"testSmallSegmentSize\", buffer));\n            MmappedRegions regions = MmappedRegions.empty(channel))\n        {\n            regions.extend(1024);\n            regions.extend(2048);\n            regions.extend(4096);\n\n            final int SIZE = MmappedRegions.MAX_SEGMENT_SIZE;\n            for (int i = 0; i < buffer.capacity(); i++)\n            {\n                MmappedRegions.Region region = regions.floor(i);\n                assertNotNull(region);\n                assertEquals(SIZE * (i / SIZE), region.bottom());\n                assertEquals(SIZE + (SIZE * (i / SIZE)), region.top());\n            }\n        }\n        finally\n        {\n            MmappedRegions.MAX_SEGMENT_SIZE = OLD_MAX_SEGMENT_SIZE;\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/io/util/MmappedRegionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"B"},{"authorDate":"2015-09-04 19:43:37","commitOrder":1,"curCode":"    public void testExtendOutOfOrder() throws Exception\n    {\n        ByteBuffer buffer = allocateBuffer(4096);\n        try(ChannelProxy channel = new ChannelProxy(writeFile(\"testExtendOutOfOrder\", buffer));\n            MmappedRegions regions = MmappedRegions.empty(channel))\n        {\n            regions.extend(4096);\n            regions.extend(1024);\n            regions.extend(2048);\n\n            for (int i = 0; i < buffer.capacity(); i++)\n            {\n                MmappedRegions.Region region = regions.floor(i);\n                assertNotNull(region);\n                assertEquals(0, region.bottom());\n                assertEquals(4096, region.top());\n            }\n        }\n    }\n","date":"2015-09-04 19:43:37","endLine":274,"groupId":"773","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testExtendOutOfOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/9d/f3fed4688115de589c4395fc08daf49fa8dd13.src","preCode":"    public void testExtendOutOfOrder() throws Exception\n    {\n        ByteBuffer buffer = allocateBuffer(4096);\n        try(ChannelProxy channel = new ChannelProxy(writeFile(\"testExtendOutOfOrder\", buffer));\n            MmappedRegions regions = MmappedRegions.empty(channel))\n        {\n            regions.extend(4096);\n            regions.extend(1024);\n            regions.extend(2048);\n\n            for (int i = 0; i < buffer.capacity(); i++)\n            {\n                MmappedRegions.Region region = regions.floor(i);\n                assertNotNull(region);\n                assertEquals(0, region.bottom());\n                assertEquals(4096, region.top());\n            }\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/io/util/MmappedRegionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"B"}],"commitId":"356dd5b31f73628ade6ea28efe33c55d1d1d3379","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2015-09-04 19:43:37","modifiedFileCount":"42","status":"B","submitter":"Benedict Elliott Smith"},{"authorTime":"2016-03-02 17:15:44","codes":[{"authorDate":"2016-03-02 17:15:44","commitOrder":2,"curCode":"    public void testSmallSegmentSize() throws Exception\n    {\n        int OLD_MAX_SEGMENT_SIZE = MmappedRegions.MAX_SEGMENT_SIZE;\n        MmappedRegions.MAX_SEGMENT_SIZE = 1024;\n\n        ByteBuffer buffer = allocateBuffer(4096);\n        try(ChannelProxy channel = new ChannelProxy(writeFile(\"testSmallSegmentSize\", buffer));\n            MmappedRegions regions = MmappedRegions.empty(channel))\n        {\n            regions.extend(1024);\n            regions.extend(2048);\n            regions.extend(4096);\n\n            final int SIZE = MmappedRegions.MAX_SEGMENT_SIZE;\n            for (int i = 0; i < buffer.capacity(); i++)\n            {\n                MmappedRegions.Region region = regions.floor(i);\n                assertNotNull(region);\n                assertEquals(SIZE * (i / SIZE), region.offset());\n                assertEquals(SIZE + (SIZE * (i / SIZE)), region.end());\n            }\n        }\n        finally\n        {\n            MmappedRegions.MAX_SEGMENT_SIZE = OLD_MAX_SEGMENT_SIZE;\n        }\n    }\n","date":"2016-04-29 13:14:42","endLine":152,"groupId":"102029","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSmallSegmentSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/85/e8460498f2457b496c311d5a33fd9bd4fc40bc.src","preCode":"    public void testSmallSegmentSize() throws Exception\n    {\n        int OLD_MAX_SEGMENT_SIZE = MmappedRegions.MAX_SEGMENT_SIZE;\n        MmappedRegions.MAX_SEGMENT_SIZE = 1024;\n\n        ByteBuffer buffer = allocateBuffer(4096);\n        try(ChannelProxy channel = new ChannelProxy(writeFile(\"testSmallSegmentSize\", buffer));\n            MmappedRegions regions = MmappedRegions.empty(channel))\n        {\n            regions.extend(1024);\n            regions.extend(2048);\n            regions.extend(4096);\n\n            final int SIZE = MmappedRegions.MAX_SEGMENT_SIZE;\n            for (int i = 0; i < buffer.capacity(); i++)\n            {\n                MmappedRegions.Region region = regions.floor(i);\n                assertNotNull(region);\n                assertEquals(SIZE * (i / SIZE), region.bottom());\n                assertEquals(SIZE + (SIZE * (i / SIZE)), region.top());\n            }\n        }\n        finally\n        {\n            MmappedRegions.MAX_SEGMENT_SIZE = OLD_MAX_SEGMENT_SIZE;\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/io/util/MmappedRegionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2016-03-02 17:15:44","commitOrder":2,"curCode":"    public void testExtendOutOfOrder() throws Exception\n    {\n        ByteBuffer buffer = allocateBuffer(4096);\n        try(ChannelProxy channel = new ChannelProxy(writeFile(\"testExtendOutOfOrder\", buffer));\n            MmappedRegions regions = MmappedRegions.empty(channel))\n        {\n            regions.extend(4096);\n            regions.extend(1024);\n            regions.extend(2048);\n\n            for (int i = 0; i < buffer.capacity(); i++)\n            {\n                MmappedRegions.Region region = regions.floor(i);\n                assertNotNull(region);\n                assertEquals(0, region.offset());\n                assertEquals(4096, region.end());\n            }\n        }\n    }\n","date":"2016-04-29 13:14:42","endLine":274,"groupId":"102029","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testExtendOutOfOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/85/e8460498f2457b496c311d5a33fd9bd4fc40bc.src","preCode":"    public void testExtendOutOfOrder() throws Exception\n    {\n        ByteBuffer buffer = allocateBuffer(4096);\n        try(ChannelProxy channel = new ChannelProxy(writeFile(\"testExtendOutOfOrder\", buffer));\n            MmappedRegions regions = MmappedRegions.empty(channel))\n        {\n            regions.extend(4096);\n            regions.extend(1024);\n            regions.extend(2048);\n\n            for (int i = 0; i < buffer.capacity(); i++)\n            {\n                MmappedRegions.Region region = regions.floor(i);\n                assertNotNull(region);\n                assertEquals(0, region.bottom());\n                assertEquals(4096, region.top());\n            }\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/io/util/MmappedRegionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"30bb255ec9fb36ace2aab51474bd3bfb9bbd3bed","commitMessage":"@@@Add uncompressed chunk cache for RandomAccessReader\n\npatch by Branimir Lambov; reviewed by Pavel Yaskevich for CASSANDRA-5863\n","date":"2016-04-29 13:14:42","modifiedFileCount":"38","status":"M","submitter":"Branimir Lambov"}]
