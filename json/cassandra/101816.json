[{"authorTime":"2017-07-14 23:21:19","codes":[{"authorDate":"2016-09-12 17:22:25","commitOrder":2,"curCode":"    public void testAllowFilteringOnPartitionAndClusteringKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, e int, PRIMARY KEY ((a, b), c, d))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 13, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 15, 16, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 22, 23, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (31, 32, 33, 34, 35)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c = 16\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a = 11 AND b = 12 AND c > 13 AND d = 14\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c = 16 AND d > 16\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c > 13 AND d >= 17 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a = 11 AND b = 12 AND c > 13 AND d > 17\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE c > 30 AND d >= 34 ALLOW FILTERING\"),\n                    row(31, 32, 33, 34, 35));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 11 AND c > 15 AND d >= 16 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 11 AND b >= 15 AND c > 15 AND d >= 16 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 100 AND b >= 15 AND c > 0 AND d <= 100 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18),\n                    row(31, 32, 33, 34, 35),\n                    row(21, 22, 23, 24, 25));\n\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a <= 11 AND c > 15 AND d >= 16\");\n        });\n\n        \r\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, e int, PRIMARY KEY ((a, b), c, d)) WITH CLUSTERING ORDER BY (c DESC)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 11, 13, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 11, 14, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 15, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 16, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 11, 23, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 11, 24, 34, 35)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 12, 25, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 12, 26, 34, 35)\");\n\n        beforeAndAfterFlush(() -> {\n            assertRowsIgnoringOrder(execute(\"SELECT * FROM %s WHERE b >= 12 ALLOW FILTERING\"),\n                                    row(11, 12, 15, 14, 15),\n                                    row(11, 12, 16, 17, 18),\n                                    row(21, 12, 25, 24, 25),\n                                    row(21, 12, 26, 34, 35));\n        });\n    }\n","date":"2016-09-12 17:24:38","endLine":2603,"groupId":"24600","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAllowFilteringOnPartitionAndClusteringKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/7d/56a146f1232d92fc0e00c9efce0b346fe757de.src","preCode":"    public void testAllowFilteringOnPartitionAndClusteringKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, e int, PRIMARY KEY ((a, b), c, d))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 13, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 15, 16, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 22, 23, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (31, 32, 33, 34, 35)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c = 16\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a = 11 AND b = 12 AND c > 13 AND d = 14\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c = 16 AND d > 16\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c > 13 AND d >= 17 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a = 11 AND b = 12 AND c > 13 AND d > 17\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE c > 30 AND d >= 34 ALLOW FILTERING\"),\n                    row(31, 32, 33, 34, 35));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 11 AND c > 15 AND d >= 16 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 11 AND b >= 15 AND c > 15 AND d >= 16 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 100 AND b >= 15 AND c > 0 AND d <= 100 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18),\n                    row(31, 32, 33, 34, 35),\n                    row(21, 22, 23, 24, 25));\n\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a <= 11 AND c > 15 AND d >= 16\");\n        });\n\n        \r\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, e int, PRIMARY KEY ((a, b), c, d)) WITH CLUSTERING ORDER BY (c DESC)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 11, 13, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 11, 14, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 15, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 16, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 11, 23, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 11, 24, 34, 35)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 12, 25, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 12, 26, 34, 35)\");\n\n        beforeAndAfterFlush(() -> {\n            assertRowsIgnoringOrder(execute(\"SELECT * FROM %s WHERE b >= 12 ALLOW FILTERING\"),\n                                    row(11, 12, 15, 14, 15),\n                                    row(11, 12, 16, 17, 18),\n                                    row(21, 12, 25, 24, 25),\n                                    row(21, 12, 26, 34, 35));\n        });\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":2538,"status":"NB"},{"authorDate":"2017-07-14 23:21:19","commitOrder":2,"curCode":"    public void testFilteringWithPartitionWithoutRows() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (pk int, c int, s int static, v int, PRIMARY KEY(pk, c))\");\n\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 1, 1, 9, 1);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 1, 2, 9, 2);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 3, 1, 9, 1);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 4, 1, 9, 1);\n        flush();\n\n        assertRows(execute(\"SELECT * FROM %s WHERE v = ? ALLOW FILTERING\", 1),\n                   row(1, 1, 9, 1),\n                   row(3, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        execute(\"DELETE FROM %s WHERE pk = ? and c = ?\", 3, 1);\n\n        \r\n        assertRows(execute(\"SELECT * FROM %s WHERE v = ? LIMIT 2 ALLOW FILTERING\", 1),\n                   row(1, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        assertRows(execute(\"SELECT * FROM %s WHERE pk IN ? AND v = ? LIMIT 2 ALLOW FILTERING\", list(1, 3, 4), 1),\n                   row(1, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        \r\n        for (int pageSize = 1; pageSize < 4; pageSize++)\n        {\n            assertRowsNet(executeNetWithPaging(\"SELECT * FROM %s WHERE v = 1 LIMIT 2 ALLOW FILTERING\", pageSize),\n                          row(1, 1, 9, 1),\n                          row(4, 1, 9, 1));\n\n            assertRowsNet(executeNetWithPaging(\"SELECT * FROM %s WHERE pk IN (1, 3, 4) AND v = 1 LIMIT 2 ALLOW FILTERING\", pageSize),\n                          row(1, 1, 9, 1),\n                          row(4, 1, 9, 1));\n        }\n    }\n","date":"2017-07-14 23:23:36","endLine":556,"groupId":"1031","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFilteringWithPartitionWithoutRows","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/24/42c2b00222ccdea03630b66f1d7d80d69813e6.src","preCode":"    public void testFilteringWithPartitionWithoutRows() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (pk int, c int, s int static, v int, PRIMARY KEY(pk, c))\");\n\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 1, 1, 9, 1);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 1, 2, 9, 2);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 3, 1, 9, 1);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 4, 1, 9, 1);\n        flush();\n\n        assertRows(execute(\"SELECT * FROM %s WHERE v = ? ALLOW FILTERING\", 1),\n                   row(1, 1, 9, 1),\n                   row(3, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        execute(\"DELETE FROM %s WHERE pk = ? and c = ?\", 3, 1);\n\n        \r\n        assertRows(execute(\"SELECT * FROM %s WHERE v = ? LIMIT 2 ALLOW FILTERING\", 1),\n                   row(1, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        assertRows(execute(\"SELECT * FROM %s WHERE pk IN ? AND v = ? LIMIT 2 ALLOW FILTERING\", list(1, 3, 4), 1),\n                   row(1, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        \r\n        for (int pageSize = 1; pageSize < 4; pageSize++)\n        {\n            assertRowsNet(executeNetWithPaging(\"SELECT * FROM %s WHERE v = 1 LIMIT 2 ALLOW FILTERING\", pageSize),\n                          row(1, 1, 9, 1),\n                          row(4, 1, 9, 1));\n\n            assertRowsNet(executeNetWithPaging(\"SELECT * FROM %s WHERE pk IN (1, 3, 4) AND v = 1 LIMIT 2 ALLOW FILTERING\", pageSize),\n                          row(1, 1, 9, 1),\n                          row(4, 1, 9, 1));\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectLimitTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":519,"status":"B"}],"commitId":"e0ce6ce77d38db1890c5f2bccba1f19fdfe256be","commitMessage":"@@@Merge branch cassandra-3.11 into trunk\n","date":"2017-07-14 23:23:36","modifiedFileCount":"16","status":"M","submitter":"Benjamin Lerer"},{"authorTime":"2017-07-14 23:21:19","codes":[{"authorDate":"2016-11-10 09:17:36","commitOrder":3,"curCode":"    public void testAllowFilteringOnPartitionAndClusteringKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, e int, PRIMARY KEY ((a, b), c, d))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 13, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 15, 16, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 22, 23, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (31, 32, 33, 34, 35)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c = 16\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a = 11 AND b = 12 AND c > 13 AND d = 14\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c = 16 AND d > 16\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c > 13 AND d >= 17 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a = 11 AND b = 12 AND c > 13 AND d > 17\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE c > 30 AND d >= 34 ALLOW FILTERING\"),\n                    row(31, 32, 33, 34, 35));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 11 AND c > 15 AND d >= 16 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 11 AND b >= 15 AND c > 15 AND d >= 16 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 100 AND b >= 15 AND c > 0 AND d <= 100 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18),\n                    row(31, 32, 33, 34, 35),\n                    row(21, 22, 23, 24, 25));\n\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a <= 11 AND c > 15 AND d >= 16\");\n        });\n\n        \r\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, e int, PRIMARY KEY ((a, b), c, d)) WITH CLUSTERING ORDER BY (c DESC, d ASC)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 11, 13, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 11, 14, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 15, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 16, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 11, 23, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 11, 24, 34, 35)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 12, 25, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 12, 26, 34, 35)\");\n\n        beforeAndAfterFlush(() -> {\n            assertRowsIgnoringOrder(execute(\"SELECT * FROM %s WHERE b >= 12 ALLOW FILTERING\"),\n                                    row(11, 12, 15, 14, 15),\n                                    row(11, 12, 16, 17, 18),\n                                    row(21, 12, 25, 24, 25),\n                                    row(21, 12, 26, 34, 35));\n        });\n    }\n","date":"2018-07-17 23:39:41","endLine":1880,"groupId":"101816","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAllowFilteringOnPartitionAndClusteringKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/54/e079e82216c57f37f19ef020d9be158ca59f1c.src","preCode":"    public void testAllowFilteringOnPartitionAndClusteringKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, e int, PRIMARY KEY ((a, b), c, d))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 13, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 15, 16, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 22, 23, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (31, 32, 33, 34, 35)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c = 16\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a = 11 AND b = 12 AND c > 13 AND d = 14\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c = 16 AND d > 16\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c > 13 AND d >= 17 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a = 11 AND b = 12 AND c > 13 AND d > 17\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE c > 30 AND d >= 34 ALLOW FILTERING\"),\n                    row(31, 32, 33, 34, 35));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 11 AND c > 15 AND d >= 16 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 11 AND b >= 15 AND c > 15 AND d >= 16 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a <= 100 AND b >= 15 AND c > 0 AND d <= 100 ALLOW FILTERING\"),\n                    row(11, 15, 16, 17, 18),\n                    row(31, 32, 33, 34, 35),\n                    row(21, 22, 23, 24, 25));\n\n            assertInvalidMessage(\n                    \"Clustering column \\\"d\\\" cannot be restricted (preceding column \\\"c\\\" is restricted by a non-EQ relation)\",\n                    \"SELECT * FROM %s WHERE a <= 11 AND c > 15 AND d >= 16\");\n        });\n\n        \r\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, e int, PRIMARY KEY ((a, b), c, d)) WITH CLUSTERING ORDER BY (c DESC)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 11, 13, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 11, 14, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 15, 14, 15)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (11, 12, 16, 17, 18)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 11, 23, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 11, 24, 34, 35)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 12, 25, 24, 25)\");\n        execute(\"INSERT INTO %s (a,b,c,d,e) VALUES (21, 12, 26, 34, 35)\");\n\n        beforeAndAfterFlush(() -> {\n            assertRowsIgnoringOrder(execute(\"SELECT * FROM %s WHERE b >= 12 ALLOW FILTERING\"),\n                                    row(11, 12, 15, 14, 15),\n                                    row(11, 12, 16, 17, 18),\n                                    row(21, 12, 25, 24, 25),\n                                    row(21, 12, 26, 34, 35));\n        });\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":1815,"status":"M"},{"authorDate":"2017-07-14 23:21:19","commitOrder":3,"curCode":"    public void testFilteringWithPartitionWithoutRows() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (pk int, c int, s int static, v int, PRIMARY KEY(pk, c))\");\n\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 1, 1, 9, 1);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 1, 2, 9, 2);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 3, 1, 9, 1);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 4, 1, 9, 1);\n        flush();\n\n        assertRows(execute(\"SELECT * FROM %s WHERE v = ? ALLOW FILTERING\", 1),\n                   row(1, 1, 9, 1),\n                   row(3, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        execute(\"DELETE FROM %s WHERE pk = ? and c = ?\", 3, 1);\n\n        \r\n        assertRows(execute(\"SELECT * FROM %s WHERE v = ? LIMIT 2 ALLOW FILTERING\", 1),\n                   row(1, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        assertRows(execute(\"SELECT * FROM %s WHERE pk IN ? AND v = ? LIMIT 2 ALLOW FILTERING\", list(1, 3, 4), 1),\n                   row(1, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        \r\n        for (int pageSize = 1; pageSize < 4; pageSize++)\n        {\n            assertRowsNet(executeNetWithPaging(\"SELECT * FROM %s WHERE v = 1 LIMIT 2 ALLOW FILTERING\", pageSize),\n                          row(1, 1, 9, 1),\n                          row(4, 1, 9, 1));\n\n            assertRowsNet(executeNetWithPaging(\"SELECT * FROM %s WHERE pk IN (1, 3, 4) AND v = 1 LIMIT 2 ALLOW FILTERING\", pageSize),\n                          row(1, 1, 9, 1),\n                          row(4, 1, 9, 1));\n        }\n    }\n","date":"2017-07-14 23:23:36","endLine":556,"groupId":"101816","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFilteringWithPartitionWithoutRows","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/24/42c2b00222ccdea03630b66f1d7d80d69813e6.src","preCode":"    public void testFilteringWithPartitionWithoutRows() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (pk int, c int, s int static, v int, PRIMARY KEY(pk, c))\");\n\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 1, 1, 9, 1);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 1, 2, 9, 2);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 3, 1, 9, 1);\n        execute(\"INSERT INTO %s (pk, c, s, v) VALUES (?, ?, ?, ?)\", 4, 1, 9, 1);\n        flush();\n\n        assertRows(execute(\"SELECT * FROM %s WHERE v = ? ALLOW FILTERING\", 1),\n                   row(1, 1, 9, 1),\n                   row(3, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        execute(\"DELETE FROM %s WHERE pk = ? and c = ?\", 3, 1);\n\n        \r\n        assertRows(execute(\"SELECT * FROM %s WHERE v = ? LIMIT 2 ALLOW FILTERING\", 1),\n                   row(1, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        assertRows(execute(\"SELECT * FROM %s WHERE pk IN ? AND v = ? LIMIT 2 ALLOW FILTERING\", list(1, 3, 4), 1),\n                   row(1, 1, 9, 1),\n                   row(4, 1, 9, 1));\n\n        \r\n        for (int pageSize = 1; pageSize < 4; pageSize++)\n        {\n            assertRowsNet(executeNetWithPaging(\"SELECT * FROM %s WHERE v = 1 LIMIT 2 ALLOW FILTERING\", pageSize),\n                          row(1, 1, 9, 1),\n                          row(4, 1, 9, 1));\n\n            assertRowsNet(executeNetWithPaging(\"SELECT * FROM %s WHERE pk IN (1, 3, 4) AND v = 1 LIMIT 2 ALLOW FILTERING\", pageSize),\n                          row(1, 1, 9, 1),\n                          row(4, 1, 9, 1));\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectLimitTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":519,"status":"N"}],"commitId":"207c80c1fd63dfbd8ca7e615ec8002ee8983c5d6","commitMessage":"@@@Make all DDL statements idempotent and not dependent on global state\n\npatch by Aleksey Yeschenko; reviewed by Sam Tunnicliffe for\nCASSANDRA-13426\n","date":"2018-07-17 23:39:41","modifiedFileCount":"165","status":"M","submitter":"Aleksey Yeschenko"}]
