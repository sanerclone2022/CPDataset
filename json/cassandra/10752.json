[{"authorTime":"2014-06-21 01:55:35","codes":[{"authorDate":"2014-06-21 01:55:35","commitOrder":1,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> leveledOptions = new HashMap<>();\n        leveledOptions.put(\"sstable_size_in_mb\", \"1\");\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    SimpleStrategy.class,\n                                    KSMetaData.optsWithRF(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(leveledOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","date":"2014-06-21 01:55:35","endLine":60,"groupId":"19344","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/37/5dfe8ca119f4df767f837b9482364a19c2d7a7.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> leveledOptions = new HashMap<>();\n        leveledOptions.put(\"sstable_size_in_mb\", \"1\");\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    SimpleStrategy.class,\n                                    KSMetaData.optsWithRF(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(leveledOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/OneCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2014-06-21 01:55:35","commitOrder":1,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    SimpleStrategy.class,\n                                    KSMetaData.optsWithRF(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, LongType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, BytesType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, BytesType.instance).gcGraceSeconds(0));\n    }\n","date":"2014-06-21 01:55:35","endLine":93,"groupId":"11937","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/80/8a87e1904449a9a10c3040780cf557da76ddf0.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    SimpleStrategy.class,\n                                    KSMetaData.optsWithRF(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, LongType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, BytesType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, BytesType.instance).gcGraceSeconds(0));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"}],"commitId":"d2a3827a65f208eae7aed129dcb6dc582ac1f3d5","commitMessage":"@@@Reduce unit test times due to schema loading\n\nPatch by Lyuben Todorov; reviewed by Tyler Hobbs for CASSANDRA-6968\n","date":"2014-06-21 01:55:35","modifiedFileCount":"92","status":"B","submitter":"lyubent"},{"authorTime":"2014-09-02 00:54:46","codes":[{"authorDate":"2014-06-21 01:55:35","commitOrder":2,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> leveledOptions = new HashMap<>();\n        leveledOptions.put(\"sstable_size_in_mb\", \"1\");\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    SimpleStrategy.class,\n                                    KSMetaData.optsWithRF(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(leveledOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","date":"2014-06-21 01:55:35","endLine":60,"groupId":"19344","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/37/5dfe8ca119f4df767f837b9482364a19c2d7a7.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> leveledOptions = new HashMap<>();\n        leveledOptions.put(\"sstable_size_in_mb\", \"1\");\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    SimpleStrategy.class,\n                                    KSMetaData.optsWithRF(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(leveledOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/OneCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"N"},{"authorDate":"2014-09-02 00:54:46","commitOrder":2,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    SimpleStrategy.class,\n                                    KSMetaData.optsWithRF(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance).gcGraceSeconds(0));\n    }\n","date":"2015-06-30 18:47:01","endLine":76,"groupId":"3087","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/60/6d24c6249febba34a4f01da78f1452f25a050d.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    SimpleStrategy.class,\n                                    KSMetaData.optsWithRF(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, LongType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, BytesType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, BytesType.instance).gcGraceSeconds(0));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"a991b64811f4d6adb6c7b31c0df52288eb06cf19","commitMessage":"@@@Storage engine refactor.  a.k.a CASSANDRA-8099\n\nInitial patch.  see ticket for details\n","date":"2015-06-30 18:47:01","modifiedFileCount":"374","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2015-07-01 01:38:39","codes":[{"authorDate":"2015-07-01 01:38:39","commitOrder":3,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> leveledOptions = new HashMap<>();\n        leveledOptions.put(\"sstable_size_in_mb\", \"1\");\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(leveledOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","date":"2015-07-01 21:36:12","endLine":56,"groupId":"31852","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/d5/802f9e1b182654d79f23561886495830aae646.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> leveledOptions = new HashMap<>();\n        leveledOptions.put(\"sstable_size_in_mb\", \"1\");\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    SimpleStrategy.class,\n                                    KSMetaData.optsWithRF(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(leveledOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/OneCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2015-07-01 01:38:39","commitOrder":3,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance).gcGraceSeconds(0));\n    }\n","date":"2015-07-01 21:36:12","endLine":76,"groupId":"3087","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/76/46100551cd11780b56017a824d28084a12beef.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    SimpleStrategy.class,\n                                    KSMetaData.optsWithRF(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance).gcGraceSeconds(0));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"31e3f612b113a76ca8c04a3a86aa6df3915ad055","commitMessage":"@@@Factor out KSMetaData.KeyspaceParams\n\npatch by Aleksey Yeschenko; reviewed by Robert Stupp for CASSANDRA-9677\n","date":"2015-07-01 21:36:12","modifiedFileCount":"91","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2015-08-04 17:16:04","codes":[{"authorDate":"2015-08-04 17:16:04","commitOrder":4,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.lcs(Collections.singletonMap(\"sstable_size_in_mb\", \"1\"))),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","date":"2015-08-04 17:16:04","endLine":55,"groupId":"28152","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f5/5bf52de420a861fc5bba032861a9f0255067c9.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> leveledOptions = new HashMap<>();\n        leveledOptions.put(\"sstable_size_in_mb\", \"1\");\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(leveledOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/OneCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2015-08-04 17:16:04","commitOrder":4,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance)\n                                                .gcGraceSeconds(0));\n    }\n","date":"2015-08-04 17:16:04","endLine":78,"groupId":"32424","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/09/1bc03aa52a25c2bc21320417a4346eacc08240.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1).compactionStrategyOptions(compactionOptions),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance).gcGraceSeconds(0));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"becee6ae4a04f76d5998de1814c9d6e0164d998d","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2015-08-04 17:16:04","modifiedFileCount":"79","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2017-02-28 09:23:28","codes":[{"authorDate":"2015-08-04 17:16:04","commitOrder":5,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.lcs(Collections.singletonMap(\"sstable_size_in_mb\", \"1\"))),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","date":"2015-08-04 17:16:04","endLine":55,"groupId":"28152","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f5/5bf52de420a861fc5bba032861a9f0255067c9.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.lcs(Collections.singletonMap(\"sstable_size_in_mb\", \"1\"))),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/OneCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2017-02-28 09:23:28","commitOrder":5,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n\n        \r\n        System.setProperty(\"cassandra.streaminghistogram.roundseconds\", \"1\");\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance)\n                                                .gcGraceSeconds(0));\n    }\n","date":"2017-02-28 09:24:15","endLine":82,"groupId":"32424","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f2/0f85feee2a8b5b0223c3e2d34d060cb6052884.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance)\n                                                .gcGraceSeconds(0));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"d24f4c68d0889e0934f30c4590657bda5dc063c4","commitMessage":"@@@Merge branch 'cassandra-3.11' into trunk\n","date":"2017-02-28 09:24:15","modifiedFileCount":"10","status":"M","submitter":"Jeff Jirsa"},{"authorTime":"2017-03-03 01:43:57","codes":[{"authorDate":"2015-08-04 17:16:04","commitOrder":6,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.lcs(Collections.singletonMap(\"sstable_size_in_mb\", \"1\"))),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","date":"2015-08-04 17:16:04","endLine":55,"groupId":"28152","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f5/5bf52de420a861fc5bba032861a9f0255067c9.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.lcs(Collections.singletonMap(\"sstable_size_in_mb\", \"1\"))),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/OneCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2017-03-03 01:43:57","commitOrder":6,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n\n        \r\n        System.setProperty(\"cassandra.streaminghistogram.roundseconds\", \"1\");\n\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance)\n                                                .gcGraceSeconds(0));\n    }\n","date":"2017-03-03 01:44:23","endLine":83,"groupId":"32424","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/73/68598ae0d6f524ed77fb2c9b51edb6b2ed47fd.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n        SchemaLoader.prepareServer();\n\n        \r\n        System.setProperty(\"cassandra.streaminghistogram.roundseconds\", \"1\");\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance)\n                                                .gcGraceSeconds(0));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"a7c9fa0f17518482c3ca691e542ed2c0f41af84a","commitMessage":"@@@Merge branch 'cassandra-3.11' into trunk\n","date":"2017-03-03 01:44:23","modifiedFileCount":"7","status":"M","submitter":"Jeff Jirsa"},{"authorTime":"2018-06-07 02:43:37","codes":[{"authorDate":"2015-08-04 17:16:04","commitOrder":7,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.lcs(Collections.singletonMap(\"sstable_size_in_mb\", \"1\"))),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","date":"2015-08-04 17:16:04","endLine":55,"groupId":"28152","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f5/5bf52de420a861fc5bba032861a9f0255067c9.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.lcs(Collections.singletonMap(\"sstable_size_in_mb\", \"1\"))),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/OneCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2018-06-07 02:43:37","commitOrder":7,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n\n        \r\n        System.setProperty(\"cassandra.streaminghistogram.roundseconds\", \"1\");\n\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1)\n                                                .compaction(CompactionParams.stcs(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.stcs(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance)\n                                                .gcGraceSeconds(0));\n    }\n","date":"2018-06-07 02:44:42","endLine":124,"groupId":"28152","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/94/1ef13eb250906946fb4809ec96d08682b5f865.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n\n        \r\n        System.setProperty(\"cassandra.streaminghistogram.roundseconds\", \"1\");\n\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.scts(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance)\n                                                .gcGraceSeconds(0));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"d3b6a67bbf283e9965ecafa57001fd9dcbb14ba2","commitMessage":"@@@Merge branch 'cassandra-3.11' into trunk\n","date":"2018-06-07 02:44:42","modifiedFileCount":"9","status":"M","submitter":"Paulo Motta"},{"authorTime":"2020-04-16 20:31:34","codes":[{"authorDate":"2015-08-04 17:16:04","commitOrder":8,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.lcs(Collections.singletonMap(\"sstable_size_in_mb\", \"1\"))),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","date":"2015-08-04 17:16:04","endLine":55,"groupId":"10752","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f5/5bf52de420a861fc5bba032861a9f0255067c9.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        SchemaLoader.prepareServer();\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.lcs(Collections.singletonMap(\"sstable_size_in_mb\", \"1\"))),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/OneCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2020-04-16 20:31:34","commitOrder":8,"curCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n\n        \r\n        System.setProperty(\"cassandra.streaminghistogram.roundseconds\", \"1\");\n\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.stcs(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4));\n    }\n","date":"2020-08-17 17:51:23","endLine":114,"groupId":"10752","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"defineSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/4b/f9cdde321cf67bbf1e774816faed949ebb57e6.src","preCode":"    public static void defineSchema() throws ConfigurationException\n    {\n        Map<String, String> compactionOptions = new HashMap<>();\n        compactionOptions.put(\"tombstone_compaction_interval\", \"1\");\n\n        \r\n        System.setProperty(\"cassandra.streaminghistogram.roundseconds\", \"1\");\n\n        SchemaLoader.prepareServer();\n\n        SchemaLoader.createKeyspace(KEYSPACE1,\n                                    KeyspaceParams.simple(1),\n                                    SchemaLoader.denseCFMD(KEYSPACE1, CF_DENSE1)\n                                                .compaction(CompactionParams.stcs(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD1)\n                                                .compaction(CompactionParams.stcs(compactionOptions)),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD2),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD3),\n                                    SchemaLoader.standardCFMD(KEYSPACE1, CF_STANDARD4),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER1, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPER5, AsciiType.instance),\n                                    SchemaLoader.superCFMD(KEYSPACE1, CF_SUPERGC, AsciiType.instance)\n                                                .gcGraceSeconds(0));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"cba0c27ce9f135ded45beaa27a913a0be03b2afb","commitMessage":"@@@Remove COMPACT STORAGE internals\n\nPatch by Ekaterina Dimitrova.  reviewed by Sylvain Lebresne for\nCASSANDRA-13994\n","date":"2020-08-17 17:51:23","modifiedFileCount":"51","status":"M","submitter":"Ekaterina Dimitrova"}]
