[{"authorTime":"2014-04-24 03:07:10","codes":[{"authorDate":"2014-04-24 03:07:10","commitOrder":1,"curCode":"    public void sameKeySameCfPartialRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerDefinition.create(\"test\", SameKeySameCfPartialTrigger.class.getName()));\n        ColumnFamily cf1 = makeCf(metadata, \"k1v1\", null);\n        ColumnFamily cf2 = makeCf(metadata, \"k2v1\", null);\n        Mutation rm1 = new Mutation(bytes(\"k1\"), cf1);\n        Mutation rm2 = new Mutation(bytes(\"k2\"), cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(2, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<ColumnFamily> mutatedCFs = new ArrayList<>(tmutations.get(0).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k1v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k2v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertEquals(bytes(\"trigger\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")).value());\n    }\n","date":"2014-04-24 03:07:10","endLine":117,"groupId":"27870","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sameKeySameCfPartialRowMutations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b0/c45b9244e860a6f67fe582a7263711fa7d6559.src","preCode":"    public void sameKeySameCfPartialRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerDefinition.create(\"test\", SameKeySameCfPartialTrigger.class.getName()));\n        ColumnFamily cf1 = makeCf(metadata, \"k1v1\", null);\n        ColumnFamily cf2 = makeCf(metadata, \"k2v1\", null);\n        Mutation rm1 = new Mutation(bytes(\"k1\"), cf1);\n        Mutation rm2 = new Mutation(bytes(\"k2\"), cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(2, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<ColumnFamily> mutatedCFs = new ArrayList<>(tmutations.get(0).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k1v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k2v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertEquals(bytes(\"trigger\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")).value());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2014-04-24 03:07:10","commitOrder":1,"curCode":"    public void sameKeyDifferentKsRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerDefinition.create(\"test\", SameKeyDifferentKsTrigger.class.getName()));\n        ColumnFamily cf1 = makeCf(metadata, \"k1v1\", null);\n        ColumnFamily cf2 = makeCf(metadata, \"k2v1\", null);\n        Mutation rm1 = new Mutation(bytes(\"k1\"), cf1);\n        Mutation rm2 = new Mutation(bytes(\"k2\"), cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(4, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<ColumnFamily> mutatedCFs = new ArrayList<>(tmutations.get(0).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k1v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k2v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(2).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")));\n        assertEquals(bytes(\"trigger\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")).value());\n\n        mutatedCFs = new ArrayList<>(tmutations.get(3).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")));\n        assertEquals(bytes(\"trigger\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")).value());\n    }\n","date":"2014-04-24 03:07:10","endLine":183,"groupId":"27870","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sameKeyDifferentKsRowMutations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b0/c45b9244e860a6f67fe582a7263711fa7d6559.src","preCode":"    public void sameKeyDifferentKsRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerDefinition.create(\"test\", SameKeyDifferentKsTrigger.class.getName()));\n        ColumnFamily cf1 = makeCf(metadata, \"k1v1\", null);\n        ColumnFamily cf2 = makeCf(metadata, \"k2v1\", null);\n        Mutation rm1 = new Mutation(bytes(\"k1\"), cf1);\n        Mutation rm2 = new Mutation(bytes(\"k2\"), cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(4, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<ColumnFamily> mutatedCFs = new ArrayList<>(tmutations.get(0).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k1v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k2v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(2).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")));\n        assertEquals(bytes(\"trigger\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")).value());\n\n        mutatedCFs = new ArrayList<>(tmutations.get(3).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")));\n        assertEquals(bytes(\"trigger\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")).value());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"}],"commitId":"ec7206ce6a50d2ca03ac23f8ba6ec8eea9cfe6d8","commitMessage":"@@@Merge branch 'cassandra-2.1' into trunk\n","date":"2014-04-24 03:07:10","modifiedFileCount":"4","status":"B","submitter":"Aleksey Yeschenko"},{"authorTime":"2014-09-02 00:54:46","codes":[{"authorDate":"2014-09-02 00:54:46","commitOrder":2,"curCode":"    public void sameKeySameCfPartialRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerDefinition.create(\"test\", SameKeySameCfPartialTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(2, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n    }\n","date":"2015-06-30 18:47:01","endLine":132,"groupId":"11258","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sameKeySameCfPartialRowMutations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a5/d79d3219f4eae4e83ae04104135dbefb6c4268.src","preCode":"    public void sameKeySameCfPartialRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerDefinition.create(\"test\", SameKeySameCfPartialTrigger.class.getName()));\n        ColumnFamily cf1 = makeCf(metadata, \"k1v1\", null);\n        ColumnFamily cf2 = makeCf(metadata, \"k2v1\", null);\n        Mutation rm1 = new Mutation(bytes(\"k1\"), cf1);\n        Mutation rm2 = new Mutation(bytes(\"k2\"), cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(2, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<ColumnFamily> mutatedCFs = new ArrayList<>(tmutations.get(0).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k1v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k2v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertEquals(bytes(\"trigger\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")).value());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2014-09-02 00:54:46","commitOrder":2,"curCode":"    public void sameKeyDifferentKsRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerDefinition.create(\"test\", SameKeyDifferentKsTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(4, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(2).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n\n        mutatedCFs = new ArrayList<>(tmutations.get(3).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n    }\n","date":"2015-06-30 18:47:01","endLine":221,"groupId":"11258","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sameKeyDifferentKsRowMutations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a5/d79d3219f4eae4e83ae04104135dbefb6c4268.src","preCode":"    public void sameKeyDifferentKsRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerDefinition.create(\"test\", SameKeyDifferentKsTrigger.class.getName()));\n        ColumnFamily cf1 = makeCf(metadata, \"k1v1\", null);\n        ColumnFamily cf2 = makeCf(metadata, \"k2v1\", null);\n        Mutation rm1 = new Mutation(bytes(\"k1\"), cf1);\n        Mutation rm2 = new Mutation(bytes(\"k2\"), cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(4, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<ColumnFamily> mutatedCFs = new ArrayList<>(tmutations.get(0).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k1v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertEquals(bytes(\"k2v1\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")).value());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(2).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")));\n        assertEquals(bytes(\"trigger\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")).value());\n\n        mutatedCFs = new ArrayList<>(tmutations.get(3).getColumnFamilies());\n        assertEquals(1, mutatedCFs.size());\n        assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c1\")));\n        assertEquals(bytes(\"trigger\"), mutatedCFs.get(0).getColumn(getColumnName(metadata, \"c2\")).value());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"a991b64811f4d6adb6c7b31c0df52288eb06cf19","commitMessage":"@@@Storage engine refactor.  a.k.a CASSANDRA-8099\n\nInitial patch.  see ticket for details\n","date":"2015-06-30 18:47:01","modifiedFileCount":"374","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2015-07-02 21:46:14","codes":[{"authorDate":"2015-07-02 21:46:14","commitOrder":3,"curCode":"    public void sameKeySameCfPartialRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerMetadata.create(\"test\", SameKeySameCfPartialTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(2, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n    }\n","date":"2015-07-11 01:08:59","endLine":132,"groupId":"11258","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"sameKeySameCfPartialRowMutations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/0c/f7491c2fa873d100390308f6a068b2672669e2.src","preCode":"    public void sameKeySameCfPartialRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerDefinition.create(\"test\", SameKeySameCfPartialTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(2, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2015-07-02 21:46:14","commitOrder":3,"curCode":"    public void sameKeyDifferentKsRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerMetadata.create(\"test\", SameKeyDifferentKsTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(4, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(2).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n\n        mutatedCFs = new ArrayList<>(tmutations.get(3).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n    }\n","date":"2015-07-11 01:08:59","endLine":221,"groupId":"11258","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"sameKeyDifferentKsRowMutations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/0c/f7491c2fa873d100390308f6a068b2672669e2.src","preCode":"    public void sameKeyDifferentKsRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerDefinition.create(\"test\", SameKeyDifferentKsTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(4, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(2).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n\n        mutatedCFs = new ArrayList<>(tmutations.get(3).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"16044a6f4c19a899172efc8b2d0ac3e4723d4c88","commitMessage":"@@@Make CFMetaData.triggers immutable\n\npatch by Aleksey Yeschenko; reviewed by Robert Stupp for CASSANDRA-9712\n","date":"2015-07-11 01:08:59","modifiedFileCount":"11","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":4,"curCode":"    public void sameKeySameCfPartialRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        TableMetadata metadata = makeTableMetadata(\"ks1\", \"cf1\", TriggerMetadata.create(\"test\", SameKeySameCfPartialTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(2, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumn(bytes(\"c2\"))).value());\n    }\n","date":"2017-01-28 06:17:46","endLine":140,"groupId":"11258","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"sameKeySameCfPartialRowMutations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a7/96daf853a27a2adba7e780009d6da384b983c4.src","preCode":"    public void sameKeySameCfPartialRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerMetadata.create(\"test\", SameKeySameCfPartialTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(2, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":4,"curCode":"    public void sameKeyDifferentKsRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        TableMetadata metadata = makeTableMetadata(\"ks1\", \"cf1\", TriggerMetadata.create(\"test\", SameKeyDifferentKsTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(4, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(2).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumn(bytes(\"c2\"))).value());\n\n        mutatedCFs = new ArrayList<>(tmutations.get(3).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumn(bytes(\"c2\"))).value());\n    }\n","date":"2017-01-28 06:17:46","endLine":229,"groupId":"11258","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"sameKeyDifferentKsRowMutations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a7/96daf853a27a2adba7e780009d6da384b983c4.src","preCode":"    public void sameKeyDifferentKsRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        CFMetaData metadata = makeCfMetaData(\"ks1\", \"cf1\", TriggerMetadata.create(\"test\", SameKeyDifferentKsTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(4, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(2).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n\n        mutatedCFs = new ArrayList<>(tmutations.get(3).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"}],"commitId":"af3fe39dcabd9ef77a00309ce6741268423206df","commitMessage":"@@@Make TableMetadata immutable.  optimize Schema\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-9425\n","date":"2017-01-28 06:17:46","modifiedFileCount":"511","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2017-09-13 21:57:50","codes":[{"authorDate":"2017-09-13 21:57:50","commitOrder":5,"curCode":"    public void sameKeySameCfPartialRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        TableMetadata metadata = makeTableMetadata(\"ks1\", \"cf1\", TriggerMetadata.create(\"test\", SameKeySameCfPartialTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation.PartitionUpdateCollector(\"ks1\", cf1.partitionKey()).add(cf1).build();\n        Mutation rm2 = new Mutation.PartitionUpdateCollector(\"ks1\", cf2.partitionKey()).add(cf2).build();\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(2, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumn(bytes(\"c2\"))).value());\n    }\n","date":"2018-01-09 15:10:23","endLine":154,"groupId":"101467","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"sameKeySameCfPartialRowMutations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/50/183e50933dfc75a898e5f0443c7027e7ec07e0.src","preCode":"    public void sameKeySameCfPartialRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        TableMetadata metadata = makeTableMetadata(\"ks1\", \"cf1\", TriggerMetadata.create(\"test\", SameKeySameCfPartialTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(2, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumn(bytes(\"c2\"))).value());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2017-09-13 21:57:50","commitOrder":5,"curCode":"    public void sameKeyDifferentKsRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        TableMetadata metadata = makeTableMetadata(\"ks1\", \"cf1\", TriggerMetadata.create(\"test\", SameKeyDifferentKsTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation.PartitionUpdateCollector(\"ks1\", cf1.partitionKey()).add(cf1).build();\n        Mutation rm2 = new Mutation.PartitionUpdateCollector(\"ks1\", cf2.partitionKey()).add(cf2).build();\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(4, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(2).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumn(bytes(\"c2\"))).value());\n\n        mutatedCFs = new ArrayList<>(tmutations.get(3).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumn(bytes(\"c2\"))).value());\n    }\n","date":"2018-01-09 15:10:23","endLine":243,"groupId":"101467","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"sameKeyDifferentKsRowMutations","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/50/183e50933dfc75a898e5f0443c7027e7ec07e0.src","preCode":"    public void sameKeyDifferentKsRowMutations() throws ConfigurationException, InvalidRequestException\n    {\n        TableMetadata metadata = makeTableMetadata(\"ks1\", \"cf1\", TriggerMetadata.create(\"test\", SameKeyDifferentKsTrigger.class.getName()));\n        PartitionUpdate cf1 = makeCf(metadata, \"k1\", \"k1v1\", null);\n        PartitionUpdate cf2 = makeCf(metadata, \"k2\", \"k2v1\", null);\n        Mutation rm1 = new Mutation(\"ks1\", cf1.partitionKey()).add(cf1);\n        Mutation rm2 = new Mutation(\"ks1\", cf2.partitionKey()).add(cf2);\n\n        List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1, rm2)));\n        assertEquals(4, tmutations.size());\n        Collections.sort(tmutations, new RmComparator());\n\n        List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        Row row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k1v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertEquals(bytes(\"k2v1\"), row.getCell(metadata.getColumn(bytes(\"c1\"))).value());\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))));\n\n        mutatedCFs = new ArrayList<>(tmutations.get(2).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumn(bytes(\"c2\"))).value());\n\n        mutatedCFs = new ArrayList<>(tmutations.get(3).getPartitionUpdates());\n        assertEquals(1, mutatedCFs.size());\n        row = mutatedCFs.get(0).iterator().next();\n        assertNull(row.getCell(metadata.getColumn(bytes(\"c1\"))));\n        assertEquals(bytes(\"trigger\"), row.getCell(metadata.getColumn(bytes(\"c2\"))).value());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"M"}],"commitId":"de7c24b395265ff619c622ed6be8d88453f158ac","commitMessage":"@@@Make PartitionUpdate and Mutation immutable\n\nPatch by marcuse; reviewed by Aleksey Yeschenko for CASSANDRA-13867\n","date":"2018-01-09 15:10:23","modifiedFileCount":"33","status":"M","submitter":"Marcus Eriksson"}]
