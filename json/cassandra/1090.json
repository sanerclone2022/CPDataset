[{"authorTime":"2016-07-27 02:09:35","codes":[{"authorDate":"2015-12-05 01:43:44","commitOrder":2,"curCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getPendingTasks() == 0\n                 && ((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getActiveCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","date":"2015-12-05 01:43:44","endLine":91,"groupId":"4149","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"updateView","params":"(Stringquery@Object...params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b3/4f47509b2dd8af8e62ae70eb6b6dc9edeb16dd.src","preCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getPendingTasks() == 0\n                 && ((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getActiveCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"NB"},{"authorDate":"2016-07-27 02:09:35","commitOrder":2,"curCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getPendingTasks() == 0\n            && ((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getActiveCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","date":"2016-07-28 07:32:41","endLine":80,"groupId":"4149","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"updateView","params":"(Stringquery@Object...params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/12/cb6734f0869f5320922edc730e5ce9fb5f80de.src","preCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getPendingTasks() == 0\n            && ((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getActiveCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"5051c0f6eb3f984600600c9577d6b5ece9038c74","commitMessage":"@@@Support Restricting non-PK Cols in MV Select Statements\n\nPatch by Jochen Niebuhr; reviewed by Tyler Hobbs for CASSANDRA-10368\n","date":"2016-07-28 07:32:41","modifiedFileCount":"2","status":"M","submitter":"Jochen Niebuhr"},{"authorTime":"2018-06-22 23:48:01","codes":[{"authorDate":"2018-06-22 23:48:01","commitOrder":3,"curCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getPendingTaskCount() == 0\n                 && ((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","date":"2018-08-07 02:06:16","endLine":92,"groupId":"4307","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"updateView","params":"(Stringquery@Object...params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/24/22ef58df8d5c6816ab2b0e9585c6a642902242.src","preCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getPendingTasks() == 0\n                 && ((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getActiveCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2018-06-22 23:48:01","commitOrder":3,"curCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getPendingTaskCount() == 0\n                 && ((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","date":"2018-08-07 02:06:16","endLine":88,"groupId":"4307","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"updateView","params":"(Stringquery@Object...params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/8b/4a556b722a8c2fe85988789d8a4b4152cfb063.src","preCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getPendingTasks() == 0\n                 && ((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getActiveCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"d5ae2ae481545b1fb2332b46013088f2f8cea636","commitMessage":"@@@Add a virtual table to expose thread pools\n\npatch by Chris Lohfink; reviewed by Aleksey Yeschenko for\nCASSANDRA-14523\n","date":"2018-08-07 02:06:16","modifiedFileCount":"16","status":"M","submitter":"Chris Lohfink"},{"authorTime":"2019-08-16 15:35:08","codes":[{"authorDate":"2019-08-16 15:35:08","commitOrder":4,"curCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) Stage.VIEW_MUTATION.executor).getPendingTaskCount() == 0\n                 && ((SEPExecutor) Stage.VIEW_MUTATION.executor).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","date":"2019-10-28 21:20:29","endLine":91,"groupId":"18705","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"updateView","params":"(Stringquery@Object...params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ee/62f4c82771c261422c3fdf19587dedf114d4ed.src","preCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getPendingTaskCount() == 0\n                 && ((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2019-08-16 15:35:08","commitOrder":4,"curCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) Stage.VIEW_MUTATION.executor).getPendingTaskCount() == 0\n                 && ((SEPExecutor) Stage.VIEW_MUTATION.executor).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","date":"2019-10-28 21:20:29","endLine":87,"groupId":"18705","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"updateView","params":"(Stringquery@Object...params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f5/6f6834de53428682104eb833d36e42bf38a973.src","preCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getPendingTaskCount() == 0\n                 && ((SEPExecutor) StageManager.getStage(Stage.VIEW_MUTATION)).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"b97fc302b10d0ec5303421b3b185675872672c46","commitMessage":"@@@Remove StageManager\n\npatch by Venkata Harikrishna Nukala; reviewed by Benedict for CASSANDRA-15227\n","date":"2019-10-28 21:20:29","modifiedFileCount":"29","status":"M","submitter":"nvharikrishna"},{"authorTime":"2019-07-10 03:50:57","codes":[{"authorDate":"2019-07-10 03:50:57","commitOrder":5,"curCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) Stage.VIEW_MUTATION.executor()).getPendingTaskCount() == 0\n                 && ((SEPExecutor) Stage.VIEW_MUTATION.executor()).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","date":"2019-11-11 22:03:43","endLine":91,"groupId":"17885","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"updateView","params":"(Stringquery@Object...params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/2d/cfe325117416ac1f75c33591f7869576afe73e.src","preCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) Stage.VIEW_MUTATION.executor).getPendingTaskCount() == 0\n                 && ((SEPExecutor) Stage.VIEW_MUTATION.executor).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2019-07-10 03:50:57","commitOrder":5,"curCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) Stage.VIEW_MUTATION.executor()).getPendingTaskCount() == 0\n                 && ((SEPExecutor) Stage.VIEW_MUTATION.executor()).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","date":"2019-11-11 22:03:43","endLine":87,"groupId":"17885","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"updateView","params":"(Stringquery@Object...params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/46/488af27ba4264a56e190f5e122c84567f4deac.src","preCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) Stage.VIEW_MUTATION.executor).getPendingTaskCount() == 0\n                 && ((SEPExecutor) Stage.VIEW_MUTATION.executor).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"860de83a02f3b7711e842a58a073802b9920a1a1","commitMessage":"@@@Enable nodetool/JMX resizing of processing stage executor pool\n\nThis patch enables users to resize the thread pools used by the\nvarious processing stages at runtime using nodetool or over JMX.\n\nChanges:\n\nSwitch to using idiomatic Java Executor names for thread pool configuration\nfunctions.  Deprecate `{get. set}CoreThreads` for `{get. set}CorePoolSize`. \n`{get. set}MaximumThreads` for `{get. set}MaximumPoolSize`.\n\nIntroduce a new ResizableThreadPool interface used by SEPExecutorMBean and\nJMXEnabledThreadPoolExecutorMBean to expose a common interface for setting\nthread pool sizes.  Replace singled usage of JMXConfigurableThreadPoolExecutor\nin repair code with JMXEnabledThreadPoolExecutor as both are now resizable\n(since CASSANDRA-5044) and ResizableThreadPool now exporting the same API\nover JMX.\n\nImplement {get. set}CorePoolSize and {get. set}MaximumPoolSize for SEPExecutor.\nTo change the maximum pool size for SEPExecutor.  the number of permits\nhas been changed so that it can go negative if the size of the pool is\nreduced.  If a SEPWorker discovers the number of permits is negative when\nlooking for more work it stops.\n\nAdd `nodetool getconcurrency` to retrieve the current core and maximum\npool sizes for all of the executor stages and `nodetool setconcurrency`\nto change core/maximum pool sizes where permitted.\n\nUpdate Stage to lazily initialize the executors so that in-JVM dtests\ncan reference Verbs (which have an associated Stage) in message filtering\nwithout starting up all the executors.  Introduce new Stage.execute/submit\nconvenience functions to avoid needing to lookup the executor first.\n\nUpdate Stage executors to pass a consumer function that\nupdates the configuration used to initialize the thread pools. This keeps\nthe config in sync with changes made over JMX to `org.apache.cassandra.{request. internal}.*`\nor via nodetool. Also implement for native transport threads - although\nthat can currently only be updated by JMX rather than nodetool.\n\nIntroduce a new `JMXEnabledSingleThreadedExecutor` for executors\nthat need to be single threaded for correctness that forbids changing\nthe core/maximum pool sizes (previously it was possible to set gossip to\nrun multiple threads over JMX).\n\nPatch by Jon Meredith; reviewed by Benedict Elliot Smith for CASSANDRA-15277\n","date":"2019-11-11 22:03:43","modifiedFileCount":"41","status":"M","submitter":"Jon Meredith"},{"authorTime":"2021-06-02 15:33:22","codes":[{"authorDate":"2019-07-10 03:50:57","commitOrder":6,"curCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) Stage.VIEW_MUTATION.executor()).getPendingTaskCount() == 0\n                 && ((SEPExecutor) Stage.VIEW_MUTATION.executor()).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","date":"2019-11-11 22:03:43","endLine":91,"groupId":"1090","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"updateView","params":"(Stringquery@Object...params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/2d/cfe325117416ac1f75c33591f7869576afe73e.src","preCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) Stage.VIEW_MUTATION.executor()).getPendingTaskCount() == 0\n                 && ((SEPExecutor) Stage.VIEW_MUTATION.executor()).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"N"},{"authorDate":"2021-06-02 15:33:22","commitOrder":6,"curCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(version, query, params);\n        while (!(((SEPExecutor) Stage.VIEW_MUTATION.executor()).getPendingTaskCount() == 0\n                 && ((SEPExecutor) Stage.VIEW_MUTATION.executor()).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","date":"2021-06-02 15:36:11","endLine":132,"groupId":"1090","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"updateView","params":"(Stringquery@Object...params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/95/88db0edddae82d5d291d5219f6cde0c769e248.src","preCode":"    private void updateView(String query, Object... params) throws Throwable\n    {\n        executeNet(protocolVersion, query, params);\n        while (!(((SEPExecutor) Stage.VIEW_MUTATION.executor()).getPendingTaskCount() == 0\n                 && ((SEPExecutor) Stage.VIEW_MUTATION.executor()).getActiveTaskCount() == 0))\n        {\n            Thread.sleep(1);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"2316a9b7f116546d1c839bdcd77ef2f2c7288e24","commitMessage":"@@@Merge branch 'cassandra-4.0' into trunk\n","date":"2021-06-02 15:36:11","modifiedFileCount":"1","status":"M","submitter":"Bereng"}]
