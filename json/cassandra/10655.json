[{"authorTime":"2015-08-19 09:16:43","codes":[{"authorDate":"2015-08-19 09:16:43","commitOrder":1,"curCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        CommitLog.instance.resetUnsafe(true);\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","date":"2015-08-19 09:16:43","endLine":313,"groupId":"25637","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEqualRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b4/1b7b30dc3f92cbe5cc6ebdc859fd06b47964dd.src","preCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        CommitLog.instance.resetUnsafe(true);\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"B"},{"authorDate":"2015-08-19 09:16:43","commitOrder":1,"curCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        CommitLog.instance.resetUnsafe(true);\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        try\n        {\n            Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                          .clustering(\"bytes\")\n                          .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                          .build();\n            CommitLog.instance.add(rm);\n            throw new AssertionError(\"mutation larger than limit was accepted\");\n        }\n        catch (IllegalArgumentException e)\n        {\n            \r\n        }\n    }\n","date":"2015-08-19 09:16:43","endLine":333,"groupId":"25636","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceedRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b4/1b7b30dc3f92cbe5cc6ebdc859fd06b47964dd.src","preCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        CommitLog.instance.resetUnsafe(true);\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        try\n        {\n            Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                          .clustering(\"bytes\")\n                          .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                          .build();\n            CommitLog.instance.add(rm);\n            throw new AssertionError(\"mutation larger than limit was accepted\");\n        }\n        catch (IllegalArgumentException e)\n        {\n            \r\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"B"}],"commitId":"036f6b77de1613508ca4e622ac4f27196f0ecec3","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2015-08-19 09:16:43","modifiedFileCount":"4","status":"B","submitter":"Jonathan Ellis"},{"authorTime":"2015-09-02 00:24:50","codes":[{"authorDate":"2015-08-19 09:16:43","commitOrder":2,"curCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        CommitLog.instance.resetUnsafe(true);\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","date":"2015-08-19 09:16:43","endLine":313,"groupId":"25637","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEqualRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b4/1b7b30dc3f92cbe5cc6ebdc859fd06b47964dd.src","preCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        CommitLog.instance.resetUnsafe(true);\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"N"},{"authorDate":"2015-09-02 00:24:50","commitOrder":2,"curCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        CommitLog.instance.resetUnsafe(true);\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","date":"2016-01-19 23:00:32","endLine":338,"groupId":"25637","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceedRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/91/a25e1130ae669ce657f692bfac745b91e0a9e5.src","preCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        CommitLog.instance.resetUnsafe(true);\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        try\n        {\n            Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                          .clustering(\"bytes\")\n                          .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                          .build();\n            CommitLog.instance.add(rm);\n            throw new AssertionError(\"mutation larger than limit was accepted\");\n        }\n        catch (IllegalArgumentException e)\n        {\n            \r\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"M"}],"commitId":"7374e9b5ab08c1f1e612bf72293ea14c959b0c3c","commitMessage":"@@@Encrypted commit logs\n\npatch by jasobrown; reviewed by blambov for (CASSANDRA-6018)\n","date":"2016-01-19 23:00:32","modifiedFileCount":"16","status":"M","submitter":"Jason Brown"},{"authorTime":"2016-06-02 18:51:58","codes":[{"authorDate":"2016-06-02 18:51:58","commitOrder":3,"curCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","date":"2016-06-02 18:52:10","endLine":323,"groupId":"25637","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEqualRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ca/a9feeadaaa04f837502d4d5b5413957b4f0f73.src","preCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        CommitLog.instance.resetUnsafe(true);\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"M"},{"authorDate":"2016-06-02 18:51:58","commitOrder":3,"curCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","date":"2016-06-02 18:52:10","endLine":335,"groupId":"25637","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceedRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ca/a9feeadaaa04f837502d4d5b5413957b4f0f73.src","preCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        CommitLog.instance.resetUnsafe(true);\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"M"}],"commitId":"adfbf518e041595a481cd902a033e6b081f50f82","commitMessage":"@@@Merge branch cassandra-3.7 into trunk\n","date":"2016-06-02 18:52:10","modifiedFileCount":"13","status":"M","submitter":"Benjamin Lerer"},{"authorTime":"2016-03-27 21:20:47","codes":[{"authorDate":"2016-06-02 18:51:58","commitOrder":4,"curCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","date":"2016-06-02 18:52:10","endLine":323,"groupId":"25637","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testEqualRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ca/a9feeadaaa04f837502d4d5b5413957b4f0f73.src","preCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"N"},{"authorDate":"2016-03-27 21:20:47","commitOrder":4,"curCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        Keyspace ks = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = ks.getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","date":"2016-06-16 22:01:39","endLine":358,"groupId":"25637","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceedRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ef/f972d9b6cd0c0bef50f21ac0b903d388c624ba.src","preCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"M"}],"commitId":"e31e216234c6b57a531cae607e0355666007deb2","commitMessage":"@@@Add Change Data Capture\n\nPatch by jmckenzie; reviewed by cyeksigian and blambov for CASSANDRA-8844\n","date":"2016-06-16 22:01:39","modifiedFileCount":"51","status":"M","submitter":"Josh McKenzie"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":5,"curCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata(), 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","date":"2017-01-28 06:17:46","endLine":367,"groupId":"12758","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testEqualRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f9/8dd6bd139c0f7274ed91bb671d2a708b44d80b.src","preCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":5,"curCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        Keyspace ks = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = ks.getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata(), 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","date":"2017-01-28 06:17:46","endLine":380,"groupId":"26375","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceedRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f9/8dd6bd139c0f7274ed91bb671d2a708b44d80b.src","preCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        Keyspace ks = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = ks.getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata, 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"}],"commitId":"af3fe39dcabd9ef77a00309ce6741268423206df","commitMessage":"@@@Make TableMetadata immutable.  optimize Schema\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-9425\n","date":"2017-01-28 06:17:46","modifiedFileCount":"511","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2020-09-24 11:34:33","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":6,"curCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata(), 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","date":"2017-01-28 06:17:46","endLine":367,"groupId":"12758","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testEqualRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f9/8dd6bd139c0f7274ed91bb671d2a708b44d80b.src","preCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata(), 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"N"},{"authorDate":"2020-09-24 11:34:33","commitOrder":6,"curCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        Keyspace ks = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = ks.getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata(), 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        long cnt = CommitLog.instance.metrics.oversizedMutations.getCount();\n        try\n        {\n            CommitLog.instance.add(rm);\n        }\n        catch (MutationExceededMaxSizeException e)\n        {\n            Assert.assertEquals(cnt + 1, CommitLog.instance.metrics.oversizedMutations.getCount());\n            throw e;\n        }\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","date":"2020-09-24 11:35:39","endLine":474,"groupId":"26375","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceedRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/d1/0b16b9be84b1435d1ee5244d5eeab1ad3c63fe.src","preCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        Keyspace ks = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = ks.getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata(), 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":455,"status":"M"}],"commitId":"e973344305ed2cd5821ccf51cfeb1481010ef18b","commitMessage":"@@@Emit a metric for mutations that are too large\n\nPatch by Lee Tang; Reviewed by Chris Lohfink.  Jordan West for CASSANDRA-16116\n","date":"2020-09-24 11:35:39","modifiedFileCount":"4","status":"M","submitter":"Lee Tang"},{"authorTime":"2021-01-11 17:55:44","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":7,"curCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata(), 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","date":"2017-01-28 06:17:46","endLine":367,"groupId":"10655","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testEqualRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f9/8dd6bd139c0f7274ed91bb671d2a708b44d80b.src","preCode":"    public void testEqualRecordLimit() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata(), 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(getMaxRecordDataSize()))\n                      .build();\n        CommitLog.instance.add(rm);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"N"},{"authorDate":"2021-01-11 17:55:44","commitOrder":7,"curCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        Keyspace ks = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = ks.getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata(), 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        long cnt = CommitLog.instance.metrics.oversizedMutations.getCount();\n        try\n        {\n            CommitLog.instance.add(rm);\n        }\n        catch (MutationExceededMaxSizeException e)\n        {\n            assertEquals(cnt + 1, CommitLog.instance.metrics.oversizedMutations.getCount());\n            throw e;\n        }\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","date":"2021-08-26 04:22:32","endLine":497,"groupId":"10655","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"testExceedRecordLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ee/56efe59ebda963c5fceec67ee8b4a71bbd1858.src","preCode":"    public void testExceedRecordLimit() throws Exception\n    {\n        Keyspace ks = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = ks.getColumnFamilyStore(STANDARD1);\n        Mutation rm = new RowUpdateBuilder(cfs.metadata(), 0, \"k\")\n                      .clustering(\"bytes\")\n                      .add(\"val\", ByteBuffer.allocate(1 + getMaxRecordDataSize()))\n                      .build();\n        long cnt = CommitLog.instance.metrics.oversizedMutations.getCount();\n        try\n        {\n            CommitLog.instance.add(rm);\n        }\n        catch (MutationExceededMaxSizeException e)\n        {\n            Assert.assertEquals(cnt + 1, CommitLog.instance.metrics.oversizedMutations.getCount());\n            throw e;\n        }\n        throw new AssertionError(\"mutation larger than limit was accepted\");\n    }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":478,"status":"M"}],"commitId":"f9b7c1e6984f5b81aae1e3a2191d4e9599db15ae","commitMessage":"@@@Allow CommitLogSegmentReader to optionally skip sync marker CRC checks\n\npatch by Caleb Rackliffe; reviewed by Josh McKenzie for CASSANDRA-16842\n\nCo-authored-by: Jordan West <jordanrw@gmail.com>\nCo-authored-by: Caleb Rackliffe <calebrackliffe@gmail.com>\nCo-authored-by: Marcus Eriksson <marcuse@apache.org>\n","date":"2021-08-26 04:22:32","modifiedFileCount":"2","status":"M","submitter":"Marcus Eriksson"}]
