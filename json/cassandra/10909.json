[{"authorTime":"2015-12-23 05:11:25","codes":[{"authorDate":"2014-09-02 00:54:46","commitOrder":3,"curCode":"    public void testCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddress.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddress.getByName(\"127.0.0.2\"));\n        CompactionManager.instance.performCleanup(cfs);\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","date":"2015-06-30 18:47:01","endLine":173,"groupId":"15068","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCleanupWithNewToken","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/d1/214cbd3148cc0fed97a5dc3e25ef194128772f.src","preCode":"    public void testCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddress.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddress.getByName(\"127.0.0.2\"));\n        CompactionManager.instance.performCleanup(cfs);\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/CleanupTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"NB"},{"authorDate":"2015-12-23 05:11:25","commitOrder":3,"curCode":"    public void testuserDefinedCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddress.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddress.getByName(\"127.0.0.2\"));\n\n        for(SSTableReader r: cfs.getLiveSSTables())\n            CompactionManager.instance.forceUserDefinedCleanup(r.getFilename());\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","date":"2015-12-23 05:11:25","endLine":200,"groupId":"15068","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testuserDefinedCleanupWithNewToken","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c1/5bdb490f05be94a977f4aff5d113830d18ad25.src","preCode":"    public void testuserDefinedCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddress.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddress.getByName(\"127.0.0.2\"));\n\n        for(SSTableReader r: cfs.getLiveSSTables())\n            CompactionManager.instance.forceUserDefinedCleanup(r.getFilename());\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/CleanupTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"B"}],"commitId":"cae395026af3f82afbbee6d2ab090f985ee006d3","commitMessage":"@@@Add forceUserDefinedCleanup to allow more flexible cleanup\n\npatch by jeffj; reviewed by yukim for CASSANDRA-10708\n","date":"2015-12-23 05:11:25","modifiedFileCount":"3","status":"M","submitter":"Jeff Jirsa"},{"authorTime":"2015-12-23 05:11:25","codes":[{"authorDate":"2016-03-29 17:10:28","commitOrder":4,"curCode":"    public void testCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddress.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddress.getByName(\"127.0.0.2\"));\n        CompactionManager.instance.performCleanup(cfs, 2);\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","date":"2016-03-29 17:10:28","endLine":174,"groupId":"15068","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCleanupWithNewToken","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ab/d5a0473edb53c0b6004264ca198e62e20ae4b5.src","preCode":"    public void testCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddress.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddress.getByName(\"127.0.0.2\"));\n        CompactionManager.instance.performCleanup(cfs);\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/CleanupTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"},{"authorDate":"2015-12-23 05:11:25","commitOrder":4,"curCode":"    public void testuserDefinedCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddress.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddress.getByName(\"127.0.0.2\"));\n\n        for(SSTableReader r: cfs.getLiveSSTables())\n            CompactionManager.instance.forceUserDefinedCleanup(r.getFilename());\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","date":"2015-12-23 05:11:25","endLine":200,"groupId":"15068","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testuserDefinedCleanupWithNewToken","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c1/5bdb490f05be94a977f4aff5d113830d18ad25.src","preCode":"    public void testuserDefinedCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddress.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddress.getByName(\"127.0.0.2\"));\n\n        for(SSTableReader r: cfs.getLiveSSTables())\n            CompactionManager.instance.forceUserDefinedCleanup(r.getFilename());\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/CleanupTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"N"}],"commitId":"f04224707d29544228e791f0b532a9969da2820b","commitMessage":"@@@Merge branch 'cassandra-3.5' into trunk\n","date":"2016-03-29 17:10:28","modifiedFileCount":"11","status":"M","submitter":"Marcus Eriksson"},{"authorTime":"2017-11-10 00:33:48","codes":[{"authorDate":"2017-11-10 00:33:48","commitOrder":5,"curCode":"    public void testCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddressAndPort.getByName(\"127.0.0.2\"));\n        CompactionManager.instance.performCleanup(cfs, 2);\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","date":"2018-01-26 03:32:24","endLine":206,"groupId":"10909","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCleanupWithNewToken","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a0/96c781ad03f5a4a2a5f6b9f240f98bd327f49a.src","preCode":"    public void testCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddress.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddress.getByName(\"127.0.0.2\"));\n        CompactionManager.instance.performCleanup(cfs, 2);\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/CleanupTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"},{"authorDate":"2017-11-10 00:33:48","commitOrder":5,"curCode":"    public void testuserDefinedCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        for(SSTableReader r: cfs.getLiveSSTables())\n            CompactionManager.instance.forceUserDefinedCleanup(r.getFilename());\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","date":"2018-01-26 03:32:24","endLine":280,"groupId":"10909","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testuserDefinedCleanupWithNewToken","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a0/96c781ad03f5a4a2a5f6b9f240f98bd327f49a.src","preCode":"    public void testuserDefinedCleanupWithNewToken() throws ExecutionException, InterruptedException, UnknownHostException\n    {\n        StorageService.instance.getTokenMetadata().clearUnsafe();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1);\n\n        \r\n        fillCF(cfs, \"val\", LOOPS);\n\n        assertEquals(LOOPS, Util.getAll(Util.cmd(cfs).build()).size());\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        byte[] tk1 = new byte[1], tk2 = new byte[1];\n        tk1[0] = 2;\n        tk2[0] = 1;\n        tmd.updateNormalToken(new BytesToken(tk1), InetAddress.getByName(\"127.0.0.1\"));\n        tmd.updateNormalToken(new BytesToken(tk2), InetAddress.getByName(\"127.0.0.2\"));\n\n        for(SSTableReader r: cfs.getLiveSSTables())\n            CompactionManager.instance.forceUserDefinedCleanup(r.getFilename());\n\n        assertEquals(0, Util.getAll(Util.cmd(cfs).build()).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/CleanupTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"}],"commitId":"59b5b6bef0fa76bf5740b688fcd4d9cf525760d0","commitMessage":"@@@Allow storage port to be configurable per node\n\nPatch by Ariel Weisberg; Reviewed by Jason Brown for CASSANDRA-7544\n","date":"2018-01-26 03:32:24","modifiedFileCount":"308","status":"M","submitter":"Ariel Weisberg"}]
