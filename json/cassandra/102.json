[{"authorTime":"2018-08-24 20:41:09","codes":[{"authorDate":"2018-08-24 20:41:09","commitOrder":1,"curCode":"    public void testOrderedReplay() throws IOException\n    {\n        File f = generateQueries(100, true);\n        int queryCount = 0;\n        try (ChronicleQueue queue = ChronicleQueueBuilder.single(f).build();\n             FQLQueryIterator iter = new FQLQueryIterator(queue.createTailer(), 101))\n        {\n            long last = -1;\n            while (iter.hasNext())\n            {\n                FQLQuery q = iter.next();\n                assertTrue(q.queryStartTime >= last);\n                last = q.queryStartTime;\n                queryCount++;\n            }\n        }\n        assertEquals(100, queryCount);\n    }\n","date":"2018-09-01 15:59:21","endLine":86,"groupId":"17952","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOrderedReplay","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/61/c8aa0e92149e12444cef2a86211eb1a914430e.src","preCode":"    public void testOrderedReplay() throws IOException\n    {\n        File f = generateQueries(100, true);\n        int queryCount = 0;\n        try (ChronicleQueue queue = ChronicleQueueBuilder.single(f).build();\n             FQLQueryIterator iter = new FQLQueryIterator(queue.createTailer(), 101))\n        {\n            long last = -1;\n            while (iter.hasNext())\n            {\n                FQLQuery q = iter.next();\n                assertTrue(q.queryStartTime >= last);\n                last = q.queryStartTime;\n                queryCount++;\n            }\n        }\n        assertEquals(100, queryCount);\n    }\n","realPath":"tools/fqltool/test/unit/org/apache/cassandra/fqltool/FQLReplayTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2018-08-24 20:41:09","commitOrder":1,"curCode":"    public void testQueryIterator() throws IOException\n    {\n        File f = generateQueries(100, false);\n        int queryCount = 0;\n        try (ChronicleQueue queue = ChronicleQueueBuilder.single(f).build();\n             FQLQueryIterator iter = new FQLQueryIterator(queue.createTailer(), 1))\n        {\n            long last = -1;\n            while (iter.hasNext())\n            {\n                FQLQuery q = iter.next();\n                assertTrue(q.queryStartTime >= last);\n                last = q.queryStartTime;\n                queryCount++;\n            }\n        }\n        assertEquals(100, queryCount);\n    }\n","date":"2018-09-01 15:59:21","endLine":106,"groupId":"17952","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/61/c8aa0e92149e12444cef2a86211eb1a914430e.src","preCode":"    public void testQueryIterator() throws IOException\n    {\n        File f = generateQueries(100, false);\n        int queryCount = 0;\n        try (ChronicleQueue queue = ChronicleQueueBuilder.single(f).build();\n             FQLQueryIterator iter = new FQLQueryIterator(queue.createTailer(), 1))\n        {\n            long last = -1;\n            while (iter.hasNext())\n            {\n                FQLQuery q = iter.next();\n                assertTrue(q.queryStartTime >= last);\n                last = q.queryStartTime;\n                queryCount++;\n            }\n        }\n        assertEquals(100, queryCount);\n    }\n","realPath":"tools/fqltool/test/unit/org/apache/cassandra/fqltool/FQLReplayTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"}],"commitId":"f83bd5ac2bbc6755213a6ad0675e7e5400c79670","commitMessage":"@@@Add fqltool compare\n\nPatch by marcuse; reviewed by Jason Brown and Dinesh Joshi for CASSANDRA-14619\n","date":"2018-09-01 15:59:21","modifiedFileCount":"0","status":"B","submitter":"Marcus Eriksson"},{"authorTime":"2021-01-22 19:41:42","codes":[{"authorDate":"2021-01-22 19:41:42","commitOrder":2,"curCode":"    public void testOrderedReplay() throws IOException\n    {\n        File f = generateQueries(100, true);\n        int queryCount = 0;\n        try (ChronicleQueue queue = SingleChronicleQueueBuilder.single(f).build();\n             FQLQueryIterator iter = new FQLQueryIterator(queue.createTailer(), 101))\n        {\n            long last = -1;\n            while (iter.hasNext())\n            {\n                FQLQuery q = iter.next();\n                assertTrue(q.queryStartTime >= last);\n                last = q.queryStartTime;\n                queryCount++;\n            }\n        }\n        assertEquals(100, queryCount);\n    }\n","date":"2021-01-22 19:41:42","endLine":91,"groupId":"102","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testOrderedReplay","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/89/4bfc40dad8402e2d819941f9feb29475146791.src","preCode":"    public void testOrderedReplay() throws IOException\n    {\n        File f = generateQueries(100, true);\n        int queryCount = 0;\n        try (ChronicleQueue queue = ChronicleQueueBuilder.single(f).build();\n             FQLQueryIterator iter = new FQLQueryIterator(queue.createTailer(), 101))\n        {\n            long last = -1;\n            while (iter.hasNext())\n            {\n                FQLQuery q = iter.next();\n                assertTrue(q.queryStartTime >= last);\n                last = q.queryStartTime;\n                queryCount++;\n            }\n        }\n        assertEquals(100, queryCount);\n    }\n","realPath":"tools/fqltool/test/unit/org/apache/cassandra/fqltool/FQLReplayTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2021-01-22 19:41:42","commitOrder":2,"curCode":"    public void testQueryIterator() throws IOException\n    {\n        File f = generateQueries(100, false);\n        int queryCount = 0;\n        try (ChronicleQueue queue = SingleChronicleQueueBuilder.single(f).build();\n             FQLQueryIterator iter = new FQLQueryIterator(queue.createTailer(), 1))\n        {\n            long last = -1;\n            while (iter.hasNext())\n            {\n                FQLQuery q = iter.next();\n                assertTrue(q.queryStartTime >= last);\n                last = q.queryStartTime;\n                queryCount++;\n            }\n        }\n        assertEquals(100, queryCount);\n    }\n","date":"2021-01-22 19:41:42","endLine":111,"groupId":"102","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testQueryIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/89/4bfc40dad8402e2d819941f9feb29475146791.src","preCode":"    public void testQueryIterator() throws IOException\n    {\n        File f = generateQueries(100, false);\n        int queryCount = 0;\n        try (ChronicleQueue queue = ChronicleQueueBuilder.single(f).build();\n             FQLQueryIterator iter = new FQLQueryIterator(queue.createTailer(), 1))\n        {\n            long last = -1;\n            while (iter.hasNext())\n            {\n                FQLQuery q = iter.next();\n                assertTrue(q.queryStartTime >= last);\n                last = q.queryStartTime;\n                queryCount++;\n            }\n        }\n        assertEquals(100, queryCount);\n    }\n","realPath":"tools/fqltool/test/unit/org/apache/cassandra/fqltool/FQLReplayTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"07167c95e3fc6616c313877ccd20eecbb42ef4c0","commitMessage":"@@@Ninja: fix fqltool tests (CASSANDRA-16384 follow up)\n","date":"2021-01-22 19:41:42","modifiedFileCount":"2","status":"M","submitter":"Sam Tunnicliffe"}]
