[{"authorTime":"2014-09-07 22:32:36","codes":[{"authorDate":"2014-08-04 20:28:58","commitOrder":4,"curCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 2)\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new ExtremeFactory(min, max, shape, scale);\n            } catch (Exception e)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            }\n        }\n","date":"2014-08-04 20:28:58","endLine":245,"groupId":"10694","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getFactory","params":"(List<String>params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b0/1e55aa57e5131136af5afae0667d23d0dbcc30.src","preCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 2)\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new ExtremeFactory(min, max, shape, scale);\n            } catch (Exception e)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            }\n        }\n","realPath":"tools/stress/src/org/apache/cassandra/stress/settings/OptionDistribution.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"NB"},{"authorDate":"2014-09-07 22:32:36","commitOrder":4,"curCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 3)\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                final int quantas = Integer.parseInt(params.get(2));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new QuantizedExtremeFactory(min, max, shape, scale, quantas);\n            } catch (Exception _)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            }\n        }\n","date":"2014-09-07 22:32:36","endLine":291,"groupId":"25295","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getFactory","params":"(List<String>params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/fd/307e9d4b9caedca2477fbe22372934f3390f8f.src","preCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 3)\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                final int quantas = Integer.parseInt(params.get(2));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new QuantizedExtremeFactory(min, max, shape, scale, quantas);\n            } catch (Exception _)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            }\n        }\n","realPath":"tools/stress/src/org/apache/cassandra/stress/settings/OptionDistribution.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"B"}],"commitId":"b170b3caa216f9dd84070bc0edeb1be1a13e7596","commitMessage":"@@@Merge branch 'cassandra-2.1' into trunk\n\nConflicts:\n\ttools/stress/src/org/apache/cassandra/stress/StressAction.java\n\ttools/stress/src/org/apache/cassandra/stress/settings/SettingsCommand.java\n","date":"2014-09-07 22:32:36","modifiedFileCount":"45","status":"M","submitter":"Benedict Elliott Smith"},{"authorTime":"2014-09-13 01:16:47","codes":[{"authorDate":"2014-08-04 20:28:58","commitOrder":5,"curCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 2)\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new ExtremeFactory(min, max, shape, scale);\n            } catch (Exception e)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            }\n        }\n","date":"2014-08-04 20:28:58","endLine":245,"groupId":"10694","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getFactory","params":"(List<String>params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b0/1e55aa57e5131136af5afae0667d23d0dbcc30.src","preCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 2)\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new ExtremeFactory(min, max, shape, scale);\n            } catch (Exception e)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            }\n        }\n","realPath":"tools/stress/src/org/apache/cassandra/stress/settings/OptionDistribution.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"N"},{"authorDate":"2014-09-13 01:16:47","commitOrder":5,"curCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 3)\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                final int quantas = Integer.parseInt(params.get(2));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new QuantizedExtremeFactory(min, max, shape, scale, quantas);\n            } catch (Exception e)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            }\n        }\n","date":"2014-09-13 01:16:47","endLine":291,"groupId":"25295","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getFactory","params":"(List<String>params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/6b/b55ed0cac5dbe51ffd4dcae8fee941b5a32ab8.src","preCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 3)\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                final int quantas = Integer.parseInt(params.get(2));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new QuantizedExtremeFactory(min, max, shape, scale, quantas);\n            } catch (Exception _)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            }\n        }\n","realPath":"tools/stress/src/org/apache/cassandra/stress/settings/OptionDistribution.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"M"}],"commitId":"314b1f177063a314ccba219c4406ad6df529dc4a","commitMessage":"@@@Don't use _ as a reference\n","date":"2014-09-13 01:16:47","modifiedFileCount":"1","status":"M","submitter":"Brandon Williams"},{"authorTime":"2015-03-10 22:26:30","codes":[{"authorDate":"2015-03-10 22:26:30","commitOrder":6,"curCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 2)\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new ExtremeFactory(min, max, shape, scale);\n            } catch (Exception ignore)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            }\n        }\n","date":"2015-03-10 22:26:30","endLine":270,"groupId":"10694","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getFactory","params":"(List<String>params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/71/86efb9676909b5f94716a482d9bf190e620b50.src","preCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 2)\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new ExtremeFactory(min, max, shape, scale);\n            } catch (Exception e)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            }\n        }\n","realPath":"tools/stress/src/org/apache/cassandra/stress/settings/OptionDistribution.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":251,"status":"M"},{"authorDate":"2015-03-10 22:26:30","commitOrder":6,"curCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 3)\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                final int quantas = Integer.parseInt(params.get(2));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new QuantizedExtremeFactory(min, max, shape, scale, quantas);\n            } catch (Exception ignore)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            }\n        }\n","date":"2015-03-10 22:26:30","endLine":296,"groupId":"25295","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getFactory","params":"(List<String>params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/71/86efb9676909b5f94716a482d9bf190e620b50.src","preCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 3)\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                final int quantas = Integer.parseInt(params.get(2));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new QuantizedExtremeFactory(min, max, shape, scale, quantas);\n            } catch (Exception e)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            }\n        }\n","realPath":"tools/stress/src/org/apache/cassandra/stress/settings/OptionDistribution.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"M"}],"commitId":"a0586f69291af79079db0f5cc495806a28fca7a6","commitMessage":"@@@Merge branch 'cassandra-2.1' into trunk\n\nConflicts:\n\ttools/stress/src/org/apache/cassandra/stress/settings/OptionDistribution.java\n","date":"2015-03-10 22:26:30","modifiedFileCount":"21","status":"M","submitter":"Benedict Elliott Smith"},{"authorTime":"2015-03-24 21:42:53","codes":[{"authorDate":"2015-03-24 21:42:53","commitOrder":7,"curCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 2)\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                if (min == max)\n                    return new FixedFactory(min);\n                final double shape = Double.parseDouble(params.get(1));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new ExtremeFactory(min, max, shape, scale);\n            } catch (Exception ignore)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            }\n        }\n","date":"2015-03-24 21:42:53","endLine":276,"groupId":"1150","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getFactory","params":"(List<String>params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/71/3f5a67a5157d5da845389b01d590dc7328a511.src","preCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 2)\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new ExtremeFactory(min, max, shape, scale);\n            } catch (Exception ignore)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for extreme (Weibull) distribution: \" + params);\n            }\n        }\n","realPath":"tools/stress/src/org/apache/cassandra/stress/settings/OptionDistribution.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"M"},{"authorDate":"2015-03-24 21:42:53","commitOrder":7,"curCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 3)\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                final int quantas = Integer.parseInt(params.get(2));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                if (min == max)\n                    return new FixedFactory(min);\n                return new QuantizedExtremeFactory(min, max, shape, scale, quantas);\n            } catch (Exception ignore)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            }\n        }\n","date":"2015-03-24 21:42:53","endLine":304,"groupId":"1150","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getFactory","params":"(List<String>params)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/71/3f5a67a5157d5da845389b01d590dc7328a511.src","preCode":"        public DistributionFactory getFactory(List<String> params)\n        {\n            if (params.size() != 3)\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            try\n            {\n                String[] bounds = params.get(0).split(\"\\\\.\\\\.+\");\n                final long min = parseLong(bounds[0]);\n                final long max = parseLong(bounds[1]);\n                final double shape = Double.parseDouble(params.get(1));\n                final int quantas = Integer.parseInt(params.get(2));\n                WeibullDistribution findBounds = new WeibullDistribution(shape, 1d);\n                \r\n                \r\n                final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d/(max-min)));\n                return new QuantizedExtremeFactory(min, max, shape, scale, quantas);\n            } catch (Exception ignore)\n            {\n                throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params);\n            }\n        }\n","realPath":"tools/stress/src/org/apache/cassandra/stress/settings/OptionDistribution.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"}],"commitId":"6ad51477b079f9c7786f2a8e7da50a009af55b32","commitMessage":"@@@Merge branch 'cassandra-2.1' into trunk\n","date":"2015-03-24 21:42:53","modifiedFileCount":"1","status":"M","submitter":"Benedict Elliott Smith"}]
