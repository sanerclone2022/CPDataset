[{"authorTime":"2017-03-03 05:46:13","codes":[{"authorDate":"2017-03-03 05:46:13","commitOrder":1,"curCode":"    public void idealCLWriteResponeHandlerWorks() throws Throwable\n    {\n        long startingCount = ks.metric.idealCLWriteLatency.latency.getCount();\n        AbstractWriteResponseHandler awr = createWriteResponseHandler(ConsistencyLevel.LOCAL_QUORUM, ConsistencyLevel.ALL);\n\n        \r\n        awr.response(createDummyMessage(0));\n        awr.response(createDummyMessage(1));\n        awr.response(createDummyMessage(2));\n        \r\n        awr.response(createDummyMessage(3));\n        awr.response(createDummyMessage(4));\n        awr.response(createDummyMessage(5));\n\n        assertEquals(0,  ks.metric.writeFailedIdealCL.getCount());\n        assertEquals(startingCount + 1, ks.metric.idealCLWriteLatency.latency.getCount());\n    }\n","date":"2017-03-31 05:01:20","endLine":190,"groupId":"3997","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"idealCLWriteResponeHandlerWorks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/81/5dbf62fe1015a0a5216f310284e1e45343ffd7.src","preCode":"    public void idealCLWriteResponeHandlerWorks() throws Throwable\n    {\n        long startingCount = ks.metric.idealCLWriteLatency.latency.getCount();\n        AbstractWriteResponseHandler awr = createWriteResponseHandler(ConsistencyLevel.LOCAL_QUORUM, ConsistencyLevel.ALL);\n\n        \r\n        awr.response(createDummyMessage(0));\n        awr.response(createDummyMessage(1));\n        awr.response(createDummyMessage(2));\n        \r\n        awr.response(createDummyMessage(3));\n        awr.response(createDummyMessage(4));\n        awr.response(createDummyMessage(5));\n\n        assertEquals(0,  ks.metric.writeFailedIdealCL.getCount());\n        assertEquals(startingCount + 1, ks.metric.idealCLWriteLatency.latency.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/WriteResponseHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"},{"authorDate":"2017-03-03 05:46:13","commitOrder":1,"curCode":"    public void idealCLDatacenterWriteResponeHandlerWorks() throws Throwable\n    {\n        long startingCount = ks.metric.idealCLWriteLatency.latency.getCount();\n        AbstractWriteResponseHandler awr = createWriteResponseHandler(ConsistencyLevel.ONE, ConsistencyLevel.LOCAL_QUORUM);\n\n        \r\n        awr.response(createDummyMessage(0));\n        awr.response(createDummyMessage(1));\n        awr.response(createDummyMessage(2));\n        \r\n        awr.response(createDummyMessage(3));\n        awr.response(createDummyMessage(4));\n        awr.response(createDummyMessage(5));\n\n        assertEquals(0,  ks.metric.writeFailedIdealCL.getCount());\n        assertEquals(startingCount + 1, ks.metric.idealCLWriteLatency.latency.getCount());\n    }\n","date":"2017-03-31 05:01:20","endLine":213,"groupId":"3997","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"idealCLDatacenterWriteResponeHandlerWorks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/81/5dbf62fe1015a0a5216f310284e1e45343ffd7.src","preCode":"    public void idealCLDatacenterWriteResponeHandlerWorks() throws Throwable\n    {\n        long startingCount = ks.metric.idealCLWriteLatency.latency.getCount();\n        AbstractWriteResponseHandler awr = createWriteResponseHandler(ConsistencyLevel.ONE, ConsistencyLevel.LOCAL_QUORUM);\n\n        \r\n        awr.response(createDummyMessage(0));\n        awr.response(createDummyMessage(1));\n        awr.response(createDummyMessage(2));\n        \r\n        awr.response(createDummyMessage(3));\n        awr.response(createDummyMessage(4));\n        awr.response(createDummyMessage(5));\n\n        assertEquals(0,  ks.metric.writeFailedIdealCL.getCount());\n        assertEquals(startingCount + 1, ks.metric.idealCLWriteLatency.latency.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/WriteResponseHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"B"}],"commitId":"6f647aaa0df6f90ee298d372e624c9e3c1ae937e","commitMessage":"@@@Make it possible to monitor an ideal consistency level separate from actual consistency level\n\nPatch by Ariel Weisberg; Reviewed by Jason Brown for CASSANDRA-13289\n","date":"2017-03-31 05:01:20","modifiedFileCount":"11","status":"B","submitter":"Ariel Weisberg"},{"authorTime":"2019-06-12 23:26:54","codes":[{"authorDate":"2019-06-12 23:26:54","commitOrder":2,"curCode":"    public void idealCLWriteResponeHandlerWorks() throws Throwable\n    {\n        long startingCount = ks.metric.idealCLWriteLatency.latency.getCount();\n        AbstractWriteResponseHandler awr = createWriteResponseHandler(ConsistencyLevel.LOCAL_QUORUM, ConsistencyLevel.ALL);\n\n        \r\n        awr.onResponse(createDummyMessage(0));\n        awr.onResponse(createDummyMessage(1));\n        awr.onResponse(createDummyMessage(2));\n        \r\n        awr.onResponse(createDummyMessage(3));\n        awr.onResponse(createDummyMessage(4));\n        awr.onResponse(createDummyMessage(5));\n\n        assertEquals(0,  ks.metric.writeFailedIdealCL.getCount());\n        assertEquals(startingCount + 1, ks.metric.idealCLWriteLatency.latency.getCount());\n    }\n","date":"2019-06-12 23:26:54","endLine":187,"groupId":"101425","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"idealCLWriteResponeHandlerWorks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f0/6b706c68f506e9697e2fcd84e2c409fdcb66aa.src","preCode":"    public void idealCLWriteResponeHandlerWorks() throws Throwable\n    {\n        long startingCount = ks.metric.idealCLWriteLatency.latency.getCount();\n        AbstractWriteResponseHandler awr = createWriteResponseHandler(ConsistencyLevel.LOCAL_QUORUM, ConsistencyLevel.ALL);\n\n        \r\n        awr.response(createDummyMessage(0));\n        awr.response(createDummyMessage(1));\n        awr.response(createDummyMessage(2));\n        \r\n        awr.response(createDummyMessage(3));\n        awr.response(createDummyMessage(4));\n        awr.response(createDummyMessage(5));\n\n        assertEquals(0,  ks.metric.writeFailedIdealCL.getCount());\n        assertEquals(startingCount + 1, ks.metric.idealCLWriteLatency.latency.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/WriteResponseHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2019-06-12 23:26:54","commitOrder":2,"curCode":"    public void idealCLDatacenterWriteResponeHandlerWorks() throws Throwable\n    {\n        long startingCount = ks.metric.idealCLWriteLatency.latency.getCount();\n        AbstractWriteResponseHandler awr = createWriteResponseHandler(ConsistencyLevel.ONE, ConsistencyLevel.LOCAL_QUORUM);\n\n        \r\n        awr.onResponse(createDummyMessage(0));\n        awr.onResponse(createDummyMessage(1));\n        awr.onResponse(createDummyMessage(2));\n        \r\n        awr.onResponse(createDummyMessage(3));\n        awr.onResponse(createDummyMessage(4));\n        awr.onResponse(createDummyMessage(5));\n\n        assertEquals(0,  ks.metric.writeFailedIdealCL.getCount());\n        assertEquals(startingCount + 1, ks.metric.idealCLWriteLatency.latency.getCount());\n    }\n","date":"2019-06-12 23:26:54","endLine":210,"groupId":"101425","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"idealCLDatacenterWriteResponeHandlerWorks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f0/6b706c68f506e9697e2fcd84e2c409fdcb66aa.src","preCode":"    public void idealCLDatacenterWriteResponeHandlerWorks() throws Throwable\n    {\n        long startingCount = ks.metric.idealCLWriteLatency.latency.getCount();\n        AbstractWriteResponseHandler awr = createWriteResponseHandler(ConsistencyLevel.ONE, ConsistencyLevel.LOCAL_QUORUM);\n\n        \r\n        awr.response(createDummyMessage(0));\n        awr.response(createDummyMessage(1));\n        awr.response(createDummyMessage(2));\n        \r\n        awr.response(createDummyMessage(3));\n        awr.response(createDummyMessage(4));\n        awr.response(createDummyMessage(5));\n\n        assertEquals(0,  ks.metric.writeFailedIdealCL.getCount());\n        assertEquals(startingCount + 1, ks.metric.idealCLWriteLatency.latency.getCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/WriteResponseHandlerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"}],"commitId":"310a48efcfdc0fb77fbd5fd6e734bf17667f617d","commitMessage":"@@@Rewrite the internode messaging subsystem\n\npatch by Aleksey Yeschenko and Benedict Elliott Smith; reviewed by Alex\nPetrov.  Aleksey Yeschenko.  and Benedict Elliott Smith for CASSANDRA-15066\n\nCo-authored-by: Aleksey Yeschenko <aleksey@apache.org>\nCo-authored-by: Benedict Elliott Smith <benedict@apache.org>\n","date":"2019-06-12 23:26:54","modifiedFileCount":"253","status":"M","submitter":"Benedict Elliott Smith"}]
