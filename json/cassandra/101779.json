[{"authorTime":"2015-06-25 00:13:15","codes":[{"authorDate":"2015-06-25 00:13:15","commitOrder":1,"curCode":"    public void testINWithDuplicateValue() throws Throwable\n    {\n        for (String compactOption : new String[] { \"\", \" WITH COMPACT STORAGE\" })\n        {\n            createTable(\"CREATE TABLE %s (k1 int, k2 int, v int, PRIMARY KEY (k1, k2))\" + compactOption);\n            execute(\"INSERT INTO %s (k1,  k2, v) VALUES (?, ?, ?)\", 1, 1, 1);\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?)\", 1, 1),\n                       row(1, 1, 1));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?) AND k2 IN (?, ?)\", 1, 1, 1, 1),\n                       row(1, 1, 1));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 = ? AND k2 IN (?, ?)\", 1, 1, 1),\n                       row(1, 1, 1));\n        }\n    }\n","date":"2015-06-25 00:13:15","endLine":430,"groupId":"25192","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testINWithDuplicateValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/fd/43a517d53e6bd757f5533ce072b16e5e888d18.src","preCode":"    public void testINWithDuplicateValue() throws Throwable\n    {\n        for (String compactOption : new String[] { \"\", \" WITH COMPACT STORAGE\" })\n        {\n            createTable(\"CREATE TABLE %s (k1 int, k2 int, v int, PRIMARY KEY (k1, k2))\" + compactOption);\n            execute(\"INSERT INTO %s (k1,  k2, v) VALUES (?, ?, ?)\", 1, 1, 1);\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?)\", 1, 1),\n                       row(1, 1, 1));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?) AND k2 IN (?, ?)\", 1, 1, 1, 1),\n                       row(1, 1, 1));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 = ? AND k2 IN (?, ?)\", 1, 1, 1),\n                       row(1, 1, 1));\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectSingleColumnRelationTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"B"},{"authorDate":"2015-06-25 00:13:15","commitOrder":1,"curCode":"    public void testSingleClustering() throws Throwable\n    {\n        for (String compactOption : new String[]{\"\", \" WITH COMPACT STORAGE\"})\n        {\n            createTable(\"CREATE TABLE %s (a int, b int, c int, PRIMARY KEY (a, b))\" + compactOption);\n\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 0, 0);\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 1, 0);\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 2, 0);\n\n            \r\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 1),\n                    row(0, 1, 0)\n            );\n\n            \r\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = ?\", 0, tuple(1)),\n                    row(0, 1, 0)\n            );\n\n            assertEmpty(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 3));\n\n            \r\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?)\", 0, 0),\n                    row(0, 1, 0),\n                    row(0, 2, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) >= (?)\", 0, 1),\n                    row(0, 1, 0),\n                    row(0, 2, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) < (?)\", 0, 2),\n                    row(0, 0, 0),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) <= (?)\", 0, 1),\n                    row(0, 0, 0),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?) AND (b) < (?)\", 0, 0, 2),\n                    row(0, 1, 0)\n            );\n        }\n    }\n","date":"2015-06-25 00:13:15","endLine":358,"groupId":"32143","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSingleClustering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/55/2e39eb7a86541a9c0c318472172e953d8f8365.src","preCode":"    public void testSingleClustering() throws Throwable\n    {\n        for (String compactOption : new String[]{\"\", \" WITH COMPACT STORAGE\"})\n        {\n            createTable(\"CREATE TABLE %s (a int, b int, c int, PRIMARY KEY (a, b))\" + compactOption);\n\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 0, 0);\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 1, 0);\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 2, 0);\n\n            \r\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 1),\n                    row(0, 1, 0)\n            );\n\n            \r\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = ?\", 0, tuple(1)),\n                    row(0, 1, 0)\n            );\n\n            assertEmpty(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 3));\n\n            \r\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?)\", 0, 0),\n                    row(0, 1, 0),\n                    row(0, 2, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) >= (?)\", 0, 1),\n                    row(0, 1, 0),\n                    row(0, 2, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) < (?)\", 0, 2),\n                    row(0, 0, 0),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) <= (?)\", 0, 1),\n                    row(0, 0, 0),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?) AND (b) < (?)\", 0, 0, 2),\n                    row(0, 1, 0)\n            );\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectMultiColumnRelationTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"B"}],"commitId":"bc9b0be321b34c55366a61418b94e9bae6ddb26b","commitMessage":"@@@Merge branch 'cassandra-2.2' into trunk\n","date":"2015-06-25 00:13:15","modifiedFileCount":"16","status":"B","submitter":"Josh McKenzie"},{"authorTime":"2015-08-10 04:50:32","codes":[{"authorDate":"2015-06-25 00:13:15","commitOrder":2,"curCode":"    public void testINWithDuplicateValue() throws Throwable\n    {\n        for (String compactOption : new String[] { \"\", \" WITH COMPACT STORAGE\" })\n        {\n            createTable(\"CREATE TABLE %s (k1 int, k2 int, v int, PRIMARY KEY (k1, k2))\" + compactOption);\n            execute(\"INSERT INTO %s (k1,  k2, v) VALUES (?, ?, ?)\", 1, 1, 1);\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?)\", 1, 1),\n                       row(1, 1, 1));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?) AND k2 IN (?, ?)\", 1, 1, 1, 1),\n                       row(1, 1, 1));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 = ? AND k2 IN (?, ?)\", 1, 1, 1),\n                       row(1, 1, 1));\n        }\n    }\n","date":"2015-06-25 00:13:15","endLine":430,"groupId":"25192","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testINWithDuplicateValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/fd/43a517d53e6bd757f5533ce072b16e5e888d18.src","preCode":"    public void testINWithDuplicateValue() throws Throwable\n    {\n        for (String compactOption : new String[] { \"\", \" WITH COMPACT STORAGE\" })\n        {\n            createTable(\"CREATE TABLE %s (k1 int, k2 int, v int, PRIMARY KEY (k1, k2))\" + compactOption);\n            execute(\"INSERT INTO %s (k1,  k2, v) VALUES (?, ?, ?)\", 1, 1, 1);\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?)\", 1, 1),\n                       row(1, 1, 1));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?) AND k2 IN (?, ?)\", 1, 1, 1, 1),\n                       row(1, 1, 1));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 = ? AND k2 IN (?, ?)\", 1, 1, 1),\n                       row(1, 1, 1));\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectSingleColumnRelationTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"N"},{"authorDate":"2015-08-10 04:50:32","commitOrder":2,"curCode":"    public void testSingleClustering() throws Throwable\n    {\n        for (String compactOption : new String[]{\"\", \" WITH COMPACT STORAGE\"})\n        {\n            createTable(\"CREATE TABLE %s (a int, b int, c int, PRIMARY KEY (a, b))\" + compactOption);\n\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 0, 0);\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 1, 0);\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 2, 0);\n\n            \r\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 1),\n                    row(0, 1, 0)\n            );\n\n            \r\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = ?\", 0, tuple(1)),\n                    row(0, 1, 0)\n            );\n\n            assertEmpty(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 3));\n\n            \r\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?)\", 0, 0),\n                    row(0, 1, 0),\n                    row(0, 2, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) >= (?)\", 0, 1),\n                    row(0, 1, 0),\n                    row(0, 2, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) < (?)\", 0, 2),\n                    row(0, 0, 0),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) <= (?)\", 0, 1),\n                    row(0, 0, 0),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?) AND (b) < (?)\", 0, 0, 2),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?) AND b < ?\", 0, 0, 2),\n                       row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND b > ? AND (b) < (?)\", 0, 0, 2),\n                       row(0, 1, 0)\n            );\n        }\n    }\n","date":"2015-08-10 04:50:46","endLine":373,"groupId":"32143","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSingleClustering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/84/343a726d0e5b49f8f3f1786c4c6cda7291bb59.src","preCode":"    public void testSingleClustering() throws Throwable\n    {\n        for (String compactOption : new String[]{\"\", \" WITH COMPACT STORAGE\"})\n        {\n            createTable(\"CREATE TABLE %s (a int, b int, c int, PRIMARY KEY (a, b))\" + compactOption);\n\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 0, 0);\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 1, 0);\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 2, 0);\n\n            \r\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 1),\n                    row(0, 1, 0)\n            );\n\n            \r\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = ?\", 0, tuple(1)),\n                    row(0, 1, 0)\n            );\n\n            assertEmpty(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 3));\n\n            \r\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?)\", 0, 0),\n                    row(0, 1, 0),\n                    row(0, 2, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) >= (?)\", 0, 1),\n                    row(0, 1, 0),\n                    row(0, 2, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) < (?)\", 0, 2),\n                    row(0, 0, 0),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) <= (?)\", 0, 1),\n                    row(0, 0, 0),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?) AND (b) < (?)\", 0, 0, 2),\n                    row(0, 1, 0)\n            );\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectMultiColumnRelationTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"M"}],"commitId":"ba56b8221b5906633dc41155a6fc0a4a2b6571f7","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2015-08-10 04:50:46","modifiedFileCount":"4","status":"M","submitter":"blerer"},{"authorTime":"2017-10-17 17:17:41","codes":[{"authorDate":"2017-10-17 17:17:41","commitOrder":3,"curCode":"    public void testINWithDuplicateValue() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (k1 int, k2 int, v int, PRIMARY KEY (k1, k2))\");\n        execute(\"INSERT INTO %s (k1,  k2, v) VALUES (?, ?, ?)\", 1, 1, 1);\n\n        assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?)\", 1, 1),\n                   row(1, 1, 1));\n\n        assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?) AND k2 IN (?, ?)\", 1, 1, 1, 1),\n                   row(1, 1, 1));\n\n        assertRows(execute(\"SELECT * FROM %s WHERE k1 = ? AND k2 IN (?, ?)\", 1, 1, 1),\n                   row(1, 1, 1));\n    }\n","date":"2017-11-06 23:44:50","endLine":434,"groupId":"101779","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testINWithDuplicateValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/09/fd464a61bddb69a985e5538626f2d5cd0f0c64.src","preCode":"    public void testINWithDuplicateValue() throws Throwable\n    {\n        for (String compactOption : new String[] { \"\", \" WITH COMPACT STORAGE\" })\n        {\n            createTable(\"CREATE TABLE %s (k1 int, k2 int, v int, PRIMARY KEY (k1, k2))\" + compactOption);\n            execute(\"INSERT INTO %s (k1,  k2, v) VALUES (?, ?, ?)\", 1, 1, 1);\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?)\", 1, 1),\n                       row(1, 1, 1));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 IN (?, ?) AND k2 IN (?, ?)\", 1, 1, 1, 1),\n                       row(1, 1, 1));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE k1 = ? AND k2 IN (?, ?)\", 1, 1, 1),\n                       row(1, 1, 1));\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectSingleColumnRelationTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":421,"status":"M"},{"authorDate":"2017-10-17 17:17:41","commitOrder":3,"curCode":"    public void testSingleClustering() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, b int, c int, PRIMARY KEY (a, b))\");\n\n        execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 0, 0);\n        execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 1, 0);\n        execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 2, 0);\n\n        \r\n\n        assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 1),\n                   row(0, 1, 0)\n        );\n\n        \r\n        assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = ?\", 0, tuple(1)),\n                   row(0, 1, 0)\n        );\n\n        assertEmpty(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 3));\n\n        \r\n\n        assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?)\", 0, 0),\n                   row(0, 1, 0),\n                   row(0, 2, 0)\n        );\n\n        assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) >= (?)\", 0, 1),\n                   row(0, 1, 0),\n                   row(0, 2, 0)\n        );\n\n        assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) < (?)\", 0, 2),\n                   row(0, 0, 0),\n                   row(0, 1, 0)\n        );\n\n        assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) <= (?)\", 0, 1),\n                   row(0, 0, 0),\n                   row(0, 1, 0)\n        );\n\n        assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?) AND (b) < (?)\", 0, 0, 2),\n                   row(0, 1, 0)\n        );\n\n        assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?) AND b < ?\", 0, 0, 2),\n                   row(0, 1, 0)\n        );\n\n        assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND b > ? AND (b) < (?)\", 0, 0, 2),\n                   row(0, 1, 0)\n        );\n    }\n","date":"2017-11-06 23:44:50","endLine":365,"groupId":"101779","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSingleClustering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/52/a7f47d0309ea575977ea7375cf80531752a19a.src","preCode":"    public void testSingleClustering() throws Throwable\n    {\n        for (String compactOption : new String[]{\"\", \" WITH COMPACT STORAGE\"})\n        {\n            createTable(\"CREATE TABLE %s (a int, b int, c int, PRIMARY KEY (a, b))\" + compactOption);\n\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 0, 0);\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 1, 0);\n            execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\", 0, 2, 0);\n\n            \r\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 1),\n                    row(0, 1, 0)\n            );\n\n            \r\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = ?\", 0, tuple(1)),\n                    row(0, 1, 0)\n            );\n\n            assertEmpty(execute(\"SELECT * FROM %s WHERE a = ? AND (b) = (?)\", 0, 3));\n\n            \r\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?)\", 0, 0),\n                    row(0, 1, 0),\n                    row(0, 2, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) >= (?)\", 0, 1),\n                    row(0, 1, 0),\n                    row(0, 2, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) < (?)\", 0, 2),\n                    row(0, 0, 0),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) <= (?)\", 0, 1),\n                    row(0, 0, 0),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?) AND (b) < (?)\", 0, 0, 2),\n                    row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND (b) > (?) AND b < ?\", 0, 0, 2),\n                       row(0, 1, 0)\n            );\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = ? AND b > ? AND (b) < (?)\", 0, 0, 2),\n                       row(0, 1, 0)\n            );\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectMultiColumnRelationTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"M"}],"commitId":"07fbd8ee6042797aaade90357d625ba9d79c31e0","commitMessage":"@@@Disallow COMPACT STORAGE syntax.  avoid starting when compact tables are present\n\nPatch by Alex Petrov; reviewed by Sylvain Lebresne for CASSANDRA-10857","date":"2017-11-06 23:44:50","modifiedFileCount":"33","status":"M","submitter":"Alex Petrov"}]
