[{"authorTime":"2016-09-27 15:11:37","codes":[{"authorDate":"2016-09-27 15:11:37","commitOrder":3,"curCode":"    private void verify(int expectedRows, int minVal, int maxVal, boolean includePurgeable)\n    {\n        ReadCommand cmd = Util.cmd(getCurrentColumnFamilyStore()).build();\n        int foundRows = 0;\n        try (ReadExecutionController executionController = cmd.executionController();\n             UnfilteredPartitionIterator iterator =\n             includePurgeable ? cmd.queryStorage(getCurrentColumnFamilyStore(), executionController) :\n                                cmd.executeLocally(executionController))\n        {\n            while (iterator.hasNext())\n            {\n                try (UnfilteredRowIterator rowIter = iterator.next())\n                {\n                    if (!rowIter.partitionKey().equals(Util.dk(ByteBufferUtil.bytes(999)))) \r\n                    {\n                        while (rowIter.hasNext())\n                        {\n                            AbstractRow row = (AbstractRow) rowIter.next();\n                            for (int i = 0; i < row.clustering().size(); i++)\n                            {\n                                foundRows++;\n                                int val = ByteBufferUtil.toInt(row.clustering().get(i));\n                                assertTrue(\"val=\" + val, val >= minVal && val < maxVal);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        assertEquals(expectedRows, foundRows);\n    }\n","date":"2016-09-27 15:13:49","endLine":266,"groupId":"22095","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"verify","params":"(intexpectedRows@intminVal@intmaxVal@booleanincludePurgeable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ea/9f88a5a30586a24fee90084c4c49fb8ae34f4b.src","preCode":"    private void verify(int expectedRows, int minVal, int maxVal, boolean includePurgeable)\n    {\n        ReadCommand cmd = Util.cmd(getCurrentColumnFamilyStore()).build();\n        int foundRows = 0;\n        try (ReadExecutionController executionController = cmd.executionController();\n             UnfilteredPartitionIterator iterator =\n             includePurgeable ? cmd.queryStorage(getCurrentColumnFamilyStore(), executionController) :\n                                cmd.executeLocally(executionController))\n        {\n            while (iterator.hasNext())\n            {\n                try (UnfilteredRowIterator rowIter = iterator.next())\n                {\n                    if (!rowIter.partitionKey().equals(Util.dk(ByteBufferUtil.bytes(999)))) \r\n                    {\n                        while (rowIter.hasNext())\n                        {\n                            AbstractRow row = (AbstractRow) rowIter.next();\n                            for (int i = 0; i < row.clustering().size(); i++)\n                            {\n                                foundRows++;\n                                int val = ByteBufferUtil.toInt(row.clustering().get(i));\n                                assertTrue(\"val=\" + val, val >= minVal && val < maxVal);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        assertEquals(expectedRows, foundRows);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/RepairedDataTombstonesTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"MB"},{"authorDate":"2016-09-27 15:11:37","commitOrder":3,"curCode":"    private void verify2(int key, int expectedRows, int minVal, int maxVal, boolean includePurgeable)\n    {\n        ReadCommand cmd = Util.cmd(getCurrentColumnFamilyStore(), Util.dk(ByteBufferUtil.bytes(key))).build();\n        int foundRows = 0;\n        try (ReadExecutionController executionController = cmd.executionController();\n             UnfilteredPartitionIterator iterator =\n             includePurgeable ? cmd.queryStorage(getCurrentColumnFamilyStore(), executionController) :\n                                cmd.executeLocally(executionController))\n        {\n            while (iterator.hasNext())\n            {\n                try (UnfilteredRowIterator rowIter = iterator.next())\n                {\n                    while (rowIter.hasNext())\n                    {\n                        AbstractRow row = (AbstractRow) rowIter.next();\n                        for (int i = 0; i < row.clustering().size(); i++)\n                        {\n                            foundRows++;\n                            int val = ByteBufferUtil.toInt(row.clustering().get(i));\n                            assertTrue(\"val=\" + val, val >= minVal && val < maxVal);\n                        }\n                    }\n                }\n            }\n        }\n        assertEquals(expectedRows, foundRows);\n    }\n","date":"2016-09-27 15:13:49","endLine":305,"groupId":"22102","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verify2","params":"(intkey@intexpectedRows@intminVal@intmaxVal@booleanincludePurgeable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ea/9f88a5a30586a24fee90084c4c49fb8ae34f4b.src","preCode":"    private void verify2(int key, int expectedRows, int minVal, int maxVal, boolean includePurgeable)\n    {\n        ReadCommand cmd = Util.cmd(getCurrentColumnFamilyStore(), Util.dk(ByteBufferUtil.bytes(key))).build();\n        int foundRows = 0;\n        try (ReadExecutionController executionController = cmd.executionController();\n             UnfilteredPartitionIterator iterator =\n             includePurgeable ? cmd.queryStorage(getCurrentColumnFamilyStore(), executionController) :\n                                cmd.executeLocally(executionController))\n        {\n            while (iterator.hasNext())\n            {\n                try (UnfilteredRowIterator rowIter = iterator.next())\n                {\n                    while (rowIter.hasNext())\n                    {\n                        AbstractRow row = (AbstractRow) rowIter.next();\n                        for (int i = 0; i < row.clustering().size(); i++)\n                        {\n                            foundRows++;\n                            int val = ByteBufferUtil.toInt(row.clustering().get(i));\n                            assertTrue(\"val=\" + val, val >= minVal && val < maxVal);\n                        }\n                    }\n                }\n            }\n        }\n        assertEquals(expectedRows, foundRows);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/RepairedDataTombstonesTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"MB"}],"commitId":"5777013368fd549bf603d1a108bb2dad714c8b55","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2016-09-27 15:13:49","modifiedFileCount":"2","status":"M","submitter":"Marcus Eriksson"},{"authorTime":"2019-10-16 04:04:26","codes":[{"authorDate":"2019-10-16 04:04:26","commitOrder":4,"curCode":"    private void verify(int expectedRows, int minVal, int maxVal, boolean includePurgeable)\n    {\n        ReadCommand cmd = Util.cmd(getCurrentColumnFamilyStore()).build();\n        int foundRows = 0;\n        try (ReadExecutionController executionController = cmd.executionController();\n             UnfilteredPartitionIterator iterator =\n             includePurgeable ? cmd.queryStorage(getCurrentColumnFamilyStore(), executionController) :\n                                cmd.executeLocally(executionController))\n        {\n            while (iterator.hasNext())\n            {\n                try (UnfilteredRowIterator rowIter = iterator.next())\n                {\n                    if (!rowIter.partitionKey().equals(Util.dk(ByteBufferUtil.bytes(999)))) \r\n                    {\n                        while (rowIter.hasNext())\n                        {\n                            AbstractRow row = (AbstractRow) rowIter.next();\n                            for (int i = 0; i < row.clustering().size(); i++)\n                            {\n                                foundRows++;\n                                int val = ByteBufferUtil.toInt(row.clustering().bufferAt(i));\n                                assertTrue(\"val=\" + val, val >= minVal && val < maxVal);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        assertEquals(expectedRows, foundRows);\n    }\n","date":"2020-09-14 23:32:44","endLine":268,"groupId":"10508","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"verify","params":"(intexpectedRows@intminVal@intmaxVal@booleanincludePurgeable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/bb/272afe9f9c8fbff0eaa64bdde8070b4588af13.src","preCode":"    private void verify(int expectedRows, int minVal, int maxVal, boolean includePurgeable)\n    {\n        ReadCommand cmd = Util.cmd(getCurrentColumnFamilyStore()).build();\n        int foundRows = 0;\n        try (ReadExecutionController executionController = cmd.executionController();\n             UnfilteredPartitionIterator iterator =\n             includePurgeable ? cmd.queryStorage(getCurrentColumnFamilyStore(), executionController) :\n                                cmd.executeLocally(executionController))\n        {\n            while (iterator.hasNext())\n            {\n                try (UnfilteredRowIterator rowIter = iterator.next())\n                {\n                    if (!rowIter.partitionKey().equals(Util.dk(ByteBufferUtil.bytes(999)))) \r\n                    {\n                        while (rowIter.hasNext())\n                        {\n                            AbstractRow row = (AbstractRow) rowIter.next();\n                            for (int i = 0; i < row.clustering().size(); i++)\n                            {\n                                foundRows++;\n                                int val = ByteBufferUtil.toInt(row.clustering().get(i));\n                                assertTrue(\"val=\" + val, val >= minVal && val < maxVal);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        assertEquals(expectedRows, foundRows);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/RepairedDataTombstonesTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2019-10-16 04:04:26","commitOrder":4,"curCode":"    private void verify2(int key, int expectedRows, int minVal, int maxVal, boolean includePurgeable)\n    {\n        ReadCommand cmd = Util.cmd(getCurrentColumnFamilyStore(), Util.dk(ByteBufferUtil.bytes(key))).build();\n        int foundRows = 0;\n        try (ReadExecutionController executionController = cmd.executionController();\n             UnfilteredPartitionIterator iterator =\n             includePurgeable ? cmd.queryStorage(getCurrentColumnFamilyStore(), executionController) :\n                                cmd.executeLocally(executionController))\n        {\n            while (iterator.hasNext())\n            {\n                try (UnfilteredRowIterator rowIter = iterator.next())\n                {\n                    while (rowIter.hasNext())\n                    {\n                        AbstractRow row = (AbstractRow) rowIter.next();\n                        for (int i = 0; i < row.clustering().size(); i++)\n                        {\n                            foundRows++;\n                            int val = ByteBufferUtil.toInt(row.clustering().bufferAt(i));\n                            assertTrue(\"val=\" + val, val >= minVal && val < maxVal);\n                        }\n                    }\n                }\n            }\n        }\n        assertEquals(expectedRows, foundRows);\n    }\n","date":"2020-09-14 23:32:44","endLine":307,"groupId":"10508","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"verify2","params":"(intkey@intexpectedRows@intminVal@intmaxVal@booleanincludePurgeable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/bb/272afe9f9c8fbff0eaa64bdde8070b4588af13.src","preCode":"    private void verify2(int key, int expectedRows, int minVal, int maxVal, boolean includePurgeable)\n    {\n        ReadCommand cmd = Util.cmd(getCurrentColumnFamilyStore(), Util.dk(ByteBufferUtil.bytes(key))).build();\n        int foundRows = 0;\n        try (ReadExecutionController executionController = cmd.executionController();\n             UnfilteredPartitionIterator iterator =\n             includePurgeable ? cmd.queryStorage(getCurrentColumnFamilyStore(), executionController) :\n                                cmd.executeLocally(executionController))\n        {\n            while (iterator.hasNext())\n            {\n                try (UnfilteredRowIterator rowIter = iterator.next())\n                {\n                    while (rowIter.hasNext())\n                    {\n                        AbstractRow row = (AbstractRow) rowIter.next();\n                        for (int i = 0; i < row.clustering().size(); i++)\n                        {\n                            foundRows++;\n                            int val = ByteBufferUtil.toInt(row.clustering().get(i));\n                            assertTrue(\"val=\" + val, val >= minVal && val < maxVal);\n                        }\n                    }\n                }\n            }\n        }\n        assertEquals(expectedRows, foundRows);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/RepairedDataTombstonesTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"M"}],"commitId":"ccab496d2d37c86341d364dea6c27513fda27331","commitMessage":"@@@Add byte array backed cells\n\nPatch by Blake Eggleston; reviewed by Caleb Rackliffe and Marcus Eriksson for CASSANDRA-15393\n","date":"2020-09-14 23:32:44","modifiedFileCount":"278","status":"M","submitter":"Blake Eggleston"}]
