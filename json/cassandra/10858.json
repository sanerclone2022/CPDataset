[{"authorTime":"2017-12-09 02:30:27","codes":[{"authorDate":"2017-12-01 07:13:59","commitOrder":3,"curCode":"    private static void insertKeyAndFlush(String table, int key)\n    {\n        long timestamp = System.currentTimeMillis();\n        DecoratedKey dk = Util.dk(String.format(\"%03d\", key));\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(table);\n        new RowUpdateBuilder(cfs.metadata(), timestamp, dk.getKey())\n        .clustering(String.valueOf(key))\n        .add(\"val\", \"val\")\n        .build()\n        .applyUnsafe();\n        cfs.forceBlockingFlush();\n    }\n","date":"2017-12-01 07:19:24","endLine":143,"groupId":"16824","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"insertKeyAndFlush","params":"(Stringtable@intkey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b7/7589da21d242185c3038eec03897e91481e49e.src","preCode":"    private static void insertKeyAndFlush(String table, int key)\n    {\n        long timestamp = System.currentTimeMillis();\n        DecoratedKey dk = Util.dk(String.format(\"%03d\", key));\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(table);\n        new RowUpdateBuilder(cfs.metadata(), timestamp, dk.getKey())\n        .clustering(String.valueOf(key))\n        .add(\"val\", \"val\")\n        .build()\n        .applyUnsafe();\n        cfs.forceBlockingFlush();\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/AbstractCompactionStrategyTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"NB"},{"authorDate":"2017-12-09 02:30:27","commitOrder":3,"curCode":"    private static void createSSTableWithKey(String keyspace, String table, int key)\n    {\n        long timestamp = System.currentTimeMillis();\n        DecoratedKey dk = Util.dk(String.format(\"%04d\", key));\n        ColumnFamilyStore cfs = Keyspace.open(keyspace).getColumnFamilyStore(table);\n        new RowUpdateBuilder(cfs.metadata(), timestamp, dk.getKey())\n        .clustering(Integer.toString(key))\n        .add(\"val\", \"val\")\n        .build()\n        .applyUnsafe();\n        cfs.forceBlockingFlush();\n    }\n","date":"2017-12-09 02:32:52","endLine":299,"groupId":"424","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createSSTableWithKey","params":"(Stringkeyspace@Stringtable@intkey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c3/15fb9cc46a1e5b60063202c3057cc2c1e198ed.src","preCode":"    private static void createSSTableWithKey(String keyspace, String table, int key)\n    {\n        long timestamp = System.currentTimeMillis();\n        DecoratedKey dk = Util.dk(String.format(\"%04d\", key));\n        ColumnFamilyStore cfs = Keyspace.open(keyspace).getColumnFamilyStore(table);\n        new RowUpdateBuilder(cfs.metadata(), timestamp, dk.getKey())\n        .clustering(Integer.toString(key))\n        .add(\"val\", \"val\")\n        .build()\n        .applyUnsafe();\n        cfs.forceBlockingFlush();\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionStrategyManagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"B"}],"commitId":"29a0d1f82f965d6e13161c420396f4681ff4c725","commitMessage":"@@@Merge branch 'cassandra-3.11' into trunk\n","date":"2017-12-09 02:32:52","modifiedFileCount":"11","status":"M","submitter":"Paulo Motta"},{"authorTime":"2018-08-03 23:07:50","codes":[{"authorDate":"2017-12-01 07:13:59","commitOrder":4,"curCode":"    private static void insertKeyAndFlush(String table, int key)\n    {\n        long timestamp = System.currentTimeMillis();\n        DecoratedKey dk = Util.dk(String.format(\"%03d\", key));\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(table);\n        new RowUpdateBuilder(cfs.metadata(), timestamp, dk.getKey())\n        .clustering(String.valueOf(key))\n        .add(\"val\", \"val\")\n        .build()\n        .applyUnsafe();\n        cfs.forceBlockingFlush();\n    }\n","date":"2017-12-01 07:19:24","endLine":143,"groupId":"10858","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"insertKeyAndFlush","params":"(Stringtable@intkey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b7/7589da21d242185c3038eec03897e91481e49e.src","preCode":"    private static void insertKeyAndFlush(String table, int key)\n    {\n        long timestamp = System.currentTimeMillis();\n        DecoratedKey dk = Util.dk(String.format(\"%03d\", key));\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(table);\n        new RowUpdateBuilder(cfs.metadata(), timestamp, dk.getKey())\n        .clustering(String.valueOf(key))\n        .add(\"val\", \"val\")\n        .build()\n        .applyUnsafe();\n        cfs.forceBlockingFlush();\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/AbstractCompactionStrategyTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"N"},{"authorDate":"2018-08-03 23:07:50","commitOrder":4,"curCode":"    private static SSTableReader createSSTableWithKey(String keyspace, String table, int key)\n    {\n        long timestamp = System.currentTimeMillis();\n        DecoratedKey dk = Util.dk(String.format(\"%04d\", key));\n        ColumnFamilyStore cfs = Keyspace.open(keyspace).getColumnFamilyStore(table);\n        new RowUpdateBuilder(cfs.metadata(), timestamp, dk.getKey())\n        .clustering(Integer.toString(key))\n        .add(\"val\", \"val\")\n        .build()\n        .applyUnsafe();\n        Set<SSTableReader> before = cfs.getLiveSSTables();\n        cfs.forceBlockingFlush();\n        Set<SSTableReader> after = cfs.getLiveSSTables();\n        return Iterables.getOnlyElement(Sets.difference(after, before));\n    }\n","date":"2018-08-24 23:21:12","endLine":501,"groupId":"10858","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createSSTableWithKey","params":"(Stringkeyspace@Stringtable@intkey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ee/aaf5b76fe2d00f75c6e4e9d7156c4e5c546543.src","preCode":"    private static void createSSTableWithKey(String keyspace, String table, int key)\n    {\n        long timestamp = System.currentTimeMillis();\n        DecoratedKey dk = Util.dk(String.format(\"%04d\", key));\n        ColumnFamilyStore cfs = Keyspace.open(keyspace).getColumnFamilyStore(table);\n        new RowUpdateBuilder(cfs.metadata(), timestamp, dk.getKey())\n        .clustering(Integer.toString(key))\n        .add(\"val\", \"val\")\n        .build()\n        .applyUnsafe();\n        cfs.forceBlockingFlush();\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionStrategyManagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":487,"status":"M"}],"commitId":"cba5d5131e75c0631b2f8845ad63b413ab4f420f","commitMessage":"@@@Refactor CompactionStrategyManager\n\nPatch by Blake Eggleston; reviewed by Marcus Eriksson for CASSANDRA-14621\n","date":"2018-08-24 23:21:12","modifiedFileCount":"6","status":"M","submitter":"Blake Eggleston"}]
