[{"authorTime":"2017-11-15 09:38:10","codes":[{"authorDate":"2017-11-15 09:38:10","commitOrder":1,"curCode":"    private static RangeTombstone withExclusiveStartIf(RangeTombstone rt, boolean condition)\n    {\n        if (!condition)\n            return rt;\n\n        Slice slice = rt.deletedSlice();\n        ClusteringBound newStart = ClusteringBound.create(Kind.EXCL_START_BOUND, slice.start().getRawValues());\n        return condition\n             ? new RangeTombstone(Slice.make(newStart, slice.end()), rt.deletionTime())\n             : rt;\n    }\n","date":"2018-03-02 09:52:54","endLine":689,"groupId":"16062","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"withExclusiveStartIf","params":"(RangeTombstonert@booleancondition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/4d/4d39867784affffc5d86fd7ad82487ad2b932e.src","preCode":"    private static RangeTombstone withExclusiveStartIf(RangeTombstone rt, boolean condition)\n    {\n        if (!condition)\n            return rt;\n\n        Slice slice = rt.deletedSlice();\n        ClusteringBound newStart = ClusteringBound.create(Kind.EXCL_START_BOUND, slice.start().getRawValues());\n        return condition\n             ? new RangeTombstone(Slice.make(newStart, slice.end()), rt.deletionTime())\n             : rt;\n    }\n","realPath":"test/unit/org/apache/cassandra/service/reads/DataResolverTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":679,"status":"B"},{"authorDate":"2017-11-15 09:38:10","commitOrder":1,"curCode":"    private static RangeTombstone withExclusiveEndIf(RangeTombstone rt, boolean condition)\n    {\n        if (!condition)\n            return rt;\n\n        Slice slice = rt.deletedSlice();\n        ClusteringBound newEnd = ClusteringBound.create(Kind.EXCL_END_BOUND, slice.end().getRawValues());\n        return condition\n             ? new RangeTombstone(Slice.make(slice.start(), newEnd), rt.deletionTime())\n             : rt;\n    }\n","date":"2018-03-02 09:52:54","endLine":702,"groupId":"16065","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"withExclusiveEndIf","params":"(RangeTombstonert@booleancondition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/4d/4d39867784affffc5d86fd7ad82487ad2b932e.src","preCode":"    private static RangeTombstone withExclusiveEndIf(RangeTombstone rt, boolean condition)\n    {\n        if (!condition)\n            return rt;\n\n        Slice slice = rt.deletedSlice();\n        ClusteringBound newEnd = ClusteringBound.create(Kind.EXCL_END_BOUND, slice.end().getRawValues());\n        return condition\n             ? new RangeTombstone(Slice.make(slice.start(), newEnd), rt.deletionTime())\n             : rt;\n    }\n","realPath":"test/unit/org/apache/cassandra/service/reads/DataResolverTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":692,"status":"B"}],"commitId":"39807ba48ed2e02223014fbf47dce21d4124b380","commitMessage":"@@@Refactor read executor and response resolver.  abstract read repair\n\nPatch by Blake Eggleston; Reviewed by Marcus Eriksson for CASSANDRA-14058\n","date":"2018-03-02 09:52:54","modifiedFileCount":"5","status":"B","submitter":"Blake Eggleston"},{"authorTime":"2019-10-16 04:04:26","codes":[{"authorDate":"2019-10-16 04:04:26","commitOrder":2,"curCode":"    private static RangeTombstone withExclusiveStartIf(RangeTombstone rt, boolean condition)\n    {\n        if (!condition)\n            return rt;\n\n        Slice slice = rt.deletedSlice();\n        ClusteringBound<?> newStart = ClusteringBound.create(Kind.EXCL_START_BOUND, slice.start());\n        return condition\n               ? new RangeTombstone(Slice.make(newStart, slice.end()), rt.deletionTime())\n               : rt;\n    }\n","date":"2020-09-14 23:32:44","endLine":709,"groupId":"101376","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"withExclusiveStartIf","params":"(RangeTombstonert@booleancondition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/36/d792e1053ba4a097b8d61a95ab4ab006fedc71.src","preCode":"    private static RangeTombstone withExclusiveStartIf(RangeTombstone rt, boolean condition)\n    {\n        if (!condition)\n            return rt;\n\n        Slice slice = rt.deletedSlice();\n        ClusteringBound newStart = ClusteringBound.create(Kind.EXCL_START_BOUND, slice.start().getRawValues());\n        return condition\n               ? new RangeTombstone(Slice.make(newStart, slice.end()), rt.deletionTime())\n               : rt;\n    }\n","realPath":"test/unit/org/apache/cassandra/service/reads/DataResolverTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":699,"status":"M"},{"authorDate":"2019-10-16 04:04:26","commitOrder":2,"curCode":"    private static RangeTombstone withExclusiveEndIf(RangeTombstone rt, boolean condition)\n    {\n        if (!condition)\n            return rt;\n\n        Slice slice = rt.deletedSlice();\n        ClusteringBound<?> newEnd = ClusteringBound.create(Kind.EXCL_END_BOUND, slice.end());\n        return condition\n               ? new RangeTombstone(Slice.make(slice.start(), newEnd), rt.deletionTime())\n               : rt;\n    }\n","date":"2020-09-14 23:32:44","endLine":722,"groupId":"101376","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"withExclusiveEndIf","params":"(RangeTombstonert@booleancondition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/36/d792e1053ba4a097b8d61a95ab4ab006fedc71.src","preCode":"    private static RangeTombstone withExclusiveEndIf(RangeTombstone rt, boolean condition)\n    {\n        if (!condition)\n            return rt;\n\n        Slice slice = rt.deletedSlice();\n        ClusteringBound newEnd = ClusteringBound.create(Kind.EXCL_END_BOUND, slice.end().getRawValues());\n        return condition\n               ? new RangeTombstone(Slice.make(slice.start(), newEnd), rt.deletionTime())\n               : rt;\n    }\n","realPath":"test/unit/org/apache/cassandra/service/reads/DataResolverTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":712,"status":"M"}],"commitId":"ccab496d2d37c86341d364dea6c27513fda27331","commitMessage":"@@@Add byte array backed cells\n\nPatch by Blake Eggleston; reviewed by Caleb Rackliffe and Marcus Eriksson for CASSANDRA-15393\n","date":"2020-09-14 23:32:44","modifiedFileCount":"278","status":"M","submitter":"Blake Eggleston"}]
