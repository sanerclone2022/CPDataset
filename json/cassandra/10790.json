[{"authorTime":"2016-11-18 18:45:24","codes":[{"authorDate":"2016-11-18 18:45:24","commitOrder":1,"curCode":"    public void testMajorCompactionPurgeTopLevelTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new Mutation(KEYSPACE1, dk(key))\n            .add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), Long.MAX_VALUE, FBUtilities.nowInSeconds()))\n            .applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","date":"2016-11-18 18:45:24","endLine":212,"groupId":"9182","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMajorCompactionPurgeTopLevelTombstoneWithMaxTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b3/f1f5773c6738c58120cc053681819670cd7a3e.src","preCode":"    public void testMajorCompactionPurgeTopLevelTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new Mutation(KEYSPACE1, dk(key))\n            .add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), Long.MAX_VALUE, FBUtilities.nowInSeconds()))\n            .applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"B"},{"authorDate":"2016-11-18 18:45:24","commitOrder":1,"curCode":"    public void testMajorCompactionPurgeRangeTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, Long.MAX_VALUE, dk(key))\n            .addRangeTombstone(String.valueOf(0), String.valueOf(9)).build().applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","date":"2016-11-18 18:45:24","endLine":254,"groupId":"9182","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMajorCompactionPurgeRangeTombstoneWithMaxTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b3/f1f5773c6738c58120cc053681819670cd7a3e.src","preCode":"    public void testMajorCompactionPurgeRangeTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, Long.MAX_VALUE, dk(key))\n            .addRangeTombstone(String.valueOf(0), String.valueOf(9)).build().applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"B"}],"commitId":"29cb5910612b603e312d1e99555113d827f6cd9b","commitMessage":"@@@Merge branch 'cassandra-3.X' into trunk\n","date":"2016-11-18 18:45:24","modifiedFileCount":"10","status":"B","submitter":"Branimir Lambov"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":2,"curCode":"    public void testMajorCompactionPurgeTopLevelTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new Mutation(KEYSPACE1, dk(key))\n            .add(PartitionUpdate.fullPartitionDelete(cfs.metadata(), dk(key), Long.MAX_VALUE, FBUtilities.nowInSeconds()))\n            .applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","date":"2017-01-28 06:17:46","endLine":216,"groupId":"7723","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMajorCompactionPurgeTopLevelTombstoneWithMaxTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ec/cf671d58a5491cd7db3903697fd5bb7d966952.src","preCode":"    public void testMajorCompactionPurgeTopLevelTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new Mutation(KEYSPACE1, dk(key))\n            .add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), Long.MAX_VALUE, FBUtilities.nowInSeconds()))\n            .applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":2,"curCode":"    public void testMajorCompactionPurgeRangeTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata(), Long.MAX_VALUE, dk(key))\n            .addRangeTombstone(String.valueOf(0), String.valueOf(9)).build().applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","date":"2017-01-28 06:17:46","endLine":258,"groupId":"9182","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMajorCompactionPurgeRangeTombstoneWithMaxTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ec/cf671d58a5491cd7db3903697fd5bb7d966952.src","preCode":"    public void testMajorCompactionPurgeRangeTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, Long.MAX_VALUE, dk(key))\n            .addRangeTombstone(String.valueOf(0), String.valueOf(9)).build().applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"}],"commitId":"af3fe39dcabd9ef77a00309ce6741268423206df","commitMessage":"@@@Make TableMetadata immutable.  optimize Schema\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-9425\n","date":"2017-01-28 06:17:46","modifiedFileCount":"511","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2017-09-13 21:57:50","commitOrder":3,"curCode":"    public void testMajorCompactionPurgeTopLevelTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new Mutation.PartitionUpdateCollector(KEYSPACE1, dk(key))\n            .add(PartitionUpdate.fullPartitionDelete(cfs.metadata(), dk(key), Long.MAX_VALUE, FBUtilities.nowInSeconds()))\n            .build()\n            .applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","date":"2018-01-09 15:10:23","endLine":217,"groupId":"10790","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMajorCompactionPurgeTopLevelTombstoneWithMaxTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/fc/193e84b60d9831d6c6ea56d2b8a438d79b4d85.src","preCode":"    public void testMajorCompactionPurgeTopLevelTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new Mutation(KEYSPACE1, dk(key))\n            .add(PartitionUpdate.fullPartitionDelete(cfs.metadata(), dk(key), Long.MAX_VALUE, FBUtilities.nowInSeconds()))\n            .applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":3,"curCode":"    public void testMajorCompactionPurgeRangeTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata(), Long.MAX_VALUE, dk(key))\n            .addRangeTombstone(String.valueOf(0), String.valueOf(9)).build().applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","date":"2017-01-28 06:17:46","endLine":258,"groupId":"10790","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMajorCompactionPurgeRangeTombstoneWithMaxTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ec/cf671d58a5491cd7db3903697fd5bb7d966952.src","preCode":"    public void testMajorCompactionPurgeRangeTombstoneWithMaxTimestamp()\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        String cfName = \"Standard1\";\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key1\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata(), Long.MAX_VALUE, dk(key))\n            .addRangeTombstone(String.valueOf(0), String.valueOf(9)).build().applyUnsafe();\n        cfs.forceBlockingFlush();\n\n        \r\n        FBUtilities.waitOnFutures(CompactionManager.instance.submitMaximal(cfs, Integer.MAX_VALUE, false));\n\n        \r\n        RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 2, key);\n        builder.clustering(String.valueOf(5))\n               .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n               .build().applyUnsafe();\n\n        cfs.forceBlockingFlush();\n\n        cfs.invalidateCachedPartition(dk(key));\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(1, partition.rowCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"N"}],"commitId":"de7c24b395265ff619c622ed6be8d88453f158ac","commitMessage":"@@@Make PartitionUpdate and Mutation immutable\n\nPatch by marcuse; reviewed by Aleksey Yeschenko for CASSANDRA-13867\n","date":"2018-01-09 15:10:23","modifiedFileCount":"33","status":"M","submitter":"Marcus Eriksson"}]
