[{"authorTime":"2013-11-14 01:01:51","codes":[{"authorDate":"2013-05-28 16:17:26","commitOrder":2,"curCode":"    public void SliceQueryTest() throws Exception\n    {\n        QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\", \"c1\", \"c8\", 10));\n\n        List<Row> page;\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2013-06-25 16:30:12","endLine":188,"groupId":"17104","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"SliceQueryTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/1d/1832136b6b666a011f3497310d75c1dc4f5274.src","preCode":"    public void SliceQueryTest() throws Exception\n    {\n        QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\", \"c1\", \"c8\", 10));\n\n        List<Row> page;\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"NB"},{"authorDate":"2013-11-14 01:01:51","commitOrder":2,"curCode":"    public void reversedSliceQueryTest() throws Exception\n    {\n        QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\", \"c8\", \"c1\", true, 10));\n\n        List<Row> page;\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2013-11-14 01:01:51","endLine":218,"groupId":"17104","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"reversedSliceQueryTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f3/95cf42302dd5fd7091c37f9b0db9cae0fab9f9.src","preCode":"    public void reversedSliceQueryTest() throws Exception\n    {\n        QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\", \"c8\", \"c1\", true, 10));\n\n        List<Row> page;\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"B"}],"commitId":"cb871ba908dac0e8773a50dc805b272ac2c794d1","commitMessage":"@@@Merge branch 'cassandra-2.0' into trunk\n","date":"2013-11-14 01:01:51","modifiedFileCount":"6","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2013-11-14 01:01:51","codes":[{"authorDate":"2013-11-26 09:06:42","commitOrder":3,"curCode":"    public void sliceQueryTest() throws Exception\n    {\n        QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\", \"c1\", \"c8\", 10));\n\n        List<Row> page;\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2013-11-26 09:06:42","endLine":193,"groupId":"17104","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sliceQueryTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/62/39ba07a28800cb18880dce32b18709a6a692fc.src","preCode":"    public void SliceQueryTest() throws Exception\n    {\n        QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\", \"c1\", \"c8\", 10));\n\n        List<Row> page;\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2013-11-14 01:01:51","commitOrder":3,"curCode":"    public void reversedSliceQueryTest() throws Exception\n    {\n        QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\", \"c8\", \"c1\", true, 10));\n\n        List<Row> page;\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2013-11-14 01:01:51","endLine":218,"groupId":"17104","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"reversedSliceQueryTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f3/95cf42302dd5fd7091c37f9b0db9cae0fab9f9.src","preCode":"    public void reversedSliceQueryTest() throws Exception\n    {\n        QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\", \"c8\", \"c1\", true, 10));\n\n        List<Row> page;\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"N"}],"commitId":"9f3a7f8a698aaaa9be44bed01aaf526567df8aca","commitMessage":"@@@simple naming fixes\n","date":"2013-11-26 09:06:42","modifiedFileCount":"1","status":"M","submitter":"Dave Brosius"},{"authorTime":"2014-09-02 00:54:46","codes":[{"authorDate":"2014-09-02 00:54:46","commitOrder":4,"curCode":"    public void sliceQueryTest() throws Exception\n    {\n        QueryPager pager = sliceQuery(\"k0\", \"c1\", \"c8\", 10).getPager(null);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2015-06-30 18:47:01","endLine":241,"groupId":"18302","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"sliceQueryTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/7a/a1f87f6e356890367c430ad5b50043be00d48d.src","preCode":"    public void sliceQueryTest() throws Exception\n    {\n        QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\", \"c1\", \"c8\", 10));\n\n        List<Row> page;\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"},{"authorDate":"2014-09-02 00:54:46","commitOrder":4,"curCode":"    public void reversedSliceQueryTest() throws Exception\n    {\n        QueryPager pager = sliceQuery(\"k0\", \"c1\", \"c8\", true, 10).getPager(null);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2015-06-30 18:47:01","endLine":261,"groupId":"18301","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"reversedSliceQueryTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/7a/a1f87f6e356890367c430ad5b50043be00d48d.src","preCode":"    public void reversedSliceQueryTest() throws Exception\n    {\n        QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\", \"c8\", \"c1\", true, 10));\n\n        List<Row> page;\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n\n        assertFalse(pager.isExhausted());\n        page = pager.fetchPage(3);\n        assertEquals(toString(page), 1, page.size());\n        assertRow(page.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"}],"commitId":"a991b64811f4d6adb6c7b31c0df52288eb06cf19","commitMessage":"@@@Storage engine refactor.  a.k.a CASSANDRA-8099\n\nInitial patch.  see ticket for details\n","date":"2015-06-30 18:47:01","modifiedFileCount":"374","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2015-09-18 19:24:15","codes":[{"authorDate":"2015-09-18 19:24:15","commitOrder":5,"curCode":"    public void sliceQueryTest(boolean testPagingState, int protocolVersion) throws Exception\n    {\n        ReadCommand command = sliceQuery(\"k0\", \"c1\", \"c8\", 10);\n        QueryPager pager = command.getPager(null, protocolVersion);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2015-09-18 19:24:15","endLine":262,"groupId":"18302","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"sliceQueryTest","params":"(booleantestPagingState@intprotocolVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/0f/79e841e3e301a1b2f6beda0b3c9415ad8d932d.src","preCode":"    public void sliceQueryTest() throws Exception\n    {\n        QueryPager pager = sliceQuery(\"k0\", \"c1\", \"c8\", 10).getPager(null);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"},{"authorDate":"2015-09-18 19:24:15","commitOrder":5,"curCode":"    public void reversedSliceQueryTest(boolean testPagingState, int protocolVersion) throws Exception\n    {\n        ReadCommand command = sliceQuery(\"k0\", \"c1\", \"c8\", true, 10);\n        QueryPager pager = command.getPager(null, protocolVersion);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2015-09-18 19:24:15","endLine":295,"groupId":"18301","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"reversedSliceQueryTest","params":"(booleantestPagingState@intprotocolVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/0f/79e841e3e301a1b2f6beda0b3c9415ad8d932d.src","preCode":"    public void reversedSliceQueryTest() throws Exception\n    {\n        QueryPager pager = sliceQuery(\"k0\", \"c1\", \"c8\", true, 10).getPager(null);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"9967303f6e22db40400163d0625f15af74de9a05","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2015-09-18 19:24:15","modifiedFileCount":"24","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2016-10-31 21:16:40","codes":[{"authorDate":"2016-10-31 21:16:40","commitOrder":6,"curCode":"    public void sliceQueryTest(boolean testPagingState, ProtocolVersion protocolVersion) throws Exception\n    {\n        ReadCommand command = sliceQuery(\"k0\", \"c1\", \"c8\", 10);\n        QueryPager pager = command.getPager(null, protocolVersion);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2016-10-31 21:16:40","endLine":262,"groupId":"18302","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"sliceQueryTest","params":"(booleantestPagingState@ProtocolVersionprotocolVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/21/04d14dda46b2d094e750f3e43b0d77ac8d65b7.src","preCode":"    public void sliceQueryTest(boolean testPagingState, int protocolVersion) throws Exception\n    {\n        ReadCommand command = sliceQuery(\"k0\", \"c1\", \"c8\", 10);\n        QueryPager pager = command.getPager(null, protocolVersion);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"},{"authorDate":"2016-10-31 21:16:40","commitOrder":6,"curCode":"    public void reversedSliceQueryTest(boolean testPagingState, ProtocolVersion protocolVersion) throws Exception\n    {\n        ReadCommand command = sliceQuery(\"k0\", \"c1\", \"c8\", true, 10);\n        QueryPager pager = command.getPager(null, protocolVersion);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2016-10-31 21:16:40","endLine":295,"groupId":"18301","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"reversedSliceQueryTest","params":"(booleantestPagingState@ProtocolVersionprotocolVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/21/04d14dda46b2d094e750f3e43b0d77ac8d65b7.src","preCode":"    public void reversedSliceQueryTest(boolean testPagingState, int protocolVersion) throws Exception\n    {\n        ReadCommand command = sliceQuery(\"k0\", \"c1\", \"c8\", true, 10);\n        QueryPager pager = command.getPager(null, protocolVersion);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"b4068ef00e9566ac5ecba9c67ddcf419fcd673a2","commitMessage":"@@@Merge branch 'cassandra-3.X' into trunk\n","date":"2016-10-31 21:16:40","modifiedFileCount":"163","status":"M","submitter":"Stefania Alborghetti"},{"authorTime":"2021-05-08 22:06:20","codes":[{"authorDate":"2021-05-08 22:06:20","commitOrder":7,"curCode":"    public void sliceQueryTest(boolean testPagingState, ProtocolVersion protocolVersion)\n    {\n        ReadCommand command = sliceQuery(\"k0\", \"c1\", \"c8\", 10);\n        QueryPager pager = command.getPager(null, protocolVersion);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2021-05-08 22:07:13","endLine":284,"groupId":"101428","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"sliceQueryTest","params":"(booleantestPagingState@ProtocolVersionprotocolVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/11/d1cb0969576c909c0b6f6bba4b931fc1fef027.src","preCode":"    public void sliceQueryTest(boolean testPagingState, ProtocolVersion protocolVersion) throws Exception\n    {\n        ReadCommand command = sliceQuery(\"k0\", \"c1\", \"c8\", 10);\n        QueryPager pager = command.getPager(null, protocolVersion);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\", \"c3\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c4\", \"c5\", \"c6\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c7\", \"c8\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"M"},{"authorDate":"2021-05-08 22:06:20","commitOrder":7,"curCode":"    public void reversedSliceQueryTest(boolean testPagingState, ProtocolVersion protocolVersion)\n    {\n        ReadCommand command = sliceQuery(\"k0\", \"c1\", \"c8\", true, 10);\n        QueryPager pager = command.getPager(null, protocolVersion);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","date":"2021-05-08 22:07:13","endLine":318,"groupId":"101428","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"reversedSliceQueryTest","params":"(booleantestPagingState@ProtocolVersionprotocolVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/11/d1cb0969576c909c0b6f6bba4b931fc1fef027.src","preCode":"    public void reversedSliceQueryTest(boolean testPagingState, ProtocolVersion protocolVersion) throws Exception\n    {\n        ReadCommand command = sliceQuery(\"k0\", \"c1\", \"c8\", true, 10);\n        QueryPager pager = command.getPager(null, protocolVersion);\n\n        assertFalse(pager.isExhausted());\n        List<FilteredPartition> partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c6\", \"c7\", \"c8\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3);\n        assertRow(partition.get(0), \"k0\", \"c3\", \"c4\", \"c5\");\n        assertFalse(pager.isExhausted());\n\n        pager = maybeRecreate(pager, command, testPagingState, protocolVersion);\n        assertFalse(pager.isExhausted());\n        partition = query(pager, 3, 2);\n        assertRow(partition.get(0), \"k0\", \"c1\", \"c2\");\n\n        assertTrue(pager.isExhausted());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/QueryPagerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"}],"commitId":"8975a4f031e56affb263604219e37385fcb5d7ff","commitMessage":"@@@Merge branch 'cassandra-4.0' into trunk\n","date":"2021-05-08 22:07:13","modifiedFileCount":"9","status":"M","submitter":"Ekaterina Dimitrova"}]
