[{"authorTime":"2015-06-25 00:13:15","codes":[{"authorDate":"2015-06-25 00:13:15","commitOrder":1,"curCode":"    public void testTrackMetadata_rowMarker() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"INSERT INTO %s (a) VALUES (1) USING TIMESTAMP 9999\");\n\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getSSTables().size());\n        StatsMetadata metadata = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(Integer.MAX_VALUE, metadata.maxLocalDeletionTime);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","date":"2015-06-25 00:13:15","endLine":142,"groupId":"1024","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTrackMetadata_rowMarker","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/2a/2ca7bc2749577fe97d9faecdc213f7ab7ef2a0.src","preCode":"    public void testTrackMetadata_rowMarker() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"INSERT INTO %s (a) VALUES (1) USING TIMESTAMP 9999\");\n\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getSSTables().size());\n        StatsMetadata metadata = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(Integer.MAX_VALUE, metadata.maxLocalDeletionTime);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTableMetadataTrackingTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"},{"authorDate":"2015-06-25 00:13:15","commitOrder":1,"curCode":"    public void testTrackMetadata_rowMarkerDelete() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"DELETE FROM %s USING TIMESTAMP 9999 WHERE a=1\");\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getSSTables().size());\n        StatsMetadata metadata = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(System.currentTimeMillis()/1000, metadata.maxLocalDeletionTime, 5);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","date":"2015-06-25 00:13:15","endLine":160,"groupId":"1023","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTrackMetadata_rowMarkerDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/2a/2ca7bc2749577fe97d9faecdc213f7ab7ef2a0.src","preCode":"    public void testTrackMetadata_rowMarkerDelete() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"DELETE FROM %s USING TIMESTAMP 9999 WHERE a=1\");\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getSSTables().size());\n        StatsMetadata metadata = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(System.currentTimeMillis()/1000, metadata.maxLocalDeletionTime, 5);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTableMetadataTrackingTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"}],"commitId":"bc9b0be321b34c55366a61418b94e9bae6ddb26b","commitMessage":"@@@Merge branch 'cassandra-2.2' into trunk\n","date":"2015-06-25 00:13:15","modifiedFileCount":"16","status":"B","submitter":"Josh McKenzie"},{"authorTime":"2015-06-28 21:49:09","codes":[{"authorDate":"2015-06-28 21:49:09","commitOrder":2,"curCode":"    public void testTrackMetadata_rowMarker() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"INSERT INTO %s (a) VALUES (1) USING TIMESTAMP 9999\");\n\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getLiveSSTables().size());\n        StatsMetadata metadata = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(Integer.MAX_VALUE, metadata.maxLocalDeletionTime);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","date":"2015-07-28 17:28:31","endLine":142,"groupId":"1024","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTrackMetadata_rowMarker","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/28/8cbe1a042ed9a37a063a0be2242202019b1f00.src","preCode":"    public void testTrackMetadata_rowMarker() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"INSERT INTO %s (a) VALUES (1) USING TIMESTAMP 9999\");\n\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getSSTables().size());\n        StatsMetadata metadata = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(Integer.MAX_VALUE, metadata.maxLocalDeletionTime);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTableMetadataTrackingTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2015-06-28 21:49:09","commitOrder":2,"curCode":"    public void testTrackMetadata_rowMarkerDelete() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"DELETE FROM %s USING TIMESTAMP 9999 WHERE a=1\");\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getLiveSSTables().size());\n        StatsMetadata metadata = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(System.currentTimeMillis()/1000, metadata.maxLocalDeletionTime, 5);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","date":"2015-07-28 17:28:31","endLine":161,"groupId":"1023","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTrackMetadata_rowMarkerDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/28/8cbe1a042ed9a37a063a0be2242202019b1f00.src","preCode":"    public void testTrackMetadata_rowMarkerDelete() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"DELETE FROM %s USING TIMESTAMP 9999 WHERE a=1\");\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getSSTables().size());\n        StatsMetadata metadata = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(System.currentTimeMillis()/1000, metadata.maxLocalDeletionTime, 5);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTableMetadataTrackingTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"}],"commitId":"ad8cad7c4d05fd5dea68fb274c81a102533ebe36","commitMessage":"@@@Make choice of SSTableReader types explicit\n\nAll accessors of a collection of SSTableReader must now\nspecify whether they desire the LIVE or CANONICAL set.  so\nthat no internal clients are accidentally exposed to a partial\nsstable they are not capable of safely handling.\n\npatch by benedict; reviewed by marcus for CASSANDRA-9699\n","date":"2015-07-28 17:28:31","modifiedFileCount":"60","status":"M","submitter":"Benedict Elliott Smith"},{"authorTime":"2021-03-26 23:13:22","codes":[{"authorDate":"2015-06-28 21:49:09","commitOrder":3,"curCode":"    public void testTrackMetadata_rowMarker() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"INSERT INTO %s (a) VALUES (1) USING TIMESTAMP 9999\");\n\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getLiveSSTables().size());\n        StatsMetadata metadata = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(Integer.MAX_VALUE, metadata.maxLocalDeletionTime);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","date":"2015-07-28 17:28:31","endLine":142,"groupId":"101713","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTrackMetadata_rowMarker","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/28/8cbe1a042ed9a37a063a0be2242202019b1f00.src","preCode":"    public void testTrackMetadata_rowMarker() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"INSERT INTO %s (a) VALUES (1) USING TIMESTAMP 9999\");\n\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getLiveSSTables().size());\n        StatsMetadata metadata = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(Integer.MAX_VALUE, metadata.maxLocalDeletionTime);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTableMetadataTrackingTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2021-03-26 23:13:22","commitOrder":3,"curCode":"    public void testTrackMetadata_rowMarkerDelete() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"DELETE FROM %s USING TIMESTAMP 9999 WHERE a=1\");\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getLiveSSTables().size());\n        StatsMetadata metadata = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(nowInSec(), metadata.maxLocalDeletionTime, DELTA);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","date":"2021-03-27 04:26:10","endLine":168,"groupId":"101713","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testTrackMetadata_rowMarkerDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5d/367de49c09944a33d8f45425267d6979443ddb.src","preCode":"    public void testTrackMetadata_rowMarkerDelete() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, PRIMARY KEY (a))\");\n        ColumnFamilyStore cfs = Keyspace.open(keyspace()).getColumnFamilyStore(currentTable());\n        execute(\"DELETE FROM %s USING TIMESTAMP 9999 WHERE a=1\");\n        cfs.forceBlockingFlush();\n        assertEquals(1, cfs.getLiveSSTables().size());\n        StatsMetadata metadata = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(9999, metadata.minTimestamp);\n        assertEquals(9999, metadata.maxTimestamp);\n        assertEquals(System.currentTimeMillis()/1000, metadata.maxLocalDeletionTime, 5);\n        cfs.forceMajorCompaction();\n        StatsMetadata metadata2 = cfs.getLiveSSTables().iterator().next().getSSTableMetadata();\n        assertEquals(metadata.maxLocalDeletionTime, metadata2.maxLocalDeletionTime);\n        assertEquals(metadata.minTimestamp, metadata2.minTimestamp);\n        assertEquals(metadata.maxTimestamp, metadata2.maxTimestamp);\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTableMetadataTrackingTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"}],"commitId":"9b32b8a4369049aec6e0848d21f524a40d2c93f1","commitMessage":"@@@Fix flaky SSTableMetadataTest and SSTableMetadataTrackingTest\n\npatch by Andr?s de la Pe?a; reviewed by Brandon Williams and Ekaterina Dimitrova for CASSANDRA-16236\n","date":"2021-03-27 04:26:10","modifiedFileCount":"2","status":"M","submitter":"Andr?s de la Pe?a"}]
