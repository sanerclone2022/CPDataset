[{"authorTime":"2016-10-18 19:47:05","codes":[{"authorDate":"2016-05-03 04:13:19","commitOrder":3,"curCode":"    public void testStaticTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int, \" +\n                    \"c int, \" +\n                    \"sval text static, \" +\n                    \"val text, \" +\n                    \"PRIMARY KEY(k,c))\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(protocolVersion, \"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT * FROM %s WHERE sval IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (sval,k,c)\");\n            Assert.fail(\"Use of static column in a MV primary key should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT val, sval FROM %s WHERE val IS NOT NULL AND  k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val, k, c)\");\n            Assert.fail(\"Explicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n            Assert.fail(\"Implicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT val,k,c FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n\n        for (int i = 0; i < 100; i++)\n            updateView(\"INSERT into %s (k,c,sval,val)VALUES(?,?,?,?)\", 0, i % 2, \"bar\" + i, \"baz\");\n\n        Assert.assertEquals(2, execute(\"select * from %s\").size());\n\n        assertRows(execute(\"SELECT sval from %s\"), row(\"bar99\"), row(\"bar99\"));\n\n        Assert.assertEquals(2, execute(\"select * from mv_static\").size());\n\n        assertInvalid(\"SELECT sval from mv_static\");\n    }\n","date":"2016-05-03 04:13:19","endLine":246,"groupId":"10983","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testStaticTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ac/4becb84f945a990f5107806a6f76049b1c7d8b.src","preCode":"    public void testStaticTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int, \" +\n                    \"c int, \" +\n                    \"sval text static, \" +\n                    \"val text, \" +\n                    \"PRIMARY KEY(k,c))\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(protocolVersion, \"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT * FROM %s WHERE sval IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (sval,k,c)\");\n            Assert.fail(\"Use of static column in a MV primary key should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT val, sval FROM %s WHERE val IS NOT NULL AND  k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val, k, c)\");\n            Assert.fail(\"Explicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n            Assert.fail(\"Implicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT val,k,c FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n\n        for (int i = 0; i < 100; i++)\n            updateView(\"INSERT into %s (k,c,sval,val)VALUES(?,?,?,?)\", 0, i % 2, \"bar\" + i, \"baz\");\n\n        Assert.assertEquals(2, execute(\"select * from %s\").size());\n\n        assertRows(execute(\"SELECT sval from %s\"), row(\"bar99\"), row(\"bar99\"));\n\n        Assert.assertEquals(2, execute(\"select * from mv_static\").size());\n\n        assertInvalid(\"SELECT sval from mv_static\");\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"NB"},{"authorDate":"2016-10-18 19:47:05","commitOrder":3,"curCode":"    public void testDurationsTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int PRIMARY KEY, \" +\n                    \"result duration)\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(protocolVersion, \"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_duration\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE result IS NOT NULL AND k IS NOT NULL PRIMARY KEY (result,k)\");\n            Assert.fail(\"MV on duration should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n            Assert.assertEquals(\"Cannot use Duration column 'result' in PRIMARY KEY of materialized view\", e.getMessage());\n        }\n    }\n","date":"2016-10-18 20:09:43","endLine":369,"groupId":"32474","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDurationsTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/cc/fadefbcfb686a488848fdf15a74bb71816035d.src","preCode":"    public void testDurationsTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int PRIMARY KEY, \" +\n                    \"result duration)\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(protocolVersion, \"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_duration\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE result IS NOT NULL AND k IS NOT NULL PRIMARY KEY (result,k)\");\n            Assert.fail(\"MV on duration should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n            Assert.assertEquals(\"Cannot use Duration column 'result' in PRIMARY KEY of materialized view\", e.getMessage());\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":351,"status":"B"}],"commitId":"bfd57d13b7914ad909c75e1e126802e9867cc735","commitMessage":"@@@Add duration data type\n\npatch by Benjamin Lerer; reviewed by Tyler Hobbs for CASSANDRA-11873\n","date":"2016-10-18 20:09:43","modifiedFileCount":"18","status":"M","submitter":"Benjamin Lerer"},{"authorTime":"2016-11-10 09:17:36","codes":[{"authorDate":"2016-05-03 04:13:19","commitOrder":4,"curCode":"    public void testStaticTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int, \" +\n                    \"c int, \" +\n                    \"sval text static, \" +\n                    \"val text, \" +\n                    \"PRIMARY KEY(k,c))\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(protocolVersion, \"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT * FROM %s WHERE sval IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (sval,k,c)\");\n            Assert.fail(\"Use of static column in a MV primary key should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT val, sval FROM %s WHERE val IS NOT NULL AND  k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val, k, c)\");\n            Assert.fail(\"Explicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n            Assert.fail(\"Implicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT val,k,c FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n\n        for (int i = 0; i < 100; i++)\n            updateView(\"INSERT into %s (k,c,sval,val)VALUES(?,?,?,?)\", 0, i % 2, \"bar\" + i, \"baz\");\n\n        Assert.assertEquals(2, execute(\"select * from %s\").size());\n\n        assertRows(execute(\"SELECT sval from %s\"), row(\"bar99\"), row(\"bar99\"));\n\n        Assert.assertEquals(2, execute(\"select * from mv_static\").size());\n\n        assertInvalid(\"SELECT sval from mv_static\");\n    }\n","date":"2016-05-03 04:13:19","endLine":246,"groupId":"10983","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testStaticTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ac/4becb84f945a990f5107806a6f76049b1c7d8b.src","preCode":"    public void testStaticTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int, \" +\n                    \"c int, \" +\n                    \"sval text static, \" +\n                    \"val text, \" +\n                    \"PRIMARY KEY(k,c))\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(protocolVersion, \"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT * FROM %s WHERE sval IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (sval,k,c)\");\n            Assert.fail(\"Use of static column in a MV primary key should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT val, sval FROM %s WHERE val IS NOT NULL AND  k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val, k, c)\");\n            Assert.fail(\"Explicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n            Assert.fail(\"Implicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT val,k,c FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n\n        for (int i = 0; i < 100; i++)\n            updateView(\"INSERT into %s (k,c,sval,val)VALUES(?,?,?,?)\", 0, i % 2, \"bar\" + i, \"baz\");\n\n        Assert.assertEquals(2, execute(\"select * from %s\").size());\n\n        assertRows(execute(\"SELECT sval from %s\"), row(\"bar99\"), row(\"bar99\"));\n\n        Assert.assertEquals(2, execute(\"select * from mv_static\").size());\n\n        assertInvalid(\"SELECT sval from mv_static\");\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"N"},{"authorDate":"2016-11-10 09:17:36","commitOrder":4,"curCode":"    public void testDurationsTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int PRIMARY KEY, \" +\n                    \"result duration)\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(protocolVersion, \"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_duration\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE result IS NOT NULL AND k IS NOT NULL PRIMARY KEY (result,k)\");\n            Assert.fail(\"MV on duration should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n            Assert.assertEquals(\"duration type is not supported for PRIMARY KEY column 'result'\", e.getMessage());\n        }\n    }\n","date":"2018-07-17 23:39:41","endLine":430,"groupId":"32474","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDurationsTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/aa/e7d8344ce46f7ef590f6c29a822249463aba79.src","preCode":"    public void testDurationsTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int PRIMARY KEY, \" +\n                    \"result duration)\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(protocolVersion, \"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_duration\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE result IS NOT NULL AND k IS NOT NULL PRIMARY KEY (result,k)\");\n            Assert.fail(\"MV on duration should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n            Assert.assertEquals(\"Cannot use Duration column 'result' in PRIMARY KEY of materialized view\", e.getMessage());\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":412,"status":"M"}],"commitId":"207c80c1fd63dfbd8ca7e615ec8002ee8983c5d6","commitMessage":"@@@Make all DDL statements idempotent and not dependent on global state\n\npatch by Aleksey Yeschenko; reviewed by Sam Tunnicliffe for\nCASSANDRA-13426\n","date":"2018-07-17 23:39:41","modifiedFileCount":"165","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2021-04-24 02:39:14","codes":[{"authorDate":"2021-04-24 02:39:14","commitOrder":5,"curCode":"    public void testStaticTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int, \" +\n                    \"c int, \" +\n                    \"sval text static, \" +\n                    \"val text, \" +\n                    \"PRIMARY KEY(k,c))\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(\"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT * FROM %s WHERE sval IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (sval,k,c)\");\n            Assert.fail(\"Use of static column in a MV primary key should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT val, sval FROM %s WHERE val IS NOT NULL AND  k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val, k, c)\");\n            Assert.fail(\"Explicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n            Assert.fail(\"Implicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT val,k,c FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n\n        for (int i = 0; i < 100; i++)\n            updateView(\"INSERT into %s (k,c,sval,val)VALUES(?,?,?,?)\", 0, i % 2, \"bar\" + i, \"baz\");\n\n        Assert.assertEquals(2, execute(\"select * from %s\").size());\n\n        assertRows(execute(\"SELECT sval from %s\"), row(\"bar99\"), row(\"bar99\"));\n\n        Assert.assertEquals(2, execute(\"select * from mv_static\").size());\n\n        assertInvalid(\"SELECT sval from mv_static\");\n    }\n","date":"2021-04-24 02:39:14","endLine":345,"groupId":"101493","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testStaticTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/96/3a4b6641be5fb7022e3f7026b4e06880bfa903.src","preCode":"    public void testStaticTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int, \" +\n                    \"c int, \" +\n                    \"sval text static, \" +\n                    \"val text, \" +\n                    \"PRIMARY KEY(k,c))\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(protocolVersion, \"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT * FROM %s WHERE sval IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (sval,k,c)\");\n            Assert.fail(\"Use of static column in a MV primary key should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %%s AS SELECT val, sval FROM %s WHERE val IS NOT NULL AND  k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val, k, c)\");\n            Assert.fail(\"Explicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        try\n        {\n            createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n            Assert.fail(\"Implicit select of static column in MV should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n        }\n\n        createView(\"mv_static\", \"CREATE MATERIALIZED VIEW %s AS SELECT val,k,c FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\");\n\n        for (int i = 0; i < 100; i++)\n            updateView(\"INSERT into %s (k,c,sval,val)VALUES(?,?,?,?)\", 0, i % 2, \"bar\" + i, \"baz\");\n\n        Assert.assertEquals(2, execute(\"select * from %s\").size());\n\n        assertRows(execute(\"SELECT sval from %s\"), row(\"bar99\"), row(\"bar99\"));\n\n        Assert.assertEquals(2, execute(\"select * from mv_static\").size());\n\n        assertInvalid(\"SELECT sval from mv_static\");\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"},{"authorDate":"2021-04-24 02:39:14","commitOrder":5,"curCode":"    public void testDurationsTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int PRIMARY KEY, \" +\n                    \"result duration)\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(\"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_duration\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE result IS NOT NULL AND k IS NOT NULL PRIMARY KEY (result,k)\");\n            Assert.fail(\"MV on duration should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n            Assert.assertEquals(\"duration type is not supported for PRIMARY KEY column 'result'\", e.getMessage());\n        }\n    }\n","date":"2021-04-24 02:39:14","endLine":457,"groupId":"101493","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDurationsTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/96/3a4b6641be5fb7022e3f7026b4e06880bfa903.src","preCode":"    public void testDurationsTable() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (\" +\n                    \"k int PRIMARY KEY, \" +\n                    \"result duration)\");\n\n        execute(\"USE \" + keyspace());\n        executeNet(protocolVersion, \"USE \" + keyspace());\n\n        try\n        {\n            createView(\"mv_duration\", \"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE result IS NOT NULL AND k IS NOT NULL PRIMARY KEY (result,k)\");\n            Assert.fail(\"MV on duration should fail\");\n        }\n        catch (InvalidQueryException e)\n        {\n            Assert.assertEquals(\"duration type is not supported for PRIMARY KEY column 'result'\", e.getMessage());\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/ViewTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":439,"status":"M"}],"commitId":"2c11dfcb5bc2dc25390a4b312911b8401d4a46e6","commitMessage":"@@@Merge branch 'cassandra-3.11' into trunk\n","date":"2021-04-24 02:39:14","modifiedFileCount":"4","status":"M","submitter":"Andr?s de la Pe?a"}]
