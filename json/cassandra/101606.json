[{"authorTime":"2016-04-16 04:26:02","codes":[{"authorDate":"2016-01-19 15:57:59","commitOrder":2,"curCode":"    public void testIndexOnCompoundRowKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (interval text, seq int, id int, severity int static, PRIMARY KEY ((interval, seq), id) ) WITH CLUSTERING ORDER BY (id DESC)\");\n\n        execute(\"CREATE INDEX ON %s (severity)\");\n\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 4, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 4, 11)\");\n\n        assertRows(execute(\"select * from %s where severity = 10 and interval = 't' and seq = 1\"),\n                   row(\"t\", 1, 4, 10), row(\"t\", 1, 3, 10));\n    }\n","date":"2016-01-20 17:58:28","endLine":72,"groupId":"16656","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"testIndexOnCompoundRowKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f6/9d8d54e9e824dfb9810b19981b0e226f658cf2.src","preCode":"    public void testIndexOnCompoundRowKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (interval text, seq int, id int, severity int static, PRIMARY KEY ((interval, seq), id) ) WITH CLUSTERING ORDER BY (id DESC)\");\n\n        execute(\"CREATE INDEX ON %s (severity)\");\n\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 4, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 4, 11)\");\n\n        assertRows(execute(\"select * from %s where severity = 10 and interval = 't' and seq = 1\"),\n                   row(\"t\", 1, 4, 10), row(\"t\", 1, 3, 10));\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnStaticColumnTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"NB"},{"authorDate":"2016-04-16 04:26:02","commitOrder":2,"curCode":"    public void filteringOnClusteringColumns() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY (a, b, c))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 12, 13, 14)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 15, 16, 17)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 22, 23, 24)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 32, 33, 34)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b > 12 AND c > 13 AND d = 17 ALLOW FILTERING\"),\n                       row(11, 15, 16, 17));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE a = 11 AND b > 12 AND c > 13 and d = 17\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c > 30 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c > 30\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c < 30 ALLOW FILTERING\"),\n                       row(21, 22, 23, 24));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c < 30\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c = 33 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c = 33\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE c = 33 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"PRIMARY KEY column \\\"c\\\" cannot be restricted as preceding column \\\"b\\\" is not restricted\",\n                                 \"SELECT * FROM %s WHERE c = 33\");\n        });\n\n        \r\n        \r\n        \r\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY (a, b, c))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 12, 13, 14)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 15, 16, 17)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 18, 19, 20)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 22, 23, 24)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 25, 26, 27)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 28, 29, 30)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 32, 33, 34)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 35, 36, 37)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 38, 39, 40)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE a = 21 AND c > 23\"),\n                       row(21, 25, 26, 27),\n                       row(21, 28, 29, 30));\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE a = 21 AND c > 23 ORDER BY b DESC\"),\n                       row(21, 28, 29, 30),\n                       row(21, 25, 26, 27));\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE c > 16 and c < 36\"),\n                       row(11, 18, 19, 20),\n                       row(21, 22, 23, 24),\n                       row(21, 25, 26, 27),\n                       row(21, 28, 29, 30),\n                       row(31, 32, 33, 34));\n        });\n    }\n","date":"2016-04-16 04:26:02","endLine":2510,"groupId":"16656","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"filteringOnClusteringColumns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/67/89baf190b6b50cd065573d9126a8164bc00830.src","preCode":"    public void filteringOnClusteringColumns() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY (a, b, c))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 12, 13, 14)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 15, 16, 17)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 22, 23, 24)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 32, 33, 34)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b > 12 AND c > 13 AND d = 17 ALLOW FILTERING\"),\n                       row(11, 15, 16, 17));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE a = 11 AND b > 12 AND c > 13 and d = 17\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c > 30 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c > 30\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c < 30 ALLOW FILTERING\"),\n                       row(21, 22, 23, 24));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c < 30\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c = 33 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c = 33\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE c = 33 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"PRIMARY KEY column \\\"c\\\" cannot be restricted as preceding column \\\"b\\\" is not restricted\",\n                                 \"SELECT * FROM %s WHERE c = 33\");\n        });\n\n        \r\n        \r\n        \r\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY (a, b, c))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 12, 13, 14)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 15, 16, 17)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 18, 19, 20)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 22, 23, 24)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 25, 26, 27)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 28, 29, 30)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 32, 33, 34)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 35, 36, 37)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 38, 39, 40)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE a = 21 AND c > 23\"),\n                       row(21, 25, 26, 27),\n                       row(21, 28, 29, 30));\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE a = 21 AND c > 23 ORDER BY b DESC\"),\n                       row(21, 28, 29, 30),\n                       row(21, 25, 26, 27));\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE c > 16 and c < 36\"),\n                       row(11, 18, 19, 20),\n                       row(21, 22, 23, 24),\n                       row(21, 25, 26, 27),\n                       row(21, 28, 29, 30),\n                       row(31, 32, 33, 34));\n        });\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":2441,"status":"B"}],"commitId":"a600920cb5ee2866b09ee6c1ebae9518096e5bc4","commitMessage":"@@@Allow filtering on clustering columns for queries without secondary indexes\n\npatch by Alex Petrov; reviewed by Benjamin Lerer for CASSANDRA-11310\n","date":"2016-04-16 04:26:02","modifiedFileCount":"4","status":"M","submitter":"Alex Petrov"},{"authorTime":"2016-04-19 16:43:12","codes":[{"authorDate":"2016-01-19 15:57:59","commitOrder":3,"curCode":"    public void testIndexOnCompoundRowKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (interval text, seq int, id int, severity int static, PRIMARY KEY ((interval, seq), id) ) WITH CLUSTERING ORDER BY (id DESC)\");\n\n        execute(\"CREATE INDEX ON %s (severity)\");\n\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 4, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 4, 11)\");\n\n        assertRows(execute(\"select * from %s where severity = 10 and interval = 't' and seq = 1\"),\n                   row(\"t\", 1, 4, 10), row(\"t\", 1, 3, 10));\n    }\n","date":"2016-01-20 17:58:28","endLine":72,"groupId":"101606","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testIndexOnCompoundRowKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f6/9d8d54e9e824dfb9810b19981b0e226f658cf2.src","preCode":"    public void testIndexOnCompoundRowKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (interval text, seq int, id int, severity int static, PRIMARY KEY ((interval, seq), id) ) WITH CLUSTERING ORDER BY (id DESC)\");\n\n        execute(\"CREATE INDEX ON %s (severity)\");\n\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 4, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 4, 11)\");\n\n        assertRows(execute(\"select * from %s where severity = 10 and interval = 't' and seq = 1\"),\n                   row(\"t\", 1, 4, 10), row(\"t\", 1, 3, 10));\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnStaticColumnTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2016-04-19 16:43:12","commitOrder":3,"curCode":"    public void filteringOnClusteringColumns() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY (a, b, c))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 12, 13, 14)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 15, 16, 17)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 22, 23, 24)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 32, 33, 34)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15\"),\n                       row(11, 15, 16, 17));\n\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE a = 11 AND b > 12 AND c = 15\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b = 15 AND c > 15\"),\n                       row(11, 15, 16, 17));\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b > 12 AND c > 13 AND d = 17 ALLOW FILTERING\"),\n                       row(11, 15, 16, 17));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE a = 11 AND b > 12 AND c > 13 and d = 17\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c > 30 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c > 30\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c < 30 ALLOW FILTERING\"),\n                       row(21, 22, 23, 24));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c < 30\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c = 33 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c = 33\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE c = 33 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"PRIMARY KEY column \\\"c\\\" cannot be restricted as preceding column \\\"b\\\" is not restricted\",\n                                 \"SELECT * FROM %s WHERE c = 33\");\n        });\n\n        \r\n        \r\n        \r\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY (a, b, c))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 12, 13, 14)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 15, 16, 17)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 18, 19, 20)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 22, 23, 24)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 25, 26, 27)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 28, 29, 30)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 32, 33, 34)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 35, 36, 37)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 38, 39, 40)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE a = 21 AND c > 23\"),\n                       row(21, 25, 26, 27),\n                       row(21, 28, 29, 30));\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE a = 21 AND c > 23 ORDER BY b DESC\"),\n                       row(21, 28, 29, 30),\n                       row(21, 25, 26, 27));\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE c > 16 and c < 36\"),\n                       row(11, 18, 19, 20),\n                       row(21, 22, 23, 24),\n                       row(21, 25, 26, 27),\n                       row(21, 28, 29, 30),\n                       row(31, 32, 33, 34));\n        });\n    }\n","date":"2016-04-20 01:05:29","endLine":2519,"groupId":"101606","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"filteringOnClusteringColumns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/49/e6c4b662b59635ff7f1b01fa11d1096810b028.src","preCode":"    public void filteringOnClusteringColumns() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY (a, b, c))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 12, 13, 14)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 15, 16, 17)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 22, 23, 24)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 32, 33, 34)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(execute(\"SELECT * FROM %s WHERE a = 11 AND b > 12 AND c > 13 AND d = 17 ALLOW FILTERING\"),\n                       row(11, 15, 16, 17));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE a = 11 AND b > 12 AND c > 13 and d = 17\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c > 30 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c > 30\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c < 30 ALLOW FILTERING\"),\n                       row(21, 22, 23, 24));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c < 30\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE b > 20 AND c = 33 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"Clustering column \\\"c\\\" cannot be restricted (preceding column \\\"b\\\" is restricted by a non-EQ relation)\",\n                                 \"SELECT * FROM %s WHERE b > 20 AND c = 33\");\n\n            assertRows(execute(\"SELECT * FROM %s WHERE c = 33 ALLOW FILTERING\"),\n                       row(31, 32, 33, 34));\n            assertInvalidMessage(\"PRIMARY KEY column \\\"c\\\" cannot be restricted as preceding column \\\"b\\\" is not restricted\",\n                                 \"SELECT * FROM %s WHERE c = 33\");\n        });\n\n        \r\n        \r\n        \r\n        createTable(\"CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY (a, b, c))\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 12, 13, 14)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 15, 16, 17)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (11, 18, 19, 20)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 22, 23, 24)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 25, 26, 27)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (21, 28, 29, 30)\");\n\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 32, 33, 34)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 35, 36, 37)\");\n        execute(\"INSERT INTO %s (a,b,c,d) VALUES (31, 38, 39, 40)\");\n\n        beforeAndAfterFlush(() -> {\n\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE a = 21 AND c > 23\"),\n                       row(21, 25, 26, 27),\n                       row(21, 28, 29, 30));\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE a = 21 AND c > 23 ORDER BY b DESC\"),\n                       row(21, 28, 29, 30),\n                       row(21, 25, 26, 27));\n            assertRows(executeFilteringOnly(\"SELECT * FROM %s WHERE c > 16 and c < 36\"),\n                       row(11, 18, 19, 20),\n                       row(21, 22, 23, 24),\n                       row(21, 25, 26, 27),\n                       row(21, 28, 29, 30),\n                       row(31, 32, 33, 34));\n        });\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/operations/SelectTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":2441,"status":"M"}],"commitId":"c83729f41d358ce3ca2ac0323704ef516dff9298","commitMessage":"@@@Make sure that indexing/filtering restrictions are picked up correctly even if the columns are given in order\n\nPatch by Alex Petrov; reviewed by Sam Tunnicliffe and Benjamin Lerer for CASSANDRA-11310\n","date":"2016-04-20 01:05:29","modifiedFileCount":"3","status":"M","submitter":"Alex Petrov"}]
