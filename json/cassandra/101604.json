[{"authorTime":"2016-01-19 15:57:59","codes":[{"authorDate":"2015-06-25 00:13:15","commitOrder":2,"curCode":"    public void testIndexOnKeyWithReverseClustering() throws Throwable\n    {\n        createTable(\" CREATE TABLE %s (k1 int, k2 int, v int, PRIMARY KEY ((k1, k2), v) ) WITH CLUSTERING ORDER BY (v DESC)\");\n\n        createIndex(\"CREATE INDEX ON %s (k2)\");\n\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 0, 1)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 1, 2)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 0, 3)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (1, 0, 4)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (1, 1, 5)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (2, 0, 7)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (2, 1, 8)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (3, 0, 1)\");\n\n        assertRows(execute(\"SELECT * FROM %s WHERE k2 = 0 AND v >= 2 ALLOW FILTERING\"),\n                   row(2, 0, 7),\n                   row(0, 0, 3),\n                   row(1, 0, 4));\n    }\n","date":"2015-06-25 00:13:15","endLine":432,"groupId":"31348","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexOnKeyWithReverseClustering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/0b/812c60c7b6a9d7ec7e83f81f401f4cc5b25d2c.src","preCode":"    public void testIndexOnKeyWithReverseClustering() throws Throwable\n    {\n        createTable(\" CREATE TABLE %s (k1 int, k2 int, v int, PRIMARY KEY ((k1, k2), v) ) WITH CLUSTERING ORDER BY (v DESC)\");\n\n        createIndex(\"CREATE INDEX ON %s (k2)\");\n\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 0, 1)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 1, 2)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 0, 3)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (1, 0, 4)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (1, 1, 5)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (2, 0, 7)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (2, 1, 8)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (3, 0, 1)\");\n\n        assertRows(execute(\"SELECT * FROM %s WHERE k2 = 0 AND v >= 2 ALLOW FILTERING\"),\n                   row(2, 0, 7),\n                   row(0, 0, 3),\n                   row(1, 0, 4));\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":413,"status":"NB"},{"authorDate":"2016-01-19 15:57:59","commitOrder":2,"curCode":"    public void testIndexOnCompoundRowKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (interval text, seq int, id int, severity int static, PRIMARY KEY ((interval, seq), id) ) WITH CLUSTERING ORDER BY (id DESC)\");\n\n        execute(\"CREATE INDEX ON %s (severity)\");\n\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 4, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 4, 11)\");\n\n        assertRows(execute(\"select * from %s where severity = 10 and interval = 't' and seq = 1\"),\n                   row(\"t\", 1, 4, 10), row(\"t\", 1, 3, 10));\n    }\n","date":"2016-01-20 17:58:28","endLine":72,"groupId":"16656","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"testIndexOnCompoundRowKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f6/9d8d54e9e824dfb9810b19981b0e226f658cf2.src","preCode":"    public void testIndexOnCompoundRowKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (interval text, seq int, id int, severity int static, PRIMARY KEY ((interval, seq), id) ) WITH CLUSTERING ORDER BY (id DESC)\");\n\n        execute(\"CREATE INDEX ON %s (severity)\");\n\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 4, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 4, 11)\");\n\n        assertRows(execute(\"select * from %s where severity = 10 and interval = 't' and seq = 1\"),\n                   row(\"t\", 1, 4, 10), row(\"t\", 1, 3, 10));\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnStaticColumnTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"}],"commitId":"9e7489116feace284e0d704135186991a67ee5e3","commitMessage":"@@@Add support for secondary indexes on static columns\n\nPatch by Taiyuan Zhang; reviewed by Sam Tunnicliffe for CASSANDRA-8103\n\nAlso includes fix for CASSANDRA-10958\n","date":"2016-01-20 17:58:28","modifiedFileCount":"13","status":"M","submitter":"Taiyuan Zhang"},{"authorTime":"2016-01-19 15:57:59","codes":[{"authorDate":"2016-09-21 23:08:58","commitOrder":3,"curCode":"    public void testIndexOnKeyWithReverseClustering() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (k1 int, k2 int, v int, PRIMARY KEY ((k1, k2), v) ) WITH CLUSTERING ORDER BY (v DESC)\");\n\n        createIndex(\"CREATE INDEX ON %s (k2)\");\n\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 0, 1)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 1, 2)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 0, 3)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (1, 0, 4)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (1, 1, 5)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (2, 0, 7)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (2, 1, 8)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (3, 0, 1)\");\n\n        beforeAndAfterFlush(() -> {\n            assertRows(execute(\"SELECT * FROM %s WHERE k2 = 0 AND v >= 2 ALLOW FILTERING\"),\n                       row(2, 0, 7),\n                       row(0, 0, 3),\n                       row(1, 0, 4));\n        });\n    }\n","date":"2016-09-21 23:30:18","endLine":494,"groupId":"101604","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexOnKeyWithReverseClustering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5c/b76c913468acfd6bfa34825fe2a8fa7878c4ce.src","preCode":"    public void testIndexOnKeyWithReverseClustering() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (k1 int, k2 int, v int, PRIMARY KEY ((k1, k2), v) ) WITH CLUSTERING ORDER BY (v DESC)\");\n\n        createIndex(\"CREATE INDEX ON %s (k2)\");\n\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 0, 1)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 1, 2)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (0, 0, 3)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (1, 0, 4)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (1, 1, 5)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (2, 0, 7)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (2, 1, 8)\");\n        execute(\"INSERT INTO %s (k1, k2, v) VALUES (3, 0, 1)\");\n\n        assertRows(execute(\"SELECT * FROM %s WHERE k2 = 0 AND v >= 2 ALLOW FILTERING\"),\n                   row(2, 0, 7),\n                   row(0, 0, 3),\n                   row(1, 0, 4));\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":473,"status":"M"},{"authorDate":"2016-01-19 15:57:59","commitOrder":3,"curCode":"    public void testIndexOnCompoundRowKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (interval text, seq int, id int, severity int static, PRIMARY KEY ((interval, seq), id) ) WITH CLUSTERING ORDER BY (id DESC)\");\n\n        execute(\"CREATE INDEX ON %s (severity)\");\n\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 4, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 4, 11)\");\n\n        assertRows(execute(\"select * from %s where severity = 10 and interval = 't' and seq = 1\"),\n                   row(\"t\", 1, 4, 10), row(\"t\", 1, 3, 10));\n    }\n","date":"2016-01-20 17:58:28","endLine":72,"groupId":"101604","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testIndexOnCompoundRowKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f6/9d8d54e9e824dfb9810b19981b0e226f658cf2.src","preCode":"    public void testIndexOnCompoundRowKey() throws Throwable\n    {\n        createTable(\"CREATE TABLE %s (interval text, seq int, id int, severity int static, PRIMARY KEY ((interval, seq), id) ) WITH CLUSTERING ORDER BY (id DESC)\");\n\n        execute(\"CREATE INDEX ON %s (severity)\");\n\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',1, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 3, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('t',2, 4, 10)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',1, 4, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 3, 11)\");\n        execute(\"insert into %s (interval, seq, id , severity) values('m',2, 4, 11)\");\n\n        assertRows(execute(\"select * from %s where severity = 10 and interval = 't' and seq = 1\"),\n                   row(\"t\", 1, 4, 10), row(\"t\", 1, 3, 10));\n    }\n","realPath":"test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnStaticColumnTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"}],"commitId":"bcd274f7c04e2cb9fe9a8155428dfa7212fe3a70","commitMessage":"@@@Ninja: add beforeAndAfterFlush to 2i and filtering tests.","date":"2016-09-21 23:30:18","modifiedFileCount":"2","status":"M","submitter":"Alex Petrov"}]
