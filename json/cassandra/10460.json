[{"authorTime":"2015-07-03 15:16:15","codes":[{"authorDate":"2015-07-03 15:16:15","commitOrder":1,"curCode":"    public void testSinglePartitionSliceAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","date":"2015-10-07 16:28:37","endLine":115,"groupId":"30964","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSinglePartitionSliceAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/fc/aa92f910863be284c7f9ea8698aefe519a9203.src","preCode":"    public void testSinglePartitionSliceAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"},{"authorDate":"2015-07-03 15:16:15","commitOrder":1,"curCode":"    public void testSinglePartitionNamesAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cdd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).includeRow(\"cc\").includeRow(\"dd\").build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","date":"2015-10-07 16:28:37","endLine":144,"groupId":"25528","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSinglePartitionNamesAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/fc/aa92f910863be284c7f9ea8698aefe519a9203.src","preCode":"    public void testSinglePartitionNamesAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cdd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).includeRow(\"cc\").includeRow(\"dd\").build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"}],"commitId":"557bbbccb0eddc9f2ba6431b023b3ded253de056","commitMessage":"@@@Abort in-progress queries that time out\n\npatch by Stefania; reviewed by aweisberg for CASSANDRA-7392\n","date":"2015-10-07 16:28:37","modifiedFileCount":"48","status":"B","submitter":"Stefania Alborghetti"},{"authorTime":"2015-10-20 23:32:52","codes":[{"authorDate":"2015-10-20 23:32:52","commitOrder":2,"curCode":"    public void testSinglePartitionSliceAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        cfs.truncateBlocking();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","date":"2015-10-20 23:32:52","endLine":117,"groupId":"30964","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSinglePartitionSliceAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/66/3080b71e30e08efbb47dd5d25c0d89e5e27480.src","preCode":"    public void testSinglePartitionSliceAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2015-10-20 23:32:52","commitOrder":2,"curCode":"    public void testSinglePartitionNamesAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        cfs.truncateBlocking();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).includeRow(\"cc\").includeRow(\"dd\").build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","date":"2015-10-20 23:32:52","endLine":148,"groupId":"25528","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSinglePartitionNamesAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/66/3080b71e30e08efbb47dd5d25c0d89e5e27480.src","preCode":"    public void testSinglePartitionNamesAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cdd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).includeRow(\"cc\").includeRow(\"dd\").build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"881e2da0a4c37f54fbd52ed66f080e33af02b978","commitMessage":"@@@Fix ReadCommandTest\n\nPatch by jjirsa; reviewed by stefania for CASSANDRA-10555\n","date":"2015-10-20 23:32:52","modifiedFileCount":"1","status":"M","submitter":"Jeff Jirsa"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":3,"curCode":"    public void testSinglePartitionSliceAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        cfs.truncateBlocking();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","date":"2017-01-28 06:17:46","endLine":148,"groupId":"7496","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSinglePartitionSliceAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/24/9d78030289d2474da89282726cbf109ea4bcda.src","preCode":"    public void testSinglePartitionSliceAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        cfs.truncateBlocking();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":3,"curCode":"    public void testSinglePartitionNamesAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        cfs.truncateBlocking();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).includeRow(\"cc\").includeRow(\"dd\").build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","date":"2017-01-28 06:17:46","endLine":179,"groupId":"24859","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSinglePartitionNamesAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/24/9d78030289d2474da89282726cbf109ea4bcda.src","preCode":"    public void testSinglePartitionNamesAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        cfs.truncateBlocking();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata, 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).includeRow(\"cc\").includeRow(\"dd\").build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"af3fe39dcabd9ef77a00309ce6741268423206df","commitMessage":"@@@Make TableMetadata immutable.  optimize Schema\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-9425\n","date":"2017-01-28 06:17:46","modifiedFileCount":"511","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2021-08-28 00:54:28","codes":[{"authorDate":"2021-08-28 00:54:28","commitOrder":4,"curCode":"    public void testSinglePartitionSliceAbort()\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        cfs.truncateBlocking();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","date":"2021-08-28 01:00:04","endLine":265,"groupId":"10460","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testSinglePartitionSliceAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/52/a92b478f19facb29eef56e363c6a3698d419f4.src","preCode":"    public void testSinglePartitionSliceAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        cfs.truncateBlocking();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2021-08-28 00:54:28","commitOrder":4,"curCode":"    public void testSinglePartitionNamesAbort()\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        cfs.truncateBlocking();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).includeRow(\"cc\").includeRow(\"dd\").build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","date":"2021-08-28 01:00:04","endLine":296,"groupId":"10460","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testSinglePartitionNamesAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/52/a92b478f19facb29eef56e363c6a3698d419f4.src","preCode":"    public void testSinglePartitionNamesAbort() throws Exception\n    {\n        ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2);\n\n        cfs.truncateBlocking();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"cc\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        cfs.forceBlockingFlush();\n\n        new RowUpdateBuilder(cfs.metadata(), 0, ByteBufferUtil.bytes(\"key\"))\n                .clustering(\"dd\")\n                .add(\"a\", ByteBufferUtil.bytes(\"abcd\"))\n                .build()\n                .apply();\n\n        ReadCommand readCommand = Util.cmd(cfs, Util.dk(\"key\")).includeRow(\"cc\").includeRow(\"dd\").build();\n\n        List<FilteredPartition> partitions = Util.getAll(readCommand);\n        assertEquals(1, partitions.size());\n        assertEquals(2, partitions.get(0).rowCount());\n\n        readCommand.abort();\n        assertEquals(0, Util.getAll(readCommand).size());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/ReadCommandTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":268,"status":"M"}],"commitId":"33979e3c916b2006e75a042fa4c806364dbbe5c1","commitMessage":"@@@Merge branch 'cassandra-4.0' into trunk\n","date":"2021-08-28 01:00:04","modifiedFileCount":"27","status":"M","submitter":"Caleb Rackliffe"}]
