[{"authorTime":"2015-06-04 23:20:37","codes":[{"authorDate":"2015-06-04 23:20:37","commitOrder":2,"curCode":"    public void testInvalidProtocolVersion() throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        \r\n        byte[] frame = new byte[] {\n                (byte) ((Server.CURRENT_VERSION + 1) & Frame.PROTOCOL_VERSION_MASK),  \r\n                0x00,  \r\n                0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ProtocolException e) {\n        }\n    }\n","date":"2015-06-04 23:20:37","endLine":56,"groupId":"17086","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidProtocolVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/99/10167db2dd50a84aa341905cacc1036b6d7175.src","preCode":"    public void testInvalidProtocolVersion() throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        \r\n        byte[] frame = new byte[] {\n                (byte) ((Server.CURRENT_VERSION + 1) & Frame.PROTOCOL_VERSION_MASK),  \r\n                0x00,  \r\n                0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ProtocolException e) {\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/transport/ProtocolErrorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"B"},{"authorDate":"2015-06-04 23:20:37","commitOrder":2,"curCode":"    public void testInvalidDirection() throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        \r\n        \r\n        byte[] frame = new byte[] {\n                (byte) 0x82,  \r\n                0x00,  \r\n                0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ErrorMessage.WrappedException e) {\n            \r\n            Assert.assertEquals(1, e.getStreamId());\n        }\n    }\n","date":"2015-06-04 23:20:37","endLine":86,"groupId":"17086","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidDirection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/99/10167db2dd50a84aa341905cacc1036b6d7175.src","preCode":"    public void testInvalidDirection() throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        \r\n        \r\n        byte[] frame = new byte[] {\n                (byte) 0x82,  \r\n                0x00,  \r\n                0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ErrorMessage.WrappedException e) {\n            \r\n            Assert.assertEquals(1, e.getStreamId());\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/transport/ProtocolErrorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"MB"}],"commitId":"1a14efdfd7137d54a9f18a809c722d467185c920","commitMessage":"@@@Merge branch 'cassandra-2.2' into trunk\n","date":"2015-06-04 23:20:37","modifiedFileCount":"3","status":"M","submitter":"Tyler Hobbs"},{"authorTime":"2015-09-11 04:08:42","codes":[{"authorDate":"2015-09-11 04:08:42","commitOrder":3,"curCode":"    public void testInvalidProtocolVersion(int version) throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        byte[] frame = new byte[] {\n                (byte) REQUEST.addToVersion(version),  \r\n                0x00,  \r\n                0x00, 0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ProtocolException e) {\n            Assert.assertTrue(e.getMessage().contains(\"Invalid or unsupported protocol version\"));\n        }\n    }\n","date":"2015-09-11 04:08:57","endLine":68,"groupId":"17086","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidProtocolVersion","params":"(intversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f4/7f35537f47cbce79fcc5fd5392ebdd63cf279a.src","preCode":"    public void testInvalidProtocolVersion() throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        \r\n        byte[] frame = new byte[] {\n                (byte) ((Server.CURRENT_VERSION + 1) & Frame.PROTOCOL_VERSION_MASK),  \r\n                0x00,  \r\n                0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ProtocolException e) {\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/transport/ProtocolErrorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2015-09-11 04:08:42","commitOrder":3,"curCode":"    public void testInvalidDirection() throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        \r\n        \r\n        byte[] frame = new byte[] {\n                (byte) RESPONSE.addToVersion(Server.CURRENT_VERSION),  \r\n                0x00,  \r\n                0x00, 0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ErrorMessage.WrappedException e) {\n            \r\n            Assert.assertEquals(1, e.getStreamId());\n            Assert.assertTrue(e.getMessage().contains(\"Wrong protocol direction\"));\n        }\n    }\n","date":"2015-09-11 04:08:57","endLine":99,"groupId":"17086","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidDirection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f4/7f35537f47cbce79fcc5fd5392ebdd63cf279a.src","preCode":"    public void testInvalidDirection() throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        \r\n        \r\n        byte[] frame = new byte[] {\n                (byte) 0x82,  \r\n                0x00,  \r\n                0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ErrorMessage.WrappedException e) {\n            \r\n            Assert.assertEquals(1, e.getStreamId());\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/transport/ProtocolErrorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"f6924a1de065c448c5da9a5afbe2bf4174631983","commitMessage":"@@@Merge branch cassandra-3.0 into trunk\n","date":"2015-09-11 04:08:57","modifiedFileCount":"20","status":"M","submitter":"blerer"},{"authorTime":"2016-10-31 21:16:40","codes":[{"authorDate":"2015-09-11 04:08:42","commitOrder":4,"curCode":"    public void testInvalidProtocolVersion(int version) throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        byte[] frame = new byte[] {\n                (byte) REQUEST.addToVersion(version),  \r\n                0x00,  \r\n                0x00, 0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ProtocolException e) {\n            Assert.assertTrue(e.getMessage().contains(\"Invalid or unsupported protocol version\"));\n        }\n    }\n","date":"2015-09-11 04:08:57","endLine":68,"groupId":"17086","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidProtocolVersion","params":"(intversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f4/7f35537f47cbce79fcc5fd5392ebdd63cf279a.src","preCode":"    public void testInvalidProtocolVersion(int version) throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        byte[] frame = new byte[] {\n                (byte) REQUEST.addToVersion(version),  \r\n                0x00,  \r\n                0x00, 0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ProtocolException e) {\n            Assert.assertTrue(e.getMessage().contains(\"Invalid or unsupported protocol version\"));\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/transport/ProtocolErrorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2016-10-31 21:16:40","commitOrder":4,"curCode":"    public void testInvalidDirection() throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        \r\n        \r\n        byte[] frame = new byte[] {\n                (byte) RESPONSE.addToVersion(ProtocolVersion.CURRENT.asInt()),  \r\n                0x00,  \r\n                0x00, 0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ErrorMessage.WrappedException e) {\n            \r\n            Assert.assertEquals(1, e.getStreamId());\n            Assert.assertTrue(e.getMessage().contains(\"Wrong protocol direction\"));\n        }\n    }\n","date":"2016-10-31 21:16:40","endLine":131,"groupId":"17086","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidDirection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5e/9731a6fa1997e78035835acf155382f631aeae.src","preCode":"    public void testInvalidDirection() throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        \r\n        \r\n        byte[] frame = new byte[] {\n                (byte) RESPONSE.addToVersion(Server.CURRENT_VERSION),  \r\n                0x00,  \r\n                0x00, 0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ErrorMessage.WrappedException e) {\n            \r\n            Assert.assertEquals(1, e.getStreamId());\n            Assert.assertTrue(e.getMessage().contains(\"Wrong protocol direction\"));\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/transport/ProtocolErrorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"b4068ef00e9566ac5ecba9c67ddcf419fcd673a2","commitMessage":"@@@Merge branch 'cassandra-3.X' into trunk\n","date":"2016-10-31 21:16:40","modifiedFileCount":"163","status":"M","submitter":"Stefania Alborghetti"},{"authorTime":"2020-12-02 01:54:06","codes":[{"authorDate":"2020-12-02 01:54:06","commitOrder":5,"curCode":"    public void testInvalidProtocolVersion(int version) throws Exception\n    {\n        Envelope.Decoder dec = new Envelope.Decoder();\n\n        List<Object> results = new ArrayList<>();\n        byte[] bytes = new byte[] {\n                (byte) REQUEST.addToVersion(version),  \r\n                0x00,  \r\n                0x00, 0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(bytes);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ProtocolException e) {\n            Assert.assertTrue(e.getMessage().contains(\"Invalid or unsupported protocol version\"));\n        }\n    }\n","date":"2020-12-02 02:49:06","endLine":77,"groupId":"101111","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testInvalidProtocolVersion","params":"(intversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/71/47dfadc66e7c33f91c0a66b402015c799c094f.src","preCode":"    public void testInvalidProtocolVersion(int version) throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        byte[] frame = new byte[] {\n                (byte) REQUEST.addToVersion(version),  \r\n                0x00,  \r\n                0x00, 0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ProtocolException e) {\n            Assert.assertTrue(e.getMessage().contains(\"Invalid or unsupported protocol version\"));\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/transport/ProtocolErrorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2020-12-02 01:54:06","commitOrder":5,"curCode":"    public void testInvalidDirection() throws Exception\n    {\n        Envelope.Decoder dec = new Envelope.Decoder();\n\n        List<Object> results = new ArrayList<>();\n        \r\n        \r\n        byte[] bytes = new byte[] {\n                (byte) RESPONSE.addToVersion(ProtocolVersion.CURRENT.asInt()),  \r\n                0x00,  \r\n                0x00, 0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(bytes);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ErrorMessage.WrappedException e) {\n            \r\n            Assert.assertEquals(1, e.getStreamId());\n            Assert.assertTrue(e.getMessage().contains(\"Wrong protocol direction\"));\n        }\n    }\n","date":"2020-12-02 02:49:06","endLine":131,"groupId":"101111","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testInvalidDirection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/71/47dfadc66e7c33f91c0a66b402015c799c094f.src","preCode":"    public void testInvalidDirection() throws Exception\n    {\n        Frame.Decoder dec = new Frame.Decoder(null);\n\n        List<Object> results = new ArrayList<>();\n        \r\n        \r\n        byte[] frame = new byte[] {\n                (byte) RESPONSE.addToVersion(ProtocolVersion.CURRENT.asInt()),  \r\n                0x00,  \r\n                0x00, 0x01,  \r\n                0x09,  \r\n                0x00, 0x00, 0x00, 0x21,  \r\n                0x00, 0x00, 0x00, 0x1b, 0x00, 0x1b, 0x53, 0x45,\n                0x4c, 0x45, 0x43, 0x54, 0x20, 0x2a, 0x20, 0x46,\n                0x52, 0x4f, 0x4d, 0x20, 0x73, 0x79, 0x73, 0x74,\n                0x65, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,\n                0x3b\n        };\n        ByteBuf buf = Unpooled.wrappedBuffer(frame);\n        try {\n            dec.decode(null, buf, results);\n            Assert.fail(\"Expected protocol error\");\n        } catch (ErrorMessage.WrappedException e) {\n            \r\n            Assert.assertEquals(1, e.getStreamId());\n            Assert.assertTrue(e.getMessage().contains(\"Wrong protocol direction\"));\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/transport/ProtocolErrorTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"a7c4ba9eeecb365e7c4753d8eaab747edd9a632a","commitMessage":"@@@Improve checksumming and compression in protocol V5\n\nThis reverts the changes made to the native protocol V5 wire format in\nCASSANDRA-13304 and subsequent follow up JIRAs (CASSANDRA-15556 &\nCASSANDRA-14716). The framing format has been re-implemented based on the\ninternode messaging format developed in CASSANDRA-15066.\n\nOPTIONS and STARTUP messages are unframed (i.e. identical to the V4 format).\nAfter sending its response to a STARTUP message.  the server modifies the\npipeline and all further messages are sent (and should be expected by the\nclient to be received) in the format determined by the protocol version of\nthe STARTUP message.\n\nPatch by Sam Tunnicliffe; reviewed by Alex Petrov and Caleb Rackliffe\nfor CASSANDRA-15299\n","date":"2020-12-02 02:49:06","modifiedFileCount":"36","status":"M","submitter":"Sam Tunnicliffe"}]
