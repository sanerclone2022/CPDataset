[{"authorTime":"2018-07-04 03:07:11","codes":[{"authorDate":"2018-07-04 03:07:11","commitOrder":1,"curCode":"    public void blockStreamReader(BenchmarkState state) throws Exception\n    {\n        EmbeddedChannel channel = createMockNettyChannel();\n        RebufferingByteBufDataInputPlus in = new RebufferingByteBufDataInputPlus(STREAM_SIZE, STREAM_SIZE, channel.config());\n        in.append(state.serializedBlockStream.retainedDuplicate());\n        SSTableMultiWriter sstableWriter = state.blockStreamReader.read(in);\n        Collection<SSTableReader> newSstables = sstableWriter.finished();\n        in.close();\n        channel.finishAndReleaseAll();\n    }\n","date":"2018-07-28 00:50:25","endLine":250,"groupId":"10236","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"blockStreamReader","params":"(BenchmarkStatestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/31/92bccddefda318797e102ed39c7fc6fed3b18e.src","preCode":"    public void blockStreamReader(BenchmarkState state) throws Exception\n    {\n        EmbeddedChannel channel = createMockNettyChannel();\n        RebufferingByteBufDataInputPlus in = new RebufferingByteBufDataInputPlus(STREAM_SIZE, STREAM_SIZE, channel.config());\n        in.append(state.serializedBlockStream.retainedDuplicate());\n        SSTableMultiWriter sstableWriter = state.blockStreamReader.read(in);\n        Collection<SSTableReader> newSstables = sstableWriter.finished();\n        in.close();\n        channel.finishAndReleaseAll();\n    }\n","realPath":"test/microbench/org/apache/cassandra/test/microbench/ZeroCopyStreamingBenchmark.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"B"},{"authorDate":"2018-07-04 03:07:11","commitOrder":1,"curCode":"    public void partialStreamReader(BenchmarkState state) throws Exception\n    {\n        EmbeddedChannel channel = createMockNettyChannel();\n        RebufferingByteBufDataInputPlus in = new RebufferingByteBufDataInputPlus(STREAM_SIZE, STREAM_SIZE, channel.config());\n        in.append(state.serializedPartialStream.retainedDuplicate());\n        SSTableMultiWriter sstableWriter = state.partialStreamReader.read(in);\n        Collection<SSTableReader> newSstables = sstableWriter.finished();\n        in.close();\n        channel.finishAndReleaseAll();\n    }\n","date":"2018-07-28 00:50:25","endLine":274,"groupId":"10236","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"partialStreamReader","params":"(BenchmarkStatestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/31/92bccddefda318797e102ed39c7fc6fed3b18e.src","preCode":"    public void partialStreamReader(BenchmarkState state) throws Exception\n    {\n        EmbeddedChannel channel = createMockNettyChannel();\n        RebufferingByteBufDataInputPlus in = new RebufferingByteBufDataInputPlus(STREAM_SIZE, STREAM_SIZE, channel.config());\n        in.append(state.serializedPartialStream.retainedDuplicate());\n        SSTableMultiWriter sstableWriter = state.partialStreamReader.read(in);\n        Collection<SSTableReader> newSstables = sstableWriter.finished();\n        in.close();\n        channel.finishAndReleaseAll();\n    }\n","realPath":"test/microbench/org/apache/cassandra/test/microbench/ZeroCopyStreamingBenchmark.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"B"}],"commitId":"47a12c52a313258307ab88392f75c5866d9a2bb1","commitMessage":"@@@Stream entire SSTables when possible\n\npatch by Dinesh Joshi; reviewed by Aleksey Yeschenko and Ariel Weisberg\nfor CASSANDRA-14566\n","date":"2018-07-28 00:50:25","modifiedFileCount":"39","status":"B","submitter":"Dinesh A. Joshi"},{"authorTime":"2019-06-12 23:26:54","codes":[{"authorDate":"2019-06-12 23:26:54","commitOrder":2,"curCode":"    public void blockStreamReader(BenchmarkState state) throws Exception\n    {\n        EmbeddedChannel channel = createMockNettyChannel();\n        AsyncStreamingInputPlus in = new AsyncStreamingInputPlus(channel);\n        in.append(state.serializedBlockStream.retainedDuplicate());\n        SSTableMultiWriter sstableWriter = state.blockStreamReader.read(in);\n        Collection<SSTableReader> newSstables = sstableWriter.finished();\n        in.close();\n        channel.finishAndReleaseAll();\n    }\n","date":"2019-06-12 23:26:54","endLine":250,"groupId":"1098","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"blockStreamReader","params":"(BenchmarkStatestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/2b/642a83dd813da3065532257f7b6689e5cbbb2d.src","preCode":"    public void blockStreamReader(BenchmarkState state) throws Exception\n    {\n        EmbeddedChannel channel = createMockNettyChannel();\n        RebufferingByteBufDataInputPlus in = new RebufferingByteBufDataInputPlus(STREAM_SIZE, STREAM_SIZE, channel.config());\n        in.append(state.serializedBlockStream.retainedDuplicate());\n        SSTableMultiWriter sstableWriter = state.blockStreamReader.read(in);\n        Collection<SSTableReader> newSstables = sstableWriter.finished();\n        in.close();\n        channel.finishAndReleaseAll();\n    }\n","realPath":"test/microbench/org/apache/cassandra/test/microbench/ZeroCopyStreamingBenchmark.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"},{"authorDate":"2019-06-12 23:26:54","commitOrder":2,"curCode":"    public void partialStreamReader(BenchmarkState state) throws Exception\n    {\n        EmbeddedChannel channel = createMockNettyChannel();\n        AsyncStreamingInputPlus in = new AsyncStreamingInputPlus(channel);\n        in.append(state.serializedPartialStream.retainedDuplicate());\n        SSTableMultiWriter sstableWriter = state.partialStreamReader.read(in);\n        Collection<SSTableReader> newSstables = sstableWriter.finished();\n        in.close();\n        channel.finishAndReleaseAll();\n    }\n","date":"2019-06-12 23:26:54","endLine":274,"groupId":"1098","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"partialStreamReader","params":"(BenchmarkStatestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/2b/642a83dd813da3065532257f7b6689e5cbbb2d.src","preCode":"    public void partialStreamReader(BenchmarkState state) throws Exception\n    {\n        EmbeddedChannel channel = createMockNettyChannel();\n        RebufferingByteBufDataInputPlus in = new RebufferingByteBufDataInputPlus(STREAM_SIZE, STREAM_SIZE, channel.config());\n        in.append(state.serializedPartialStream.retainedDuplicate());\n        SSTableMultiWriter sstableWriter = state.partialStreamReader.read(in);\n        Collection<SSTableReader> newSstables = sstableWriter.finished();\n        in.close();\n        channel.finishAndReleaseAll();\n    }\n","realPath":"test/microbench/org/apache/cassandra/test/microbench/ZeroCopyStreamingBenchmark.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"}],"commitId":"310a48efcfdc0fb77fbd5fd6e734bf17667f617d","commitMessage":"@@@Rewrite the internode messaging subsystem\n\npatch by Aleksey Yeschenko and Benedict Elliott Smith; reviewed by Alex\nPetrov.  Aleksey Yeschenko.  and Benedict Elliott Smith for CASSANDRA-15066\n\nCo-authored-by: Aleksey Yeschenko <aleksey@apache.org>\nCo-authored-by: Benedict Elliott Smith <benedict@apache.org>\n","date":"2019-06-12 23:26:54","modifiedFileCount":"253","status":"M","submitter":"Benedict Elliott Smith"}]
