[{"authorTime":"2015-12-05 04:54:15","codes":[{"authorDate":"2015-12-05 04:54:15","commitOrder":2,"curCode":"    public void testGetIndexNaturalEndpoint() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddress.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddress.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddress.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddress.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.setKeyspaceMetadata(meta);\n\n        Optional<InetAddress> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                       new StringToken(\"CA\"),\n                                                                       new StringToken(\"BB\"));\n\n        Assert.assertTrue(naturalEndpoint.isPresent());\n        Assert.assertEquals(InetAddress.getByName(\"127.0.0.2\"), naturalEndpoint.get());\n    }\n","date":"2015-12-05 04:54:15","endLine":84,"groupId":"1124","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetIndexNaturalEndpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c2/38f3603ee44aed00ff9e48924ba6511e43fcc2.src","preCode":"    public void testGetIndexNaturalEndpoint() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddress.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddress.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddress.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddress.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.setKeyspaceMetadata(meta);\n\n        Optional<InetAddress> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                       new StringToken(\"CA\"),\n                                                                       new StringToken(\"BB\"));\n\n        Assert.assertTrue(naturalEndpoint.isPresent());\n        Assert.assertEquals(InetAddress.getByName(\"127.0.0.2\"), naturalEndpoint.get());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"MB"},{"authorDate":"2015-12-05 04:54:15","commitOrder":2,"curCode":"    public void testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddress.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddress.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddress.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddress.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.setKeyspaceMetadata(meta);\n\n        Optional<InetAddress> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                       new StringToken(\"AB\"),\n                                                                       new StringToken(\"BB\"));\n\n        Assert.assertFalse(naturalEndpoint.isPresent());\n    }\n","date":"2015-12-05 04:54:15","endLine":148,"groupId":"1124","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c2/38f3603ee44aed00ff9e48924ba6511e43fcc2.src","preCode":"    public void testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddress.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddress.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddress.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddress.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.setKeyspaceMetadata(meta);\n\n        Optional<InetAddress> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                       new StringToken(\"AB\"),\n                                                                       new StringToken(\"BB\"));\n\n        Assert.assertFalse(naturalEndpoint.isPresent());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"B"}],"commitId":"9fb436f936d9dc9740273b147c9c4a960638affc","commitMessage":"@@@Merge branch 'cassandra-3.1' into trunk\n","date":"2015-12-05 04:54:15","modifiedFileCount":"3","status":"M","submitter":"T Jake Luciani"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":3,"curCode":"    public void testGetIndexNaturalEndpoint() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddress.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddress.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddress.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddress.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<InetAddress> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                       new StringToken(\"CA\"),\n                                                                       new StringToken(\"BB\"));\n\n        Assert.assertTrue(naturalEndpoint.isPresent());\n        Assert.assertEquals(InetAddress.getByName(\"127.0.0.2\"), naturalEndpoint.get());\n    }\n","date":"2017-01-28 06:17:46","endLine":85,"groupId":"1124","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetIndexNaturalEndpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/65/8b87a54080a8c9673391feece12e9892ab1ab8.src","preCode":"    public void testGetIndexNaturalEndpoint() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddress.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddress.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddress.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddress.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.setKeyspaceMetadata(meta);\n\n        Optional<InetAddress> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                       new StringToken(\"CA\"),\n                                                                       new StringToken(\"BB\"));\n\n        Assert.assertTrue(naturalEndpoint.isPresent());\n        Assert.assertEquals(InetAddress.getByName(\"127.0.0.2\"), naturalEndpoint.get());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":3,"curCode":"    public void testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddress.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddress.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddress.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddress.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<InetAddress> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                       new StringToken(\"AB\"),\n                                                                       new StringToken(\"BB\"));\n\n        Assert.assertFalse(naturalEndpoint.isPresent());\n    }\n","date":"2017-01-28 06:17:46","endLine":149,"groupId":"1124","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/65/8b87a54080a8c9673391feece12e9892ab1ab8.src","preCode":"    public void testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddress.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddress.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddress.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddress.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.setKeyspaceMetadata(meta);\n\n        Optional<InetAddress> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                       new StringToken(\"AB\"),\n                                                                       new StringToken(\"BB\"));\n\n        Assert.assertFalse(naturalEndpoint.isPresent());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"af3fe39dcabd9ef77a00309ce6741268423206df","commitMessage":"@@@Make TableMetadata immutable.  optimize Schema\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-9425\n","date":"2017-01-28 06:17:46","modifiedFileCount":"511","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2017-11-10 00:33:48","codes":[{"authorDate":"2017-11-10 00:33:48","commitOrder":4,"curCode":"    public void testGetIndexNaturalEndpoint() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddressAndPort.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddressAndPort.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<InetAddressAndPort> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                                        new StringToken(\"CA\"),\n                                                                                        new StringToken(\"BB\"));\n\n        Assert.assertTrue(naturalEndpoint.isPresent());\n        Assert.assertEquals(InetAddressAndPort.getByName(\"127.0.0.2\"), naturalEndpoint.get());\n    }\n","date":"2018-01-26 03:32:24","endLine":85,"groupId":"8346","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetIndexNaturalEndpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/42/3ad28150c8df2a89360b6e98f899903bed43ae.src","preCode":"    public void testGetIndexNaturalEndpoint() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddress.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddress.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddress.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddress.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<InetAddress> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                       new StringToken(\"CA\"),\n                                                                       new StringToken(\"BB\"));\n\n        Assert.assertTrue(naturalEndpoint.isPresent());\n        Assert.assertEquals(InetAddress.getByName(\"127.0.0.2\"), naturalEndpoint.get());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2017-11-10 00:33:48","commitOrder":4,"curCode":"    public void testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddressAndPort.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddressAndPort.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<InetAddressAndPort> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                                        new StringToken(\"AB\"),\n                                                                                        new StringToken(\"BB\"));\n\n        Assert.assertFalse(naturalEndpoint.isPresent());\n    }\n","date":"2018-01-26 03:32:24","endLine":149,"groupId":"8346","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/42/3ad28150c8df2a89360b6e98f899903bed43ae.src","preCode":"    public void testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddress.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddress.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddress.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddress.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<InetAddress> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                       new StringToken(\"AB\"),\n                                                                       new StringToken(\"BB\"));\n\n        Assert.assertFalse(naturalEndpoint.isPresent());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"59b5b6bef0fa76bf5740b688fcd4d9cf525760d0","commitMessage":"@@@Allow storage port to be configurable per node\n\nPatch by Ariel Weisberg; Reviewed by Jason Brown for CASSANDRA-7544\n","date":"2018-01-26 03:32:24","modifiedFileCount":"308","status":"M","submitter":"Ariel Weisberg"},{"authorTime":"2018-07-06 06:10:40","codes":[{"authorDate":"2018-07-06 06:10:40","commitOrder":5,"curCode":"    public void testGetIndexNaturalEndpoint() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddressAndPort.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddressAndPort.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<Replica> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                             new StringToken(\"CA\"),\n                                                                             new StringToken(\"BB\"));\n\n        Assert.assertTrue(naturalEndpoint.isPresent());\n        Assert.assertEquals(InetAddressAndPort.getByName(\"127.0.0.2\"), naturalEndpoint.get().endpoint());\n    }\n","date":"2018-09-01 09:34:22","endLine":86,"groupId":"8346","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetIndexNaturalEndpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/7e/ebef75a5869257dd5e605ca8c287b7d8ca7db9.src","preCode":"    public void testGetIndexNaturalEndpoint() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddressAndPort.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddressAndPort.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<InetAddressAndPort> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                                        new StringToken(\"CA\"),\n                                                                                        new StringToken(\"BB\"));\n\n        Assert.assertTrue(naturalEndpoint.isPresent());\n        Assert.assertEquals(InetAddressAndPort.getByName(\"127.0.0.2\"), naturalEndpoint.get());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2018-07-06 06:10:40","commitOrder":5,"curCode":"    public void testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddressAndPort.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddressAndPort.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<Replica> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                             new StringToken(\"AB\"),\n                                                                             new StringToken(\"BB\"));\n\n        Assert.assertFalse(naturalEndpoint.isPresent());\n    }\n","date":"2018-09-01 09:34:22","endLine":150,"groupId":"8346","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/7e/ebef75a5869257dd5e605ca8c287b7d8ca7db9.src","preCode":"    public void testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddressAndPort.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddressAndPort.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<InetAddressAndPort> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                                        new StringToken(\"AB\"),\n                                                                                        new StringToken(\"BB\"));\n\n        Assert.assertFalse(naturalEndpoint.isPresent());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"f7431b432875e334170ccdb19934d05545d2cebd","commitMessage":"@@@Transient Replication and Cheap Quorums\n\nPatch by Blake Eggleston.  Benedict Elliott Smith.  Marcus Eriksson.  Alex Petrov.  Ariel Weisberg; Reviewed by Blake Eggleston.  Marcus Eriksson.  Benedict Elliott Smith.  Alex Petrov.  Ariel Weisberg for CASSANDRA-14404\n\nCo-authored-by: Blake Eggleston <bdeggleston@gmail.com>\nCo-authored-by: Benedict Elliott Smith <benedict@apache.org>\nCo-authored-by: Marcus Eriksson <marcuse@apache.org>\nCo-authored-by: Alex Petrov <oleksandr.petrov@gmail.com>\n","date":"2018-09-01 09:34:22","modifiedFileCount":"230","status":"M","submitter":"Ariel Weisberg"},{"authorTime":"2021-04-15 04:05:55","codes":[{"authorDate":"2021-04-15 04:05:55","commitOrder":6,"curCode":"    public void testGetIndexNaturalEndpoint() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddressAndPort.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddressAndPort.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<Replica> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(Keyspace.open(\"Keyspace1\").getReplicationStrategy(),\n                                                                             new StringToken(\"CA\"),\n                                                                             new StringToken(\"BB\"));\n\n        Assert.assertTrue(naturalEndpoint.isPresent());\n        Assert.assertEquals(InetAddressAndPort.getByName(\"127.0.0.2\"), naturalEndpoint.get().endpoint());\n    }\n","date":"2021-04-15 23:55:20","endLine":86,"groupId":"10721","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testGetIndexNaturalEndpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/78/55150a4990a0fb0ade24f0c469e082a794ce71.src","preCode":"    public void testGetIndexNaturalEndpoint() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddressAndPort.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddressAndPort.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<Replica> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                             new StringToken(\"CA\"),\n                                                                             new StringToken(\"BB\"));\n\n        Assert.assertTrue(naturalEndpoint.isPresent());\n        Assert.assertEquals(InetAddressAndPort.getByName(\"127.0.0.2\"), naturalEndpoint.get().endpoint());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-04-15 04:05:55","commitOrder":6,"curCode":"    public void testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddressAndPort.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddressAndPort.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<Replica> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(Keyspace.open(\"Keyspace1\").getReplicationStrategy(),\n                                                                             new StringToken(\"AB\"),\n                                                                             new StringToken(\"BB\"));\n\n        Assert.assertFalse(naturalEndpoint.isPresent());\n    }\n","date":"2021-04-15 23:55:20","endLine":150,"groupId":"10721","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/78/55150a4990a0fb0ade24f0c469e082a794ce71.src","preCode":"    public void testBaseTokenDoesNotBelongToLocalReplicaShouldReturnEmpty() throws Exception\n    {\n        TokenMetadata metadata = StorageService.instance.getTokenMetadata();\n        metadata.clearUnsafe();\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"A\"), InetAddressAndPort.getByName(\"127.0.0.1\"));\n        metadata.updateNormalToken(new StringToken(\"C\"), InetAddressAndPort.getByName(\"127.0.0.2\"));\n\n        \r\n        metadata.updateNormalToken(new StringToken(\"B\"), InetAddressAndPort.getByName(\"127.0.0.4\"));\n        metadata.updateNormalToken(new StringToken(\"D\"), InetAddressAndPort.getByName(\"127.0.0.5\"));\n\n        Map<String, String> replicationMap = new HashMap<>();\n        replicationMap.put(ReplicationParams.CLASS, NetworkTopologyStrategy.class.getName());\n\n        replicationMap.put(\"DC1\", \"1\");\n        replicationMap.put(\"DC2\", \"1\");\n\n        Keyspace.clear(\"Keyspace1\");\n        KeyspaceMetadata meta = KeyspaceMetadata.create(\"Keyspace1\", KeyspaceParams.create(false, replicationMap));\n        Schema.instance.load(meta);\n\n        Optional<Replica> naturalEndpoint = ViewUtils.getViewNaturalEndpoint(\"Keyspace1\",\n                                                                             new StringToken(\"AB\"),\n                                                                             new StringToken(\"BB\"));\n\n        Assert.assertFalse(naturalEndpoint.isPresent());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"b915688ea878aaa284f5cedeb799c5f797c4d824","commitMessage":"@@@Fix false unavailable for queries due to cluster topology changes\n\npatch by Yifan Cai; reviewed by Aleksey Yeschenko.  Andres de la Pe?a for CASSANDRA-16545\n","date":"2021-04-15 23:55:20","modifiedFileCount":"23","status":"M","submitter":"Yifan Cai"}]
