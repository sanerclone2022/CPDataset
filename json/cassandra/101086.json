[{"authorTime":"2012-01-20 00:05:45","codes":[{"authorDate":"2012-01-20 00:05:45","commitOrder":1,"curCode":"    public void testNormalizeSimpleOverlap()\n    {\n        List<Range<RowPosition>> input, expected;\n\n        input = asList(range(\"1\", \"4\"), range(\"3\", \"5\"));\n        expected = asList(range(\"1\", \"5\"));\n        assertNormalize(input, expected);\n\n        input = asList(range(\"1\", \"4\"), range(\"1\", \"4\"));\n        expected = asList(range(\"1\", \"4\"));\n        assertNormalize(input, expected);\n    }\n","date":"2012-01-20 00:05:45","endLine":496,"groupId":"9001","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNormalizeSimpleOverlap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/dc/951f8c6d1a944fee0fd9a4fe768540159b24f2.src","preCode":"    public void testNormalizeSimpleOverlap()\n    {\n        List<Range<RowPosition>> input, expected;\n\n        input = asList(range(\"1\", \"4\"), range(\"3\", \"5\"));\n        expected = asList(range(\"1\", \"5\"));\n        assertNormalize(input, expected);\n\n        input = asList(range(\"1\", \"4\"), range(\"1\", \"4\"));\n        expected = asList(range(\"1\", \"4\"));\n        assertNormalize(input, expected);\n    }\n","realPath":"test/unit/org/apache/cassandra/dht/RangeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":485,"status":"B"},{"authorDate":"2012-01-20 00:05:45","commitOrder":1,"curCode":"    public void testNormalizeSort()\n    {\n        List<Range<RowPosition>> input, expected;\n\n        input = asList(range(\"4\", \"5\"), range(\"1\", \"3\"));\n        expected = asList(range(\"1\", \"3\"), range(\"4\", \"5\"));\n        assertNormalize(input, expected);\n    }\n","date":"2012-01-20 00:05:45","endLine":506,"groupId":"9002","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNormalizeSort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/dc/951f8c6d1a944fee0fd9a4fe768540159b24f2.src","preCode":"    public void testNormalizeSort()\n    {\n        List<Range<RowPosition>> input, expected;\n\n        input = asList(range(\"4\", \"5\"), range(\"1\", \"3\"));\n        expected = asList(range(\"1\", \"3\"), range(\"4\", \"5\"));\n        assertNormalize(input, expected);\n    }\n","realPath":"test/unit/org/apache/cassandra/dht/RangeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":499,"status":"B"}],"commitId":"35f7bc597a8d26ca88526cf0d5208c13bdda523d","commitMessage":"@@@Allow rangeSlice queries to be start/end inclusive/exclusive\n\npatch by slebresne; reviewed by jbellis for CASSANDRA-3749\n","date":"2012-01-20 00:05:45","modifiedFileCount":"10","status":"B","submitter":"Sylvain Lebresne"},{"authorTime":"2014-09-02 00:54:46","codes":[{"authorDate":"2014-09-02 00:54:46","commitOrder":2,"curCode":"    public void testNormalizeSimpleOverlap()\n    {\n        List<Range<PartitionPosition>> input, expected;\n\n        input = asList(range(\"1\", \"4\"), range(\"3\", \"5\"));\n        expected = asList(range(\"1\", \"5\"));\n        assertNormalize(input, expected);\n\n        input = asList(range(\"1\", \"4\"), range(\"1\", \"4\"));\n        expected = asList(range(\"1\", \"4\"));\n        assertNormalize(input, expected);\n    }\n","date":"2015-06-30 18:47:01","endLine":499,"groupId":"101086","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNormalizeSimpleOverlap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/78/88b85660d01dc2f4132a93d31a006edea94d53.src","preCode":"    public void testNormalizeSimpleOverlap()\n    {\n        List<Range<RowPosition>> input, expected;\n\n        input = asList(range(\"1\", \"4\"), range(\"3\", \"5\"));\n        expected = asList(range(\"1\", \"5\"));\n        assertNormalize(input, expected);\n\n        input = asList(range(\"1\", \"4\"), range(\"1\", \"4\"));\n        expected = asList(range(\"1\", \"4\"));\n        assertNormalize(input, expected);\n    }\n","realPath":"test/unit/org/apache/cassandra/dht/RangeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":488,"status":"M"},{"authorDate":"2014-09-02 00:54:46","commitOrder":2,"curCode":"    public void testNormalizeSort()\n    {\n        List<Range<PartitionPosition>> input, expected;\n\n        input = asList(range(\"4\", \"5\"), range(\"1\", \"3\"));\n        expected = asList(range(\"1\", \"3\"), range(\"4\", \"5\"));\n        assertNormalize(input, expected);\n    }\n","date":"2015-06-30 18:47:01","endLine":509,"groupId":"101086","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNormalizeSort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/78/88b85660d01dc2f4132a93d31a006edea94d53.src","preCode":"    public void testNormalizeSort()\n    {\n        List<Range<RowPosition>> input, expected;\n\n        input = asList(range(\"4\", \"5\"), range(\"1\", \"3\"));\n        expected = asList(range(\"1\", \"3\"), range(\"4\", \"5\"));\n        assertNormalize(input, expected);\n    }\n","realPath":"test/unit/org/apache/cassandra/dht/RangeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"M"}],"commitId":"a991b64811f4d6adb6c7b31c0df52288eb06cf19","commitMessage":"@@@Storage engine refactor.  a.k.a CASSANDRA-8099\n\nInitial patch.  see ticket for details\n","date":"2015-06-30 18:47:01","modifiedFileCount":"374","status":"M","submitter":"Sylvain Lebresne"}]
