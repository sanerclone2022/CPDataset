[{"authorTime":"2014-03-11 20:33:10","codes":[{"authorDate":"2014-03-11 20:33:10","commitOrder":1,"curCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.addTriggerDefinition(td);\n        KSMetaData ksm = KSMetaData.newKeyspace(ksName,\n                                                SimpleStrategy.class,\n                                                Collections.singletonMap(\"replication_factor\", \"1\"),\n                                                true,\n                                                Collections.singletonList(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName));\n    }\n","date":"2014-03-11 20:33:10","endLine":60,"groupId":"17769","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newKsContainsCfWithTrigger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f9/d71ee96d884c762c0caf5053ffde8d1ed1e3ed.src","preCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.addTriggerDefinition(td);\n        KSMetaData ksm = KSMetaData.newKeyspace(ksName,\n                                                SimpleStrategy.class,\n                                                Collections.singletonMap(\"replication_factor\", \"1\"),\n                                                true,\n                                                Collections.singletonList(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName));\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2014-03-11 20:33:10","commitOrder":1,"curCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KSMetaData ksm = KSMetaData.newKeyspace(ksName,\n                                                SimpleStrategy.class,\n                                                Collections.singletonMap(\"replication_factor\", \"1\"),\n                                                true,\n                                                Collections.singletonList(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).clone();\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        cfm2.addTriggerDefinition(td);\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName));\n    }\n","date":"2014-03-11 20:33:10","endLine":104,"groupId":"21862","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addTriggerToCf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f9/d71ee96d884c762c0caf5053ffde8d1ed1e3ed.src","preCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KSMetaData ksm = KSMetaData.newKeyspace(ksName,\n                                                SimpleStrategy.class,\n                                                Collections.singletonMap(\"replication_factor\", \"1\"),\n                                                true,\n                                                Collections.singletonList(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).clone();\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        cfm2.addTriggerDefinition(td);\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName));\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"}],"commitId":"2d92f14baaae7f2dd4a61f602896dd3a4abf7d1f","commitMessage":"@@@Merge branch 'cassandra-2.1' into trunk\n","date":"2014-03-11 20:33:10","modifiedFileCount":"2","status":"B","submitter":"Aleksey Yeschenko"},{"authorTime":"2014-03-24 22:00:00","codes":[{"authorDate":"2014-03-11 20:33:10","commitOrder":2,"curCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.addTriggerDefinition(td);\n        KSMetaData ksm = KSMetaData.newKeyspace(ksName,\n                                                SimpleStrategy.class,\n                                                Collections.singletonMap(\"replication_factor\", \"1\"),\n                                                true,\n                                                Collections.singletonList(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName));\n    }\n","date":"2014-03-11 20:33:10","endLine":60,"groupId":"17769","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newKsContainsCfWithTrigger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f9/d71ee96d884c762c0caf5053ffde8d1ed1e3ed.src","preCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.addTriggerDefinition(td);\n        KSMetaData ksm = KSMetaData.newKeyspace(ksName,\n                                                SimpleStrategy.class,\n                                                Collections.singletonMap(\"replication_factor\", \"1\"),\n                                                true,\n                                                Collections.singletonList(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName));\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2014-03-24 22:00:00","commitOrder":2,"curCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KSMetaData ksm = KSMetaData.newKeyspace(ksName,\n                                                SimpleStrategy.class,\n                                                Collections.singletonMap(\"replication_factor\", \"1\"),\n                                                true,\n                                                Collections.singletonList(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).copy();\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        cfm2.addTriggerDefinition(td);\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName));\n    }\n","date":"2014-03-24 22:00:00","endLine":104,"groupId":"21862","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addTriggerToCf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c6/a1ac5fd69301376cd80c54f692db570de57e9a.src","preCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KSMetaData ksm = KSMetaData.newKeyspace(ksName,\n                                                SimpleStrategy.class,\n                                                Collections.singletonMap(\"replication_factor\", \"1\"),\n                                                true,\n                                                Collections.singletonList(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).clone();\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        cfm2.addTriggerDefinition(td);\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName));\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"e5314641a41b9464d04ed156e46465b3c213abe8","commitMessage":"@@@Merge branch 'cassandra-2.1' into trunk\n\nConflicts:\n\tsrc/java/org/apache/cassandra/cql/AlterTableStatement.java\n\tsrc/java/org/apache/cassandra/cql/DropIndexStatement.java\n\tsrc/java/org/apache/cassandra/cql/QueryProcessor.java\n","date":"2014-03-24 22:00:00","modifiedFileCount":"35","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2015-07-01 01:38:39","codes":[{"authorDate":"2015-07-01 01:38:39","commitOrder":3,"curCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.addTriggerDefinition(td);\n        KSMetaData ksm = KSMetaData.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName));\n    }\n","date":"2015-07-01 21:36:12","endLine":61,"groupId":"21859","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newKsContainsCfWithTrigger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5b/61124b9cba6cb54a58446d97dc206f8a96b353.src","preCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.addTriggerDefinition(td);\n        KSMetaData ksm = KSMetaData.newKeyspace(ksName,\n                SimpleStrategy.class,\n                Collections.singletonMap(\"replication_factor\", \"1\"),\n                true,\n                Collections.singletonList(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName));\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2015-07-01 01:38:39","commitOrder":3,"curCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KSMetaData ksm = KSMetaData.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).copy();\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        cfm2.addTriggerDefinition(td);\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName));\n    }\n","date":"2015-07-01 21:36:12","endLine":97,"groupId":"21862","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addTriggerToCf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5b/61124b9cba6cb54a58446d97dc206f8a96b353.src","preCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KSMetaData ksm = KSMetaData.newKeyspace(ksName,\n                SimpleStrategy.class,\n                Collections.singletonMap(\"replication_factor\", \"1\"),\n                true,\n                Collections.singletonList(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).copy();\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        cfm2.addTriggerDefinition(td);\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName));\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"31e3f612b113a76ca8c04a3a86aa6df3915ad055","commitMessage":"@@@Factor out KSMetaData.KeyspaceParams\n\npatch by Aleksey Yeschenko; reviewed by Robert Stupp for CASSANDRA-9677\n","date":"2015-07-01 21:36:12","modifiedFileCount":"91","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2015-07-01 22:18:12","codes":[{"authorDate":"2015-07-01 22:18:12","commitOrder":4,"curCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.addTriggerDefinition(td);\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName));\n    }\n","date":"2015-07-01 23:55:10","endLine":61,"groupId":"21859","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"newKsContainsCfWithTrigger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/8d/66ca7b4cbb49b2bd9b1c2eb495ef9b13581814.src","preCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.addTriggerDefinition(td);\n        KSMetaData ksm = KSMetaData.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName));\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2015-07-01 22:18:12","commitOrder":4,"curCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).copy();\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        cfm2.addTriggerDefinition(td);\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName));\n    }\n","date":"2015-07-01 23:55:10","endLine":97,"groupId":"21862","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"addTriggerToCf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/8d/66ca7b4cbb49b2bd9b1c2eb495ef9b13581814.src","preCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KSMetaData ksm = KSMetaData.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).copy();\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        cfm2.addTriggerDefinition(td);\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName));\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"a89597da137ad55a5a1b5268ff414c3c1effce10","commitMessage":"@@@Rename and move config.KSMetaData to schema.KeyspaceMetadata\n\npatch by Aleksey Yeschenko; reviewed by Robert Stupp for CASSANDRA-9677\n","date":"2015-07-01 23:55:10","modifiedFileCount":"41","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2015-07-02 21:46:14","codes":[{"authorDate":"2015-07-02 21:46:14","commitOrder":5,"curCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerMetadata td = TriggerMetadata.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.triggers(cfm1.getTriggers().with(td));\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName).get());\n    }\n","date":"2015-07-11 01:08:59","endLine":61,"groupId":"20126","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"newKsContainsCfWithTrigger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/21/1cc9a584535d8d37a8b023dd0f8531ae69a0ea.src","preCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.addTriggerDefinition(td);\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName));\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2015-07-02 21:46:14","commitOrder":5,"curCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).copy();\n        TriggerMetadata td = TriggerMetadata.create(triggerName, triggerClass);\n        cfm2.triggers(cfm2.getTriggers().with(td));\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName).get());\n    }\n","date":"2015-07-11 01:08:59","endLine":97,"groupId":"21862","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"addTriggerToCf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/21/1cc9a584535d8d37a8b023dd0f8531ae69a0ea.src","preCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).copy();\n        TriggerDefinition td = TriggerDefinition.create(triggerName, triggerClass);\n        cfm2.addTriggerDefinition(td);\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName));\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"16044a6f4c19a899172efc8b2d0ac3e4723d4c88","commitMessage":"@@@Make CFMetaData.triggers immutable\n\npatch by Aleksey Yeschenko; reviewed by Robert Stupp for CASSANDRA-9712\n","date":"2015-07-11 01:08:59","modifiedFileCount":"11","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2016-04-28 00:58:12","codes":[{"authorDate":"2015-07-02 21:46:14","commitOrder":6,"curCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerMetadata td = TriggerMetadata.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.triggers(cfm1.getTriggers().with(td));\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName).get());\n    }\n","date":"2015-07-11 01:08:59","endLine":61,"groupId":"20126","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"newKsContainsCfWithTrigger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/21/1cc9a584535d8d37a8b023dd0f8531ae69a0ea.src","preCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerMetadata td = TriggerMetadata.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.triggers(cfm1.getTriggers().with(td));\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName).get());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2016-04-28 00:58:12","commitOrder":6,"curCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).copy();\n        TriggerMetadata td = TriggerMetadata.create(triggerName, triggerClass);\n        cfm2.triggers(cfm2.getTriggers().with(td));\n        MigrationManager.announceColumnFamilyUpdate(cfm2);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName).get());\n    }\n","date":"2016-04-28 00:58:12","endLine":97,"groupId":"21862","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"addTriggerToCf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b6/549bb133b617e669d89aea95f7e0c450fae2d5.src","preCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).copy();\n        TriggerMetadata td = TriggerMetadata.create(triggerName, triggerClass);\n        cfm2.triggers(cfm2.getTriggers().with(td));\n        MigrationManager.announceColumnFamilyUpdate(cfm2, false);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName).get());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"5c5cc540facef9f8645a179e1467ad7edffbda48","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2016-04-28 00:58:12","modifiedFileCount":"12","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":7,"curCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerMetadata td = TriggerMetadata.create(triggerName, triggerClass);\n        TableMetadata tm =\n            CreateTableStatement.parse(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName)\n                                .triggers(Triggers.of(td))\n                                .build();\n\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(tm));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        TableMetadata tm2 = Schema.instance.getTableMetadata(ksName, cfName);\n        assertFalse(tm2.triggers.isEmpty());\n        assertEquals(1, tm2.triggers.size());\n        assertEquals(td, tm2.triggers.get(triggerName).get());\n    }\n","date":"2017-01-28 06:17:46","endLine":66,"groupId":"101460","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"newKsContainsCfWithTrigger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/88/f74a2df7cd509e52072469bb335ae5c1b359d6.src","preCode":"    public void newKsContainsCfWithTrigger() throws Exception\n    {\n        TriggerMetadata td = TriggerMetadata.create(triggerName, triggerClass);\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        cfm1.triggers(cfm1.getTriggers().with(td));\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm2.getTriggers().isEmpty());\n        assertEquals(1, cfm2.getTriggers().size());\n        assertEquals(td, cfm2.getTriggers().get(triggerName).get());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":7,"curCode":"    public void addTriggerToCf() throws Exception\n    {\n        TableMetadata tm1 =\n            CreateTableStatement.parse(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName)\n                                .build();\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(tm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        TriggerMetadata td = TriggerMetadata.create(triggerName, triggerClass);\n        TableMetadata tm2 =\n            Schema.instance\n                  .getTableMetadata(ksName, cfName)\n                  .unbuild()\n                  .triggers(Triggers.of(td))\n                  .build();\n        MigrationManager.announceTableUpdate(tm2);\n\n        TableMetadata tm3 = Schema.instance.getTableMetadata(ksName, cfName);\n        assertFalse(tm3.triggers.isEmpty());\n        assertEquals(1, tm3.triggers.size());\n        assertEquals(td, tm3.triggers.get(triggerName).get());\n    }\n","date":"2017-01-28 06:17:46","endLine":109,"groupId":"101460","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"addTriggerToCf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/88/f74a2df7cd509e52072469bb335ae5c1b359d6.src","preCode":"    public void addTriggerToCf() throws Exception\n    {\n        CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\", cfName), ksName);\n        KeyspaceMetadata ksm = KeyspaceMetadata.create(ksName, KeyspaceParams.simple(1), Tables.of(cfm1));\n        MigrationManager.announceNewKeyspace(ksm);\n\n        CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName, cfName).copy();\n        TriggerMetadata td = TriggerMetadata.create(triggerName, triggerClass);\n        cfm2.triggers(cfm2.getTriggers().with(td));\n        MigrationManager.announceColumnFamilyUpdate(cfm2);\n\n        CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName, cfName);\n        assertFalse(cfm3.getTriggers().isEmpty());\n        assertEquals(1, cfm3.getTriggers().size());\n        assertEquals(td, cfm3.getTriggers().get(triggerName).get());\n    }\n","realPath":"test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"af3fe39dcabd9ef77a00309ce6741268423206df","commitMessage":"@@@Make TableMetadata immutable.  optimize Schema\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-9425\n","date":"2017-01-28 06:17:46","modifiedFileCount":"511","status":"M","submitter":"Aleksey Yeschenko"}]
