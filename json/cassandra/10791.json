[{"authorTime":"2011-07-04 22:36:11","codes":[{"authorDate":"2011-07-04 22:36:11","commitOrder":2,"curCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, new QueryPath(cfName)));\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(new QueryPath(cfName, null, null), 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, new QueryPath(cfName)));\n        assertEquals(10, cf.getColumnCount());\n        for (IColumn c : cf)\n            assert !c.isMarkedForDelete();\n    }\n","date":"2011-07-04 22:36:11","endLine":234,"groupId":"14520","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b9/48f498f26d5919be3a8fbac0e2cd0080687984.src","preCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, new QueryPath(cfName)));\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(new QueryPath(cfName, null, null), 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, new QueryPath(cfName)));\n        assertEquals(10, cf.getColumnCount());\n        for (IColumn c : cf)\n            assert !c.isMarkedForDelete();\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"B"},{"authorDate":"2011-07-04 22:36:11","commitOrder":2,"curCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(new QueryPath(cfName, null, null), 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 5; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, new QueryPath(cfName)));\n        assertEquals(10, cf.getColumnCount());\n        for (IColumn c : cf)\n            assert !c.isMarkedForDelete();\n    }\n","date":"2011-07-04 22:36:11","endLine":279,"groupId":"19078","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b9/48f498f26d5919be3a8fbac0e2cd0080687984.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(new QueryPath(cfName, null, null), 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 5; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, new QueryPath(cfName)));\n        assertEquals(10, cf.getColumnCount());\n        for (IColumn c : cf)\n            assert !c.isMarkedForDelete();\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"MB"}],"commitId":"2c8d2013950575eaff87941073a5fc769328fcff","commitMessage":"@@@Reset CF and SC deletion time after gc_grace\npatch by slebresne; reviewed by jbellis for CASSANDRA-2317\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cassandra/trunk@1142690 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-04 22:36:11","modifiedFileCount":"10","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2012-12-12 20:59:34","codes":[{"authorDate":"2012-12-12 20:59:34","commitOrder":3,"curCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName));\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete();\n    }\n","date":"2013-01-02 20:40:13","endLine":269,"groupId":"7761","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/75/11002b3071fb43bf493e518be0bc17c8e23eb8.src","preCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, new QueryPath(cfName)));\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(new QueryPath(cfName, null, null), 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, new QueryPath(cfName)));\n        assertEquals(10, cf.getColumnCount());\n        for (IColumn c : cf)\n            assert !c.isMarkedForDelete();\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"},{"authorDate":"2012-12-12 20:59:34","commitOrder":3,"curCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 5; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete();\n    }\n","date":"2013-01-02 20:40:13","endLine":314,"groupId":"7761","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/75/11002b3071fb43bf493e518be0bc17c8e23eb8.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(new QueryPath(cfName, null, null), 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 5; i++)\n        {\n            rm.add(new QueryPath(cfName, null, ByteBufferUtil.bytes(String.valueOf(i))), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, new QueryPath(cfName)));\n        assertEquals(10, cf.getColumnCount());\n        for (IColumn c : cf)\n            assert !c.isMarkedForDelete();\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"}],"commitId":"3a005df39797bd7b785d76830e72f3487dc9fa4e","commitMessage":"@@@Replace supercolumns internally by composites\n\npatch by slebresne; reviewed by Vijay for CASSANDRA-3237\n","date":"2013-01-02 20:40:13","modifiedFileCount":"172","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2013-06-19 00:15:02","codes":[{"authorDate":"2013-06-19 00:15:02","commitOrder":4,"curCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-06-19 00:15:02","endLine":271,"groupId":"7761","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/3a/c64183ab6674dafecdab505e7bb7334a68252a.src","preCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName));\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete();\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"},{"authorDate":"2013-06-19 00:15:02","commitOrder":4,"curCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 5; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-06-19 00:15:02","endLine":316,"groupId":"7761","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/3a/c64183ab6674dafecdab505e7bb7334a68252a.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 5; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete();\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"}],"commitId":"1f7628ce7c1b3f820717eaa44df9b182158eb49e","commitMessage":"@@@Include a timestamp with all read commands to determine column expiration\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-5149\n","date":"2013-06-19 00:15:02","modifiedFileCount":"98","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2013-06-28 02:35:18","codes":[{"authorDate":"2013-06-28 02:35:18","commitOrder":5,"curCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-06-28 02:35:18","endLine":271,"groupId":"7761","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/54/c9e4f94c70c50d49a4a3473c485bdd7c1fd2ad.src","preCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"},{"authorDate":"2013-06-28 02:35:18","commitOrder":5,"curCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-06-28 02:35:18","endLine":316,"groupId":"7761","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/54/c9e4f94c70c50d49a4a3473c485bdd7c1fd2ad.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String tableName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Table table = Table.open(tableName);\n        ColumnFamilyStore cfs = table.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(tableName, key.key);\n        for (int i = 0; i < 5; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"}],"commitId":"0e96e585837c277073779a5f004fbb1e245964af","commitMessage":"@@@Rename Table to Keyspace\n\npatch by Jeremiah Jordan; reviewed by Aleksey Yeschenko for\nCASSANDRA-5613\n","date":"2013-06-28 02:35:18","modifiedFileCount":"182","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2013-10-30 23:17:23","codes":[{"authorDate":"2013-06-28 02:35:18","commitOrder":6,"curCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-06-28 02:35:18","endLine":271,"groupId":"7761","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/54/c9e4f94c70c50d49a4a3473c485bdd7c1fd2ad.src","preCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"N"},{"authorDate":"2013-10-30 23:17:23","commitOrder":6,"curCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-10-30 23:17:23","endLine":318,"groupId":"7761","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/18/e637b35a76cb112edf0f9087ee0815db5e2476.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"M"}],"commitId":"36cdf34bd92ede5ad99447e10d90e6caa1fd743a","commitMessage":"@@@Remove multithreaded compaction and PCR\npatch by jbellis; reviewed by marcuse for CASSANDRA-6142\n","date":"2013-10-30 23:17:23","modifiedFileCount":"16","status":"M","submitter":"Jonathan Ellis"},{"authorTime":"2013-12-13 02:17:45","codes":[{"authorDate":"2013-12-13 02:17:45","commitOrder":7,"curCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-12-13 02:18:14","endLine":281,"groupId":"7761","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/bd/814d01e39dfcf30eab46dbc423be75777e0b44.src","preCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"},{"authorDate":"2013-12-13 02:17:45","commitOrder":7,"curCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-12-13 02:18:14","endLine":325,"groupId":"7766","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/bd/814d01e39dfcf30eab46dbc423be75777e0b44.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"}],"commitId":"d53c838c9d2f89ac6c88c8306f2302f7fbc6b33d","commitMessage":"@@@Merge branch 'cassandra-2.0' into trunk\n","date":"2013-12-13 02:18:14","modifiedFileCount":"14","status":"M","submitter":"Jonathan Ellis"},{"authorTime":"2013-10-29 18:03:52","codes":[{"authorDate":"2013-10-29 18:03:52","commitOrder":8,"curCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-12-18 00:03:21","endLine":282,"groupId":"7761","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c5/f5483f2adba281057d73461220288c43aa80e6.src","preCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2013-10-29 18:03:52","commitOrder":8,"curCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-12-18 00:03:21","endLine":326,"groupId":"7766","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/c5/f5483f2adba281057d73461220288c43aa80e6.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, ByteBufferUtil.bytes(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"}],"commitId":"362cc05352ec67e707e0ac790732e96a15e63f6b","commitMessage":"@@@Push composites support in the storage engine\n\npatch by slebresne; reviewed by benedict for CASSANDRA-5417\n","date":"2013-12-18 00:03:21","modifiedFileCount":"205","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2013-12-18 00:51:55","codes":[{"authorDate":"2013-12-18 00:51:55","commitOrder":9,"curCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-12-18 00:52:20","endLine":282,"groupId":"7761","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/03/a8c718ab81fa0be1095274392ca5105f85f85b.src","preCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2013-12-18 00:51:55","commitOrder":9,"curCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-12-18 00:52:20","endLine":326,"groupId":"7766","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/03/a8c718ab81fa0be1095274392ca5105f85f85b.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Column c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"}],"commitId":"e50d6af12fabac98e3cb4bd589e2b92212b041f4","commitMessage":"@@@Rename Column to Cell\n","date":"2013-12-18 00:52:20","modifiedFileCount":"121","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2013-12-22 05:37:43","codes":[{"authorDate":"2013-12-22 05:37:43","commitOrder":10,"curCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-12-22 05:37:43","endLine":278,"groupId":"7761","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ac/588399cdc4921baff7762dd496a7aa4f34c24c.src","preCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2013-12-22 05:37:43","commitOrder":10,"curCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2013-12-22 05:37:43","endLine":322,"groupId":"7766","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ac/588399cdc4921baff7762dd496a7aa4f34c24c.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        RowMutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new RowMutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"M"}],"commitId":"6bbb13b9b0fe62de2a2140055af2ea6968c73ccc","commitMessage":"@@@Rename RowMutation->Mutation in preparation for Row->Partition\n","date":"2013-12-22 05:37:43","modifiedFileCount":"91","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2014-02-17 12:09:57","codes":[{"authorDate":"2014-02-17 12:09:57","commitOrder":11,"curCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2014-02-17 12:09:57","endLine":277,"groupId":"7761","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/42/445b5100652bc055f921b9b0f3b950553e0366.src","preCode":"    public void testCompactionPurgeCachedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"},{"authorDate":"2014-02-17 12:09:57","commitOrder":11,"curCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","date":"2014-02-17 12:09:57","endLine":321,"groupId":"7766","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/42/445b5100652bc055f921b9b0f3b950553e0366.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"M"}],"commitId":"9639f95923233a1c8647da688d9f0fa4a15b12a7","commitMessage":"@@@minor cleanups in unit tests\n","date":"2014-02-17 12:09:57","modifiedFileCount":"52","status":"M","submitter":"Dave Brosius"},{"authorTime":"2014-03-05 10:44:34","codes":[{"authorDate":"2014-03-05 10:44:34","commitOrder":12,"curCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertFalse(c.isMarkedForDelete(System.currentTimeMillis()));\n    }\n","date":"2014-03-05 10:44:34","endLine":279,"groupId":"7761","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/11/c4402c6c616c1fc36daa70805e5c2a27b13e26.src","preCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2014-03-05 10:44:34","commitOrder":12,"curCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertFalse(c.isMarkedForDelete(System.currentTimeMillis()));\n    }\n","date":"2014-03-05 10:44:34","endLine":323,"groupId":"7766","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/11/c4402c6c616c1fc36daa70805e5c2a27b13e26.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assert !c.isMarkedForDelete(System.currentTimeMillis());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"}],"commitId":"630d3b9c777e4b9e371300f9b3578312412970d0","commitMessage":"@@@use junit assertions\n","date":"2014-03-05 10:44:34","modifiedFileCount":"1","status":"M","submitter":"Dave Brosius"},{"authorTime":"2014-04-29 20:07:34","codes":[{"authorDate":"2014-04-29 20:07:34","commitOrder":13,"curCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertFalse(c.isMarkedForDelete(System.currentTimeMillis()));\n    }\n","date":"2014-04-29 20:07:34","endLine":279,"groupId":"23886","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/6a/98873782a3fc27505f912e9df46a51a6aaeb98.src","preCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertFalse(c.isMarkedForDelete(System.currentTimeMillis()));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2014-04-29 20:07:34","commitOrder":13,"curCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertFalse(c.isMarkedForDelete(System.currentTimeMillis()));\n    }\n","date":"2014-04-29 20:07:34","endLine":323,"groupId":"7766","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/6a/98873782a3fc27505f912e9df46a51a6aaeb98.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.key);\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertFalse(c.isMarkedForDelete(System.currentTimeMillis()));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"}],"commitId":"7d7610fdb3fecda4868bb86a302d7e3707608300","commitMessage":"@@@Merge branch 'cassandra-2.1' into trunk\n\nConflicts:\n\tsrc/java/org/apache/cassandra/cql/QueryProcessor.java\n","date":"2014-04-29 20:07:34","modifiedFileCount":"161","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2014-05-01 03:14:09","codes":[{"authorDate":"2014-05-01 03:14:09","commitOrder":14,"curCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","date":"2014-05-01 03:14:09","endLine":279,"groupId":"23886","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/58/20312faaf6b8cf98969cdd0d6a9c5d8119b414.src","preCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertFalse(c.isMarkedForDelete(System.currentTimeMillis()));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2014-05-01 03:14:09","commitOrder":14,"curCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","date":"2014-05-01 03:14:09","endLine":323,"groupId":"7766","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/58/20312faaf6b8cf98969cdd0d6a9c5d8119b414.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertFalse(c.isMarkedForDelete(System.currentTimeMillis()));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"}],"commitId":"b35486a19b43eebd3be1d2fec6a827db0903c8cb","commitMessage":"@@@Merge branch 'cassandra-2.1' into trunk\n\nConflicts:\n\tsrc/java/org/apache/cassandra/cql/QueryProcessor.java\n\ttest/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java\n","date":"2014-05-01 03:14:09","modifiedFileCount":"31","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2014-06-21 01:55:35","codes":[{"authorDate":"2014-06-21 01:55:35","commitOrder":15,"curCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","date":"2014-06-21 01:55:35","endLine":318,"groupId":"23886","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/e8/656c4d7868efb031d8ad8194dcc033f53b30b6.src","preCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"RowCacheSpace\";\n        String cfName = \"CachedCF\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"},{"authorDate":"2014-06-21 01:55:35","commitOrder":15,"curCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","date":"2014-06-21 01:55:35","endLine":362,"groupId":"7766","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/e8/656c4d7868efb031d8ad8194dcc033f53b30b6.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = \"Keyspace1\";\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"M"}],"commitId":"d2a3827a65f208eae7aed129dcb6dc582ac1f3d5","commitMessage":"@@@Reduce unit test times due to schema loading\n\nPatch by Lyuben Todorov; reviewed by Tyler Hobbs for CASSANDRA-6968\n","date":"2014-06-21 01:55:35","modifiedFileCount":"92","status":"M","submitter":"lyubent"},{"authorTime":"2014-07-10 04:41:13","codes":[{"authorDate":"2014-07-10 04:41:13","commitOrder":16,"curCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.applyUnsafe();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 1);\n        rm.applyUnsafe();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.applyUnsafe();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","date":"2014-07-10 04:42:11","endLine":318,"groupId":"23886","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/00/923b1f329dba1e16692c29f5833ccdc6753630.src","preCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 1);\n        rm.apply();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.apply();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"},{"authorDate":"2014-07-10 04:41:13","commitOrder":16,"curCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.applyUnsafe();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 4);\n        rm.applyUnsafe();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.applyUnsafe();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","date":"2014-07-10 04:42:11","endLine":362,"groupId":"7766","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/00/923b1f329dba1e16692c29f5833ccdc6753630.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 4);\n        rm.apply();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.apply();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"M"}],"commitId":"b453f0897bac7f8e928588d7b288ea3e65082353","commitMessage":"@@@Use unsafe mutations where possible in unit tests\n\nPatch by Lyuben Todorov; reviewed by Tyler Hobbs for CASSANDRA-6969\n","date":"2014-07-10 04:42:11","modifiedFileCount":"36","status":"M","submitter":"lyubent"},{"authorTime":"2014-09-02 00:54:46","codes":[{"authorDate":"2014-09-02 00:54:46","commitOrder":17,"curCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE_CACHED, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), 1, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        \r\n        \r\n        new RowUpdateBuilder(cfs.metadata, 0, \"key4\").clustering(\"c\").add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();\n\n        \r\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        Util.assertEmpty(Util.cmd(cfs, key).build());\n    }\n","date":"2015-06-30 18:47:01","endLine":309,"groupId":"10310","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/09/ac0215307b9340f466d0b720127a5352748a0d.src","preCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.applyUnsafe();\n\n        \r\n        cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 1);\n        rm.applyUnsafe();\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n        {\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, 0);\n        }\n        rm.applyUnsafe();\n\n        \r\n        ColumnFamily cf = cfs.getColumnFamily(QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis()));\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"M"},{"authorDate":"2014-09-02 00:54:46","commitOrder":17,"curCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE1, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), 4, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        ArrayBackedPartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertFalse(partition.partitionLevelDeletion().isLive());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        for (int i = 0; i < 5; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(10, partition.rowCount());\n    }\n","date":"2015-06-30 18:47:01","endLine":356,"groupId":"10312","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/09/ac0215307b9340f466d0b720127a5352748a0d.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        DecoratedKey key = Util.dk(\"key3\");\n        Mutation rm;\n        QueryFilter filter = QueryFilter.getIdentityFilter(key, cfName, System.currentTimeMillis());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 10; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.applyUnsafe();\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        rm.delete(cfName, 4);\n        rm.applyUnsafe();\n        ColumnFamily cf = cfs.getColumnFamily(filter);\n        assertTrue(cf.isMarkedForDelete());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(cfs.getColumnFamily(filter).isMarkedForDelete());\n\n        \r\n        rm = new Mutation(keyspaceName, key.getKey());\n        for (int i = 0; i < 5; i++)\n            rm.add(cfName, cellname(String.valueOf(i)), ByteBufferUtil.EMPTY_BYTE_BUFFER, i);\n        rm.applyUnsafe();\n\n        \r\n        cf = cfs.getColumnFamily(filter);\n        assertEquals(10, cf.getColumnCount());\n        for (Cell c : cf)\n            assertTrue(c.isLive());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":312,"status":"M"}],"commitId":"a991b64811f4d6adb6c7b31c0df52288eb06cf19","commitMessage":"@@@Storage engine refactor.  a.k.a CASSANDRA-8099\n\nInitial patch.  see ticket for details\n","date":"2015-06-30 18:47:01","modifiedFileCount":"374","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2015-08-13 05:53:21","codes":[{"authorDate":"2014-09-02 00:54:46","commitOrder":18,"curCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE_CACHED, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), 1, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        \r\n        \r\n        new RowUpdateBuilder(cfs.metadata, 0, \"key4\").clustering(\"c\").add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();\n\n        \r\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        Util.assertEmpty(Util.cmd(cfs, key).build());\n    }\n","date":"2015-06-30 18:47:01","endLine":309,"groupId":"10310","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/09/ac0215307b9340f466d0b720127a5352748a0d.src","preCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE_CACHED, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), 1, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        \r\n        \r\n        new RowUpdateBuilder(cfs.metadata, 0, \"key4\").clustering(\"c\").add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();\n\n        \r\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        Util.assertEmpty(Util.cmd(cfs, key).build());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"N"},{"authorDate":"2015-08-13 05:53:21","commitOrder":18,"curCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE1, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), 4, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertFalse(partition.partitionLevelDeletion().isLive());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        for (int i = 0; i < 5; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(10, partition.rowCount());\n    }\n","date":"2015-08-13 05:53:21","endLine":350,"groupId":"10312","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/26/d53ed53d79f2bda78d30bdea4f675c1cd49450.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE1, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), 4, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        ArrayBackedPartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertFalse(partition.partitionLevelDeletion().isLive());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        for (int i = 0; i < 5; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(10, partition.rowCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":306,"status":"M"}],"commitId":"bfd2e0820898be75adb3e08a6011bb85d40cd72a","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2015-08-13 05:53:21","modifiedFileCount":"57","status":"M","submitter":"Benedict Elliott Smith"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":19,"curCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE_CACHED, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata(), dk(key), 1, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        \r\n        \r\n        new RowUpdateBuilder(cfs.metadata(), 0, \"key4\").clustering(\"c\").add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();\n\n        \r\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        Util.assertEmpty(Util.cmd(cfs, key).build());\n    }\n","date":"2017-01-28 06:17:46","endLine":442,"groupId":"10310","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ec/cf671d58a5491cd7db3903697fd5bb7d966952.src","preCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE_CACHED, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), 1, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        \r\n        \r\n        new RowUpdateBuilder(cfs.metadata, 0, \"key4\").clustering(\"c\").add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();\n\n        \r\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        Util.assertEmpty(Util.cmd(cfs, key).build());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":404,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":19,"curCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE1, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata(), dk(key), 4, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertFalse(partition.partitionLevelDeletion().isLive());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        for (int i = 0; i < 5; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(10, partition.rowCount());\n    }\n","date":"2017-01-28 06:17:46","endLine":489,"groupId":"10312","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/ec/cf671d58a5491cd7db3903697fd5bb7d966952.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE1, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata, dk(key), 4, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertFalse(partition.partitionLevelDeletion().isLive());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        for (int i = 0; i < 5; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(10, partition.rowCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":445,"status":"M"}],"commitId":"af3fe39dcabd9ef77a00309ce6741268423206df","commitMessage":"@@@Make TableMetadata immutable.  optimize Schema\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-9425\n","date":"2017-01-28 06:17:46","modifiedFileCount":"511","status":"M","submitter":"Aleksey Yeschenko"},{"authorTime":"2017-09-13 21:57:50","codes":[{"authorDate":"2017-09-13 21:57:50","commitOrder":20,"curCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation.PartitionUpdateCollector rm = new Mutation.PartitionUpdateCollector(KEYSPACE_CACHED, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata(), dk(key), 1, FBUtilities.nowInSeconds()));\n        rm.build().applyUnsafe();\n\n        \r\n        \r\n        new RowUpdateBuilder(cfs.metadata(), 0, \"key4\").clustering(\"c\").add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();\n\n        \r\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        Util.assertEmpty(Util.cmd(cfs, key).build());\n    }\n","date":"2018-01-09 15:10:23","endLine":444,"groupId":"10791","id":37,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompactionPurgeCachedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/fc/193e84b60d9831d6c6ea56d2b8a438d79b4d85.src","preCode":"    public void testCompactionPurgeCachedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE_CACHED;\n        String cfName = CF_CACHED;\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), 0, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE_CACHED, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata(), dk(key), 1, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        \r\n        \r\n        new RowUpdateBuilder(cfs.metadata(), 0, \"key4\").clustering(\"c\").add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();\n\n        \r\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n\n        \r\n        Util.assertEmpty(Util.cmd(cfs, key).build());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"M"},{"authorDate":"2017-09-13 21:57:50","commitOrder":20,"curCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation.PartitionUpdateCollector rm = new Mutation.PartitionUpdateCollector(KEYSPACE1, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata(), dk(key), 4, FBUtilities.nowInSeconds()));\n        rm.build().applyUnsafe();\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertFalse(partition.partitionLevelDeletion().isLive());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        for (int i = 0; i < 5; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(10, partition.rowCount());\n    }\n","date":"2018-01-09 15:10:23","endLine":491,"groupId":"10791","id":38,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompactionPurgeTombstonedRow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/fc/193e84b60d9831d6c6ea56d2b8a438d79b4d85.src","preCode":"    public void testCompactionPurgeTombstonedRow() throws ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        String keyspaceName = KEYSPACE1;\n        String cfName = \"Standard1\";\n        Keyspace keyspace = Keyspace.open(keyspaceName);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);\n        String key = \"key3\";\n\n        \r\n        for (int i = 0; i < 10; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        Mutation rm = new Mutation(KEYSPACE1, dk(key));\n        rm.add(PartitionUpdate.fullPartitionDelete(cfs.metadata(), dk(key), 4, FBUtilities.nowInSeconds()));\n        rm.applyUnsafe();\n\n        ImmutableBTreePartition partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertFalse(partition.partitionLevelDeletion().isLive());\n\n        \r\n        cfs.forceBlockingFlush();\n        Util.compactAll(cfs, Integer.MAX_VALUE).get();\n        assertFalse(Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build()).isEmpty());\n\n        \r\n        for (int i = 0; i < 5; i++)\n        {\n            RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata(), i, key);\n            builder.clustering(String.valueOf(i))\n                   .add(\"val\", ByteBufferUtil.EMPTY_BYTE_BUFFER)\n                   .build().applyUnsafe();\n        }\n\n        \r\n        partition = Util.getOnlyPartitionUnfiltered(Util.cmd(cfs, key).build());\n        assertEquals(10, partition.rowCount());\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":447,"status":"M"}],"commitId":"de7c24b395265ff619c622ed6be8d88453f158ac","commitMessage":"@@@Make PartitionUpdate and Mutation immutable\n\nPatch by marcuse; reviewed by Aleksey Yeschenko for CASSANDRA-13867\n","date":"2018-01-09 15:10:23","modifiedFileCount":"33","status":"M","submitter":"Marcus Eriksson"}]
