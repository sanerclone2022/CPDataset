[{"authorTime":"2015-12-19 23:56:28","codes":[{"authorDate":"2015-12-19 23:56:28","commitOrder":1,"curCode":"    public void testAbortTxnWithClosedWriterShouldRemoveSSTable() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n        try (SSTableWriter writer = getWriter(cfs, dir, txn))\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer.finish(true);\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 1);\n\n            sstable.selfRef().release();\n            \r\n            \r\n            if (!FBUtilities.isWindows())\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n    }\n","date":"2015-12-19 23:56:28","endLine":141,"groupId":"27681","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAbortTxnWithClosedWriterShouldRemoveSSTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a7/3a164e454fb535bf08108536e548fd7ebb4346.src","preCode":"    public void testAbortTxnWithClosedWriterShouldRemoveSSTable() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n        try (SSTableWriter writer = getWriter(cfs, dir, txn))\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer.finish(true);\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 1);\n\n            sstable.selfRef().release();\n            \r\n            \r\n            if (!FBUtilities.isWindows())\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/io/sstable/SSTableWriterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2015-12-19 23:56:28","commitOrder":1,"curCode":"    public void testAbortTxnWithClosedAndOpenWriterShouldRemoveAllSSTables() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n\n        SSTableWriter writer1 = getWriter(cfs, dir, txn);\n        SSTableWriter writer2 = getWriter(cfs, dir, txn);\n        try\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer1.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer2.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer1.finish(true);\n            txn.update(sstable, false);\n\n            assertFileCounts(dir.list());\n\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 2);\n\n            \r\n            \r\n            if (!FBUtilities.isWindows())\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n        finally\n        {\n            writer1.close();\n            writer2.close();\n        }\n    }\n","date":"2015-12-19 23:56:28","endLine":199,"groupId":"27679","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAbortTxnWithClosedAndOpenWriterShouldRemoveAllSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a7/3a164e454fb535bf08108536e548fd7ebb4346.src","preCode":"    public void testAbortTxnWithClosedAndOpenWriterShouldRemoveAllSSTables() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n\n        SSTableWriter writer1 = getWriter(cfs, dir, txn);\n        SSTableWriter writer2 = getWriter(cfs, dir, txn);\n        try\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer1.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer2.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer1.finish(true);\n            txn.update(sstable, false);\n\n            assertFileCounts(dir.list());\n\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 2);\n\n            \r\n            \r\n            if (!FBUtilities.isWindows())\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n        finally\n        {\n            writer1.close();\n            writer2.close();\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/io/sstable/SSTableWriterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"}],"commitId":"c0fd119cea3240db3435575b1345d0bcefec0dc4","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2015-12-19 23:56:28","modifiedFileCount":"2","status":"B","submitter":"Yuki Morishita"},{"authorTime":"2016-08-04 21:09:03","codes":[{"authorDate":"2016-08-04 21:09:03","commitOrder":2,"curCode":"    public void testAbortTxnWithClosedWriterShouldRemoveSSTable() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n        try (SSTableWriter writer = getWriter(cfs, dir, txn))\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer.finish(true);\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 1);\n\n            sstable.selfRef().release();\n            \r\n            \r\n            if (!FBUtilities.isWindows)\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n    }\n","date":"2016-08-04 21:09:03","endLine":143,"groupId":"27681","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAbortTxnWithClosedWriterShouldRemoveSSTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/1c/7d61fa66bdbed7b25b112f5e478ed0f3c922c8.src","preCode":"    public void testAbortTxnWithClosedWriterShouldRemoveSSTable() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n        try (SSTableWriter writer = getWriter(cfs, dir, txn))\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer.finish(true);\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 1);\n\n            sstable.selfRef().release();\n            \r\n            \r\n            if (!FBUtilities.isWindows())\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/io/sstable/SSTableWriterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2016-08-04 21:09:03","commitOrder":2,"curCode":"    public void testAbortTxnWithClosedAndOpenWriterShouldRemoveAllSSTables() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n\n        SSTableWriter writer1 = getWriter(cfs, dir, txn);\n        SSTableWriter writer2 = getWriter(cfs, dir, txn);\n        try\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer1.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer2.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer1.finish(true);\n            txn.update(sstable, false);\n\n            assertFileCounts(dir.list());\n\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 2);\n\n            \r\n            \r\n            if (!FBUtilities.isWindows)\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n        finally\n        {\n            writer1.close();\n            writer2.close();\n        }\n    }\n","date":"2016-08-04 21:09:03","endLine":201,"groupId":"27679","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAbortTxnWithClosedAndOpenWriterShouldRemoveAllSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/1c/7d61fa66bdbed7b25b112f5e478ed0f3c922c8.src","preCode":"    public void testAbortTxnWithClosedAndOpenWriterShouldRemoveAllSSTables() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n\n        SSTableWriter writer1 = getWriter(cfs, dir, txn);\n        SSTableWriter writer2 = getWriter(cfs, dir, txn);\n        try\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer1.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer2.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer1.finish(true);\n            txn.update(sstable, false);\n\n            assertFileCounts(dir.list());\n\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 2);\n\n            \r\n            \r\n            if (!FBUtilities.isWindows())\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n        finally\n        {\n            writer1.close();\n            writer2.close();\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/io/sstable/SSTableWriterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"54836ec0c5f41fed53c1010acb27f311e615a7f3","commitMessage":"@@@Make 'static final boolean' easier to optimize for Hotspot\n\npatch by Robert Stupp; reviewed by Branimir Lambov for CASSANDRA-12343\n","date":"2016-08-04 21:09:03","modifiedFileCount":"24","status":"M","submitter":"Robert Stupp"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":3,"curCode":"    public void testAbortTxnWithClosedWriterShouldRemoveSSTable() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n        try (SSTableWriter writer = getWriter(cfs, dir, txn))\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata(), random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata(), random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer.finish(true);\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 1);\n\n            sstable.selfRef().release();\n            \r\n            \r\n            if (!FBUtilities.isWindows)\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n    }\n","date":"2017-01-28 06:17:46","endLine":143,"groupId":"102001","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAbortTxnWithClosedWriterShouldRemoveSSTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/fd/93ca199e9a23e62ffaf420cbaf88e564aedd8e.src","preCode":"    public void testAbortTxnWithClosedWriterShouldRemoveSSTable() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n        try (SSTableWriter writer = getWriter(cfs, dir, txn))\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer.finish(true);\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 1);\n\n            sstable.selfRef().release();\n            \r\n            \r\n            if (!FBUtilities.isWindows)\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/io/sstable/SSTableWriterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":3,"curCode":"    public void testAbortTxnWithClosedAndOpenWriterShouldRemoveAllSSTables() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n\n        SSTableWriter writer1 = getWriter(cfs, dir, txn);\n        SSTableWriter writer2 = getWriter(cfs, dir, txn);\n        try\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata(), random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer1.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata(), random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer2.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer1.finish(true);\n            txn.update(sstable, false);\n\n            assertFileCounts(dir.list());\n\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 2);\n\n            \r\n            \r\n            if (!FBUtilities.isWindows)\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n        finally\n        {\n            writer1.close();\n            writer2.close();\n        }\n    }\n","date":"2017-01-28 06:17:46","endLine":201,"groupId":"102001","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAbortTxnWithClosedAndOpenWriterShouldRemoveAllSSTables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/fd/93ca199e9a23e62ffaf420cbaf88e564aedd8e.src","preCode":"    public void testAbortTxnWithClosedAndOpenWriterShouldRemoveAllSSTables() throws InterruptedException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE);\n        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);\n        truncate(cfs);\n\n        File dir = cfs.getDirectories().getDirectoryForNewSSTables();\n        LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.STREAM);\n\n        SSTableWriter writer1 = getWriter(cfs, dir, txn);\n        SSTableWriter writer2 = getWriter(cfs, dir, txn);\n        try\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer1.append(builder.build().unfilteredIterator());\n            }\n\n            assertFileCounts(dir.list());\n            for (int i = 10000; i < 20000; i++)\n            {\n                UpdateBuilder builder = UpdateBuilder.create(cfs.metadata, random(i, 10)).withTimestamp(1);\n                for (int j = 0; j < 100; j++)\n                    builder.newRow(\"\" + j).add(\"val\", ByteBuffer.allocate(1000));\n                writer2.append(builder.build().unfilteredIterator());\n            }\n            SSTableReader sstable = writer1.finish(true);\n            txn.update(sstable, false);\n\n            assertFileCounts(dir.list());\n\n            int datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 2);\n\n            \r\n            \r\n            if (!FBUtilities.isWindows)\n            {\n                LifecycleTransaction.waitForDeletions();\n                assertFileCounts(dir.list());\n            }\n            txn.abort();\n            LifecycleTransaction.waitForDeletions();\n            datafiles = assertFileCounts(dir.list());\n            assertEquals(datafiles, 0);\n            validateCFS(cfs);\n        }\n        finally\n        {\n            writer1.close();\n            writer2.close();\n        }\n    }\n","realPath":"test/unit/org/apache/cassandra/io/sstable/SSTableWriterTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"af3fe39dcabd9ef77a00309ce6741268423206df","commitMessage":"@@@Make TableMetadata immutable.  optimize Schema\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-9425\n","date":"2017-01-28 06:17:46","modifiedFileCount":"511","status":"M","submitter":"Aleksey Yeschenko"}]
