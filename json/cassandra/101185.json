[{"authorTime":"2009-12-06 02:44:25","codes":[{"authorDate":"2009-12-06 02:44:25","commitOrder":1,"curCode":"    public void testSplitLimitDepth()\n    {\n        mt = new MerkleTree(partitioner, (byte)2, Integer.MAX_VALUE);\n\n        assertTrue(mt.split(tok(4)));\n        assertTrue(mt.split(tok(2)));\n        assertEquals(3, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(1)));\n        assertEquals(3, mt.size());\n        assertEquals(new Range(tok(4), tok(0)), mt.get(tok(0)));\n        assertEquals(new Range(tok(0), tok(2)), mt.get(tok(2)));\n        assertEquals(new Range(tok(2), tok(4)), mt.get(tok(4)));\n    }\n","date":"2009-12-06 02:44:25","endLine":132,"groupId":"11519","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSplitLimitDepth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/d7/27ac8206067e300ed09a887d750f44121bedea.src","preCode":"    public void testSplitLimitDepth()\n    {\n        mt = new MerkleTree(partitioner, (byte)2, Integer.MAX_VALUE);\n\n        assertTrue(mt.split(tok(4)));\n        assertTrue(mt.split(tok(2)));\n        assertEquals(3, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(1)));\n        assertEquals(3, mt.size());\n        assertEquals(new Range(tok(4), tok(0)), mt.get(tok(0)));\n        assertEquals(new Range(tok(0), tok(2)), mt.get(tok(2)));\n        assertEquals(new Range(tok(2), tok(4)), mt.get(tok(4)));\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/MerkleTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"},{"authorDate":"2009-12-06 02:44:25","commitOrder":1,"curCode":"    public void testSplitLimitSize()\n    {\n        mt = new MerkleTree(partitioner, RECOMMENDED_DEPTH, 2);\n\n        assertTrue(mt.split(tok(4)));\n        assertEquals(2, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(2)));\n        assertEquals(2, mt.size());\n        assertEquals(new Range(tok(4), tok(0)), mt.get(tok(0)));\n        assertEquals(new Range(tok(0), tok(4)), mt.get(tok(4)));\n    }\n","date":"2009-12-06 02:44:25","endLine":147,"groupId":"11519","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSplitLimitSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/d7/27ac8206067e300ed09a887d750f44121bedea.src","preCode":"    public void testSplitLimitSize()\n    {\n        mt = new MerkleTree(partitioner, RECOMMENDED_DEPTH, 2);\n\n        assertTrue(mt.split(tok(4)));\n        assertEquals(2, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(2)));\n        assertEquals(2, mt.size());\n        assertEquals(new Range(tok(4), tok(0)), mt.get(tok(0)));\n        assertEquals(new Range(tok(0), tok(4)), mt.get(tok(4)));\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/MerkleTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"}],"commitId":"c2709044d377ac880edf74748a1ad0688ee1135f","commitMessage":"@@@add Merkle tree; patched by Stu Hood.  reviewed by junrao for CASSANDRA-193\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/cassandra/trunk@887573 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-12-06 02:44:25","modifiedFileCount":"0","status":"B","submitter":"Jun Rao"},{"authorTime":"2010-12-30 07:38:56","codes":[{"authorDate":"2010-12-30 07:38:56","commitOrder":2,"curCode":"    public void testSplitLimitDepth()\n    {\n        mt = new MerkleTree(partitioner, (byte)2, Integer.MAX_VALUE);\n\n        assertTrue(mt.split(tok(4)));\n        assertTrue(mt.split(tok(2)));\n        assertEquals(3, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(1)));\n        assertEquals(3, mt.size());\n        assertEquals(new Range(tok(4), tok(-1)), mt.get(tok(-1)));\n        assertEquals(new Range(tok(-1), tok(2)), mt.get(tok(2)));\n        assertEquals(new Range(tok(2), tok(4)), mt.get(tok(4)));\n    }\n","date":"2010-12-30 07:38:56","endLine":154,"groupId":"11519","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSplitLimitDepth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5f/3aa987bd3b9cc8abacca965ec7dbb7506e6f3d.src","preCode":"    public void testSplitLimitDepth()\n    {\n        mt = new MerkleTree(partitioner, (byte)2, Integer.MAX_VALUE);\n\n        assertTrue(mt.split(tok(4)));\n        assertTrue(mt.split(tok(2)));\n        assertEquals(3, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(1)));\n        assertEquals(3, mt.size());\n        assertEquals(new Range(tok(4), tok(0)), mt.get(tok(0)));\n        assertEquals(new Range(tok(0), tok(2)), mt.get(tok(2)));\n        assertEquals(new Range(tok(2), tok(4)), mt.get(tok(4)));\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/MerkleTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2010-12-30 07:38:56","commitOrder":2,"curCode":"    public void testSplitLimitSize()\n    {\n        mt = new MerkleTree(partitioner, RECOMMENDED_DEPTH, 2);\n\n        assertTrue(mt.split(tok(4)));\n        assertEquals(2, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(2)));\n        assertEquals(2, mt.size());\n        assertEquals(new Range(tok(4), tok(-1)), mt.get(tok(-1)));\n        assertEquals(new Range(tok(-1), tok(4)), mt.get(tok(4)));\n    }\n","date":"2010-12-30 07:38:56","endLine":169,"groupId":"11519","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSplitLimitSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5f/3aa987bd3b9cc8abacca965ec7dbb7506e6f3d.src","preCode":"    public void testSplitLimitSize()\n    {\n        mt = new MerkleTree(partitioner, RECOMMENDED_DEPTH, 2);\n\n        assertTrue(mt.split(tok(4)));\n        assertEquals(2, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(2)));\n        assertEquals(2, mt.size());\n        assertEquals(new Range(tok(4), tok(0)), mt.get(tok(0)));\n        assertEquals(new Range(tok(0), tok(4)), mt.get(tok(4)));\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/MerkleTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"c4af76cb2244b968401a00cb6f2d90c8b90ff672","commitMessage":"@@@merge from 0.7\n\ngit-svn-id: https://svn.apache.org/repos/asf/cassandra/trunk@1053772 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-12-30 07:38:56","modifiedFileCount":"5","status":"M","submitter":"Jonathan Ellis"},{"authorTime":"2011-04-11 01:25:57","codes":[{"authorDate":"2011-04-11 01:25:57","commitOrder":3,"curCode":"    public void testSplitLimitDepth()\n    {\n        mt = new MerkleTree(partitioner, fullRange(), (byte)2, Integer.MAX_VALUE);\n\n        assertTrue(mt.split(tok(4)));\n        assertTrue(mt.split(tok(2)));\n        assertEquals(3, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(1)));\n        assertEquals(3, mt.size());\n        assertEquals(new Range(tok(4), tok(-1)), mt.get(tok(-1)));\n        assertEquals(new Range(tok(-1), tok(2)), mt.get(tok(2)));\n        assertEquals(new Range(tok(2), tok(4)), mt.get(tok(4)));\n    }\n","date":"2011-04-11 01:25:57","endLine":159,"groupId":"11519","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSplitLimitDepth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a5/ad29615c27e36fa3c3543dd433f5de85f198cb.src","preCode":"    public void testSplitLimitDepth()\n    {\n        mt = new MerkleTree(partitioner, (byte)2, Integer.MAX_VALUE);\n\n        assertTrue(mt.split(tok(4)));\n        assertTrue(mt.split(tok(2)));\n        assertEquals(3, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(1)));\n        assertEquals(3, mt.size());\n        assertEquals(new Range(tok(4), tok(-1)), mt.get(tok(-1)));\n        assertEquals(new Range(tok(-1), tok(2)), mt.get(tok(2)));\n        assertEquals(new Range(tok(2), tok(4)), mt.get(tok(4)));\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/MerkleTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2011-04-11 01:25:57","commitOrder":3,"curCode":"    public void testSplitLimitSize()\n    {\n        mt = new MerkleTree(partitioner, fullRange(), RECOMMENDED_DEPTH, 2);\n\n        assertTrue(mt.split(tok(4)));\n        assertEquals(2, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(2)));\n        assertEquals(2, mt.size());\n        assertEquals(new Range(tok(4), tok(-1)), mt.get(tok(-1)));\n        assertEquals(new Range(tok(-1), tok(4)), mt.get(tok(4)));\n    }\n","date":"2011-04-11 01:25:57","endLine":174,"groupId":"11519","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSplitLimitSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a5/ad29615c27e36fa3c3543dd433f5de85f198cb.src","preCode":"    public void testSplitLimitSize()\n    {\n        mt = new MerkleTree(partitioner, RECOMMENDED_DEPTH, 2);\n\n        assertTrue(mt.split(tok(4)));\n        assertEquals(2, mt.size());\n        \n        \r\n        assertFalse(mt.split(tok(2)));\n        assertEquals(2, mt.size());\n        assertEquals(new Range(tok(4), tok(-1)), mt.get(tok(-1)));\n        assertEquals(new Range(tok(-1), tok(4)), mt.get(tok(4)));\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/MerkleTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"dc89826fd89720da0c5ad2de9fb54afeb712136a","commitMessage":"@@@Make repair work on a token range instead of the full ring\npatch by slebresne; reviewed by stuhood for CASSANDRA-2324\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cassandra/trunk@1090840 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-04-11 01:25:57","modifiedFileCount":"10","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2013-05-30 04:46:50","codes":[{"authorDate":"2013-05-30 04:46:50","commitOrder":4,"curCode":"    public void testSplitLimitDepth()\n    {\n        mt = new MerkleTree(partitioner, fullRange(), (byte)2, Integer.MAX_VALUE);\n\n        assertTrue(mt.split(tok(4)));\n        assertTrue(mt.split(tok(2)));\n        assertEquals(3, mt.size());\n\n        \r\n        assertFalse(mt.split(tok(1)));\n        assertEquals(3, mt.size());\n        assertEquals(new Range<>(tok(4), tok(-1)), mt.get(tok(-1)));\n        assertEquals(new Range<>(tok(-1), tok(2)), mt.get(tok(2)));\n        assertEquals(new Range<>(tok(2), tok(4)), mt.get(tok(4)));\n    }\n","date":"2013-06-26 00:48:59","endLine":145,"groupId":"101185","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSplitLimitDepth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/68/a2d76dd068a7b0b42107e7e457e2eaadde4360.src","preCode":"    public void testSplitLimitDepth()\n    {\n        mt = new MerkleTree(partitioner, fullRange(), (byte)2, Integer.MAX_VALUE);\n\n        assertTrue(mt.split(tok(4)));\n        assertTrue(mt.split(tok(2)));\n        assertEquals(3, mt.size());\n\n        \r\n        assertFalse(mt.split(tok(1)));\n        assertEquals(3, mt.size());\n        assertEquals(new Range(tok(4), tok(-1)), mt.get(tok(-1)));\n        assertEquals(new Range(tok(-1), tok(2)), mt.get(tok(2)));\n        assertEquals(new Range(tok(2), tok(4)), mt.get(tok(4)));\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/MerkleTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2013-05-30 04:46:50","commitOrder":4,"curCode":"    public void testSplitLimitSize()\n    {\n        mt = new MerkleTree(partitioner, fullRange(), RECOMMENDED_DEPTH, 2);\n\n        assertTrue(mt.split(tok(4)));\n        assertEquals(2, mt.size());\n\n        \r\n        assertFalse(mt.split(tok(2)));\n        assertEquals(2, mt.size());\n        assertEquals(new Range<>(tok(4), tok(-1)), mt.get(tok(-1)));\n        assertEquals(new Range<>(tok(-1), tok(4)), mt.get(tok(4)));\n    }\n","date":"2013-06-26 00:48:59","endLine":160,"groupId":"101185","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSplitLimitSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/68/a2d76dd068a7b0b42107e7e457e2eaadde4360.src","preCode":"    public void testSplitLimitSize()\n    {\n        mt = new MerkleTree(partitioner, fullRange(), RECOMMENDED_DEPTH, 2);\n\n        assertTrue(mt.split(tok(4)));\n        assertEquals(2, mt.size());\n\n        \r\n        assertFalse(mt.split(tok(2)));\n        assertEquals(2, mt.size());\n        assertEquals(new Range(tok(4), tok(-1)), mt.get(tok(-1)));\n        assertEquals(new Range(tok(-1), tok(4)), mt.get(tok(4)));\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/MerkleTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"eb4fa4a621db43ad9d48b146ee16caf09db7a853","commitMessage":"@@@Redesign repair messages\n\npatch by yukim; reviewed by slebresne for CASSANDRA-5426\n","date":"2013-06-26 00:48:59","modifiedFileCount":"10","status":"M","submitter":"Yuki Morishita"}]
