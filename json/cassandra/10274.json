[{"authorTime":"2017-12-07 20:55:44","codes":[{"authorDate":"2017-12-07 20:55:44","commitOrder":1,"curCode":"    public void testDenormalize()\n    {\n        \r\n        StreamFromOptions dummy = new StreamFromOptions(null, range(0, 100));\n        Map<Range<Token>, StreamFromOptions> incoming = new HashMap<>();\n        incoming.put(range(0, 100), dummy);\n        Set<Range<Token>> newInput = RangeDenormalizer.denormalize(range(30, 40), incoming);\n        assertEquals(3, incoming.size());\n        assertTrue(incoming.containsKey(range(0, 30)));\n        assertTrue(incoming.containsKey(range(30, 40)));\n        assertTrue(incoming.containsKey(range(40, 100)));\n        assertEquals(1, newInput.size());\n        assertTrue(newInput.contains(range(30, 40)));\n    }\n","date":"2017-12-07 20:55:56","endLine":51,"groupId":"27755","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDenormalize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a1/28f2b7601b55ec4fa8a238bfeec7026eba88b4.src","preCode":"    public void testDenormalize()\n    {\n        \r\n        StreamFromOptions dummy = new StreamFromOptions(null, range(0, 100));\n        Map<Range<Token>, StreamFromOptions> incoming = new HashMap<>();\n        incoming.put(range(0, 100), dummy);\n        Set<Range<Token>> newInput = RangeDenormalizer.denormalize(range(30, 40), incoming);\n        assertEquals(3, incoming.size());\n        assertTrue(incoming.containsKey(range(0, 30)));\n        assertTrue(incoming.containsKey(range(30, 40)));\n        assertTrue(incoming.containsKey(range(40, 100)));\n        assertEquals(1, newInput.size());\n        assertTrue(newInput.contains(range(30, 40)));\n    }\n","realPath":"test/unit/org/apache/cassandra/repair/asymmetric/RangeDenormalizerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2017-12-07 20:55:44","commitOrder":1,"curCode":"    public void testDenormalize2()\n    {\n        \r\n        StreamFromOptions dummy = new StreamFromOptions(null, range(40, 50));\n        Map<Range<Token>, StreamFromOptions> incoming = new HashMap<>();\n        incoming.put(range(40, 50), dummy);\n        Set<Range<Token>> newInput = RangeDenormalizer.denormalize(range(0, 100), incoming);\n        assertEquals(1, incoming.size());\n        assertTrue(incoming.containsKey(range(40, 50)));\n        assertEquals(3, newInput.size());\n        assertTrue(newInput.contains(range(0, 40)));\n        assertTrue(newInput.contains(range(40, 50)));\n        assertTrue(newInput.contains(range(50, 100)));\n    }\n","date":"2017-12-07 20:55:56","endLine":67,"groupId":"27755","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDenormalize2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a1/28f2b7601b55ec4fa8a238bfeec7026eba88b4.src","preCode":"    public void testDenormalize2()\n    {\n        \r\n        StreamFromOptions dummy = new StreamFromOptions(null, range(40, 50));\n        Map<Range<Token>, StreamFromOptions> incoming = new HashMap<>();\n        incoming.put(range(40, 50), dummy);\n        Set<Range<Token>> newInput = RangeDenormalizer.denormalize(range(0, 100), incoming);\n        assertEquals(1, incoming.size());\n        assertTrue(incoming.containsKey(range(40, 50)));\n        assertEquals(3, newInput.size());\n        assertTrue(newInput.contains(range(0, 40)));\n        assertTrue(newInput.contains(range(40, 50)));\n        assertTrue(newInput.contains(range(50, 100)));\n    }\n","realPath":"test/unit/org/apache/cassandra/repair/asymmetric/RangeDenormalizerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"cb56d9fc3c773abbefa2044ce41ddbfb7717e0cb","commitMessage":"@@@Add option to optimize Merkle tree comparison across replicas\n\nPatch by marcuse; reviewed by Blake Eggleston for CASSANDRA-3200\n","date":"2017-12-07 20:55:56","modifiedFileCount":"15","status":"B","submitter":"Marcus Eriksson"},{"authorTime":"2020-11-13 16:47:38","codes":[{"authorDate":"2020-11-13 16:47:38","commitOrder":2,"curCode":"    public void testDenormalize()\n    {\n        \r\n        StreamFromOptions dummy = new StreamFromOptions(null, range(0, 100));\n        RangeMap<StreamFromOptions> incoming = new RangeMap<>();\n        incoming.put(range(0, 100), dummy);\n        Set<Range<Token>> newInput = RangeDenormalizer.denormalize(range(30, 40), incoming);\n        assertEquals(3, incoming.size());\n        assertTrue(incoming.containsKey(range(0, 30)));\n        assertTrue(incoming.containsKey(range(30, 40)));\n        assertTrue(incoming.containsKey(range(40, 100)));\n        assertEquals(1, newInput.size());\n        assertTrue(newInput.contains(range(30, 40)));\n    }\n","date":"2020-12-01 19:39:25","endLine":49,"groupId":"10274","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testDenormalize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/3d/66d83a4630c507998c0cd4a5557ea3aad2b9f4.src","preCode":"    public void testDenormalize()\n    {\n        \r\n        StreamFromOptions dummy = new StreamFromOptions(null, range(0, 100));\n        Map<Range<Token>, StreamFromOptions> incoming = new HashMap<>();\n        incoming.put(range(0, 100), dummy);\n        Set<Range<Token>> newInput = RangeDenormalizer.denormalize(range(30, 40), incoming);\n        assertEquals(3, incoming.size());\n        assertTrue(incoming.containsKey(range(0, 30)));\n        assertTrue(incoming.containsKey(range(30, 40)));\n        assertTrue(incoming.containsKey(range(40, 100)));\n        assertEquals(1, newInput.size());\n        assertTrue(newInput.contains(range(30, 40)));\n    }\n","realPath":"test/unit/org/apache/cassandra/repair/asymmetric/RangeDenormalizerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2020-11-13 16:47:38","commitOrder":2,"curCode":"    public void testDenormalize2()\n    {\n        \r\n        StreamFromOptions dummy = new StreamFromOptions(null, range(40, 50));\n        RangeMap<StreamFromOptions> incoming = new RangeMap<>();\n        incoming.put(range(40, 50), dummy);\n        Set<Range<Token>> newInput = RangeDenormalizer.denormalize(range(0, 100), incoming);\n        assertEquals(1, incoming.size());\n        assertTrue(incoming.containsKey(range(40, 50)));\n        assertEquals(3, newInput.size());\n        assertTrue(newInput.contains(range(0, 40)));\n        assertTrue(newInput.contains(range(40, 50)));\n        assertTrue(newInput.contains(range(50, 100)));\n    }\n","date":"2020-12-01 19:39:25","endLine":65,"groupId":"10274","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testDenormalize2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/3d/66d83a4630c507998c0cd4a5557ea3aad2b9f4.src","preCode":"    public void testDenormalize2()\n    {\n        \r\n        StreamFromOptions dummy = new StreamFromOptions(null, range(40, 50));\n        Map<Range<Token>, StreamFromOptions> incoming = new HashMap<>();\n        incoming.put(range(40, 50), dummy);\n        Set<Range<Token>> newInput = RangeDenormalizer.denormalize(range(0, 100), incoming);\n        assertEquals(1, incoming.size());\n        assertTrue(incoming.containsKey(range(40, 50)));\n        assertEquals(3, newInput.size());\n        assertTrue(newInput.contains(range(0, 40)));\n        assertTrue(newInput.contains(range(40, 50)));\n        assertTrue(newInput.contains(range(50, 100)));\n    }\n","realPath":"test/unit/org/apache/cassandra/repair/asymmetric/RangeDenormalizerTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"22abff779df097e0ef38180442e9c680b3d41187","commitMessage":"@@@Optimised repair streaming improvements\n\nPatch by marcuse; reviewed by Sam Tunnicliffe for CASSANDRA-16274\n","date":"2020-12-01 19:39:25","modifiedFileCount":"22","status":"M","submitter":"Marcus Eriksson"}]
