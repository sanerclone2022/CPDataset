[{"authorTime":"2014-10-10 07:12:36","codes":[{"authorDate":"2014-10-10 07:12:36","commitOrder":1,"curCode":"    public void testGetNeighborsPlusOne() throws Throwable\n    {\n        \r\n        Set<InetAddress> expected = addTokens(1 + Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        expected.remove(FBUtilities.getBroadcastAddress());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddress> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","date":"2014-10-10 07:12:36","endLine":100,"groupId":"350","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNeighborsPlusOne","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/da/b45f91cf4c81f29f13b139580cb92230eed5d9.src","preCode":"    public void testGetNeighborsPlusOne() throws Throwable\n    {\n        \r\n        Set<InetAddress> expected = addTokens(1 + Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        expected.remove(FBUtilities.getBroadcastAddress());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddress> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","realPath":"test/unit/org/apache/cassandra/service/ActiveRepairServiceTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"},{"authorDate":"2014-10-10 07:12:36","commitOrder":1,"curCode":"    public void testGetNeighborsTimesTwo() throws Throwable\n    {\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        \r\n        addTokens(2 * Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        AbstractReplicationStrategy ars = Keyspace.open(KEYSPACE5).getReplicationStrategy();\n        Set<InetAddress> expected = new HashSet<>();\n        for (Range<Token> replicaRange : ars.getAddressRanges().get(FBUtilities.getBroadcastAddress()))\n        {\n            expected.addAll(ars.getRangeAddresses(tmd.cloneOnlyTokenMap()).get(replicaRange));\n        }\n        expected.remove(FBUtilities.getBroadcastAddress());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddress> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","date":"2014-10-10 07:12:36","endLine":123,"groupId":"350","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNeighborsTimesTwo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/da/b45f91cf4c81f29f13b139580cb92230eed5d9.src","preCode":"    public void testGetNeighborsTimesTwo() throws Throwable\n    {\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        \r\n        addTokens(2 * Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        AbstractReplicationStrategy ars = Keyspace.open(KEYSPACE5).getReplicationStrategy();\n        Set<InetAddress> expected = new HashSet<>();\n        for (Range<Token> replicaRange : ars.getAddressRanges().get(FBUtilities.getBroadcastAddress()))\n        {\n            expected.addAll(ars.getRangeAddresses(tmd.cloneOnlyTokenMap()).get(replicaRange));\n        }\n        expected.remove(FBUtilities.getBroadcastAddress());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddress> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","realPath":"test/unit/org/apache/cassandra/service/ActiveRepairServiceTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"810c2d5fe64333c0bcfe0b2ed3ea2c8f6aaf89b7","commitMessage":"@@@improve concurrency of repair process\n\npatch by yukim; reviewed by krummas for CASSANDRA-6455\n","date":"2014-10-10 07:12:36","modifiedFileCount":"11","status":"B","submitter":"Yuki Morishita"},{"authorTime":"2016-06-15 17:47:37","codes":[{"authorDate":"2016-06-15 17:47:37","commitOrder":2,"curCode":"    public void testGetNeighborsPlusOne() throws Throwable\n    {\n        \r\n        Set<InetAddress> expected = addTokens(1 + Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        expected.remove(FBUtilities.getBroadcastAddress());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddress> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, ranges, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","date":"2016-06-15 17:47:37","endLine":103,"groupId":"350","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNeighborsPlusOne","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/da/067fdd63180884669073b120a2875cbbc54743.src","preCode":"    public void testGetNeighborsPlusOne() throws Throwable\n    {\n        \r\n        Set<InetAddress> expected = addTokens(1 + Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        expected.remove(FBUtilities.getBroadcastAddress());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddress> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","realPath":"test/unit/org/apache/cassandra/service/ActiveRepairServiceTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2016-06-15 17:47:37","commitOrder":2,"curCode":"    public void testGetNeighborsTimesTwo() throws Throwable\n    {\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        \r\n        addTokens(2 * Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        AbstractReplicationStrategy ars = Keyspace.open(KEYSPACE5).getReplicationStrategy();\n        Set<InetAddress> expected = new HashSet<>();\n        for (Range<Token> replicaRange : ars.getAddressRanges().get(FBUtilities.getBroadcastAddress()))\n        {\n            expected.addAll(ars.getRangeAddresses(tmd.cloneOnlyTokenMap()).get(replicaRange));\n        }\n        expected.remove(FBUtilities.getBroadcastAddress());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddress> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, ranges, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","date":"2016-06-15 17:47:37","endLine":126,"groupId":"350","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNeighborsTimesTwo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/da/067fdd63180884669073b120a2875cbbc54743.src","preCode":"    public void testGetNeighborsTimesTwo() throws Throwable\n    {\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        \r\n        addTokens(2 * Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        AbstractReplicationStrategy ars = Keyspace.open(KEYSPACE5).getReplicationStrategy();\n        Set<InetAddress> expected = new HashSet<>();\n        for (Range<Token> replicaRange : ars.getAddressRanges().get(FBUtilities.getBroadcastAddress()))\n        {\n            expected.addAll(ars.getRangeAddresses(tmd.cloneOnlyTokenMap()).get(replicaRange));\n        }\n        expected.remove(FBUtilities.getBroadcastAddress());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddress> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","realPath":"test/unit/org/apache/cassandra/service/ActiveRepairServiceTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"4210a25a909c629c19db5d91de671c2a0f9fa28b","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2016-06-15 17:47:37","modifiedFileCount":"3","status":"M","submitter":"Robert Stupp"},{"authorTime":"2017-11-10 00:33:48","codes":[{"authorDate":"2017-11-10 00:33:48","commitOrder":3,"curCode":"    public void testGetNeighborsPlusOne() throws Throwable\n    {\n        \r\n        Set<InetAddressAndPort> expected = addTokens(1 + Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        expected.remove(FBUtilities.getBroadcastAddressAndPort());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddressAndPort> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, ranges, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","date":"2018-01-26 03:32:24","endLine":119,"groupId":"25098","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNeighborsPlusOne","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/76/f915e92a1c6f5fbcf25f1b5b48861e81d93464.src","preCode":"    public void testGetNeighborsPlusOne() throws Throwable\n    {\n        \r\n        Set<InetAddress> expected = addTokens(1 + Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        expected.remove(FBUtilities.getBroadcastAddress());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddress> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, ranges, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","realPath":"test/unit/org/apache/cassandra/service/ActiveRepairServiceTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2017-11-10 00:33:48","commitOrder":3,"curCode":"    public void testGetNeighborsTimesTwo() throws Throwable\n    {\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        \r\n        addTokens(2 * Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        AbstractReplicationStrategy ars = Keyspace.open(KEYSPACE5).getReplicationStrategy();\n        Set<InetAddressAndPort> expected = new HashSet<>();\n        for (Range<Token> replicaRange : ars.getAddressRanges().get(FBUtilities.getBroadcastAddressAndPort()))\n        {\n            expected.addAll(ars.getRangeAddresses(tmd.cloneOnlyTokenMap()).get(replicaRange));\n        }\n        expected.remove(FBUtilities.getBroadcastAddressAndPort());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddressAndPort> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, ranges, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","date":"2018-01-26 03:32:24","endLine":142,"groupId":"25098","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNeighborsTimesTwo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/76/f915e92a1c6f5fbcf25f1b5b48861e81d93464.src","preCode":"    public void testGetNeighborsTimesTwo() throws Throwable\n    {\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        \r\n        addTokens(2 * Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        AbstractReplicationStrategy ars = Keyspace.open(KEYSPACE5).getReplicationStrategy();\n        Set<InetAddress> expected = new HashSet<>();\n        for (Range<Token> replicaRange : ars.getAddressRanges().get(FBUtilities.getBroadcastAddress()))\n        {\n            expected.addAll(ars.getRangeAddresses(tmd.cloneOnlyTokenMap()).get(replicaRange));\n        }\n        expected.remove(FBUtilities.getBroadcastAddress());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddress> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, ranges, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","realPath":"test/unit/org/apache/cassandra/service/ActiveRepairServiceTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"59b5b6bef0fa76bf5740b688fcd4d9cf525760d0","commitMessage":"@@@Allow storage port to be configurable per node\n\nPatch by Ariel Weisberg; Reviewed by Jason Brown for CASSANDRA-7544\n","date":"2018-01-26 03:32:24","modifiedFileCount":"308","status":"M","submitter":"Ariel Weisberg"},{"authorTime":"2018-07-06 06:10:40","codes":[{"authorDate":"2018-07-06 06:10:40","commitOrder":4,"curCode":"    public void testGetNeighborsPlusOne() throws Throwable\n    {\n        \r\n        Set<InetAddressAndPort> expected = addTokens(1 + Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor().allReplicas);\n        expected.remove(FBUtilities.getBroadcastAddressAndPort());\n        Iterable<Range<Token>> ranges = StorageService.instance.getLocalReplicas(KEYSPACE5).ranges();\n        Set<InetAddressAndPort> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, ranges, range, null, null).endpoints());\n        }\n        assertEquals(expected, neighbors);\n    }\n","date":"2018-09-01 09:34:22","endLine":117,"groupId":"101451","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNeighborsPlusOne","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/4f/7cde035acb8f47308c5939d3a7c3e796d27466.src","preCode":"    public void testGetNeighborsPlusOne() throws Throwable\n    {\n        \r\n        Set<InetAddressAndPort> expected = addTokens(1 + Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        expected.remove(FBUtilities.getBroadcastAddressAndPort());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddressAndPort> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, ranges, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","realPath":"test/unit/org/apache/cassandra/service/ActiveRepairServiceTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2018-07-06 06:10:40","commitOrder":4,"curCode":"    public void testGetNeighborsTimesTwo() throws Throwable\n    {\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        \r\n        addTokens(2 * Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor().allReplicas);\n        AbstractReplicationStrategy ars = Keyspace.open(KEYSPACE5).getReplicationStrategy();\n        Set<InetAddressAndPort> expected = new HashSet<>();\n        for (Replica replica : ars.getAddressReplicas().get(FBUtilities.getBroadcastAddressAndPort()))\n        {\n            expected.addAll(ars.getRangeAddresses(tmd.cloneOnlyTokenMap()).get(replica.range()).endpoints());\n        }\n        expected.remove(FBUtilities.getBroadcastAddressAndPort());\n        Iterable<Range<Token>> ranges = StorageService.instance.getLocalReplicas(KEYSPACE5).ranges();\n        Set<InetAddressAndPort> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, ranges, range, null, null).endpoints());\n        }\n        assertEquals(expected, neighbors);\n    }\n","date":"2018-09-01 09:34:22","endLine":140,"groupId":"101451","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNeighborsTimesTwo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/4f/7cde035acb8f47308c5939d3a7c3e796d27466.src","preCode":"    public void testGetNeighborsTimesTwo() throws Throwable\n    {\n        TokenMetadata tmd = StorageService.instance.getTokenMetadata();\n\n        \r\n        addTokens(2 * Keyspace.open(KEYSPACE5).getReplicationStrategy().getReplicationFactor());\n        AbstractReplicationStrategy ars = Keyspace.open(KEYSPACE5).getReplicationStrategy();\n        Set<InetAddressAndPort> expected = new HashSet<>();\n        for (Range<Token> replicaRange : ars.getAddressRanges().get(FBUtilities.getBroadcastAddressAndPort()))\n        {\n            expected.addAll(ars.getRangeAddresses(tmd.cloneOnlyTokenMap()).get(replicaRange));\n        }\n        expected.remove(FBUtilities.getBroadcastAddressAndPort());\n        Collection<Range<Token>> ranges = StorageService.instance.getLocalRanges(KEYSPACE5);\n        Set<InetAddressAndPort> neighbors = new HashSet<>();\n        for (Range<Token> range : ranges)\n        {\n            neighbors.addAll(ActiveRepairService.getNeighbors(KEYSPACE5, ranges, range, null, null));\n        }\n        assertEquals(expected, neighbors);\n    }\n","realPath":"test/unit/org/apache/cassandra/service/ActiveRepairServiceTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"f7431b432875e334170ccdb19934d05545d2cebd","commitMessage":"@@@Transient Replication and Cheap Quorums\n\nPatch by Blake Eggleston.  Benedict Elliott Smith.  Marcus Eriksson.  Alex Petrov.  Ariel Weisberg; Reviewed by Blake Eggleston.  Marcus Eriksson.  Benedict Elliott Smith.  Alex Petrov.  Ariel Weisberg for CASSANDRA-14404\n\nCo-authored-by: Blake Eggleston <bdeggleston@gmail.com>\nCo-authored-by: Benedict Elliott Smith <benedict@apache.org>\nCo-authored-by: Marcus Eriksson <marcuse@apache.org>\nCo-authored-by: Alex Petrov <oleksandr.petrov@gmail.com>\n","date":"2018-09-01 09:34:22","modifiedFileCount":"230","status":"M","submitter":"Ariel Weisberg"}]
