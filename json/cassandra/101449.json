[{"authorTime":"2018-07-06 06:10:40","codes":[{"authorDate":"2018-07-06 06:10:40","commitOrder":1,"curCode":"    public void testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        DatabaseDescriptor.setTransientReplicationEnabledUnsafe(true);\n        RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable();\n\n        \r\n        expectedResult.put(bAddress, transientReplica(bAddress, nineToken, elevenToken));\n        expectedResult.put(bAddress, fullReplica(bAddress, elevenToken, oneToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveForwardBetween().left,\n                                                            constructTMDsMoveForwardBetween(),\n                                                            expectedResult.asImmutableView());\n    }\n","date":"2018-09-01 09:34:22","endLine":573,"groupId":"2073","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/1e/247358c736e3495a4d0e90228cb4c9b3816742.src","preCode":"    public void testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        DatabaseDescriptor.setTransientReplicationEnabledUnsafe(true);\n        RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable();\n\n        \r\n        expectedResult.put(bAddress, transientReplica(bAddress, nineToken, elevenToken));\n        expectedResult.put(bAddress, fullReplica(bAddress, elevenToken, oneToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveForwardBetween().left,\n                                                            constructTMDsMoveForwardBetween(),\n                                                            expectedResult.asImmutableView());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/MoveTransientTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":561,"status":"B"},{"authorDate":"2018-07-06 06:10:40","commitOrder":1,"curCode":"    public void testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable();\n        expectedResult.put(cAddress, fullReplica(cAddress, twoToken, threeToken));\n        expectedResult.put(dAddress, transientReplica(dAddress, twoToken, threeToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveBackward().left,\n                                                            constructTMDsMoveBackward(),\n                                                            expectedResult.asImmutableView());\n    }\n","date":"2018-09-01 09:34:22","endLine":602,"groupId":"2073","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/1e/247358c736e3495a4d0e90228cb4c9b3816742.src","preCode":"    public void testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable();\n        expectedResult.put(cAddress, fullReplica(cAddress, twoToken, threeToken));\n        expectedResult.put(dAddress, transientReplica(dAddress, twoToken, threeToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveBackward().left,\n                                                            constructTMDsMoveBackward(),\n                                                            expectedResult.asImmutableView());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/MoveTransientTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":593,"status":"B"}],"commitId":"f7431b432875e334170ccdb19934d05545d2cebd","commitMessage":"@@@Transient Replication and Cheap Quorums\n\nPatch by Blake Eggleston.  Benedict Elliott Smith.  Marcus Eriksson.  Alex Petrov.  Ariel Weisberg; Reviewed by Blake Eggleston.  Marcus Eriksson.  Benedict Elliott Smith.  Alex Petrov.  Ariel Weisberg for CASSANDRA-14404\n\nCo-authored-by: Blake Eggleston <bdeggleston@gmail.com>\nCo-authored-by: Benedict Elliott Smith <benedict@apache.org>\nCo-authored-by: Marcus Eriksson <marcuse@apache.org>\nCo-authored-by: Alex Petrov <oleksandr.petrov@gmail.com>\n","date":"2018-09-01 09:34:22","modifiedFileCount":"230","status":"B","submitter":"Ariel Weisberg"},{"authorTime":"2018-09-17 17:51:56","codes":[{"authorDate":"2018-09-17 17:51:56","commitOrder":2,"curCode":"    public void testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        DatabaseDescriptor.setTransientReplicationEnabledUnsafe(true);\n        RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable();\n\n        \r\n        expectedResult.put(address02, transientReplica(address02, nineToken, elevenToken));\n        expectedResult.put(address02, fullReplica(address02, elevenToken, oneToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveForwardBetween().left,\n                                                            constructTMDsMoveForwardBetween(),\n                                                            expectedResult.asImmutableView());\n    }\n","date":"2018-09-26 17:42:46","endLine":638,"groupId":"27306","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/e5/a63c7d20cfcd4445401b4c3036784b605b9f29.src","preCode":"    public void testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        DatabaseDescriptor.setTransientReplicationEnabledUnsafe(true);\n        RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable();\n\n        \r\n        expectedResult.put(bAddress, transientReplica(bAddress, nineToken, elevenToken));\n        expectedResult.put(bAddress, fullReplica(bAddress, elevenToken, oneToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveForwardBetween().left,\n                                                            constructTMDsMoveForwardBetween(),\n                                                            expectedResult.asImmutableView());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/MoveTransientTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":626,"status":"M"},{"authorDate":"2018-09-17 17:51:56","commitOrder":2,"curCode":"    public void testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable();\n        expectedResult.put(address03, fullReplica(address03, twoToken, threeToken));\n        expectedResult.put(address04, transientReplica(address04, twoToken, threeToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveBackward().left,\n                                                            constructTMDsMoveBackward(),\n                                                            expectedResult.asImmutableView());\n    }\n","date":"2018-09-26 17:42:46","endLine":667,"groupId":"27304","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/e5/a63c7d20cfcd4445401b4c3036784b605b9f29.src","preCode":"    public void testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable();\n        expectedResult.put(cAddress, fullReplica(cAddress, twoToken, threeToken));\n        expectedResult.put(dAddress, transientReplica(dAddress, twoToken, threeToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveBackward().left,\n                                                            constructTMDsMoveBackward(),\n                                                            expectedResult.asImmutableView());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/MoveTransientTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":658,"status":"M"}],"commitId":"0379201c7057f6bac4abf1e0f3d81a12d90abd08","commitMessage":"@@@Transient replication: range movement improvements\n\nPatch by Alex Petrov; reviewed by Ariel Weisberg and Benedict Elliott Smith for CASSANDRA-14756","date":"2018-09-26 17:42:46","modifiedFileCount":"15","status":"M","submitter":"Alex Petrov"},{"authorTime":"2018-09-08 02:28:16","codes":[{"authorDate":"2018-09-08 02:28:16","commitOrder":3,"curCode":"    public void testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        DatabaseDescriptor.setTransientReplicationEnabledUnsafe(true);\n        RangesByEndpoint.Builder expectedResult = new RangesByEndpoint.Builder();\n\n        \r\n        expectedResult.put(address02, transientReplica(address02, nineToken, elevenToken));\n        expectedResult.put(address02, fullReplica(address02, elevenToken, oneToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveForwardBetween().left,\n                                                            constructTMDsMoveForwardBetween(),\n                                                            expectedResult.build());\n    }\n","date":"2018-10-03 21:38:22","endLine":638,"groupId":"101449","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a3/868a234267fc8e8085b896618bd88bedbd1a4b.src","preCode":"    public void testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        DatabaseDescriptor.setTransientReplicationEnabledUnsafe(true);\n        RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable();\n\n        \r\n        expectedResult.put(address02, transientReplica(address02, nineToken, elevenToken));\n        expectedResult.put(address02, fullReplica(address02, elevenToken, oneToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveForwardBetween().left,\n                                                            constructTMDsMoveForwardBetween(),\n                                                            expectedResult.asImmutableView());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/MoveTransientTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":626,"status":"M"},{"authorDate":"2018-09-08 02:28:16","commitOrder":3,"curCode":"    public void testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        RangesByEndpoint.Builder expectedResult = new RangesByEndpoint.Builder();\n        expectedResult.put(address03, fullReplica(address03, twoToken, threeToken));\n        expectedResult.put(address04, transientReplica(address04, twoToken, threeToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveBackward().left,\n                                                            constructTMDsMoveBackward(),\n                                                            expectedResult.build());\n    }\n","date":"2018-10-03 21:38:22","endLine":667,"groupId":"101449","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/a3/868a234267fc8e8085b896618bd88bedbd1a4b.src","preCode":"    public void testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints() throws Exception\n    {\n        RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable();\n        expectedResult.put(address03, fullReplica(address03, twoToken, threeToken));\n        expectedResult.put(address04, transientReplica(address04, twoToken, threeToken));\n\n        invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveBackward().left,\n                                                            constructTMDsMoveBackward(),\n                                                            expectedResult.asImmutableView());\n    }\n","realPath":"test/unit/org/apache/cassandra/service/MoveTransientTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":658,"status":"M"}],"commitId":"e645b9172c5d50fc2af407de724e46121edfe109","commitMessage":"@@@ReplicaCollection follow-up\n\npatch by Benedict; reviewed by Alex Petrov and Ariel Weisberg for CASSANDRA-14726\n","date":"2018-10-03 21:38:22","modifiedFileCount":"33","status":"M","submitter":"Benedict Elliott Smith"}]
