[{"authorTime":"2018-07-04 03:07:11","codes":[{"authorDate":"2018-07-04 03:07:11","commitOrder":1,"curCode":"    public void validateFullyContainedIn_PartialOverlap_Fails()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(2)));\n\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sstable.getPositionsForRanges(requestedRanges),\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertFalse(cof.contained(requestedRanges, sstable));\n    }\n","date":"2018-07-28 00:50:25","endLine":109,"groupId":"29439","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFullyContainedIn_PartialOverlap_Fails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/82/56ac654870ddd07f0ac3ef66cb62e7446c9ac1.src","preCode":"    public void validateFullyContainedIn_PartialOverlap_Fails()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(2)));\n\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sstable.getPositionsForRanges(requestedRanges),\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertFalse(cof.contained(requestedRanges, sstable));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/streaming/CassandraOutgoingFileTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2018-07-04 03:07:11","commitOrder":1,"curCode":"    public void validateFullyContainedIn_SplitRange_Succeeds()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(4)),\n                                                         new Range<>(getTokenAtIndex(2), getTokenAtIndex(6)),\n                                                         new Range<>(getTokenAtIndex(5), sstable.last.getToken()));\n\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sstable.getPositionsForRanges(requestedRanges),\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertTrue(cof.contained(requestedRanges, sstable));\n    }\n","date":"2018-07-28 00:50:25","endLine":123,"groupId":"29438","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"validateFullyContainedIn_SplitRange_Succeeds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/82/56ac654870ddd07f0ac3ef66cb62e7446c9ac1.src","preCode":"    public void validateFullyContainedIn_SplitRange_Succeeds()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(4)),\n                                                         new Range<>(getTokenAtIndex(2), getTokenAtIndex(6)),\n                                                         new Range<>(getTokenAtIndex(5), sstable.last.getToken()));\n\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sstable.getPositionsForRanges(requestedRanges),\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertTrue(cof.contained(requestedRanges, sstable));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/streaming/CassandraOutgoingFileTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"B"}],"commitId":"47a12c52a313258307ab88392f75c5866d9a2bb1","commitMessage":"@@@Stream entire SSTables when possible\n\npatch by Dinesh Joshi; reviewed by Aleksey Yeschenko and Ariel Weisberg\nfor CASSANDRA-14566\n","date":"2018-07-28 00:50:25","modifiedFileCount":"39","status":"B","submitter":"Dinesh A. Joshi"},{"authorTime":"2018-07-06 06:10:40","codes":[{"authorDate":"2018-07-04 03:07:11","commitOrder":2,"curCode":"    public void validateFullyContainedIn_PartialOverlap_Fails()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(2)));\n\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sstable.getPositionsForRanges(requestedRanges),\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertFalse(cof.contained(requestedRanges, sstable));\n    }\n","date":"2018-07-28 00:50:25","endLine":109,"groupId":"29439","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFullyContainedIn_PartialOverlap_Fails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/82/56ac654870ddd07f0ac3ef66cb62e7446c9ac1.src","preCode":"    public void validateFullyContainedIn_PartialOverlap_Fails()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(2)));\n\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sstable.getPositionsForRanges(requestedRanges),\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertFalse(cof.contained(requestedRanges, sstable));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/streaming/CassandraOutgoingFileTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"},{"authorDate":"2018-07-06 06:10:40","commitOrder":2,"curCode":"    public void validateFullyContainedIn_SplitRange_Succeeds()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(4)),\n                                                         new Range<>(getTokenAtIndex(2), getTokenAtIndex(6)),\n                                                         new Range<>(getTokenAtIndex(5), sstable.last.getToken()));\n        requestedRanges = Range.normalize(requestedRanges);\n\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sstable.getPositionsForRanges(requestedRanges),\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertTrue(cof.contained(requestedRanges, sstable));\n    }\n","date":"2018-09-01 09:34:22","endLine":124,"groupId":"29438","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"validateFullyContainedIn_SplitRange_Succeeds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5e/443463d52244f0091b8d8b8c0bbec09725943c.src","preCode":"    public void validateFullyContainedIn_SplitRange_Succeeds()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(4)),\n                                                         new Range<>(getTokenAtIndex(2), getTokenAtIndex(6)),\n                                                         new Range<>(getTokenAtIndex(5), sstable.last.getToken()));\n\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sstable.getPositionsForRanges(requestedRanges),\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertTrue(cof.contained(requestedRanges, sstable));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/streaming/CassandraOutgoingFileTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"f7431b432875e334170ccdb19934d05545d2cebd","commitMessage":"@@@Transient Replication and Cheap Quorums\n\nPatch by Blake Eggleston.  Benedict Elliott Smith.  Marcus Eriksson.  Alex Petrov.  Ariel Weisberg; Reviewed by Blake Eggleston.  Marcus Eriksson.  Benedict Elliott Smith.  Alex Petrov.  Ariel Weisberg for CASSANDRA-14404\n\nCo-authored-by: Blake Eggleston <bdeggleston@gmail.com>\nCo-authored-by: Benedict Elliott Smith <benedict@apache.org>\nCo-authored-by: Marcus Eriksson <marcuse@apache.org>\nCo-authored-by: Alex Petrov <oleksandr.petrov@gmail.com>\n","date":"2018-09-01 09:34:22","modifiedFileCount":"230","status":"M","submitter":"Ariel Weisberg"},{"authorTime":"2020-03-23 22:05:53","codes":[{"authorDate":"2020-03-23 22:05:53","commitOrder":3,"curCode":"    public void validateFullyContainedIn_PartialOverlap_Fails()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(2)));\n\n        List<SSTableReader.PartitionPositionBounds> sections = sstable.getPositionsForRanges(requestedRanges);\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sections,\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertFalse(cof.contained(sections, sstable));\n    }\n","date":"2020-04-19 01:59:15","endLine":111,"groupId":"10560","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"validateFullyContainedIn_PartialOverlap_Fails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/9d/663b58626bb5eef443918513a1895964aa1fee.src","preCode":"    public void validateFullyContainedIn_PartialOverlap_Fails()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(2)));\n\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sstable.getPositionsForRanges(requestedRanges),\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertFalse(cof.contained(requestedRanges, sstable));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/streaming/CassandraOutgoingFileTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2020-03-23 22:05:53","commitOrder":3,"curCode":"    public void validateFullyContainedIn_SplitRange_Succeeds()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(4)),\n                                                         new Range<>(getTokenAtIndex(2), getTokenAtIndex(6)),\n                                                         new Range<>(getTokenAtIndex(5), sstable.last.getToken()));\n        requestedRanges = Range.normalize(requestedRanges);\n\n        List<SSTableReader.PartitionPositionBounds> sections = sstable.getPositionsForRanges(requestedRanges);\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sections,\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertTrue(cof.contained(sections, sstable));\n    }\n","date":"2020-04-19 01:59:15","endLine":127,"groupId":"10560","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"validateFullyContainedIn_SplitRange_Succeeds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/9d/663b58626bb5eef443918513a1895964aa1fee.src","preCode":"    public void validateFullyContainedIn_SplitRange_Succeeds()\n    {\n        List<Range<Token>> requestedRanges = Arrays.asList(new Range<>(store.getPartitioner().getMinimumToken(), getTokenAtIndex(4)),\n                                                         new Range<>(getTokenAtIndex(2), getTokenAtIndex(6)),\n                                                         new Range<>(getTokenAtIndex(5), sstable.last.getToken()));\n        requestedRanges = Range.normalize(requestedRanges);\n\n        CassandraOutgoingFile cof = new CassandraOutgoingFile(StreamOperation.BOOTSTRAP, sstable.ref(),\n                                                              sstable.getPositionsForRanges(requestedRanges),\n                                                              requestedRanges, sstable.estimatedKeys());\n\n        assertTrue(cof.contained(requestedRanges, sstable));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/streaming/CassandraOutgoingFileTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"b05fe7ab010218f1fb23b3192e2aea719a9611de","commitMessage":"@@@Optimize Zero Copy Streaming file containment check by using file sections\n\nPatch By Zhao Yang; Reviewed by T Jake Luciani and Dinesh Joshi for CASSANDRA-15657\n","date":"2020-04-19 01:59:15","modifiedFileCount":"2","status":"M","submitter":"Zhao Yang"}]
