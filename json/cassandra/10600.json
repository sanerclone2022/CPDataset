[{"authorTime":"2015-10-24 05:43:32","codes":[{"authorDate":"2015-10-24 05:43:32","commitOrder":1,"curCode":"    public void testCommitMultipleFolders() throws Throwable\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);\n\n        File origiFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables();\n        File dataFolder1 = new File(origiFolder, \"1\");\n        File dataFolder2 = new File(origiFolder, \"2\");\n        Files.createDirectories(dataFolder1.toPath());\n        Files.createDirectories(dataFolder2.toPath());\n\n        SSTableReader[] sstables = { sstable(dataFolder1, cfs, 0, 128),\n                                     sstable(dataFolder1, cfs, 1, 128),\n                                     sstable(dataFolder2, cfs, 2, 128),\n                                     sstable(dataFolder2, cfs, 3, 128)\n        };\n\n        LogTransaction log = new LogTransaction(OperationType.COMPACTION);\n        assertNotNull(log);\n\n        LogTransaction.SSTableTidier[] tidiers = { log.obsoleted(sstables[0]), log.obsoleted(sstables[2]) };\n\n        log.trackNew(sstables[1]);\n        log.trackNew(sstables[3]);\n\n        log.finish();\n\n        sstables[0].markObsolete(tidiers[0]);\n        sstables[2].markObsolete(tidiers[1]);\n\n        Arrays.stream(sstables).forEach(s -> s.selfRef().release());\n        LogTransaction.waitForDeletions();\n\n        assertFiles(dataFolder1.getPath(), new HashSet<>(sstables[1].getAllFilePaths()));\n        assertFiles(dataFolder2.getPath(), new HashSet<>(sstables[3].getAllFilePaths()));\n    }\n","date":"2015-10-24 05:43:32","endLine":328,"groupId":"10928","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCommitMultipleFolders","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/df/05d71fd177e6af16b3ea4e4c0c1a735ea6301b.src","preCode":"    public void testCommitMultipleFolders() throws Throwable\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);\n\n        File origiFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables();\n        File dataFolder1 = new File(origiFolder, \"1\");\n        File dataFolder2 = new File(origiFolder, \"2\");\n        Files.createDirectories(dataFolder1.toPath());\n        Files.createDirectories(dataFolder2.toPath());\n\n        SSTableReader[] sstables = { sstable(dataFolder1, cfs, 0, 128),\n                                     sstable(dataFolder1, cfs, 1, 128),\n                                     sstable(dataFolder2, cfs, 2, 128),\n                                     sstable(dataFolder2, cfs, 3, 128)\n        };\n\n        LogTransaction log = new LogTransaction(OperationType.COMPACTION);\n        assertNotNull(log);\n\n        LogTransaction.SSTableTidier[] tidiers = { log.obsoleted(sstables[0]), log.obsoleted(sstables[2]) };\n\n        log.trackNew(sstables[1]);\n        log.trackNew(sstables[3]);\n\n        log.finish();\n\n        sstables[0].markObsolete(tidiers[0]);\n        sstables[2].markObsolete(tidiers[1]);\n\n        Arrays.stream(sstables).forEach(s -> s.selfRef().release());\n        LogTransaction.waitForDeletions();\n\n        assertFiles(dataFolder1.getPath(), new HashSet<>(sstables[1].getAllFilePaths()));\n        assertFiles(dataFolder2.getPath(), new HashSet<>(sstables[3].getAllFilePaths()));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/LogTransactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"B"},{"authorDate":"2015-10-24 05:43:32","commitOrder":1,"curCode":"    public void testAbortMultipleFolders() throws Throwable\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);\n\n        File origiFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables();\n        File dataFolder1 = new File(origiFolder, \"1\");\n        File dataFolder2 = new File(origiFolder, \"2\");\n        Files.createDirectories(dataFolder1.toPath());\n        Files.createDirectories(dataFolder2.toPath());\n\n        SSTableReader[] sstables = { sstable(dataFolder1, cfs, 0, 128),\n                                     sstable(dataFolder1, cfs, 1, 128),\n                                     sstable(dataFolder2, cfs, 2, 128),\n                                     sstable(dataFolder2, cfs, 3, 128)\n        };\n\n        LogTransaction log = new LogTransaction(OperationType.COMPACTION);\n        assertNotNull(log);\n\n        LogTransaction.SSTableTidier[] tidiers = { log.obsoleted(sstables[0]), log.obsoleted(sstables[2]) };\n\n        log.trackNew(sstables[1]);\n        log.trackNew(sstables[3]);\n\n        Arrays.stream(tidiers).forEach(LogTransaction.SSTableTidier::abort);\n        log.abort();\n\n        Arrays.stream(sstables).forEach(s -> s.selfRef().release());\n        LogTransaction.waitForDeletions();\n\n        assertFiles(dataFolder1.getPath(), new HashSet<>(sstables[0].getAllFilePaths()));\n        assertFiles(dataFolder2.getPath(), new HashSet<>(sstables[2].getAllFilePaths()));\n    }\n","date":"2015-10-24 05:43:32","endLine":402,"groupId":"10928","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAbortMultipleFolders","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/df/05d71fd177e6af16b3ea4e4c0c1a735ea6301b.src","preCode":"    public void testAbortMultipleFolders() throws Throwable\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);\n\n        File origiFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables();\n        File dataFolder1 = new File(origiFolder, \"1\");\n        File dataFolder2 = new File(origiFolder, \"2\");\n        Files.createDirectories(dataFolder1.toPath());\n        Files.createDirectories(dataFolder2.toPath());\n\n        SSTableReader[] sstables = { sstable(dataFolder1, cfs, 0, 128),\n                                     sstable(dataFolder1, cfs, 1, 128),\n                                     sstable(dataFolder2, cfs, 2, 128),\n                                     sstable(dataFolder2, cfs, 3, 128)\n        };\n\n        LogTransaction log = new LogTransaction(OperationType.COMPACTION);\n        assertNotNull(log);\n\n        LogTransaction.SSTableTidier[] tidiers = { log.obsoleted(sstables[0]), log.obsoleted(sstables[2]) };\n\n        log.trackNew(sstables[1]);\n        log.trackNew(sstables[3]);\n\n        Arrays.stream(tidiers).forEach(LogTransaction.SSTableTidier::abort);\n        log.abort();\n\n        Arrays.stream(sstables).forEach(s -> s.selfRef().release());\n        LogTransaction.waitForDeletions();\n\n        assertFiles(dataFolder1.getPath(), new HashSet<>(sstables[0].getAllFilePaths()));\n        assertFiles(dataFolder2.getPath(), new HashSet<>(sstables[2].getAllFilePaths()));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/LogTransactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"B"}],"commitId":"3a2dd0cf60f34c242c53d59ad144e76558dface9","commitMessage":"@@@Merge branch 'cassandra-3.0' into trunk\n","date":"2015-10-24 05:43:32","modifiedFileCount":"16","status":"B","submitter":"Joshua McKenzie"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":2,"curCode":"    public void testCommitMultipleFolders() throws Throwable\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);\n\n        File origiFolder = new Directories(cfs.metadata()).getDirectoryForNewSSTables();\n        File dataFolder1 = new File(origiFolder, \"1\");\n        File dataFolder2 = new File(origiFolder, \"2\");\n        Files.createDirectories(dataFolder1.toPath());\n        Files.createDirectories(dataFolder2.toPath());\n\n        SSTableReader[] sstables = { sstable(dataFolder1, cfs, 0, 128),\n                                     sstable(dataFolder1, cfs, 1, 128),\n                                     sstable(dataFolder2, cfs, 2, 128),\n                                     sstable(dataFolder2, cfs, 3, 128)\n        };\n\n        LogTransaction log = new LogTransaction(OperationType.COMPACTION);\n        assertNotNull(log);\n\n        LogTransaction.SSTableTidier[] tidiers = { log.obsoleted(sstables[0]), log.obsoleted(sstables[2]) };\n\n        log.trackNew(sstables[1]);\n        log.trackNew(sstables[3]);\n\n        log.finish();\n\n        sstables[0].markObsolete(tidiers[0]);\n        sstables[2].markObsolete(tidiers[1]);\n\n        Arrays.stream(sstables).forEach(s -> s.selfRef().release());\n        LogTransaction.waitForDeletions();\n\n        assertFiles(dataFolder1.getPath(), new HashSet<>(sstables[1].getAllFilePaths()));\n        assertFiles(dataFolder2.getPath(), new HashSet<>(sstables[3].getAllFilePaths()));\n    }\n","date":"2017-01-28 06:17:46","endLine":328,"groupId":"10600","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCommitMultipleFolders","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/20/215386b1d2359d6646c13c7c8746d6b7d7bb62.src","preCode":"    public void testCommitMultipleFolders() throws Throwable\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);\n\n        File origiFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables();\n        File dataFolder1 = new File(origiFolder, \"1\");\n        File dataFolder2 = new File(origiFolder, \"2\");\n        Files.createDirectories(dataFolder1.toPath());\n        Files.createDirectories(dataFolder2.toPath());\n\n        SSTableReader[] sstables = { sstable(dataFolder1, cfs, 0, 128),\n                                     sstable(dataFolder1, cfs, 1, 128),\n                                     sstable(dataFolder2, cfs, 2, 128),\n                                     sstable(dataFolder2, cfs, 3, 128)\n        };\n\n        LogTransaction log = new LogTransaction(OperationType.COMPACTION);\n        assertNotNull(log);\n\n        LogTransaction.SSTableTidier[] tidiers = { log.obsoleted(sstables[0]), log.obsoleted(sstables[2]) };\n\n        log.trackNew(sstables[1]);\n        log.trackNew(sstables[3]);\n\n        log.finish();\n\n        sstables[0].markObsolete(tidiers[0]);\n        sstables[2].markObsolete(tidiers[1]);\n\n        Arrays.stream(sstables).forEach(s -> s.selfRef().release());\n        LogTransaction.waitForDeletions();\n\n        assertFiles(dataFolder1.getPath(), new HashSet<>(sstables[1].getAllFilePaths()));\n        assertFiles(dataFolder2.getPath(), new HashSet<>(sstables[3].getAllFilePaths()));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/LogTransactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":2,"curCode":"    public void testAbortMultipleFolders() throws Throwable\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);\n\n        File origiFolder = new Directories(cfs.metadata()).getDirectoryForNewSSTables();\n        File dataFolder1 = new File(origiFolder, \"1\");\n        File dataFolder2 = new File(origiFolder, \"2\");\n        Files.createDirectories(dataFolder1.toPath());\n        Files.createDirectories(dataFolder2.toPath());\n\n        SSTableReader[] sstables = { sstable(dataFolder1, cfs, 0, 128),\n                                     sstable(dataFolder1, cfs, 1, 128),\n                                     sstable(dataFolder2, cfs, 2, 128),\n                                     sstable(dataFolder2, cfs, 3, 128)\n        };\n\n        LogTransaction log = new LogTransaction(OperationType.COMPACTION);\n        assertNotNull(log);\n\n        LogTransaction.SSTableTidier[] tidiers = { log.obsoleted(sstables[0]), log.obsoleted(sstables[2]) };\n\n        log.trackNew(sstables[1]);\n        log.trackNew(sstables[3]);\n\n        Arrays.stream(tidiers).forEach(LogTransaction.SSTableTidier::abort);\n        log.abort();\n\n        Arrays.stream(sstables).forEach(s -> s.selfRef().release());\n        LogTransaction.waitForDeletions();\n\n        assertFiles(dataFolder1.getPath(), new HashSet<>(sstables[0].getAllFilePaths()));\n        assertFiles(dataFolder2.getPath(), new HashSet<>(sstables[2].getAllFilePaths()));\n    }\n","date":"2017-01-28 06:17:46","endLine":402,"groupId":"10600","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAbortMultipleFolders","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/20/215386b1d2359d6646c13c7c8746d6b7d7bb62.src","preCode":"    public void testAbortMultipleFolders() throws Throwable\n    {\n        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);\n\n        File origiFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables();\n        File dataFolder1 = new File(origiFolder, \"1\");\n        File dataFolder2 = new File(origiFolder, \"2\");\n        Files.createDirectories(dataFolder1.toPath());\n        Files.createDirectories(dataFolder2.toPath());\n\n        SSTableReader[] sstables = { sstable(dataFolder1, cfs, 0, 128),\n                                     sstable(dataFolder1, cfs, 1, 128),\n                                     sstable(dataFolder2, cfs, 2, 128),\n                                     sstable(dataFolder2, cfs, 3, 128)\n        };\n\n        LogTransaction log = new LogTransaction(OperationType.COMPACTION);\n        assertNotNull(log);\n\n        LogTransaction.SSTableTidier[] tidiers = { log.obsoleted(sstables[0]), log.obsoleted(sstables[2]) };\n\n        log.trackNew(sstables[1]);\n        log.trackNew(sstables[3]);\n\n        Arrays.stream(tidiers).forEach(LogTransaction.SSTableTidier::abort);\n        log.abort();\n\n        Arrays.stream(sstables).forEach(s -> s.selfRef().release());\n        LogTransaction.waitForDeletions();\n\n        assertFiles(dataFolder1.getPath(), new HashSet<>(sstables[0].getAllFilePaths()));\n        assertFiles(dataFolder2.getPath(), new HashSet<>(sstables[2].getAllFilePaths()));\n    }\n","realPath":"test/unit/org/apache/cassandra/db/lifecycle/LogTransactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"}],"commitId":"af3fe39dcabd9ef77a00309ce6741268423206df","commitMessage":"@@@Make TableMetadata immutable.  optimize Schema\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-9425\n","date":"2017-01-28 06:17:46","modifiedFileCount":"511","status":"M","submitter":"Aleksey Yeschenko"}]
