[{"authorTime":"2015-12-03 11:23:54","codes":[{"authorDate":"2015-12-03 11:23:54","commitOrder":1,"curCode":"    public void testSerializedSize() throws Exception\n    {\n        final TokenTreeBuilder builder = new TokenTreeBuilder(tokens).finish();\n\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, 4096, BufferType.ON_HEAP))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n    }\n","date":"2016-01-24 11:35:29","endLine":174,"groupId":"8483","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerializedSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/d0/9b8d43ed1f28991355f05f9e6cbfbcc3eecfa5.src","preCode":"    public void testSerializedSize() throws Exception\n    {\n        final TokenTreeBuilder builder = new TokenTreeBuilder(tokens).finish();\n\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, 4096, BufferType.ON_HEAP))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"},{"authorDate":"2015-12-03 11:23:54","commitOrder":1,"curCode":"    public void skipPastEnd() throws Exception\n    {\n        final TokenTreeBuilder builder = new TokenTreeBuilder(simpleTokenMap).finish();\n\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, 4096, BufferType.ON_HEAP))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER);\n\n        tokenTree.skipTo(simpleTokenMap.lastKey() + 10);\n    }\n","date":"2016-01-24 11:35:29","endLine":298,"groupId":"8483","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"skipPastEnd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/d0/9b8d43ed1f28991355f05f9e6cbfbcc3eecfa5.src","preCode":"    public void skipPastEnd() throws Exception\n    {\n        final TokenTreeBuilder builder = new TokenTreeBuilder(simpleTokenMap).finish();\n\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, 4096, BufferType.ON_HEAP))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER);\n\n        tokenTree.skipTo(simpleTokenMap.lastKey() + 10);\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"B"}],"commitId":"72790dc8e34826b39ac696b03025ae6b7b6beb2b","commitMessage":"@@@Integrate SASI index into Cassandra\n\npatch by xedin; reviewed by beobal for CASSANDRA-10661\n","date":"2016-01-24 11:35:29","modifiedFileCount":"17","status":"B","submitter":"Pavel Yaskevich"},{"authorTime":"2016-03-28 06:24:29","codes":[{"authorDate":"2016-03-28 06:24:29","commitOrder":2,"curCode":"    public void testSerializedSize(final TokenTreeBuilder builder) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, 4096, BufferType.ON_HEAP))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n        reader.close();\n    }\n","date":"2016-03-28 06:24:29","endLine":114,"groupId":"8483","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerializedSize","params":"(finalTokenTreeBuilderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/18/9e9c648a872bb410375c4447c3abcf63897380.src","preCode":"    public void testSerializedSize() throws Exception\n    {\n        final TokenTreeBuilder builder = new TokenTreeBuilder(tokens).finish();\n\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, 4096, BufferType.ON_HEAP))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2016-03-28 06:24:29","commitOrder":2,"curCode":"    public void skipPastEnd(TokenTreeBuilder builder, SortedMap<Long, LongSet> tokens) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, 4096, BufferType.ON_HEAP))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER);\n\n        tokenTree.skipTo(tokens.lastKey() + 10);\n    }\n","date":"2016-03-28 06:24:29","endLine":281,"groupId":"8483","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"skipPastEnd","params":"(TokenTreeBuilderbuilder@SortedMap<Long@LongSet>tokens)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/18/9e9c648a872bb410375c4447c3abcf63897380.src","preCode":"    public void skipPastEnd() throws Exception\n    {\n        final TokenTreeBuilder builder = new TokenTreeBuilder(simpleTokenMap).finish();\n\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, 4096, BufferType.ON_HEAP))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER);\n\n        tokenTree.skipTo(simpleTokenMap.lastKey() + 10);\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"}],"commitId":"b6ff7f6c0d2849676efe05422e7c0d5bf0949a3e","commitMessage":"@@@Merge branch 'cassandra-3.5' into trunk\n","date":"2016-03-28 06:24:29","modifiedFileCount":"12","status":"M","submitter":"Pavel Yaskevich"},{"authorTime":"2016-06-27 09:51:10","codes":[{"authorDate":"2016-06-27 09:51:10","commitOrder":3,"curCode":"    public void testSerializedSize(final TokenTreeBuilder builder) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n        reader.close();\n    }\n","date":"2016-06-27 09:55:47","endLine":117,"groupId":"18879","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerializedSize","params":"(finalTokenTreeBuilderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b2/6bb443ff0bb8ed5f79f300f090d864cf4acf3b.src","preCode":"    public void testSerializedSize(final TokenTreeBuilder builder) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, 4096, BufferType.ON_HEAP))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n        reader.close();\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2016-06-27 09:51:10","commitOrder":3,"curCode":"    public void skipPastEnd(TokenTreeBuilder builder, SortedMap<Long, LongSet> tokens) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER);\n\n        tokenTree.skipTo(tokens.lastKey() + 10);\n    }\n","date":"2016-06-27 09:55:47","endLine":284,"groupId":"18879","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"skipPastEnd","params":"(TokenTreeBuilderbuilder@SortedMap<Long@LongSet>tokens)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b2/6bb443ff0bb8ed5f79f300f090d864cf4acf3b.src","preCode":"    public void skipPastEnd(TokenTreeBuilder builder, SortedMap<Long, LongSet> tokens) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, 4096, BufferType.ON_HEAP))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER);\n\n        tokenTree.skipTo(tokens.lastKey() + 10);\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":268,"status":"M"}],"commitId":"fb221095cb2a18cf8f027a8a084700d606bb9ca3","commitMessage":"@@@Remove DatabaseDescriptor dependency from Sequentialwriter\n\npatch by yukim; reviewed by snazy for CASSANDRA-11579\n","date":"2016-06-27 09:55:47","modifiedFileCount":"21","status":"M","submitter":"Yuki Morishita"},{"authorTime":"2016-06-27 00:21:08","codes":[{"authorDate":"2016-06-27 09:51:10","commitOrder":4,"curCode":"    public void testSerializedSize(final TokenTreeBuilder builder) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n        reader.close();\n    }\n","date":"2016-06-27 09:55:47","endLine":117,"groupId":"18879","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerializedSize","params":"(finalTokenTreeBuilderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b2/6bb443ff0bb8ed5f79f300f090d864cf4acf3b.src","preCode":"    public void testSerializedSize(final TokenTreeBuilder builder) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n        reader.close();\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"},{"authorDate":"2016-06-27 00:21:08","commitOrder":4,"curCode":"    public void skipPastEnd(TokenTreeBuilder builder, SortedMap<Long, KeyOffsets> tokens) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KeyConverter.instance);\n\n        tokenTree.skipTo(tokens.lastKey() + 10);\n    }\n","date":"2016-09-06 13:17:11","endLine":301,"groupId":"18879","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"skipPastEnd","params":"(TokenTreeBuilderbuilder@SortedMap<Long@KeyOffsets>tokens)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/7c/2498c586c4e747f3e7839d5d5afd1e17b1d071.src","preCode":"    public void skipPastEnd(TokenTreeBuilder builder, SortedMap<Long, LongSet> tokens) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER);\n\n        tokenTree.skipTo(tokens.lastKey() + 10);\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"}],"commitId":"7d857b46fb070548bf5e5f6ff81db588f08ec22a","commitMessage":"@@@Add row offset support to SASI\n\nPatch by Alex Petrov; reviewed by Pavel Yaskevich for CASSANDRA-11990\n","date":"2016-09-06 13:17:11","modifiedFileCount":"34","status":"M","submitter":"Alex Petrov"},{"authorTime":"2016-11-18 07:27:14","codes":[{"authorDate":"2016-06-27 09:51:10","commitOrder":5,"curCode":"    public void testSerializedSize(final TokenTreeBuilder builder) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n        reader.close();\n    }\n","date":"2016-06-27 09:55:47","endLine":117,"groupId":"18879","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerializedSize","params":"(finalTokenTreeBuilderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/b2/6bb443ff0bb8ed5f79f300f090d864cf4acf3b.src","preCode":"    public void testSerializedSize(final TokenTreeBuilder builder) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n        reader.close();\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"},{"authorDate":"2016-11-18 07:27:14","commitOrder":5,"curCode":"    public void skipPastEnd(TokenTreeBuilder builder, SortedMap<Long, LongSet> tokens) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER);\n\n        tokenTree.skipTo(tokens.lastKey() + 10);\n    }\n","date":"2016-11-18 07:27:14","endLine":294,"groupId":"18879","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"skipPastEnd","params":"(TokenTreeBuilderbuilder@SortedMap<Long@LongSet>tokens)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/92/7e1658063c572d573ec74ce08865a47b3aebf6.src","preCode":"    public void skipPastEnd(TokenTreeBuilder builder, SortedMap<Long, KeyOffsets> tokens) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KeyConverter.instance);\n\n        tokenTree.skipTo(tokens.lastKey() + 10);\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"M"}],"commitId":"f55d1b9f02a0c5b10fd1527440dd2b0371f91fe0","commitMessage":"@@@Merge branch 'cassandra-3.X' into trunk\n","date":"2016-11-18 07:27:14","modifiedFileCount":"34","status":"M","submitter":"Pavel Yaskevich"},{"authorTime":"2017-09-13 02:04:30","codes":[{"authorDate":"2017-09-13 02:04:30","commitOrder":6,"curCode":"    public void testSerializedSize(final TokenTreeBuilder builder) throws Exception\n    {\n        builder.finish();\n        final File treeFile = FileUtils.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n        reader.close();\n    }\n","date":"2018-07-27 00:20:00","endLine":131,"groupId":"101064","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerializedSize","params":"(finalTokenTreeBuilderbuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/72/b9e0d3382626d42b7c1bc2f7dc25c21ef62d8c.src","preCode":"    public void testSerializedSize(final TokenTreeBuilder builder) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-size-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        Assert.assertEquals((int) reader.bytesRemaining(), builder.serializedSize());\n        reader.close();\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2017-09-13 02:04:30","commitOrder":6,"curCode":"    public void skipPastEnd(TokenTreeBuilder builder, SortedMap<Long, LongSet> tokens) throws Exception\n    {\n        builder.finish();\n        final File treeFile = FileUtils.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER);\n\n        tokenTree.skipTo(tokens.lastKey() + 10);\n    }\n","date":"2018-07-27 00:20:00","endLine":302,"groupId":"101064","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"skipPastEnd","params":"(TokenTreeBuilderbuilder@SortedMap<Long@LongSet>tokens)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/72/b9e0d3382626d42b7c1bc2f7dc25c21ef62d8c.src","preCode":"    public void skipPastEnd(TokenTreeBuilder builder, SortedMap<Long, LongSet> tokens) throws Exception\n    {\n        builder.finish();\n        final File treeFile = File.createTempFile(\"token-tree-skip-past-test\", \"tt\");\n        treeFile.deleteOnExit();\n\n        try (SequentialWriter writer = new SequentialWriter(treeFile, DEFAULT_OPT))\n        {\n            builder.write(writer);\n            writer.sync();\n        }\n\n        final RandomAccessReader reader = RandomAccessReader.open(treeFile);\n        final RangeIterator<Long, Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER);\n\n        tokenTree.skipTo(tokens.lastKey() + 10);\n    }\n","realPath":"test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"M"}],"commitId":"6ba2fb9395226491872b41312d978a169f36fcdb","commitMessage":"@@@Make C* compile and run on Java 11 and Java 8\n\npatch by Robert Stupp; reviewed by Jason Brown for CASSANDRA-9608\n","date":"2018-07-27 00:20:00","modifiedFileCount":"79","status":"M","submitter":"Robert Stupp"}]
