[{"authorTime":"2016-09-19 10:42:50","codes":[{"authorDate":"2016-09-19 10:42:50","commitOrder":1,"curCode":"    public void testUpdateAndGetBetweenWindows() throws InterruptedException\n    {\n        TestTimeSource time = new TestTimeSource();\n        SlidingTimeRate rate = new SlidingTimeRate(time, 5, 1, TimeUnit.SECONDS);\n        int updates = 100;\n        for (int i = 0; i < updates; i++)\n        {\n            rate.update(1);\n            time.sleep(100, TimeUnit.MILLISECONDS);\n        }\n        Assert.assertEquals(10, rate.get(TimeUnit.SECONDS), 0.0);\n    }\n","date":"2016-09-20 09:07:36","endLine":53,"groupId":"21734","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateAndGetBetweenWindows","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/8c/11f9d2636ddbb754496e21b6d641235c897b05.src","preCode":"    public void testUpdateAndGetBetweenWindows() throws InterruptedException\n    {\n        TestTimeSource time = new TestTimeSource();\n        SlidingTimeRate rate = new SlidingTimeRate(time, 5, 1, TimeUnit.SECONDS);\n        int updates = 100;\n        for (int i = 0; i < updates; i++)\n        {\n            rate.update(1);\n            time.sleep(100, TimeUnit.MILLISECONDS);\n        }\n        Assert.assertEquals(10, rate.get(TimeUnit.SECONDS), 0.0);\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/SlidingTimeRateTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"},{"authorDate":"2016-09-19 10:42:50","commitOrder":1,"curCode":"    public void testUpdateAndGetToPointInTime() throws InterruptedException\n    {\n        TestTimeSource time = new TestTimeSource();\n        SlidingTimeRate rate = new SlidingTimeRate(time, 5, 1, TimeUnit.SECONDS);\n        int updates = 10;\n        for (int i = 0; i < updates; i++)\n        {\n            rate.update(1);\n            time.sleep(100, TimeUnit.MILLISECONDS);\n        }\n\n        time.sleep(1, TimeUnit.SECONDS);\n\n        Assert.assertEquals(5, rate.get(TimeUnit.SECONDS), 0.0);\n        Assert.assertEquals(10, rate.get(1, TimeUnit.SECONDS), 0.0);\n    }\n","date":"2016-09-20 09:07:36","endLine":87,"groupId":"21734","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateAndGetToPointInTime","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/8c/11f9d2636ddbb754496e21b6d641235c897b05.src","preCode":"    public void testUpdateAndGetToPointInTime() throws InterruptedException\n    {\n        TestTimeSource time = new TestTimeSource();\n        SlidingTimeRate rate = new SlidingTimeRate(time, 5, 1, TimeUnit.SECONDS);\n        int updates = 10;\n        for (int i = 0; i < updates; i++)\n        {\n            rate.update(1);\n            time.sleep(100, TimeUnit.MILLISECONDS);\n        }\n\n        time.sleep(1, TimeUnit.SECONDS);\n\n        Assert.assertEquals(5, rate.get(TimeUnit.SECONDS), 0.0);\n        Assert.assertEquals(10, rate.get(1, TimeUnit.SECONDS), 0.0);\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/SlidingTimeRateTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"d43b9ce5092f8879a1a66afebab74d86e9e127fb","commitMessage":"@@@Support optional backpressure strategies at the coordinator\n\npatch by Sergio Bossa; reviewed by Stefania Alborghetti for CASSANDRA-9318\n","date":"2016-09-20 09:07:36","modifiedFileCount":"12","status":"B","submitter":"Sergio Bossa"},{"authorTime":"2021-06-05 06:42:22","codes":[{"authorDate":"2021-06-05 06:42:22","commitOrder":2,"curCode":"    public void testUpdateAndGetBetweenWindows()\n    {\n        TestTimeSource time = new TestTimeSource();\n        SlidingTimeRate rate = new SlidingTimeRate(time, 5, 1, TimeUnit.SECONDS);\n        int updates = 100;\n        for (int i = 0; i < updates; i++)\n        {\n            rate.update(1);\n            time.sleep(100, TimeUnit.MILLISECONDS);\n        }\n        Assert.assertEquals(10, rate.get(TimeUnit.SECONDS), 0.0);\n    }\n","date":"2021-06-05 06:42:35","endLine":63,"groupId":"101205","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testUpdateAndGetBetweenWindows","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/8d/c4a14d6d76d8f6828912b7138cf7d1d451eb7e.src","preCode":"    public void testUpdateAndGetBetweenWindows() throws InterruptedException\n    {\n        TestTimeSource time = new TestTimeSource();\n        SlidingTimeRate rate = new SlidingTimeRate(time, 5, 1, TimeUnit.SECONDS);\n        int updates = 100;\n        for (int i = 0; i < updates; i++)\n        {\n            rate.update(1);\n            time.sleep(100, TimeUnit.MILLISECONDS);\n        }\n        Assert.assertEquals(10, rate.get(TimeUnit.SECONDS), 0.0);\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/SlidingTimeRateTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2021-06-05 06:42:22","commitOrder":2,"curCode":"    public void testUpdateAndGetToPointInTime()\n    {\n        TestTimeSource time = new TestTimeSource();\n        SlidingTimeRate rate = new SlidingTimeRate(time, 5, 1, TimeUnit.SECONDS);\n        int updates = 10;\n        for (int i = 0; i < updates; i++)\n        {\n            rate.update(1);\n            time.sleep(100, TimeUnit.MILLISECONDS);\n        }\n\n        time.sleep(1, TimeUnit.SECONDS);\n\n        Assert.assertEquals(5, rate.get(TimeUnit.SECONDS), 0.0);\n        Assert.assertEquals(10, rate.get(1, TimeUnit.SECONDS), 0.0);\n    }\n","date":"2021-06-05 06:42:35","endLine":99,"groupId":"101205","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testUpdateAndGetToPointInTime","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/8d/c4a14d6d76d8f6828912b7138cf7d1d451eb7e.src","preCode":"    public void testUpdateAndGetToPointInTime() throws InterruptedException\n    {\n        TestTimeSource time = new TestTimeSource();\n        SlidingTimeRate rate = new SlidingTimeRate(time, 5, 1, TimeUnit.SECONDS);\n        int updates = 10;\n        for (int i = 0; i < updates; i++)\n        {\n            rate.update(1);\n            time.sleep(100, TimeUnit.MILLISECONDS);\n        }\n\n        time.sleep(1, TimeUnit.SECONDS);\n\n        Assert.assertEquals(5, rate.get(TimeUnit.SECONDS), 0.0);\n        Assert.assertEquals(10, rate.get(1, TimeUnit.SECONDS), 0.0);\n    }\n","realPath":"test/unit/org/apache/cassandra/utils/SlidingTimeRateTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"4fd21245727f4bd3b8a7cd6b8bf5a4a5cb14a328","commitMessage":"@@@Merge branch 'cassandra-4.0' into trunk\n","date":"2021-06-05 06:42:35","modifiedFileCount":"2","status":"M","submitter":"Ekaterina Dimitrova"}]
