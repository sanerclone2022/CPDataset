[{"authorTime":"2018-07-06 06:10:40","codes":[{"authorDate":"2018-07-06 06:10:40","commitOrder":1,"curCode":"    public void antiCompactOneFull() throws Exception\n    {\n        ColumnFamilyStore store = prepareColumnFamilyStore();\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), NO_RANGES));\n        assertEquals(2, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 4);\n        assertEquals(stats.transKeys, 0);\n        assertEquals(stats.unrepairedKeys, 6);\n    }\n","date":"2018-09-01 09:34:22","endLine":210,"groupId":"17532","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"antiCompactOneFull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f5/14ea65d032fcd99b2262331d2c15d8837a8f1c.src","preCode":"    public void antiCompactOneFull() throws Exception\n    {\n        ColumnFamilyStore store = prepareColumnFamilyStore();\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), NO_RANGES));\n        assertEquals(2, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 4);\n        assertEquals(stats.transKeys, 0);\n        assertEquals(stats.unrepairedKeys, 6);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/AntiCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"B"},{"authorDate":"2018-07-06 06:10:40","commitOrder":1,"curCode":"    public void antiCompactTenMixed() throws InterruptedException, IOException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF);\n        store.disableAutoCompaction();\n\n        for (int table = 0; table < 10; table++)\n        {\n            generateSStable(store,Integer.toString(table));\n        }\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), range(4, 8)));\n        assertEquals(15, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 40);\n        assertEquals(stats.transKeys, 40);\n        assertEquals(stats.unrepairedKeys, 20);\n    }\n","date":"2018-09-01 09:34:22","endLine":359,"groupId":"3605","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"antiCompactTenMixed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/f5/14ea65d032fcd99b2262331d2c15d8837a8f1c.src","preCode":"    public void antiCompactTenMixed() throws InterruptedException, IOException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF);\n        store.disableAutoCompaction();\n\n        for (int table = 0; table < 10; table++)\n        {\n            generateSStable(store,Integer.toString(table));\n        }\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), range(4, 8)));\n        assertEquals(15, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 40);\n        assertEquals(stats.transKeys, 40);\n        assertEquals(stats.unrepairedKeys, 20);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/AntiCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"B"}],"commitId":"f7431b432875e334170ccdb19934d05545d2cebd","commitMessage":"@@@Transient Replication and Cheap Quorums\n\nPatch by Blake Eggleston.  Benedict Elliott Smith.  Marcus Eriksson.  Alex Petrov.  Ariel Weisberg; Reviewed by Blake Eggleston.  Marcus Eriksson.  Benedict Elliott Smith.  Alex Petrov.  Ariel Weisberg for CASSANDRA-14404\n\nCo-authored-by: Blake Eggleston <bdeggleston@gmail.com>\nCo-authored-by: Benedict Elliott Smith <benedict@apache.org>\nCo-authored-by: Marcus Eriksson <marcuse@apache.org>\nCo-authored-by: Alex Petrov <oleksandr.petrov@gmail.com>\n","date":"2018-09-01 09:34:22","modifiedFileCount":"230","status":"B","submitter":"Ariel Weisberg"},{"authorTime":"2019-02-06 21:49:56","codes":[{"authorDate":"2019-02-06 21:49:56","commitOrder":2,"curCode":"    public void antiCompactOneFull() throws Exception\n    {\n        ColumnFamilyStore store = prepareColumnFamilyStore();\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), NO_RANGES));\n        assertEquals(2, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 4);\n        assertEquals(stats.transKeys, 0);\n        assertEquals(stats.unrepairedKeys, 6);\n        assertOnDiskState(store, 2);\n    }\n","date":"2019-02-06 21:49:56","endLine":212,"groupId":"17532","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"antiCompactOneFull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/08/609f314e3787bfce11cf68951c540e99cb9fff.src","preCode":"    public void antiCompactOneFull() throws Exception\n    {\n        ColumnFamilyStore store = prepareColumnFamilyStore();\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), NO_RANGES));\n        assertEquals(2, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 4);\n        assertEquals(stats.transKeys, 0);\n        assertEquals(stats.unrepairedKeys, 6);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/AntiCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"},{"authorDate":"2019-02-06 21:49:56","commitOrder":2,"curCode":"    public void antiCompactTenMixed() throws InterruptedException, IOException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF);\n        store.disableAutoCompaction();\n\n        for (int table = 0; table < 10; table++)\n        {\n            generateSStable(store,Integer.toString(table));\n        }\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), range(4, 8)));\n        assertEquals(15, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 40);\n        assertEquals(stats.transKeys, 40);\n        assertEquals(stats.unrepairedKeys, 20);\n        assertOnDiskState(store, 15);\n    }\n","date":"2019-02-06 21:49:56","endLine":367,"groupId":"3605","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"antiCompactTenMixed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/08/609f314e3787bfce11cf68951c540e99cb9fff.src","preCode":"    public void antiCompactTenMixed() throws InterruptedException, IOException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF);\n        store.disableAutoCompaction();\n\n        for (int table = 0; table < 10; table++)\n        {\n            generateSStable(store,Integer.toString(table));\n        }\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), range(4, 8)));\n        assertEquals(15, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 40);\n        assertEquals(stats.transKeys, 40);\n        assertEquals(stats.unrepairedKeys, 20);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/AntiCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":351,"status":"M"}],"commitId":"df62169d1b6a5bfff2bc678ffbeb0883a3a576b5","commitMessage":"@@@Merge branch 'cassandra-3.11' into trunk\n","date":"2019-02-06 21:49:56","modifiedFileCount":"5","status":"M","submitter":"Benedict Elliott Smith"},{"authorTime":"2021-03-17 22:28:05","codes":[{"authorDate":"2019-02-06 21:49:56","commitOrder":3,"curCode":"    public void antiCompactOneFull() throws Exception\n    {\n        ColumnFamilyStore store = prepareColumnFamilyStore();\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), NO_RANGES));\n        assertEquals(2, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 4);\n        assertEquals(stats.transKeys, 0);\n        assertEquals(stats.unrepairedKeys, 6);\n        assertOnDiskState(store, 2);\n    }\n","date":"2019-02-06 21:49:56","endLine":212,"groupId":"10762","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"antiCompactOneFull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/08/609f314e3787bfce11cf68951c540e99cb9fff.src","preCode":"    public void antiCompactOneFull() throws Exception\n    {\n        ColumnFamilyStore store = prepareColumnFamilyStore();\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), NO_RANGES));\n        assertEquals(2, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 4);\n        assertEquals(stats.transKeys, 0);\n        assertEquals(stats.unrepairedKeys, 6);\n        assertOnDiskState(store, 2);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/AntiCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"N"},{"authorDate":"2021-03-17 22:28:05","commitOrder":3,"curCode":"    public void antiCompactTenMixed() throws IOException, NoSuchRepairSessionException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF);\n        store.disableAutoCompaction();\n\n        for (int table = 0; table < 10; table++)\n        {\n            generateSStable(store,Integer.toString(table));\n        }\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), range(4, 8)));\n        assertEquals(15, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 40);\n        assertEquals(stats.transKeys, 40);\n        assertEquals(stats.unrepairedKeys, 20);\n        assertOnDiskState(store, 15);\n    }\n","date":"2021-07-22 05:21:23","endLine":368,"groupId":"10762","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"antiCompactTenMixed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/71/8ff64c31fbb791a19540c1bab34b57c106930d.src","preCode":"    public void antiCompactTenMixed() throws InterruptedException, IOException\n    {\n        Keyspace keyspace = Keyspace.open(KEYSPACE1);\n        ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF);\n        store.disableAutoCompaction();\n\n        for (int table = 0; table < 10; table++)\n        {\n            generateSStable(store,Integer.toString(table));\n        }\n        SSTableStats stats = antiCompactRanges(store, atEndpoint(range(0, 4), range(4, 8)));\n        assertEquals(15, stats.numLiveSSTables);\n        assertEquals(stats.pendingKeys, 40);\n        assertEquals(stats.transKeys, 40);\n        assertEquals(stats.unrepairedKeys, 20);\n        assertOnDiskState(store, 15);\n    }\n","realPath":"test/unit/org/apache/cassandra/db/compaction/AntiCompactionTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":352,"status":"M"}],"commitId":"f49c29ee8c7374a05e32be01cb0046236d5309e6","commitMessage":"@@@Reduce the log level on \"expected\" repair exceptions\n\npatch by Caleb Rackliffe and Marcus Eriksson; reviewed by Josh McKenzie for CASSANDRA-16775\n","date":"2021-07-22 05:21:23","modifiedFileCount":"30","status":"M","submitter":"Marcus Eriksson"}]
