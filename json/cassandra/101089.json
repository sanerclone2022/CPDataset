[{"authorTime":"2015-09-02 00:24:50","codes":[{"authorDate":"2015-09-02 00:24:50","commitOrder":1,"curCode":"    public void compress() throws IOException\n    {\n        byte[] buf = new byte[(1 << 13) - 13];\n        random.nextBytes(buf);\n        ByteBuffer compressedBuffer = EncryptionUtils.compress(ByteBuffer.wrap(buf), ByteBuffer.allocate(0), true, compressor);\n        ByteBuffer uncompressedBuffer = EncryptionUtils.uncompress(compressedBuffer, ByteBuffer.allocate(0), true, compressor);\n        Assert.assertArrayEquals(buf, uncompressedBuffer.array());\n    }\n","date":"2016-01-19 23:00:32","endLine":62,"groupId":"25137","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"compress","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/be/37f45bd8d3ef420dfbc6972e936d71e9bf3c3a.src","preCode":"    public void compress() throws IOException\n    {\n        byte[] buf = new byte[(1 << 13) - 13];\n        random.nextBytes(buf);\n        ByteBuffer compressedBuffer = EncryptionUtils.compress(ByteBuffer.wrap(buf), ByteBuffer.allocate(0), true, compressor);\n        ByteBuffer uncompressedBuffer = EncryptionUtils.uncompress(compressedBuffer, ByteBuffer.allocate(0), true, compressor);\n        Assert.assertArrayEquals(buf, uncompressedBuffer.array());\n    }\n","realPath":"test/unit/org/apache/cassandra/security/EncryptionUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2015-09-02 00:24:50","commitOrder":1,"curCode":"    public void fullRoundTrip() throws IOException, BadPaddingException, ShortBufferException, IllegalBlockSizeException\n    {\n        \r\n        byte[] buf = new byte[(1 << 12) - 7];\n        random.nextBytes(buf);\n        ByteBuffer compressedBuffer = EncryptionUtils.compress(ByteBuffer.wrap(buf), ByteBuffer.allocate(0), true, compressor);\n\n        \r\n        CipherFactory cipherFactory = new CipherFactory(tdeOptions);\n        Cipher encryptor = cipherFactory.getEncryptor(tdeOptions.cipher, tdeOptions.key_alias);\n        File f = File.createTempFile(\"commitlog-enc-utils-\", \".tmp\");\n        f.deleteOnExit();\n        FileChannel channel = new RandomAccessFile(f, \"rw\").getChannel();\n        EncryptionUtils.encryptAndWrite(compressedBuffer, channel, true, encryptor);\n\n        \r\n        Cipher decryptor = cipherFactory.getDecryptor(tdeOptions.cipher, tdeOptions.key_alias, encryptor.getIV());\n        ByteBuffer decryptedBuffer = EncryptionUtils.decrypt(RandomAccessReader.open(f), ByteBuffer.allocate(0), true, decryptor);\n\n        \r\n        ByteBuffer uncompressedBuffer = EncryptionUtils.uncompress(decryptedBuffer, ByteBuffer.allocate(0), true, compressor);\n        Assert.assertArrayEquals(buf, uncompressedBuffer.array());\n    }\n","date":"2016-01-19 23:00:32","endLine":115,"groupId":"25137","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fullRoundTrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/be/37f45bd8d3ef420dfbc6972e936d71e9bf3c3a.src","preCode":"    public void fullRoundTrip() throws IOException, BadPaddingException, ShortBufferException, IllegalBlockSizeException\n    {\n        \r\n        byte[] buf = new byte[(1 << 12) - 7];\n        random.nextBytes(buf);\n        ByteBuffer compressedBuffer = EncryptionUtils.compress(ByteBuffer.wrap(buf), ByteBuffer.allocate(0), true, compressor);\n\n        \r\n        CipherFactory cipherFactory = new CipherFactory(tdeOptions);\n        Cipher encryptor = cipherFactory.getEncryptor(tdeOptions.cipher, tdeOptions.key_alias);\n        File f = File.createTempFile(\"commitlog-enc-utils-\", \".tmp\");\n        f.deleteOnExit();\n        FileChannel channel = new RandomAccessFile(f, \"rw\").getChannel();\n        EncryptionUtils.encryptAndWrite(compressedBuffer, channel, true, encryptor);\n\n        \r\n        Cipher decryptor = cipherFactory.getDecryptor(tdeOptions.cipher, tdeOptions.key_alias, encryptor.getIV());\n        ByteBuffer decryptedBuffer = EncryptionUtils.decrypt(RandomAccessReader.open(f), ByteBuffer.allocate(0), true, decryptor);\n\n        \r\n        ByteBuffer uncompressedBuffer = EncryptionUtils.uncompress(decryptedBuffer, ByteBuffer.allocate(0), true, compressor);\n        Assert.assertArrayEquals(buf, uncompressedBuffer.array());\n    }\n","realPath":"test/unit/org/apache/cassandra/security/EncryptionUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"}],"commitId":"7374e9b5ab08c1f1e612bf72293ea14c959b0c3c","commitMessage":"@@@Encrypted commit logs\n\npatch by jasobrown; reviewed by blambov for (CASSANDRA-6018)\n","date":"2016-01-19 23:00:32","modifiedFileCount":"16","status":"B","submitter":"Jason Brown"},{"authorTime":"2017-09-13 02:04:30","codes":[{"authorDate":"2015-09-02 00:24:50","commitOrder":2,"curCode":"    public void compress() throws IOException\n    {\n        byte[] buf = new byte[(1 << 13) - 13];\n        random.nextBytes(buf);\n        ByteBuffer compressedBuffer = EncryptionUtils.compress(ByteBuffer.wrap(buf), ByteBuffer.allocate(0), true, compressor);\n        ByteBuffer uncompressedBuffer = EncryptionUtils.uncompress(compressedBuffer, ByteBuffer.allocate(0), true, compressor);\n        Assert.assertArrayEquals(buf, uncompressedBuffer.array());\n    }\n","date":"2016-01-19 23:00:32","endLine":62,"groupId":"101089","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"compress","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/be/37f45bd8d3ef420dfbc6972e936d71e9bf3c3a.src","preCode":"    public void compress() throws IOException\n    {\n        byte[] buf = new byte[(1 << 13) - 13];\n        random.nextBytes(buf);\n        ByteBuffer compressedBuffer = EncryptionUtils.compress(ByteBuffer.wrap(buf), ByteBuffer.allocate(0), true, compressor);\n        ByteBuffer uncompressedBuffer = EncryptionUtils.uncompress(compressedBuffer, ByteBuffer.allocate(0), true, compressor);\n        Assert.assertArrayEquals(buf, uncompressedBuffer.array());\n    }\n","realPath":"test/unit/org/apache/cassandra/security/EncryptionUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2017-09-13 02:04:30","commitOrder":2,"curCode":"    public void fullRoundTrip() throws IOException, BadPaddingException, ShortBufferException, IllegalBlockSizeException\n    {\n        \r\n        byte[] buf = new byte[(1 << 12) - 7];\n        random.nextBytes(buf);\n        ByteBuffer compressedBuffer = EncryptionUtils.compress(ByteBuffer.wrap(buf), ByteBuffer.allocate(0), true, compressor);\n\n        \r\n        CipherFactory cipherFactory = new CipherFactory(tdeOptions);\n        Cipher encryptor = cipherFactory.getEncryptor(tdeOptions.cipher, tdeOptions.key_alias);\n        File f = FileUtils.createTempFile(\"commitlog-enc-utils-\", \".tmp\");\n        f.deleteOnExit();\n        FileChannel channel = new RandomAccessFile(f, \"rw\").getChannel();\n        EncryptionUtils.encryptAndWrite(compressedBuffer, channel, true, encryptor);\n\n        \r\n        Cipher decryptor = cipherFactory.getDecryptor(tdeOptions.cipher, tdeOptions.key_alias, encryptor.getIV());\n        ByteBuffer decryptedBuffer = EncryptionUtils.decrypt(RandomAccessReader.open(f), ByteBuffer.allocate(0), true, decryptor);\n\n        \r\n        ByteBuffer uncompressedBuffer = EncryptionUtils.uncompress(decryptedBuffer, ByteBuffer.allocate(0), true, compressor);\n        Assert.assertArrayEquals(buf, uncompressedBuffer.array());\n    }\n","date":"2018-07-27 00:20:00","endLine":124,"groupId":"101089","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"fullRoundTrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/0f/d46b81787d6c04179504f7d878483595ceb106.src","preCode":"    public void fullRoundTrip() throws IOException, BadPaddingException, ShortBufferException, IllegalBlockSizeException\n    {\n        \r\n        byte[] buf = new byte[(1 << 12) - 7];\n        random.nextBytes(buf);\n        ByteBuffer compressedBuffer = EncryptionUtils.compress(ByteBuffer.wrap(buf), ByteBuffer.allocate(0), true, compressor);\n\n        \r\n        CipherFactory cipherFactory = new CipherFactory(tdeOptions);\n        Cipher encryptor = cipherFactory.getEncryptor(tdeOptions.cipher, tdeOptions.key_alias);\n        File f = File.createTempFile(\"commitlog-enc-utils-\", \".tmp\");\n        f.deleteOnExit();\n        FileChannel channel = new RandomAccessFile(f, \"rw\").getChannel();\n        EncryptionUtils.encryptAndWrite(compressedBuffer, channel, true, encryptor);\n\n        \r\n        Cipher decryptor = cipherFactory.getDecryptor(tdeOptions.cipher, tdeOptions.key_alias, encryptor.getIV());\n        ByteBuffer decryptedBuffer = EncryptionUtils.decrypt(RandomAccessReader.open(f), ByteBuffer.allocate(0), true, decryptor);\n\n        \r\n        ByteBuffer uncompressedBuffer = EncryptionUtils.uncompress(decryptedBuffer, ByteBuffer.allocate(0), true, compressor);\n        Assert.assertArrayEquals(buf, uncompressedBuffer.array());\n    }\n","realPath":"test/unit/org/apache/cassandra/security/EncryptionUtilsTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"6ba2fb9395226491872b41312d978a169f36fcdb","commitMessage":"@@@Make C* compile and run on Java 11 and Java 8\n\npatch by Robert Stupp; reviewed by Jason Brown for CASSANDRA-9608\n","date":"2018-07-27 00:20:00","modifiedFileCount":"79","status":"M","submitter":"Robert Stupp"}]
