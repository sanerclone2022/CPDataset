[{"authorTime":"2015-06-25 00:50:26","codes":[{"authorDate":"2015-05-26 23:19:23","commitOrder":3,"curCode":"        public void run() {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop) {\n                if (rl != null)\n                    rl.acquire();\n                String ks = \"Keyspace1\";\n                ByteBuffer key = randomBytes(16, rand);\n                Mutation mutation = new Mutation(ks, key);\n\n                for (int ii = 0; ii < numCells; ii++) {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    mutation.add(\"Standard1\", Util.cellname(\"name\" + ii), bytes,\n                            System.currentTimeMillis());\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n                rp = commitLog.add(mutation);\n                counter.incrementAndGet();\n            }\n        }\n","date":"2015-05-26 23:19:23","endLine":363,"groupId":"25598","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/7f/9df9e09e5d41389d5a9996f3dd0d2d89b5d76e.src","preCode":"        public void run() {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop) {\n                if (rl != null)\n                    rl.acquire();\n                String ks = \"Keyspace1\";\n                ByteBuffer key = randomBytes(16, rand);\n                Mutation mutation = new Mutation(ks, key);\n\n                for (int ii = 0; ii < numCells; ii++) {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    mutation.add(\"Standard1\", Util.cellname(\"name\" + ii), bytes,\n                            System.currentTimeMillis());\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n                rp = commitLog.add(mutation);\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/long/org/apache/cassandra/db/commitlog/CommitLogStressTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"NB"},{"authorDate":"2015-06-25 00:50:26","commitOrder":3,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                String ks = KEYSPACE;\n                ByteBuffer key = randomBytes(16, tlr);\n                Mutation mutation = new Mutation(ks, key);\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    mutation.add(TABLE, Util.cellname(CELLNAME + ii), bytes, System.currentTimeMillis());\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n                rp = commitLog.add(mutation);\n                counter.incrementAndGet();\n            }\n        }\n","date":"2015-06-25 00:50:26","endLine":248,"groupId":"26857","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/7b/07c8e3ee55ab346b1c756fdc12ed610a2527ec.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                String ks = KEYSPACE;\n                ByteBuffer key = randomBytes(16, tlr);\n                Mutation mutation = new Mutation(ks, key);\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    mutation.add(TABLE, Util.cellname(CELLNAME + ii), bytes, System.currentTimeMillis());\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n                rp = commitLog.add(mutation);\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogUpgradeTestMaker.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"B"}],"commitId":"3f0dd5dff8118d1512dd3dec71dee5d3ac188599","commitMessage":"@@@Merge branch 'cassandra-2.2' into trunk\n\nConflicts:\n\ttest/long/org/apache/cassandra/db/commitlog/CommitLogStressTest.java\n","date":"2015-06-25 00:50:26","modifiedFileCount":"2","status":"M","submitter":"Josh McKenzie"},{"authorTime":"2014-09-02 00:54:46","codes":[{"authorDate":"2014-09-02 00:54:46","commitOrder":4,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","date":"2015-06-30 18:47:01","endLine":445,"groupId":"21176","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/9b/4dde7bc7fd15f24fa340a2bec4559a0005f022.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                String ks = \"Keyspace1\";\n                ByteBuffer key = randomBytes(16, rand);\n                Mutation mutation = new Mutation(ks, key);\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    mutation.add(\"Standard1\", Util.cellname(\"name\" + ii), bytes, System.currentTimeMillis());\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n                rp = commitLog.add(mutation);\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/long/org/apache/cassandra/db/commitlog/CommitLogStressTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":421,"status":"M"},{"authorDate":"2014-09-02 00:54:46","commitOrder":4,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                String ks = KEYSPACE;\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","date":"2015-06-30 18:47:01","endLine":251,"groupId":"9105","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/cb/ae7e3586365f9b8fa90eece1ea34003295e4fe.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                String ks = KEYSPACE;\n                ByteBuffer key = randomBytes(16, tlr);\n                Mutation mutation = new Mutation(ks, key);\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    mutation.add(TABLE, Util.cellname(CELLNAME + ii), bytes, System.currentTimeMillis());\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n                rp = commitLog.add(mutation);\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogUpgradeTestMaker.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"M"}],"commitId":"a991b64811f4d6adb6c7b31c0df52288eb06cf19","commitMessage":"@@@Storage engine refactor.  a.k.a CASSANDRA-8099\n\nInitial patch.  see ticket for details\n","date":"2015-06-30 18:47:01","modifiedFileCount":"374","status":"M","submitter":"Sylvain Lebresne"},{"authorTime":"2015-07-29 23:56:14","codes":[{"authorDate":"2014-09-02 00:54:46","commitOrder":5,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","date":"2015-06-30 18:47:01","endLine":445,"groupId":"21176","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/9b/4dde7bc7fd15f24fa340a2bec4559a0005f022.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/long/org/apache/cassandra/db/commitlog/CommitLogStressTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":421,"status":"N"},{"authorDate":"2015-07-29 23:56:14","commitOrder":5,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                String ks = KEYSPACE;\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(CommitLogUpgradeTest.CELLNAME + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","date":"2015-07-30 01:23:41","endLine":251,"groupId":"9105","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/db/db7fcadc14cc0093200a3315ed6a8036f24c42.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                String ks = KEYSPACE;\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogUpgradeTestMaker.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"M"}],"commitId":"fb34b7950483abc5a15c09e802852183699c0ecb","commitMessage":"@@@Fix CommitLogUpgradeTest\n\nfilter hashed/counted rows to only the ones containing the required data.\n\npatch by Branimir Lambov; reviewed by Aleksey Yeschenko for\nCASSANDRA-9790\n","date":"2015-07-30 01:23:41","modifiedFileCount":"2","status":"M","submitter":"Branimir Lambov"},{"authorTime":"2015-09-02 00:24:50","codes":[{"authorDate":"2014-09-02 00:54:46","commitOrder":6,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","date":"2015-06-30 18:47:01","endLine":445,"groupId":"21176","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/9b/4dde7bc7fd15f24fa340a2bec4559a0005f022.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/long/org/apache/cassandra/db/commitlog/CommitLogStressTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":421,"status":"N"},{"authorDate":"2015-09-02 00:24:50","commitOrder":6,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(CommitLogUpgradeTest.CELLNAME + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","date":"2016-01-19 23:00:32","endLine":254,"groupId":"9105","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/69/764e69496c1603c922b69b8a62ef6478907648.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                String ks = KEYSPACE;\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(CommitLogUpgradeTest.CELLNAME + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogUpgradeTestMaker.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"}],"commitId":"7374e9b5ab08c1f1e612bf72293ea14c959b0c3c","commitMessage":"@@@Encrypted commit logs\n\npatch by jasobrown; reviewed by blambov for (CASSANDRA-6018)\n","date":"2016-01-19 23:00:32","modifiedFileCount":"16","status":"M","submitter":"Jason Brown"},{"authorTime":"2016-03-27 21:20:47","codes":[{"authorDate":"2016-03-27 21:20:47","commitOrder":7,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                Keyspace ks = Keyspace.open(\"Keyspace1\");\n                clsp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","date":"2016-06-16 22:01:39","endLine":448,"groupId":"21176","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/04/682fdc004fa2855b1126dfd2bdee656a5a397b.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/long/org/apache/cassandra/db/commitlog/CommitLogStressTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":423,"status":"M"},{"authorDate":"2016-03-27 21:20:47","commitOrder":7,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(CommitLogUpgradeTest.CELLNAME + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                clsp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","date":"2016-06-16 22:01:39","endLine":254,"groupId":"9105","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5a/03f9ff3a96575afdad3be7b476a6d1faded350.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(CommitLogUpgradeTest.CELLNAME + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                rp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogUpgradeTestMaker.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"}],"commitId":"e31e216234c6b57a531cae607e0355666007deb2","commitMessage":"@@@Add Change Data Capture\n\nPatch by jmckenzie; reviewed by cyeksigian and blambov for CASSANDRA-8844\n","date":"2016-06-16 22:01:39","modifiedFileCount":"51","status":"M","submitter":"Josh McKenzie"},{"authorTime":"2016-03-27 21:20:47","codes":[{"authorDate":"2016-06-24 00:33:13","commitOrder":8,"curCode":"        public void run()\n        {\n            Thread.currentThread().setName(\"CommitLogThread-\" + threadID.getAndIncrement());\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                clsp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","date":"2016-06-25 00:58:08","endLine":452,"groupId":"21176","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/06/c252f34a939819fc5de7ceed39dbc75ec30a2d.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                Keyspace ks = Keyspace.open(\"Keyspace1\");\n                clsp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/long/org/apache/cassandra/db/commitlog/CommitLogStressTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"M"},{"authorDate":"2016-03-27 21:20:47","commitOrder":8,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(CommitLogUpgradeTest.CELLNAME + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                clsp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","date":"2016-06-16 22:01:39","endLine":254,"groupId":"9105","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/5a/03f9ff3a96575afdad3be7b476a6d1faded350.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(CommitLogUpgradeTest.CELLNAME + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                clsp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogUpgradeTestMaker.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"N"}],"commitId":"a13add64fe586ba16041db71f0a200a52da924be","commitMessage":"@@@Fix CommitLogStressTest\n\nPatch by jmckenzie; reviewed by blambov for 12082\n","date":"2016-06-25 00:58:08","modifiedFileCount":"4","status":"M","submitter":"Josh McKenzie"},{"authorTime":"2016-11-10 09:16:59","codes":[{"authorDate":"2016-11-10 09:16:59","commitOrder":9,"curCode":"        public void run()\n        {\n            Thread.currentThread().setName(\"CommitLogThread-\" + threadID.getAndIncrement());\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getTableMetadata(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                clsp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","date":"2017-01-28 06:17:46","endLine":462,"groupId":"1066","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/eb/1be8b9610d703bef535cdde60fdaf2f2916246.src","preCode":"        public void run()\n        {\n            Thread.currentThread().setName(\"CommitLogThread-\" + threadID.getAndIncrement());\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final Random rand = random != null ? random : ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, rand);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(\"Keyspace1\", \"Standard1\"), Util.dk(key));\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? rand.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, rand);\n                    builder.newRow(\"name\" + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                clsp = commitLog.add(new Mutation(builder.build()));\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/long/org/apache/cassandra/db/commitlog/CommitLogStressTest.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"M"},{"authorDate":"2016-11-10 09:16:59","commitOrder":9,"curCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getTableMetadata(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(CommitLogUpgradeTest.CELLNAME + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                clsp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","date":"2017-01-28 06:17:46","endLine":252,"groupId":"1066","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cassandra-10-0.7/blobInfo/CC_OUT/blobs/d2/ad42ffeff29aa0841d955cbe453682931fa1de.src","preCode":"        public void run()\n        {\n            RateLimiter rl = rateLimit != 0 ? RateLimiter.create(rateLimit) : null;\n            final ThreadLocalRandom tlr = ThreadLocalRandom.current();\n            while (!stop)\n            {\n                if (rl != null)\n                    rl.acquire();\n                ByteBuffer key = randomBytes(16, tlr);\n\n                UpdateBuilder builder = UpdateBuilder.create(Schema.instance.getCFMetaData(KEYSPACE, TABLE), Util.dk(key));\n\n                for (int ii = 0; ii < numCells; ii++)\n                {\n                    int sz = randomSize ? tlr.nextInt(cellSize) : cellSize;\n                    ByteBuffer bytes = randomBytes(sz, tlr);\n                    builder.newRow(CommitLogUpgradeTest.CELLNAME + ii).add(\"val\", bytes);\n                    hash = hash(hash, bytes);\n                    ++cells;\n                    dataSize += sz;\n                }\n\n                clsp = commitLog.add((Mutation)builder.makeMutation());\n                counter.incrementAndGet();\n            }\n        }\n","realPath":"test/unit/org/apache/cassandra/db/commitlog/CommitLogUpgradeTestMaker.java","repoName":"cassandra","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"}],"commitId":"af3fe39dcabd9ef77a00309ce6741268423206df","commitMessage":"@@@Make TableMetadata immutable.  optimize Schema\n\npatch by Aleksey Yeschenko; reviewed by Sylvain Lebresne for\nCASSANDRA-9425\n","date":"2017-01-28 06:17:46","modifiedFileCount":"511","status":"M","submitter":"Aleksey Yeschenko"}]
