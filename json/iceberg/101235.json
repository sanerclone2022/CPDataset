[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testInvalidFloatConversions() {\n    testInvalidConversions(Literal.of(34.11F),\n        Types.BooleanType.get(),\n        Types.IntegerType.get(),\n        Types.LongType.get(),\n        Types.DateType.get(),\n        Types.TimeType.get(),\n        Types.TimestampType.withZone(),\n        Types.TimestampType.withoutZone(),\n        Types.StringType.get(),\n        Types.UUIDType.get(),\n        Types.FixedType.ofLength(1),\n        Types.BinaryType.get()\n    );\n  }\n","date":"2019-03-21 07:25:05","endLine":147,"groupId":"1411","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidFloatConversions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/25/c1c16ef98d4e2ce1a5d727289cdcece0917d6f.src","preCode":"  public void testInvalidFloatConversions() {\n    testInvalidConversions(Literal.of(34.11F),\n        Types.BooleanType.get(),\n        Types.IntegerType.get(),\n        Types.LongType.get(),\n        Types.DateType.get(),\n        Types.TimeType.get(),\n        Types.TimestampType.withZone(),\n        Types.TimestampType.withoutZone(),\n        Types.StringType.get(),\n        Types.UUIDType.get(),\n        Types.FixedType.ofLength(1),\n        Types.BinaryType.get()\n    );\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestMiscLiteralConversions.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testInvalidDecimalConversions() {\n    testInvalidConversions(Literal.of(new BigDecimal(\"34.11\")),\n        Types.BooleanType.get(),\n        Types.IntegerType.get(),\n        Types.LongType.get(),\n        Types.FloatType.get(),\n        Types.DoubleType.get(),\n        Types.DateType.get(),\n        Types.TimeType.get(),\n        Types.TimestampType.withZone(),\n        Types.TimestampType.withoutZone(),\n        Types.DecimalType.of(9, 4),\n        Types.StringType.get(),\n        Types.UUIDType.get(),\n        Types.FixedType.ofLength(1),\n        Types.BinaryType.get()\n    );\n  }\n","date":"2019-03-21 07:25:05","endLine":241,"groupId":"1411","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidDecimalConversions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/25/c1c16ef98d4e2ce1a5d727289cdcece0917d6f.src","preCode":"  public void testInvalidDecimalConversions() {\n    testInvalidConversions(Literal.of(new BigDecimal(\"34.11\")),\n        Types.BooleanType.get(),\n        Types.IntegerType.get(),\n        Types.LongType.get(),\n        Types.FloatType.get(),\n        Types.DoubleType.get(),\n        Types.DateType.get(),\n        Types.TimeType.get(),\n        Types.TimestampType.withZone(),\n        Types.TimestampType.withoutZone(),\n        Types.DecimalType.of(9, 4),\n        Types.StringType.get(),\n        Types.UUIDType.get(),\n        Types.FixedType.ofLength(1),\n        Types.BinaryType.get()\n    );\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestMiscLiteralConversions.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2020-11-17 04:43:33","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  public void testInvalidFloatConversions() {\n    testInvalidConversions(Literal.of(34.11F),\n        Types.BooleanType.get(),\n        Types.IntegerType.get(),\n        Types.LongType.get(),\n        Types.DateType.get(),\n        Types.TimeType.get(),\n        Types.TimestampType.withZone(),\n        Types.TimestampType.withoutZone(),\n        Types.StringType.get(),\n        Types.UUIDType.get(),\n        Types.FixedType.ofLength(1),\n        Types.BinaryType.get()\n    );\n  }\n","date":"2019-03-21 07:25:05","endLine":147,"groupId":"101235","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidFloatConversions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/25/c1c16ef98d4e2ce1a5d727289cdcece0917d6f.src","preCode":"  public void testInvalidFloatConversions() {\n    testInvalidConversions(Literal.of(34.11F),\n        Types.BooleanType.get(),\n        Types.IntegerType.get(),\n        Types.LongType.get(),\n        Types.DateType.get(),\n        Types.TimeType.get(),\n        Types.TimestampType.withZone(),\n        Types.TimestampType.withoutZone(),\n        Types.StringType.get(),\n        Types.UUIDType.get(),\n        Types.FixedType.ofLength(1),\n        Types.BinaryType.get()\n    );\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestMiscLiteralConversions.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"N"},{"authorDate":"2020-11-17 04:43:33","commitOrder":2,"curCode":"  public void testInvalidDecimalConversions() {\n    testInvalidConversions(Literal.of(new BigDecimal(\"34.11\")),\n        Types.BooleanType.get(),\n        Types.IntegerType.get(),\n        Types.LongType.get(),\n        Types.FloatType.get(),\n        Types.DoubleType.get(),\n        Types.DateType.get(),\n        Types.TimeType.get(),\n        Types.TimestampType.withZone(),\n        Types.TimestampType.withoutZone(),\n        Types.StringType.get(),\n        Types.UUIDType.get(),\n        Types.FixedType.ofLength(1),\n        Types.BinaryType.get()\n    );\n  }\n","date":"2020-11-17 04:43:33","endLine":239,"groupId":"101235","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testInvalidDecimalConversions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5a/b91443797691d19ec8e138ac7345d6a51baad5.src","preCode":"  public void testInvalidDecimalConversions() {\n    testInvalidConversions(Literal.of(new BigDecimal(\"34.11\")),\n        Types.BooleanType.get(),\n        Types.IntegerType.get(),\n        Types.LongType.get(),\n        Types.FloatType.get(),\n        Types.DoubleType.get(),\n        Types.DateType.get(),\n        Types.TimeType.get(),\n        Types.TimestampType.withZone(),\n        Types.TimestampType.withoutZone(),\n        Types.DecimalType.of(9, 4),\n        Types.StringType.get(),\n        Types.UUIDType.get(),\n        Types.FixedType.ofLength(1),\n        Types.BinaryType.get()\n    );\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestMiscLiteralConversions.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"}],"commitId":"57475083dc5220d01aa915356a3024251afb6772","commitMessage":"@@@Core: Fix decimal scale issue in predicate literals (#1742)\n\nCo-authored-by: Marton Bod <mbod@cloudera.com>","date":"2020-11-17 04:43:33","modifiedFileCount":"5","status":"M","submitter":"Marton Bod"}]
