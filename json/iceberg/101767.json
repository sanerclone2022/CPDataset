[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-10-01 07:03:10","commitOrder":2,"curCode":"  public void testPartitionAppend() throws IOException {\n    Schema dateSchema = new Schema(\n        required(1, \"id\", Types.LongType.get()),\n        optional(2, \"timestamp\", Types.TimestampType.withoutZone())\n    );\n\n    PartitionSpec partitionSpec = PartitionSpec\n        .builderFor(dateSchema)\n        .day(\"timestamp\", \"date\")\n        .build();\n\n    DataFile dataFile = DataFiles.builder(partitionSpec)\n        .withPath(\"/path/to/data-1.parquet\")\n        .withFileSizeInBytes(0)\n        .withRecordCount(0)\n        .withPartitionPath(\"date=2018-06-08\")\n        .build();\n\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, \"test_date_partition\", dateSchema, partitionSpec);\n\n    table.newAppend()\n        .appendFile(dataFile)\n        .commit();\n    long id = table.currentSnapshot().snapshotId();\n    Assert.assertEquals(table.currentSnapshot().manifests().size(), 1);\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(id),\n        files(dataFile),\n        statuses(ManifestEntry.Status.ADDED));\n  }\n","date":"2019-10-01 07:03:10","endLine":66,"groupId":"3521","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPartitionAppend","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/fa/6c98f5491c7ee29cb119a474767102c31fb667.src","preCode":"  public void testPartitionAppend() throws IOException {\n    Schema dateSchema = new Schema(\n        required(1, \"id\", Types.LongType.get()),\n        optional(2, \"timestamp\", Types.TimestampType.withoutZone())\n    );\n\n    PartitionSpec partitionSpec = PartitionSpec\n        .builderFor(dateSchema)\n        .day(\"timestamp\", \"date\")\n        .build();\n\n    DataFile dataFile = DataFiles.builder(partitionSpec)\n        .withPath(\"/path/to/data-1.parquet\")\n        .withFileSizeInBytes(0)\n        .withRecordCount(0)\n        .withPartitionPath(\"date=2018-06-08\")\n        .build();\n\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, \"test_date_partition\", dateSchema, partitionSpec);\n\n    table.newAppend()\n        .appendFile(dataFile)\n        .commit();\n    long id = table.currentSnapshot().snapshotId();\n    Assert.assertEquals(table.currentSnapshot().manifests().size(), 1);\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(id),\n        files(dataFile),\n        statuses(ManifestEntry.Status.ADDED));\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTimestampPartitions.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  public void createTestTable() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, TABLE_NAME, DATE_SCHEMA, PARTITION_BY_DATE);\n\n    table.newAppend()\n        .appendFile(FILE_0_TO_4)\n        .appendFile(FILE_5_TO_9)\n        .commit();\n  }\n","date":"2019-03-21 07:25:05","endLine":109,"groupId":"1195","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createTestTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ff/2f1e1dd97333143e1c8b7b45e4048326f28091.src","preCode":"  public void createTestTable() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, TABLE_NAME, DATE_SCHEMA, PARTITION_BY_DATE);\n\n    table.newAppend()\n        .appendFile(FILE_0_TO_4)\n        .appendFile(FILE_5_TO_9)\n        .commit();\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestOverwrite.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"NB"}],"commitId":"770f84325f2810bae3b48a6e1983d6a8135cb7bf","commitMessage":"@@@Support date format in Conversions.fromPartitionString (#506)\n\n","date":"2019-10-01 07:03:10","modifiedFileCount":"1","status":"M","submitter":"Gautam"},{"authorTime":"2020-04-22 03:50:32","codes":[{"authorDate":"2020-04-22 03:50:32","commitOrder":3,"curCode":"  public void testPartitionAppend() throws IOException {\n    Schema dateSchema = new Schema(\n        required(1, \"id\", Types.LongType.get()),\n        optional(2, \"timestamp\", Types.TimestampType.withoutZone())\n    );\n\n    PartitionSpec partitionSpec = PartitionSpec\n        .builderFor(dateSchema)\n        .day(\"timestamp\", \"date\")\n        .build();\n\n    DataFile dataFile = DataFiles.builder(partitionSpec)\n        .withPath(\"/path/to/data-1.parquet\")\n        .withFileSizeInBytes(0)\n        .withRecordCount(0)\n        .withPartitionPath(\"date=2018-06-08\")\n        .build();\n\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, \"test_date_partition\", dateSchema, partitionSpec, formatVersion);\n\n    table.newAppend()\n        .appendFile(dataFile)\n        .commit();\n    long id = table.currentSnapshot().snapshotId();\n    Assert.assertEquals(table.currentSnapshot().manifests().size(), 1);\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(id),\n        files(dataFile),\n        statuses(ManifestEntry.Status.ADDED));\n  }\n","date":"2020-04-22 03:50:32","endLine":80,"groupId":"3521","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPartitionAppend","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/23/43b7cdd8db014da60452e3f40542c7ccabca25.src","preCode":"  public void testPartitionAppend() throws IOException {\n    Schema dateSchema = new Schema(\n        required(1, \"id\", Types.LongType.get()),\n        optional(2, \"timestamp\", Types.TimestampType.withoutZone())\n    );\n\n    PartitionSpec partitionSpec = PartitionSpec\n        .builderFor(dateSchema)\n        .day(\"timestamp\", \"date\")\n        .build();\n\n    DataFile dataFile = DataFiles.builder(partitionSpec)\n        .withPath(\"/path/to/data-1.parquet\")\n        .withFileSizeInBytes(0)\n        .withRecordCount(0)\n        .withPartitionPath(\"date=2018-06-08\")\n        .build();\n\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, \"test_date_partition\", dateSchema, partitionSpec);\n\n    table.newAppend()\n        .appendFile(dataFile)\n        .commit();\n    long id = table.currentSnapshot().snapshotId();\n    Assert.assertEquals(table.currentSnapshot().manifests().size(), 1);\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(id),\n        files(dataFile),\n        statuses(ManifestEntry.Status.ADDED));\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTimestampPartitions.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2020-04-22 03:50:32","commitOrder":3,"curCode":"  public void createTestTable() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, TABLE_NAME, DATE_SCHEMA, PARTITION_BY_DATE, formatVersion);\n\n    table.newAppend()\n        .appendFile(FILE_0_TO_4)\n        .appendFile(FILE_5_TO_9)\n        .commit();\n  }\n","date":"2020-04-22 03:50:32","endLine":124,"groupId":"1195","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createTestTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/dc/a9875ff3eabc1b96477ec32f687d0c4cf2f991.src","preCode":"  public void createTestTable() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, TABLE_NAME, DATE_SCHEMA, PARTITION_BY_DATE);\n\n    table.newAppend()\n        .appendFile(FILE_0_TO_4)\n        .appendFile(FILE_5_TO_9)\n        .commit();\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestOverwrite.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"a81d11e78fb447f68b2a3e8f98cf02b0c57c7f58","commitMessage":"@@@Update TableTestBase tests to run with formats v1 and v2 (#936)\n\n","date":"2020-04-22 03:50:32","modifiedFileCount":"37","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-04-22 03:50:32","codes":[{"authorDate":"2020-06-03 03:43:03","commitOrder":4,"curCode":"  public void testPartitionAppend() throws IOException {\n    Schema dateSchema = new Schema(\n        required(1, \"id\", Types.LongType.get()),\n        optional(2, \"timestamp\", Types.TimestampType.withoutZone())\n    );\n\n    PartitionSpec partitionSpec = PartitionSpec\n        .builderFor(dateSchema)\n        .day(\"timestamp\", \"date\")\n        .build();\n\n    DataFile dataFile = DataFiles.builder(partitionSpec)\n        .withPath(\"/path/to/data-1.parquet\")\n        .withFileSizeInBytes(0)\n        .withRecordCount(0)\n        .withPartitionPath(\"date=2018-06-08\")\n        .build();\n\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, \"test_date_partition\", dateSchema, partitionSpec, formatVersion);\n\n    table.newAppend()\n        .appendFile(dataFile)\n        .commit();\n    long id = table.currentSnapshot().snapshotId();\n    Assert.assertEquals(table.currentSnapshot().allManifests().size(), 1);\n    validateManifestEntries(table.currentSnapshot().allManifests().get(0),\n        ids(id),\n        files(dataFile),\n        statuses(ManifestEntry.Status.ADDED));\n  }\n","date":"2020-06-03 03:43:03","endLine":80,"groupId":"101767","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPartitionAppend","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c7/193750768821d197491860e3c03e70d24d6e7a.src","preCode":"  public void testPartitionAppend() throws IOException {\n    Schema dateSchema = new Schema(\n        required(1, \"id\", Types.LongType.get()),\n        optional(2, \"timestamp\", Types.TimestampType.withoutZone())\n    );\n\n    PartitionSpec partitionSpec = PartitionSpec\n        .builderFor(dateSchema)\n        .day(\"timestamp\", \"date\")\n        .build();\n\n    DataFile dataFile = DataFiles.builder(partitionSpec)\n        .withPath(\"/path/to/data-1.parquet\")\n        .withFileSizeInBytes(0)\n        .withRecordCount(0)\n        .withPartitionPath(\"date=2018-06-08\")\n        .build();\n\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, \"test_date_partition\", dateSchema, partitionSpec, formatVersion);\n\n    table.newAppend()\n        .appendFile(dataFile)\n        .commit();\n    long id = table.currentSnapshot().snapshotId();\n    Assert.assertEquals(table.currentSnapshot().manifests().size(), 1);\n    validateManifestEntries(table.currentSnapshot().manifests().get(0),\n        ids(id),\n        files(dataFile),\n        statuses(ManifestEntry.Status.ADDED));\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestTimestampPartitions.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2020-04-22 03:50:32","commitOrder":4,"curCode":"  public void createTestTable() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, TABLE_NAME, DATE_SCHEMA, PARTITION_BY_DATE, formatVersion);\n\n    table.newAppend()\n        .appendFile(FILE_0_TO_4)\n        .appendFile(FILE_5_TO_9)\n        .commit();\n  }\n","date":"2020-04-22 03:50:32","endLine":124,"groupId":"101767","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createTestTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/dc/a9875ff3eabc1b96477ec32f687d0c4cf2f991.src","preCode":"  public void createTestTable() throws IOException {\n    File tableDir = temp.newFolder();\n    Assert.assertTrue(tableDir.delete());\n\n    this.table = TestTables.create(tableDir, TABLE_NAME, DATE_SCHEMA, PARTITION_BY_DATE, formatVersion);\n\n    table.newAppend()\n        .appendFile(FILE_0_TO_4)\n        .appendFile(FILE_5_TO_9)\n        .commit();\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestOverwrite.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"}],"commitId":"482f420141486f5b7b02bd62dc14cdb94b9a9cca","commitMessage":"@@@Split Snapshot.manifests into dataManifests and deleteManifests (#1080)\n\nThis replaces all calls to Snapshot.manifests with calls to one of 3 new methods:\n\n* `Snapshot.allManifests` returns both delete and data manifests\n* `Snapshot.deleteManifests` returns only delete manifests\n* `Snapshot.dataManifests` returns only data manifests\n\nExisting references mostly use either `allManifests` or `dataManifests`.  depending on the context. For example.  tests with assertions for the number of manifests use `allManifests` because the test cases should validate there are no new delete manifests.  but other tests that validate rewritten manifests are deleted use `dataManifests` because only data manifests are rewritten and deleted.\n\nThis tries to make minimal changes that preserve the current behavior. Operations are not updated to support delete manifests (rewrite still only rewrites data manifests).  but will carry through the list of delete manifests correctly.","date":"2020-06-03 03:43:03","modifiedFileCount":"46","status":"M","submitter":"Ryan Blue"}]
