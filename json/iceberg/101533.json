[{"authorTime":"2019-11-21 01:58:39","codes":[{"authorDate":"2019-11-21 01:58:39","commitOrder":1,"curCode":"  public UnboundPredicate<Integer> projectStrict(String fieldName, BoundPredicate<Long> pred) {\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateLongStrict(fieldName, pred.asLiteralPredicate(), this);\n    }\n    return null;\n  }\n","date":"2019-11-21 01:58:39","endLine":92,"groupId":"893","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"projectStrict","params":"(StringfieldName@BoundPredicate<Long>pred)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/11/a8db2434060d220a0d7ba0ee4c723fde3a54c6.src","preCode":"  public UnboundPredicate<Integer> projectStrict(String fieldName, BoundPredicate<Long> pred) {\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateLongStrict(fieldName, pred.asLiteralPredicate(), this);\n    }\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Timestamps.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2019-11-21 01:58:39","commitOrder":1,"curCode":"  public UnboundPredicate<Integer> project(String fieldName, BoundPredicate<Integer> pred) {\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateInteger(fieldName, pred.asLiteralPredicate(), this);\n    }\n    return null;\n  }\n","date":"2019-11-21 01:58:39","endLine":80,"groupId":"893","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"project","params":"(StringfieldName@BoundPredicate<Integer>pred)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/3b/1c2ec6a16ec1383b263d6cd353a8fd93efca6b.src","preCode":"  public UnboundPredicate<Integer> project(String fieldName, BoundPredicate<Integer> pred) {\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateInteger(fieldName, pred.asLiteralPredicate(), this);\n    }\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Dates.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"94fdc7321407c22b143b9eab83d29179d12d1a6d","commitMessage":"@@@Refactor in and notIn expressions (#650)\n\n* Make BoundSetPredicate extend BoundPredicate\n* Remove visitor method for BoundSetPredicate\n* Add BoundUnaryPredicate\n* Add BoundPredicate subclass test and cast methods\n* Replace LiteralSet and CharSeqLiteralSet with CharSequenceSet\n* Implement all Set methods in CharSequenceSet","date":"2019-11-21 01:58:39","modifiedFileCount":"19","status":"B","submitter":"Ryan Blue"},{"authorTime":"2019-12-19 01:58:30","codes":[{"authorDate":"2019-12-19 01:58:30","commitOrder":2,"curCode":"  public UnboundPredicate<Integer> projectStrict(String fieldName, BoundPredicate<Long> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateLongStrict(fieldName, pred.asLiteralPredicate(), this);\n    }\n    return null;\n  }\n","date":"2019-12-19 01:58:30","endLine":101,"groupId":"893","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"projectStrict","params":"(StringfieldName@BoundPredicate<Long>pred)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/59/6306b8bbbad48f3b25374a168a85fb1727b3bb.src","preCode":"  public UnboundPredicate<Integer> projectStrict(String fieldName, BoundPredicate<Long> pred) {\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateLongStrict(fieldName, pred.asLiteralPredicate(), this);\n    }\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Timestamps.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2019-12-19 01:58:30","commitOrder":2,"curCode":"  public UnboundPredicate<Integer> project(String fieldName, BoundPredicate<Integer> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateInteger(fieldName, pred.asLiteralPredicate(), this);\n    }\n    return null;\n  }\n","date":"2019-12-19 01:58:30","endLine":85,"groupId":"893","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"project","params":"(StringfieldName@BoundPredicate<Integer>pred)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/80/d3257c42a59c1a0ee71c666ef4e1cb36199686.src","preCode":"  public UnboundPredicate<Integer> project(String fieldName, BoundPredicate<Integer> pred) {\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateInteger(fieldName, pred.asLiteralPredicate(), this);\n    }\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Dates.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"686fcb752dd5a7204094266cd3c4363431dddb43","commitMessage":"@@@Add transform expressions (#686)\n\n* Add transform expressions.\n\n* Fix checkstyle violations.\n\n* Rename ValueExpression to Term and clean up class hierarchy.\n\n* Restore BoundExpressionVisitor to avoid compatibility problems.\n\n* Fix documentation typo.\n\n* Add missing BoundTransform.toString method.\n\n* Revert unnecessary change to TestExpressionSerialization.\n\n* Rename child to term.\n","date":"2019-12-19 01:58:30","modifiedFileCount":"23","status":"M","submitter":"Ryan Blue"},{"authorTime":"2019-12-28 05:09:55","codes":[{"authorDate":"2019-12-28 05:09:55","commitOrder":3,"curCode":"  public UnboundPredicate<Integer> projectStrict(String fieldName, BoundPredicate<Long> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateLongStrict(fieldName, pred.asLiteralPredicate(), this);\n    } else if (pred.isSetPredicate() && pred.op() == Expression.Operation.NOT_IN) {\n      return ProjectionUtil.transformSet(fieldName, pred.asSetPredicate(), this);\n    }\n    return null;\n  }\n","date":"2019-12-28 05:09:55","endLine":106,"groupId":"893","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"projectStrict","params":"(StringfieldName@BoundPredicate<Long>pred)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/97/086211da8387189f4971083186d66f925648ce.src","preCode":"  public UnboundPredicate<Integer> projectStrict(String fieldName, BoundPredicate<Long> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateLongStrict(fieldName, pred.asLiteralPredicate(), this);\n    }\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Timestamps.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2019-12-28 05:09:55","commitOrder":3,"curCode":"  public UnboundPredicate<Integer> project(String fieldName, BoundPredicate<Integer> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateInteger(fieldName, pred.asLiteralPredicate(), this);\n    } else if (pred.isSetPredicate() && pred.op() == Expression.Operation.IN) {\n      return ProjectionUtil.transformSet(fieldName, pred.asSetPredicate(), this);\n    }\n    return null;\n  }\n","date":"2019-12-28 05:09:55","endLine":88,"groupId":"893","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"project","params":"(StringfieldName@BoundPredicate<Integer>pred)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d1/a1583f6f3677b8722b916faa35e649a9e548be.src","preCode":"  public UnboundPredicate<Integer> project(String fieldName, BoundPredicate<Integer> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateInteger(fieldName, pred.asLiteralPredicate(), this);\n    }\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Dates.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"79e88c64613219b7ed249d13d11bc1fca8e55178","commitMessage":"@@@Update project and projectStrict for set predicates (#628)\n\n","date":"2019-12-28 05:09:55","modifiedFileCount":"8","status":"M","submitter":"jun-he"},{"authorTime":"2021-01-07 08:58:28","codes":[{"authorDate":"2021-01-07 08:58:28","commitOrder":4,"curCode":"  public UnboundPredicate<Integer> projectStrict(String fieldName, BoundPredicate<Long> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, fieldName, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateLongStrict(fieldName, pred.asLiteralPredicate(), this);\n    } else if (pred.isSetPredicate() && pred.op() == Expression.Operation.NOT_IN) {\n      return ProjectionUtil.transformSet(fieldName, pred.asSetPredicate(), this);\n    }\n    return null;\n  }\n","date":"2021-01-07 08:58:28","endLine":126,"groupId":"893","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"projectStrict","params":"(StringfieldName@BoundPredicate<Long>pred)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/80/b08ed87246fab2da499580d06a167a675e89b0.src","preCode":"  public UnboundPredicate<Integer> projectStrict(String fieldName, BoundPredicate<Long> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateLongStrict(fieldName, pred.asLiteralPredicate(), this);\n    } else if (pred.isSetPredicate() && pred.op() == Expression.Operation.NOT_IN) {\n      return ProjectionUtil.transformSet(fieldName, pred.asSetPredicate(), this);\n    }\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Timestamps.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2021-01-07 08:58:28","commitOrder":4,"curCode":"  public UnboundPredicate<Integer> project(String fieldName, BoundPredicate<Integer> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, fieldName, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateInteger(fieldName, pred.asLiteralPredicate(), this);\n    } else if (pred.isSetPredicate() && pred.op() == Expression.Operation.IN) {\n      return ProjectionUtil.transformSet(fieldName, pred.asSetPredicate(), this);\n    }\n    return null;\n  }\n","date":"2021-01-07 08:58:28","endLine":108,"groupId":"893","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"project","params":"(StringfieldName@BoundPredicate<Integer>pred)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ae/5bd32d78cd0c2a4bab214a77e46aa3aa1b9a77.src","preCode":"  public UnboundPredicate<Integer> project(String fieldName, BoundPredicate<Integer> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, name, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateInteger(fieldName, pred.asLiteralPredicate(), this);\n    } else if (pred.isSetPredicate() && pred.op() == Expression.Operation.IN) {\n      return ProjectionUtil.transformSet(fieldName, pred.asSetPredicate(), this);\n    }\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Dates.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"f06104f4a489c6ef44a1487c32ba5c8352d253d3","commitMessage":"@@@Core: Fix projected transform expression names (#2027)\n\n","date":"2021-01-07 08:58:28","modifiedFileCount":"3","status":"M","submitter":"Chen Junjie"},{"authorTime":"2021-01-22 09:14:39","codes":[{"authorDate":"2021-01-22 09:14:39","commitOrder":5,"curCode":"  public UnboundPredicate<Integer> projectStrict(String fieldName, BoundPredicate<Long> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, fieldName, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n\n    } else if (pred.isLiteralPredicate()) {\n      UnboundPredicate<Integer> projected = ProjectionUtil.truncateLongStrict(\n          fieldName, pred.asLiteralPredicate(), this);\n      return ProjectionUtil.fixStrictTimeProjection(projected);\n\n    } else if (pred.isSetPredicate() && pred.op() == Expression.Operation.NOT_IN) {\n      UnboundPredicate<Integer> projected = ProjectionUtil.transformSet(fieldName, pred.asSetPredicate(), this);\n      return ProjectionUtil.fixStrictTimeProjection(projected);\n    }\n\n    return null;\n  }\n","date":"2021-01-22 09:14:39","endLine":148,"groupId":"101533","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"projectStrict","params":"(StringfieldName@BoundPredicate<Long>pred)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/29/f1b2dd7e19bc464c80e9bbb5309ab1a3f43516.src","preCode":"  public UnboundPredicate<Integer> projectStrict(String fieldName, BoundPredicate<Long> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, fieldName, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateLongStrict(fieldName, pred.asLiteralPredicate(), this);\n    } else if (pred.isSetPredicate() && pred.op() == Expression.Operation.NOT_IN) {\n      return ProjectionUtil.transformSet(fieldName, pred.asSetPredicate(), this);\n    }\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Timestamps.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"},{"authorDate":"2021-01-22 09:14:39","commitOrder":5,"curCode":"  public UnboundPredicate<Integer> project(String fieldName, BoundPredicate<Integer> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, fieldName, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n\n    } else if (pred.isLiteralPredicate()) {\n      UnboundPredicate<Integer> projected = ProjectionUtil.truncateInteger(fieldName, pred.asLiteralPredicate(), this);\n      if (this != DAY) {\n        return ProjectionUtil.fixInclusiveTimeProjection(projected);\n      }\n\n      return projected;\n\n    } else if (pred.isSetPredicate() && pred.op() == Expression.Operation.IN) {\n      UnboundPredicate<Integer> projected = ProjectionUtil.transformSet(fieldName, pred.asSetPredicate(), this);\n      if (this != DAY) {\n        return ProjectionUtil.fixInclusiveTimeProjection(projected);\n      }\n\n      return projected;\n    }\n\n    return null;\n  }\n","date":"2021-01-22 09:14:39","endLine":129,"groupId":"101533","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"project","params":"(StringfieldName@BoundPredicate<Integer>pred)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e8/fb1230a384352b933543454d9e6e101b2aa9f7.src","preCode":"  public UnboundPredicate<Integer> project(String fieldName, BoundPredicate<Integer> pred) {\n    if (pred.term() instanceof BoundTransform) {\n      return ProjectionUtil.projectTransformPredicate(this, fieldName, pred);\n    }\n\n    if (pred.isUnaryPredicate()) {\n      return Expressions.predicate(pred.op(), fieldName);\n    } else if (pred.isLiteralPredicate()) {\n      return ProjectionUtil.truncateInteger(fieldName, pred.asLiteralPredicate(), this);\n    } else if (pred.isSetPredicate() && pred.op() == Expression.Operation.IN) {\n      return ProjectionUtil.transformSet(fieldName, pred.asSetPredicate(), this);\n    }\n    return null;\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/Dates.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"ae96c325239505bccde5eaeec42dbdde4df5fa6a","commitMessage":"@@@API: Fix date and timestamp transforms (#1981)\n\n","date":"2021-01-22 09:14:39","modifiedFileCount":"9","status":"M","submitter":"Ryan Blue"}]
