[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public GenericManifestFile(org.apache.avro.Schema avroSchema) {\n    this.avroSchema = avroSchema;\n\n    List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema)\n        .asNestedType()\n        .asStructType()\n        .fields();\n    List<Types.NestedField> allFields = ManifestFile.schema().asStruct().fields();\n\n    this.fromProjectionPos = new int[fields.size()];\n    for (int i = 0; i < fromProjectionPos.length; i += 1) {\n      boolean found = false;\n      for (int j = 0; j < allFields.size(); j += 1) {\n        if (fields.get(i).fieldId() == allFields.get(j).fieldId()) {\n          found = true;\n          fromProjectionPos[i] = j;\n        }\n      }\n\n      if (!found) {\n        throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i));\n      }\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":80,"groupId":"4452","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"GenericManifestFile","params":"(org.apache.avro.SchemaavroSchema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/1f/75a261f6e246aed9495b0ccdc6fe3f6f9dc1fb.src","preCode":"  public GenericManifestFile(org.apache.avro.Schema avroSchema) {\n    this.avroSchema = avroSchema;\n\n    List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema)\n        .asNestedType()\n        .asStructType()\n        .fields();\n    List<Types.NestedField> allFields = ManifestFile.schema().asStruct().fields();\n\n    this.fromProjectionPos = new int[fields.size()];\n    for (int i = 0; i < fromProjectionPos.length; i += 1) {\n      boolean found = false;\n      for (int j = 0; j < allFields.size(); j += 1) {\n        if (fields.get(i).fieldId() == allFields.get(j).fieldId()) {\n          found = true;\n          fromProjectionPos[i] = j;\n        }\n      }\n\n      if (!found) {\n        throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i));\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/GenericManifestFile.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public GenericPartitionFieldSummary(Schema avroSchema) {\n    this.avroSchema = avroSchema;\n\n    List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema)\n        .asNestedType()\n        .asStructType()\n        .fields();\n    List<Types.NestedField> allFields = PartitionFieldSummary.getType().fields();\n\n    this.fromProjectionPos = new int[fields.size()];\n    for (int i = 0; i < fromProjectionPos.length; i += 1) {\n      boolean found = false;\n      for (int j = 0; j < allFields.size(); j += 1) {\n        if (fields.get(i).fieldId() == allFields.get(j).fieldId()) {\n          found = true;\n          fromProjectionPos[i] = j;\n        }\n      }\n\n      if (!found) {\n        throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i));\n      }\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":71,"groupId":"4452","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"GenericPartitionFieldSummary","params":"(SchemaavroSchema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d6/15abff4e035241fd4b2d9510fb481526f7b3fc.src","preCode":"  public GenericPartitionFieldSummary(Schema avroSchema) {\n    this.avroSchema = avroSchema;\n\n    List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema)\n        .asNestedType()\n        .asStructType()\n        .fields();\n    List<Types.NestedField> allFields = PartitionFieldSummary.getType().fields();\n\n    this.fromProjectionPos = new int[fields.size()];\n    for (int i = 0; i < fromProjectionPos.length; i += 1) {\n      boolean found = false;\n      for (int j = 0; j < allFields.size(); j += 1) {\n        if (fields.get(i).fieldId() == allFields.get(j).fieldId()) {\n          found = true;\n          fromProjectionPos[i] = j;\n        }\n      }\n\n      if (!found) {\n        throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i));\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/GenericPartitionFieldSummary.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2020-04-15 07:40:48","commitOrder":2,"curCode":"  public GenericManifestFile(org.apache.avro.Schema avroSchema) {\n    this.avroSchema = avroSchema;\n\n    List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema).asStructType().fields();\n    List<Types.NestedField> allFields = ManifestFile.schema().asStruct().fields();\n\n    this.fromProjectionPos = new int[fields.size()];\n    for (int i = 0; i < fromProjectionPos.length; i += 1) {\n      boolean found = false;\n      for (int j = 0; j < allFields.size(); j += 1) {\n        if (fields.get(i).fieldId() == allFields.get(j).fieldId()) {\n          found = true;\n          fromProjectionPos[i] = j;\n        }\n      }\n\n      if (!found) {\n        throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i));\n      }\n    }\n  }\n","date":"2020-04-15 07:40:48","endLine":83,"groupId":"122101","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"GenericManifestFile","params":"(org.apache.avro.SchemaavroSchema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/26/f7153f81af90c7f61080b22ba77851d0f74308.src","preCode":"  public GenericManifestFile(org.apache.avro.Schema avroSchema) {\n    this.avroSchema = avroSchema;\n\n    List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema)\n        .asNestedType()\n        .asStructType()\n        .fields();\n    List<Types.NestedField> allFields = ManifestFile.schema().asStruct().fields();\n\n    this.fromProjectionPos = new int[fields.size()];\n    for (int i = 0; i < fromProjectionPos.length; i += 1) {\n      boolean found = false;\n      for (int j = 0; j < allFields.size(); j += 1) {\n        if (fields.get(i).fieldId() == allFields.get(j).fieldId()) {\n          found = true;\n          fromProjectionPos[i] = j;\n        }\n      }\n\n      if (!found) {\n        throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i));\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/GenericManifestFile.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  public GenericPartitionFieldSummary(Schema avroSchema) {\n    this.avroSchema = avroSchema;\n\n    List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema)\n        .asNestedType()\n        .asStructType()\n        .fields();\n    List<Types.NestedField> allFields = PartitionFieldSummary.getType().fields();\n\n    this.fromProjectionPos = new int[fields.size()];\n    for (int i = 0; i < fromProjectionPos.length; i += 1) {\n      boolean found = false;\n      for (int j = 0; j < allFields.size(); j += 1) {\n        if (fields.get(i).fieldId() == allFields.get(j).fieldId()) {\n          found = true;\n          fromProjectionPos[i] = j;\n        }\n      }\n\n      if (!found) {\n        throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i));\n      }\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":71,"groupId":"122101","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"GenericPartitionFieldSummary","params":"(SchemaavroSchema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d6/15abff4e035241fd4b2d9510fb481526f7b3fc.src","preCode":"  public GenericPartitionFieldSummary(Schema avroSchema) {\n    this.avroSchema = avroSchema;\n\n    List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema)\n        .asNestedType()\n        .asStructType()\n        .fields();\n    List<Types.NestedField> allFields = PartitionFieldSummary.getType().fields();\n\n    this.fromProjectionPos = new int[fields.size()];\n    for (int i = 0; i < fromProjectionPos.length; i += 1) {\n      boolean found = false;\n      for (int j = 0; j < allFields.size(); j += 1) {\n        if (fields.get(i).fieldId() == allFields.get(j).fieldId()) {\n          found = true;\n          fromProjectionPos[i] = j;\n        }\n      }\n\n      if (!found) {\n        throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i));\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/GenericPartitionFieldSummary.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"}],"commitId":"487fc1c71c36fba9d589ebff6fefdee6c19d0f24","commitMessage":"@@@Add v2 manifest lists (#907)\n\n","date":"2020-04-15 07:40:48","modifiedFileCount":"8","status":"M","submitter":"Ryan Blue"}]
