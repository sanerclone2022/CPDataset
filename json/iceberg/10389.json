[{"authorTime":"2021-03-26 02:36:51","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  public static <T> T roundTripSerialize(T type) throws IOException, ClassNotFoundException {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(type);\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(\n        new ByteArrayInputStream(bytes.toByteArray()))) {\n      return (T) in.readObject();\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":73,"groupId":"3694","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"roundTripSerialize","params":"(Ttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/bc/f55533ecb7effd8386f618fa1344ad36de7915.src","preCode":"  public static <T> T roundTripSerialize(T type) throws IOException, ClassNotFoundException {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(type);\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(\n        new ByteArrayInputStream(bytes.toByteArray()))) {\n      return (T) in.readObject();\n    }\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/TestHelpers.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"NB"},{"authorDate":"2021-03-26 02:36:51","commitOrder":2,"curCode":"  public void testJavaSerialization() throws Exception {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(manifest);\n      out.writeObject(manifest.copy());\n      out.writeObject(GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        TestHelpers.assertEquals(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","date":"2021-03-26 02:36:51","endLine":147,"groupId":"4635","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJavaSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/80/d579b0ad4dcfe49856fd3267ae17a2b6c8b4b7.src","preCode":"  public void testJavaSerialization() throws Exception {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(manifest);\n      out.writeObject(manifest.copy());\n      out.writeObject(GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        TestHelpers.assertEquals(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"}],"commitId":"c9e76633ca4eb85d5a867d09237ce4c6000f4d9e","commitMessage":"@@@Flink: Fix manifest serialization with Kryo (#2349)\n\n","date":"2021-03-26 02:36:51","modifiedFileCount":"4","status":"M","submitter":"openinx"},{"authorTime":"2021-07-19 18:57:09","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":3,"curCode":"  public static <T> T roundTripSerialize(T type) throws IOException, ClassNotFoundException {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(type);\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(\n        new ByteArrayInputStream(bytes.toByteArray()))) {\n      return (T) in.readObject();\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":73,"groupId":"10389","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"roundTripSerialize","params":"(Ttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/bc/f55533ecb7effd8386f618fa1344ad36de7915.src","preCode":"  public static <T> T roundTripSerialize(T type) throws IOException, ClassNotFoundException {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(type);\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(\n        new ByteArrayInputStream(bytes.toByteArray()))) {\n      return (T) in.readObject();\n    }\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/TestHelpers.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"},{"authorDate":"2021-07-19 18:57:09","commitOrder":3,"curCode":"  public void testJavaSerialization() throws Exception {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(manifest);\n      out.writeObject(manifest.copy());\n      out.writeObject(GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = in.readObject();\n        Assertions.assertThat(obj).as(\"Should be a ManifestFile\").isInstanceOf(ManifestFile.class);\n        TestHelpers.assertEquals(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","date":"2021-07-19 18:57:09","endLine":148,"groupId":"10389","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testJavaSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e9/0a9a469e47b5b1a18a75fc573f2d73fcec591a.src","preCode":"  public void testJavaSerialization() throws Exception {\n    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    try (ObjectOutputStream out = new ObjectOutputStream(bytes)) {\n      out.writeObject(manifest);\n      out.writeObject(manifest.copy());\n      out.writeObject(GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = in.readObject();\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        TestHelpers.assertEquals(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"0055e855ccabbd6a592b3b49e1f38131f62e0fdd","commitMessage":"@@@Move Assert.assertTrue(..) instance checks to AssertJ assertions (#2756)\n\n","date":"2021-07-19 18:57:09","modifiedFileCount":"25","status":"M","submitter":"Eduard Tudenh?fner"}]
