[{"authorTime":"2020-05-30 03:26:56","codes":[{"authorDate":"2020-05-30 03:26:56","commitOrder":1,"curCode":"  public static ManifestReader read(ManifestFile manifest, FileIO io, Map<Integer, PartitionSpec> specsById) {\n    Preconditions.checkArgument(manifest.content() == ManifestContent.DATA,\n        \"Cannot read a delete manifest with a ManifestReader: %s\", manifest);\n    InputFile file = io.newInputFile(manifest.path());\n    InheritableMetadata inheritableMetadata = InheritableMetadataFactory.fromManifest(manifest);\n    return new ManifestReader(file, specsById, inheritableMetadata);\n  }\n","date":"2020-05-30 03:26:56","endLine":63,"groupId":"1476","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"read","params":"(ManifestFilemanifest@FileIOio@Map<Integer@PartitionSpec>specsById)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/73/0badf8d345c8aa76592bb4556b67696286655e.src","preCode":"  public static ManifestReader read(ManifestFile manifest, FileIO io, Map<Integer, PartitionSpec> specsById) {\n    Preconditions.checkArgument(manifest.content() == ManifestContent.DATA,\n        \"Cannot read a delete manifest with a ManifestReader: %s\", manifest);\n    InputFile file = io.newInputFile(manifest.path());\n    InheritableMetadata inheritableMetadata = InheritableMetadataFactory.fromManifest(manifest);\n    return new ManifestReader(file, specsById, inheritableMetadata);\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/ManifestFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2020-05-30 03:26:56","commitOrder":1,"curCode":"  public static DeleteManifestReader readDeleteManifest(ManifestFile manifest, FileIO io,\n                                                        Map<Integer, PartitionSpec> specsById) {\n    Preconditions.checkArgument(manifest.content() == ManifestContent.DELETES,\n        \"Cannot read a data manifest with a DeleteManifestReader: %s\", manifest);\n    InputFile file = io.newInputFile(manifest.path());\n    InheritableMetadata inheritableMetadata = InheritableMetadataFactory.fromManifest(manifest);\n    return new DeleteManifestReader(file, specsById, inheritableMetadata);\n  }\n","date":"2020-05-30 03:26:56","endLine":114,"groupId":"1476","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"readDeleteManifest","params":"(ManifestFilemanifest@FileIOio@Map<Integer@PartitionSpec>specsById)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/73/0badf8d345c8aa76592bb4556b67696286655e.src","preCode":"  public static DeleteManifestReader readDeleteManifest(ManifestFile manifest, FileIO io,\n                                                        Map<Integer, PartitionSpec> specsById) {\n    Preconditions.checkArgument(manifest.content() == ManifestContent.DELETES,\n        \"Cannot read a data manifest with a DeleteManifestReader: %s\", manifest);\n    InputFile file = io.newInputFile(manifest.path());\n    InheritableMetadata inheritableMetadata = InheritableMetadataFactory.fromManifest(manifest);\n    return new DeleteManifestReader(file, specsById, inheritableMetadata);\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/ManifestFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"B"}],"commitId":"527240b445b23cef1a655eccbb3b2c0eb7d178c1","commitMessage":"@@@Add DeleteFile and manifest reader and writer for deletes (#1064)\n\n","date":"2020-05-30 03:26:56","modifiedFileCount":"28","status":"B","submitter":"Ryan Blue"},{"authorTime":"2020-06-10 01:43:32","codes":[{"authorDate":"2020-06-10 01:43:32","commitOrder":2,"curCode":"  public static ManifestReader<DataFile> read(ManifestFile manifest, FileIO io, Map<Integer, PartitionSpec> specsById) {\n    Preconditions.checkArgument(manifest.content() == ManifestContent.DATA,\n        \"Cannot read a delete manifest with a ManifestReader: %s\", manifest);\n    InputFile file = io.newInputFile(manifest.path());\n    InheritableMetadata inheritableMetadata = InheritableMetadataFactory.fromManifest(manifest);\n    return new ManifestReader<>(file, specsById, inheritableMetadata, FileType.DATA_FILES);\n  }\n","date":"2020-06-10 01:43:32","endLine":64,"groupId":"102127","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"read","params":"(ManifestFilemanifest@FileIOio@Map<Integer@PartitionSpec>specsById)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/80/9d644abaf56074926f1730dddfac26cb3c1e34.src","preCode":"  public static ManifestReader read(ManifestFile manifest, FileIO io, Map<Integer, PartitionSpec> specsById) {\n    Preconditions.checkArgument(manifest.content() == ManifestContent.DATA,\n        \"Cannot read a delete manifest with a ManifestReader: %s\", manifest);\n    InputFile file = io.newInputFile(manifest.path());\n    InheritableMetadata inheritableMetadata = InheritableMetadataFactory.fromManifest(manifest);\n    return new ManifestReader(file, specsById, inheritableMetadata);\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/ManifestFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2020-06-10 01:43:32","commitOrder":2,"curCode":"  public static ManifestReader<DeleteFile> readDeleteManifest(ManifestFile manifest, FileIO io,\n                                                              Map<Integer, PartitionSpec> specsById) {\n    Preconditions.checkArgument(manifest.content() == ManifestContent.DELETES,\n        \"Cannot read a data manifest with a DeleteManifestReader: %s\", manifest);\n    InputFile file = io.newInputFile(manifest.path());\n    InheritableMetadata inheritableMetadata = InheritableMetadataFactory.fromManifest(manifest);\n    return new ManifestReader<>(file, specsById, inheritableMetadata, FileType.DELETE_FILES);\n  }\n","date":"2020-06-10 01:43:32","endLine":115,"groupId":"102127","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"readDeleteManifest","params":"(ManifestFilemanifest@FileIOio@Map<Integer@PartitionSpec>specsById)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/80/9d644abaf56074926f1730dddfac26cb3c1e34.src","preCode":"  public static DeleteManifestReader readDeleteManifest(ManifestFile manifest, FileIO io,\n                                                        Map<Integer, PartitionSpec> specsById) {\n    Preconditions.checkArgument(manifest.content() == ManifestContent.DELETES,\n        \"Cannot read a data manifest with a DeleteManifestReader: %s\", manifest);\n    InputFile file = io.newInputFile(manifest.path());\n    InheritableMetadata inheritableMetadata = InheritableMetadataFactory.fromManifest(manifest);\n    return new DeleteManifestReader(file, specsById, inheritableMetadata);\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/ManifestFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"2ac53b346c8a1b4cfac42aa8b5811b120b4cf0f0","commitMessage":"@@@Combine ManifestReaders into one parameterized class. (#1099)\n\n","date":"2020-06-10 01:43:32","modifiedFileCount":"12","status":"M","submitter":"Ryan Blue"}]
