[{"authorTime":"2020-08-29 01:19:33","codes":[{"authorDate":"2020-08-29 01:19:33","commitOrder":1,"curCode":"  public void testAbort() throws IOException {\n    try (TaskWriter<RowData> taskWriter = createTaskWriter(TARGET_FILE_SIZE)) {\n      taskWriter.write(SimpleDataUtil.createRowData(1, \"hello\"));\n      taskWriter.write(SimpleDataUtil.createRowData(2, \"world\"));\n\n      taskWriter.abort();\n      DataFile[] dataFiles = taskWriter.complete();\n\n      int expectedFiles = partitioned ? 2 : 1;\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      FileSystem fs = FileSystem.get(CONF);\n      for (DataFile dataFile : dataFiles) {\n        Assert.assertFalse(fs.exists(new Path(dataFile.path().toString())));\n      }\n    }\n  }\n","date":"2020-08-29 01:19:33","endLine":145,"groupId":"2018","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c4/c697974c9c1de7ed70d5f41c6fa26d1a139934.src","preCode":"  public void testAbort() throws IOException {\n    try (TaskWriter<RowData> taskWriter = createTaskWriter(TARGET_FILE_SIZE)) {\n      taskWriter.write(SimpleDataUtil.createRowData(1, \"hello\"));\n      taskWriter.write(SimpleDataUtil.createRowData(2, \"world\"));\n\n      taskWriter.abort();\n      DataFile[] dataFiles = taskWriter.complete();\n\n      int expectedFiles = partitioned ? 2 : 1;\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      FileSystem fs = FileSystem.get(CONF);\n      for (DataFile dataFile : dataFiles) {\n        Assert.assertFalse(fs.exists(new Path(dataFile.path().toString())));\n      }\n    }\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/sink/TestTaskWriters.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"},{"authorDate":"2020-08-29 01:19:33","commitOrder":1,"curCode":"  public void testCompleteFiles() throws IOException {\n    try (TaskWriter<RowData> taskWriter = createTaskWriter(TARGET_FILE_SIZE)) {\n      taskWriter.write(SimpleDataUtil.createRowData(1, \"a\"));\n      taskWriter.write(SimpleDataUtil.createRowData(2, \"b\"));\n      taskWriter.write(SimpleDataUtil.createRowData(3, \"c\"));\n      taskWriter.write(SimpleDataUtil.createRowData(4, \"d\"));\n\n      DataFile[] dataFiles = taskWriter.complete();\n      int expectedFiles = partitioned ? 4 : 1;\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      dataFiles = taskWriter.complete();\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      FileSystem fs = FileSystem.get(CONF);\n      for (DataFile dataFile : dataFiles) {\n        Assert.assertTrue(fs.exists(new Path(dataFile.path().toString())));\n      }\n\n      AppendFiles appendFiles = table.newAppend();\n      for (DataFile dataFile : dataFiles) {\n        appendFiles.appendFile(dataFile);\n      }\n      appendFiles.commit();\n\n      \r\n      SimpleDataUtil.assertTableRecords(path, Lists.newArrayList(\n          SimpleDataUtil.createRecord(1, \"a\"),\n          SimpleDataUtil.createRecord(2, \"b\"),\n          SimpleDataUtil.createRecord(3, \"c\"),\n          SimpleDataUtil.createRecord(4, \"d\")\n      ));\n    }\n  }\n","date":"2020-08-29 01:19:33","endLine":181,"groupId":"4643","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompleteFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c4/c697974c9c1de7ed70d5f41c6fa26d1a139934.src","preCode":"  public void testCompleteFiles() throws IOException {\n    try (TaskWriter<RowData> taskWriter = createTaskWriter(TARGET_FILE_SIZE)) {\n      taskWriter.write(SimpleDataUtil.createRowData(1, \"a\"));\n      taskWriter.write(SimpleDataUtil.createRowData(2, \"b\"));\n      taskWriter.write(SimpleDataUtil.createRowData(3, \"c\"));\n      taskWriter.write(SimpleDataUtil.createRowData(4, \"d\"));\n\n      DataFile[] dataFiles = taskWriter.complete();\n      int expectedFiles = partitioned ? 4 : 1;\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      dataFiles = taskWriter.complete();\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      FileSystem fs = FileSystem.get(CONF);\n      for (DataFile dataFile : dataFiles) {\n        Assert.assertTrue(fs.exists(new Path(dataFile.path().toString())));\n      }\n\n      AppendFiles appendFiles = table.newAppend();\n      for (DataFile dataFile : dataFiles) {\n        appendFiles.appendFile(dataFile);\n      }\n      appendFiles.commit();\n\n      \r\n      SimpleDataUtil.assertTableRecords(path, Lists.newArrayList(\n          SimpleDataUtil.createRecord(1, \"a\"),\n          SimpleDataUtil.createRecord(2, \"b\"),\n          SimpleDataUtil.createRecord(3, \"c\"),\n          SimpleDataUtil.createRecord(4, \"d\")\n      ));\n    }\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/sink/TestTaskWriters.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"}],"commitId":"f950a3e63c98e88b1f8905faacf33a1d5d31e4c0","commitMessage":"@@@Flink: Add operator to collect data files and append to a table (#1185)\n\n","date":"2020-08-29 01:19:33","modifiedFileCount":"2","status":"B","submitter":"openinx"},{"authorTime":"2020-12-08 03:30:37","codes":[{"authorDate":"2020-12-08 03:30:37","commitOrder":2,"curCode":"  public void testAbort() throws IOException {\n    try (TaskWriter<RowData> taskWriter = createTaskWriter(TARGET_FILE_SIZE)) {\n      taskWriter.write(SimpleDataUtil.createRowData(1, \"hello\"));\n      taskWriter.write(SimpleDataUtil.createRowData(2, \"world\"));\n\n      taskWriter.abort();\n      DataFile[] dataFiles = taskWriter.dataFiles();\n\n      int expectedFiles = partitioned ? 2 : 1;\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      FileSystem fs = FileSystem.get(CONF);\n      for (DataFile dataFile : dataFiles) {\n        Assert.assertFalse(fs.exists(new Path(dataFile.path().toString())));\n      }\n    }\n  }\n","date":"2020-12-08 03:30:37","endLine":145,"groupId":"102210","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAbort","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/0b/9e0f911ae087e7b46476524a738e23ca4db4b9.src","preCode":"  public void testAbort() throws IOException {\n    try (TaskWriter<RowData> taskWriter = createTaskWriter(TARGET_FILE_SIZE)) {\n      taskWriter.write(SimpleDataUtil.createRowData(1, \"hello\"));\n      taskWriter.write(SimpleDataUtil.createRowData(2, \"world\"));\n\n      taskWriter.abort();\n      DataFile[] dataFiles = taskWriter.complete();\n\n      int expectedFiles = partitioned ? 2 : 1;\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      FileSystem fs = FileSystem.get(CONF);\n      for (DataFile dataFile : dataFiles) {\n        Assert.assertFalse(fs.exists(new Path(dataFile.path().toString())));\n      }\n    }\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/sink/TestTaskWriters.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"},{"authorDate":"2020-12-08 03:30:37","commitOrder":2,"curCode":"  public void testCompleteFiles() throws IOException {\n    try (TaskWriter<RowData> taskWriter = createTaskWriter(TARGET_FILE_SIZE)) {\n      taskWriter.write(SimpleDataUtil.createRowData(1, \"a\"));\n      taskWriter.write(SimpleDataUtil.createRowData(2, \"b\"));\n      taskWriter.write(SimpleDataUtil.createRowData(3, \"c\"));\n      taskWriter.write(SimpleDataUtil.createRowData(4, \"d\"));\n\n      DataFile[] dataFiles = taskWriter.dataFiles();\n      int expectedFiles = partitioned ? 4 : 1;\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      dataFiles = taskWriter.dataFiles();\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      FileSystem fs = FileSystem.get(CONF);\n      for (DataFile dataFile : dataFiles) {\n        Assert.assertTrue(fs.exists(new Path(dataFile.path().toString())));\n      }\n\n      AppendFiles appendFiles = table.newAppend();\n      for (DataFile dataFile : dataFiles) {\n        appendFiles.appendFile(dataFile);\n      }\n      appendFiles.commit();\n\n      \r\n      SimpleDataUtil.assertTableRecords(path, Lists.newArrayList(\n          SimpleDataUtil.createRecord(1, \"a\"),\n          SimpleDataUtil.createRecord(2, \"b\"),\n          SimpleDataUtil.createRecord(3, \"c\"),\n          SimpleDataUtil.createRecord(4, \"d\")\n      ));\n    }\n  }\n","date":"2020-12-08 03:30:37","endLine":181,"groupId":"102210","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompleteFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/0b/9e0f911ae087e7b46476524a738e23ca4db4b9.src","preCode":"  public void testCompleteFiles() throws IOException {\n    try (TaskWriter<RowData> taskWriter = createTaskWriter(TARGET_FILE_SIZE)) {\n      taskWriter.write(SimpleDataUtil.createRowData(1, \"a\"));\n      taskWriter.write(SimpleDataUtil.createRowData(2, \"b\"));\n      taskWriter.write(SimpleDataUtil.createRowData(3, \"c\"));\n      taskWriter.write(SimpleDataUtil.createRowData(4, \"d\"));\n\n      DataFile[] dataFiles = taskWriter.complete();\n      int expectedFiles = partitioned ? 4 : 1;\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      dataFiles = taskWriter.complete();\n      Assert.assertEquals(expectedFiles, dataFiles.length);\n\n      FileSystem fs = FileSystem.get(CONF);\n      for (DataFile dataFile : dataFiles) {\n        Assert.assertTrue(fs.exists(new Path(dataFile.path().toString())));\n      }\n\n      AppendFiles appendFiles = table.newAppend();\n      for (DataFile dataFile : dataFiles) {\n        appendFiles.appendFile(dataFile);\n      }\n      appendFiles.commit();\n\n      \r\n      SimpleDataUtil.assertTableRecords(path, Lists.newArrayList(\n          SimpleDataUtil.createRecord(1, \"a\"),\n          SimpleDataUtil.createRecord(2, \"b\"),\n          SimpleDataUtil.createRecord(3, \"c\"),\n          SimpleDataUtil.createRecord(4, \"d\")\n      ));\n    }\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/sink/TestTaskWriters.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"a5a7f1937a036bfbd7848b0009545d3cca700adc","commitMessage":"@@@Core: Add RollingEqDeleteWriter (#1867)\n\n","date":"2020-12-08 03:30:37","modifiedFileCount":"12","status":"M","submitter":"openinx"}]
