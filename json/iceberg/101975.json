[{"authorTime":"2020-02-05 05:49:56","codes":[{"authorDate":"2020-02-05 05:49:56","commitOrder":1,"curCode":"  public void testRollbackAndCherrypick() {\n    \r\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n    TableMetadata base = readMetadata();\n    Snapshot firstSnapshot = base.currentSnapshot();\n    long firstSnapshotId = firstSnapshot.snapshotId();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_B)\n        .commit();\n    base = readMetadata();\n    Snapshot secondSnapshot = base.currentSnapshot();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_C)\n        .commit();\n    base = readMetadata();\n    Snapshot thirdSnapshot = base.currentSnapshot();\n\n    \r\n    table.manageSnapshots().rollbackTo(firstSnapshotId).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Should be at first snapshot\", firstSnapshotId, base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Should have all three snapshots in the system\", 3, base.snapshots().size());\n\n    \r\n    table.manageSnapshots().cherrypick(thirdSnapshot.snapshotId()).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Current state should be at third snapshot\", 4,\n        base.currentSnapshot().snapshotId());\n\n    \r\n    table.manageSnapshots().cherrypick(secondSnapshot.snapshotId()).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Current state should be at second snapshot\", 5,\n        base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Count all snapshots\", 5,\n        base.snapshots().size());\n  }\n","date":"2020-02-05 05:49:56","endLine":195,"groupId":"557","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRollbackAndCherrypick","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f1/1363d0446606394d9e1e6243b992fc221d3488.src","preCode":"  public void testRollbackAndCherrypick() {\n    \r\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n    TableMetadata base = readMetadata();\n    Snapshot firstSnapshot = base.currentSnapshot();\n    long firstSnapshotId = firstSnapshot.snapshotId();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_B)\n        .commit();\n    base = readMetadata();\n    Snapshot secondSnapshot = base.currentSnapshot();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_C)\n        .commit();\n    base = readMetadata();\n    Snapshot thirdSnapshot = base.currentSnapshot();\n\n    \r\n    table.manageSnapshots().rollbackTo(firstSnapshotId).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Should be at first snapshot\", firstSnapshotId, base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Should have all three snapshots in the system\", 3, base.snapshots().size());\n\n    \r\n    table.manageSnapshots().cherrypick(thirdSnapshot.snapshotId()).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Current state should be at third snapshot\", 4,\n        base.currentSnapshot().snapshotId());\n\n    \r\n    table.manageSnapshots().cherrypick(secondSnapshot.snapshotId()).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Current state should be at second snapshot\", 5,\n        base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Count all snapshots\", 5,\n        base.snapshots().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestWapWorkflow.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"B"},{"authorDate":"2020-02-05 05:49:56","commitOrder":1,"curCode":"  public void testRollbackToTime() {\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n    TableMetadata base = readMetadata();\n    Snapshot firstSnapshot = base.currentSnapshot();\n    long firstSnapshotId = firstSnapshot.snapshotId();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_B)\n        .commit();\n    base = readMetadata();\n    Snapshot secondSnapshot = base.currentSnapshot();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_C)\n        .commit();\n    base = readMetadata();\n    Snapshot thirdSnapshot = base.currentSnapshot();\n\n    \r\n    table.manageSnapshots().rollbackToTime(secondSnapshot.timestampMillis()).commit();\n    base = readMetadata();\n\n    Assert.assertEquals(\"Should be at first snapshot\", firstSnapshotId, base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Should have all three snapshots in the system\", 3, base.snapshots().size());\n  }\n","date":"2020-02-05 05:49:56","endLine":228,"groupId":"557","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRollbackToTime","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f1/1363d0446606394d9e1e6243b992fc221d3488.src","preCode":"  public void testRollbackToTime() {\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n    TableMetadata base = readMetadata();\n    Snapshot firstSnapshot = base.currentSnapshot();\n    long firstSnapshotId = firstSnapshot.snapshotId();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_B)\n        .commit();\n    base = readMetadata();\n    Snapshot secondSnapshot = base.currentSnapshot();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_C)\n        .commit();\n    base = readMetadata();\n    Snapshot thirdSnapshot = base.currentSnapshot();\n\n    \r\n    table.manageSnapshots().rollbackToTime(secondSnapshot.timestampMillis()).commit();\n    base = readMetadata();\n\n    Assert.assertEquals(\"Should be at first snapshot\", firstSnapshotId, base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Should have all three snapshots in the system\", 3, base.snapshots().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestWapWorkflow.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"}],"commitId":"a0ff334f2a9b0e1a429ccf69a85a12e8c255ed33","commitMessage":"@@@Add SnapshotManager to roll back and cherry-pick snapshots (#695)\n\n","date":"2020-02-05 05:49:56","modifiedFileCount":"10","status":"B","submitter":"Gautam"},{"authorTime":"2020-04-29 08:56:28","codes":[{"authorDate":"2020-02-05 05:49:56","commitOrder":2,"curCode":"  public void testRollbackAndCherrypick() {\n    \r\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n    TableMetadata base = readMetadata();\n    Snapshot firstSnapshot = base.currentSnapshot();\n    long firstSnapshotId = firstSnapshot.snapshotId();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_B)\n        .commit();\n    base = readMetadata();\n    Snapshot secondSnapshot = base.currentSnapshot();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_C)\n        .commit();\n    base = readMetadata();\n    Snapshot thirdSnapshot = base.currentSnapshot();\n\n    \r\n    table.manageSnapshots().rollbackTo(firstSnapshotId).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Should be at first snapshot\", firstSnapshotId, base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Should have all three snapshots in the system\", 3, base.snapshots().size());\n\n    \r\n    table.manageSnapshots().cherrypick(thirdSnapshot.snapshotId()).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Current state should be at third snapshot\", 4,\n        base.currentSnapshot().snapshotId());\n\n    \r\n    table.manageSnapshots().cherrypick(secondSnapshot.snapshotId()).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Current state should be at second snapshot\", 5,\n        base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Count all snapshots\", 5,\n        base.snapshots().size());\n  }\n","date":"2020-02-05 05:49:56","endLine":195,"groupId":"101975","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRollbackAndCherrypick","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f1/1363d0446606394d9e1e6243b992fc221d3488.src","preCode":"  public void testRollbackAndCherrypick() {\n    \r\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n    TableMetadata base = readMetadata();\n    Snapshot firstSnapshot = base.currentSnapshot();\n    long firstSnapshotId = firstSnapshot.snapshotId();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_B)\n        .commit();\n    base = readMetadata();\n    Snapshot secondSnapshot = base.currentSnapshot();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_C)\n        .commit();\n    base = readMetadata();\n    Snapshot thirdSnapshot = base.currentSnapshot();\n\n    \r\n    table.manageSnapshots().rollbackTo(firstSnapshotId).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Should be at first snapshot\", firstSnapshotId, base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Should have all three snapshots in the system\", 3, base.snapshots().size());\n\n    \r\n    table.manageSnapshots().cherrypick(thirdSnapshot.snapshotId()).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Current state should be at third snapshot\", 4,\n        base.currentSnapshot().snapshotId());\n\n    \r\n    table.manageSnapshots().cherrypick(secondSnapshot.snapshotId()).commit();\n    base = readMetadata();\n    Assert.assertEquals(\"Current state should be at second snapshot\", 5,\n        base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Count all snapshots\", 5,\n        base.snapshots().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestWapWorkflow.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"N"},{"authorDate":"2020-04-29 08:56:28","commitOrder":2,"curCode":"  public void testRollbackToTime() {\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n    TableMetadata base = readMetadata();\n    Snapshot firstSnapshot = base.currentSnapshot();\n    long firstSnapshotId = firstSnapshot.snapshotId();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_B)\n        .commit();\n    base = readMetadata();\n    Snapshot secondSnapshot = base.currentSnapshot();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_C)\n        .commit();\n\n    \r\n    table.manageSnapshots().rollbackToTime(secondSnapshot.timestampMillis()).commit();\n    base = readMetadata();\n\n    Assert.assertEquals(\"Should be at first snapshot\", firstSnapshotId, base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Should have all three snapshots in the system\", 3, base.snapshots().size());\n  }\n","date":"2020-04-29 08:56:28","endLine":301,"groupId":"101975","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRollbackToTime","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e4/aceaf714c51ce107decc872ea69ebfa44eaf29.src","preCode":"  public void testRollbackToTime() {\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n    TableMetadata base = readMetadata();\n    Snapshot firstSnapshot = base.currentSnapshot();\n    long firstSnapshotId = firstSnapshot.snapshotId();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_B)\n        .commit();\n    base = readMetadata();\n    Snapshot secondSnapshot = base.currentSnapshot();\n\n    \r\n    table.newAppend()\n        .appendFile(FILE_C)\n        .commit();\n    base = readMetadata();\n    Snapshot thirdSnapshot = base.currentSnapshot();\n\n    \r\n    table.manageSnapshots().rollbackToTime(secondSnapshot.timestampMillis()).commit();\n    base = readMetadata();\n\n    Assert.assertEquals(\"Should be at first snapshot\", firstSnapshotId, base.currentSnapshot().snapshotId());\n    Assert.assertEquals(\"Should have all three snapshots in the system\", 3, base.snapshots().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestWapWorkflow.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"f02ba32b368975f310438915f89b415ff6ff8cbc","commitMessage":"@@@Clean up TestWapWorkflow (#982)\n\n","date":"2020-04-29 08:56:28","modifiedFileCount":"1","status":"M","submitter":"Ratandeep Ratti"}]
