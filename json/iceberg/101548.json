[{"authorTime":"2019-07-27 05:06:30","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  static <T> UnboundPredicate<T> truncateInteger(\n      String name, BoundPredicate<Integer> pred, Transform<Integer, T> transform) {\n    int boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        \r\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary - 1));\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n        \r\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary + 1));\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(pred.op(), name, transform.apply(boundary));\n      default:\n        return null;\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":50,"groupId":"5100","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"truncateInteger","params":"(Stringname@BoundPredicate<Integer>pred@Transform<Integer@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c5/fd461f046c0fd029bb9d884c1957152b227cf1.src","preCode":"  static <T> UnboundPredicate<T> truncateInteger(\n      String name, BoundPredicate<Integer> pred, Transform<Integer, T> transform) {\n    int boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        \r\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary - 1));\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n        \r\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary + 1));\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(pred.op(), name, transform.apply(boundary));\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"NB"},{"authorDate":"2019-07-27 05:06:30","commitOrder":2,"curCode":"  static UnboundPredicate<Integer> truncateLongStrict(\n      String name, BoundPredicate<Long> pred, Transform<Long, Integer> transform) {\n    long boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        \r\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary) - 1);\n      case LT_EQ:\n        \r\n        if (transform.apply(boundary + 1L).equals(transform.apply(boundary))) {\n          \r\n          \r\n          return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary) - 1);\n        } else {\n          \r\n          \r\n          return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n        }\n      case GT:\n        \r\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary) + 1);\n      case GT_EQ:\n        \r\n        if (transform.apply(boundary - 1L).equals(transform.apply(boundary))) {\n          \r\n          \r\n          return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary) + 1);\n        } else {\n          \r\n          \r\n          return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n        }\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","date":"2019-07-27 05:06:30","endLine":137,"groupId":"3389","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"truncateLongStrict","params":"(Stringname@BoundPredicate<Long>pred@Transform<Long@Integer>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ef/1e0c3591ed7ff9996ab883d46f44ec4ab378fd.src","preCode":"  static UnboundPredicate<Integer> truncateLongStrict(\n      String name, BoundPredicate<Long> pred, Transform<Long, Integer> transform) {\n    long boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        \r\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary) - 1);\n      case LT_EQ:\n        \r\n        if (transform.apply(boundary + 1L).equals(transform.apply(boundary))) {\n          \r\n          \r\n          return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary) - 1);\n        } else {\n          \r\n          \r\n          return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n        }\n      case GT:\n        \r\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary) + 1);\n      case GT_EQ:\n        \r\n        if (transform.apply(boundary - 1L).equals(transform.apply(boundary))) {\n          \r\n          \r\n          return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary) + 1);\n        } else {\n          \r\n          \r\n          return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n        }\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"daf062053a87b2333bf2c0d2cd3c3676ab264989","commitMessage":"@@@Add projectStrict for Dates and Timestamps (#283)\n\n","date":"2019-07-27 05:06:30","modifiedFileCount":"5","status":"M","submitter":"moulimukherjee"},{"authorTime":"2019-08-03 01:52:27","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":3,"curCode":"  static <T> UnboundPredicate<T> truncateInteger(\n      String name, BoundPredicate<Integer> pred, Transform<Integer, T> transform) {\n    int boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        \r\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary - 1));\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n        \r\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary + 1));\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(pred.op(), name, transform.apply(boundary));\n      default:\n        return null;\n    }\n  }\n","date":"2019-03-21 07:25:05","endLine":50,"groupId":"5100","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"truncateInteger","params":"(Stringname@BoundPredicate<Integer>pred@Transform<Integer@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c5/fd461f046c0fd029bb9d884c1957152b227cf1.src","preCode":"  static <T> UnboundPredicate<T> truncateInteger(\n      String name, BoundPredicate<Integer> pred, Transform<Integer, T> transform) {\n    int boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        \r\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary - 1));\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n        \r\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary + 1));\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(pred.op(), name, transform.apply(boundary));\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"N"},{"authorDate":"2019-08-03 01:52:27","commitOrder":3,"curCode":"  static <T> UnboundPredicate<T> truncateLongStrict(\n      String name, BoundPredicate<Long> pred, Transform<Long, T> transform) {\n    long boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary));\n      case LT_EQ:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary + 1L));\n      case GT:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary));\n      case GT_EQ:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary - 1L));\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","date":"2019-08-03 01:52:27","endLine":97,"groupId":"2550","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"truncateLongStrict","params":"(Stringname@BoundPredicate<Long>pred@Transform<Long@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/84/f604c38ec8aee85e5398b496e02712ff16d208.src","preCode":"  static UnboundPredicate<Integer> truncateLongStrict(\n      String name, BoundPredicate<Long> pred, Transform<Long, Integer> transform) {\n    long boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        \r\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary) - 1);\n      case LT_EQ:\n        \r\n        if (transform.apply(boundary + 1L).equals(transform.apply(boundary))) {\n          \r\n          \r\n          return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary) - 1);\n        } else {\n          \r\n          \r\n          return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n        }\n      case GT:\n        \r\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary) + 1);\n      case GT_EQ:\n        \r\n        if (transform.apply(boundary - 1L).equals(transform.apply(boundary))) {\n          \r\n          \r\n          return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary) + 1);\n        } else {\n          \r\n          \r\n          return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n        }\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"1a9bb2c4863ebf363e5aa347543125d3c184a32d","commitMessage":"@@@Add strict projections for Truncate transformations (#332)\n\nThis also includes new tests for residual evaluation.","date":"2019-08-03 01:52:27","modifiedFileCount":"4","status":"M","submitter":"moulimukherjee"},{"authorTime":"2019-11-21 01:58:39","codes":[{"authorDate":"2019-11-21 01:58:39","commitOrder":4,"curCode":"  static <T> UnboundPredicate<T> truncateInteger(\n      String name, BoundLiteralPredicate<Integer> pred, Transform<Integer, T> transform) {\n    int boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        \r\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary - 1));\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n        \r\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary + 1));\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(pred.op(), name, transform.apply(boundary));\n      default:\n        return null;\n    }\n  }\n","date":"2019-11-21 01:58:39","endLine":53,"groupId":"101548","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"truncateInteger","params":"(Stringname@BoundLiteralPredicate<Integer>pred@Transform<Integer@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/96/11f56c952f873e1458d46d8c49cd95a19252ac.src","preCode":"  static <T> UnboundPredicate<T> truncateInteger(\n      String name, BoundPredicate<Integer> pred, Transform<Integer, T> transform) {\n    int boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        \r\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary - 1));\n      case LT_EQ:\n        return predicate(Expression.Operation.LT_EQ, name, transform.apply(boundary));\n      case GT:\n        \r\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary + 1));\n      case GT_EQ:\n        return predicate(Expression.Operation.GT_EQ, name, transform.apply(boundary));\n      case EQ:\n        return predicate(pred.op(), name, transform.apply(boundary));\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2019-11-21 01:58:39","commitOrder":4,"curCode":"  static <T> UnboundPredicate<T> truncateLongStrict(\n      String name, BoundLiteralPredicate<Long> pred, Transform<Long, T> transform) {\n    long boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary));\n      case LT_EQ:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary + 1L));\n      case GT:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary));\n      case GT_EQ:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary - 1L));\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","date":"2019-11-21 01:58:39","endLine":97,"groupId":"101548","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"truncateLongStrict","params":"(Stringname@BoundLiteralPredicate<Long>pred@Transform<Long@T>transform)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/96/11f56c952f873e1458d46d8c49cd95a19252ac.src","preCode":"  static <T> UnboundPredicate<T> truncateLongStrict(\n      String name, BoundPredicate<Long> pred, Transform<Long, T> transform) {\n    long boundary = pred.literal().value();\n    switch (pred.op()) {\n      case LT:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary));\n      case LT_EQ:\n        return predicate(Expression.Operation.LT, name, transform.apply(boundary + 1L));\n      case GT:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary));\n      case GT_EQ:\n        return predicate(Expression.Operation.GT, name, transform.apply(boundary - 1L));\n      case NOT_EQ:\n        return predicate(Expression.Operation.NOT_EQ, name, transform.apply(boundary));\n      case EQ:\n        \r\n        return null;\n      default:\n        return null;\n    }\n  }\n","realPath":"api/src/main/java/org/apache/iceberg/transforms/ProjectionUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"94fdc7321407c22b143b9eab83d29179d12d1a6d","commitMessage":"@@@Refactor in and notIn expressions (#650)\n\n* Make BoundSetPredicate extend BoundPredicate\n* Remove visitor method for BoundSetPredicate\n* Add BoundUnaryPredicate\n* Add BoundPredicate subclass test and cast methods\n* Replace LiteralSet and CharSeqLiteralSet with CharSequenceSet\n* Implement all Set methods in CharSequenceSet","date":"2019-11-21 01:58:39","modifiedFileCount":"19","status":"M","submitter":"Ryan Blue"}]
