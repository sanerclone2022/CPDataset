[{"authorTime":"2019-05-18 03:19:29","codes":[{"authorDate":"2019-05-18 03:19:29","commitOrder":1,"curCode":"  private static void verify(long splitSize, long fileLen, List<List<Long>> offsetLenPairs) {\n    List<FileScanTask> tasks = Lists.newArrayList(\n        new FixedSizeSplitScanTaskIterator(splitSize, new MockFileScanTask(fileLen)));\n    for (int i = 0; i < tasks.size(); i++) {\n      FileScanTask task = tasks.get(i);\n      List<Long> split = offsetLenPairs.get(i);\n      long offset = split.get(0);\n      long length = split.get(1);\n      Assert.assertEquals(offset, task.start());\n      Assert.assertEquals(length, task.length());\n    }\n  }\n","date":"2019-05-18 03:19:29","endLine":50,"groupId":"2012","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"verify","params":"(longsplitSize@longfileLen@List<List<Long>>offsetLenPairs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ba/c47e04fbc9e929e09bdfad3870707b8e573c2d.src","preCode":"  private static void verify(long splitSize, long fileLen, List<List<Long>> offsetLenPairs) {\n    List<FileScanTask> tasks = Lists.newArrayList(\n        new FixedSizeSplitScanTaskIterator(splitSize, new MockFileScanTask(fileLen)));\n    for (int i = 0; i < tasks.size(); i++) {\n      FileScanTask task = tasks.get(i);\n      List<Long> split = offsetLenPairs.get(i);\n      long offset = split.get(0);\n      long length = split.get(1);\n      Assert.assertEquals(offset, task.start());\n      Assert.assertEquals(length, task.length());\n    }\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestFixedSizeSplitScanTaskIterator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"},{"authorDate":"2019-05-18 03:19:29","commitOrder":1,"curCode":"  private static void verify(List<Long> offsetRanges, long fileLen, List<List<Long>> offsetLenPairs) {\n    List<FileScanTask> tasks = Lists.newArrayList(\n            new BaseFileScanTask.OffsetsBasedSplitScanTaskIterator(offsetRanges, new MockFileScanTask(fileLen)));\n    Assert.assertEquals(\"Number of tasks don't match\", offsetLenPairs.size(), tasks.size());\n    for (int i = 0; i < tasks.size(); i++) {\n      FileScanTask task = tasks.get(i);\n      List<Long> split = offsetLenPairs.get(i);\n      long offset = split.get(0);\n      long length = split.get(1);\n      Assert.assertEquals(offset, task.start());\n      Assert.assertEquals(length, task.length());\n    }\n  }\n","date":"2019-05-18 03:19:29","endLine":57,"groupId":"2012","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verify","params":"(List<Long>offsetRanges@longfileLen@List<List<Long>>offsetLenPairs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/0b/70ebbf83c3f94cf1c333541c3d226d943868ce.src","preCode":"  private static void verify(List<Long> offsetRanges, long fileLen, List<List<Long>> offsetLenPairs) {\n    List<FileScanTask> tasks = Lists.newArrayList(\n            new BaseFileScanTask.OffsetsBasedSplitScanTaskIterator(offsetRanges, new MockFileScanTask(fileLen)));\n    Assert.assertEquals(\"Number of tasks don't match\", offsetLenPairs.size(), tasks.size());\n    for (int i = 0; i < tasks.size(); i++) {\n      FileScanTask task = tasks.get(i);\n      List<Long> split = offsetLenPairs.get(i);\n      long offset = split.get(0);\n      long length = split.get(1);\n      Assert.assertEquals(offset, task.start());\n      Assert.assertEquals(length, task.length());\n    }\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestOffsetsBasedSplitScanTaskIterator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"}],"commitId":"462bd310a274093daba1edef00eefb236c20ae62","commitMessage":"@@@Split Parquet tasks at row group boundaries (#188)\n\n","date":"2019-05-18 03:19:29","modifiedFileCount":"4","status":"B","submitter":"Samarth Jain"},{"authorTime":"2019-06-05 02:29:34","codes":[{"authorDate":"2019-05-18 03:19:29","commitOrder":2,"curCode":"  private static void verify(long splitSize, long fileLen, List<List<Long>> offsetLenPairs) {\n    List<FileScanTask> tasks = Lists.newArrayList(\n        new FixedSizeSplitScanTaskIterator(splitSize, new MockFileScanTask(fileLen)));\n    for (int i = 0; i < tasks.size(); i++) {\n      FileScanTask task = tasks.get(i);\n      List<Long> split = offsetLenPairs.get(i);\n      long offset = split.get(0);\n      long length = split.get(1);\n      Assert.assertEquals(offset, task.start());\n      Assert.assertEquals(length, task.length());\n    }\n  }\n","date":"2019-05-18 03:19:29","endLine":50,"groupId":"101776","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"verify","params":"(longsplitSize@longfileLen@List<List<Long>>offsetLenPairs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ba/c47e04fbc9e929e09bdfad3870707b8e573c2d.src","preCode":"  private static void verify(long splitSize, long fileLen, List<List<Long>> offsetLenPairs) {\n    List<FileScanTask> tasks = Lists.newArrayList(\n        new FixedSizeSplitScanTaskIterator(splitSize, new MockFileScanTask(fileLen)));\n    for (int i = 0; i < tasks.size(); i++) {\n      FileScanTask task = tasks.get(i);\n      List<Long> split = offsetLenPairs.get(i);\n      long offset = split.get(0);\n      long length = split.get(1);\n      Assert.assertEquals(offset, task.start());\n      Assert.assertEquals(length, task.length());\n    }\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestFixedSizeSplitScanTaskIterator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"N"},{"authorDate":"2019-06-05 02:29:34","commitOrder":2,"curCode":"  private static void verify(List<Long> offsetRanges, long fileLen,\n                             long targetSplitSize, List<List<Long>> offsetLenPairs) {\n    List<FileScanTask> tasks = Lists.newArrayList(\n        new BaseFileScanTask.OffsetsAwareTargetSplitSizeScanTaskIterator(\n            offsetRanges, new MockFileScanTask(fileLen), targetSplitSize));\n    Assert.assertEquals(\"Number of tasks don't match\", offsetLenPairs.size(), tasks.size());\n    for (int i = 0; i < tasks.size(); i++) {\n      FileScanTask task = tasks.get(i);\n      List<Long> split = offsetLenPairs.get(i);\n      long offset = split.get(0);\n      long length = split.get(1);\n      Assert.assertEquals(offset, task.start());\n      Assert.assertEquals(length, task.length());\n    }\n  }\n","date":"2019-06-05 02:29:34","endLine":68,"groupId":"101776","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"verify","params":"(List<Long>offsetRanges@longfileLen@longtargetSplitSize@List<List<Long>>offsetLenPairs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f5/524c89c0b83568cfa210332f94f5c630c82c5b.src","preCode":"  private static void verify(List<Long> offsetRanges, long fileLen, List<List<Long>> offsetLenPairs) {\n    List<FileScanTask> tasks = Lists.newArrayList(\n            new BaseFileScanTask.OffsetsBasedSplitScanTaskIterator(offsetRanges, new MockFileScanTask(fileLen)));\n    Assert.assertEquals(\"Number of tasks don't match\", offsetLenPairs.size(), tasks.size());\n    for (int i = 0; i < tasks.size(); i++) {\n      FileScanTask task = tasks.get(i);\n      List<Long> split = offsetLenPairs.get(i);\n      long offset = split.get(0);\n      long length = split.get(1);\n      Assert.assertEquals(offset, task.start());\n      Assert.assertEquals(length, task.length());\n    }\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestOffsetsBasedSplitScanTaskIterator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"7cde6091d8970f70fecee29d39797a9d562ff9f4","commitMessage":"@@@Plan splits using both offsets and target size (#204)\n\n","date":"2019-06-05 02:29:34","modifiedFileCount":"2","status":"M","submitter":"Samarth Jain"}]
