[{"authorTime":"2021-03-29 11:11:09","codes":[{"authorDate":"2021-03-29 11:11:09","commitOrder":1,"curCode":"  public void testReplaceEqualityDeletesWithPositionDeletes() {\n    Assume.assumeTrue(\"Rewriting delete files is only supported in iceberg format v2. \", formatVersion > 1);\n\n    table.newRowDelta()\n        .addRows(FILE_A2)\n        .addDeletes(FILE_A2_DELETES)\n        .commit();\n\n    TableMetadata metadata = readMetadata();\n    long baseSnapshotId = metadata.currentSnapshot().snapshotId();\n\n    \r\n    RewriteFiles rewrite = table.newRewrite().rewriteFiles(\n        ImmutableSet.of(), ImmutableSet.of(FILE_A2_DELETES),\n        ImmutableSet.of(), ImmutableSet.of(FILE_B_DELETES)\n    );\n    Snapshot pending = rewrite.apply();\n\n    Assert.assertEquals(\"Should produce 3 manifests\", 3, pending.allManifests().size());\n    ManifestFile manifest1 = pending.allManifests().get(0);\n    ManifestFile manifest2 = pending.allManifests().get(1);\n    ManifestFile manifest3 = pending.allManifests().get(2);\n\n    validateManifestEntries(manifest1,\n        ids(baseSnapshotId),\n        files(FILE_A2),\n        statuses(ADDED));\n\n    validateDeleteManifest(manifest2,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_B_DELETES),\n        statuses(ADDED));\n\n    validateDeleteManifest(manifest3,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_A2_DELETES),\n        statuses(DELETED));\n\n    rewrite.commit();\n\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest1.path()).exists());\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest2.path()).exists());\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest3.path()).exists());\n\n    metadata = readMetadata();\n    List<ManifestFile> committedManifests = Lists.newArrayList(manifest1, manifest2, manifest3);\n    Assert.assertEquals(\"Should committed the manifests\",\n        metadata.currentSnapshot().allManifests(), committedManifests);\n\n    \r\n    Assert.assertEquals(\"4 manifests should exist\", 4, listManifestFiles().size());\n  }\n","date":"2021-03-29 11:11:09","endLine":496,"groupId":"981","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReplaceEqualityDeletesWithPositionDeletes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/2b/dc9f2c494047c1041268d32506ea1b8129af0e.src","preCode":"  public void testReplaceEqualityDeletesWithPositionDeletes() {\n    Assume.assumeTrue(\"Rewriting delete files is only supported in iceberg format v2. \", formatVersion > 1);\n\n    table.newRowDelta()\n        .addRows(FILE_A2)\n        .addDeletes(FILE_A2_DELETES)\n        .commit();\n\n    TableMetadata metadata = readMetadata();\n    long baseSnapshotId = metadata.currentSnapshot().snapshotId();\n\n    \r\n    RewriteFiles rewrite = table.newRewrite().rewriteFiles(\n        ImmutableSet.of(), ImmutableSet.of(FILE_A2_DELETES),\n        ImmutableSet.of(), ImmutableSet.of(FILE_B_DELETES)\n    );\n    Snapshot pending = rewrite.apply();\n\n    Assert.assertEquals(\"Should produce 3 manifests\", 3, pending.allManifests().size());\n    ManifestFile manifest1 = pending.allManifests().get(0);\n    ManifestFile manifest2 = pending.allManifests().get(1);\n    ManifestFile manifest3 = pending.allManifests().get(2);\n\n    validateManifestEntries(manifest1,\n        ids(baseSnapshotId),\n        files(FILE_A2),\n        statuses(ADDED));\n\n    validateDeleteManifest(manifest2,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_B_DELETES),\n        statuses(ADDED));\n\n    validateDeleteManifest(manifest3,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_A2_DELETES),\n        statuses(DELETED));\n\n    rewrite.commit();\n\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest1.path()).exists());\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest2.path()).exists());\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest3.path()).exists());\n\n    metadata = readMetadata();\n    List<ManifestFile> committedManifests = Lists.newArrayList(manifest1, manifest2, manifest3);\n    Assert.assertEquals(\"Should committed the manifests\",\n        metadata.currentSnapshot().allManifests(), committedManifests);\n\n    \r\n    Assert.assertEquals(\"4 manifests should exist\", 4, listManifestFiles().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestRewriteFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"B"},{"authorDate":"2021-03-29 11:11:09","commitOrder":1,"curCode":"  public void testRemoveAllDeletes() {\n    Assume.assumeTrue(\"Rewriting delete files is only supported in iceberg format v2. \", formatVersion > 1);\n\n    table.newRowDelta()\n        .addRows(FILE_A)\n        .addDeletes(FILE_A_DELETES)\n        .commit();\n\n    \r\n    RewriteFiles rewrite = table.newRewrite().rewriteFiles(\n        ImmutableSet.of(FILE_A), ImmutableSet.of(FILE_A_DELETES),\n        ImmutableSet.of(), ImmutableSet.of()\n    );\n    Snapshot pending = rewrite.apply();\n\n    Assert.assertEquals(\"Should produce 2 manifests\", 2, pending.allManifests().size());\n    ManifestFile manifest1 = pending.allManifests().get(0);\n    ManifestFile manifest2 = pending.allManifests().get(1);\n\n    validateManifestEntries(manifest1,\n        ids(pending.snapshotId()),\n        files(FILE_A),\n        statuses(DELETED));\n\n    validateDeleteManifest(manifest2,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_A_DELETES),\n        statuses(DELETED));\n\n    rewrite.commit();\n\n    Assert.assertTrue(\"Should reuse the new manifest\", new File(manifest1.path()).exists());\n    Assert.assertTrue(\"Should reuse the new manifest\", new File(manifest2.path()).exists());\n\n    TableMetadata metadata = readMetadata();\n    List<ManifestFile> committedManifests = Lists.newArrayList(manifest1, manifest2);\n    Assert.assertTrue(\"Should committed the manifests\",\n        metadata.currentSnapshot().allManifests().containsAll(committedManifests));\n\n    \r\n    Assert.assertEquals(\"4 manifests should exist\", 4, listManifestFiles().size());\n  }\n","date":"2021-03-29 11:11:09","endLine":541,"groupId":"982","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveAllDeletes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/2b/dc9f2c494047c1041268d32506ea1b8129af0e.src","preCode":"  public void testRemoveAllDeletes() {\n    Assume.assumeTrue(\"Rewriting delete files is only supported in iceberg format v2. \", formatVersion > 1);\n\n    table.newRowDelta()\n        .addRows(FILE_A)\n        .addDeletes(FILE_A_DELETES)\n        .commit();\n\n    \r\n    RewriteFiles rewrite = table.newRewrite().rewriteFiles(\n        ImmutableSet.of(FILE_A), ImmutableSet.of(FILE_A_DELETES),\n        ImmutableSet.of(), ImmutableSet.of()\n    );\n    Snapshot pending = rewrite.apply();\n\n    Assert.assertEquals(\"Should produce 2 manifests\", 2, pending.allManifests().size());\n    ManifestFile manifest1 = pending.allManifests().get(0);\n    ManifestFile manifest2 = pending.allManifests().get(1);\n\n    validateManifestEntries(manifest1,\n        ids(pending.snapshotId()),\n        files(FILE_A),\n        statuses(DELETED));\n\n    validateDeleteManifest(manifest2,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_A_DELETES),\n        statuses(DELETED));\n\n    rewrite.commit();\n\n    Assert.assertTrue(\"Should reuse the new manifest\", new File(manifest1.path()).exists());\n    Assert.assertTrue(\"Should reuse the new manifest\", new File(manifest2.path()).exists());\n\n    TableMetadata metadata = readMetadata();\n    List<ManifestFile> committedManifests = Lists.newArrayList(manifest1, manifest2);\n    Assert.assertTrue(\"Should committed the manifests\",\n        metadata.currentSnapshot().allManifests().containsAll(committedManifests));\n\n    \r\n    Assert.assertEquals(\"4 manifests should exist\", 4, listManifestFiles().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestRewriteFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":499,"status":"B"}],"commitId":"7a0954f3989f9b76361491aff7610c96c1194dc5","commitMessage":"@@@Core: Support rewriting delete files. (#2294)\n\n","date":"2021-03-29 11:11:09","modifiedFileCount":"4","status":"B","submitter":"openinx"},{"authorTime":"2021-07-27 23:59:53","codes":[{"authorDate":"2021-03-29 11:11:09","commitOrder":2,"curCode":"  public void testReplaceEqualityDeletesWithPositionDeletes() {\n    Assume.assumeTrue(\"Rewriting delete files is only supported in iceberg format v2. \", formatVersion > 1);\n\n    table.newRowDelta()\n        .addRows(FILE_A2)\n        .addDeletes(FILE_A2_DELETES)\n        .commit();\n\n    TableMetadata metadata = readMetadata();\n    long baseSnapshotId = metadata.currentSnapshot().snapshotId();\n\n    \r\n    RewriteFiles rewrite = table.newRewrite().rewriteFiles(\n        ImmutableSet.of(), ImmutableSet.of(FILE_A2_DELETES),\n        ImmutableSet.of(), ImmutableSet.of(FILE_B_DELETES)\n    );\n    Snapshot pending = rewrite.apply();\n\n    Assert.assertEquals(\"Should produce 3 manifests\", 3, pending.allManifests().size());\n    ManifestFile manifest1 = pending.allManifests().get(0);\n    ManifestFile manifest2 = pending.allManifests().get(1);\n    ManifestFile manifest3 = pending.allManifests().get(2);\n\n    validateManifestEntries(manifest1,\n        ids(baseSnapshotId),\n        files(FILE_A2),\n        statuses(ADDED));\n\n    validateDeleteManifest(manifest2,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_B_DELETES),\n        statuses(ADDED));\n\n    validateDeleteManifest(manifest3,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_A2_DELETES),\n        statuses(DELETED));\n\n    rewrite.commit();\n\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest1.path()).exists());\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest2.path()).exists());\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest3.path()).exists());\n\n    metadata = readMetadata();\n    List<ManifestFile> committedManifests = Lists.newArrayList(manifest1, manifest2, manifest3);\n    Assert.assertEquals(\"Should committed the manifests\",\n        metadata.currentSnapshot().allManifests(), committedManifests);\n\n    \r\n    Assert.assertEquals(\"4 manifests should exist\", 4, listManifestFiles().size());\n  }\n","date":"2021-03-29 11:11:09","endLine":496,"groupId":"101969","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReplaceEqualityDeletesWithPositionDeletes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/2b/dc9f2c494047c1041268d32506ea1b8129af0e.src","preCode":"  public void testReplaceEqualityDeletesWithPositionDeletes() {\n    Assume.assumeTrue(\"Rewriting delete files is only supported in iceberg format v2. \", formatVersion > 1);\n\n    table.newRowDelta()\n        .addRows(FILE_A2)\n        .addDeletes(FILE_A2_DELETES)\n        .commit();\n\n    TableMetadata metadata = readMetadata();\n    long baseSnapshotId = metadata.currentSnapshot().snapshotId();\n\n    \r\n    RewriteFiles rewrite = table.newRewrite().rewriteFiles(\n        ImmutableSet.of(), ImmutableSet.of(FILE_A2_DELETES),\n        ImmutableSet.of(), ImmutableSet.of(FILE_B_DELETES)\n    );\n    Snapshot pending = rewrite.apply();\n\n    Assert.assertEquals(\"Should produce 3 manifests\", 3, pending.allManifests().size());\n    ManifestFile manifest1 = pending.allManifests().get(0);\n    ManifestFile manifest2 = pending.allManifests().get(1);\n    ManifestFile manifest3 = pending.allManifests().get(2);\n\n    validateManifestEntries(manifest1,\n        ids(baseSnapshotId),\n        files(FILE_A2),\n        statuses(ADDED));\n\n    validateDeleteManifest(manifest2,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_B_DELETES),\n        statuses(ADDED));\n\n    validateDeleteManifest(manifest3,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_A2_DELETES),\n        statuses(DELETED));\n\n    rewrite.commit();\n\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest1.path()).exists());\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest2.path()).exists());\n    Assert.assertTrue(\"Should reuse new manifest\", new File(manifest3.path()).exists());\n\n    metadata = readMetadata();\n    List<ManifestFile> committedManifests = Lists.newArrayList(manifest1, manifest2, manifest3);\n    Assert.assertEquals(\"Should committed the manifests\",\n        metadata.currentSnapshot().allManifests(), committedManifests);\n\n    \r\n    Assert.assertEquals(\"4 manifests should exist\", 4, listManifestFiles().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestRewriteFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"},{"authorDate":"2021-07-27 23:59:53","commitOrder":2,"curCode":"  public void testRemoveAllDeletes() {\n    Assume.assumeTrue(\"Rewriting delete files is only supported in iceberg format v2. \", formatVersion > 1);\n\n    table.newRowDelta()\n        .addRows(FILE_A)\n        .addDeletes(FILE_A_DELETES)\n        .commit();\n\n    \r\n    RewriteFiles rewrite = table.newRewrite()\n        .validateFromSnapshot(table.currentSnapshot().snapshotId())\n        .rewriteFiles(\n            ImmutableSet.of(FILE_A), ImmutableSet.of(FILE_A_DELETES),\n            ImmutableSet.of(), ImmutableSet.of()\n        );\n    Snapshot pending = rewrite.apply();\n\n    Assert.assertEquals(\"Should produce 2 manifests\", 2, pending.allManifests().size());\n    ManifestFile manifest1 = pending.allManifests().get(0);\n    ManifestFile manifest2 = pending.allManifests().get(1);\n\n    validateManifestEntries(manifest1,\n        ids(pending.snapshotId()),\n        files(FILE_A),\n        statuses(DELETED));\n\n    validateDeleteManifest(manifest2,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_A_DELETES),\n        statuses(DELETED));\n\n    rewrite.commit();\n\n    Assert.assertTrue(\"Should reuse the new manifest\", new File(manifest1.path()).exists());\n    Assert.assertTrue(\"Should reuse the new manifest\", new File(manifest2.path()).exists());\n\n    TableMetadata metadata = readMetadata();\n    List<ManifestFile> committedManifests = Lists.newArrayList(manifest1, manifest2);\n    Assert.assertTrue(\"Should committed the manifests\",\n        metadata.currentSnapshot().allManifests().containsAll(committedManifests));\n\n    \r\n    Assert.assertEquals(\"4 manifests should exist\", 4, listManifestFiles().size());\n  }\n","date":"2021-07-27 23:59:53","endLine":546,"groupId":"101969","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testRemoveAllDeletes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/19/b97fad91e35d614ea456408ece3f96eedff3db.src","preCode":"  public void testRemoveAllDeletes() {\n    Assume.assumeTrue(\"Rewriting delete files is only supported in iceberg format v2. \", formatVersion > 1);\n\n    table.newRowDelta()\n        .addRows(FILE_A)\n        .addDeletes(FILE_A_DELETES)\n        .commit();\n\n    \r\n    RewriteFiles rewrite = table.newRewrite().rewriteFiles(\n        ImmutableSet.of(FILE_A), ImmutableSet.of(FILE_A_DELETES),\n        ImmutableSet.of(), ImmutableSet.of()\n    );\n    Snapshot pending = rewrite.apply();\n\n    Assert.assertEquals(\"Should produce 2 manifests\", 2, pending.allManifests().size());\n    ManifestFile manifest1 = pending.allManifests().get(0);\n    ManifestFile manifest2 = pending.allManifests().get(1);\n\n    validateManifestEntries(manifest1,\n        ids(pending.snapshotId()),\n        files(FILE_A),\n        statuses(DELETED));\n\n    validateDeleteManifest(manifest2,\n        seqs(2),\n        ids(pending.snapshotId()),\n        files(FILE_A_DELETES),\n        statuses(DELETED));\n\n    rewrite.commit();\n\n    Assert.assertTrue(\"Should reuse the new manifest\", new File(manifest1.path()).exists());\n    Assert.assertTrue(\"Should reuse the new manifest\", new File(manifest2.path()).exists());\n\n    TableMetadata metadata = readMetadata();\n    List<ManifestFile> committedManifests = Lists.newArrayList(manifest1, manifest2);\n    Assert.assertTrue(\"Should committed the manifests\",\n        metadata.currentSnapshot().allManifests().containsAll(committedManifests));\n\n    \r\n    Assert.assertEquals(\"4 manifests should exist\", 4, listManifestFiles().size());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestRewriteFiles.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"M"}],"commitId":"a1bd63d56751999ecee89b871992d7bac395fd52","commitMessage":"@@@Core: Add validation for row-level deletes with rewrites (#2865)\n\n","date":"2021-07-27 23:59:53","modifiedFileCount":"10","status":"M","submitter":"Ryan Blue"}]
