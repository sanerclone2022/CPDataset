[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-06-11 05:22:35","commitOrder":2,"curCode":"  public void testAppendManifestCleanup() throws IOException {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n    AppendFiles append = table.newAppend().appendManifest(manifest);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.manifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","date":"2019-06-11 05:22:35","endLine":424,"groupId":"719","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendManifestCleanup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/64/d8948e40de832d06ba83dc06c737b0c0b0f27e.src","preCode":"  public void testAppendManifestCleanup() throws IOException {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n    AppendFiles append = table.newAppend().appendManifest(manifest);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.manifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMergeAppend.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":409,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  public void testFailure() {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    AppendFiles append = table.newFastAppend().appendFile(FILE_B);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.manifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","date":"2019-03-21 07:25:05","endLine":171,"groupId":"719","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f0/36a8543a12859116298d9cef948d5aa0613f76.src","preCode":"  public void testFailure() {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    AppendFiles append = table.newFastAppend().appendFile(FILE_B);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.manifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestFastAppend.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"NB"}],"commitId":"6ac23e03735d4514480a9f0155200faf7179f21b","commitMessage":"@@@Add appendManifest to AppendFiles API (#201)\n\nThis is intended for writers that need to checkpoint state. Writers that checkpoint should be able to create manifest files and append the contents of those manifests to a table.  instead of checkpointing\nindividual data files.","date":"2019-06-11 05:22:35","modifiedFileCount":"9","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-06-03 03:43:03","codes":[{"authorDate":"2020-06-03 03:43:03","commitOrder":3,"curCode":"  public void testAppendManifestCleanup() throws IOException {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n    AppendFiles append = table.newAppend().appendManifest(manifest);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.allManifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","date":"2020-06-03 03:43:03","endLine":507,"groupId":"719","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendManifestCleanup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/bc/6c6a3d5bc29e3bac1de485296afb17bde3e6ab.src","preCode":"  public void testAppendManifestCleanup() throws IOException {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n    AppendFiles append = table.newAppend().appendManifest(manifest);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.manifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMergeAppend.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":492,"status":"M"},{"authorDate":"2020-06-03 03:43:03","commitOrder":3,"curCode":"  public void testFailure() {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    AppendFiles append = table.newFastAppend().appendFile(FILE_B);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.allManifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","date":"2020-06-03 03:43:03","endLine":256,"groupId":"719","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/7d/48922dd22d902894215c9448de5a716fcc12f0.src","preCode":"  public void testFailure() {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    AppendFiles append = table.newFastAppend().appendFile(FILE_B);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.manifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestFastAppend.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"M"}],"commitId":"482f420141486f5b7b02bd62dc14cdb94b9a9cca","commitMessage":"@@@Split Snapshot.manifests into dataManifests and deleteManifests (#1080)\n\nThis replaces all calls to Snapshot.manifests with calls to one of 3 new methods:\n\n* `Snapshot.allManifests` returns both delete and data manifests\n* `Snapshot.deleteManifests` returns only delete manifests\n* `Snapshot.dataManifests` returns only data manifests\n\nExisting references mostly use either `allManifests` or `dataManifests`.  depending on the context. For example.  tests with assertions for the number of manifests use `allManifests` because the test cases should validate there are no new delete manifests.  but other tests that validate rewritten manifests are deleted use `dataManifests` because only data manifests are rewritten and deleted.\n\nThis tries to make minimal changes that preserve the current behavior. Operations are not updated to support delete manifests (rewrite still only rewrites data manifests).  but will carry through the list of delete manifests correctly.","date":"2020-06-03 03:43:03","modifiedFileCount":"46","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-06-03 03:43:03","codes":[{"authorDate":"2020-08-08 09:28:52","commitOrder":4,"curCode":"  public void testAppendManifestCleanup() throws IOException {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n    AppendFiles append = table.newAppend().appendManifest(manifest);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.allManifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n    V2Assert.assertEquals(\"Last sequence number should be 0\", 0, readMetadata().lastSequenceNumber());\n    V1Assert.assertEquals(\"Table should end with last-sequence-number 0\", 0, readMetadata().lastSequenceNumber());\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","date":"2020-08-08 09:28:52","endLine":849,"groupId":"101818","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendManifestCleanup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e8/8f9bf12c6bf66e32edccb75c5866b62815a9c4.src","preCode":"  public void testAppendManifestCleanup() throws IOException {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n    AppendFiles append = table.newAppend().appendManifest(manifest);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.allManifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMergeAppend.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":832,"status":"M"},{"authorDate":"2020-06-03 03:43:03","commitOrder":4,"curCode":"  public void testFailure() {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    AppendFiles append = table.newFastAppend().appendFile(FILE_B);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.allManifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","date":"2020-06-03 03:43:03","endLine":256,"groupId":"101818","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/7d/48922dd22d902894215c9448de5a716fcc12f0.src","preCode":"  public void testFailure() {\n    \r\n    TestTables.TestTableOperations ops = table.ops();\n    ops.failCommits(5);\n\n    AppendFiles append = table.newFastAppend().appendFile(FILE_B);\n    Snapshot pending = append.apply();\n    ManifestFile newManifest = pending.allManifests().get(0);\n    Assert.assertTrue(\"Should create new manifest\", new File(newManifest.path()).exists());\n\n    AssertHelpers.assertThrows(\"Should retry 4 times and throw last failure\",\n        CommitFailedException.class, \"Injected failure\", append::commit);\n\n    Assert.assertFalse(\"Should clean up new manifest\", new File(newManifest.path()).exists());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestFastAppend.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"N"}],"commitId":"a624f6f247eb7ef5c3d6446ab98d400025d96176","commitMessage":"@@@Core: Add sequence number assertions in merge append tests (#1101)\n\n","date":"2020-08-08 09:28:52","modifiedFileCount":"2","status":"M","submitter":"Chen Junjie"}]
