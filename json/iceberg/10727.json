[{"authorTime":"2020-06-20 09:02:23","codes":[{"authorDate":"2020-06-30 08:56:05","commitOrder":2,"curCode":"  public static void assertEqualsSafe(Types.StructType struct,\n                                      List<Record> expected, List<Row> actual) {\n    \r\n    int numRecords = Math.min(expected.size(), actual.size());\n    for (int i = 0; i < numRecords; i += 1) {\n      TestHelpers.assertEqualsSafe(struct, expected.get(i), actual.get(i));\n    }\n    Assert.assertEquals(\"Number of results should match expected\", expected.size(), actual.size());\n  }\n","date":"2020-06-30 08:56:05","endLine":493,"groupId":"2690","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEqualsSafe","params":"(Types.StructTypestruct@List<Record>expected@List<Row>actual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/7d/d308dcbed19b9615af2fe851dd00df86c8c855.src","preCode":"  public static void assertEqualsSafe(Types.StructType struct,\n                                      List<Record> expected, List<Row> actual) {\n    \r\n    int numRecords = Math.min(expected.size(), actual.size());\n    for (int i = 0; i < numRecords; i += 1) {\n      TestHelpers.assertEqualsSafe(struct, expected.get(i), actual.get(i));\n    }\n    Assert.assertEquals(\"Number of results should match expected\", expected.size(), actual.size());\n  }\n","realPath":"spark3/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":485,"status":"B"},{"authorDate":"2020-06-20 09:02:23","commitOrder":2,"curCode":"  public static void assertEqualsSafe(Types.StructType struct,\n                                      List<Record> expected, List<Row> actual) {\n    \r\n    int numRecords = Math.min(expected.size(), actual.size());\n    for (int i = 0; i < numRecords; i += 1) {\n      GenericsHelpers.assertEqualsSafe(struct, expected.get(i), actual.get(i));\n    }\n    Assert.assertEquals(\"Number of results should match expected\", expected.size(), actual.size());\n  }\n","date":"2020-06-20 09:02:23","endLine":554,"groupId":"2690","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualsSafe","params":"(Types.StructTypestruct@List<Record>expected@List<Row>actual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c0/d676ec8aa99c9101f89d24d70e070468572cda.src","preCode":"  public static void assertEqualsSafe(Types.StructType struct,\n                                      List<Record> expected, List<Row> actual) {\n    \r\n    int numRecords = Math.min(expected.size(), actual.size());\n    for (int i = 0; i < numRecords; i += 1) {\n      GenericsHelpers.assertEqualsSafe(struct, expected.get(i), actual.get(i));\n    }\n    Assert.assertEquals(\"Number of results should match expected\", expected.size(), actual.size());\n  }\n","realPath":"spark2/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":546,"status":"NB"}],"commitId":"51c930e33867e54b3d7e0159b11d6b9c4bc81f1a","commitMessage":"@@@Spark: Add Spark 3 data source classes (#1124)\n\n","date":"2020-06-30 08:56:05","modifiedFileCount":"7","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-06-20 09:02:23","codes":[{"authorDate":"2020-07-14 05:27:36","commitOrder":3,"curCode":"  public static void assertEqualsSafe(Types.StructType struct,\n                                      List<Record> expected, List<Row> actual) {\n    \r\n    int numRecords = Math.min(expected.size(), actual.size());\n    for (int i = 0; i < numRecords; i += 1) {\n      GenericsHelpers.assertEqualsSafe(struct, expected.get(i), actual.get(i));\n    }\n    Assert.assertEquals(\"Number of results should match expected\", expected.size(), actual.size());\n  }\n","date":"2020-07-14 05:27:36","endLine":511,"groupId":"10727","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEqualsSafe","params":"(Types.StructTypestruct@List<Record>expected@List<Row>actual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/9b/e99383873ff072f8b9a1577c9034bf17a6d465.src","preCode":"  public static void assertEqualsSafe(Types.StructType struct,\n                                      List<Record> expected, List<Row> actual) {\n    \r\n    int numRecords = Math.min(expected.size(), actual.size());\n    for (int i = 0; i < numRecords; i += 1) {\n      TestHelpers.assertEqualsSafe(struct, expected.get(i), actual.get(i));\n    }\n    Assert.assertEquals(\"Number of results should match expected\", expected.size(), actual.size());\n  }\n","realPath":"spark3/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":503,"status":"M"},{"authorDate":"2020-06-20 09:02:23","commitOrder":3,"curCode":"  public static void assertEqualsSafe(Types.StructType struct,\n                                      List<Record> expected, List<Row> actual) {\n    \r\n    int numRecords = Math.min(expected.size(), actual.size());\n    for (int i = 0; i < numRecords; i += 1) {\n      GenericsHelpers.assertEqualsSafe(struct, expected.get(i), actual.get(i));\n    }\n    Assert.assertEquals(\"Number of results should match expected\", expected.size(), actual.size());\n  }\n","date":"2020-06-20 09:02:23","endLine":554,"groupId":"10727","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualsSafe","params":"(Types.StructTypestruct@List<Record>expected@List<Row>actual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c0/d676ec8aa99c9101f89d24d70e070468572cda.src","preCode":"  public static void assertEqualsSafe(Types.StructType struct,\n                                      List<Record> expected, List<Row> actual) {\n    \r\n    int numRecords = Math.min(expected.size(), actual.size());\n    for (int i = 0; i < numRecords; i += 1) {\n      GenericsHelpers.assertEqualsSafe(struct, expected.get(i), actual.get(i));\n    }\n    Assert.assertEquals(\"Number of results should match expected\", expected.size(), actual.size());\n  }\n","realPath":"spark2/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":546,"status":"N"}],"commitId":"6fab8f57bdb7e5fe7eadc3ff41558581338e1b69","commitMessage":"@@@Spark: Support ORC vectorized reads (#1189)\n\n","date":"2020-07-14 05:27:36","modifiedFileCount":"25","status":"M","submitter":"Shardul Mahadik"}]
