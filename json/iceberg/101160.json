[{"authorTime":"2019-06-13 03:59:00","codes":[{"authorDate":"2019-06-13 03:59:00","commitOrder":1,"curCode":"  public void testMultipleTimestampPartitions() {\n    TestHelpers.assertThrows(\"Should not allow year(ts) and year(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").year(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow year(ts) and month(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").month(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow year(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").day(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow year(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").hour(\"ts\").build());\n\n    TestHelpers.assertThrows(\"Should not allow month(ts) and month(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").month(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow month(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").day(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow month(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").hour(\"ts\").build());\n\n    TestHelpers.assertThrows(\"Should not allow day(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"ts\").day(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow day(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"ts\").hour(\"ts\").build());\n\n    TestHelpers.assertThrows(\"Should not allow hour(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).hour(\"ts\").hour(\"ts\").build());\n  }\n","date":"2019-06-13 03:59:00","endLine":70,"groupId":"1997","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultipleTimestampPartitions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/24/a5716ba08a68a308070c8c576767110dcc68ba.src","preCode":"  public void testMultipleTimestampPartitions() {\n    TestHelpers.assertThrows(\"Should not allow year(ts) and year(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").year(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow year(ts) and month(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").month(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow year(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").day(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow year(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").hour(\"ts\").build());\n\n    TestHelpers.assertThrows(\"Should not allow month(ts) and month(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").month(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow month(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").day(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow month(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").hour(\"ts\").build());\n\n    TestHelpers.assertThrows(\"Should not allow day(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"ts\").day(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow day(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"ts\").hour(\"ts\").build());\n\n    TestHelpers.assertThrows(\"Should not allow hour(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).hour(\"ts\").hour(\"ts\").build());\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/TestPartitionSpecValidation.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2019-06-13 03:59:00","commitOrder":1,"curCode":"  public void testMultipleDatePartitions() {\n    TestHelpers.assertThrows(\"Should not allow year(d) and year(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").year(\"d\").build());\n    TestHelpers.assertThrows(\"Should not allow year(d) and month(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").month(\"d\").build());\n    TestHelpers.assertThrows(\"Should not allow year(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").day(\"d\").build());\n\n    TestHelpers.assertThrows(\"Should not allow month(d) and month(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"d\").month(\"d\").build());\n    TestHelpers.assertThrows(\"Should not allow month(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"d\").day(\"d\").build());\n\n    TestHelpers.assertThrows(\"Should not allow day(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"d\").day(\"d\").build());\n  }\n","date":"2019-06-13 03:59:00","endLine":94,"groupId":"391","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultipleDatePartitions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/24/a5716ba08a68a308070c8c576767110dcc68ba.src","preCode":"  public void testMultipleDatePartitions() {\n    TestHelpers.assertThrows(\"Should not allow year(d) and year(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").year(\"d\").build());\n    TestHelpers.assertThrows(\"Should not allow year(d) and month(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").month(\"d\").build());\n    TestHelpers.assertThrows(\"Should not allow year(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").day(\"d\").build());\n\n    TestHelpers.assertThrows(\"Should not allow month(d) and month(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"d\").month(\"d\").build());\n    TestHelpers.assertThrows(\"Should not allow month(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"d\").day(\"d\").build());\n\n    TestHelpers.assertThrows(\"Should not allow day(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"d\").day(\"d\").build());\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/TestPartitionSpecValidation.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"649cbdde83693ebda8e8dc6e75857426d25414ec","commitMessage":"@@@Support multiple partitions derived from the same field (#203)\n\n","date":"2019-06-13 03:59:00","modifiedFileCount":"7","status":"B","submitter":"Ryan Blue"},{"authorTime":"2019-09-20 08:28:39","codes":[{"authorDate":"2019-09-20 08:28:39","commitOrder":2,"curCode":"  public void testMultipleTimestampPartitions() {\n    AssertHelpers.assertThrows(\"Should not allow year(ts) and year(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").year(\"ts\").build());\n    AssertHelpers.assertThrows(\"Should not allow year(ts) and month(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").month(\"ts\").build());\n    AssertHelpers.assertThrows(\"Should not allow year(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").day(\"ts\").build());\n    AssertHelpers.assertThrows(\"Should not allow year(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").hour(\"ts\").build());\n\n    AssertHelpers.assertThrows(\"Should not allow month(ts) and month(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").month(\"ts\").build());\n    AssertHelpers.assertThrows(\"Should not allow month(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").day(\"ts\").build());\n    AssertHelpers.assertThrows(\"Should not allow month(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").hour(\"ts\").build());\n\n    AssertHelpers.assertThrows(\"Should not allow day(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"ts\").day(\"ts\").build());\n    AssertHelpers.assertThrows(\"Should not allow day(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"ts\").hour(\"ts\").build());\n\n    AssertHelpers.assertThrows(\"Should not allow hour(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).hour(\"ts\").hour(\"ts\").build());\n  }\n","date":"2019-09-20 08:28:39","endLine":70,"groupId":"101160","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultipleTimestampPartitions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/94/644b86b99d5b19d59f2495e8ad7d820d31bbdb.src","preCode":"  public void testMultipleTimestampPartitions() {\n    TestHelpers.assertThrows(\"Should not allow year(ts) and year(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").year(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow year(ts) and month(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").month(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow year(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").day(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow year(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"ts\").hour(\"ts\").build());\n\n    TestHelpers.assertThrows(\"Should not allow month(ts) and month(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").month(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow month(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").day(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow month(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"ts\").hour(\"ts\").build());\n\n    TestHelpers.assertThrows(\"Should not allow day(ts) and day(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"ts\").day(\"ts\").build());\n    TestHelpers.assertThrows(\"Should not allow day(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"ts\").hour(\"ts\").build());\n\n    TestHelpers.assertThrows(\"Should not allow hour(ts) and hour(ts)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).hour(\"ts\").hour(\"ts\").build());\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/TestPartitionSpecValidation.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2019-09-20 08:28:39","commitOrder":2,"curCode":"  public void testMultipleDatePartitions() {\n    AssertHelpers.assertThrows(\"Should not allow year(d) and year(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").year(\"d\").build());\n    AssertHelpers.assertThrows(\"Should not allow year(d) and month(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").month(\"d\").build());\n    AssertHelpers.assertThrows(\"Should not allow year(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").day(\"d\").build());\n\n    AssertHelpers.assertThrows(\"Should not allow month(d) and month(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"d\").month(\"d\").build());\n    AssertHelpers.assertThrows(\"Should not allow month(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"d\").day(\"d\").build());\n\n    AssertHelpers.assertThrows(\"Should not allow day(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"d\").day(\"d\").build());\n  }\n","date":"2019-09-20 08:28:39","endLine":94,"groupId":"101160","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultipleDatePartitions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/94/644b86b99d5b19d59f2495e8ad7d820d31bbdb.src","preCode":"  public void testMultipleDatePartitions() {\n    TestHelpers.assertThrows(\"Should not allow year(d) and year(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").year(\"d\").build());\n    TestHelpers.assertThrows(\"Should not allow year(d) and month(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").month(\"d\").build());\n    TestHelpers.assertThrows(\"Should not allow year(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).year(\"d\").day(\"d\").build());\n\n    TestHelpers.assertThrows(\"Should not allow month(d) and month(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"d\").month(\"d\").build());\n    TestHelpers.assertThrows(\"Should not allow month(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot add redundant partition\",\n        () -> PartitionSpec.builderFor(SCHEMA).month(\"d\").day(\"d\").build());\n\n    TestHelpers.assertThrows(\"Should not allow day(d) and day(d)\",\n        IllegalArgumentException.class, \"Cannot use partition name more than once\",\n        () -> PartitionSpec.builderFor(SCHEMA).day(\"d\").day(\"d\").build());\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/TestPartitionSpecValidation.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"a509e43cf93d223a3925cbdcc5a0df4ac997b889","commitMessage":"@@@Refactor tests to use AssertHelpers.assertThrows (#485)\n\n","date":"2019-09-20 08:28:39","modifiedFileCount":"8","status":"M","submitter":"Sujith Jay Nair"}]
