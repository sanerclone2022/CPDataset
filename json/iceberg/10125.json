[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2020-06-24 01:28:42","commitOrder":2,"curCode":"  private static Schema.Field copyField(Schema.Field field, Schema newSchema) {\n    Schema.Field copy = new Schema.Field(field.name(), newSchema, field.doc(), field.defaultVal(), field.order());\n    for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n      String key = prop.getKey();\n      if (key != AvroSchemaUtil.FIELD_ID_PROP) {\n        copy.addProp(key, prop.getValue());\n      }\n    }\n    return copy;\n  }\n","date":"2020-06-24 01:28:42","endLine":82,"groupId":"3569","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"copyField","params":"(Schema.Fieldfield@SchemanewSchema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/1f/929bf53bb684d7fac180227e8ec94c093257d2.src","preCode":"  private static Schema.Field copyField(Schema.Field field, Schema newSchema) {\n    Schema.Field copy = new Schema.Field(field.name(), newSchema, field.doc(), field.defaultVal(), field.order());\n    for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n      String key = prop.getKey();\n      if (key != AvroSchemaUtil.FIELD_ID_PROP) {\n        copy.addProp(key, prop.getValue());\n      }\n    }\n    return copy;\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/avro/RemoveIds.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  static Schema.Field copyField(Schema.Field field, Schema newSchema, String newName) {\n    Schema.Field copy = new Schema.Field(newName,\n        newSchema, field.doc(), field.defaultVal(), field.order());\n\n    for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n      copy.addProp(prop.getKey(), prop.getValue());\n    }\n\n    if (!newName.equals(field.name())) {\n      copy.addAlias(field.name());\n    }\n\n    return copy;\n  }\n","date":"2019-03-21 07:25:05","endLine":274,"groupId":"2281","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"copyField","params":"(Schema.Fieldfield@SchemanewSchema@StringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/7d/94f1c1f0c4cda0faeff490ecec02eca781bc81.src","preCode":"  static Schema.Field copyField(Schema.Field field, Schema newSchema, String newName) {\n    Schema.Field copy = new Schema.Field(newName,\n        newSchema, field.doc(), field.defaultVal(), field.order());\n\n    for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n      copy.addProp(prop.getKey(), prop.getValue());\n    }\n\n    if (!newName.equals(field.name())) {\n      copy.addAlias(field.name());\n    }\n\n    return copy;\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/avro/AvroSchemaUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"NB"}],"commitId":"33f1825b72efe05c7d83feb68fa1669eb00bb129","commitMessage":"@@@Spark: Read using Avro name mapping if configured (#1129)\n\n","date":"2020-06-24 01:28:42","modifiedFileCount":"1","status":"M","submitter":"Chen Junjie"},{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2021-06-25 07:17:58","commitOrder":3,"curCode":"  private static Schema.Field copyField(Schema.Field field, Schema newSchema) {\n    Schema.Field copy = new Schema.Field(field.name(), newSchema, field.doc(), field.defaultVal(), field.order());\n    for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n      String key = prop.getKey();\n      if (!Objects.equals(key, AvroSchemaUtil.FIELD_ID_PROP)) {\n        copy.addProp(key, prop.getValue());\n      }\n    }\n    return copy;\n  }\n","date":"2021-06-25 07:17:58","endLine":83,"groupId":"10125","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"copyField","params":"(Schema.Fieldfield@SchemanewSchema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/b9/e0d5cd1799496ea5a63b6548cee21506a19a2b.src","preCode":"  private static Schema.Field copyField(Schema.Field field, Schema newSchema) {\n    Schema.Field copy = new Schema.Field(field.name(), newSchema, field.doc(), field.defaultVal(), field.order());\n    for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n      String key = prop.getKey();\n      if (key != AvroSchemaUtil.FIELD_ID_PROP) {\n        copy.addProp(key, prop.getValue());\n      }\n    }\n    return copy;\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/avro/RemoveIds.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2019-03-21 07:25:05","commitOrder":3,"curCode":"  static Schema.Field copyField(Schema.Field field, Schema newSchema, String newName) {\n    Schema.Field copy = new Schema.Field(newName,\n        newSchema, field.doc(), field.defaultVal(), field.order());\n\n    for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n      copy.addProp(prop.getKey(), prop.getValue());\n    }\n\n    if (!newName.equals(field.name())) {\n      copy.addAlias(field.name());\n    }\n\n    return copy;\n  }\n","date":"2019-03-21 07:25:05","endLine":274,"groupId":"10125","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"copyField","params":"(Schema.Fieldfield@SchemanewSchema@StringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/7d/94f1c1f0c4cda0faeff490ecec02eca781bc81.src","preCode":"  static Schema.Field copyField(Schema.Field field, Schema newSchema, String newName) {\n    Schema.Field copy = new Schema.Field(newName,\n        newSchema, field.doc(), field.defaultVal(), field.order());\n\n    for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n      copy.addProp(prop.getKey(), prop.getValue());\n    }\n\n    if (!newName.equals(field.name())) {\n      copy.addAlias(field.name());\n    }\n\n    return copy;\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/avro/AvroSchemaUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"N"}],"commitId":"98da9749edee574b8ed673d69e0ef80ce7ae0272","commitMessage":"@@@API: Use equals instead of reference equality (#2716)\n\n","date":"2021-06-25 07:17:58","modifiedFileCount":"10","status":"M","submitter":"Eduard Tudenh?fner"}]
