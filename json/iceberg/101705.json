[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testReplaceWithNewData() {\n    Snapshot start = table.currentSnapshot();\n    Schema schema = table.schema();\n\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n\n    Assert.assertEquals(\"Version should be 1\", 1L, (long) version());\n\n    validateSnapshot(start, table.currentSnapshot(), FILE_A);\n\n    Transaction replace = TestTables.beginReplace(tableDir, \"test\", table.schema(), table.spec());\n\n    replace.newAppend()\n        .appendFile(FILE_B)\n        .appendFile(FILE_C)\n        .appendFile(FILE_D)\n        .commit();\n\n    replace.commitTransaction();\n\n    table.refresh();\n\n    Assert.assertEquals(\"Version should be 2\", 2L, (long) version());\n    Assert.assertNotNull(\"Table should have a current snapshot\", table.currentSnapshot());\n    Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",\n        schema.asStruct(), table.schema().asStruct());\n\n    validateSnapshot(null, table.currentSnapshot(), FILE_B, FILE_C, FILE_D);\n  }\n","date":"2019-03-21 07:25:05","endLine":151,"groupId":"69","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReplaceWithNewData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f0/38d36909a2e4ce3f2f33e772710afc18c3276b.src","preCode":"  public void testReplaceWithNewData() {\n    Snapshot start = table.currentSnapshot();\n    Schema schema = table.schema();\n\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n\n    Assert.assertEquals(\"Version should be 1\", 1L, (long) version());\n\n    validateSnapshot(start, table.currentSnapshot(), FILE_A);\n\n    Transaction replace = TestTables.beginReplace(tableDir, \"test\", table.schema(), table.spec());\n\n    replace.newAppend()\n        .appendFile(FILE_B)\n        .appendFile(FILE_C)\n        .appendFile(FILE_D)\n        .commit();\n\n    replace.commitTransaction();\n\n    table.refresh();\n\n    Assert.assertEquals(\"Version should be 2\", 2L, (long) version());\n    Assert.assertNotNull(\"Table should have a current snapshot\", table.currentSnapshot());\n    Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",\n        schema.asStruct(), table.schema().asStruct());\n\n    validateSnapshot(null, table.currentSnapshot(), FILE_B, FILE_C, FILE_D);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestReplaceTransaction.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testReplaceTransactionRetry() {\n    Snapshot start = table.currentSnapshot();\n    Schema schema = table.schema();\n\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n\n    Assert.assertEquals(\"Version should be 1\", 1L, (long) version());\n\n    validateSnapshot(start, table.currentSnapshot(), FILE_A);\n\n    Transaction replace = TestTables.beginReplace(tableDir, \"test\", table.schema(), table.spec());\n\n    replace.newAppend()\n        .appendFile(FILE_B)\n        .appendFile(FILE_C)\n        .appendFile(FILE_D)\n        .commit();\n\n    table.ops().failCommits(1);\n\n    replace.commitTransaction();\n\n    table.refresh();\n\n    Assert.assertEquals(\"Version should be 2\", 2L, (long) version());\n    Assert.assertNotNull(\"Table should have a current snapshot\", table.currentSnapshot());\n    Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",\n        schema.asStruct(), table.schema().asStruct());\n\n    validateSnapshot(null, table.currentSnapshot(), FILE_B, FILE_C, FILE_D);\n  }\n","date":"2019-03-21 07:25:05","endLine":222,"groupId":"69","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReplaceTransactionRetry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f0/38d36909a2e4ce3f2f33e772710afc18c3276b.src","preCode":"  public void testReplaceTransactionRetry() {\n    Snapshot start = table.currentSnapshot();\n    Schema schema = table.schema();\n\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n\n    Assert.assertEquals(\"Version should be 1\", 1L, (long) version());\n\n    validateSnapshot(start, table.currentSnapshot(), FILE_A);\n\n    Transaction replace = TestTables.beginReplace(tableDir, \"test\", table.schema(), table.spec());\n\n    replace.newAppend()\n        .appendFile(FILE_B)\n        .appendFile(FILE_C)\n        .appendFile(FILE_D)\n        .commit();\n\n    table.ops().failCommits(1);\n\n    replace.commitTransaction();\n\n    table.refresh();\n\n    Assert.assertEquals(\"Version should be 2\", 2L, (long) version());\n    Assert.assertNotNull(\"Table should have a current snapshot\", table.currentSnapshot());\n    Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",\n        schema.asStruct(), table.schema().asStruct());\n\n    validateSnapshot(null, table.currentSnapshot(), FILE_B, FILE_C, FILE_D);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestReplaceTransaction.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-08-09 04:06:20","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  public void testReplaceWithNewData() {\n    Snapshot start = table.currentSnapshot();\n    Schema schema = table.schema();\n\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n\n    Assert.assertEquals(\"Version should be 1\", 1L, (long) version());\n\n    validateSnapshot(start, table.currentSnapshot(), FILE_A);\n\n    Transaction replace = TestTables.beginReplace(tableDir, \"test\", table.schema(), table.spec());\n\n    replace.newAppend()\n        .appendFile(FILE_B)\n        .appendFile(FILE_C)\n        .appendFile(FILE_D)\n        .commit();\n\n    replace.commitTransaction();\n\n    table.refresh();\n\n    Assert.assertEquals(\"Version should be 2\", 2L, (long) version());\n    Assert.assertNotNull(\"Table should have a current snapshot\", table.currentSnapshot());\n    Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",\n        schema.asStruct(), table.schema().asStruct());\n\n    validateSnapshot(null, table.currentSnapshot(), FILE_B, FILE_C, FILE_D);\n  }\n","date":"2019-03-21 07:25:05","endLine":151,"groupId":"101705","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReplaceWithNewData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f0/38d36909a2e4ce3f2f33e772710afc18c3276b.src","preCode":"  public void testReplaceWithNewData() {\n    Snapshot start = table.currentSnapshot();\n    Schema schema = table.schema();\n\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n\n    Assert.assertEquals(\"Version should be 1\", 1L, (long) version());\n\n    validateSnapshot(start, table.currentSnapshot(), FILE_A);\n\n    Transaction replace = TestTables.beginReplace(tableDir, \"test\", table.schema(), table.spec());\n\n    replace.newAppend()\n        .appendFile(FILE_B)\n        .appendFile(FILE_C)\n        .appendFile(FILE_D)\n        .commit();\n\n    replace.commitTransaction();\n\n    table.refresh();\n\n    Assert.assertEquals(\"Version should be 2\", 2L, (long) version());\n    Assert.assertNotNull(\"Table should have a current snapshot\", table.currentSnapshot());\n    Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",\n        schema.asStruct(), table.schema().asStruct());\n\n    validateSnapshot(null, table.currentSnapshot(), FILE_B, FILE_C, FILE_D);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestReplaceTransaction.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"},{"authorDate":"2019-08-09 04:06:20","commitOrder":2,"curCode":"  public void testReplaceTransactionRetry() {\n    Snapshot start = table.currentSnapshot();\n    Schema schema = table.schema();\n\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n\n    Assert.assertEquals(\"Version should be 1\", 1L, (long) version());\n\n    validateSnapshot(start, table.currentSnapshot(), FILE_A);\n\n    Transaction replace = TestTables.beginReplace(tableDir, \"test\", table.schema(), table.spec());\n\n    replace.newAppend()\n        .appendFile(FILE_B)\n        .appendFile(FILE_C)\n        .appendFile(FILE_D)\n        .commit();\n\n    \r\n    ((TestTables.TestTableOperations) ((BaseTransaction) replace).ops()).failCommits(1);\n\n    replace.commitTransaction();\n\n    table.refresh();\n\n    Assert.assertEquals(\"Version should be 2\", 2L, (long) version());\n    Assert.assertNotNull(\"Table should have a current snapshot\", table.currentSnapshot());\n    Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",\n        schema.asStruct(), table.schema().asStruct());\n\n    validateSnapshot(null, table.currentSnapshot(), FILE_B, FILE_C, FILE_D);\n  }\n","date":"2019-08-09 04:06:20","endLine":225,"groupId":"101705","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReplaceTransactionRetry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/68/ef9b9291efebfe94f8715dc4b824743e84385c.src","preCode":"  public void testReplaceTransactionRetry() {\n    Snapshot start = table.currentSnapshot();\n    Schema schema = table.schema();\n\n    table.newAppend()\n        .appendFile(FILE_A)\n        .commit();\n\n    Assert.assertEquals(\"Version should be 1\", 1L, (long) version());\n\n    validateSnapshot(start, table.currentSnapshot(), FILE_A);\n\n    Transaction replace = TestTables.beginReplace(tableDir, \"test\", table.schema(), table.spec());\n\n    replace.newAppend()\n        .appendFile(FILE_B)\n        .appendFile(FILE_C)\n        .appendFile(FILE_D)\n        .commit();\n\n    table.ops().failCommits(1);\n\n    replace.commitTransaction();\n\n    table.refresh();\n\n    Assert.assertEquals(\"Version should be 2\", 2L, (long) version());\n    Assert.assertNotNull(\"Table should have a current snapshot\", table.currentSnapshot());\n    Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",\n        schema.asStruct(), table.schema().asStruct());\n\n    validateSnapshot(null, table.currentSnapshot(), FILE_B, FILE_C, FILE_D);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestReplaceTransaction.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"M"}],"commitId":"ce226cf8ba851641f789d36bd2077925e63ef65b","commitMessage":"@@@Clean up after create and replace transaction failures (#364)\n\n","date":"2019-08-09 04:06:20","modifiedFileCount":"3","status":"M","submitter":"Ryan Blue"}]
