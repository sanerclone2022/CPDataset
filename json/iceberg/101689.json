[{"authorTime":"2021-04-06 09:04:36","codes":[{"authorDate":"2021-04-06 09:04:36","commitOrder":1,"curCode":"  public void testFailedCommit() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps);\n\n    AssertHelpers.assertThrows(\"We should wrap the error to CommitFailedException if the \" +\n            \"commit actually doesn't succeed\", CommitFailedException.class, \"unexpected exception\",\n        () -> spyOps.commit(metadataV2, metadataV1));\n    Mockito.verify(spyOps, Mockito.times(1)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","date":"2021-04-06 09:04:36","endLine":66,"groupId":"2248","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailedCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ef/ada186dc83f256f64cca1c7188f17bd11ba58b.src","preCode":"  public void testFailedCommit() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps);\n\n    AssertHelpers.assertThrows(\"We should wrap the error to CommitFailedException if the \" +\n            \"commit actually doesn't succeed\", CommitFailedException.class, \"unexpected exception\",\n        () -> spyOps.commit(metadataV2, metadataV1));\n    Mockito.verify(spyOps, Mockito.times(1)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","realPath":"aws/src/integration/java/org/apache/iceberg/aws/glue/GlueCatalogCommitFailureTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2021-04-06 09:04:36","commitOrder":1,"curCode":"  public void testConcurrentModificationExceptionDoesNotCheckCommitStatus() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps, ConcurrentModificationException.builder().build());\n\n    try {\n      spyOps.commit(metadataV2, metadataV1);\n    } catch (CommitFailedException e) {\n      Assert.assertTrue(\"Exception message should mention concurrent exception\",\n          e.getMessage().contains(\"Glue detected concurrent update\"));\n      Assert.assertTrue(\"Cause should be concurrent modification exception\",\n          e.getCause() instanceof ConcurrentModificationException);\n    }\n    Mockito.verify(spyOps, Mockito.times(0)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","date":"2021-04-06 09:04:36","endLine":93,"groupId":"2248","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcurrentModificationExceptionDoesNotCheckCommitStatus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ef/ada186dc83f256f64cca1c7188f17bd11ba58b.src","preCode":"  public void testConcurrentModificationExceptionDoesNotCheckCommitStatus() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps, ConcurrentModificationException.builder().build());\n\n    try {\n      spyOps.commit(metadataV2, metadataV1);\n    } catch (CommitFailedException e) {\n      Assert.assertTrue(\"Exception message should mention concurrent exception\",\n          e.getMessage().contains(\"Glue detected concurrent update\"));\n      Assert.assertTrue(\"Cause should be concurrent modification exception\",\n          e.getCause() instanceof ConcurrentModificationException);\n    }\n    Mockito.verify(spyOps, Mockito.times(0)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","realPath":"aws/src/integration/java/org/apache/iceberg/aws/glue/GlueCatalogCommitFailureTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"68c48ec9bd8c3c3ae14a365f937d1538a4fbf826","commitMessage":"@@@AWS: handle uncertain catalog state for glue (#2402)\n\n","date":"2021-04-06 09:04:36","modifiedFileCount":"3","status":"B","submitter":"yyanyy"},{"authorTime":"2021-06-23 04:08:38","codes":[{"authorDate":"2021-04-06 09:04:36","commitOrder":2,"curCode":"  public void testFailedCommit() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps);\n\n    AssertHelpers.assertThrows(\"We should wrap the error to CommitFailedException if the \" +\n            \"commit actually doesn't succeed\", CommitFailedException.class, \"unexpected exception\",\n        () -> spyOps.commit(metadataV2, metadataV1));\n    Mockito.verify(spyOps, Mockito.times(1)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","date":"2021-04-06 09:04:36","endLine":66,"groupId":"2248","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailedCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ef/ada186dc83f256f64cca1c7188f17bd11ba58b.src","preCode":"  public void testFailedCommit() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps);\n\n    AssertHelpers.assertThrows(\"We should wrap the error to CommitFailedException if the \" +\n            \"commit actually doesn't succeed\", CommitFailedException.class, \"unexpected exception\",\n        () -> spyOps.commit(metadataV2, metadataV1));\n    Mockito.verify(spyOps, Mockito.times(1)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","realPath":"aws/src/integration/java/org/apache/iceberg/aws/glue/GlueCatalogCommitFailureTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2021-06-23 04:08:38","commitOrder":2,"curCode":"  public void testConcurrentModificationExceptionDoesNotCheckCommitStatus() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps, ConcurrentModificationException.builder().build());\n\n    AssertHelpers.assertThrows(\"GlueCatalog should fail on concurrent modifications\",\n        ConcurrentModificationException.class, \"Glue detected concurrent update\",\n        () -> spyOps.commit(metadataV2, metadataV1));\n    Mockito.verify(spyOps, Mockito.times(0)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","date":"2021-06-23 04:08:38","endLine":88,"groupId":"2248","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcurrentModificationExceptionDoesNotCheckCommitStatus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f4/530315df2351b7b2f181be43b07230fa26db26.src","preCode":"  public void testConcurrentModificationExceptionDoesNotCheckCommitStatus() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps, ConcurrentModificationException.builder().build());\n\n    try {\n      spyOps.commit(metadataV2, metadataV1);\n    } catch (CommitFailedException e) {\n      Assert.assertTrue(\"Exception message should mention concurrent exception\",\n          e.getMessage().contains(\"Glue detected concurrent update\"));\n      Assert.assertTrue(\"Cause should be concurrent modification exception\",\n          e.getCause() instanceof ConcurrentModificationException);\n    }\n    Mockito.verify(spyOps, Mockito.times(0)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","realPath":"aws/src/integration/java/org/apache/iceberg/aws/glue/GlueCatalogCommitFailureTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"ca575e9725a7e10b167851355e7d4519ef1173a6","commitMessage":"@@@[AWS] Fix MissingFail error prone warning by cleaning up GlueCatalogCommitFailureTest (#2721)\n\n","date":"2021-06-23 04:08:38","modifiedFileCount":"1","status":"M","submitter":"Kyle Bendickson"},{"authorTime":"2021-08-10 03:58:27","codes":[{"authorDate":"2021-04-06 09:04:36","commitOrder":3,"curCode":"  public void testFailedCommit() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps);\n\n    AssertHelpers.assertThrows(\"We should wrap the error to CommitFailedException if the \" +\n            \"commit actually doesn't succeed\", CommitFailedException.class, \"unexpected exception\",\n        () -> spyOps.commit(metadataV2, metadataV1));\n    Mockito.verify(spyOps, Mockito.times(1)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","date":"2021-04-06 09:04:36","endLine":66,"groupId":"101689","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailedCommit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ef/ada186dc83f256f64cca1c7188f17bd11ba58b.src","preCode":"  public void testFailedCommit() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps);\n\n    AssertHelpers.assertThrows(\"We should wrap the error to CommitFailedException if the \" +\n            \"commit actually doesn't succeed\", CommitFailedException.class, \"unexpected exception\",\n        () -> spyOps.commit(metadataV2, metadataV1));\n    Mockito.verify(spyOps, Mockito.times(1)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","realPath":"aws/src/integration/java/org/apache/iceberg/aws/glue/GlueCatalogCommitFailureTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2021-08-10 03:58:27","commitOrder":3,"curCode":"  public void testConcurrentModificationExceptionDoesNotCheckCommitStatus() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps, ConcurrentModificationException.builder().build());\n\n    AssertHelpers.assertThrowsWithCause(\"GlueCatalog should fail on concurrent modifications\",\n        CommitFailedException.class,\n        \"Glue detected concurrent update\",\n        ConcurrentModificationException.class,\n        null,\n        () -> spyOps.commit(metadataV2, metadataV1));\n    Mockito.verify(spyOps, Mockito.times(0)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","date":"2021-08-10 03:58:27","endLine":91,"groupId":"101689","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcurrentModificationExceptionDoesNotCheckCommitStatus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/aa/63d22c52af6200aa83dd6093fe94a235d27ede.src","preCode":"  public void testConcurrentModificationExceptionDoesNotCheckCommitStatus() {\n    Table table = setupTable();\n    GlueTableOperations ops = (GlueTableOperations) ((HasTableOperations) table).operations();\n\n    TableMetadata metadataV1 = ops.current();\n    TableMetadata metadataV2 = updateTable(table, ops);\n\n    GlueTableOperations spyOps = Mockito.spy(ops);\n    failCommitAndThrowException(spyOps, ConcurrentModificationException.builder().build());\n\n    AssertHelpers.assertThrows(\"GlueCatalog should fail on concurrent modifications\",\n        ConcurrentModificationException.class, \"Glue detected concurrent update\",\n        () -> spyOps.commit(metadataV2, metadataV1));\n    Mockito.verify(spyOps, Mockito.times(0)).refresh();\n\n    ops.refresh();\n    Assert.assertEquals(\"Current metadata should not have changed\", metadataV2, ops.current());\n    Assert.assertTrue(\"Current metadata should still exist\", metadataFileExists(metadataV2));\n    Assert.assertEquals(\"No new metadata files should exist\", 2, metadataFileCount(ops.current()));\n  }\n","realPath":"aws/src/integration/java/org/apache/iceberg/aws/glue/GlueCatalogCommitFailureTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"4d7892c43183b0acc036b1a0071f3f2884c1e7ec","commitMessage":"@@@AWS: Fix concurrent modification integration test (#2948)\n\n","date":"2021-08-10 03:58:27","modifiedFileCount":"2","status":"M","submitter":"Jack Ye"}]
