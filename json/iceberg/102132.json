[{"authorTime":"2020-02-05 05:49:56","codes":[{"authorDate":"2019-11-21 01:48:39","commitOrder":4,"curCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n    return new TableMetadata(null, uuid, location,\n        snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs, properties,\n        currentSnapshotId, newSnapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2019-11-21 01:48:39","endLine":391,"groupId":"134","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addStagedSnapshot","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a5/081a6b45d98b0265beffcb15ce702deb22d43b.src","preCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n    return new TableMetadata(null, uuid, location,\n        snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs, properties,\n        currentSnapshotId, newSnapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":383,"status":"NB"},{"authorDate":"2020-02-05 05:49:56","commitOrder":4,"curCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, uuid, location,\n        nowMillis, lastColumnId, schema, defaultSpecId, specs, properties,\n        snapshot.snapshotId(), snapshots, newSnapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2020-02-05 05:49:56","endLine":462,"groupId":"3602","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setCurrentSnapshotTo","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e4/4e002bdab4aad9d832c41850ad4ccbccda711c.src","preCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, uuid, location,\n        nowMillis, lastColumnId, schema, defaultSpecId, specs, properties,\n        snapshot.snapshotId(), snapshots, newSnapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":444,"status":"B"}],"commitId":"a0ff334f2a9b0e1a429ccf69a85a12e8c255ed33","commitMessage":"@@@Add SnapshotManager to roll back and cherry-pick snapshots (#695)\n\n","date":"2020-02-05 05:49:56","modifiedFileCount":"10","status":"M","submitter":"Gautam"},{"authorTime":"2020-04-10 03:14:34","codes":[{"authorDate":"2020-04-10 03:14:34","commitOrder":5,"curCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n    return new TableMetadata(null, formatVersion, uuid, location,\n        snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs, properties,\n        currentSnapshotId, newSnapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2020-04-10 03:14:34","endLine":393,"groupId":"134","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addStagedSnapshot","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/4d/12cf5ce84c370fa98ed513c21830bbbf9dc5ac.src","preCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n    return new TableMetadata(null, uuid, location,\n        snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs, properties,\n        currentSnapshotId, newSnapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":385,"status":"M"},{"authorDate":"2020-04-10 03:14:34","commitOrder":5,"curCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        nowMillis, lastColumnId, schema, defaultSpecId, specs, properties,\n        snapshot.snapshotId(), snapshots, newSnapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2020-04-10 03:14:34","endLine":464,"groupId":"3602","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setCurrentSnapshotTo","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/4d/12cf5ce84c370fa98ed513c21830bbbf9dc5ac.src","preCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, uuid, location,\n        nowMillis, lastColumnId, schema, defaultSpecId, specs, properties,\n        snapshot.snapshotId(), snapshots, newSnapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":446,"status":"M"}],"commitId":"c094da57db072187b2d930ae6c5590218012ec3f","commitMessage":"@@@Prepare metadata writers for format v2 (#903)\n\n* Track format version in TableMetadata.\n* Pass formatVersion when creating a manifest writer.\n* Pass formatVersion when creating a manifest list writer.\n* Add v2 change section to spec.","date":"2020-04-10 03:14:34","modifiedFileCount":"12","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-04-11 07:02:33","codes":[{"authorDate":"2020-04-11 07:02:33","commitOrder":6,"curCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() > lastSequenceNumber,\n        \"Cannot add snapshot with sequence number %s older than last sequence number %s\",\n        snapshot.sequenceNumber(), lastSequenceNumber);\n\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        snapshot.sequenceNumber(), snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs, properties,\n        currentSnapshotId, newSnapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2020-04-11 07:02:33","endLine":411,"groupId":"1030","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addStagedSnapshot","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f3/bd7b226f9acc00a154e5b271870a639551114a.src","preCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n    return new TableMetadata(null, formatVersion, uuid, location,\n        snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs, properties,\n        currentSnapshotId, newSnapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":398,"status":"M"},{"authorDate":"2020-04-11 07:02:33","commitOrder":6,"curCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() <= lastSequenceNumber,\n        \"Last sequence number %s is less than existing snapshot sequence number %s\",\n        lastSequenceNumber, snapshot.sequenceNumber());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        lastSequenceNumber, nowMillis, lastColumnId, schema, defaultSpecId, specs, properties,\n        snapshot.snapshotId(), snapshots, newSnapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2020-04-11 07:02:33","endLine":490,"groupId":"1032","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setCurrentSnapshotTo","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f3/bd7b226f9acc00a154e5b271870a639551114a.src","preCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        nowMillis, lastColumnId, schema, defaultSpecId, specs, properties,\n        snapshot.snapshotId(), snapshots, newSnapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":469,"status":"M"}],"commitId":"720b240a3e6a32b6f01173ebcc448c2c6e32e13a","commitMessage":"@@@Update Snapshot and TableMetadata with sequence numbers (#910)\n\n","date":"2020-04-11 07:02:33","modifiedFileCount":"11","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-09-04 13:48:01","codes":[{"authorDate":"2020-09-04 13:48:01","commitOrder":7,"curCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() > lastSequenceNumber,\n        \"Cannot add snapshot with sequence number %s older than last sequence number %s\",\n        snapshot.sequenceNumber(), lastSequenceNumber);\n\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        snapshot.sequenceNumber(), snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs,\n        defaultSortOrderId, sortOrders, properties, currentSnapshotId, newSnapshots, snapshotLog,\n        addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2020-09-04 13:48:01","endLine":508,"groupId":"1030","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"addStagedSnapshot","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/31/155778969ed81f2c7876fe5815b9df47c8b15e.src","preCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() > lastSequenceNumber,\n        \"Cannot add snapshot with sequence number %s older than last sequence number %s\",\n        snapshot.sequenceNumber(), lastSequenceNumber);\n\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        snapshot.sequenceNumber(), snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs, properties,\n        currentSnapshotId, newSnapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":494,"status":"M"},{"authorDate":"2020-09-04 13:48:01","commitOrder":7,"curCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() <= lastSequenceNumber,\n        \"Last sequence number %s is less than existing snapshot sequence number %s\",\n        lastSequenceNumber, snapshot.sequenceNumber());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        lastSequenceNumber, nowMillis, lastColumnId, schema, defaultSpecId, specs, defaultSortOrderId,\n        sortOrders, properties, snapshot.snapshotId(), snapshots, newSnapshotLog,\n        addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2020-09-04 13:48:01","endLine":589,"groupId":"1032","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setCurrentSnapshotTo","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/31/155778969ed81f2c7876fe5815b9df47c8b15e.src","preCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() <= lastSequenceNumber,\n        \"Last sequence number %s is less than existing snapshot sequence number %s\",\n        lastSequenceNumber, snapshot.sequenceNumber());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        lastSequenceNumber, nowMillis, lastColumnId, schema, defaultSpecId, specs, properties,\n        snapshot.snapshotId(), snapshots, newSnapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":567,"status":"M"}],"commitId":"454101c3573acb9cd94d6d9a306ed99a5a324ed9","commitMessage":"@@@API: Implement SortOrder (#1373)\n\nThis commit extends Iceberg metadata with a sort order that defines how data and delete files should be ordered.","date":"2020-09-04 13:48:01","modifiedFileCount":"17","status":"M","submitter":"Anton Okolnychyi"},{"authorTime":"2021-01-31 05:48:52","codes":[{"authorDate":"2021-01-31 05:48:52","commitOrder":8,"curCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() > lastSequenceNumber,\n        \"Cannot add snapshot with sequence number %s older than last sequence number %s\",\n        snapshot.sequenceNumber(), lastSequenceNumber);\n\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        snapshot.sequenceNumber(), snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs,\n        lastAssignedPartitionId, defaultSortOrderId, sortOrders, properties, currentSnapshotId,\n        newSnapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2021-01-31 05:48:52","endLine":559,"groupId":"1030","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"addStagedSnapshot","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/cf/8e64b0203dd2ed2897b51440dfd8385b3739fd.src","preCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() > lastSequenceNumber,\n        \"Cannot add snapshot with sequence number %s older than last sequence number %s\",\n        snapshot.sequenceNumber(), lastSequenceNumber);\n\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        snapshot.sequenceNumber(), snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs,\n        defaultSortOrderId, sortOrders, properties, currentSnapshotId, newSnapshots, snapshotLog,\n        addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":545,"status":"M"},{"authorDate":"2021-01-31 05:48:52","commitOrder":8,"curCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() <= lastSequenceNumber,\n        \"Last sequence number %s is less than existing snapshot sequence number %s\",\n        lastSequenceNumber, snapshot.sequenceNumber());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        lastSequenceNumber, nowMillis, lastColumnId, schema, defaultSpecId, specs, lastAssignedPartitionId,\n        defaultSortOrderId, sortOrders, properties, snapshot.snapshotId(), snapshots, newSnapshotLog,\n        addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2021-01-31 05:48:52","endLine":640,"groupId":"1032","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setCurrentSnapshotTo","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/cf/8e64b0203dd2ed2897b51440dfd8385b3739fd.src","preCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() <= lastSequenceNumber,\n        \"Last sequence number %s is less than existing snapshot sequence number %s\",\n        lastSequenceNumber, snapshot.sequenceNumber());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        lastSequenceNumber, nowMillis, lastColumnId, schema, defaultSpecId, specs, defaultSortOrderId,\n        sortOrders, properties, snapshot.snapshotId(), snapshots, newSnapshotLog,\n        addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":618,"status":"M"}],"commitId":"b3e01b74fb8909d0c5aa3f9a1b9468471e03c13c","commitMessage":"@@@Core: Add lastAssignedPartitionId to TableMetadata (#2089)\n\n","date":"2021-01-31 05:48:52","modifiedFileCount":"5","status":"M","submitter":"jun-he"},{"authorTime":"2021-02-23 08:16:04","codes":[{"authorDate":"2021-02-23 08:16:04","commitOrder":9,"curCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() > lastSequenceNumber,\n        \"Cannot add snapshot with sequence number %s older than last sequence number %s\",\n        snapshot.sequenceNumber(), lastSequenceNumber);\n\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        snapshot.sequenceNumber(), snapshot.timestampMillis(), lastColumnId,\n        currentSchemaId, schemas, defaultSpecId, specs, lastAssignedPartitionId,\n        defaultSortOrderId, sortOrders, properties, currentSnapshotId, newSnapshots, snapshotLog,\n        addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2021-02-23 08:16:04","endLine":595,"groupId":"102132","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"addStagedSnapshot","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/1e/33c54b8ec6d005786743f882bb7125cdcc4e00.src","preCode":"  public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() > lastSequenceNumber,\n        \"Cannot add snapshot with sequence number %s older than last sequence number %s\",\n        snapshot.sequenceNumber(), lastSequenceNumber);\n\n    List<Snapshot> newSnapshots = ImmutableList.<Snapshot>builder()\n        .addAll(snapshots)\n        .add(snapshot)\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        snapshot.sequenceNumber(), snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs,\n        lastAssignedPartitionId, defaultSortOrderId, sortOrders, properties, currentSnapshotId,\n        newSnapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":580,"status":"M"},{"authorDate":"2021-02-23 08:16:04","commitOrder":9,"curCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() <= lastSequenceNumber,\n        \"Last sequence number %s is less than existing snapshot sequence number %s\",\n        lastSequenceNumber, snapshot.sequenceNumber());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        lastSequenceNumber, nowMillis, lastColumnId, currentSchemaId, schemas, defaultSpecId, specs,\n        lastAssignedPartitionId, defaultSortOrderId, sortOrders, properties, snapshot.snapshotId(), snapshots,\n        newSnapshotLog, addPreviousFile(file, lastUpdatedMillis));\n  }\n","date":"2021-02-23 08:16:04","endLine":677,"groupId":"102132","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setCurrentSnapshotTo","params":"(Snapshotsnapshot)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/1e/33c54b8ec6d005786743f882bb7125cdcc4e00.src","preCode":"  private TableMetadata setCurrentSnapshotTo(Snapshot snapshot) {\n    ValidationException.check(snapshotsById.containsKey(snapshot.snapshotId()),\n        \"Cannot set current snapshot to unknown: %s\", snapshot.snapshotId());\n    ValidationException.check(formatVersion == 1 || snapshot.sequenceNumber() <= lastSequenceNumber,\n        \"Last sequence number %s is less than existing snapshot sequence number %s\",\n        lastSequenceNumber, snapshot.sequenceNumber());\n\n    if (currentSnapshotId == snapshot.snapshotId()) {\n      \r\n      return this;\n    }\n\n    long nowMillis = System.currentTimeMillis();\n    List<HistoryEntry> newSnapshotLog = ImmutableList.<HistoryEntry>builder()\n        .addAll(snapshotLog)\n        .add(new SnapshotLogEntry(nowMillis, snapshot.snapshotId()))\n        .build();\n\n    return new TableMetadata(null, formatVersion, uuid, location,\n        lastSequenceNumber, nowMillis, lastColumnId, schema, defaultSpecId, specs, lastAssignedPartitionId,\n        defaultSortOrderId, sortOrders, properties, snapshot.snapshotId(), snapshots, newSnapshotLog,\n        addPreviousFile(file, lastUpdatedMillis));\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/TableMetadata.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":655,"status":"M"}],"commitId":"255e9525c5bfeb7b57e49a2d96178ebe615c5e16","commitMessage":"@@@Core: Add current-schema-id and schemas to table metadata (#2096)\n\n","date":"2021-02-23 08:16:04","modifiedFileCount":"8","status":"M","submitter":"yyanyy"}]
