[{"authorTime":"2019-05-29 03:40:04","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"  public void testIntegerLt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 5))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 30))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range below lower bound (30 is not < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 31))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 79))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","date":"2019-03-21 07:25:05","endLine":281,"groupId":"1806","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntegerLt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/54/40f67122b70984264defcbaba071de27bfa9f1.src","preCode":"  public void testIntegerLt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 5))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 30))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range below lower bound (30 is not < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 31))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 79))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","realPath":"parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"NB"},{"authorDate":"2019-05-29 03:40:04","commitOrder":2,"curCode":"  public void testStructFieldGt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 85))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 79))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range above upper bound (79 is not > 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 78))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 75))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","date":"2019-05-29 03:40:04","endLine":556,"groupId":"1806","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testStructFieldGt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/bf/1fb6f59add83d69adfe28c8d18e93f5844943d.src","preCode":"  public void testStructFieldGt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 85))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 79))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range above upper bound (79 is not > 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 78))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 75))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","realPath":"parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"B"}],"commitId":"81f29e2f80cc2e6b3b6f715573893aff696f579a","commitMessage":"@@@Support filtering based on nested struct fields (#123)\n\n","date":"2019-05-29 03:40:04","modifiedFileCount":"9","status":"M","submitter":"Gautam"},{"authorTime":"2019-10-23 02:17:28","codes":[{"authorDate":"2019-10-23 02:17:28","commitOrder":3,"curCode":"  public void testIntegerLt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 5))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 30))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range below lower bound (30 is not < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 31))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 79))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","date":"2019-10-23 02:17:28","endLine":378,"groupId":"1806","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntegerLt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/81/dcd302219e8cda9e47bc5e79432934a42bcaad.src","preCode":"  public void testIntegerLt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 5))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 30))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range below lower bound (30 is not < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 31))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 79))\n        .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","realPath":"parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"M"},{"authorDate":"2019-10-23 02:17:28","commitOrder":3,"curCode":"  public void testStructFieldGt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 85))\n            .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 79))\n            .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range above upper bound (79 is not > 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 78))\n            .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 75))\n            .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","date":"2019-10-23 02:17:28","endLine":597,"groupId":"1806","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testStructFieldGt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/81/dcd302219e8cda9e47bc5e79432934a42bcaad.src","preCode":"  public void testStructFieldGt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 85))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 79))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertFalse(\"Should not read: id range above upper bound (79 is not > 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 78))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 75))\n            .shouldRead(PARQUET_SCHEMA, ROW_GROUP_METADATA, DICTIONARY_STORE);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","realPath":"parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":581,"status":"M"}],"commitId":"336174b0a4438ed68cdb8e208833e380adaa15fc","commitMessage":"@@@Baseline: Add Baseline to iceberg-parquet (#526)\n\n","date":"2019-10-23 02:17:28","modifiedFileCount":"29","status":"M","submitter":"Fokko Driesprong"},{"authorTime":"2019-12-28 05:07:53","codes":[{"authorDate":"2019-12-28 05:07:53","commitOrder":4,"curCode":"  public void testIntegerLt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", INT_MIN_VALUE - 25))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", INT_MIN_VALUE))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range below lower bound (30 is not < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", INT_MIN_VALUE + 1))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", INT_MAX_VALUE))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","date":"2019-12-28 05:07:53","endLine":390,"groupId":"1031","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntegerLt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f6/ab6438afdd384189a76a151d96761ed5b717a3.src","preCode":"  public void testIntegerLt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 5))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 30))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range below lower bound (30 is not < 30)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 31))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, lessThan(\"id\", 79))\n        .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","realPath":"parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":374,"status":"M"},{"authorDate":"2019-12-28 05:07:53","commitOrder":4,"curCode":"  public void testStructFieldGt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,\n        greaterThan(\"struct_not_null.int_field\", INT_MAX_VALUE + 6)\n    ).shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,\n        greaterThan(\"struct_not_null.int_field\", INT_MAX_VALUE)\n    ).shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range above upper bound (79 is not > 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,\n        greaterThan(\"struct_not_null.int_field\", INT_MAX_VALUE - 1)\n    ).shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,\n        greaterThan(\"struct_not_null.int_field\", INT_MAX_VALUE - 4)\n    ).shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","date":"2019-12-28 05:07:53","endLine":618,"groupId":"1031","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testStructFieldGt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f6/ab6438afdd384189a76a151d96761ed5b717a3.src","preCode":"  public void testStructFieldGt() {\n    boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 85))\n            .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 79))\n            .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertFalse(\"Should not read: id range above upper bound (79 is not > 79)\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 78))\n            .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: one possible id\", shouldRead);\n\n    shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA, greaterThan(\"struct_not_null.int_field\", 75))\n            .shouldRead(parquetSchema, rowGroupMetadata, dictionaryStore);\n    Assert.assertTrue(\"Should read: may possible ids\", shouldRead);\n  }\n","realPath":"parquet/src/test/java/org/apache/iceberg/parquet/TestDictionaryRowGroupFilter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":598,"status":"M"}],"commitId":"33e675331e221af0b2618815addbdb4fb29c9083","commitMessage":"@@@Implement in and notIn in multiple visitors (#600)\n\n","date":"2019-12-28 05:07:53","modifiedFileCount":"10","status":"M","submitter":"jun-he"}]
