[{"authorTime":"2020-08-25 08:36:31","codes":[{"authorDate":"2020-08-25 08:36:31","commitOrder":4,"curCode":"  public void testMetricsForNestedStructFields() throws IOException {\n    InputFile recordsFile = writeRecords(NESTED_SCHEMA, buildNestedTestRecord());\n\n    Metrics metrics = getMetrics(recordsFile);\n    Assert.assertEquals(1L, (long) metrics.recordCount());\n    assertCounts(1, 1L, 0L, metrics);\n    assertBounds(1, IntegerType.get(), Integer.MAX_VALUE, Integer.MAX_VALUE, metrics);\n    assertCounts(3, 1L, 0L, metrics);\n    assertBounds(3, LongType.get(), 100L, 100L, metrics);\n    assertCounts(5, 1L, 0L, metrics);\n    assertBounds(5, LongType.get(), 20L, 20L, metrics);\n    assertCounts(6, 1L, 0L, metrics);\n    assertBounds(6, BinaryType.get(),\n        ByteBuffer.wrap(\"A\".getBytes()), ByteBuffer.wrap(\"A\".getBytes()), metrics);\n  }\n","date":"2020-08-25 08:36:31","endLine":287,"groupId":"3319","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMetricsForNestedStructFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8f/f3ac529d9fa35d7f0ff9beae6705841d77af44.src","preCode":"  public void testMetricsForNestedStructFields() throws IOException {\n    InputFile recordsFile = writeRecords(NESTED_SCHEMA, buildNestedTestRecord());\n\n    Metrics metrics = getMetrics(recordsFile);\n    Assert.assertEquals(1L, (long) metrics.recordCount());\n    assertCounts(1, 1L, 0L, metrics);\n    assertBounds(1, IntegerType.get(), Integer.MAX_VALUE, Integer.MAX_VALUE, metrics);\n    assertCounts(3, 1L, 0L, metrics);\n    assertBounds(3, LongType.get(), 100L, 100L, metrics);\n    assertCounts(5, 1L, 0L, metrics);\n    assertBounds(5, LongType.get(), 20L, 20L, metrics);\n    assertCounts(6, 1L, 0L, metrics);\n    assertBounds(6, BinaryType.get(),\n        ByteBuffer.wrap(\"A\".getBytes()), ByteBuffer.wrap(\"A\".getBytes()), metrics);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"MB"},{"authorDate":"2020-08-25 08:36:31","commitOrder":4,"curCode":"  private Record buildNestedTestRecord() {\n    Record leafStruct = GenericRecord.create(LEAF_STRUCT_TYPE);\n    leafStruct.setField(\"leafLongCol\", 20L);\n    leafStruct.setField(\"leafBinaryCol\", ByteBuffer.wrap(\"A\".getBytes()));\n    Record nestedStruct = GenericRecord.create(NESTED_STRUCT_TYPE);\n    nestedStruct.setField(\"longCol\", 100L);\n    nestedStruct.setField(\"leafStructCol\", leafStruct);\n    Record record = GenericRecord.create(NESTED_SCHEMA);\n    record.setField(\"intCol\", Integer.MAX_VALUE);\n    record.setField(\"nestedStructCol\", nestedStruct);\n\n    return record;\n  }\n","date":"2020-08-25 08:36:31","endLine":301,"groupId":"3319","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildNestedTestRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8f/f3ac529d9fa35d7f0ff9beae6705841d77af44.src","preCode":"  private Record buildNestedTestRecord() {\n    Record leafStruct = GenericRecord.create(LEAF_STRUCT_TYPE);\n    leafStruct.setField(\"leafLongCol\", 20L);\n    leafStruct.setField(\"leafBinaryCol\", ByteBuffer.wrap(\"A\".getBytes()));\n    Record nestedStruct = GenericRecord.create(NESTED_STRUCT_TYPE);\n    nestedStruct.setField(\"longCol\", 100L);\n    nestedStruct.setField(\"leafStructCol\", leafStruct);\n    Record record = GenericRecord.create(NESTED_SCHEMA);\n    record.setField(\"intCol\", Integer.MAX_VALUE);\n    record.setField(\"nestedStructCol\", nestedStruct);\n\n    return record;\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"B"}],"commitId":"6e2692c02bc79e1cfc40d03a9703776d9e92d2a0","commitMessage":"@@@ORC: Respect MetricsConfig when extracting file metrics (#1339)\n\n","date":"2020-08-25 08:36:31","modifiedFileCount":"8","status":"M","submitter":"Edgar Rodriguez"},{"authorTime":"2020-08-25 08:36:31","codes":[{"authorDate":"2020-11-13 03:36:32","commitOrder":5,"curCode":"  public void testMetricsForNestedStructFields() throws IOException {\n    Metrics metrics = getMetrics(NESTED_SCHEMA, buildNestedTestRecord());\n    Assert.assertEquals(1L, (long) metrics.recordCount());\n    assertCounts(1, 1L, 0L, metrics);\n    assertBounds(1, IntegerType.get(), Integer.MAX_VALUE, Integer.MAX_VALUE, metrics);\n    assertCounts(3, 1L, 0L, metrics);\n    assertBounds(3, LongType.get(), 100L, 100L, metrics);\n    assertCounts(5, 1L, 0L, metrics);\n    assertBounds(5, LongType.get(), 20L, 20L, metrics);\n    assertCounts(6, 1L, 0L, metrics);\n    assertBounds(6, BinaryType.get(),\n        ByteBuffer.wrap(\"A\".getBytes()), ByteBuffer.wrap(\"A\".getBytes()), metrics);\n  }\n","date":"2020-11-13 03:36:32","endLine":275,"groupId":"3319","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMetricsForNestedStructFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/6c/d7f88ddf278d7fe03d71f70b3e8cb10c5305e8.src","preCode":"  public void testMetricsForNestedStructFields() throws IOException {\n    InputFile recordsFile = writeRecords(NESTED_SCHEMA, buildNestedTestRecord());\n\n    Metrics metrics = getMetrics(recordsFile);\n    Assert.assertEquals(1L, (long) metrics.recordCount());\n    assertCounts(1, 1L, 0L, metrics);\n    assertBounds(1, IntegerType.get(), Integer.MAX_VALUE, Integer.MAX_VALUE, metrics);\n    assertCounts(3, 1L, 0L, metrics);\n    assertBounds(3, LongType.get(), 100L, 100L, metrics);\n    assertCounts(5, 1L, 0L, metrics);\n    assertBounds(5, LongType.get(), 20L, 20L, metrics);\n    assertCounts(6, 1L, 0L, metrics);\n    assertBounds(6, BinaryType.get(),\n        ByteBuffer.wrap(\"A\".getBytes()), ByteBuffer.wrap(\"A\".getBytes()), metrics);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"M"},{"authorDate":"2020-08-25 08:36:31","commitOrder":5,"curCode":"  private Record buildNestedTestRecord() {\n    Record leafStruct = GenericRecord.create(LEAF_STRUCT_TYPE);\n    leafStruct.setField(\"leafLongCol\", 20L);\n    leafStruct.setField(\"leafBinaryCol\", ByteBuffer.wrap(\"A\".getBytes()));\n    Record nestedStruct = GenericRecord.create(NESTED_STRUCT_TYPE);\n    nestedStruct.setField(\"longCol\", 100L);\n    nestedStruct.setField(\"leafStructCol\", leafStruct);\n    Record record = GenericRecord.create(NESTED_SCHEMA);\n    record.setField(\"intCol\", Integer.MAX_VALUE);\n    record.setField(\"nestedStructCol\", nestedStruct);\n\n    return record;\n  }\n","date":"2020-08-25 08:36:31","endLine":301,"groupId":"3319","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildNestedTestRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8f/f3ac529d9fa35d7f0ff9beae6705841d77af44.src","preCode":"  private Record buildNestedTestRecord() {\n    Record leafStruct = GenericRecord.create(LEAF_STRUCT_TYPE);\n    leafStruct.setField(\"leafLongCol\", 20L);\n    leafStruct.setField(\"leafBinaryCol\", ByteBuffer.wrap(\"A\".getBytes()));\n    Record nestedStruct = GenericRecord.create(NESTED_STRUCT_TYPE);\n    nestedStruct.setField(\"longCol\", 100L);\n    nestedStruct.setField(\"leafStructCol\", leafStruct);\n    Record record = GenericRecord.create(NESTED_SCHEMA);\n    record.setField(\"intCol\", Integer.MAX_VALUE);\n    record.setField(\"nestedStructCol\", nestedStruct);\n\n    return record;\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"N"}],"commitId":"944a437f1057b8be60292426aebdb0b8059d90e0","commitMessage":"@@@Core: Add NaN counts to Metrics.  implement in Parquet (#1641)\n\n","date":"2020-11-13 03:36:32","modifiedFileCount":"11","status":"M","submitter":"yyanyy"},{"authorTime":"2020-11-25 09:06:17","codes":[{"authorDate":"2020-11-25 09:06:17","commitOrder":6,"curCode":"  public void testMetricsForNestedStructFields() throws IOException {\n    Metrics metrics = getMetrics(NESTED_SCHEMA, buildNestedTestRecord());\n    Assert.assertEquals(1L, (long) metrics.recordCount());\n    assertCounts(1, 1L, 0L, metrics);\n    assertBounds(1, IntegerType.get(), Integer.MAX_VALUE, Integer.MAX_VALUE, metrics);\n    assertCounts(3, 1L, 0L, metrics);\n    assertBounds(3, LongType.get(), 100L, 100L, metrics);\n    assertCounts(5, 1L, 0L, metrics);\n    assertBounds(5, LongType.get(), 20L, 20L, metrics);\n    assertCounts(6, 1L, 0L, metrics);\n    assertBounds(6, BinaryType.get(),\n        ByteBuffer.wrap(\"A\".getBytes()), ByteBuffer.wrap(\"A\".getBytes()), metrics);\n    assertCounts(7, 1L, 0L, 1L, metrics);\n    assertBounds(7, DoubleType.get(), Double.NaN, Double.NaN, metrics);\n  }\n","date":"2020-11-25 09:06:17","endLine":278,"groupId":"3319","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMetricsForNestedStructFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f1/a65f6202fd564e2ca2b2dd5d199a4d361003e7.src","preCode":"  public void testMetricsForNestedStructFields() throws IOException {\n    Metrics metrics = getMetrics(NESTED_SCHEMA, buildNestedTestRecord());\n    Assert.assertEquals(1L, (long) metrics.recordCount());\n    assertCounts(1, 1L, 0L, metrics);\n    assertBounds(1, IntegerType.get(), Integer.MAX_VALUE, Integer.MAX_VALUE, metrics);\n    assertCounts(3, 1L, 0L, metrics);\n    assertBounds(3, LongType.get(), 100L, 100L, metrics);\n    assertCounts(5, 1L, 0L, metrics);\n    assertBounds(5, LongType.get(), 20L, 20L, metrics);\n    assertCounts(6, 1L, 0L, metrics);\n    assertBounds(6, BinaryType.get(),\n        ByteBuffer.wrap(\"A\".getBytes()), ByteBuffer.wrap(\"A\".getBytes()), metrics);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2020-11-25 09:06:17","commitOrder":6,"curCode":"  private Record buildNestedTestRecord() {\n    Record leafStruct = GenericRecord.create(LEAF_STRUCT_TYPE);\n    leafStruct.setField(\"leafLongCol\", 20L);\n    leafStruct.setField(\"leafBinaryCol\", ByteBuffer.wrap(\"A\".getBytes()));\n    Record nestedStruct = GenericRecord.create(NESTED_STRUCT_TYPE);\n    nestedStruct.setField(\"longCol\", 100L);\n    nestedStruct.setField(\"leafStructCol\", leafStruct);\n    nestedStruct.setField(\"doubleCol\", Double.NaN);\n    Record record = GenericRecord.create(NESTED_SCHEMA);\n    record.setField(\"intCol\", Integer.MAX_VALUE);\n    record.setField(\"nestedStructCol\", nestedStruct);\n\n    return record;\n  }\n","date":"2020-11-25 09:06:17","endLine":293,"groupId":"1722","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"buildNestedTestRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f1/a65f6202fd564e2ca2b2dd5d199a4d361003e7.src","preCode":"  private Record buildNestedTestRecord() {\n    Record leafStruct = GenericRecord.create(LEAF_STRUCT_TYPE);\n    leafStruct.setField(\"leafLongCol\", 20L);\n    leafStruct.setField(\"leafBinaryCol\", ByteBuffer.wrap(\"A\".getBytes()));\n    Record nestedStruct = GenericRecord.create(NESTED_STRUCT_TYPE);\n    nestedStruct.setField(\"longCol\", 100L);\n    nestedStruct.setField(\"leafStructCol\", leafStruct);\n    Record record = GenericRecord.create(NESTED_SCHEMA);\n    record.setField(\"intCol\", Integer.MAX_VALUE);\n    record.setField(\"nestedStructCol\", nestedStruct);\n\n    return record;\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"M"}],"commitId":"b1296bcbe8e050d4bc28e3d41feb2f8868c8f0bf","commitMessage":"@@@Core: Add NaN value count to content file (#1803)\n\n","date":"2020-11-25 09:06:17","modifiedFileCount":"18","status":"M","submitter":"yyanyy"},{"authorTime":"2020-11-25 09:06:17","codes":[{"authorDate":"2021-06-25 06:58:29","commitOrder":7,"curCode":"  public void testMetricsForNestedStructFields() throws IOException {\n    Metrics metrics = getMetrics(NESTED_SCHEMA, buildNestedTestRecord());\n    Assert.assertEquals(1L, (long) metrics.recordCount());\n    assertCounts(1, 1L, 0L, metrics);\n    assertBounds(1, IntegerType.get(), Integer.MAX_VALUE, Integer.MAX_VALUE, metrics);\n    assertCounts(3, 1L, 0L, metrics);\n    assertBounds(3, LongType.get(), 100L, 100L, metrics);\n    assertCounts(5, 1L, 0L, metrics);\n    assertBounds(5, LongType.get(), 20L, 20L, metrics);\n    assertCounts(6, 1L, 0L, metrics);\n    assertBounds(6, BinaryType.get(),\n        ByteBuffer.wrap(\"A\".getBytes()), ByteBuffer.wrap(\"A\".getBytes()), metrics);\n    assertCounts(7, 1L, 0L, 1L, metrics);\n    assertBounds(7, DoubleType.get(), null, null, metrics);\n  }\n","date":"2021-06-25 06:58:29","endLine":278,"groupId":"101890","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testMetricsForNestedStructFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/47/b79a655af668a9fe1fdf1e1c413d30ffbb9d74.src","preCode":"  public void testMetricsForNestedStructFields() throws IOException {\n    Metrics metrics = getMetrics(NESTED_SCHEMA, buildNestedTestRecord());\n    Assert.assertEquals(1L, (long) metrics.recordCount());\n    assertCounts(1, 1L, 0L, metrics);\n    assertBounds(1, IntegerType.get(), Integer.MAX_VALUE, Integer.MAX_VALUE, metrics);\n    assertCounts(3, 1L, 0L, metrics);\n    assertBounds(3, LongType.get(), 100L, 100L, metrics);\n    assertCounts(5, 1L, 0L, metrics);\n    assertBounds(5, LongType.get(), 20L, 20L, metrics);\n    assertCounts(6, 1L, 0L, metrics);\n    assertBounds(6, BinaryType.get(),\n        ByteBuffer.wrap(\"A\".getBytes()), ByteBuffer.wrap(\"A\".getBytes()), metrics);\n    assertCounts(7, 1L, 0L, 1L, metrics);\n    assertBounds(7, DoubleType.get(), Double.NaN, Double.NaN, metrics);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2020-11-25 09:06:17","commitOrder":7,"curCode":"  private Record buildNestedTestRecord() {\n    Record leafStruct = GenericRecord.create(LEAF_STRUCT_TYPE);\n    leafStruct.setField(\"leafLongCol\", 20L);\n    leafStruct.setField(\"leafBinaryCol\", ByteBuffer.wrap(\"A\".getBytes()));\n    Record nestedStruct = GenericRecord.create(NESTED_STRUCT_TYPE);\n    nestedStruct.setField(\"longCol\", 100L);\n    nestedStruct.setField(\"leafStructCol\", leafStruct);\n    nestedStruct.setField(\"doubleCol\", Double.NaN);\n    Record record = GenericRecord.create(NESTED_SCHEMA);\n    record.setField(\"intCol\", Integer.MAX_VALUE);\n    record.setField(\"nestedStructCol\", nestedStruct);\n\n    return record;\n  }\n","date":"2020-11-25 09:06:17","endLine":293,"groupId":"101890","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"buildNestedTestRecord","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f1/a65f6202fd564e2ca2b2dd5d199a4d361003e7.src","preCode":"  private Record buildNestedTestRecord() {\n    Record leafStruct = GenericRecord.create(LEAF_STRUCT_TYPE);\n    leafStruct.setField(\"leafLongCol\", 20L);\n    leafStruct.setField(\"leafBinaryCol\", ByteBuffer.wrap(\"A\".getBytes()));\n    Record nestedStruct = GenericRecord.create(NESTED_STRUCT_TYPE);\n    nestedStruct.setField(\"longCol\", 100L);\n    nestedStruct.setField(\"leafStructCol\", leafStruct);\n    nestedStruct.setField(\"doubleCol\", Double.NaN);\n    Record record = GenericRecord.create(NESTED_SCHEMA);\n    record.setField(\"intCol\", Integer.MAX_VALUE);\n    record.setField(\"nestedStructCol\", nestedStruct);\n\n    return record;\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"N"}],"commitId":"2e4684740b56f6d80328f50b7e7fef0863c262e7","commitMessage":"@@@Core: Fix float and double metrics for Parquet and ORC (#2464)\n\nThis replaces the metrics from Parquet and ORC with metrics that are accumulated by Iceberg writers to ensure that the metrics do not include NaN values.","date":"2021-06-25 06:58:29","modifiedFileCount":"18","status":"M","submitter":"yyanyy"}]
