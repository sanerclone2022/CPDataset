[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  static void validateManifest(String manifest,\n                               Iterator<Long> ids,\n                               Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry entry : ManifestReader.read(localInput(manifest)).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          (long) ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2019-03-21 07:25:05","endLine":175,"groupId":"1212","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"validateManifest","params":"(Stringmanifest@Iterator<Long>ids@Iterator<DataFile>expectedFiles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/30/d93b422a871427855f36d256b7ba21a27293a1.src","preCode":"  static void validateManifest(String manifest,\n                               Iterator<Long> ids,\n                               Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry entry : ManifestReader.read(localInput(manifest)).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          (long) ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  static void validateManifestEntries(String manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry entry : ManifestReader.read(localInput(manifest)).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          (long) ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2019-03-21 07:25:05","endLine":201,"groupId":"1212","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"validateManifestEntries","params":"(Stringmanifest@Iterator<Long>ids@Iterator<DataFile>expectedFiles@Iterator<ManifestEntry.Status>expectedStatuses)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/30/d93b422a871427855f36d256b7ba21a27293a1.src","preCode":"  static void validateManifestEntries(String manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry entry : ManifestReader.read(localInput(manifest)).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          (long) ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2020-02-04 06:53:50","codes":[{"authorDate":"2020-02-04 06:53:50","commitOrder":2,"curCode":"  static void validateManifest(ManifestFile manifest,\n                               Iterator<Long> ids,\n                               Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry entry : ManifestReader.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2020-02-04 06:53:50","endLine":252,"groupId":"3617","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"validateManifest","params":"(ManifestFilemanifest@Iterator<Long>ids@Iterator<DataFile>expectedFiles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/01/2d177d90b61f415a8e2d81143edca96eb51870.src","preCode":"  static void validateManifest(String manifest,\n                               Iterator<Long> ids,\n                               Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry entry : ManifestReader.read(localInput(manifest)).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          (long) ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"},{"authorDate":"2020-02-04 06:53:50","commitOrder":2,"curCode":"  static void validateManifestEntries(ManifestFile manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry entry : ManifestReader.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2020-02-04 06:53:50","endLine":271,"groupId":"3617","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"validateManifestEntries","params":"(ManifestFilemanifest@Iterator<Long>ids@Iterator<DataFile>expectedFiles@Iterator<ManifestEntry.Status>expectedStatuses)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/01/2d177d90b61f415a8e2d81143edca96eb51870.src","preCode":"  static void validateManifestEntries(String manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry entry : ManifestReader.read(localInput(manifest)).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          (long) ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"}],"commitId":"c3dc9824b381e5e479e356be5e0f4fcf61a9fc37","commitMessage":"@@@Inherit snapshot ids for manifest entries (#675)\n\nThis change makes the snapshot ID optional for each data file in a manifest so that a null snapshot ID indicates that it should be inherited from the manifest metadata. As a consequence.  people can create manifests with missing snapshot IDs that will be assigned at commit time.\n\nCloses #504.","date":"2020-02-04 06:53:50","modifiedFileCount":"28","status":"M","submitter":"Anton Okolnychyi"},{"authorTime":"2020-04-16 07:44:35","codes":[{"authorDate":"2020-04-16 07:44:35","commitOrder":3,"curCode":"  static void validateManifest(ManifestFile manifest,\n                               Iterator<Long> ids,\n                               Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2020-04-16 07:44:35","endLine":252,"groupId":"3617","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"validateManifest","params":"(ManifestFilemanifest@Iterator<Long>ids@Iterator<DataFile>expectedFiles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/43/98c2420b28251d2a0cb408bc22a7e8a7f2772e.src","preCode":"  static void validateManifest(ManifestFile manifest,\n                               Iterator<Long> ids,\n                               Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry entry : ManifestReader.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"},{"authorDate":"2020-04-16 07:44:35","commitOrder":3,"curCode":"  static void validateManifestEntries(ManifestFile manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2020-04-16 07:44:35","endLine":271,"groupId":"3617","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"validateManifestEntries","params":"(ManifestFilemanifest@Iterator<Long>ids@Iterator<DataFile>expectedFiles@Iterator<ManifestEntry.Status>expectedStatuses)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/43/98c2420b28251d2a0cb408bc22a7e8a7f2772e.src","preCode":"  static void validateManifestEntries(ManifestFile manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry entry : ManifestReader.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"}],"commitId":"a5e77369c330873a6a292b8952b1ca09b7712bb7","commitMessage":"@@@Move manifest factory methods (#925)\n\n","date":"2020-04-16 07:44:35","modifiedFileCount":"18","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-04-16 07:44:35","codes":[{"authorDate":"2020-05-22 01:31:07","commitOrder":4,"curCode":"  void validateManifest(ManifestFile manifest,\n                        Iterator<Long> seqs,\n                        Iterator<Long> ids,\n                        Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      if (seqs != null) {\n        V1Assert.assertEquals(\"Sequence number should default to 0\", 0, entry.sequenceNumber().longValue());\n        V2Assert.assertEquals(\"Sequence number should match expected\", seqs.next(), entry.sequenceNumber());\n      }\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2020-05-22 01:31:07","endLine":300,"groupId":"3916","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"validateManifest","params":"(ManifestFilemanifest@Iterator<Long>seqs@Iterator<Long>ids@Iterator<DataFile>expectedFiles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/57/96f2f825bacd5dcd81cb274bda267e1bbbbd24.src","preCode":"  static void validateManifest(ManifestFile manifest,\n                               Iterator<Long> ids,\n                               Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"},{"authorDate":"2020-04-16 07:44:35","commitOrder":4,"curCode":"  static void validateManifestEntries(ManifestFile manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2020-04-16 07:44:35","endLine":271,"groupId":"3617","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"validateManifestEntries","params":"(ManifestFilemanifest@Iterator<Long>ids@Iterator<DataFile>expectedFiles@Iterator<ManifestEntry.Status>expectedStatuses)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/43/98c2420b28251d2a0cb408bc22a7e8a7f2772e.src","preCode":"  static void validateManifestEntries(ManifestFile manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"N"}],"commitId":"8db4a61a091b9e713153ba69ce1a85015b21538f","commitMessage":"@@@Add assertions for sequence numbers to TestFastAppend (#1038)\n\n* Add assertions for sequence numbers to TestFastAppend.\n\n* Fix checkstyle.","date":"2020-05-22 01:31:07","modifiedFileCount":"2","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-05-30 03:26:56","codes":[{"authorDate":"2020-05-30 03:26:56","commitOrder":5,"curCode":"  void validateManifest(ManifestFile manifest,\n                        Iterator<Long> seqs,\n                        Iterator<Long> ids,\n                        Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry<DataFile> entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      if (seqs != null) {\n        V1Assert.assertEquals(\"Sequence number should default to 0\", 0, entry.sequenceNumber().longValue());\n        V2Assert.assertEquals(\"Sequence number should match expected\", seqs.next(), entry.sequenceNumber());\n      }\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2020-05-30 03:26:56","endLine":300,"groupId":"3916","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"validateManifest","params":"(ManifestFilemanifest@Iterator<Long>seqs@Iterator<Long>ids@Iterator<DataFile>expectedFiles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8d/e5e4b787def6d17094dac9132b111c47e95461.src","preCode":"  void validateManifest(ManifestFile manifest,\n                        Iterator<Long> seqs,\n                        Iterator<Long> ids,\n                        Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      if (seqs != null) {\n        V1Assert.assertEquals(\"Sequence number should default to 0\", 0, entry.sequenceNumber().longValue());\n        V2Assert.assertEquals(\"Sequence number should match expected\", seqs.next(), entry.sequenceNumber());\n      }\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"},{"authorDate":"2020-05-30 03:26:56","commitOrder":5,"curCode":"  static void validateManifestEntries(ManifestFile manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry<DataFile> entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2020-05-30 03:26:56","endLine":319,"groupId":"3617","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"validateManifestEntries","params":"(ManifestFilemanifest@Iterator<Long>ids@Iterator<DataFile>expectedFiles@Iterator<ManifestEntry.Status>expectedStatuses)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8d/e5e4b787def6d17094dac9132b111c47e95461.src","preCode":"  static void validateManifestEntries(ManifestFile manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"M"}],"commitId":"527240b445b23cef1a655eccbb3b2c0eb7d178c1","commitMessage":"@@@Add DeleteFile and manifest reader and writer for deletes (#1064)\n\n","date":"2020-05-30 03:26:56","modifiedFileCount":"28","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-05-30 03:26:56","codes":[{"authorDate":"2020-06-10 23:43:19","commitOrder":6,"curCode":"  void validateManifest(ManifestFile manifest,\n                        Iterator<Long> seqs,\n                        Iterator<Long> ids,\n                        Iterator<DataFile> expectedFiles,\n                        Iterator<ManifestEntry.Status> statuses) {\n    for (ManifestEntry<DataFile> entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      if (seqs != null) {\n        V1Assert.assertEquals(\"Sequence number should default to 0\", 0, entry.sequenceNumber().longValue());\n        V2Assert.assertEquals(\"Sequence number should match expected\", seqs.next(), entry.sequenceNumber());\n      }\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n      if (statuses != null) {\n        Assert.assertEquals(\"Status should match expected\",\n            statuses.next(), entry.status());\n      }\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2020-06-10 23:43:19","endLine":325,"groupId":"101747","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"validateManifest","params":"(ManifestFilemanifest@Iterator<Long>seqs@Iterator<Long>ids@Iterator<DataFile>expectedFiles@Iterator<ManifestEntry.Status>statuses)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/4e/9f6a06da85a7ee6579c5ac3beb4cf6a8239ca4.src","preCode":"  void validateManifest(ManifestFile manifest,\n                        Iterator<Long> seqs,\n                        Iterator<Long> ids,\n                        Iterator<DataFile> expectedFiles) {\n    for (ManifestEntry<DataFile> entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      if (seqs != null) {\n        V1Assert.assertEquals(\"Sequence number should default to 0\", 0, entry.sequenceNumber().longValue());\n        V2Assert.assertEquals(\"Sequence number should match expected\", seqs.next(), entry.sequenceNumber());\n      }\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"M"},{"authorDate":"2020-05-30 03:26:56","commitOrder":6,"curCode":"  static void validateManifestEntries(ManifestFile manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry<DataFile> entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","date":"2020-05-30 03:26:56","endLine":319,"groupId":"101747","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"validateManifestEntries","params":"(ManifestFilemanifest@Iterator<Long>ids@Iterator<DataFile>expectedFiles@Iterator<ManifestEntry.Status>expectedStatuses)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8d/e5e4b787def6d17094dac9132b111c47e95461.src","preCode":"  static void validateManifestEntries(ManifestFile manifest,\n                                      Iterator<Long> ids,\n                                      Iterator<DataFile> expectedFiles,\n                                      Iterator<ManifestEntry.Status> expectedStatuses) {\n    for (ManifestEntry<DataFile> entry : ManifestFiles.read(manifest, FILE_IO).entries()) {\n      DataFile file = entry.file();\n      DataFile expected = expectedFiles.next();\n      final ManifestEntry.Status expectedStatus = expectedStatuses.next();\n      Assert.assertEquals(\"Path should match expected\",\n          expected.path().toString(), file.path().toString());\n      Assert.assertEquals(\"Snapshot ID should match expected ID\",\n          ids.next(), entry.snapshotId());\n      Assert.assertEquals(\"Entry status should match expected ID\",\n          expectedStatus, entry.status());\n    }\n\n    Assert.assertFalse(\"Should find all files in the manifest\", expectedFiles.hasNext());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"N"}],"commitId":"bd606f56b14c49f39aa745534718d0cb6a50a8c9","commitMessage":"@@@Refactor MergingSnapshotProducer (#1098)\n\n","date":"2020-06-10 23:43:19","modifiedFileCount":"8","status":"M","submitter":"Ryan Blue"}]
