[{"authorTime":"2020-05-15 02:00:43","codes":[{"authorDate":"2020-04-16 07:44:35","commitOrder":3,"curCode":"  private ManifestFile writeManifest(DataFile... files) throws IOException {\n    File manifestFile = temp.newFile(\"input.m0.avro\");\n    Assert.assertTrue(manifestFile.delete());\n    OutputFile outputFile = FILE_IO.newOutputFile(manifestFile.getCanonicalPath());\n\n    ManifestWriter writer = ManifestFiles.write(SPEC, outputFile);\n    try {\n      for (DataFile file : files) {\n        writer.add(file);\n      }\n    } finally {\n      writer.close();\n    }\n\n    return writer.toManifestFile();\n  }\n","date":"2020-04-16 07:44:35","endLine":168,"groupId":"3975","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeManifest","params":"(DataFile...files)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/00/cec599dcf3965833b1578363b399eb22361b75.src","preCode":"  private ManifestFile writeManifest(DataFile... files) throws IOException {\n    File manifestFile = temp.newFile(\"input.m0.avro\");\n    Assert.assertTrue(manifestFile.delete());\n    OutputFile outputFile = FILE_IO.newOutputFile(manifestFile.getCanonicalPath());\n\n    ManifestWriter writer = ManifestFiles.write(SPEC, outputFile);\n    try {\n      for (DataFile file : files) {\n        writer.add(file);\n      }\n    } finally {\n      writer.close();\n    }\n\n    return writer.toManifestFile();\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"NB"},{"authorDate":"2020-05-15 02:00:43","commitOrder":3,"curCode":"  ManifestFile writeManifest(Long snapshotId, DataFile... files) throws IOException {\n    File manifestFile = temp.newFile(\"input.m0.avro\");\n    Assert.assertTrue(manifestFile.delete());\n    OutputFile outputFile = table.ops().io().newOutputFile(manifestFile.getCanonicalPath());\n\n    ManifestWriter writer = ManifestFiles.write(formatVersion, table.spec(), outputFile, snapshotId);\n    try {\n      for (DataFile file : files) {\n        writer.add(file);\n      }\n    } finally {\n      writer.close();\n    }\n\n    return writer.toManifestFile();\n  }\n","date":"2020-05-15 02:00:43","endLine":153,"groupId":"3911","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeManifest","params":"(LongsnapshotId@DataFile...files)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/7e/4b8957125ade61a45f65ab0a4d3d941ac9900c.src","preCode":"  ManifestFile writeManifest(Long snapshotId, DataFile... files) throws IOException {\n    File manifestFile = temp.newFile(\"input.m0.avro\");\n    Assert.assertTrue(manifestFile.delete());\n    OutputFile outputFile = table.ops().io().newOutputFile(manifestFile.getCanonicalPath());\n\n    ManifestWriter writer = ManifestFiles.write(formatVersion, table.spec(), outputFile, snapshotId);\n    try {\n      for (DataFile file : files) {\n        writer.add(file);\n      }\n    } finally {\n      writer.close();\n    }\n\n    return writer.toManifestFile();\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"}],"commitId":"55a4e5725387ac618015cfa586e5c4e25ed8ba9a","commitMessage":"@@@Refactor ManifestReader (#1036)\n\n","date":"2020-05-15 02:00:43","modifiedFileCount":"7","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-05-30 03:26:56","codes":[{"authorDate":"2020-04-16 07:44:35","commitOrder":4,"curCode":"  private ManifestFile writeManifest(DataFile... files) throws IOException {\n    File manifestFile = temp.newFile(\"input.m0.avro\");\n    Assert.assertTrue(manifestFile.delete());\n    OutputFile outputFile = FILE_IO.newOutputFile(manifestFile.getCanonicalPath());\n\n    ManifestWriter writer = ManifestFiles.write(SPEC, outputFile);\n    try {\n      for (DataFile file : files) {\n        writer.add(file);\n      }\n    } finally {\n      writer.close();\n    }\n\n    return writer.toManifestFile();\n  }\n","date":"2020-04-16 07:44:35","endLine":168,"groupId":"12396","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeManifest","params":"(DataFile...files)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/00/cec599dcf3965833b1578363b399eb22361b75.src","preCode":"  private ManifestFile writeManifest(DataFile... files) throws IOException {\n    File manifestFile = temp.newFile(\"input.m0.avro\");\n    Assert.assertTrue(manifestFile.delete());\n    OutputFile outputFile = FILE_IO.newOutputFile(manifestFile.getCanonicalPath());\n\n    ManifestWriter writer = ManifestFiles.write(SPEC, outputFile);\n    try {\n      for (DataFile file : files) {\n        writer.add(file);\n      }\n    } finally {\n      writer.close();\n    }\n\n    return writer.toManifestFile();\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"N"},{"authorDate":"2020-05-30 03:26:56","commitOrder":4,"curCode":"  ManifestFile writeManifest(Long snapshotId, DataFile... files) throws IOException {\n    File manifestFile = temp.newFile(\"input.m0.avro\");\n    Assert.assertTrue(manifestFile.delete());\n    OutputFile outputFile = table.ops().io().newOutputFile(manifestFile.getCanonicalPath());\n\n    ManifestWriter<DataFile> writer = ManifestFiles.write(formatVersion, table.spec(), outputFile, snapshotId);\n    try {\n      for (DataFile file : files) {\n        writer.add(file);\n      }\n    } finally {\n      writer.close();\n    }\n\n    return writer.toManifestFile();\n  }\n","date":"2020-05-30 03:26:56","endLine":160,"groupId":"12396","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeManifest","params":"(LongsnapshotId@DataFile...files)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8d/e5e4b787def6d17094dac9132b111c47e95461.src","preCode":"  ManifestFile writeManifest(Long snapshotId, DataFile... files) throws IOException {\n    File manifestFile = temp.newFile(\"input.m0.avro\");\n    Assert.assertTrue(manifestFile.delete());\n    OutputFile outputFile = table.ops().io().newOutputFile(manifestFile.getCanonicalPath());\n\n    ManifestWriter writer = ManifestFiles.write(formatVersion, table.spec(), outputFile, snapshotId);\n    try {\n      for (DataFile file : files) {\n        writer.add(file);\n      }\n    } finally {\n      writer.close();\n    }\n\n    return writer.toManifestFile();\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TableTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"}],"commitId":"527240b445b23cef1a655eccbb3b2c0eb7d178c1","commitMessage":"@@@Add DeleteFile and manifest reader and writer for deletes (#1064)\n\n","date":"2020-05-30 03:26:56","modifiedFileCount":"28","status":"M","submitter":"Ryan Blue"}]
