[{"authorTime":"2019-07-17 00:44:16","codes":[{"authorDate":"2020-02-18 05:52:41","commitOrder":2,"curCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table.spec().partitionType()).fields());\n    if (table.spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","date":"2020-02-18 05:52:41","endLine":76,"groupId":"903","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"schema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/75/5bab59daa45d1f6814b27cb4776e58f55d0c87.src","preCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table.spec().partitionType()).fields());\n    if (table.spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/AllDataFilesTable.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"},{"authorDate":"2019-07-17 00:44:16","commitOrder":2,"curCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table.spec().partitionType()).fields());\n    if (table.spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","date":"2019-07-17 00:44:16","endLine":68,"groupId":"903","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"schema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/69/5899279ccd80e97a1571fc0d8d3024d5a52268.src","preCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table.spec().partitionType()).fields());\n    if (table.spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/DataFilesTable.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"NB"}],"commitId":"65095c149c2489ac3230d0d20328e492919d9d4f","commitMessage":"@@@Add all_data_files.  all_manifests.  and all_entries metadata tables (#805)\n\n","date":"2020-02-18 05:52:41","modifiedFileCount":"9","status":"M","submitter":"Ryan Blue"},{"authorTime":"2020-09-30 02:33:10","codes":[{"authorDate":"2020-02-18 05:52:41","commitOrder":3,"curCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table.spec().partitionType()).fields());\n    if (table.spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","date":"2020-02-18 05:52:41","endLine":76,"groupId":"903","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"schema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/75/5bab59daa45d1f6814b27cb4776e58f55d0c87.src","preCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table.spec().partitionType()).fields());\n    if (table.spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/AllDataFilesTable.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"},{"authorDate":"2020-09-30 02:33:10","commitOrder":3,"curCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table.spec().partitionType()).fields());\n    if (table.spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(DataFile.PARTITION_ID));\n    } else {\n      return schema;\n    }\n  }\n","date":"2020-09-30 02:33:10","endLine":67,"groupId":"903","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"schema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ed/0efc6d8d5f19bbf0617b13eff498db8d0e2849.src","preCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table.spec().partitionType()).fields());\n    if (table.spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/DataFilesTable.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"98a31b2fab2c4667f69d1d0f66e42f98d68378dc","commitMessage":"@@@Core: Replace partition field id literal with reference (#1528)\n\n","date":"2020-09-30 02:33:10","modifiedFileCount":"1","status":"M","submitter":"Russell Spitzer"},{"authorTime":"2021-04-01 09:38:09","codes":[{"authorDate":"2021-04-01 09:38:09","commitOrder":4,"curCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table().spec().partitionType()).fields());\n    if (table().spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","date":"2021-04-01 09:38:09","endLine":66,"groupId":"3964","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"schema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/13/963b8e0437345ab3d64a66cffe9bba6c5a00af.src","preCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table.spec().partitionType()).fields());\n    if (table.spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/AllDataFilesTable.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2021-04-01 09:38:09","commitOrder":4,"curCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table().spec().partitionType()).fields());\n    if (table().spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(DataFile.PARTITION_ID));\n    } else {\n      return schema;\n    }\n  }\n","date":"2021-04-01 09:38:09","endLine":58,"groupId":"3964","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"schema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/de/d26c07bdbfa97e5352ac9637f5d40ac6b0e4e3.src","preCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table.spec().partitionType()).fields());\n    if (table.spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(DataFile.PARTITION_ID));\n    } else {\n      return schema;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/DataFilesTable.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"d9133f46df31c0d4b0cac33b23b9ba256264ed2d","commitMessage":"@@@Core: Implement HasTableOperations in metadata and txn tables (#2398)\n\n","date":"2021-04-01 09:38:09","modifiedFileCount":"11","status":"M","submitter":"Anton Okolnychyi"},{"authorTime":"2021-08-14 14:16:13","codes":[{"authorDate":"2021-08-14 14:16:13","commitOrder":5,"curCode":"  public Schema schema() {\n    StructType partitionType = Partitioning.partitionType(table());\n    Schema schema = new Schema(DataFile.getType(partitionType).fields());\n    if (partitionType.fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","date":"2021-08-14 14:16:13","endLine":68,"groupId":"102099","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"schema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d1/b084f0206cbcd98a605d92616d7f839eced008.src","preCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table().spec().partitionType()).fields());\n    if (table().spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(102));\n    } else {\n      return schema;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/AllDataFilesTable.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2021-08-14 14:16:13","commitOrder":5,"curCode":"  public Schema schema() {\n    StructType partitionType = Partitioning.partitionType(table());\n    Schema schema = new Schema(DataFile.getType(partitionType).fields());\n    if (partitionType.fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(DataFile.PARTITION_ID));\n    } else {\n      return schema;\n    }\n  }\n","date":"2021-08-14 14:16:13","endLine":63,"groupId":"102099","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"schema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f9/31c0650081ed30673ba24bd70f8f140f151680.src","preCode":"  public Schema schema() {\n    Schema schema = new Schema(DataFile.getType(table().spec().partitionType()).fields());\n    if (table().spec().fields().size() < 1) {\n      \r\n      return TypeUtil.selectNot(schema, Sets.newHashSet(DataFile.PARTITION_ID));\n    } else {\n      return schema;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/DataFilesTable.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"95cde3aea7eacf9a391cda36ef255d1b24d930cd","commitMessage":"@@@Core: Fix querying metadata tables with multiple specs (#2936)\n\n","date":"2021-08-14 14:16:13","modifiedFileCount":"5","status":"M","submitter":"Anton Okolnychyi"}]
