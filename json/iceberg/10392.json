[{"authorTime":"2020-02-05 05:15:06","codes":[{"authorDate":"2019-10-19 06:06:10","commitOrder":2,"curCode":"  public void testDataFileKryoSerialization() throws Exception {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, DATA_FILE);\n      kryo.writeClassAndObject(out, DATA_FILE.copy());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a DataFile\", obj instanceof DataFile);\n        checkDataFile(DATA_FILE, (DataFile) obj);\n      }\n    }\n  }\n","date":"2019-10-19 06:06:10","endLine":112,"groupId":"3657","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDataFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/64/c9d519f16b97900ba6f68f0c455a672b2eddc5.src","preCode":"  public void testDataFileKryoSerialization() throws Exception {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, DATA_FILE);\n      kryo.writeClassAndObject(out, DATA_FILE.copy());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a DataFile\", obj instanceof DataFile);\n        checkDataFile(DATA_FILE, (DataFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestDataFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"NB"},{"authorDate":"2020-02-05 05:15:06","commitOrder":2,"curCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","date":"2020-02-05 05:15:06","endLine":104,"groupId":"2645","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testManifestFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/df/1a7ea20126fbcb9f247351e46d02b074e02c24.src","preCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"722f4c38557bac20cba6b6449eac7b810563571f","commitMessage":"@@@Make GenericManifestFile compatible with Kryo (#775)\n\n","date":"2020-02-05 05:15:06","modifiedFileCount":"1","status":"M","submitter":"Anton Okolnychyi"},{"authorTime":"2020-02-05 05:15:06","codes":[{"authorDate":"2020-08-11 06:39:00","commitOrder":3,"curCode":"  public void testDataFileKryoSerialization() throws Exception {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, DATA_FILE);\n      kryo.writeClassAndObject(out, DATA_FILE.copy());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a DataFile\", obj instanceof DataFile);\n        assertEquals(DATA_FILE, (DataFile) obj);\n      }\n    }\n  }\n","date":"2020-08-11 06:39:00","endLine":114,"groupId":"3657","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDataFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/2c/06372087ed6e068d20b499e4cb8598ddb639a8.src","preCode":"  public void testDataFileKryoSerialization() throws Exception {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, DATA_FILE);\n      kryo.writeClassAndObject(out, DATA_FILE.copy());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a DataFile\", obj instanceof DataFile);\n        checkDataFile(DATA_FILE, (DataFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestDataFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2020-02-05 05:15:06","commitOrder":3,"curCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","date":"2020-02-05 05:15:06","endLine":104,"groupId":"2645","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testManifestFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/df/1a7ea20126fbcb9f247351e46d02b074e02c24.src","preCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"N"}],"commitId":"5e44e45dd273aea89e93ffbcdbfc2c36e3a0e9cb","commitMessage":"@@@Spark: Create shared assertions for common task validation (#1280)\n\n","date":"2020-08-11 06:39:00","modifiedFileCount":"2","status":"M","submitter":"Jungtaek Lim"},{"authorTime":"2021-02-06 01:38:12","codes":[{"authorDate":"2020-08-11 06:39:00","commitOrder":4,"curCode":"  public void testDataFileKryoSerialization() throws Exception {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, DATA_FILE);\n      kryo.writeClassAndObject(out, DATA_FILE.copy());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a DataFile\", obj instanceof DataFile);\n        assertEquals(DATA_FILE, (DataFile) obj);\n      }\n    }\n  }\n","date":"2020-08-11 06:39:00","endLine":114,"groupId":"3657","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDataFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/2c/06372087ed6e068d20b499e4cb8598ddb639a8.src","preCode":"  public void testDataFileKryoSerialization() throws Exception {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, DATA_FILE);\n      kryo.writeClassAndObject(out, DATA_FILE.copy());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a DataFile\", obj instanceof DataFile);\n        assertEquals(DATA_FILE, (DataFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestDataFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"N"},{"authorDate":"2021-02-06 01:38:12","commitOrder":4,"curCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","date":"2021-02-06 01:38:12","endLine":122,"groupId":"2645","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testManifestFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f2/e18c87bf4e1251e85e142d921ac407043a34e7.src","preCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"8a84715205631a17668ec8d63a791a25fb511992","commitMessage":"@@@Core: Add contains_nan to manifest list partition summaries (#1872)\n\n","date":"2021-02-06 01:38:12","modifiedFileCount":"13","status":"M","submitter":"yyanyy"},{"authorTime":"2021-07-19 18:57:09","codes":[{"authorDate":"2021-07-19 18:57:09","commitOrder":5,"curCode":"  public void testDataFileKryoSerialization() throws Exception {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, DATA_FILE);\n      kryo.writeClassAndObject(out, DATA_FILE.copy());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assertions.assertThat(obj).as(\"Should be a DataFile\").isInstanceOf(DataFile.class);\n        assertEquals(DATA_FILE, (DataFile) obj);\n      }\n    }\n  }\n","date":"2021-07-19 18:57:09","endLine":121,"groupId":"10392","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testDataFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/12/fa8b2fc5391f0a2c7ce356bf5722a1d6d02b6b.src","preCode":"  public void testDataFileKryoSerialization() throws Exception {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, DATA_FILE);\n      kryo.writeClassAndObject(out, DATA_FILE.copy());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 2; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a DataFile\", obj instanceof DataFile);\n        assertEquals(DATA_FILE, (DataFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestDataFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2021-07-19 18:57:09","commitOrder":5,"curCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assertions.assertThat(obj).as(\"Should be a ManifestFile\").isInstanceOf(ManifestFile.class);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","date":"2021-07-19 18:57:09","endLine":123,"groupId":"10392","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testManifestFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/25/004aa110e46d825e6374612cf9a60adb056a92.src","preCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"0055e855ccabbd6a592b3b49e1f38131f62e0fdd","commitMessage":"@@@Move Assert.assertTrue(..) instance checks to AssertJ assertions (#2756)\n\n","date":"2021-07-19 18:57:09","modifiedFileCount":"25","status":"M","submitter":"Eduard Tudenh?fner"}]
