[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testOr() {\n    \r\n    boolean shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 80))).eval(FILE);\n    Assert.assertFalse(\"Should not match: no matching values\", shouldRead);\n\n    shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 60))).eval(FILE);\n    Assert.assertFalse(\"Should not match: some values do not match\", shouldRead);\n\n    shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 30))).eval(FILE);\n    Assert.assertTrue(\"Should match: all values match > 30\", shouldRead);\n  }\n","date":"2019-03-21 07:25:05","endLine":192,"groupId":"3149","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/22/69c07bc02c9058586137279f68cb326934cb2e.src","preCode":"  public void testOr() {\n    \r\n    boolean shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 80))).eval(FILE);\n    Assert.assertFalse(\"Should not match: no matching values\", shouldRead);\n\n    shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 60))).eval(FILE);\n    Assert.assertFalse(\"Should not match: some values do not match\", shouldRead);\n\n    shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 30))).eval(FILE);\n    Assert.assertTrue(\"Should match: all values match > 30\", shouldRead);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestStrictMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testAnd() {\n    \r\n    boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,\n        and(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 0))).eval(FILE);\n    Assert.assertFalse(\"Should skip: and(false, false)\", shouldRead);\n\n    shouldRead = new InclusiveMetricsEvaluator(SCHEMA,\n        and(greaterThan(\"id\", 5), lessThanOrEqual(\"id\", 30))).eval(FILE);\n    Assert.assertTrue(\"Should read: and(true, true)\", shouldRead);\n  }\n","date":"2019-03-21 07:25:05","endLine":169,"groupId":"3148","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/60/14ce6ff9ac57ade8b67ec8c9fbf733dab9e8c7.src","preCode":"  public void testAnd() {\n    \r\n    boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,\n        and(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 0))).eval(FILE);\n    Assert.assertFalse(\"Should skip: and(false, false)\", shouldRead);\n\n    shouldRead = new InclusiveMetricsEvaluator(SCHEMA,\n        and(greaterThan(\"id\", 5), lessThanOrEqual(\"id\", 30))).eval(FILE);\n    Assert.assertTrue(\"Should read: and(true, true)\", shouldRead);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestInclusiveMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-12-28 05:07:53","codes":[{"authorDate":"2019-12-28 05:07:53","commitOrder":2,"curCode":"  public void testOr() {\n    \r\n    boolean shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", INT_MIN_VALUE - 25), greaterThanOrEqual(\"id\", INT_MAX_VALUE + 1))).eval(FILE);\n    Assert.assertFalse(\"Should not match: no matching values\", shouldRead);\n\n    shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", INT_MIN_VALUE - 25), greaterThanOrEqual(\"id\", INT_MAX_VALUE - 19))).eval(FILE);\n    Assert.assertFalse(\"Should not match: some values do not match\", shouldRead);\n\n    shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", INT_MIN_VALUE - 25), greaterThanOrEqual(\"id\", INT_MIN_VALUE))).eval(FILE);\n    Assert.assertTrue(\"Should match: all values match >= 30\", shouldRead);\n  }\n","date":"2019-12-28 05:07:53","endLine":250,"groupId":"101266","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testOr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/9f/0d465e0ee9fc8c4f1c6ec1b029abdd39bb7ac8.src","preCode":"  public void testOr() {\n    \r\n    boolean shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 80))).eval(FILE);\n    Assert.assertFalse(\"Should not match: no matching values\", shouldRead);\n\n    shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 60))).eval(FILE);\n    Assert.assertFalse(\"Should not match: some values do not match\", shouldRead);\n\n    shouldRead = new StrictMetricsEvaluator(SCHEMA,\n        or(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 30))).eval(FILE);\n    Assert.assertTrue(\"Should match: all values match > 30\", shouldRead);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestStrictMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2019-12-28 05:07:53","commitOrder":2,"curCode":"  public void testAnd() {\n    \r\n    boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,\n        and(lessThan(\"id\", INT_MIN_VALUE - 25), greaterThanOrEqual(\"id\", INT_MIN_VALUE - 30))).eval(FILE);\n    Assert.assertFalse(\"Should skip: and(false, true)\", shouldRead);\n\n    shouldRead = new InclusiveMetricsEvaluator(SCHEMA,\n        and(lessThan(\"id\", INT_MIN_VALUE - 25), greaterThanOrEqual(\"id\", INT_MAX_VALUE + 1))).eval(FILE);\n    Assert.assertFalse(\"Should skip: and(false, false)\", shouldRead);\n\n    shouldRead = new InclusiveMetricsEvaluator(SCHEMA,\n        and(greaterThan(\"id\", INT_MIN_VALUE - 25), lessThanOrEqual(\"id\", INT_MIN_VALUE))).eval(FILE);\n    Assert.assertTrue(\"Should read: and(true, true)\", shouldRead);\n  }\n","date":"2019-12-28 05:07:53","endLine":229,"groupId":"101266","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/1f/90cf1c130864f149b47d34706fd3b45bbe7ad4.src","preCode":"  public void testAnd() {\n    \r\n    boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,\n        and(lessThan(\"id\", 5), greaterThanOrEqual(\"id\", 0))).eval(FILE);\n    Assert.assertFalse(\"Should skip: and(false, false)\", shouldRead);\n\n    shouldRead = new InclusiveMetricsEvaluator(SCHEMA,\n        and(greaterThan(\"id\", 5), lessThanOrEqual(\"id\", 30))).eval(FILE);\n    Assert.assertTrue(\"Should read: and(true, true)\", shouldRead);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestInclusiveMetricsEvaluator.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"M"}],"commitId":"33e675331e221af0b2618815addbdb4fb29c9083","commitMessage":"@@@Implement in and notIn in multiple visitors (#600)\n\n","date":"2019-12-28 05:07:53","modifiedFileCount":"10","status":"M","submitter":"jun-he"}]
