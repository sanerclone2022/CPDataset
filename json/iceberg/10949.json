[{"authorTime":"2020-06-24 01:28:42","codes":[{"authorDate":"2020-06-20 09:02:23","commitOrder":2,"curCode":"  public static void startSpark() {\n    String metastoreURI = CONF.get(HiveConf.ConfVars.METASTOREURIS.varname);\n\n    \r\n    TestSparkTableUtil.spark = SparkSession.builder().master(\"local[2]\")\n            .enableHiveSupport()\n            .config(\"spark.hadoop.hive.metastore.uris\", metastoreURI)\n            .config(\"hive.exec.dynamic.partition\", \"true\")\n            .config(\"hive.exec.dynamic.partition.mode\", \"nonstrict\")\n            .config(\"spark.sql.legacy.allowCreatingManagedTableUsingNonemptyLocation\", \"true\")\n            .getOrCreate();\n  }\n","date":"2020-06-20 09:02:23","endLine":86,"groupId":"4644","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startSpark","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/37/f57d483364d35dd5ac100488e326ffc061552b.src","preCode":"  public static void startSpark() {\n    String metastoreURI = CONF.get(HiveConf.ConfVars.METASTOREURIS.varname);\n\n    \r\n    TestSparkTableUtil.spark = SparkSession.builder().master(\"local[2]\")\n            .enableHiveSupport()\n            .config(\"spark.hadoop.hive.metastore.uris\", metastoreURI)\n            .config(\"hive.exec.dynamic.partition\", \"true\")\n            .config(\"hive.exec.dynamic.partition.mode\", \"nonstrict\")\n            .config(\"spark.sql.legacy.allowCreatingManagedTableUsingNonemptyLocation\", \"true\")\n            .getOrCreate();\n  }\n","realPath":"spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"NB"},{"authorDate":"2020-06-24 01:28:42","commitOrder":2,"curCode":"  public static void startSpark() {\n    String metastoreURI = CONF.get(HiveConf.ConfVars.METASTOREURIS.varname);\n\n    \r\n    TestNameMappingProjection.spark = SparkSession.builder().master(\"local[2]\")\n        .enableHiveSupport()\n        .config(\"spark.hadoop.hive.metastore.uris\", metastoreURI)\n        .config(\"hive.exec.dynamic.partition\", \"true\")\n        .config(\"hive.exec.dynamic.partition.mode\", \"nonstrict\")\n        .config(\"spark.sql.legacy.allowCreatingManagedTableUsingNonemptyLocation\", \"true\")\n        .getOrCreate();\n  }\n","date":"2020-06-24 01:28:42","endLine":75,"groupId":"4644","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"startSpark","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5b/82d7bca629f346a485f8e78b7bc840c1b0a1fe.src","preCode":"  public static void startSpark() {\n    String metastoreURI = CONF.get(HiveConf.ConfVars.METASTOREURIS.varname);\n\n    \r\n    TestNameMappingProjection.spark = SparkSession.builder().master(\"local[2]\")\n        .enableHiveSupport()\n        .config(\"spark.hadoop.hive.metastore.uris\", metastoreURI)\n        .config(\"hive.exec.dynamic.partition\", \"true\")\n        .config(\"hive.exec.dynamic.partition.mode\", \"nonstrict\")\n        .config(\"spark.sql.legacy.allowCreatingManagedTableUsingNonemptyLocation\", \"true\")\n        .getOrCreate();\n  }\n","realPath":"spark2/src/test/java/org/apache/iceberg/spark/source/TestNameMappingProjection.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"33f1825b72efe05c7d83feb68fa1669eb00bb129","commitMessage":"@@@Spark: Read using Avro name mapping if configured (#1129)\n\n","date":"2020-06-24 01:28:42","modifiedFileCount":"1","status":"M","submitter":"Chen Junjie"},{"authorTime":"2020-06-24 01:28:42","codes":[{"authorDate":"2020-09-26 06:55:33","commitOrder":3,"curCode":"  public static void startSpark() {\n    String metastoreURI = HiveTableBaseTest.hiveConf.get(HiveConf.ConfVars.METASTOREURIS.varname);\n\n    \r\n    TestSparkTableUtil.spark = SparkSession.builder().master(\"local[2]\")\n            .enableHiveSupport()\n            .config(\"spark.hadoop.hive.metastore.uris\", metastoreURI)\n            .config(\"hive.exec.dynamic.partition\", \"true\")\n            .config(\"hive.exec.dynamic.partition.mode\", \"nonstrict\")\n            .config(\"spark.sql.legacy.allowCreatingManagedTableUsingNonemptyLocation\", \"true\")\n            .getOrCreate();\n  }\n","date":"2020-09-26 06:55:33","endLine":84,"groupId":"10949","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startSpark","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/fe/948a4ddaac357c6c86c8dc1f2ebd8ac85b57f8.src","preCode":"  public static void startSpark() {\n    String metastoreURI = CONF.get(HiveConf.ConfVars.METASTOREURIS.varname);\n\n    \r\n    TestSparkTableUtil.spark = SparkSession.builder().master(\"local[2]\")\n            .enableHiveSupport()\n            .config(\"spark.hadoop.hive.metastore.uris\", metastoreURI)\n            .config(\"hive.exec.dynamic.partition\", \"true\")\n            .config(\"hive.exec.dynamic.partition.mode\", \"nonstrict\")\n            .config(\"spark.sql.legacy.allowCreatingManagedTableUsingNonemptyLocation\", \"true\")\n            .getOrCreate();\n  }\n","realPath":"spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtil.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2020-06-24 01:28:42","commitOrder":3,"curCode":"  public static void startSpark() {\n    String metastoreURI = CONF.get(HiveConf.ConfVars.METASTOREURIS.varname);\n\n    \r\n    TestNameMappingProjection.spark = SparkSession.builder().master(\"local[2]\")\n        .enableHiveSupport()\n        .config(\"spark.hadoop.hive.metastore.uris\", metastoreURI)\n        .config(\"hive.exec.dynamic.partition\", \"true\")\n        .config(\"hive.exec.dynamic.partition.mode\", \"nonstrict\")\n        .config(\"spark.sql.legacy.allowCreatingManagedTableUsingNonemptyLocation\", \"true\")\n        .getOrCreate();\n  }\n","date":"2020-06-24 01:28:42","endLine":75,"groupId":"10949","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"startSpark","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5b/82d7bca629f346a485f8e78b7bc840c1b0a1fe.src","preCode":"  public static void startSpark() {\n    String metastoreURI = CONF.get(HiveConf.ConfVars.METASTOREURIS.varname);\n\n    \r\n    TestNameMappingProjection.spark = SparkSession.builder().master(\"local[2]\")\n        .enableHiveSupport()\n        .config(\"spark.hadoop.hive.metastore.uris\", metastoreURI)\n        .config(\"hive.exec.dynamic.partition\", \"true\")\n        .config(\"hive.exec.dynamic.partition.mode\", \"nonstrict\")\n        .config(\"spark.sql.legacy.allowCreatingManagedTableUsingNonemptyLocation\", \"true\")\n        .getOrCreate();\n  }\n","realPath":"spark2/src/test/java/org/apache/iceberg/spark/source/TestNameMappingProjection.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"}],"commitId":"c07b23b313e9992d16b8ea8a4eb89ed5a6b12985","commitMessage":"@@@Spark: Follow name mapping when importing ORC tables (#1399)\n\n","date":"2020-09-26 06:55:33","modifiedFileCount":"3","status":"M","submitter":"Edgar Rodriguez"}]
