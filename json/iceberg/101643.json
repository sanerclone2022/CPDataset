[{"authorTime":"2020-11-20 02:23:35","codes":[{"authorDate":"2020-11-20 02:23:35","commitOrder":1,"curCode":"  public void constructor_warehousePathWithEndSlash() {\n    GlueCatalog catalogWithSlash = new GlueCatalog(glue);\n    catalogWithSlash.initialize(CATALOG_NAME, WAREHOUSE_PATH + \"/\", new AwsProperties(), null);\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = catalogWithSlash.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","date":"2020-11-20 02:23:35","endLine":96,"groupId":"275","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"constructor_warehousePathWithEndSlash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a8/0b168f77bb5bfe9b297ee0c51b74cfbb323a36.src","preCode":"  public void constructor_warehousePathWithEndSlash() {\n    GlueCatalog catalogWithSlash = new GlueCatalog(glue);\n    catalogWithSlash.initialize(CATALOG_NAME, WAREHOUSE_PATH + \"/\", new AwsProperties(), null);\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = catalogWithSlash.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","realPath":"aws/src/test/java/org/apache/iceberg/aws/glue/GlueCatalogTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"},{"authorDate":"2020-11-20 02:23:35","commitOrder":1,"curCode":"  public void defaultWarehouseLocation_noDbUri() {\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = glueCatalog.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","date":"2020-11-20 02:23:35","endLine":105,"groupId":"275","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultWarehouseLocation_noDbUri","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a8/0b168f77bb5bfe9b297ee0c51b74cfbb323a36.src","preCode":"  public void defaultWarehouseLocation_noDbUri() {\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = glueCatalog.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","realPath":"aws/src/test/java/org/apache/iceberg/aws/glue/GlueCatalogTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"}],"commitId":"0beb7d663694d78e6edecb241a008e9834c82d8c","commitMessage":"@@@AWS: Add Glue catalog and table operations (#1633)\n\n","date":"2020-11-20 02:23:35","modifiedFileCount":"3","status":"B","submitter":"jackye1995"},{"authorTime":"2020-11-20 02:23:35","codes":[{"authorDate":"2020-12-20 00:28:07","commitOrder":2,"curCode":"  public void constructor_warehousePathWithEndSlash() {\n    GlueCatalog catalogWithSlash = new GlueCatalog();\n    catalogWithSlash.initialize(CATALOG_NAME, WAREHOUSE_PATH + \"/\", new AwsProperties(), glue, null);\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = catalogWithSlash.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","date":"2020-12-20 00:28:07","endLine":96,"groupId":"275","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"constructor_warehousePathWithEndSlash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/45/329c1c1e77c6a29041f772a8ea83d489aa7a3b.src","preCode":"  public void constructor_warehousePathWithEndSlash() {\n    GlueCatalog catalogWithSlash = new GlueCatalog(glue);\n    catalogWithSlash.initialize(CATALOG_NAME, WAREHOUSE_PATH + \"/\", new AwsProperties(), null);\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = catalogWithSlash.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","realPath":"aws/src/test/java/org/apache/iceberg/aws/glue/GlueCatalogTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2020-11-20 02:23:35","commitOrder":2,"curCode":"  public void defaultWarehouseLocation_noDbUri() {\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = glueCatalog.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","date":"2020-11-20 02:23:35","endLine":105,"groupId":"275","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultWarehouseLocation_noDbUri","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a8/0b168f77bb5bfe9b297ee0c51b74cfbb323a36.src","preCode":"  public void defaultWarehouseLocation_noDbUri() {\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = glueCatalog.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","realPath":"aws/src/test/java/org/apache/iceberg/aws/glue/GlueCatalogTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"}],"commitId":"545316ac274aae29903e924d2eb4c7faa3f9a177","commitMessage":"@@@AWS: support custom client configuration (#1844)\n\n* AWS: support custom client configuration\n\n* fix checkstyle","date":"2020-12-20 00:28:07","modifiedFileCount":"7","status":"M","submitter":"Jack Ye"},{"authorTime":"2020-11-20 02:23:35","codes":[{"authorDate":"2021-01-06 05:08:28","commitOrder":3,"curCode":"  public void constructor_warehousePathWithEndSlash() {\n    GlueCatalog catalogWithSlash = new GlueCatalog();\n    catalogWithSlash.initialize(\n        CATALOG_NAME, WAREHOUSE_PATH + \"/\", new AwsProperties(), glue, LockManagers.defaultLockManager(), null);\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = catalogWithSlash.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","date":"2021-01-06 05:08:28","endLine":99,"groupId":"101643","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"constructor_warehousePathWithEndSlash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/95/dfad687f06cbe95b0037e230cb03f3b498ee90.src","preCode":"  public void constructor_warehousePathWithEndSlash() {\n    GlueCatalog catalogWithSlash = new GlueCatalog();\n    catalogWithSlash.initialize(CATALOG_NAME, WAREHOUSE_PATH + \"/\", new AwsProperties(), glue, null);\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = catalogWithSlash.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","realPath":"aws/src/test/java/org/apache/iceberg/aws/glue/GlueCatalogTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2020-11-20 02:23:35","commitOrder":3,"curCode":"  public void defaultWarehouseLocation_noDbUri() {\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = glueCatalog.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","date":"2020-11-20 02:23:35","endLine":105,"groupId":"101643","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultWarehouseLocation_noDbUri","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a8/0b168f77bb5bfe9b297ee0c51b74cfbb323a36.src","preCode":"  public void defaultWarehouseLocation_noDbUri() {\n    Mockito.doReturn(GetDatabaseResponse.builder()\n        .database(Database.builder().name(\"db\").build()).build())\n        .when(glue).getDatabase(Mockito.any(GetDatabaseRequest.class));\n    String location = glueCatalog.defaultWarehouseLocation(TableIdentifier.of(\"db\", \"table\"));\n    Assert.assertEquals(WAREHOUSE_PATH + \"/db.db/table\", location);\n  }\n","realPath":"aws/src/test/java/org/apache/iceberg/aws/glue/GlueCatalogTest.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"}],"commitId":"4eb2010b3d51f63a6bfdafa9173f00ca354e66aa","commitMessage":"@@@AWS: Add LockManager interface and update Glue (#1823)\n\n","date":"2021-01-06 05:08:28","modifiedFileCount":"6","status":"M","submitter":"Jack Ye"}]
