[{"authorTime":"2019-07-27 05:06:30","codes":[{"authorDate":"2019-07-27 05:06:30","commitOrder":1,"curCode":"  public void testMonthStrictLowerBound() {\n    Long date = (long) Literal.of(\"2017-12-01T00:00:00.00000\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-11\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-11\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT_EQ, \"2018-01\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT_EQ, \"2017-12\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n  }\n","date":"2019-07-27 05:06:30","endLine":97,"groupId":"3201","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMonthStrictLowerBound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5d/3c5b09085fbd00e905c5bae6cd2eb0eeb252ad.src","preCode":"  public void testMonthStrictLowerBound() {\n    Long date = (long) Literal.of(\"2017-12-01T00:00:00.00000\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-11\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-11\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT_EQ, \"2018-01\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT_EQ, \"2017-12\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/transforms/TestTimestampsProjection.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"},{"authorDate":"2019-07-27 05:06:30","commitOrder":1,"curCode":"  public void testMonthStrictUpperBound() {\n    Long date = (long) Literal.of(\"2017-12-31T23:59:59.999999\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-11\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-12\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT_EQ, \"2018-01\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT_EQ, \"2018-01\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n  }\n","date":"2019-07-27 05:06:30","endLine":110,"groupId":"3201","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMonthStrictUpperBound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/5d/3c5b09085fbd00e905c5bae6cd2eb0eeb252ad.src","preCode":"  public void testMonthStrictUpperBound() {\n    Long date = (long) Literal.of(\"2017-12-31T23:59:59.999999\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-11\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-12\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT_EQ, \"2018-01\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT_EQ, \"2018-01\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/transforms/TestTimestampsProjection.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"daf062053a87b2333bf2c0d2cd3c3676ab264989","commitMessage":"@@@Add projectStrict for Dates and Timestamps (#283)\n\n","date":"2019-07-27 05:06:30","modifiedFileCount":"5","status":"B","submitter":"moulimukherjee"},{"authorTime":"2019-08-03 01:52:27","codes":[{"authorDate":"2019-08-03 01:52:27","commitOrder":2,"curCode":"  public void testMonthStrictLowerBound() {\n    Long date = (long) Literal.of(\"2017-12-01T00:00:00.00000\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT, \"2017-12\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT, \"2017-12\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT, \"2017-12\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT, \"2017-11\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n  }\n","date":"2019-08-03 01:52:27","endLine":97,"groupId":"3213","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMonthStrictLowerBound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/3f/ec4046fc266f412926c6ae3f0da5ddba08ffff.src","preCode":"  public void testMonthStrictLowerBound() {\n    Long date = (long) Literal.of(\"2017-12-01T00:00:00.00000\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-11\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-11\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT_EQ, \"2018-01\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT_EQ, \"2017-12\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/transforms/TestTimestampsProjection.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2019-08-03 01:52:27","commitOrder":2,"curCode":"  public void testMonthStrictUpperBound() {\n    Long date = (long) Literal.of(\"2017-12-31T23:59:59.999999\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT, \"2017-12\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT, \"2018-01\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT, \"2017-12\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT, \"2017-12\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n  }\n","date":"2019-08-03 01:52:27","endLine":110,"groupId":"2369","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMonthStrictUpperBound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/3f/ec4046fc266f412926c6ae3f0da5ddba08ffff.src","preCode":"  public void testMonthStrictUpperBound() {\n    Long date = (long) Literal.of(\"2017-12-31T23:59:59.999999\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-11\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT_EQ, \"2017-12\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT_EQ, \"2018-01\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT_EQ, \"2018-01\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/transforms/TestTimestampsProjection.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"1a9bb2c4863ebf363e5aa347543125d3c184a32d","commitMessage":"@@@Add strict projections for Truncate transformations (#332)\n\nThis also includes new tests for residual evaluation.","date":"2019-08-03 01:52:27","modifiedFileCount":"4","status":"M","submitter":"moulimukherjee"},{"authorTime":"2019-12-28 05:09:55","codes":[{"authorDate":"2019-12-28 05:09:55","commitOrder":3,"curCode":"  public void testMonthStrictLowerBound() {\n    Long date = (long) Literal.of(\"2017-12-01T00:00:00.00000\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT, \"2017-12\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT, \"2017-12\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT, \"2017-12\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT, \"2017-11\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n\n    Long anotherDate = (long) Literal.of(\"2017-12-02T00:00:00.00000\").to(TYPE).value();\n    assertProjectionStrict(spec, notIn(\"timestamp\", anotherDate, date),\n        Expression.Operation.NOT_IN, \"[2017-12, 2017-12]\");\n    assertProjectionStrictValue(spec, in(\"timestamp\", anotherDate, date), Expression.Operation.FALSE);\n  }\n","date":"2019-12-28 05:09:55","endLine":125,"groupId":"101442","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMonthStrictLowerBound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ad/86b8a75024cf97defc18bb35e79a8b673005df.src","preCode":"  public void testMonthStrictLowerBound() {\n    Long date = (long) Literal.of(\"2017-12-01T00:00:00.00000\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT, \"2017-12\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT, \"2017-12\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT, \"2017-12\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT, \"2017-11\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/transforms/TestTimestampsProjection.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2019-12-28 05:09:55","commitOrder":3,"curCode":"  public void testMonthStrictUpperBound() {\n    Long date = (long) Literal.of(\"2017-12-31T23:59:59.999999\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT, \"2017-12\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT, \"2018-01\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT, \"2017-12\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT, \"2017-12\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n\n    Long anotherDate = (long) Literal.of(\"2017-11-02T00:00:00.00000\").to(TYPE).value();\n    assertProjectionStrict(spec, notIn(\"timestamp\", anotherDate, date),\n        Expression.Operation.NOT_IN, \"[2017-11, 2017-12]\");\n    assertProjectionStrictValue(spec, in(\"timestamp\", anotherDate, date), Expression.Operation.FALSE);\n  }\n","date":"2019-12-28 05:09:55","endLine":143,"groupId":"101442","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMonthStrictUpperBound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ad/86b8a75024cf97defc18bb35e79a8b673005df.src","preCode":"  public void testMonthStrictUpperBound() {\n    Long date = (long) Literal.of(\"2017-12-31T23:59:59.999999\").to(TYPE).value();\n    PartitionSpec spec = PartitionSpec.builderFor(SCHEMA).month(\"timestamp\").build();\n\n    assertProjectionStrict(spec, lessThan(\"timestamp\", date), Expression.Operation.LT, \"2017-12\");\n    assertProjectionStrict(spec, lessThanOrEqual(\"timestamp\", date), Expression.Operation.LT, \"2018-01\");\n    assertProjectionStrict(spec, greaterThan(\"timestamp\", date), Expression.Operation.GT, \"2017-12\");\n    assertProjectionStrict(spec, greaterThanOrEqual(\"timestamp\", date), Expression.Operation.GT, \"2017-12\");\n    assertProjectionStrict(spec, notEqual(\"timestamp\", date), Expression.Operation.NOT_EQ, \"2017-12\");\n    assertProjectionStrictValue(spec, equal(\"timestamp\", date), Expression.Operation.FALSE);\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/transforms/TestTimestampsProjection.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"79e88c64613219b7ed249d13d11bc1fca8e55178","commitMessage":"@@@Update project and projectStrict for set predicates (#628)\n\n","date":"2019-12-28 05:09:55","modifiedFileCount":"8","status":"M","submitter":"jun-he"}]
