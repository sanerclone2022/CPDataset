[{"authorTime":"2020-12-04 18:09:09","codes":[{"authorDate":"2020-12-03 08:34:37","commitOrder":3,"curCode":"  public void testInvalidRollbackToSnapshotCases() {\n    AssertHelpers.assertThrows(\"Should not allow mixed args\",\n        AnalysisException.class, \"Named and positional arguments cannot be mixed\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(namespace => 'n1', table => 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should not resolve procedures in arbitrary namespaces\",\n        NoSuchProcedureException.class, \"not found\",\n        () -> sql(\"CALL %s.custom.rollback_to_snapshot('n', 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(namespace => 'n', snapshot_id => 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(table => 't', snapshot_id => 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",\n        AnalysisException.class, \"Wrong arg type for snapshot_id: cannot cast\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', 't', 2.2)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty namespace\",\n        IllegalArgumentException.class, \"Namespace cannot be empty\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('', 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty table name\",\n        IllegalArgumentException.class, \"Table name cannot be empty\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', '', 1L)\", catalogName));\n  }\n","date":"2020-12-03 08:34:37","endLine":271,"groupId":"4511","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidRollbackToSnapshotCases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/8c/e8a35c60e827a8ad11f428c3be17835f0e809f.src","preCode":"  public void testInvalidRollbackToSnapshotCases() {\n    AssertHelpers.assertThrows(\"Should not allow mixed args\",\n        AnalysisException.class, \"Named and positional arguments cannot be mixed\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(namespace => 'n1', table => 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should not resolve procedures in arbitrary namespaces\",\n        NoSuchProcedureException.class, \"not found\",\n        () -> sql(\"CALL %s.custom.rollback_to_snapshot('n', 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(namespace => 'n', snapshot_id => 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(table => 't', snapshot_id => 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",\n        AnalysisException.class, \"Wrong arg type for snapshot_id: cannot cast\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', 't', 2.2)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty namespace\",\n        IllegalArgumentException.class, \"Namespace cannot be empty\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('', 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty table name\",\n        IllegalArgumentException.class, \"Table name cannot be empty\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', '', 1L)\", catalogName));\n  }\n","realPath":"spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/TestRollbackToSnapshotProcedure.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"NB"},{"authorDate":"2020-12-04 18:09:09","commitOrder":3,"curCode":"  public void testInvalidRemoveOrphanFilesCases() {\n    AssertHelpers.assertThrows(\"Should not allow mixed args\",\n        AnalysisException.class, \"Named and positional arguments cannot be mixed\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', table => 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should not resolve procedures in arbitrary namespaces\",\n        NoSuchProcedureException.class, \"not found\",\n        () -> sql(\"CALL %s.custom.remove_orphan_files('n', 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",\n        RuntimeException.class, \"Couldn't parse identifier\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', 2.2)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty namespace\",\n        IllegalArgumentException.class, \"Namespace cannot be empty\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('', 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty table name\",\n        IllegalArgumentException.class, \"Table name cannot be empty\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', '')\", catalogName));\n  }\n","date":"2020-12-04 18:09:09","endLine":246,"groupId":"184","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidRemoveOrphanFilesCases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/4d/5c0ece4366c3f5da2e92abd019a3e4f70ef6f8.src","preCode":"  public void testInvalidRemoveOrphanFilesCases() {\n    AssertHelpers.assertThrows(\"Should not allow mixed args\",\n        AnalysisException.class, \"Named and positional arguments cannot be mixed\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', table => 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should not resolve procedures in arbitrary namespaces\",\n        NoSuchProcedureException.class, \"not found\",\n        () -> sql(\"CALL %s.custom.remove_orphan_files('n', 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",\n        RuntimeException.class, \"Couldn't parse identifier\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', 2.2)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty namespace\",\n        IllegalArgumentException.class, \"Namespace cannot be empty\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('', 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty table name\",\n        IllegalArgumentException.class, \"Table name cannot be empty\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', '')\", catalogName));\n  }\n","realPath":"spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/TestRemoveOrphanFilesProcedure.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"B"}],"commitId":"bfddabbf876660ab4369495c5c321e4cfd19faac","commitMessage":"@@@Spark: Add RemoveOrphanFilesProcedure (#1869)\n\nFixes #1599.\n\nLead-authored-by: Kun Liu <liukun@apache.org>\nCo-authored-by: Anton Okolnychyi <aokolnychyi@apple.com>","date":"2020-12-04 18:09:09","modifiedFileCount":"2","status":"M","submitter":"Anton Okolnychyi"},{"authorTime":"2020-12-09 23:37:55","codes":[{"authorDate":"2020-12-09 23:37:55","commitOrder":4,"curCode":"  public void testInvalidRollbackToSnapshotCases() {\n    AssertHelpers.assertThrows(\"Should not allow mixed args\",\n        AnalysisException.class, \"Named and positional arguments cannot be mixed\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(namespace => 'n1', table => 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should not resolve procedures in arbitrary namespaces\",\n        NoSuchProcedureException.class, \"not found\",\n        () -> sql(\"CALL %s.custom.rollback_to_snapshot('n', 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('t')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(table => 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",\n        AnalysisException.class, \"Wrong arg type for snapshot_id: cannot cast\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('t', 2.2)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls with empty table identifier\",\n        IllegalArgumentException.class, \"Cannot handle an empty identifier\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('', 1L)\", catalogName));\n  }\n","date":"2020-12-09 23:37:55","endLine":259,"groupId":"101076","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testInvalidRollbackToSnapshotCases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d3/e6bdcbc285bf81ffadbacb3d7f403472e3cde8.src","preCode":"  public void testInvalidRollbackToSnapshotCases() {\n    AssertHelpers.assertThrows(\"Should not allow mixed args\",\n        AnalysisException.class, \"Named and positional arguments cannot be mixed\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(namespace => 'n1', table => 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should not resolve procedures in arbitrary namespaces\",\n        NoSuchProcedureException.class, \"not found\",\n        () -> sql(\"CALL %s.custom.rollback_to_snapshot('n', 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(namespace => 'n', snapshot_id => 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot(table => 't', snapshot_id => 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",\n        AnalysisException.class, \"Wrong arg type for snapshot_id: cannot cast\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', 't', 2.2)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty namespace\",\n        IllegalArgumentException.class, \"Namespace cannot be empty\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('', 't', 1L)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty table name\",\n        IllegalArgumentException.class, \"Table name cannot be empty\",\n        () -> sql(\"CALL %s.system.rollback_to_snapshot('n', '', 1L)\", catalogName));\n  }\n","realPath":"spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/TestRollbackToSnapshotProcedure.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"},{"authorDate":"2020-12-09 23:37:55","commitOrder":4,"curCode":"  public void testInvalidRemoveOrphanFilesCases() {\n    AssertHelpers.assertThrows(\"Should not allow mixed args\",\n        AnalysisException.class, \"Named and positional arguments cannot be mixed\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', table => 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should not resolve procedures in arbitrary namespaces\",\n        NoSuchProcedureException.class, \"not found\",\n        () -> sql(\"CALL %s.custom.remove_orphan_files('n', 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.remove_orphan_files()\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",\n        AnalysisException.class, \"Wrong arg type\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', 2.2)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls with empty table identifier\",\n        IllegalArgumentException.class, \"Cannot handle an empty identifier\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('')\", catalogName));\n  }\n","date":"2020-12-09 23:37:55","endLine":234,"groupId":"101076","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testInvalidRemoveOrphanFilesCases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c1/a4ec5d78115cf012fa2989d4f478aa0703ee0b.src","preCode":"  public void testInvalidRemoveOrphanFilesCases() {\n    AssertHelpers.assertThrows(\"Should not allow mixed args\",\n        AnalysisException.class, \"Named and positional arguments cannot be mixed\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', table => 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should not resolve procedures in arbitrary namespaces\",\n        NoSuchProcedureException.class, \"not found\",\n        () -> sql(\"CALL %s.custom.remove_orphan_files('n', 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls without all required args\",\n        AnalysisException.class, \"Missing required parameters\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",\n        RuntimeException.class, \"Couldn't parse identifier\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', 2.2)\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty namespace\",\n        IllegalArgumentException.class, \"Namespace cannot be empty\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('', 't')\", catalogName));\n\n    AssertHelpers.assertThrows(\"Should reject empty table name\",\n        IllegalArgumentException.class, \"Table name cannot be empty\",\n        () -> sql(\"CALL %s.system.remove_orphan_files('n', '')\", catalogName));\n  }\n","realPath":"spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/TestRemoveOrphanFilesProcedure.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"}],"commitId":"e39584ed89356cacf006610bffd475a3ad3a1ac4","commitMessage":"@@@Spark: Migrate to identifiers in procedures (#1890)\n\n","date":"2020-12-09 23:37:55","modifiedFileCount":"16","status":"M","submitter":"Russell Spitzer"}]
