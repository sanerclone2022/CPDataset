[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public UpdateSchema updateColumn(String name, Type.PrimitiveType newType) {\n    Types.NestedField field = schema.findField(name);\n    Preconditions.checkArgument(field != null, \"Cannot update missing column: %s\", name);\n    Preconditions.checkArgument(!deletes.contains(field.fieldId()),\n        \"Cannot update a column that will be deleted: %s\", field.name());\n    Preconditions.checkArgument(TypeUtil.isPromotionAllowed(field.type(), newType),\n        \"Cannot change column type: %s: %s -> %s\", name, field.type(), newType);\n\n    \r\n    int fieldId = field.fieldId();\n    Types.NestedField rename = updates.get(fieldId);\n    if (rename != null) {\n      updates.put(fieldId, required(fieldId, rename.name(), newType, rename.doc()));\n    } else {\n      updates.put(fieldId, required(fieldId, field.name(), newType, field.doc()));\n    }\n\n    return this;\n  }\n","date":"2019-03-21 07:25:05","endLine":168,"groupId":"3672","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"updateColumn","params":"(Stringname@Type.PrimitiveTypenewType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a5/df2c9884d8394ad08468edf38704110966b15c.src","preCode":"  public UpdateSchema updateColumn(String name, Type.PrimitiveType newType) {\n    Types.NestedField field = schema.findField(name);\n    Preconditions.checkArgument(field != null, \"Cannot update missing column: %s\", name);\n    Preconditions.checkArgument(!deletes.contains(field.fieldId()),\n        \"Cannot update a column that will be deleted: %s\", field.name());\n    Preconditions.checkArgument(TypeUtil.isPromotionAllowed(field.type(), newType),\n        \"Cannot change column type: %s: %s -> %s\", name, field.type(), newType);\n\n    \r\n    int fieldId = field.fieldId();\n    Types.NestedField rename = updates.get(fieldId);\n    if (rename != null) {\n      updates.put(fieldId, required(fieldId, rename.name(), newType, rename.doc()));\n    } else {\n      updates.put(fieldId, required(fieldId, field.name(), newType, field.doc()));\n    }\n\n    return this;\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/SchemaUpdate.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public UpdateSchema updateColumnDoc(String name, String doc) {\n    Types.NestedField field = schema.findField(name);\n    Preconditions.checkArgument(field != null, \"Cannot update missing column: %s\", name);\n    Preconditions.checkArgument(!deletes.contains(field.fieldId()),\n        \"Cannot update a column that will be deleted: %s\", field.name());\n\n    \r\n    int fieldId = field.fieldId();\n    Types.NestedField update = updates.get(fieldId);\n    if (update != null) {\n      updates.put(fieldId, required(fieldId, update.name(), update.type(), doc));\n    } else {\n      updates.put(fieldId, required(fieldId, field.name(), field.type(), doc));\n    }\n\n    return this;\n  }\n","date":"2019-03-21 07:25:05","endLine":187,"groupId":"4846","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"updateColumnDoc","params":"(Stringname@Stringdoc)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a5/df2c9884d8394ad08468edf38704110966b15c.src","preCode":"  public UpdateSchema updateColumnDoc(String name, String doc) {\n    Types.NestedField field = schema.findField(name);\n    Preconditions.checkArgument(field != null, \"Cannot update missing column: %s\", name);\n    Preconditions.checkArgument(!deletes.contains(field.fieldId()),\n        \"Cannot update a column that will be deleted: %s\", field.name());\n\n    \r\n    int fieldId = field.fieldId();\n    Types.NestedField update = updates.get(fieldId);\n    if (update != null) {\n      updates.put(fieldId, required(fieldId, update.name(), update.type(), doc));\n    } else {\n      updates.put(fieldId, required(fieldId, field.name(), field.type(), doc));\n    }\n\n    return this;\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/SchemaUpdate.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-11-13 00:57:58","codes":[{"authorDate":"2019-11-13 00:57:58","commitOrder":2,"curCode":"  public UpdateSchema updateColumn(String name, Type.PrimitiveType newType) {\n    Types.NestedField field = schema.findField(name);\n    Preconditions.checkArgument(field != null, \"Cannot update missing column: %s\", name);\n    Preconditions.checkArgument(!deletes.contains(field.fieldId()),\n        \"Cannot update a column that will be deleted: %s\", field.name());\n\n    if (field.type().equals(newType)) {\n      return this;\n    }\n\n    Preconditions.checkArgument(TypeUtil.isPromotionAllowed(field.type(), newType),\n        \"Cannot change column type: %s: %s -> %s\", name, field.type(), newType);\n\n    \r\n    int fieldId = field.fieldId();\n    Types.NestedField update = updates.get(fieldId);\n    if (update != null) {\n      updates.put(fieldId, Types.NestedField.of(fieldId, update.isOptional(), update.name(), newType, update.doc()));\n    } else {\n      updates.put(fieldId, Types.NestedField.of(fieldId, field.isOptional(), field.name(), newType, field.doc()));\n    }\n\n    return this;\n  }\n","date":"2019-11-13 00:57:58","endLine":238,"groupId":"102145","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"updateColumn","params":"(Stringname@Type.PrimitiveTypenewType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a1/ef08cfd13553e6cf69c0fdc5e886eb22981cef.src","preCode":"  public UpdateSchema updateColumn(String name, Type.PrimitiveType newType) {\n    Types.NestedField field = schema.findField(name);\n    Preconditions.checkArgument(field != null, \"Cannot update missing column: %s\", name);\n    Preconditions.checkArgument(!deletes.contains(field.fieldId()),\n        \"Cannot update a column that will be deleted: %s\", field.name());\n    Preconditions.checkArgument(TypeUtil.isPromotionAllowed(field.type(), newType),\n        \"Cannot change column type: %s: %s -> %s\", name, field.type(), newType);\n\n    \r\n    int fieldId = field.fieldId();\n    Types.NestedField rename = updates.get(fieldId);\n    if (rename != null) {\n      updates.put(fieldId, required(fieldId, rename.name(), newType, rename.doc()));\n    } else {\n      updates.put(fieldId, required(fieldId, field.name(), newType, field.doc()));\n    }\n\n    return this;\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/SchemaUpdate.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"},{"authorDate":"2019-11-13 00:57:58","commitOrder":2,"curCode":"  public UpdateSchema updateColumnDoc(String name, String doc) {\n    Types.NestedField field = schema.findField(name);\n    Preconditions.checkArgument(field != null, \"Cannot update missing column: %s\", name);\n    Preconditions.checkArgument(!deletes.contains(field.fieldId()),\n        \"Cannot update a column that will be deleted: %s\", field.name());\n\n    if (Objects.equals(field.doc(), doc)) {\n      return this;\n    }\n\n    \r\n    int fieldId = field.fieldId();\n    Types.NestedField update = updates.get(fieldId);\n    if (update != null) {\n      updates.put(fieldId, Types.NestedField.of(fieldId, update.isOptional(), update.name(), update.type(), doc));\n    } else {\n      updates.put(fieldId, Types.NestedField.of(fieldId, field.isOptional(), field.name(), field.type(), doc));\n    }\n\n    return this;\n  }\n","date":"2019-11-13 00:57:58","endLine":261,"groupId":"102145","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"updateColumnDoc","params":"(Stringname@Stringdoc)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a1/ef08cfd13553e6cf69c0fdc5e886eb22981cef.src","preCode":"  public UpdateSchema updateColumnDoc(String name, String doc) {\n    Types.NestedField field = schema.findField(name);\n    Preconditions.checkArgument(field != null, \"Cannot update missing column: %s\", name);\n    Preconditions.checkArgument(!deletes.contains(field.fieldId()),\n        \"Cannot update a column that will be deleted: %s\", field.name());\n\n    \r\n    int fieldId = field.fieldId();\n    Types.NestedField update = updates.get(fieldId);\n    if (update != null) {\n      updates.put(fieldId, required(fieldId, update.name(), update.type(), doc));\n    } else {\n      updates.put(fieldId, required(fieldId, field.name(), field.type(), doc));\n    }\n\n    return this;\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/SchemaUpdate.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"}],"commitId":"42c1e63333c340210752e879820eedd307f227d4","commitMessage":"@@@Add incompatible changes to UpdateSchema API (#574)\n\n","date":"2019-11-13 00:57:58","modifiedFileCount":"4","status":"M","submitter":"Ryan Blue"}]
