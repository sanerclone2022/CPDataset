[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testAnd() {\n    Expression expr = and(equal(\"x\", 7), lessThan(\"y\", 100));\n    Expression boundExpr = Binder.bind(STRUCT, expr);\n    TestHelpers.assertAllReferencesBound(\"And\", boundExpr);\n\n    \r\n    And and = TestHelpers.assertAndUnwrap(boundExpr, And.class);\n\n    \r\n    BoundPredicate<?> left = TestHelpers.assertAndUnwrap(and.left());\n    Assert.assertEquals(\"Should bind x correctly\", 0, left.ref().fieldId());\n    BoundPredicate<?> right = TestHelpers.assertAndUnwrap(and.right());\n    Assert.assertEquals(\"Should bind y correctly\", 1, right.ref().fieldId());\n  }\n","date":"2019-03-21 07:25:05","endLine":102,"groupId":"3443","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAnd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/3e/846999a567b0fe06de98873d749a5f1917e7d4.src","preCode":"  public void testAnd() {\n    Expression expr = and(equal(\"x\", 7), lessThan(\"y\", 100));\n    Expression boundExpr = Binder.bind(STRUCT, expr);\n    TestHelpers.assertAllReferencesBound(\"And\", boundExpr);\n\n    \r\n    And and = TestHelpers.assertAndUnwrap(boundExpr, And.class);\n\n    \r\n    BoundPredicate<?> left = TestHelpers.assertAndUnwrap(and.left());\n    Assert.assertEquals(\"Should bind x correctly\", 0, left.ref().fieldId());\n    BoundPredicate<?> right = TestHelpers.assertAndUnwrap(and.right());\n    Assert.assertEquals(\"Should bind y correctly\", 1, right.ref().fieldId());\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestExpressionBinding.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"  public void testOr() {\n    Expression expr = or(greaterThan(\"z\", -100), lessThan(\"y\", 100));\n    Expression boundExpr = Binder.bind(STRUCT, expr);\n    TestHelpers.assertAllReferencesBound(\"Or\", boundExpr);\n\n    \r\n    Or or = TestHelpers.assertAndUnwrap(boundExpr, Or.class);\n\n    \r\n    BoundPredicate<?> left = TestHelpers.assertAndUnwrap(or.left());\n    Assert.assertEquals(\"Should bind z correctly\", 2, left.ref().fieldId());\n    BoundPredicate<?> right = TestHelpers.assertAndUnwrap(or.right());\n    Assert.assertEquals(\"Should bind y correctly\", 1, right.ref().fieldId());\n  }\n","date":"2019-03-21 07:25:05","endLine":118,"groupId":"3445","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/3e/846999a567b0fe06de98873d749a5f1917e7d4.src","preCode":"  public void testOr() {\n    Expression expr = or(greaterThan(\"z\", -100), lessThan(\"y\", 100));\n    Expression boundExpr = Binder.bind(STRUCT, expr);\n    TestHelpers.assertAllReferencesBound(\"Or\", boundExpr);\n\n    \r\n    Or or = TestHelpers.assertAndUnwrap(boundExpr, Or.class);\n\n    \r\n    BoundPredicate<?> left = TestHelpers.assertAndUnwrap(or.left());\n    Assert.assertEquals(\"Should bind z correctly\", 2, left.ref().fieldId());\n    BoundPredicate<?> right = TestHelpers.assertAndUnwrap(or.right());\n    Assert.assertEquals(\"Should bind y correctly\", 1, right.ref().fieldId());\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestExpressionBinding.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-12-19 01:58:30","codes":[{"authorDate":"2019-12-19 01:58:30","commitOrder":2,"curCode":"  public void testAnd() {\n    Expression expr = and(equal(\"x\", 7), lessThan(\"y\", 100));\n    Expression boundExpr = Binder.bind(STRUCT, expr);\n    TestHelpers.assertAllReferencesBound(\"And\", boundExpr);\n\n    \r\n    And and = TestHelpers.assertAndUnwrap(boundExpr, And.class);\n\n    \r\n    BoundPredicate<?> left = TestHelpers.assertAndUnwrap(and.left());\n    Assert.assertEquals(\"Should bind x correctly\", 0, left.term().ref().fieldId());\n    BoundPredicate<?> right = TestHelpers.assertAndUnwrap(and.right());\n    Assert.assertEquals(\"Should bind y correctly\", 1, right.term().ref().fieldId());\n  }\n","date":"2019-12-19 01:58:30","endLine":104,"groupId":"101290","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAnd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ea/24ed7fe73988e170ea5212aab0c9223c6a6b88.src","preCode":"  public void testAnd() {\n    Expression expr = and(equal(\"x\", 7), lessThan(\"y\", 100));\n    Expression boundExpr = Binder.bind(STRUCT, expr);\n    TestHelpers.assertAllReferencesBound(\"And\", boundExpr);\n\n    \r\n    And and = TestHelpers.assertAndUnwrap(boundExpr, And.class);\n\n    \r\n    BoundPredicate<?> left = TestHelpers.assertAndUnwrap(and.left());\n    Assert.assertEquals(\"Should bind x correctly\", 0, left.ref().fieldId());\n    BoundPredicate<?> right = TestHelpers.assertAndUnwrap(and.right());\n    Assert.assertEquals(\"Should bind y correctly\", 1, right.ref().fieldId());\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestExpressionBinding.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2019-12-19 01:58:30","commitOrder":2,"curCode":"  public void testOr() {\n    Expression expr = or(greaterThan(\"z\", -100), lessThan(\"y\", 100));\n    Expression boundExpr = Binder.bind(STRUCT, expr);\n    TestHelpers.assertAllReferencesBound(\"Or\", boundExpr);\n\n    \r\n    Or or = TestHelpers.assertAndUnwrap(boundExpr, Or.class);\n\n    \r\n    BoundPredicate<?> left = TestHelpers.assertAndUnwrap(or.left());\n    Assert.assertEquals(\"Should bind z correctly\", 2, left.term().ref().fieldId());\n    BoundPredicate<?> right = TestHelpers.assertAndUnwrap(or.right());\n    Assert.assertEquals(\"Should bind y correctly\", 1, right.term().ref().fieldId());\n  }\n","date":"2019-12-19 01:58:30","endLine":120,"groupId":"101290","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/ea/24ed7fe73988e170ea5212aab0c9223c6a6b88.src","preCode":"  public void testOr() {\n    Expression expr = or(greaterThan(\"z\", -100), lessThan(\"y\", 100));\n    Expression boundExpr = Binder.bind(STRUCT, expr);\n    TestHelpers.assertAllReferencesBound(\"Or\", boundExpr);\n\n    \r\n    Or or = TestHelpers.assertAndUnwrap(boundExpr, Or.class);\n\n    \r\n    BoundPredicate<?> left = TestHelpers.assertAndUnwrap(or.left());\n    Assert.assertEquals(\"Should bind z correctly\", 2, left.ref().fieldId());\n    BoundPredicate<?> right = TestHelpers.assertAndUnwrap(or.right());\n    Assert.assertEquals(\"Should bind y correctly\", 1, right.ref().fieldId());\n  }\n","realPath":"api/src/test/java/org/apache/iceberg/expressions/TestExpressionBinding.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"686fcb752dd5a7204094266cd3c4363431dddb43","commitMessage":"@@@Add transform expressions (#686)\n\n* Add transform expressions.\n\n* Fix checkstyle violations.\n\n* Rename ValueExpression to Term and clean up class hierarchy.\n\n* Restore BoundExpressionVisitor to avoid compatibility problems.\n\n* Fix documentation typo.\n\n* Add missing BoundTransform.toString method.\n\n* Revert unnecessary change to TestExpressionSerialization.\n\n* Rename child to term.\n","date":"2019-12-19 01:58:30","modifiedFileCount":"23","status":"M","submitter":"Ryan Blue"}]
