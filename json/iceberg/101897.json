[{"authorTime":"2020-11-13 03:36:32","codes":[{"authorDate":"2020-11-13 03:36:32","commitOrder":1,"curCode":"  public void testColumnBoundsWithNaNValueAtFront() throws IOException {\n    Metrics metrics = getMetrics(FLOAT_DOUBLE_ONLY_SCHEMA,\n        NAN_ONLY_RECORD, FLOAT_DOUBLE_RECORD_1, FLOAT_DOUBLE_RECORD_2);\n    Assert.assertEquals(3L, (long) metrics.recordCount());\n    assertCounts(1, 3L, 0L, 1L, metrics);\n    assertCounts(2, 3L, 0L, 1L, metrics);\n\n    \r\n    \r\n    if (fileFormat() == FileFormat.ORC) {\n      assertBounds(1, FloatType.get(), Float.NaN, Float.NaN, metrics);\n      assertBounds(2, DoubleType.get(), Double.NaN, Double.NaN, metrics);\n    } else {\n      assertBounds(1, FloatType.get(), 1.2F, Float.NaN, metrics);\n      assertBounds(2, DoubleType.get(), 3.4D, Double.NaN, metrics);\n    }\n  }\n","date":"2020-11-13 03:36:32","endLine":375,"groupId":"3132","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testColumnBoundsWithNaNValueAtFront","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/6c/d7f88ddf278d7fe03d71f70b3e8cb10c5305e8.src","preCode":"  public void testColumnBoundsWithNaNValueAtFront() throws IOException {\n    Metrics metrics = getMetrics(FLOAT_DOUBLE_ONLY_SCHEMA,\n        NAN_ONLY_RECORD, FLOAT_DOUBLE_RECORD_1, FLOAT_DOUBLE_RECORD_2);\n    Assert.assertEquals(3L, (long) metrics.recordCount());\n    assertCounts(1, 3L, 0L, 1L, metrics);\n    assertCounts(2, 3L, 0L, 1L, metrics);\n\n    \r\n    \r\n    if (fileFormat() == FileFormat.ORC) {\n      assertBounds(1, FloatType.get(), Float.NaN, Float.NaN, metrics);\n      assertBounds(2, DoubleType.get(), Double.NaN, Double.NaN, metrics);\n    } else {\n      assertBounds(1, FloatType.get(), 1.2F, Float.NaN, metrics);\n      assertBounds(2, DoubleType.get(), 3.4D, Double.NaN, metrics);\n    }\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"B"},{"authorDate":"2020-11-13 03:36:32","commitOrder":1,"curCode":"  public void testColumnBoundsWithNaNValueAtEnd() throws IOException {\n    Metrics metrics = getMetrics(FLOAT_DOUBLE_ONLY_SCHEMA,\n        FLOAT_DOUBLE_RECORD_1, FLOAT_DOUBLE_RECORD_2, NAN_ONLY_RECORD);\n    Assert.assertEquals(3L, (long) metrics.recordCount());\n    assertCounts(1, 3L, 0L, 1L, metrics);\n    assertCounts(2, 3L, 0L, 1L, metrics);\n\n    \r\n    \r\n    if (fileFormat() == FileFormat.ORC) {\n      assertBounds(1, FloatType.get(), 1.2F, 5.6F, metrics);\n      assertBounds(2, DoubleType.get(), 3.4D, 7.8D, metrics);\n    } else {\n      assertBounds(1, FloatType.get(), 1.2F, Float.NaN, metrics);\n      assertBounds(2, DoubleType.get(), 3.4D, Double.NaN, metrics);\n    }\n  }\n","date":"2020-11-13 03:36:32","endLine":413,"groupId":"3132","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testColumnBoundsWithNaNValueAtEnd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/6c/d7f88ddf278d7fe03d71f70b3e8cb10c5305e8.src","preCode":"  public void testColumnBoundsWithNaNValueAtEnd() throws IOException {\n    Metrics metrics = getMetrics(FLOAT_DOUBLE_ONLY_SCHEMA,\n        FLOAT_DOUBLE_RECORD_1, FLOAT_DOUBLE_RECORD_2, NAN_ONLY_RECORD);\n    Assert.assertEquals(3L, (long) metrics.recordCount());\n    assertCounts(1, 3L, 0L, 1L, metrics);\n    assertCounts(2, 3L, 0L, 1L, metrics);\n\n    \r\n    \r\n    if (fileFormat() == FileFormat.ORC) {\n      assertBounds(1, FloatType.get(), 1.2F, 5.6F, metrics);\n      assertBounds(2, DoubleType.get(), 3.4D, 7.8D, metrics);\n    } else {\n      assertBounds(1, FloatType.get(), 1.2F, Float.NaN, metrics);\n      assertBounds(2, DoubleType.get(), 3.4D, Double.NaN, metrics);\n    }\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":397,"status":"B"}],"commitId":"944a437f1057b8be60292426aebdb0b8059d90e0","commitMessage":"@@@Core: Add NaN counts to Metrics.  implement in Parquet (#1641)\n\n","date":"2020-11-13 03:36:32","modifiedFileCount":"11","status":"B","submitter":"yyanyy"},{"authorTime":"2021-06-25 06:58:29","codes":[{"authorDate":"2021-06-25 06:58:29","commitOrder":2,"curCode":"  public void testColumnBoundsWithNaNValueAtFront() throws IOException {\n    Metrics metrics = getMetrics(FLOAT_DOUBLE_ONLY_SCHEMA,\n        NAN_ONLY_RECORD, FLOAT_DOUBLE_RECORD_1, FLOAT_DOUBLE_RECORD_2);\n    Assert.assertEquals(3L, (long) metrics.recordCount());\n    assertCounts(1, 3L, 0L, 1L, metrics);\n    assertCounts(2, 3L, 0L, 1L, metrics);\n\n    assertBounds(1, FloatType.get(), 1.2F, 5.6F, metrics);\n    assertBounds(2, DoubleType.get(), 3.4D, 7.8D, metrics);\n  }\n","date":"2021-06-25 06:58:29","endLine":372,"groupId":"101897","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testColumnBoundsWithNaNValueAtFront","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/47/b79a655af668a9fe1fdf1e1c413d30ffbb9d74.src","preCode":"  public void testColumnBoundsWithNaNValueAtFront() throws IOException {\n    Metrics metrics = getMetrics(FLOAT_DOUBLE_ONLY_SCHEMA,\n        NAN_ONLY_RECORD, FLOAT_DOUBLE_RECORD_1, FLOAT_DOUBLE_RECORD_2);\n    Assert.assertEquals(3L, (long) metrics.recordCount());\n    assertCounts(1, 3L, 0L, 1L, metrics);\n    assertCounts(2, 3L, 0L, 1L, metrics);\n\n    \r\n    \r\n    if (fileFormat() == FileFormat.ORC) {\n      assertBounds(1, FloatType.get(), Float.NaN, Float.NaN, metrics);\n      assertBounds(2, DoubleType.get(), Double.NaN, Double.NaN, metrics);\n    } else {\n      assertBounds(1, FloatType.get(), 1.2F, Float.NaN, metrics);\n      assertBounds(2, DoubleType.get(), 3.4D, Double.NaN, metrics);\n    }\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":363,"status":"M"},{"authorDate":"2021-06-25 06:58:29","commitOrder":2,"curCode":"  public void testColumnBoundsWithNaNValueAtEnd() throws IOException {\n    Metrics metrics = getMetrics(FLOAT_DOUBLE_ONLY_SCHEMA,\n        FLOAT_DOUBLE_RECORD_1, FLOAT_DOUBLE_RECORD_2, NAN_ONLY_RECORD);\n    Assert.assertEquals(3L, (long) metrics.recordCount());\n    assertCounts(1, 3L, 0L, 1L, metrics);\n    assertCounts(2, 3L, 0L, 1L, metrics);\n\n    assertBounds(1, FloatType.get(), 1.2F, 5.6F, metrics);\n    assertBounds(2, DoubleType.get(), 3.4D, 7.8D, metrics);\n  }\n","date":"2021-06-25 06:58:29","endLine":396,"groupId":"101897","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testColumnBoundsWithNaNValueAtEnd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/47/b79a655af668a9fe1fdf1e1c413d30ffbb9d74.src","preCode":"  public void testColumnBoundsWithNaNValueAtEnd() throws IOException {\n    Metrics metrics = getMetrics(FLOAT_DOUBLE_ONLY_SCHEMA,\n        FLOAT_DOUBLE_RECORD_1, FLOAT_DOUBLE_RECORD_2, NAN_ONLY_RECORD);\n    Assert.assertEquals(3L, (long) metrics.recordCount());\n    assertCounts(1, 3L, 0L, 1L, metrics);\n    assertCounts(2, 3L, 0L, 1L, metrics);\n\n    \r\n    \r\n    if (fileFormat() == FileFormat.ORC) {\n      assertBounds(1, FloatType.get(), 1.2F, 5.6F, metrics);\n      assertBounds(2, DoubleType.get(), 3.4D, 7.8D, metrics);\n    } else {\n      assertBounds(1, FloatType.get(), 1.2F, Float.NaN, metrics);\n      assertBounds(2, DoubleType.get(), 3.4D, Double.NaN, metrics);\n    }\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetrics.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":387,"status":"M"}],"commitId":"2e4684740b56f6d80328f50b7e7fef0863c262e7","commitMessage":"@@@Core: Fix float and double metrics for Parquet and ORC (#2464)\n\nThis replaces the metrics from Parquet and ORC with metrics that are accumulated by Iceberg writers to ensure that the metrics do not include NaN values.","date":"2021-06-25 06:58:29","modifiedFileCount":"18","status":"M","submitter":"yyanyy"}]
