[{"authorTime":"2020-02-05 05:15:06","codes":[{"authorDate":"2020-08-06 00:37:38","commitOrder":2,"curCode":"  public void testBaseCombinedScanTaskKryoSerialization() throws Exception {\n    BaseCombinedScanTask scanTask = prepareBaseCombinedScanTaskForSerDeTest();\n\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, scanTask);\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      Object obj = kryo.readClassAndObject(in);\n      Assert.assertTrue(\"Should be a BaseCombinedScanTask\", obj instanceof BaseCombinedScanTask);\n      checkBaseCombinedScanTask(scanTask, (BaseCombinedScanTask) obj);\n    }\n  }\n","date":"2020-08-06 00:37:38","endLine":93,"groupId":"2618","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBaseCombinedScanTaskKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f4/43f38aae4956336bb18a6ea78077fc20e9a9a4.src","preCode":"  public void testBaseCombinedScanTaskKryoSerialization() throws Exception {\n    BaseCombinedScanTask scanTask = prepareBaseCombinedScanTaskForSerDeTest();\n\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, scanTask);\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      Object obj = kryo.readClassAndObject(in);\n      Assert.assertTrue(\"Should be a BaseCombinedScanTask\", obj instanceof BaseCombinedScanTask);\n      checkBaseCombinedScanTask(scanTask, (BaseCombinedScanTask) obj);\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestScanTaskSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2020-02-05 05:15:06","commitOrder":2,"curCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","date":"2020-02-05 05:15:06","endLine":104,"groupId":"2645","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testManifestFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/df/1a7ea20126fbcb9f247351e46d02b074e02c24.src","preCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"NB"}],"commitId":"e682ca59129ab668f163924b030280c3787db8f6","commitMessage":"@@@Core: Use array instead of list in BaseCombinedScanTask to fix serialization (#1285)\n\n","date":"2020-08-06 00:37:38","modifiedFileCount":"1","status":"M","submitter":"Jungtaek Lim"},{"authorTime":"2020-02-05 05:15:06","codes":[{"authorDate":"2020-08-11 06:39:00","commitOrder":3,"curCode":"  public void testBaseCombinedScanTaskKryoSerialization() throws Exception {\n    BaseCombinedScanTask scanTask = prepareBaseCombinedScanTaskForSerDeTest();\n\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, scanTask);\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      Object obj = kryo.readClassAndObject(in);\n      Assert.assertTrue(\"Should be a BaseCombinedScanTask\", obj instanceof BaseCombinedScanTask);\n      TaskCheckHelper.assertEquals(scanTask, (BaseCombinedScanTask) obj);\n    }\n  }\n","date":"2020-08-11 06:39:00","endLine":91,"groupId":"2618","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBaseCombinedScanTaskKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/00/b17adbe9b64544e645424c8be5ea08730c3767.src","preCode":"  public void testBaseCombinedScanTaskKryoSerialization() throws Exception {\n    BaseCombinedScanTask scanTask = prepareBaseCombinedScanTaskForSerDeTest();\n\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, scanTask);\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      Object obj = kryo.readClassAndObject(in);\n      Assert.assertTrue(\"Should be a BaseCombinedScanTask\", obj instanceof BaseCombinedScanTask);\n      checkBaseCombinedScanTask(scanTask, (BaseCombinedScanTask) obj);\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestScanTaskSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2020-02-05 05:15:06","commitOrder":3,"curCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","date":"2020-02-05 05:15:06","endLine":104,"groupId":"2645","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testManifestFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/df/1a7ea20126fbcb9f247351e46d02b074e02c24.src","preCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"N"}],"commitId":"5e44e45dd273aea89e93ffbcdbfc2c36e3a0e9cb","commitMessage":"@@@Spark: Create shared assertions for common task validation (#1280)\n\n","date":"2020-08-11 06:39:00","modifiedFileCount":"2","status":"M","submitter":"Jungtaek Lim"},{"authorTime":"2021-02-06 01:38:12","codes":[{"authorDate":"2020-08-11 06:39:00","commitOrder":4,"curCode":"  public void testBaseCombinedScanTaskKryoSerialization() throws Exception {\n    BaseCombinedScanTask scanTask = prepareBaseCombinedScanTaskForSerDeTest();\n\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, scanTask);\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      Object obj = kryo.readClassAndObject(in);\n      Assert.assertTrue(\"Should be a BaseCombinedScanTask\", obj instanceof BaseCombinedScanTask);\n      TaskCheckHelper.assertEquals(scanTask, (BaseCombinedScanTask) obj);\n    }\n  }\n","date":"2020-08-11 06:39:00","endLine":91,"groupId":"2618","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBaseCombinedScanTaskKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/00/b17adbe9b64544e645424c8be5ea08730c3767.src","preCode":"  public void testBaseCombinedScanTaskKryoSerialization() throws Exception {\n    BaseCombinedScanTask scanTask = prepareBaseCombinedScanTaskForSerDeTest();\n\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, scanTask);\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      Object obj = kryo.readClassAndObject(in);\n      Assert.assertTrue(\"Should be a BaseCombinedScanTask\", obj instanceof BaseCombinedScanTask);\n      TaskCheckHelper.assertEquals(scanTask, (BaseCombinedScanTask) obj);\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestScanTaskSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"},{"authorDate":"2021-02-06 01:38:12","commitOrder":4,"curCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","date":"2021-02-06 01:38:12","endLine":122,"groupId":"2645","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testManifestFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f2/e18c87bf4e1251e85e142d921ac407043a34e7.src","preCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"8a84715205631a17668ec8d63a791a25fb511992","commitMessage":"@@@Core: Add contains_nan to manifest list partition summaries (#1872)\n\n","date":"2021-02-06 01:38:12","modifiedFileCount":"13","status":"M","submitter":"yyanyy"},{"authorTime":"2021-07-19 18:57:09","codes":[{"authorDate":"2021-07-19 18:57:09","commitOrder":5,"curCode":"  public void testBaseCombinedScanTaskKryoSerialization() throws Exception {\n    BaseCombinedScanTask scanTask = prepareBaseCombinedScanTaskForSerDeTest();\n\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, scanTask);\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      Object obj = kryo.readClassAndObject(in);\n      Assertions.assertThat(obj).as(\"Should be a BaseCombinedScanTask\").isInstanceOf(BaseCombinedScanTask.class);\n      TaskCheckHelper.assertEquals(scanTask, (BaseCombinedScanTask) obj);\n    }\n  }\n","date":"2021-07-19 18:57:09","endLine":92,"groupId":"10393","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testBaseCombinedScanTaskKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/9d/107253422c2ba66e23444dfe37afd3e44b9dee.src","preCode":"  public void testBaseCombinedScanTaskKryoSerialization() throws Exception {\n    BaseCombinedScanTask scanTask = prepareBaseCombinedScanTaskForSerDeTest();\n\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, scanTask);\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      Object obj = kryo.readClassAndObject(in);\n      Assert.assertTrue(\"Should be a BaseCombinedScanTask\", obj instanceof BaseCombinedScanTask);\n      TaskCheckHelper.assertEquals(scanTask, (BaseCombinedScanTask) obj);\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestScanTaskSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2021-07-19 18:57:09","commitOrder":5,"curCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assertions.assertThat(obj).as(\"Should be a ManifestFile\").isInstanceOf(ManifestFile.class);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","date":"2021-07-19 18:57:09","endLine":123,"groupId":"10393","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testManifestFileKryoSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/25/004aa110e46d825e6374612cf9a60adb056a92.src","preCode":"  public void testManifestFileKryoSerialization() throws IOException {\n    File data = temp.newFile();\n    Assert.assertTrue(data.delete());\n\n    Kryo kryo = new KryoSerializer(new SparkConf()).newKryo();\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    try (Output out = new Output(new FileOutputStream(data))) {\n      kryo.writeClassAndObject(out, manifest);\n      kryo.writeClassAndObject(out, manifest.copy());\n      kryo.writeClassAndObject(out, GenericManifestFile.copyOf(manifest).build());\n    }\n\n    try (Input in = new Input(new FileInputStream(data))) {\n      for (int i = 0; i < 3; i += 1) {\n        Object obj = kryo.readClassAndObject(in);\n        Assert.assertTrue(\"Should be a ManifestFile\", obj instanceof ManifestFile);\n        checkManifestFile(manifest, (ManifestFile) obj);\n      }\n    }\n  }\n","realPath":"spark/src/test/java/org/apache/iceberg/TestManifestFileSerialization.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"0055e855ccabbd6a592b3b49e1f38131f62e0fdd","commitMessage":"@@@Move Assert.assertTrue(..) instance checks to AssertJ assertions (#2756)\n\n","date":"2021-07-19 18:57:09","modifiedFileCount":"25","status":"M","submitter":"Eduard Tudenh?fner"}]
