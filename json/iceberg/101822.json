[{"authorTime":"2020-02-04 06:53:50","codes":[{"authorDate":"2020-02-04 06:53:50","commitOrder":1,"curCode":"  public void testAppendManifestFailureWithSnapshotIdInheritance() throws IOException {\n    table.updateProperties()\n        .set(TableProperties.SNAPSHOT_ID_INHERITANCE_ENABLED, \"true\")\n        .commit();\n\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    TableMetadata base = readMetadata();\n    Assert.assertNull(\"Should not have a current snapshot\", base.currentSnapshot());\n\n    table.updateProperties()\n        .set(TableProperties.COMMIT_NUM_RETRIES, \"1\")\n        .commit();\n\n    table.ops().failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    AppendFiles append = table.newAppend();\n    append.appendManifest(manifest);\n\n    AssertHelpers.assertThrows(\"Should reject commit\",\n        CommitFailedException.class, \"Injected failure\",\n        append::commit);\n\n    Assert.assertTrue(\"Append manifest should not be deleted\", new File(manifest.path()).exists());\n  }\n","date":"2020-02-04 06:53:50","endLine":624,"groupId":"1288","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendManifestFailureWithSnapshotIdInheritance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/21/690e43383dc745d1046be864e113ccf9f3ded2.src","preCode":"  public void testAppendManifestFailureWithSnapshotIdInheritance() throws IOException {\n    table.updateProperties()\n        .set(TableProperties.SNAPSHOT_ID_INHERITANCE_ENABLED, \"true\")\n        .commit();\n\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    TableMetadata base = readMetadata();\n    Assert.assertNull(\"Should not have a current snapshot\", base.currentSnapshot());\n\n    table.updateProperties()\n        .set(TableProperties.COMMIT_NUM_RETRIES, \"1\")\n        .commit();\n\n    table.ops().failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    AppendFiles append = table.newAppend();\n    append.appendManifest(manifest);\n\n    AssertHelpers.assertThrows(\"Should reject commit\",\n        CommitFailedException.class, \"Injected failure\",\n        append::commit);\n\n    Assert.assertTrue(\"Append manifest should not be deleted\", new File(manifest.path()).exists());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMergeAppend.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":598,"status":"B"},{"authorDate":"2020-02-04 06:53:50","commitOrder":1,"curCode":"  public void testAppendManifestFailureWithSnapshotIdInheritance() throws IOException {\n    table.updateProperties()\n        .set(TableProperties.SNAPSHOT_ID_INHERITANCE_ENABLED, \"true\")\n        .commit();\n\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    TableMetadata base = readMetadata();\n    Assert.assertNull(\"Should not have a current snapshot\", base.currentSnapshot());\n\n    table.updateProperties()\n        .set(TableProperties.COMMIT_NUM_RETRIES, \"1\")\n        .commit();\n\n    table.ops().failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    AppendFiles append = table.newAppend();\n    append.appendManifest(manifest);\n\n    AssertHelpers.assertThrows(\"Should reject commit\",\n        CommitFailedException.class, \"Injected failure\",\n        append::commit);\n\n    Assert.assertTrue(\"Append manifest should not be deleted\", new File(manifest.path()).exists());\n  }\n","date":"2020-02-04 06:53:50","endLine":345,"groupId":"1288","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendManifestFailureWithSnapshotIdInheritance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f8/cb6d28f653bd4d15f72751e51b248afe24e16d.src","preCode":"  public void testAppendManifestFailureWithSnapshotIdInheritance() throws IOException {\n    table.updateProperties()\n        .set(TableProperties.SNAPSHOT_ID_INHERITANCE_ENABLED, \"true\")\n        .commit();\n\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    TableMetadata base = readMetadata();\n    Assert.assertNull(\"Should not have a current snapshot\", base.currentSnapshot());\n\n    table.updateProperties()\n        .set(TableProperties.COMMIT_NUM_RETRIES, \"1\")\n        .commit();\n\n    table.ops().failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    AppendFiles append = table.newAppend();\n    append.appendManifest(manifest);\n\n    AssertHelpers.assertThrows(\"Should reject commit\",\n        CommitFailedException.class, \"Injected failure\",\n        append::commit);\n\n    Assert.assertTrue(\"Append manifest should not be deleted\", new File(manifest.path()).exists());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestFastAppend.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":319,"status":"B"}],"commitId":"c3dc9824b381e5e479e356be5e0f4fcf61a9fc37","commitMessage":"@@@Inherit snapshot ids for manifest entries (#675)\n\nThis change makes the snapshot ID optional for each data file in a manifest so that a null snapshot ID indicates that it should be inherited from the manifest metadata. As a consequence.  people can create manifests with missing snapshot IDs that will be assigned at commit time.\n\nCloses #504.","date":"2020-02-04 06:53:50","modifiedFileCount":"28","status":"B","submitter":"Anton Okolnychyi"},{"authorTime":"2020-02-04 06:53:50","codes":[{"authorDate":"2020-08-08 09:28:52","commitOrder":2,"curCode":"  public void testAppendManifestFailureWithSnapshotIdInheritance() throws IOException {\n    table.updateProperties()\n        .set(TableProperties.SNAPSHOT_ID_INHERITANCE_ENABLED, \"true\")\n        .commit();\n\n    Assert.assertEquals(\"Last sequence number should be 0\", 0, readMetadata().lastSequenceNumber());\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    TableMetadata base = readMetadata();\n    Assert.assertNull(\"Should not have a current snapshot\", base.currentSnapshot());\n\n    table.updateProperties()\n        .set(TableProperties.COMMIT_NUM_RETRIES, \"1\")\n        .commit();\n\n    table.ops().failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    AppendFiles append = table.newAppend();\n    append.appendManifest(manifest);\n\n    AssertHelpers.assertThrows(\"Should reject commit\",\n        CommitFailedException.class, \"Injected failure\",\n        append::commit);\n\n    Assert.assertEquals(\"Last sequence number should be 0\", 0, readMetadata().lastSequenceNumber());\n    Assert.assertTrue(\"Append manifest should not be deleted\", new File(manifest.path()).exists());\n  }\n","date":"2020-08-08 09:28:52","endLine":1032,"groupId":"101822","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppendManifestFailureWithSnapshotIdInheritance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/e8/8f9bf12c6bf66e32edccb75c5866b62815a9c4.src","preCode":"  public void testAppendManifestFailureWithSnapshotIdInheritance() throws IOException {\n    table.updateProperties()\n        .set(TableProperties.SNAPSHOT_ID_INHERITANCE_ENABLED, \"true\")\n        .commit();\n\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    TableMetadata base = readMetadata();\n    Assert.assertNull(\"Should not have a current snapshot\", base.currentSnapshot());\n\n    table.updateProperties()\n        .set(TableProperties.COMMIT_NUM_RETRIES, \"1\")\n        .commit();\n\n    table.ops().failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    AppendFiles append = table.newAppend();\n    append.appendManifest(manifest);\n\n    AssertHelpers.assertThrows(\"Should reject commit\",\n        CommitFailedException.class, \"Injected failure\",\n        append::commit);\n\n    Assert.assertTrue(\"Append manifest should not be deleted\", new File(manifest.path()).exists());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMergeAppend.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":1004,"status":"M"},{"authorDate":"2020-02-04 06:53:50","commitOrder":2,"curCode":"  public void testAppendManifestFailureWithSnapshotIdInheritance() throws IOException {\n    table.updateProperties()\n        .set(TableProperties.SNAPSHOT_ID_INHERITANCE_ENABLED, \"true\")\n        .commit();\n\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    TableMetadata base = readMetadata();\n    Assert.assertNull(\"Should not have a current snapshot\", base.currentSnapshot());\n\n    table.updateProperties()\n        .set(TableProperties.COMMIT_NUM_RETRIES, \"1\")\n        .commit();\n\n    table.ops().failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    AppendFiles append = table.newAppend();\n    append.appendManifest(manifest);\n\n    AssertHelpers.assertThrows(\"Should reject commit\",\n        CommitFailedException.class, \"Injected failure\",\n        append::commit);\n\n    Assert.assertTrue(\"Append manifest should not be deleted\", new File(manifest.path()).exists());\n  }\n","date":"2020-02-04 06:53:50","endLine":345,"groupId":"101822","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppendManifestFailureWithSnapshotIdInheritance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/f8/cb6d28f653bd4d15f72751e51b248afe24e16d.src","preCode":"  public void testAppendManifestFailureWithSnapshotIdInheritance() throws IOException {\n    table.updateProperties()\n        .set(TableProperties.SNAPSHOT_ID_INHERITANCE_ENABLED, \"true\")\n        .commit();\n\n    Assert.assertEquals(\"Table should start empty\", 0, listManifestFiles().size());\n\n    TableMetadata base = readMetadata();\n    Assert.assertNull(\"Should not have a current snapshot\", base.currentSnapshot());\n\n    table.updateProperties()\n        .set(TableProperties.COMMIT_NUM_RETRIES, \"1\")\n        .commit();\n\n    table.ops().failCommits(5);\n\n    ManifestFile manifest = writeManifest(FILE_A, FILE_B);\n\n    AppendFiles append = table.newAppend();\n    append.appendManifest(manifest);\n\n    AssertHelpers.assertThrows(\"Should reject commit\",\n        CommitFailedException.class, \"Injected failure\",\n        append::commit);\n\n    Assert.assertTrue(\"Append manifest should not be deleted\", new File(manifest.path()).exists());\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestFastAppend.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":319,"status":"N"}],"commitId":"a624f6f247eb7ef5c3d6446ab98d400025d96176","commitMessage":"@@@Core: Add sequence number assertions in merge append tests (#1101)\n\n","date":"2020-08-08 09:28:52","modifiedFileCount":"2","status":"M","submitter":"Chen Junjie"}]
