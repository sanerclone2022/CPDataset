[{"authorTime":"2019-11-09 09:25:36","codes":[{"authorDate":"2020-05-23 02:41:45","commitOrder":2,"curCode":"  public static <T> T visit(Type iType, TypeDescription schema, OrcSchemaWithTypeVisitor<T> visitor) {\n    switch (schema.getCategory()) {\n      case STRUCT:\n        return visitRecord(iType != null ? iType.asStructType() : null, schema, visitor);\n\n      case UNION:\n        throw new UnsupportedOperationException(\"Cannot handle \" + schema);\n\n      case LIST:\n        Types.ListType list = iType != null ? iType.asListType() : null;\n        return visitor.list(\n            list, schema,\n            visit(list.elementType(), schema.getChildren().get(0), visitor));\n\n      case MAP:\n        Types.MapType map = iType != null ? iType.asMapType() : null;\n        return visitor.map(\n            map, schema,\n            visit(map != null ? map.keyType() : null, schema.getChildren().get(0), visitor),\n            visit(map != null ? map.valueType() : null, schema.getChildren().get(1), visitor));\n\n      default:\n        return visitor.primitive(iType != null ? iType.asPrimitiveType() : null, schema);\n    }\n  }\n","date":"2020-05-23 02:41:45","endLine":59,"groupId":"4391","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visit","params":"(TypeiType@TypeDescriptionschema@OrcSchemaWithTypeVisitor<T>visitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/44/ce8034623963887aa6d1e8ff72882ae40d350a.src","preCode":"  public static <T> T visit(Type iType, TypeDescription schema, OrcSchemaWithTypeVisitor<T> visitor) {\n    switch (schema.getCategory()) {\n      case STRUCT:\n        return visitRecord(iType != null ? iType.asStructType() : null, schema, visitor);\n\n      case UNION:\n        throw new UnsupportedOperationException(\"Cannot handle \" + schema);\n\n      case LIST:\n        Types.ListType list = iType != null ? iType.asListType() : null;\n        return visitor.list(\n            list, schema,\n            visit(list.elementType(), schema.getChildren().get(0), visitor));\n\n      case MAP:\n        Types.MapType map = iType != null ? iType.asMapType() : null;\n        return visitor.map(\n            map, schema,\n            visit(map != null ? map.keyType() : null, schema.getChildren().get(0), visitor),\n            visit(map != null ? map.valueType() : null, schema.getChildren().get(1), visitor));\n\n      default:\n        return visitor.primitive(iType != null ? iType.asPrimitiveType() : null, schema);\n    }\n  }\n","realPath":"orc/src/main/java/org/apache/iceberg/orc/OrcSchemaWithTypeVisitor.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"},{"authorDate":"2019-11-09 09:25:36","commitOrder":2,"curCode":"  public static <T> T visit(Type iType, Schema schema, AvroSchemaWithTypeVisitor<T> visitor) {\n    switch (schema.getType()) {\n      case RECORD:\n        return visitRecord(iType != null ? iType.asStructType() : null, schema, visitor);\n\n      case UNION:\n        return visitUnion(iType, schema, visitor);\n\n      case ARRAY:\n        return visitArray(iType, schema, visitor);\n\n      case MAP:\n        Types.MapType map = iType != null ? iType.asMapType() : null;\n        return visitor.map(map, schema,\n            visit(map != null ? map.valueType() : null, schema.getValueType(), visitor));\n\n      default:\n        return visitor.primitive(iType != null ? iType.asPrimitiveType() : null, schema);\n    }\n  }\n","date":"2019-11-09 09:25:36","endLine":54,"groupId":"4391","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visit","params":"(TypeiType@Schemaschema@AvroSchemaWithTypeVisitor<T>visitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d6/e078a6838b386d9aeb3d32e0b695ab8b1c7cf4.src","preCode":"  public static <T> T visit(Type iType, Schema schema, AvroSchemaWithTypeVisitor<T> visitor) {\n    switch (schema.getType()) {\n      case RECORD:\n        return visitRecord(iType != null ? iType.asStructType() : null, schema, visitor);\n\n      case UNION:\n        return visitUnion(iType, schema, visitor);\n\n      case ARRAY:\n        return visitArray(iType, schema, visitor);\n\n      case MAP:\n        Types.MapType map = iType != null ? iType.asMapType() : null;\n        return visitor.map(map, schema,\n            visit(map != null ? map.valueType() : null, schema.getValueType(), visitor));\n\n      default:\n        return visitor.primitive(iType != null ? iType.asPrimitiveType() : null, schema);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/avro/AvroSchemaWithTypeVisitor.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"NB"}],"commitId":"17caf95e95c86c5ef290c496f7e96d0d06635924","commitMessage":"@@@ORC: Supported nested identity partition data (#989)\n\n","date":"2020-05-23 02:41:45","modifiedFileCount":"9","status":"M","submitter":"Ratandeep Ratti"},{"authorTime":"2019-11-09 09:25:36","codes":[{"authorDate":"2020-07-03 03:15:40","commitOrder":3,"curCode":"  public static <T> T visit(Type iType, TypeDescription schema, OrcSchemaWithTypeVisitor<T> visitor) {\n    switch (schema.getCategory()) {\n      case STRUCT:\n        return visitRecord(iType != null ? iType.asStructType() : null, schema, visitor);\n\n      case UNION:\n        throw new UnsupportedOperationException(\"Cannot handle \" + schema);\n\n      case LIST:\n        Types.ListType list = iType != null ? iType.asListType() : null;\n        return visitor.list(\n            list, schema,\n            visit(list != null ? list.elementType() : null, schema.getChildren().get(0), visitor));\n\n      case MAP:\n        Types.MapType map = iType != null ? iType.asMapType() : null;\n        return visitor.map(\n            map, schema,\n            visit(map != null ? map.keyType() : null, schema.getChildren().get(0), visitor),\n            visit(map != null ? map.valueType() : null, schema.getChildren().get(1), visitor));\n\n      default:\n        return visitor.primitive(iType != null ? iType.asPrimitiveType() : null, schema);\n    }\n  }\n","date":"2020-07-03 03:15:40","endLine":59,"groupId":"10945","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"visit","params":"(TypeiType@TypeDescriptionschema@OrcSchemaWithTypeVisitor<T>visitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/53/b0c9f2fdeb994f449d316f43b83fdbca96f709.src","preCode":"  public static <T> T visit(Type iType, TypeDescription schema, OrcSchemaWithTypeVisitor<T> visitor) {\n    switch (schema.getCategory()) {\n      case STRUCT:\n        return visitRecord(iType != null ? iType.asStructType() : null, schema, visitor);\n\n      case UNION:\n        throw new UnsupportedOperationException(\"Cannot handle \" + schema);\n\n      case LIST:\n        Types.ListType list = iType != null ? iType.asListType() : null;\n        return visitor.list(\n            list, schema,\n            visit(list.elementType(), schema.getChildren().get(0), visitor));\n\n      case MAP:\n        Types.MapType map = iType != null ? iType.asMapType() : null;\n        return visitor.map(\n            map, schema,\n            visit(map != null ? map.keyType() : null, schema.getChildren().get(0), visitor),\n            visit(map != null ? map.valueType() : null, schema.getChildren().get(1), visitor));\n\n      default:\n        return visitor.primitive(iType != null ? iType.asPrimitiveType() : null, schema);\n    }\n  }\n","realPath":"orc/src/main/java/org/apache/iceberg/orc/OrcSchemaWithTypeVisitor.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2019-11-09 09:25:36","commitOrder":3,"curCode":"  public static <T> T visit(Type iType, Schema schema, AvroSchemaWithTypeVisitor<T> visitor) {\n    switch (schema.getType()) {\n      case RECORD:\n        return visitRecord(iType != null ? iType.asStructType() : null, schema, visitor);\n\n      case UNION:\n        return visitUnion(iType, schema, visitor);\n\n      case ARRAY:\n        return visitArray(iType, schema, visitor);\n\n      case MAP:\n        Types.MapType map = iType != null ? iType.asMapType() : null;\n        return visitor.map(map, schema,\n            visit(map != null ? map.valueType() : null, schema.getValueType(), visitor));\n\n      default:\n        return visitor.primitive(iType != null ? iType.asPrimitiveType() : null, schema);\n    }\n  }\n","date":"2019-11-09 09:25:36","endLine":54,"groupId":"10945","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visit","params":"(TypeiType@Schemaschema@AvroSchemaWithTypeVisitor<T>visitor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d6/e078a6838b386d9aeb3d32e0b695ab8b1c7cf4.src","preCode":"  public static <T> T visit(Type iType, Schema schema, AvroSchemaWithTypeVisitor<T> visitor) {\n    switch (schema.getType()) {\n      case RECORD:\n        return visitRecord(iType != null ? iType.asStructType() : null, schema, visitor);\n\n      case UNION:\n        return visitUnion(iType, schema, visitor);\n\n      case ARRAY:\n        return visitArray(iType, schema, visitor);\n\n      case MAP:\n        Types.MapType map = iType != null ? iType.asMapType() : null;\n        return visitor.map(map, schema,\n            visit(map != null ? map.valueType() : null, schema.getValueType(), visitor));\n\n      default:\n        return visitor.primitive(iType != null ? iType.asPrimitiveType() : null, schema);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/iceberg/avro/AvroSchemaWithTypeVisitor.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"053bea6eaa705737aba9ef8961eefcaf509e107f","commitMessage":"@@@ORC: Omit columns without field ids in schema conversion (#1140)\n\n","date":"2020-07-03 03:15:40","modifiedFileCount":"3","status":"M","submitter":"Edgar Rodriguez"}]
