[{"authorTime":"2020-06-06 00:17:36","codes":[{"authorDate":"2020-06-06 00:17:36","commitOrder":1,"curCode":"  public void testAllDataFilesTableHonorsIgnoreResiduals() throws IOException {\n    table.newFastAppend()\n        .appendFile(FILE_A)\n        .appendFile(FILE_B)\n        .commit();\n\n    Table allDataFilesTable = new AllDataFilesTable(table.ops(), table);\n\n    TableScan scan1 = allDataFilesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5));\n    validateTaskScanResiduals(scan1, false);\n\n    TableScan scan2 = allDataFilesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5))\n        .ignoreResiduals();\n    validateTaskScanResiduals(scan2, true);\n  }\n","date":"2020-06-06 00:17:36","endLine":121,"groupId":"4780","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAllDataFilesTableHonorsIgnoreResiduals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/59/fca14e4c0bb05889fed5bb4c5b0c934f8dd8b3.src","preCode":"  public void testAllDataFilesTableHonorsIgnoreResiduals() throws IOException {\n    table.newFastAppend()\n        .appendFile(FILE_A)\n        .appendFile(FILE_B)\n        .commit();\n\n    Table allDataFilesTable = new AllDataFilesTable(table.ops(), table);\n\n    TableScan scan1 = allDataFilesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5));\n    validateTaskScanResiduals(scan1, false);\n\n    TableScan scan2 = allDataFilesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5))\n        .ignoreResiduals();\n    validateTaskScanResiduals(scan2, true);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetadataTableScans.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"},{"authorDate":"2020-06-06 00:17:36","commitOrder":1,"curCode":"  public void testAllEntriesTableHonorsIgnoreResiduals() throws IOException {\n    table.newFastAppend()\n        .appendFile(FILE_A)\n        .appendFile(FILE_B)\n        .commit();\n\n    Table allEntriesTable = new AllEntriesTable(table.ops(), table);\n\n    TableScan scan1 = allEntriesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5));\n    validateTaskScanResiduals(scan1, false);\n\n    TableScan scan2 = allEntriesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5))\n        .ignoreResiduals();\n    validateTaskScanResiduals(scan2, true);\n  }\n","date":"2020-06-06 00:17:36","endLine":140,"groupId":"4780","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAllEntriesTableHonorsIgnoreResiduals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/59/fca14e4c0bb05889fed5bb4c5b0c934f8dd8b3.src","preCode":"  public void testAllEntriesTableHonorsIgnoreResiduals() throws IOException {\n    table.newFastAppend()\n        .appendFile(FILE_A)\n        .appendFile(FILE_B)\n        .commit();\n\n    Table allEntriesTable = new AllEntriesTable(table.ops(), table);\n\n    TableScan scan1 = allEntriesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5));\n    validateTaskScanResiduals(scan1, false);\n\n    TableScan scan2 = allEntriesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5))\n        .ignoreResiduals();\n    validateTaskScanResiduals(scan2, true);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetadataTableScans.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"c299b45bb6ec9a0f2f18451a16136bde9110b5b0","commitMessage":"@@@Add ignoreResiduals option to TableScan (#1094)\n\n","date":"2020-06-06 00:17:36","modifiedFileCount":"15","status":"B","submitter":"Anton Okolnychyi"},{"authorTime":"2020-09-09 04:36:53","codes":[{"authorDate":"2020-09-09 04:36:53","commitOrder":2,"curCode":"  public void testAllDataFilesTableHonorsIgnoreResiduals() throws IOException {\n    table.newFastAppend()\n        .appendFile(FILE_A)\n        .appendFile(FILE_B)\n        .commit();\n\n    Table allDataFilesTable = new AllDataFilesTable(table.ops(), table);\n\n    TableScan scan1 = allDataFilesTable.newScan()\n        .filter(Expressions.equal(\"record_count\", 1));\n    validateTaskScanResiduals(scan1, false);\n\n    TableScan scan2 = allDataFilesTable.newScan()\n        .filter(Expressions.equal(\"record_count\", 1))\n        .ignoreResiduals();\n    validateTaskScanResiduals(scan2, true);\n  }\n","date":"2020-09-09 04:36:53","endLine":125,"groupId":"101761","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAllDataFilesTableHonorsIgnoreResiduals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/71/24220c1be951fd2abdfb478550b765744cf59d.src","preCode":"  public void testAllDataFilesTableHonorsIgnoreResiduals() throws IOException {\n    table.newFastAppend()\n        .appendFile(FILE_A)\n        .appendFile(FILE_B)\n        .commit();\n\n    Table allDataFilesTable = new AllDataFilesTable(table.ops(), table);\n\n    TableScan scan1 = allDataFilesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5));\n    validateTaskScanResiduals(scan1, false);\n\n    TableScan scan2 = allDataFilesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5))\n        .ignoreResiduals();\n    validateTaskScanResiduals(scan2, true);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetadataTableScans.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2020-09-09 04:36:53","commitOrder":2,"curCode":"  public void testAllEntriesTableHonorsIgnoreResiduals() throws IOException {\n    table.newFastAppend()\n        .appendFile(FILE_A)\n        .appendFile(FILE_B)\n        .commit();\n\n    Table allEntriesTable = new AllEntriesTable(table.ops(), table);\n\n    TableScan scan1 = allEntriesTable.newScan()\n        .filter(Expressions.equal(\"snapshot_id\", 1L));\n    validateTaskScanResiduals(scan1, false);\n\n    TableScan scan2 = allEntriesTable.newScan()\n        .filter(Expressions.equal(\"snapshot_id\", 1L))\n        .ignoreResiduals();\n    validateTaskScanResiduals(scan2, true);\n  }\n","date":"2020-09-09 04:36:53","endLine":144,"groupId":"101761","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAllEntriesTableHonorsIgnoreResiduals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/71/24220c1be951fd2abdfb478550b765744cf59d.src","preCode":"  public void testAllEntriesTableHonorsIgnoreResiduals() throws IOException {\n    table.newFastAppend()\n        .appendFile(FILE_A)\n        .appendFile(FILE_B)\n        .commit();\n\n    Table allEntriesTable = new AllEntriesTable(table.ops(), table);\n\n    TableScan scan1 = allEntriesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5));\n    validateTaskScanResiduals(scan1, false);\n\n    TableScan scan2 = allEntriesTable.newScan()\n        .filter(Expressions.equal(\"id\", 5))\n        .ignoreResiduals();\n    validateTaskScanResiduals(scan2, true);\n  }\n","realPath":"core/src/test/java/org/apache/iceberg/TestMetadataTableScans.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"67251c028e0fd2e687f1ec847badec55a4e5a34c","commitMessage":"@@@Core: Fix TableScan project and select handling (#1353)\n\n","date":"2020-09-09 04:36:53","modifiedFileCount":"4","status":"M","submitter":"Jingsong Lee"}]
