[{"authorTime":"2019-03-21 07:25:05","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: \" + union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: \" + union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","date":"2019-03-21 07:25:05","endLine":89,"groupId":"181","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"union","params":"(Schemaunion@List<ValueWriter<?>>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/07/f1d737cb989f73719a65ab50eec01483a52e02.src","preCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: \" + union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: \" + union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","realPath":"spark/src/main/java/org/apache/iceberg/spark/data/SparkAvroWriter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"},{"authorDate":"2019-03-21 07:25:05","commitOrder":1,"curCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: \" + union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: \" + union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","date":"2019-03-21 07:25:05","endLine":71,"groupId":"181","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"union","params":"(Schemaunion@List<ValueWriter<?>>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c9/9220dbeac717c5c810d9b4e1d3e4131d46efd7.src","preCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: \" + union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: \" + union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/avro/GenericAvroWriter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"c20927801a369104e5ea510470e1cf7c8e28b808","commitMessage":"@@@Rename packages to org.apache.iceberg (#138)\n\n* Move all packages by directory (but don't change references)\n* Rename all references from com.netflix.iceberg to org.apache.iceberg\n* Reorganize all imports due to new package name.\n  Previous commit only did a string find-replace.  which made all the imports out of order. Use an IDE to auto-sort all imports.\n\n","date":"2019-03-21 07:25:05","modifiedFileCount":"0","status":"B","submitter":"mccheah"},{"authorTime":"2019-05-08 07:47:30","codes":[{"authorDate":"2019-03-21 07:25:05","commitOrder":2,"curCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: \" + union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: \" + union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","date":"2019-03-21 07:25:05","endLine":89,"groupId":"181","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"union","params":"(Schemaunion@List<ValueWriter<?>>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/07/f1d737cb989f73719a65ab50eec01483a52e02.src","preCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: \" + union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: \" + union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","realPath":"spark/src/main/java/org/apache/iceberg/spark/data/SparkAvroWriter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"},{"authorDate":"2019-05-08 07:47:30","commitOrder":2,"curCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: %s\", union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: %s\", union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","date":"2019-05-08 07:47:30","endLine":69,"groupId":"2920","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"union","params":"(Schemaunion@List<ValueWriter<?>>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/dd/97f2ee56d3f631f1ae569d964f1be3196d46f0.src","preCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: \" + union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: \" + union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/avro/GenericAvroWriter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"5d781f19ad0bfdba2523c8483d51bf3cf31c7d81","commitMessage":"@@@Apply baseline linting to iceberg-core (#153)\n\n","date":"2019-05-08 07:47:30","modifiedFileCount":"88","status":"M","submitter":"mccheah"},{"authorTime":"2019-05-08 07:47:30","codes":[{"authorDate":"2019-06-24 23:57:49","commitOrder":3,"curCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: %s\", union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: %s\", union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","date":"2019-06-24 23:57:49","endLine":89,"groupId":"2920","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"union","params":"(Schemaunion@List<ValueWriter<?>>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/a2/4c205fb7ac194f4ee58f5384837b74857c1c3c.src","preCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: \" + union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: \" + union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","realPath":"spark/src/main/java/org/apache/iceberg/spark/data/SparkAvroWriter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2019-05-08 07:47:30","commitOrder":3,"curCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: %s\", union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: %s\", union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","date":"2019-05-08 07:47:30","endLine":69,"groupId":"2920","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"union","params":"(Schemaunion@List<ValueWriter<?>>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/dd/97f2ee56d3f631f1ae569d964f1be3196d46f0.src","preCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: %s\", union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: %s\", union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/avro/GenericAvroWriter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"}],"commitId":"5f6fc3be3400cfae858a938213ba8516acc983a5","commitMessage":"@@@[Baseline] Apply Baseline plugin to iceberg-spark (#226)\n\n","date":"2019-06-24 23:57:49","modifiedFileCount":"36","status":"M","submitter":"Anton Okolnychyi"},{"authorTime":"2019-05-08 07:47:30","codes":[{"authorDate":"2020-05-07 23:55:01","commitOrder":4,"curCode":"    public ValueWriter<?> union(DataType type, Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: %s\", union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: %s\", union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","date":"2020-05-07 23:55:01","endLine":81,"groupId":"102086","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"union","params":"(DataTypetype@Schemaunion@List<ValueWriter<?>>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/bc/457be4b852d2e852e114c0a62b2c987c408358.src","preCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: %s\", union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: %s\", union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","realPath":"spark/src/main/java/org/apache/iceberg/spark/data/SparkAvroWriter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2019-05-08 07:47:30","commitOrder":4,"curCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: %s\", union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: %s\", union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","date":"2019-05-08 07:47:30","endLine":69,"groupId":"102086","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"union","params":"(Schemaunion@List<ValueWriter<?>>options)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/dd/97f2ee56d3f631f1ae569d964f1be3196d46f0.src","preCode":"    public ValueWriter<?> union(Schema union, List<ValueWriter<?>> options) {\n      Preconditions.checkArgument(options.contains(ValueWriters.nulls()),\n          \"Cannot create writer for non-option union: %s\", union);\n      Preconditions.checkArgument(options.size() == 2,\n          \"Cannot create writer for non-option union: %s\", union);\n      if (union.getTypes().get(0).getType() == Schema.Type.NULL) {\n        return ValueWriters.option(0, options.get(1));\n      } else {\n        return ValueWriters.option(1, options.get(0));\n      }\n    }\n","realPath":"core/src/main/java/org/apache/iceberg/avro/GenericAvroWriter.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"}],"commitId":"699e68a919c708ccbb43179928e3e7fb4fec58f6","commitMessage":"@@@Spark: Pass correct types to get data from InternalRow (#999)\n\n","date":"2020-05-07 23:55:01","modifiedFileCount":"14","status":"M","submitter":"Ryan Blue"}]
