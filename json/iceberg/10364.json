[{"authorTime":"2021-03-12 13:53:17","codes":[{"authorDate":"2021-03-12 13:53:17","commitOrder":4,"curCode":"  public static void startMetastoreAndSpark() {\n    SparkTestBase.metastore = new TestHiveMetastore();\n    metastore.start();\n    SparkTestBase.hiveConf = metastore.hiveConf();\n\n    SparkTestBase.spark = SparkSession.builder()\n        .master(\"local[2]\")\n        .config(\"spark.testing\", \"true\")\n        .config(SQLConf.PARTITION_OVERWRITE_MODE().key(), \"dynamic\")\n        .config(\"spark.sql.extensions\", IcebergSparkSessionExtensions.class.getName())\n        .config(\"spark.hadoop.\" + METASTOREURIS.varname, hiveConf.get(METASTOREURIS.varname))\n        .config(\"spark.sql.shuffle.partitions\", \"4\")\n        .enableHiveSupport()\n        .getOrCreate();\n\n    SparkTestBase.catalog = (HiveCatalog)\n        CatalogUtil.loadCatalog(HiveCatalog.class.getName(), \"hive\", ImmutableMap.of(), hiveConf);\n  }\n","date":"2021-03-12 13:53:17","endLine":59,"groupId":"3520","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startMetastoreAndSpark","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/d5/6c1dd60c08b4afc09d89ac194561b891755289.src","preCode":"  public static void startMetastoreAndSpark() {\n    SparkTestBase.metastore = new TestHiveMetastore();\n    metastore.start();\n    SparkTestBase.hiveConf = metastore.hiveConf();\n\n    SparkTestBase.spark = SparkSession.builder()\n        .master(\"local[2]\")\n        .config(\"spark.testing\", \"true\")\n        .config(SQLConf.PARTITION_OVERWRITE_MODE().key(), \"dynamic\")\n        .config(\"spark.sql.extensions\", IcebergSparkSessionExtensions.class.getName())\n        .config(\"spark.hadoop.\" + METASTOREURIS.varname, hiveConf.get(METASTOREURIS.varname))\n        .config(\"spark.sql.shuffle.partitions\", \"4\")\n        .enableHiveSupport()\n        .getOrCreate();\n\n    SparkTestBase.catalog = (HiveCatalog)\n        CatalogUtil.loadCatalog(HiveCatalog.class.getName(), \"hive\", ImmutableMap.of(), hiveConf);\n  }\n","realPath":"spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/SparkExtensionsTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"MB"},{"authorDate":"2021-03-12 13:53:17","commitOrder":4,"curCode":"  public static void startMetastore() {\n    metastore = new TestHiveMetastore();\n    metastore.start();\n    hiveConf = metastore.hiveConf();\n    catalog = (HiveCatalog)\n        CatalogUtil.loadCatalog(HiveCatalog.class.getName(), \"hive\", ImmutableMap.of(), hiveConf);\n  }\n","date":"2021-03-12 13:53:17","endLine":80,"groupId":"742","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"startMetastore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c3/7c3b85ae07c6656b36b3a6b1af940589336f82.src","preCode":"  public static void startMetastore() {\n    metastore = new TestHiveMetastore();\n    metastore.start();\n    hiveConf = metastore.hiveConf();\n    catalog = (HiveCatalog)\n        CatalogUtil.loadCatalog(HiveCatalog.class.getName(), \"hive\", ImmutableMap.of(), hiveConf);\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/source/TestFlinkReaderDeletesBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"}],"commitId":"c8b74c19b831ecbbf33f78094b5c8098c46eddec","commitMessage":"@@@Hive: Refactor HiveCatalog and HiveClientPool constructors (#2203)\n\n","date":"2021-03-12 13:53:17","modifiedFileCount":"11","status":"M","submitter":"Ryan Murray"},{"authorTime":"2021-03-12 13:53:17","codes":[{"authorDate":"2021-09-10 06:01:28","commitOrder":5,"curCode":"  public static void startMetastoreAndSpark() {\n    SparkTestBase.metastore = new TestHiveMetastore();\n    metastore.start();\n    SparkTestBase.hiveConf = metastore.hiveConf();\n\n    SparkTestBase.spark = SparkSession.builder()\n        .master(\"local[2]\")\n        .config(\"spark.testing\", \"true\")\n        .config(SQLConf.PARTITION_OVERWRITE_MODE().key(), \"dynamic\")\n        .config(\"spark.sql.extensions\", IcebergSparkSessionExtensions.class.getName())\n        .config(\"spark.hadoop.\" + METASTOREURIS.varname, hiveConf.get(METASTOREURIS.varname))\n        .config(\"spark.sql.shuffle.partitions\", \"4\")\n        .config(\"spark.sql.hive.metastorePartitionPruningFallbackOnException\", \"true\")\n        .enableHiveSupport()\n        .getOrCreate();\n\n    SparkTestBase.catalog = (HiveCatalog)\n        CatalogUtil.loadCatalog(HiveCatalog.class.getName(), \"hive\", ImmutableMap.of(), hiveConf);\n  }\n","date":"2021-09-10 06:01:28","endLine":60,"groupId":"10364","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"startMetastoreAndSpark","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/36/ca608ccd3bc4a6e8eaf377c9125348d9d71770.src","preCode":"  public static void startMetastoreAndSpark() {\n    SparkTestBase.metastore = new TestHiveMetastore();\n    metastore.start();\n    SparkTestBase.hiveConf = metastore.hiveConf();\n\n    SparkTestBase.spark = SparkSession.builder()\n        .master(\"local[2]\")\n        .config(\"spark.testing\", \"true\")\n        .config(SQLConf.PARTITION_OVERWRITE_MODE().key(), \"dynamic\")\n        .config(\"spark.sql.extensions\", IcebergSparkSessionExtensions.class.getName())\n        .config(\"spark.hadoop.\" + METASTOREURIS.varname, hiveConf.get(METASTOREURIS.varname))\n        .config(\"spark.sql.shuffle.partitions\", \"4\")\n        .enableHiveSupport()\n        .getOrCreate();\n\n    SparkTestBase.catalog = (HiveCatalog)\n        CatalogUtil.loadCatalog(HiveCatalog.class.getName(), \"hive\", ImmutableMap.of(), hiveConf);\n  }\n","realPath":"spark3-extensions/src/test/java/org/apache/iceberg/spark/extensions/SparkExtensionsTestBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2021-03-12 13:53:17","commitOrder":5,"curCode":"  public static void startMetastore() {\n    metastore = new TestHiveMetastore();\n    metastore.start();\n    hiveConf = metastore.hiveConf();\n    catalog = (HiveCatalog)\n        CatalogUtil.loadCatalog(HiveCatalog.class.getName(), \"hive\", ImmutableMap.of(), hiveConf);\n  }\n","date":"2021-03-12 13:53:17","endLine":80,"groupId":"10364","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"startMetastore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-iceberg-10-0.7/blobInfo/CC_OUT/blobs/c3/7c3b85ae07c6656b36b3a6b1af940589336f82.src","preCode":"  public static void startMetastore() {\n    metastore = new TestHiveMetastore();\n    metastore.start();\n    hiveConf = metastore.hiveConf();\n    catalog = (HiveCatalog)\n        CatalogUtil.loadCatalog(HiveCatalog.class.getName(), \"hive\", ImmutableMap.of(), hiveConf);\n  }\n","realPath":"flink/src/test/java/org/apache/iceberg/flink/source/TestFlinkReaderDeletesBase.java","repoName":"iceberg","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"N"}],"commitId":"af4bde667ff2ed9c2a32a313ed00f51de580dfc1","commitMessage":"@@@Spark: Add config needed in tests after SPARK-36128 (#3090)\n\n","date":"2021-09-10 06:01:28","modifiedFileCount":"1","status":"M","submitter":"Kyle Bendickson"}]
